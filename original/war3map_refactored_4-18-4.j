// this script was compiled with wurst 1.8.1.0-jenkins-Wurst-1339
globals
    integer array w
    integer array u
    real array r
    real array s
    real array t
    real array i
    real S = 0.
    real c = 0.
    integer o = 0
    real O = 0.
    real l = 0.
    integer b = 0
    integer y = 0
    integer p = 0
    integer e = 0
    integer q = 0
    integer a = 0
    integer n = 0
    integer d = 0
    integer f = 0
    integer R = 0
    integer T = 0
    integer Y = 0
    integer G = 0
    integer g = 0
    integer h = 0
    integer F = 0
    integer k = 0
    integer j = 0
    integer x = 0
    integer v = 0
    integer m = 0
    integer Q = 0
    integer W = 0
    integer E = 0
    integer Z = 0
    integer U = 0
    integer I = 0
    integer P = 0
    integer A = 0
    integer D = 0
    integer H = 0
    integer J = 0
    integer K = 0
    integer L = 0
    integer X = 0
    integer C = 0
    boolean array V
    boolean array B
    boolean array N
    boolean array M
    boolean array ww
    boolean array uw
    boolean array rw
    boolean array sw
    boolean array tw
    integer array iw
    integer array Sw
    trigger cw = null
    trigger ow = null
    trigger Ow = null
    integer array lw
    boolean bw = false
    integer yw = 0
    integer pw = 0
    player ew = null
    player qw = null
    string aw = null
    string nw = null
    real dw = 0.
    real fw = 0.
    real Rw = 0.
    real Tw = 0.
    real Yw = 0.
    real Gw = 0.
    real gw = 0.
    real hw = 0.
    real Fw = 0.
    integer kw = 0
    integer jw = 0
    integer xw = 0
    integer vw = 0
    real mw = 0.
    real Qw = 0.
    gamecache Ww = null
    string Ew = null
    string Zw = null
    string Uw = null
    string Iw = null
    string Pw = null
    string Aw = null
    string Dw = null
    string Hw = null
    string Jw = null
    string Kw = null
    string Lw = null
    string Xw = null
    string Cw = null
    string Vw = null
    boolean Bw = false
    boolean Nw = false
    boolean Mw = false
    boolean wu = false
    boolean uu = false
    boolean ru = false
    boolean su = false
    boolean tu = false
    boolean iu = false
    boolean Su = false
    boolean cu = false
    boolean ou = false
    boolean Ou = false
    boolean lu = false
    boolean bu = false
    boolean yu = false
    boolean pu = false
    boolean eu = false
    boolean qu = false
    boolean au = false
    boolean nu = false
    boolean du = false
    boolean fu = false
    boolean Ru = false
    trigger Tu = null
    trigger Yu = null
    trigger Gu = null
    unit gu = null
    boolean array hu
    unit array Fu
    integer ku = 0
    integer ju = 0
    integer xu = 0
    integer vu = 0
    integer mu = 0
    unit Qu = null
    group Wu = null
    string Eu = null
    integer array Zu
    integer Uu = 0
    integer array Iu
    boolean Pu = false
    integer array Au
    integer array Du
    integer array Hu
    integer array Ju
    integer Ku = 0
    string Lu = null
    boolean Xu = false
    boolean Cu = false
    integer Vu = 0
    integer Bu = 0
    force Nu = null
    integer Mu = 0
    boolean wr = false
    integer array ur
    quest array rr
    integer sr = 0
    unit tr = null
    integer ir = 0
    real array Sr
    real array cr
    integer lr = 0
    location array br
    location array yr
    integer array pr
    item array er
    quest array qr
    integer array ar
    force nr = null
    quest array dr
    force fr = null
    integer array Rr
    force Tr = null
    force Yr = null
    force Gr = null
    integer array gr
    integer array hr
    force Fr = null
    force kr = null
    location jr = null
    unit array xr
    unit array vr
    unit array mr
    group array Qr
    location Wr = null
    effect array Er
    location Zr = null
    effect array Ur
    effect array Ir
    unit array Pr
    texttag array Ar
    group array Dr
    real array Hr
    real array Jr
    force Kr = null
    quest array Lr
    force Xr = null
    force Cr = null
    force Vr = null
    location Br = null
    force Nr = null
    force Mr = null
    force ws = null
    force us = null
    location rs = null
    location ss = null
    unit ts = null
    quest array is
    integer array Ss
    quest array cs
    integer array os
    quest array Os
    force ls = null
    quest array bs
    force ys = null
    location ps = null
    location es = null
    integer qs = 0
    force as = null
    force ns = null
    integer array ds
    force fs = null
    force Rs = null
    force Ts = null
    force Ys = null
    force Gs = null
    force gs = null
    force hs = null
    force Fs = null
    force ks = null
    force js = null
    force xs = null
    integer array vs
    integer array ms
    integer array Qs
    force Ws = null
    force Es = null
    force Zs = null
    force Us = null
    unit array Is
    unit array Ps
    effect array As
    effect array Ds
    location array Hs
    unit array Js
    unit array Ks
    effect array Ls
    location array Xs
    location Cs = null
    location array Vs
    location Bs = null
    force Ns = null
    location Ms = null
    location wt = null
    location ut = null
    force rt = null
    quest array st
    location tt = null
    quest array St
    integer ct = 0
    force ot = null
    force Ot = null
    force lt = null
    force array bt
    force yt = null
    force pt = null
    force et = null
    location qt = null
    location at = null
    timer nt = null
    unit array dt
    quest array ft
    force Rt = null
    force Tt = null
    force Yt = null
    force Gt = null
    force gt = null
    timerdialog ht = null
    force Ft = null
    integer array kt
    force jt = null
    location xt = null
    player array vt
    force mt = null
    unit array Qt
    unit array Wt
    unit array Et
    integer array Zt
    unit array Ut
    force It = null
    group array Pt
    force At = null
    integer Dt = 0
    player array Ht
    integer array Jt
    force Kt = null
    force Lt = null
    force Xt = null
    group Ct = null
    force Vt = null
    unit array Bt
    unit array Nt
    string array Mt
    string array wi
    string array ui
    real ri = 0.
    integer array si
    force ti = null
    force ii = null
    integer array Si
    quest array ci
    quest array oi
    integer array Oi
    integer array li
    location bi = null
    integer yi = 0
    integer pi = 0
    unit ei = null
    integer qi = 0
    timerdialog array ai
    integer ni = 0
    timer di = null
    timerdialog fi = null
    integer Ri = 0
    integer Ti = 0
    location Yi = null
    force Gi = null
    unit gi = null
    integer hi = 0
    location Fi = null
    real ki = 0.
    real ji = 0.
    string array xi
    boolean vi = false
    group mi = null
    integer Qi = 0
    integer array Wi
    integer Ei = 0
    unit array Zi
    integer array Ui
    real array Ii
    real array Pi
    real array Ai
    real array Di
    real array Hi
    string array Ji
    string array Ki
    boolean array Li
    integer array Xi
    integer array Ci
    location array Vi
    location array Bi
    integer Ni = 0
    integer Mi = 0
    integer array wS
    force uS = null
    force rS = null
    integer array sS
    dialog tS = null
    button array iS
    location SS = null
    group cS = null
    integer array oS
    group OS = null
    group lS = null
    group bS = null
    group yS = null
    unit array pS
    unit array eS
    location array qS
    location array aS
    location array nS
    lightning array dS
    texttag array fS
    unit array RS
    effect array TS
    group array YS
    location array GS
    unit array gS
    group array hS
    integer array FS
    unit array kS
    force jS = null
    quest array xS
    integer array vS
    integer mS = 0
    quest array QS
    quest array WS
    quest array ES
    quest array ZS
    force US = null
    force array IS
    force array PS
    integer array AS
    integer array DS
    integer array HS
    quest array JS
    integer array KS
    quest array LS
    integer XS = 0
    integer CS = 0
    integer array VS
    integer array BS
    quest array NS
    quest array MS
    quest array wc
    integer array uc
    quest array rc
    integer array sc
    real tc = 0.
    force ic = null
    force Sc = null
    real array cc
    real array oc
    real array Oc
    real array lc
    real array bc
    real array yc
    force array pc
    force array ec
    integer array qc
    quest array ac
    force array nc
    force array dc
    group array fc
    force array Rc
    group Tc = null
    location Yc = null
    location Gc = null
    group array gc
    location array hc
    unit array Fc
    group kc = null
    hashtable jc = null
    integer xc = 0
    group vc = null
    location mc = null
    location Qc = null
    force Wc = null
    group Ec = null
    group Zc = null
    location Uc = null
    location array Ic
    group array Pc
    fogmodifier array Ac
    boolean Dc = false
    location array Hc
    integer Jc = 0
    group Kc = null
    group Lc = null
    location Xc = null
    integer Cc = 0
    group Vc = null
    integer array Bc
    integer Nc = 0
    unit array Mc
    location array wo
    location uo = null
    location array ro
    location so = null
    location io = null
    real So = 0.
    real co = 0.
    location oo = null
    group Oo = null
    group lo = null
    integer array bo
    group yo = null
    integer array po
    real array eo
    location array qo
    integer array ao
    location array no
    force do = null
    group fo = null
    location Ro = null
    real To = 0.
    location Yo = null
    location array Go
    integer go = 0
    integer ho = 0
    rect array Fo
    integer ko = 0
    rect array jo
    integer xo = 0
    location vo = null
    group mo = null
    integer Qo = 0
    weathereffect array Wo
    integer array Eo
    integer array Zo
    force array Uo
    integer Io = 0
    integer array Po
    quest array Ao
    timer Do = null
    timer Ho = null
    timer Jo = null
    timer Ko = null
    timer Lo = null
    timer Xo = null
    timer Co = null
    timer Vo = null
    timer Bo = null
    timer No = null
    timerdialog array Mo
    force wO = null
    player uO = null
    force rO = null
    force sO = null
    timer array tO
    force iO = null
    integer array SO
    integer array cO
    integer oO = 0
    integer OO = 0
    integer lO = 0
    integer array bO
    unit yO = null
    location pO = null
    group eO = null
    integer qO = 0
    unit aO = null
    unit nO = null
    integer array dO
    unit fO = null
    timer array RO
    group TO = null
    group YO = null
    group GO = null
    group gO = null
    rect hO = null
    rect FO = null
    rect kO = null
    rect jO = null
    rect xO = null
    rect vO = null
    rect mO = null
    rect QO = null
    rect WO = null
    rect EO = null
    rect ZO = null
    rect UO = null
    rect IO = null
    rect PO = null
    rect AO = null
    rect DO = null
    rect HO = null
    rect JO = null
    rect KO = null
    rect LO = null
    rect XO = null
    rect CO = null
    rect VO = null
    rect BO = null
    rect NO = null
    rect MO = null
    rect wl = null
    rect ul = null
    rect rl = null
    rect sl = null
    rect tl = null
    rect il = null
    rect Sl = null
    rect cl = null
    rect ol = null
    rect Ol = null
    rect ll = null
    rect bl = null
    rect yl = null
    rect pl = null
    rect el = null
    rect ql = null
    rect al = null
    rect nl = null
    rect dl = null
    rect fl = null
    rect Rl = null
    rect Tl = null
    rect Yl = null
    rect Gl = null
    rect gl = null
    rect hl = null
    rect Fl = null
    rect kl = null
    rect jl = null
    rect xl = null
    rect vl = null
    rect ml = null
    rect Ql = null
    rect Wl = null
    rect El = null
    rect Zl = null
    rect Ul = null
    rect Il = null
    rect Pl = null
    rect Al = null
    rect Dl = null
    rect Hl = null
    rect Jl = null
    rect Kl = null
    rect Ll = null
    rect Xl = null
    rect Cl = null
    rect Vl = null
    rect Bl = null
    rect Nl = null
    rect Ml = null
    rect wb = null
    rect ub = null
    rect rb = null
    rect sb = null
    rect tb = null
    rect ib = null
    rect Sb = null
    rect cb = null
    rect ob = null
    rect Ob = null
    rect lb = null
    rect bb = null
    rect yb = null
    rect pb = null
    rect eb = null
    rect qb = null
    rect ab = null
    rect nb = null
    rect db = null
    rect fb = null
    rect Rb = null
    rect Tb = null
    rect Yb = null
    rect Gb = null
    rect gb = null
    rect hb = null
    rect Fb = null
    rect kb = null
    rect jb = null
    rect xb = null
    rect vb = null
    rect mb = null
    rect Qb = null
    rect Wb = null
    rect Eb = null
    rect Zb = null
    rect Ub = null
    rect Ib = null
    rect Pb = null
    rect Ab = null
    rect Db = null
    rect Hb = null
    rect Jb = null
    rect Kb = null
    rect Lb = null
    rect Xb = null
    rect Cb = null
    rect Vb = null
    rect Bb = null
    rect Nb = null
    rect Mb = null
    rect wy = null
    rect uy = null
    rect ry = null
    rect sy = null
    rect ty = null
    rect iy = null
    rect Sy = null
    rect cy = null
    rect oy = null
    rect Oy = null
    rect ly = null
    rect by = null
    rect yy = null
    rect py = null
    rect ey = null
    rect qy = null
    rect ay = null
    rect ny = null
    rect dy = null
    rect fy = null
    rect Ry = null
    rect Ty = null
    rect Yy = null
    rect Gy = null
    rect gy = null
    rect hy = null
    rect Fy = null
    rect ky = null
    rect jy = null
    rect xy = null
    rect vy = null
    rect my = null
    rect Qy = null
    rect Wy = null
    rect Ey = null
    rect Zy = null
    rect Uy = null
    rect Iy = null
    rect Py = null
    rect Ay = null
    rect Dy = null
    rect Hy = null
    rect Jy = null
    rect Ky = null
    rect Ly = null
    rect Xy = null
    rect Cy = null
    rect Vy = null
    rect By = null
    rect Ny = null
    rect My = null
    rect wp = null
    rect up = null
    rect rp = null
    rect sp = null
    rect tp = null
    rect ip = null
    rect Sp = null
    rect cp = null
    rect op = null
    rect Op = null
    rect lp = null
    rect bp = null
    rect yp = null
    rect pp = null
    rect ep = null
    rect qp = null
    rect ap = null
    rect np = null
    rect dp = null
    rect fp = null
    rect Rp = null
    rect Tp = null
    rect Yp = null
    rect Gp = null
    rect gp = null
    rect hp = null
    rect Fp = null
    rect kp = null
    rect jp = null
    rect xp = null
    rect vp = null
    rect mp = null
    rect Qp = null
    rect Wp = null
    rect Ep = null
    rect Zp = null
    rect Up = null
    rect Ip = null
    rect Pp = null
    rect Ap = null
    rect Dp = null
    rect Hp = null
    rect Jp = null
    rect Kp = null
    rect Lp = null
    rect Xp = null
    rect Cp = null
    rect Vp = null
    rect Bp = null
    rect Np = null
    rect Mp = null
    rect we = null
    sound ue = null
    sound re = null
    sound se = null
    sound te = null
    sound ie = null
    sound Se = null
    sound ce = null
    sound oe = null
    sound Oe = null
    sound le = null
    sound be = null
    sound ye = null
    sound pe = null
    sound ee = null
    sound qe = null
    sound ae = null
    sound ne = null
    sound de = null
    sound fe = null
    sound Re = null
    sound Te = null
    sound Ye = null
    string Ge = null
    sound ge = null
    sound he = null
    sound Fe = null
    sound ke = null
    string je = null
    sound xe = null
    sound ve = null
    sound me = null
    trigger Qe = null
    trigger We = null
    trigger Ee = null
    trigger Ze = null
    trigger Ue = null
    trigger Ie = null
    trigger Pe = null
    trigger Ae = null
    trigger De = null
    trigger He = null
    trigger Je = null
    trigger Ke = null
    trigger Le = null
    trigger Xe = null
    trigger Ce = null
    trigger Ve = null
    trigger Be = null
    trigger Ne = null
    trigger Me = null
    trigger wq = null
    trigger uq = null
    trigger rq = null
    trigger sq = null
    trigger tq = null
    trigger iq = null
    trigger Sq = null
    trigger cq = null
    trigger oq = null
    trigger Oq = null
    trigger lq = null
    trigger bq = null
    trigger yq = null
    trigger pq = null
    trigger eq = null
    trigger qq = null
    trigger aq = null
    trigger nq = null
    trigger dq = null
    trigger fq = null
    trigger Rq = null
    trigger Tq = null
    trigger Yq = null
    trigger Gq = null
    trigger gq = null
    trigger hq = null
    trigger Fq = null
    trigger kq = null
    trigger jq = null
    trigger xq = null
    trigger vq = null
    trigger mq = null
    trigger Qq = null
    trigger Wq = null
    trigger Eq = null
    trigger Zq = null
    trigger Uq = null
    trigger Iq = null
    trigger Pq = null
    trigger Aq = null
    trigger Dq = null
    trigger Hq = null
    trigger Jq = null
    trigger Kq = null
    trigger Lq = null
    trigger Xq = null
    trigger Cq = null
    trigger Vq = null
    trigger Bq = null
    trigger Nq = null
    trigger Mq = null
    trigger wa = null
    trigger ua = null
    trigger ra = null
    trigger sa = null
    trigger ta = null
    trigger ia = null
    trigger Sa = null
    trigger ca = null
    trigger oa = null
    trigger Oa = null
    trigger la = null
    trigger ba = null
    trigger ya = null
    trigger pa = null
    trigger ea = null
    trigger qa = null
    trigger aa = null
    trigger na = null
    trigger da = null
    trigger fa = null
    trigger Ra = null
    trigger Ta = null
    trigger Ya = null
    trigger Ga = null
    trigger ga = null
    trigger ha = null
    trigger Fa = null
    trigger ka = null
    trigger ja = null
    trigger xa = null
    trigger va = null
    trigger ma = null
    trigger Qa = null
    trigger Wa = null
    trigger Ea = null
    trigger Za = null
    trigger Ua = null
    trigger Ia = null
    trigger Pa = null
    trigger Aa = null
    trigger Da = null
    trigger Ha = null
    trigger Ja = null
    trigger Ka = null
    trigger La = null
    trigger Xa = null
    trigger Ca = null
    trigger Va = null
    trigger Ba = null
    trigger Na = null
    trigger Ma = null
    trigger wn = null
    trigger un = null
    trigger rn = null
    trigger sn = null
    trigger tn = null
    trigger Sn = null
    trigger cn = null
    trigger on = null
    trigger On = null
    trigger ln = null
    trigger bn = null
    trigger yn = null
    trigger pn = null
    trigger en = null
    trigger qn = null
    trigger an = null
    trigger nn = null
    trigger dn = null
    trigger fn = null
    trigger Rn = null
    trigger Tn = null
    trigger Yn = null
    trigger Gn = null
    trigger gn = null
    trigger hn = null
    trigger Fn = null
    trigger kn = null
    trigger jn = null
    trigger xn = null
    trigger vn = null
    trigger mn = null
    trigger Qn = null
    trigger Wn = null
    trigger En = null
    trigger Zn = null
    trigger Un = null
    trigger In = null
    trigger Pn = null
    trigger An = null
    trigger Dn = null
    trigger Hn = null
    trigger Jn = null
    trigger Kn = null
    trigger Ln = null
    trigger Xn = null
    trigger Cn = null
    trigger Vn = null
    trigger Bn = null
    trigger Nn = null
    trigger Mn = null
    trigger wd = null
    trigger ud = null
    trigger rd = null
    trigger sd = null
    trigger td = null
    trigger id = null
    trigger Sd = null
    trigger cd = null
    trigger od = null
    trigger Od = null
    trigger ld = null
    trigger bd = null
    trigger yd = null
    trigger pd = null
    trigger ed = null
    trigger qd = null
    trigger ad = null
    trigger nd = null
    trigger dd = null
    trigger fd = null
    trigger Rd = null
    trigger Td = null
    trigger Yd = null
    trigger Gd = null
    trigger gd = null
    trigger hd = null
    trigger Fd = null
    trigger kd = null
    trigger jd = null
    trigger xd = null
    trigger vd = null
    trigger md = null
    trigger Qd = null
    trigger Wd = null
    trigger Ed = null
    trigger Zd = null
    trigger Ud = null
    trigger Id = null
    trigger Pd = null
    trigger Ad = null
    trigger Dd = null
    trigger Hd = null
    trigger Jd = null
    trigger Kd = null
    trigger Ld = null
    trigger Xd = null
    trigger Cd = null
    trigger Vd = null
    trigger Bd = null
    trigger Nd = null
    trigger Md = null
    trigger wf = null
    trigger uf = null
    trigger rf = null
    trigger sf = null
    trigger tf = null
    trigger Sf = null
    trigger cf = null
    trigger of = null
    trigger Of = null
    trigger lf = null
    trigger bf = null
    trigger yf = null
    trigger pf = null
    trigger ef = null
    trigger qf = null
    trigger af = null
    trigger nf = null
    trigger df = null
    trigger ff = null
    trigger Rf = null
    trigger Tf = null
    trigger Yf = null
    trigger Gf = null
    trigger gf = null
    trigger hf = null
    trigger Ff = null
    trigger kf = null
    trigger jf = null
    trigger xf = null
    trigger vf = null
    trigger mf = null
    trigger Qf = null
    trigger Wf = null
    trigger Ef = null
    trigger Zf = null
    trigger Uf = null
    trigger If = null
    trigger Pf = null
    trigger Af = null
    trigger Df = null
    trigger Hf = null
    trigger Jf = null
    trigger Kf = null
    trigger Lf = null
    trigger Xf = null
    trigger Cf = null
    trigger Vf = null
    trigger Bf = null
    trigger Nf = null
    trigger Mf = null
    trigger wR = null
    trigger uR = null
    trigger rR = null
    trigger sR = null
    trigger tR = null
    trigger iR = null
    trigger SR = null
    trigger cR = null
    trigger oR = null
    trigger OR = null
    trigger lR = null
    trigger bR = null
    trigger yR = null
    trigger pR = null
    trigger eR = null
    trigger qR = null
    trigger aR = null
    trigger nR = null
    trigger dR = null
    trigger fR = null
    trigger RR = null
    trigger TR = null
    trigger YR = null
    trigger GR = null
    timer gR = null
    trigger hR = null
    timer FR = null
    trigger kR = null
    timer jR = null
    timer xR = null
    timer vR = null
    timer mR = null
    trigger QR = null
    trigger WR = null
    trigger ER = null
    trigger ZR = null
    trigger UR = null
    trigger IR = null
    trigger PR = null
    trigger AR = null
    trigger DR = null
    trigger HR = null
    trigger JR = null
    trigger KR = null
    trigger LR = null
    trigger XR = null
    trigger CR = null
    trigger VR = null
    trigger BR = null
    trigger NR = null
    trigger MR = null
    trigger wT = null
    trigger uT = null
    trigger rT = null
    trigger sT = null
    trigger tT = null
    trigger iT = null
    trigger ST = null
    trigger cT = null
    trigger oT = null
    trigger OT = null
    trigger lT = null
    trigger bT = null
    trigger yT = null
    trigger pT = null
    trigger eT = null
    trigger qT = null
    trigger aT = null
    trigger nT = null
    trigger dT = null
    trigger fT = null
    trigger RT = null
    trigger TT = null
    trigger YT = null
    trigger GT = null
    trigger gT = null
    trigger hT = null
    trigger FT = null
    trigger kT = null
    trigger jT = null
    trigger xT = null
    trigger vT = null
    trigger mT = null
    trigger QT = null
    trigger WT = null
    trigger ET = null
    trigger ZT = null
    trigger UT = null
    trigger IT = null
    trigger PT = null
    trigger AT = null
    trigger DT = null
    trigger HT = null
    trigger JT = null
    trigger KT = null
    trigger LT = null
    trigger XT = null
    trigger CT = null
    trigger VT = null
    trigger BT = null
    trigger NT = null
    trigger MT = null
    trigger wY = null
    trigger uY = null
    trigger rY = null
    trigger sY = null
    trigger tY = null
    trigger iY = null
    trigger SY = null
    trigger cY = null
    trigger oY = null
    trigger OY = null
    trigger lY = null
    trigger bY = null
    trigger yY = null
    trigger pY = null
    trigger eY = null
    trigger qY = null
    trigger aY = null
    trigger nY = null
    trigger dY = null
    trigger fY = null
    trigger RY = null
    trigger TY = null
    trigger YY = null
    trigger GY = null
    trigger gY = null
    trigger hY = null
    trigger FY = null
    trigger kY = null
    trigger jY = null
    trigger xY = null
    trigger vY = null
    trigger mY = null
    trigger QY = null
    trigger WY = null
    trigger EY = null
    trigger ZY = null
    trigger UY = null
    trigger IY = null
    trigger PY = null
    trigger AY = null
    trigger DY = null
    trigger HY = null
    trigger JY = null
    trigger KY = null
    trigger LY = null
    trigger XY = null
    unit CY = null
    unit VY = null
    unit BY = null
    unit NY = null
    unit MY = null
    unit wG = null
    unit uG = null
    unit rG = null
    unit sG = null
    unit tG = null
    unit iG = null
    unit SG = null
    unit cG = null
    unit oG = null
    unit OG = null
    unit lG = null
    unit bG = null
    unit yG = null
    unit pG = null
    unit eG = null
    unit qG = null
    unit aG = null
    unit nG = null
    unit dG = null
    unit fG = null
    unit RG = null
    unit TG = null
    unit YG = null
    unit GG = null
    unit gG = null
    destructable hG = null
    destructable FG = null
    destructable kG = null
    destructable jG = null
    destructable xG = null
    timer vG = null
    real mG = 0.
    real QG = 0.
    group WG = null
    force EG = null
    boolexpr ZG = null
    integer UG = 0
    integer IG = 0
    integer PG = 0
    integer AG = 0
    integer DG = 0
    integer HG = 0
    real JG = 0.
    real KG = 0.
    integer LG = 0
    real XG = 0.
    integer CG = 0
    real VG = 0.
    integer BG = 0
    real NG = 0.
    real MG = 0.
    real wg = 0.
    real ug = 0.
    real rg = 0.
    real sg = 0.
    real tg = 0.
    integer ig = 0
    real Sg = 0.
    real cg = 0.
    integer og = 0
    integer Og = 0
    real lg = 0.
    real bg = 0.
    real yg = 0.
    real pg = 0.
    real eg = 0.
    integer qg = 0
    integer ag = 0
    string ng = null
    string dg = null
    real fg = 0.
    real Rg = 0.
    real Tg = 0.
    real Yg = 0.
    integer Gg = 0
    integer gg = 0
    real hg = 0.
    real Fg = 0.
    integer kg = 0
    real jg = 0.
    integer xg = 0
    integer vg = 0
    player mg = null
    integer Qg = 0
    integer Wg = 0
    integer Eg = 0
    integer Zg = 0
    integer array Ug
    integer Ig = 0
    integer Pg = 0
    integer Ag = 0
    integer Dg = 0
    string Hg = null
    integer Jg = 0
    integer Kg = 0
    integer Lg = 0
    integer array Xg
    integer Cg = 0
    integer Vg = 0
    integer Bg = 0
    integer Ng = 0
    integer Mg = 0
    string wh = null
    integer uh = 0
    integer rh = 0
    integer sh = 0
    real th = 0.
    integer ih = 0
    integer Sh = 0
    integer ch = 0
    real oh = 0.
    real Oh = 0.
    integer lh = 0
    integer bh = 0
    playerevent yh = null
    trigger ph = null
    trigger eh = null
    trigger qh = null
    integer array ah
    integer nh = 0
    integer dh = 0
    integer fh = 0
    integer array Rh
    integer array Th
    boolean Yh = false
    integer array Gh
    integer gh = 0
    integer hh = 0
    integer Fh = 0
    integer kh = 0
    integer jh = 0
    integer xh = 0
    integer vh = 0
    integer mh = 0
    integer Qh = 0
    integer Wh = 0
    integer Eh = 0
    integer Zh = 0
    integer Uh = 0
    integer array Ih
    integer array Ph
    integer array Ah
    string array Dh
    integer Hh = 0
    boolean Jh = false
    boolean Kh = false
    integer Lh = 0
    real Xh = 0.
    integer Ch = 0
    integer Vh = 0
    integer Bh = 0
    boolean array Nh
    integer Mh = 0
    integer wF = 0
    real uF = 0.
    integer rF = 0
    region sF = null
    unit tF = null
    real iF = 0.
    string SF = null
    integer cF = 0
    integer oF = 0
    integer OF = 0
    integer lF = 0
    string bF = null
    string yF = null
    string pF = null
    string eF = null
    string qF = null
    string aF = null
    string nF = null
    string dF = null
    string fF = null
    string RF = null
    integer TF = 0
    integer YF = 0
    string GF = null
    string gF = null
    string hF = null
    integer FF = 0
    integer kF = 0
    integer jF = 0
    integer array xF
    integer array vF
    integer mF = 0
    integer QF = 0
    integer WF = 0
    integer EF = 0
    integer ZF = 0
    string UF = null
    string IF = null
    integer PF = 0
    integer AF = 0
    integer DF = 0
    integer HF = 0
    integer JF = 0
    integer KF = 0
    integer LF = 0
    integer XF = 0
    integer CF = 0
    integer VF = 0
    integer BF = 0
    integer NF = 0
    integer MF = 0
    integer wk = 0
    integer uk = 0
    integer rk = 0
    integer sk = 0
    integer tk = 0
    integer ik = 0
    integer Sk = 0
    integer ck = 0
    integer ok = 0
    integer Ok = 0
    integer lk = 0
    integer bk = 0
    integer yk = 0
    integer pk = 0
    integer ek = 0
    integer qk = 0
    integer ak = 0
    integer nk = 0
    integer dk = 0
    integer fk = 0
    integer Rk = 0
    integer Tk = 0
    integer Yk = 0
    integer Gk = 0
    integer gk = 0
    integer hk = 0
    integer Fk = 0
    integer kk = 0
    integer jk = 0
    integer xk = 0
    integer vk = 0
    integer mk = 0
    integer Qk = 0
    integer Wk = 0
    integer Ek = 0
    integer Zk = 0
    integer Uk = 0
    integer Ik = 0
    integer Pk = 0
    integer Ak = 0
    integer Dk = 0
    integer Hk = 0
    integer Jk = 0
    integer Kk = 0
    integer Lk = 0
    integer Xk = 0
    integer Ck = 0
    integer Vk = 0
    integer Bk = 0
    integer Nk = 0
    integer Mk = 0
    integer wj = 0
    integer uj = 0
    integer rj = 0
    integer sj = 0
    integer tj = 0
    integer ij = 0
    boolean Sj = false
    integer cj = 0
    integer oj = 0
    integer Oj = 0
    integer lj = 0
    integer bj = 0
    real yj = 0.
    boolexpr array pj
    integer ej = 0
    trigger qj = null
    trigger aj = null
    filterfunc nj = null
    boolean dj = false
    integer fj = 0
    integer Rj = 0
    integer Tj = 0
    integer Yj = 0
    boolean Gj = false
    integer array gj
    integer hj = 0
    integer array Fj
    integer kj = 0
    integer jj = 0
    integer array xj
    integer vj = 0
    real mj = 0.
    integer Qj = 0
    real array Wj
    real array Ej
    integer Zj = 0
    integer Uj = 0
    multiboard Ij = null
    integer Pj = 0
    integer Aj = 0
    integer Dj = 0
    integer Hj = 0
    integer Jj = 0
    integer Kj = 0
    integer Lj = 0
    boolean Xj = false
    integer Cj = 0
    integer Vj = 0
    timer Bj = null
    integer Nj = 0
    integer Mj = 0
    integer wx = 0
    integer ux = 0
    integer rx = 0
    integer sx = 0
    real tx = 0.
    integer ix = 0
    timer Sx = null
    integer cx = 0
    integer array ox
    rect Ox = null
    rect lx = null
    integer bx = 0
    integer yx = 0
    integer px = 0
    integer ex = 0
    integer qx = 0
    integer ax = 0
    integer nx = 0
    integer dx = 0
    integer fx = 0
    integer Rx = 0
    integer Tx = 0
    real Yx = 0.
    real Gx = 0.
    real gx = 0.
    real hx = 0.
    real Fx = 0.
    integer kx = 0
    integer jx = 0
    boolean xx = false
    boolean vx = false
    integer mx = 0
    integer Qx = 0
    integer Wx = 0
    integer Ex = 0
    integer Zx = 0
    integer Ux = 0
    integer Ix = 0
    integer Px = 0
    integer Ax = 0
    integer Dx = 0
    integer Hx = 0
    integer Jx = 0
    integer Kx = 0
    integer Lx = 0
    integer Xx = 0
    integer Cx = 0
    region array Vx
    rect array Bx
    integer Nx = 0
    real Mx = 0.
    real wv = 0.
    real uv = 0.
    real rv = 0.
    real sv = 0.
    integer tv = 0
    integer array iv
    integer Sv = 0
    integer cv = 0
    integer ov = 0
    integer Ov = 0
    integer lv = 0
    integer bv = 0
    integer yv = 0
    integer pv = 0
    hashtable ev = null
    string qv = null
    boolean av = false
    force nv = null
    boolean array dv
    integer array fv
    integer Rv = 0
    real Tv = 0.
    real Yv = 0.
    real Gv = 0.
    real gv = 0.
    real hv = 0.
    real Fv = 0.
    real kv = 0.
    real jv = 0.
    real xv = 0.
    integer vv = 0
    integer mv = 0
    integer Qv = 0
    integer Wv = 0
    integer Ev = 0
    integer Zv = 0
    integer Uv = 0
    real Iv = 0.
    real Pv = 0.
    integer Av = 0
    integer Dv = 0
    integer Hv = 0
    integer Jv = 0
    integer Kv = 0
    integer Lv = 0
    integer Xv = 0
    integer Cv = 0
    integer Vv = 0
    integer Bv = 0
    integer Nv = 0
    integer Mv = 0
    integer wm = 0
    boolean um = false
    integer rm = 0
    rect sm = null
    effect tm = null
    integer im = 0
    real array Sm
    real array cm
    real om = 0.
    real Om = 0.
    real lm = 0.
    real bm = 0.
    real ym = 0.
    real pm = 0.
    string em = null
    string qm = null
    string am = null
    string nm = null
    string dm = null
    string fm = null
    string array Rm
    integer array Tm
    integer array Ym
    integer array Gm
    integer array gm
    sound hm = null
    string Fm = null
    string km = null
    string jm = null
    string xm = null
    string vm = null
    string mm = null
    string Qm = null
    string Wm = null
    string Em = null
    string Zm = null
    string Um = null
    string Im = null
    string Pm = null
    real Am = 0.
    real Dm = 0.
    rect Hm = null
    boolean Jm = false
    lightning Km = null
    lightning Lm = null
    lightning Xm = null
    lightning Cm = null
    lightning Vm = null
    lightning Bm = null
    lightning Nm = null
    lightning Mm = null
    lightning wQ = null
    lightning uQ = null
    real rQ = 0.
    integer sQ = 0
    real tQ = 0.
    real iQ = 0.
    real SQ = 0.
    real cQ = 0.
    real oQ = 0.
    integer OQ = 0
    integer lQ = 0
    integer bQ = 0
    integer yQ = 0
    integer pQ = 0
    integer eQ = 0
    integer qQ = 0
    integer aQ = 0
    real nQ = 0.
    integer dQ = 0
    boolean fQ = false
    boolean RQ = false
    boolean TQ = false
    timer YQ = null
    real GQ = 0.
    integer gQ = 0
    integer hQ = 0
    integer FQ = 0
    integer kQ = 0
    rect jQ = null
    integer xQ = 0
    integer vQ = 0
    real mQ = 0.
    real QQ = 0.
    real WQ = 0.
    integer EQ = 0
    integer ZQ = 0
    integer UQ = 0
    integer IQ = 0
    integer PQ = 0
    group array AQ
    integer DQ = 0
    integer HQ = 0
    boolean JQ = false
    boolean KQ = false
    integer LQ = 0
    group XQ = null
    integer CQ = 0
    unit VQ = null
    group BQ = null
    hashtable NQ = null
    hashtable MQ = null
    timer array wW
    timerdialog array uW
    integer rW = 0
    real sW = 0.
    real tW = 0.
    integer iW = 0
    real SW = 0.
    integer cW = 0
    integer oW = 0
    integer OW = 0
    real lW = 0.
    real bW = 0.
    real yW = 0.
    integer pW = 0
    integer eW = 0
    integer qW = 0
    integer aW = 0
    integer nW = 0
    integer dW = 0
    integer fW = 0
    integer RW = 0
    integer TW = 0
    integer YW = 0
    integer GW = 0
    integer gW = 0
    integer hW = 0
    unit array FW
    integer kW = 0
    integer jW = 0
    integer xW = 0
    integer vW = 0
    integer mW = 0
    integer QW = 0
    integer WW = 0
    integer EW = 0
    real ZW = 0.
    real UW = 0.
    boolean IW = false
    boolean PW = false
    integer AW = 0
    integer DW = 0
    integer HW = 0
    integer JW = 0
    integer KW = 0
    integer LW = 0
    integer XW = 0
    integer CW = 0
    framehandle VW = null
    framehandle BW = null
    framehandle NW = null
    framehandle MW = null
    framehandle wE = null
    framehandle uE = null
    framehandle rE = null
    integer sE = 0
    integer tE = 0
    integer iE = 0
    string SE = null
    real cE = 0.
    real oE = 0.
    integer OE = 0
    integer lE = 0
    integer bE = 0
    real yE = 0.
    real pE = 0.
    string eE = null
    real qE = 0.
    real aE = 0.
    integer nE = 0
    integer dE = 0
    integer fE = 0
    real RE = 0.
    real TE = 0.
    string YE = null
    real GE = 0.
    real gE = 0.
    integer hE = 0
    integer FE = 0
    integer kE = 0
    real jE = 0.
    real xE = 0.
    string vE = null
    real mE = 0.
    real QE = 0.
    integer WE = 0
    integer EE = 0
    integer ZE = 0
    real UE = 0.
    real IE = 0.
    string PE = null
    real AE = 0.
    real DE = 0.
    integer HE = 0
    integer JE = 0
    integer KE = 0
    real LE = 0.
    real XE = 0.
    string CE = null
    real VE = 0.
    real BE = 0.
    integer NE = 0
    integer ME = 0
    integer wZ = 0
    real uZ = 0.
    real rZ = 0.
    string sZ = null
    real tZ = 0.
    real iZ = 0.
    integer SZ = 0
    integer cZ = 0
    integer oZ = 0
    real OZ = 0.
    real lZ = 0.
    unit bZ = null
    unit yZ = null
    unit pZ = null
    unit eZ = null
    unit qZ = null
    effect aZ = null
    effect nZ = null
    effect dZ = null
    effect fZ = null
    boolean RZ = false
    boolean TZ = false
    boolean YZ = false
    boolean GZ = false
    location gZ = null
    boolean hZ = false
    real FZ = 0.
    real kZ = 0.
    real jZ = 0.
    real xZ = 0.
    trigger vZ = null
    integer mZ = 0
    integer QZ = 0
    boolean WZ = false
    string array EZ
    string array ZZ
    trigger UZ = null
    integer IZ = 0
    integer PZ = 0
    integer AZ = 0
    integer DZ = 0
    integer HZ = 0
    integer JZ = 0
    integer KZ = 0
    integer LZ = 0
    integer XZ = 0
    integer CZ = 0
    integer VZ = 0
    integer BZ = 0
    boolean NZ = false
    unit MZ = null
    unit wU = null
    boolean uU = false
    rect rU = null
    integer sU = 0
    integer tU = 0
    integer iU = 0
    integer SU = 0
    integer cU = 0
    integer oU = 0
    integer OU = 0
    integer lU = 0
    integer bU = 0
    integer yU = 0
    string pU = null
    integer eU = 0
    real qU = 0.
    real aU = 0.
    real nU = 0.
    real dU = 0.
    real array fU
    real array RU
    integer array TU
    real YU = 0.
    real GU = 0.
    real gU = 0.
    integer hU = 0
    string FU = null
    string kU = null
    string jU = null
    string xU = null
    string vU = null
    string mU = null
    string QU = null
    string WU = null
    boolean EU = false
    boolean ZU = false
    real UU = 0.
    real IU = 0.
    integer PU = 0
    integer AU = 0
    effect DU = null
    effect HU = null
    integer JU = 0
    integer KU = 0
    real LU = 0.
    real XU = 0.
    real CU = 0.
    real VU = 0.
    integer BU = 0
    integer NU = 0
    integer MU = 0
    integer wI = 0
    string uI = null
    string rI = null
    string sI = null
    string tI = null
    string iI = null
    string SI = null
    string cI = null
    string oI = null
    integer OI = 0
    integer lI = 0
    integer bI = 0
    integer yI = 0
    integer pI = 0
    integer eI = 0
    integer qI = 0
    integer aI = 0
    integer nI = 0
    integer dI = 0
    integer fI = 0
    integer RI = 0
    integer TI = 0
    real YI = 0.
    real GI = 0.
    real gI = 0.
    integer hI = 0
    integer FI = 0
    integer kI = 0
    integer jI = 0
    integer xI = 0
    integer vI = 0
    integer mI = 0
    integer QI = 0
    integer WI = 0
    integer EI = 0
    rect ZI = null
    rect UI = null
    integer II = 0
    integer PI = 0
    integer AI = 0
    integer DI = 0
    integer HI = 0
    integer JI = 0
    integer KI = 0
    integer LI = 0
    integer XI = 0
    integer CI = 0
    integer VI = 0
    integer BI = 0
    boolean NI = false
    boolean MI = false
    boolean wP = false
    boolean uP = false
    real rP = 0.
    integer sP = 0
    integer tP = 0
    integer iP = 0
    integer SP = 0
    integer cP = 0
    integer oP = 0
    item OP = null
    rect lP = null
    item array bP
    integer yP = 0
    integer array pP
    integer array eP
    integer array qP
    integer aP = 0
    string nP = null
    string dP = null
    integer fP = 0
    integer RP = 0
    integer TP = 0
    integer YP = 0
    string GP = null
    integer gP = 0
    integer hP = 0
    integer FP = 0
    integer kP = 0
    rect jP = null
    rect xP = null
    integer array vP
    integer mP = 0
    integer QP = 0
    boolean WP = false
    rect EP = null
    rect ZP = null
    region UP = null
    real IP = 0.
    real PP = 0.
    real AP = 0.
    real DP = 0.
    real HP = 0.
    real JP = 0.
    real KP = 0.
    real LP = 0.
    real XP = 0.
    real CP = 0.
    integer VP = 0
    string BP = null
    integer NP = 0
    integer MP = 0
    integer wA = 0
    string uA = null
    string rA = null
    real sA = 0.
    real tA = 0.
    string array iA
    string array SA
    integer cA = 0
    integer oA = 0
    integer OA = 0
    integer lA = 0
    integer bA = 0
    integer yA = 0
    integer pA = 0
    group eA = null
    integer qA = 0
    integer aA = 0
    integer nA = 0
    integer dA = 0
    trigger fA = null
    trigger RA = null
    trigger TA = null
    string YA = null
    integer GA = 0
    real gA = 0.
    integer hA = 0
    integer FA = 0
    integer kA = 0
    integer jA = 0
    integer xA = 0
    integer vA = 0
    real mA = 0.
    real QA = 0.
    real WA = 0.
    real EA = 0.
    real ZA = 0.
    real UA = 0.
    sound IA = null
    trigger PA = null
    rect AA = null
    integer DA = 0
    rect HA = null
    boolean JA = false
    integer KA = 0
    integer LA = 0
    integer XA = 0
    string CA = null
    trigger VA = null
    group BA = null
    unit array NA
    integer MA = 0
    integer wD = 0
    integer uD = 0
    integer rD = 0
    integer sD = 0
    integer tD = 0
    string iD = null
    integer SD = 0
    integer cD = 0
    integer oD = 0
    integer OD = 0
    integer lD = 0
    integer bD = 0
    integer yD = 0
    integer pD = 0
    integer eD = 0
    integer qD = 0
    player array aD
    player nD = null
    playercolor dD = null
    playercolor fD = null
    playercolor RD = null
    playercolor TD = null
    playercolor array YD
    boolean GD = false
    group gD = null
    unit hD = null
    integer FD = 0
    real kD = 0.
    real jD = 0.
    real xD = 0.
    real vD = 0.
    real mD = 0.
    integer QD = 0
    real WD = 0.
    real ED = 0.
    real ZD = 0.
    real UD = 0.
    integer ID = 0
    integer PD = 0
    integer AD = 0
    real DD = 0.
    integer HD = 0
    real JD = 0.
    integer KD = 0
    real LD = 0.
    real XD = 0.
    string CD = null
    trigger VD = null
    unit BD = null
    unit ND = null
    trigger array MD
    integer wH = 0
    integer uH = 0
    real rH = 0.
    integer sH = 0
    integer tH = 0
    integer iH = 0
    integer SH = 0
    integer cH = 0
    integer oH = 0
    integer OH = 0
    real lH = 0.
    real bH = 0.
    integer yH = 0
    integer pH = 0
    real eH = 0.
    real qH = 0.
    integer aH = 0
    real nH = 0.
    string dH = null
    string fH = null
    string RH = null
    string TH = null
    integer YH = 0
    string GH = null
    string gH = null
    string hH = null
    string FH = null
    string kH = null
    string jH = null
    integer xH = 0
    integer vH = 0
    integer mH = 0
    string QH = null
    string array WH
    integer EH = 0
    integer ZH = 0
    integer UH = 0
    string array IH
    real PH = 0.
    string AH = null
    integer array DH
    string HH = null
    string array JH
    integer KH = 0
    string LH = null
    string XH = null
    real CH = 0.
    real VH = 0.
    real BH = 0.
    real NH = 0.
    real MH = 0.
    real wJ = 0.
    real uJ = 0.
    real rJ = 0.
    real sJ = 0.
    real tJ = 0.
    real iJ = 0.
    integer SJ = 0
    integer cJ = 0
    integer array oJ
    integer array OJ
    integer array lJ
    integer array bJ
    integer yJ = 0
    integer pJ = 0
    integer eJ = 0
    hashtable qJ = null
    integer aJ = 0
    string nJ = null
    integer dJ = 0
    string fJ = null
    integer RJ = 0
    integer TJ = 0
    integer YJ = 0
    timer array GJ
    integer gJ = 0
    integer hJ = 0
    integer FJ = 0
    integer kJ = 0
    integer jJ = 0
    integer xJ = 0
    integer vJ = 0
    integer mJ = 0
    integer QJ = 0
    real WJ = 0.
    real EJ = 0.
    integer ZJ = 0
    real UJ = 0.
    trigger IJ = null
    trigger PJ = null
    unit array AJ
    integer DJ = 0
    integer HJ = 0
    attacktype JJ = null
    integer KJ = 0
    real LJ = 0.
    real XJ = 0.
    real CJ = 0.
    real VJ = 0.
    real BJ = 0.
    location NJ = null
    integer MJ = 0
    integer wK = 0
    unit uK = null
    effect rK = null
    real sK = 0.
    real tK = 0.
    effect iK = null
    integer SK = 0
    integer cK = 0
    real oK = 0.
    integer OK = 0
    integer lK = 0
    integer bK = 0
    boolean yK = false
    real pK = 0.
    integer eK = 0
    integer qK = 0
    string aK = null
    string nK = null
    rect dK = null
    rect fK = null
    rect RK = null
    real TK = 0.
    real YK = 0.
    rect GK = null
    rect gK = null
    rect hK = null
    rect FK = null
    rect kK = null
    real jK = 0.
    real xK = 0.
    string vK = null
    string mK = null
    string QK = null
    string WK = null
    string EK = null
    string ZK = null
    string UK = null
    string IK = null
    integer PK = 0
    integer AK = 0
    integer DK = 0
    integer HK = 0
    integer JK = 0
    integer KK = 0
    integer LK = 0
    integer XK = 0
    integer CK = 0
    integer VK = 0
    integer BK = 0
    integer NK = 0
    string MK = null
    string wL = null
    string uL = null
    string rL = null
    string sL = null
    integer tL = 0
    integer iL = 0
    integer SL = 0
    integer cL = 0
    integer oL = 0
    integer OL = 0
    integer lL = 0
    integer bL = 0
    integer yL = 0
    integer pL = 0
    integer eL = 0
    string qL = null
    string aL = null
    string nL = null
    string dL = null
    string fL = null
    string RL = null
    string TL = null
    string YL = null
    integer GL = 0
    integer gL = 0
    integer hL = 0
    integer FL = 0
    integer kL = 0
    integer jL = 0
    integer xL = 0
    integer vL = 0
    real mL = 0.
    real QL = 0.
    real WL = 0.
    string EL = null
    string ZL = null
    string UL = null
    string IL = null
    string PL = null
    string AL = null
    framehandle DL = null
    framehandle HL = null
    framehandle JL = null
    framehandle KL = null
    framehandle LL = null
    framehandle XL = null
    real CL = 0.
    integer VL = 0
    boolean BL = false
    integer NL = 0
    integer ML = 0
    integer wX = 0
    integer uX = 0
    integer rX = 0
    integer sX = 0
    integer tX = 0
    integer iX = 0
    real SX = 0.
    real cX = 0.
    boolean oX = false
    integer OX = 0
    integer lX = 0
    framehandle bX = null
    framehandle yX = null
    framehandle pX = null
    framehandle eX = null
    framehandle qX = null
    framehandle aX = null
    framehandle nX = null
    framehandle dX = null
    trigger fX = null
    integer RX = 0
    integer TX = 0
    integer YX = 0
    integer GX = 0
    boolean gX = false
    region hX = null
    region FX = null
    region kX = null
    region jX = null
    region xX = null
    region vX = null
    integer mX = 0
    effect QX = null
    unit WX = null
    real EX = 0.
    integer ZX = 0
    integer UX = 0
    real IX = 0.
    integer PX = 0
    integer AX = 0
    unit DX = null
    trigger HX = null
    integer JX = 0
    real KX = 0.
    integer LX = 0
    integer XX = 0
    integer CX = 0
    integer VX = 0
    integer array BX
    integer NX = 0
    integer MX = 0
    integer array wC
    integer array uC
    integer rC = 0
    integer sC = 0
    integer array tC
    integer array iC
    integer SC = 0
    integer cC = 0
    integer array oC
    integer array OC
    integer lC = 0
    integer bC = 0
    integer array yC
    integer array pC
    integer eC = 0
    integer qC = 0
    integer array aC
    integer array nC
    integer dC = 0
    integer fC = 0
    integer array RC
    integer array TC
    integer YC = 0
    integer GC = 0
    integer array gC
    integer hC = 0
    integer array FC
    integer array kC
    integer jC = 0
    integer xC = 0
    integer array vC
    integer mC = 0
    integer QC = 0
    integer array WC
    integer EC = 0
    integer ZC = 0
    integer array UC
    integer array IC
    integer PC = 0
    integer AC = 0
    integer array DC
    integer HC = 0
    integer array JC
    integer array KC
    integer LC = 0
    integer XC = 0
    integer array CC
    integer array VC
    integer BC = 0
    integer NC = 0
    integer array MC
    integer array wV
    integer uV = 0
    integer rV = 0
    integer array sV
    integer array tV
    integer iV = 0
    integer SV = 0
    integer array cV
    integer array oV
    integer OV = 0
    integer lV = 0
    integer array bV
    integer array yV
    integer pV = 0
    integer eV = 0
    integer array qV
    integer aV = 0
    integer nV = 0
    integer array dV
    integer array fV
    integer RV = 0
    integer TV = 0
    integer array YV
    integer array GV
    integer gV = 0
    integer hV = 0
    integer array FV
    integer kV = 0
    integer jV = 0
    integer array xV
    integer vV = 0
    integer mV = 0
    integer array QV
    integer array WV
    integer EV = 0
    integer ZV = 0
    integer array UV
    integer IV = 0
    integer array PV
    integer array AV
    integer DV = 0
    integer HV = 0
    integer array JV
    integer array KV
    integer LV = 0
    integer XV = 0
    integer array CV
    integer array VV
    integer BV = 0
    integer NV = 0
    integer array MV
    integer array wB
    integer uB = 0
    integer rB = 0
    integer array sB
    integer array tB
    integer iB = 0
    integer SB = 0
    integer array cB
    integer array oB
    integer OB = 0
    integer lB = 0
    integer array bB
    integer array yB
    integer pB = 0
    integer eB = 0
    integer array qB
    integer aB = 0
    integer nB = 0
    integer array dB
    integer array fB
    integer RB = 0
    integer TB = 0
    integer array YB
    integer array GB
    integer gB = 0
    integer hB = 0
    integer array FB
    integer array kB
    integer jB = 0
    integer xB = 0
    integer array vB
    integer array mB
    integer QB = 0
    integer WB = 0
    integer array EB
    integer ZB = 0
    integer UB = 0
    integer array IB
    integer array PB
    integer AB = 0
    integer DB = 0
    integer array HB
    integer array JB
    integer array KB
    integer array LB
    integer XB = 0
    integer CB = 0
    integer array VB
    integer BB = 0
    integer NB = 0
    integer MB = 0
    integer array wN
    integer array uN
    integer rN = 0
    integer sN = 0
    integer array tN
    integer array iN
    integer SN = 0
    integer cN = 0
    integer array oN
    integer array ON
    integer lN = 0
    integer bN = 0
    integer array yN
    integer array pN
    integer eN = 0
    integer qN = 0
    integer array aN
    integer array nN
    integer dN = 0
    integer fN = 0
    integer array RN
    integer TN = 0
    integer YN = 0
    integer array GN
    integer gN = 0
    integer hN = 0
    integer array FN
    integer kN = 0
    integer jN = 0
    integer array xN
    integer array vN
    integer mN = 0
    integer QN = 0
    integer array WN
    integer array EN
    integer ZN = 0
    integer UN = 0
    unit array IN
    unit array PN
    unit array AN
    unit array DN
    boolean array HN
    real array JN
    unit array KN
    lightning array LN
    unit array XN
    unit array CN
    effect array VN
    unit array BN
    integer array NN
    integer array MN
    integer array wM
    integer array uM
    integer array rM
    integer array sM
    integer array tM
    integer array iM
    integer array SM
    integer array cM
    string array oM
    unit array OM
    integer array lM
    integer array bM
    integer array yM
    integer array pM
    boolean array eM
    integer array qM
    integer array aM
    unit array nM
    integer array dM
    integer array fM
    integer array RM
    integer array TM
    integer array YM
    integer array GM
    integer array gM
    unit array hM
    integer array FM
    timer array kM
    timer array jM
    timer array xM
    integer array vM
    unit array mM
    integer array QM
    trigger array WM
    integer array EM
    integer array ZM
    integer array UM
    integer array IM
    trigger array PM
    integer array AM
    unit array DM
    integer array HM
    boolean array JM
    integer array KM
    integer array LM
    integer array XM
    integer array CM
    real array VM
    real array BM
    boolean array NM
    player array MM
    integer array w3
    real array u3
    boolean array r3
    boolean array s3
    integer array t3
    integer array i3
    integer array S3
    unit array c3
    unit array o3
    real array O3
    attacktype array l3
    damagetype array b3
    weapontype array y3
    integer array p3
    integer array e3
    unit array q3
    unit array a3
    group array n3
    group array d3
    trigger array f3
    unit array R3
    unit array T3
    real array Y3
    real array G3
    real array g3
    real array h3
    boolean array F3
    boolean array k3
    integer array j3
    integer array x3
    real array v3
    integer array m3
    real array Q3
    real array W3
    player array E3
    unit array Z3
    integer array U3
    integer array I3
    integer array P3
    integer array A3
    integer array D3
    unit array H3
    real array J3
    integer array K3
    unit array L3
    unit array X3
    unit array C3
    location array V3
    location array B3
    location array N3
    integer array M3
    rect array w1
    group array u1
    rect array r1
    unit array s1
    integer array t1
    player array i1
    real array S1
    real array c1
    integer array o1
    integer array O1
    player array l1
    player array b1
    integer array y1
    integer array p1
    integer array e1
    integer array q1
    player array a1
    integer array n1
    integer array d1
    integer array f1
    integer array R1
    player array T1
    integer array Y1
    player array G1
    player array g1
    integer array h1
    integer array F1
    unit array k1
    unit array j1
    unit array x1
    unit array v1
    unit array m1
    unit array Q1
    framehandle array W1
    string array E1
    integer array Z1
    real array U1
    integer array I1
    integer array P1
    integer array A1
    integer array D1
    integer array H1
    integer array J1
    integer array K1
    integer array L1
    integer array X1
    integer array C1
    integer array V1
    integer array B1
    integer array N1
    integer array M1
    integer array w4
    integer array u4
    integer array r4
    integer array s4
    integer array t4
    integer array i4
    integer array S4
    integer array c4
    integer array o4
    integer array O4
    integer array l4
    integer array b4
    integer array y4
    integer array p4
    integer array e4
    real array q4
    real array a4
    real array n4
    player array d4
    boolean array f4
    integer array R4
    integer array T4
    boolean array Y4
    unit array G4
    integer array g4
    integer array h4
    integer array F4
    texttag array k4
    boolean array j4
    real array x4
    integer array v4
    integer array m4
    integer array Q4
    integer array W4
    integer array E4
    boolean array Z4
    integer array U4
    player array I4
    unit array P4
    unit array A4
    integer array D4
    player array H4
    player array J4
    unit array K4
    integer array L4
    unit array X4
    player array C4
    integer array V4
    string array B4
    real array N4
    player array M4
    string array w2
    real array u2
    player array r2
    string array s2
    real array t2
    player array i2
    string array S2
    real array c2
    player array o2
    string array O2
    real array l2
    player array b2
    string array y2
    real array p2
    player array e2
    string array q2
    real array a2
    player array n2
    string array d2
    real array f2
    player array R2
    string array T2
    real array Y2
    player array G2
    string array g2
    real array h2
    player array F2
    string array k2
    real array j2
    player array x2
    string array v2
    real array m2
    player array Q2
    string array W2
    real array E2
    player array Z2
    unit array U2
    integer array I2
    player array P2
    real array A2
    integer array D2
    player array H2
    integer array J2
    unit array K2
    real array L2
    real array X2
    real array C2
    real array V2
    real array B2
    integer array N2
    integer array M2
    integer array w5
    integer array u5
    real array r5
    real array s5
    real array t5
    real array i5
    real array S5
    integer array c5
    integer array o5
    integer array O5
    integer array l5
    real array b5
    real array y5
    real array p5
    real array e5
    real array q5
    integer array a5
    integer array n5
    integer array d5
    integer array f5
    real array R5
    real array T5
    real array Y5
    real array G5
    real array g5
    integer array h5
    integer array F5
    integer array k5
    integer array j5
    real array x5
    real array v5
    real array m5
    real array Q5
    real array W5
    integer array E5
    integer array Z5
    integer array U5
    integer array I5
    real array P5
    real array A5
    real array D5
    real array H5
    real array J5
    real array K5
    real array L5
    real array X5
    real array C5
    integer array V5
    integer array B5
    integer array N5
    integer array M5
    real array w6
    real array u6
    real array r6
    real array s6
    real array t6
    integer array i6
    integer array S6
    integer array c6
    integer array o6
    real array O6
    real array l6
    real array b6
    real array y6
    real array p6
    integer array e6
    integer array q6
    integer array a6
    integer array n6
    real array d6
    real array f6
    real array R6
    real array T6
    real array Y6
    integer array G6
    integer array g6
    integer array h6
    integer array F6
    effect array k6
    integer array j6
    integer array x6
    integer array v6
    integer array m6
    real array Q6
    real array W6
    effect array E6
    effect array Z6
    effect array U6
    string array I6
    effect array P6
    real array A6
    real array D6
    real array H6
    real array J6
    real array K6
    real array L6
    real array X6
    real array C6
    effect array V6
    real array B6
    effect array N6
    effect array M6
    effect array w7
    effect array u7
    unit array r7
    real array s7
    real array t7
    effect array i7
    unit array S7
    real array c7
    string array o7
    real array O7
    real array l7
    integer array b7
    player array y7
    trigger array p7
    trigger array e7
    unit array q7
    player array a7
    player array n7
    player array d7
    integer array f7
    unit array R7
    integer array T7
    unit array Y7
    integer array G7
    integer array g7
    player array h7
    real array F7
    integer array k7
    integer array j7
    integer array x7
    integer array v7
    integer array m7
    player array Q7
    player array W7
    player array E7
    player array Z7
    trigger array U7
    trigger array I7
    trigger array P7
    trigger array A7
    trigger array D7
    trigger array H7
    integer array J7
    integer array K7
    integer array L7
    integer array X7
    effect array C7
    effect array V7
    boolean array B7
    unit array N7
    boolean array M7
    unit array w8
    player array u8
    integer array r8
    integer array s8
    integer array t8
    integer array i8
    integer array S8
    integer array c8
    integer array o8
    boolean array O8
    integer array l8
    unit array b8
    player array y8
    unit array p8
    player array e8
    integer array q8
    unit array a8
    player array n8
    unit array d8
    boolean array f8
    unit array R8
    integer array T8
    unit array Y8
    player array G8
    group array g8
    player array h8
    unit array F8
    unit array k8
    unit array j8
    real array x8
    real array v8
    real array m8
    real array Q8
    real array W8
    real array E8
    real array Z8
    real array U8
    real array I8
    real array P8
    real array A8
    real array D8
    real array H8
    real array J8
    real array K8
    real array L8
    unit array X8
    unit array C8
    unit array V8
    location array B8
    location array N8
    location array M8
    effect array w9
    real array u9
    real array r9
    real array s9
    boolean array t9
    real array i9
    real array S9
    real array c9
    boolean array o9
    integer array O9
    unit array l9
    unit array b9
    integer array y9
    unit array p9
    unit array e9
    rect array q9
    unit array a9
    integer array n9
    real array d9
    real array f9
    real array R9
    real array T9
    real array Y9
    real array G9
    real array g9
    real array h9
    unit array F9
    unit array k9
    unit array j9
    unit array x9
    unit array v9
    player array m9
    unit array Q9
    player array W9
    player array E9
    effect array Z9
    effect array U9
    unit array I9
    unit array P9
    unit array A9
    integer array D9
    integer array H9
    integer array J9
    effect array K9
    real array L9
    real array X9
    real array C9
    real array V9
    real array B9
    boolean array N9
    real array M9
    real array w0w
    real array u0w
    real array r0w
    real array s0w
    real array t0w
    real array i0w
    real array S0w
    real array c0w
    effect array o0w
    effect array O0w
    real array l0w
    real array b0w
    effect array y0w
    integer array p0w
    integer array e0w
    integer array q0w
    effect array a0w
    effect array n0w
    unit array d0w
    integer array f0w
    integer array R0w
    item array T0w
    item array Y0w
    unit array G0w
    integer array g0w
    player array h0w
    item array F0w
    player array k0w
    unit array j0w
    integer array x0w
    item array v0w
    unit array m0w
    integer array Q0w
    unit array W0w
    integer array E0w
    unit array Z0w
    integer array U0w
    item array I0w
    unit array P0w
    integer array A0w
    boolean array D0w
    unit array H0w
    item array J0w
    item array K0w
    integer array L0w
    integer array X0w
    integer array C0w
    integer array V0w
    integer array B0w
    player array N0w
    integer array M0w
    integer array www_5280
    integer array uww_5077
    string array rww_4772
    integer array sww_4874
    real array tww_4975
    boolean array iww_3859
    real array Sww_2054
    boolean array cww_3251
    real array oww_4466
    boolean array Oww_1610
    item array lww_4163
    item array bww_3149
    integer array yww_5483
    unit array pww_4568
    integer array eww_3455
    item array qww_4670
    item array aww_2880
    unit array nww_4365
    trigger array dww_3353
    integer array fww_3558
    item array Rww_1951
    dialog array Tww_2159
    dialog array Yww_2677
    integer array Gww_776
    string array gww_3659
    string array hww_3760
    string array Fww_672
    integer array kww_4061
    string array jww_3960
    string array xww_5381
    string array vww_5178
    integer array mww_4264
    string array Qww_1849
    string array Www_2475
    string array Eww_567
    integer array Zww_2778
    string array Uww_2271
    string array Iww_983
    string array Pww_1748
    integer array Aww_113
    string array Dww_427
    string array Hww_877
    string array Jww_1085
    integer array Kww_1186
    string array Lww_1288
    string array Xww_2576
    string array Cww_321
    integer array Vww
    integer array Bww
    integer array Nww
    integer array Mww
    integer array www
    string array uww
    integer array rww
    integer array sww
    integer array tww
    integer array iww
    integer array Sww
    integer array cww
    integer array oww
    integer array Oww
    integer array lww
    integer array bww
    integer array yww
    integer array pww
    integer array eww
    integer array qww
    integer array aww
    integer array nww
    integer array dww
    integer array fww
    integer array Rww
    integer array Tww
    integer array Yww
    integer array Gww
    integer array gww
    integer array hww
    integer array Fww
    integer array kww
    integer array jww
    integer array xww
    integer array vww
    integer array mww
    integer array Qww
    integer array Www
    integer array Eww
    integer array Zww
    integer array Uww
    integer array Iww
    integer array Pww
    string array Aww
    string array Dww
    integer array Hww
    integer array Jww
    integer array Kww
    integer array Lww
    integer array Xww
    integer array Cww
    integer array Vww_2373
    integer array Bww_215
    integer array Nww_1498
    boolean array Mww_1397
    integer array wuw
    integer array uuw
    integer array ruw
    integer array suw
    unit array tuw
    integer array iuw
    unit array Suw
    unit array cuw
    unit array ouw
    integer array Ouw
    unit array luw
    integer array buw
    unit array yuw
    unit array puw
    integer array euw
    integer array quw
    unit array auw
    integer array nuw
    integer array duw
    integer array fuw
    player array Ruw
    string array Tuw
    unit array Yuw
    unit array Guw
    string array guw
    integer array huw
    unit array Fuw
    real array kuw
    real array juw
    real array xuw
    unit array vuw
    real array muw
    real array Quw
    real array Wuw
    effect array Euw
    player array Zuw
    integer array Uuw
    effect array Iuw
    unit array Puw
    player array Auw
    integer array Duw
    integer array Huw
    integer array Juw
    integer array Kuw
    integer array Luw
    boolean array Xuw
    boolean array Cuw
    unit array Vuw
    integer array Buw
    player array Nuw
    integer array Muw
    unit array wrw
    unit array urw
    player array rrw
    integer array srw
    unit array trw
    unit array irw
    unit array Srw
    integer array crw
    unit array orw
    player array Orw
    real array lrw
    integer array brw
    rect array yrw
    real array prw
    real array erw
    unit array qrw
    unit array arw
    texttag array nrw
    boolean array drw
    boolean array frw
    integer array Rrw
    integer array Trw
    unit array Yrw
    integer array Grw
    integer array grw
    effect array hrw
    unit array Frw
    real array krw
    unit array jrw
    integer array xrw
    boolean array vrw
    unit array mrw
    integer array Qrw
    unit array Wrw
    integer array Erw
    player array Zrw
    integer array Urw
    effect array Irw
    real array Prw
    real array Arw
    string array Drw
    real array Hrw
    real array Jrw
    real array Krw
    unit array Lrw
    integer array Xrw
    real array Crw
    real array Vrw
    player array Brw
    unit array Nrw
    real array Mrw
    unit array wsw
    unit array usw
    unit array rsw
    unit array ssw
    unit array tsw
    string array isw
    integer array Ssw
    boolean array csw
    timer array osw
    unit array Osw
    unit array lsw
    unit array bsw
    unit array ysw
    unit array psw
    unit array esw
    integer array qsw
    integer array asw
    unit array nsw
    unit array dsw
    unit array fsw
    integer array Rsw
    unit array Tsw
    real array Ysw
    integer array Gsw
    string array gsw
    integer array hsw
    integer array Fsw
    unit array ksw
    unit array jsw
    real array xsw
    group array vsw
    unit array msw
    real array Qsw
    real array Wsw
    real array Esw
    unit array Zsw
    integer array Usw
    integer array Isw
    integer array Psw
    integer array Asw
    integer array Dsw
    unit array Hsw
    integer array Jsw
    unit array Ksw
    unit array Lsw
    integer array Xsw
    unit array Csw
    integer array Vsw
    integer array Bsw
    unit array Nsw
    unit array Msw
    real array wtw
    integer array utw
    real array rtw
    integer array stw
    unit array ttw
    integer array itw
    unit array Stw
    unit array ctw
    real array otw
    integer array Otw
    real array ltw
    unit array btw
    integer array ytw
    unit array ptw
    integer array etw
    integer array qtw
    integer array atw
    integer array ntw
    integer array dtw
    integer array ftw
    unit array Rtw
    player array Ttw
    unit array Ytw
    integer array Gtw
    player array gtw
    integer array htw
    unit array Ftw
    integer array ktw
    integer array jtw
    real array xtw
    real array vtw
    unit array mtw
    integer array Qtw
    player array Wtw
    integer array Etw
    player array Ztw
    integer array Utw
    boolean array Itw
    unit array Ptw
    integer array Atw
    real array Dtw
    unit array Htw
    integer array Jtw
    integer array Ktw
    real array Ltw
    real array Xtw
    real array Ctw
    real array Vtw
    real array Btw
    real array Ntw
    real array Mtw
    real array wiw
    real array uiw
    real array riw
    real array siw
    real array tiw
    real array iiw
    effect array Siw
    real array ciw
    real array oiw
    real array Oiw
    boolean array liw
    real array biw
    real array yiw
    real array piw
    boolean array eiw
    boolean array qiw
    string array aiw
    effect array niw
    real array diw
    real array fiw
    real array Riw
    real array Tiw
    real array Yiw
    boolean array Giw
    integer array giw
    unit array hiw
    real array Fiw
    integer array kiw
    real array jiw
    lightning array xiw
    real array viw
    unit array miw
    effect array Qiw
    real array Wiw
    real array Eiw
    boolean array Ziw
    real array Uiw
    real array Iiw
    real array Piw
    real array Aiw
    lightning array Diw
    unit array Hiw
    effect array Jiw
    real array Kiw
    real array Liw
    real array Xiw
    real array Ciw
    unit array Viw
    effect array Biw
    real array Niw
    real array Miw
    real array wSw
    real array uSw
    integer array rSw
    player array sSw
    unit array tSw
    effect array iSw
    real array SSw
    real array cSw
    real array oSw
    real array OSw
    unit array lSw
    integer array bSw
    player array ySw
    unit array pSw
    player array eSw
    integer array qSw
    unit array aSw
    player array nSw
    unit array dSw
    unit array fSw
    unit array RSw
    integer array TSw
    player array YSw
    unit array GSw
    integer array gSw
    player array hSw
    unit array FSw
    player array kSw
    integer array jSw
    unit array xSw
    player array vSw
    unit array mSw
    player array QSw
    integer array WSw
    trigger array ESw
    unit array ZSw
    integer array USw
    unit array ISw
    trigger array PSw
    integer ASw = 0
    string array DSw
    real HSw = 0.
    real JSw = 0.
    real KSw = 0.
    real LSw = 0.
    real XSw = 0.
    real CSw = 0.
    real VSw = 0.
    real BSw = 0.
    integer NSw = 0
    real MSw = 0.
    real wcw = 0.
    real ucw = 0.
    real rcw = 0.
    real scw = 0.
    real tcw = 0.
    real icw = 0.
    integer Scw = 0
    integer ccw = 0
    integer ocw = 0
    integer Ocw = 0
    integer lcw = 0
    integer bcw = 0
    real ycw = 0.
    real pcw = 0.
    real ecw = 0.
    real qcw = 0.
    real acw = 0.
    real ncw = 0.
    real dcw = 0.
    real fcw = 0.
    real Rcw = 0.
    real Tcw = 0.
    real Ycw = 0.
    real Gcw = 0.
    real gcw = 0.
    real hcw = 0.
    real Fcw = 0.
    real kcw = 0.
    real jcw = 0.
    real xcw = 0.
    real vcw = 0.
    real mcw = 0.
    real Qcw = 0.
    real Wcw = 0.
    real Ecw = 0.
    real Zcw = 0.
    real Ucw = 0.
    real Icw = 0.
    real Pcw = 0.
    real Acw = 0.
    real Dcw = 0.
    real Hcw = 0.
    real Jcw = 0.
    real Kcw = 0.
    real Lcw = 0.
    real Xcw = 0.
    real Ccw = 0.
    real Vcw = 0.
    real Bcw = 0.
    real Ncw = 0.
    integer Mcw = 0
    real wow = 0.
    real uow = 0.
    integer row = 0
    real sow = 0.
    real tow = 0.
    real iow = 0.
    real Sow = 0.
    real cow = 0.
    real oow = 0.
    real Oow = 0.
    real low = 0.
    real bow = 0.
    real yow = 0.
    real pow = 0.
    real eow = 0.
    real qow = 0.
    real aow = 0.
    real now = 0.
    real dow = 0.
    real fow = 0.
    real Row = 0.
    real Tow = 0.
    real Yow = 0.
    real Gow = 0.
    real gow = 0.
    real how = 0.
    real Fow = 0.
    real kow = 0.
    real jow = 0.
    real xow = 0.
    real vow = 0.
    real mow = 0.
    real Qow = 0.
    real Wow = 0.
    real Eow = 0.
    real Zow = 0.
    real Uow = 0.
    real Iow = 0.
    real Aow = 0.
    real Dow = 0.
    real How = 0.
    real Jow = 0.
    real Kow = 0.
    real Low = 0.
    real Xow = 0.
    real Cow = 0.
    real Vow = 0.
    string array Bow
    string array Now
    string array Mow
    string array wOw
    string array uOw
    string array rOw
    string array sOw
    string array tOw
    string array iOw
    string array SOw
    string array cOw
    string array oOw
    string array OOw
    string array lOw
    string array bOw
    string array yOw
    string array pOw
    string array eOw
    string array qOw
    string array aOw
    string array nOw
    string array dOw
    string array fOw
    string array ROw
    string array TOw
    unit array YOw
    unit array GOw
    unit array gOw
    unit array hOw
    unit array FOw
    unit array kOw
    integer array jOw
    integer array xOw
    integer array vOw
    integer array mOw
    integer array QOw
    integer array WOw
    integer array EOw
    integer array ZOw
    integer array UOw
    integer array IOw
    code POw = null
    code AOw = null
    code DOw = null
    code HOw = null
    code JOw = null
    code KOw = null
    code LOw = null
    code XOw = null
    code COw = null
    code VOw = null
    code BOw = null
    code NOw = null
    code MOw = null
    code wlw = null
    code ulw = null
    code rlw = null
    code slw = null
    code tlw = null
    code ilw = null
    code Slw = null
    code clw = null
    code olw = null
    code Olw = null
    code llw = null
    code blw = null
    code ylw = null
    code plw = null
    code elw = null
    code qlw = null
    code alw = null
    code nlw = null
    code dlw = null
    code flw = null
    code Rlw = null
    code Tlw = null
    code Ylw = null
    code Glw = null
    code glw = null
    code hlw = null
    code Flw = null
    code klw = null
    code jlw = null
    code xlw = null
    code vlw = null
    code mlw = null
    code Qlw = null
    code Wlw = null
    code Elw = null
    code Zlw = null
    code Ulw = null
    code Ilw = null
    code Plw = null
    code Alw = null
    code Dlw = null
    code Hlw = null
    code Jlw = null
    code Klw = null
    code Llw = null
    code Xlw = null
    code Clw = null
    code Vlw = null
    code Blw = null
    code Nlw = null
    code Mlw = null
    code wbw = null
    code ubw = null
    code rbw = null
    code sbw = null
    code tbw = null
    code ibw = null
    code Sbw = null
    code cbw = null
    code obw = null
    code Obw = null
    code lbw = null
    code bbw = null
    code ybw = null
    code pbw = null
    code ebw = null
    code qbw = null
    code abw = null
    code nbw = null
    code dbw = null
    code fbw = null
    code Rbw = null
    code Tbw = null
    code Ybw = null
    code Gbw = null
    code gbw = null
    code hbw = null
    code Fbw = null
    code kbw = null
    code jbw = null
    code xbw = null
    code vbw = null
    code mbw = null
    code Qbw = null
    code Wbw = null
    code Ebw = null
    code Zbw = null
    code Ubw = null
    code Ibw = null
    code Pbw = null
    code Abw = null
    code Dbw = null
    code Hbw = null
    code Jbw = null
    code Kbw = null
    code Lbw = null
    code Xbw = null
    code Cbw = null
    code Vbw = null
    code Bbw = null
    code Nbw = null
    code Mbw = null
    code wyw = null
    code uyw = null
    code ryw = null
    code syw = null
    code tyw = null
    code iyw = null
    code Syw = null
    code cyw = null
    code oyw = null
    code Oyw = null
    code lyw = null
    code byw = null
    code yyw = null
    code pyw = null
    code eyw = null
    code qyw = null
    code ayw = null
    code nyw = null
    code dyw = null
    code fyw = null
    code Ryw = null
    code Tyw = null
    code Yyw = null
    code Gyw = null
    code gyw = null
    code hyw = null
    code Fyw = null
    code kyw = null
    code jyw = null
    code xyw = null
    code vyw = null
    code myw = null
    code Qyw = null
    code Wyw = null
    code Eyw = null
    code Zyw = null
    code Uyw = null
    code Iyw = null
    code Pyw = null
    code Ayw = null
    code Dyw = null
    code Hyw = null
    code Jyw = null
    code Kyw = null
    code Lyw = null
    code Xyw = null
    code Cyw = null
    code Vyw = null
    code Byw = null
    code Nyw = null
    code Myw = null
    code wpw = null
    code upw = null
    code rpw = null
    code spw = null
    code tpw = null
    code ipw = null
    code Spw = null
    code cpw = null
    code opw = null
    code Opw = null
    code lpw = null
    code bpw = null
    code ypw = null
    code ppw = null
    code epw = null
    code qpw = null
    code apw = null
    code npw = null
    code dpw = null
    code fpw = null
    code Rpw = null
    code Tpw = null
    code Ypw = null
    code Gpw = null
    code gpw = null
    code hpw = null
    code Fpw = null
    code kpw = null
    code jpw = null
    code xpw = null
    code vpw = null
    code mpw = null
    code Qpw = null
    code Wpw = null
    code Epw = null
    code Zpw = null
    code Upw = null
    code Ipw = null
    code Ppw = null
    code Apw = null
    code Dpw = null
    code Hpw = null
    code Jpw = null
    code Kpw = null
    code Lpw = null
    code Xpw = null
    code Cpw = null
    code Vpw = null
    code Bpw = null
    code Npw = null
    code Mpw = null
    code wew = null
    code uew = null
    code rew = null
    code sew = null
    code tew = null
    code iew = null
    code Sew = null
    code cew = null
    code oew = null
    code Oew = null
    code lew = null
    code bew = null
    code yew = null
    code pew = null
    code eew = null
    code qew = null
    code aew = null
    code dew = null
    code few = null
    code Rew = null
    code Tew = null
    code Yew = null
    code Gew = null
    code gew = null
    code hew = null
    code Few = null
    code kew = null
    code jew = null
    code xew = null
    code vew = null
    code mew = null
    code Qew = null
    code Wew = null
    code Eew = null
    code Zew = null
    code Uew = null
    code Iew = null
    code Pew = null
    code Aew = null
    code Dew = null
    code Hew = null
    code Jew = null
    code Kew = null
    code Lew = null
    code Xew = null
    code Cew = null
    code Vew = null
    code Bew = null
    code New = null
    code Mew = null
    code wqw = null
    code uqw = null
    code rqw = null
    code sqw = null
    code tqw = null
    code iqw = null
    code Sqw = null
    code cqw = null
    code oqw = null
    code Oqw = null
    code lqw = null
    code bqw = null
    code yqw = null
    code pqw = null
    code eqw = null
    code qqw = null
    code aqw = null
    code nqw = null
    code dqw = null
    code fqw = null
    code Rqw = null
    code Tqw = null
    code Yqw = null
    code Gqw = null
    code gqw = null
    code hqw = null
    code Fqw = null
    code kqw = null
    code jqw = null
    code xqw = null
    code vqw = null
    code mqw = null
    code Qqw = null
    code Wqw = null
    code Eqw = null
    code Zqw = null
    code Uqw = null
    code Iqw = null
    code Pqw = null
    code Aqw = null
    code Dqw = null
    code Hqw = null
    code Jqw = null
    code Kqw = null
    code Lqw = null
    code Xqw = null
    code Cqw = null
    code Vqw = null
    code Bqw = null
    code Nqw = null
    code Mqw = null
    code waw = null
    code uaw = null
    code raw = null
    code saw = null
    code taw = null
    code iaw = null
    code Saw = null
    code caw = null
    code oaw = null
    code Oaw = null
    code law = null
    code baw = null
    code yaw = null
    code paw = null
    code eaw = null
    code qaw = null
    code aaw = null
    code naw = null
    code daw = null
    code faw = null
    code Raw = null
    code Taw = null
    code Yaw = null
    code Gaw = null
    code gaw = null
    code haw = null
    code Faw = null
    code kaw = null
    code jaw = null
    code xaw = null
    code vaw = null
    code maw = null
    code Qaw = null
    code Waw = null
    code Eaw = null
    code Zaw = null
    code Uaw = null
    code Iaw = null
    code Paw = null
    code Aaw = null
    code Daw = null
    code Haw = null
    code Jaw = null
    code Kaw = null
    code Law = null
    code Xaw = null
    code Caw = null
    code Vaw = null
    code Baw = null
    code Naw = null
    code Maw = null
    code wnw = null
    code unw = null
    code rnw = null
    code snw = null
    code tnw = null
    code inw = null
    code Snw = null
    code cnw = null
    code onw = null
    code Onw = null
    code lnw = null
    code bnw = null
    code ynw = null
    code pnw = null
    code enw = null
    code qnw = null
    code anw = null
    code nnw = null
    code dnw = null
    code fnw = null
    code Rnw = null
    code Tnw = null
    code Ynw = null
    code Gnw = null
    code gnw = null
    code hnw = null
    code Fnw = null
    code knw = null
    code jnw = null
    code xnw = null
    code vnw = null
    code mnw = null
    code Qnw = null
    code Wnw = null
    code Enw = null
    code Znw = null
    code Unw = null
    code Inw = null
    code Pnw = null
    code Anw = null
    code Dnw = null
    code Hnw = null
    code Jnw = null
    code Knw = null
    code Lnw = null
    code Xnw = null
    code Cnw = null
    code Vnw = null
    code Bnw = null
    code Nnw = null
    code Mnw = null
    code wdw = null
    code udw = null
    code rdw = null
    code sdw = null
    code tdw = null
    code idw = null
    code Sdw = null
    code cdw = null
    code odw = null
    code Odw = null
    code ldw = null
    code bdw = null
    code ydw = null
    code pdw = null
    code edw = null
    code qdw = null
    code adw = null
    code ndw = null
    code ddw = null
    code fdw = null
    code Rdw = null
    code Tdw = null
    code Ydw = null
    code Gdw = null
    code gdw = null
    code hdw = null
    code Fdw = null
    code kdw = null
    code jdw = null
    code xdw = null
    code vdw = null
    code mdw = null
    code Qdw = null
    code Wdw = null
    code Edw = null
    code Zdw = null
    code Udw = null
    code Idw = null
    code Pdw = null
    code Adw = null
    code Ddw = null
    code Hdw = null
    code Jdw = null
    code Kdw = null
    code Ldw = null
    code Xdw = null
    code Cdw = null
    code Vdw = null
    code Bdw = null
    code Ndw = null
    code Mdw = null
    code wfw = null
    code ufw = null
    code rfw = null
    code sfw = null
    code tfw = null
    code ifw = null
    code Sfw = null
    code cfw = null
    code ofw = null
    code Ofw = null
    code lfw = null
    code bfw = null
    code yfw = null
    code pfw = null
    code efw = null
    code qfw = null
    code afw = null
    code nfw = null
    code dfw = null
    code ffw = null
    code Rfw = null
    code Tfw = null
    code Yfw = null
    code Gfw = null
    code gfw = null
    code hfw = null
    code Ffw = null
    code kfw = null
    code jfw = null
    code xfw = null
    code vfw = null
    code mfw = null
    code Qfw = null
    code Wfw = null
    code Efw = null
    code Zfw = null
    code Ufw = null
    code Ifw = null
    code Pfw = null
    code Afw = null
    code Dfw = null
    code Hfw = null
    code Jfw = null
    code Kfw = null
    code Lfw = null
    code Xfw = null
    code Cfw = null
    code Vfw = null
    code Bfw = null
    code Nfw = null
    code Mfw = null
    code wRw = null
    code uRw = null
    code rRw = null
    code sRw = null
    code tRw = null
    code iRw = null
    code SRw = null
    code cRw = null
    code oRw = null
    code ORw = null
    code lRw = null
    code bRw = null
    code yRw = null
    code pRw = null
    code eRw = null
    code qRw = null
    code aRw = null
    code nRw = null
    code dRw = null
    code fRw = null
    code RRw = null
    code TRw = null
    code YRw = null
    code GRw = null
    code gRw = null
    code hRw = null
    code FRw = null
    code kRw = null
    code jRw = null
    code xRw = null
    code vRw = null
    code mRw = null
    code QRw = null
    code WRw = null
    code ERw = null
    code ZRw = null
    code URw = null
    code IRw = null
    code PRw = null
    code ARw = null
    code DRw = null
    code HRw = null
    code JRw = null
    code KRw = null
    code LRw = null
    code XRw = null
    code CRw = null
    code VRw = null
    code BRw = null
    code NRw = null
    code MRw = null
    code wTw = null
    code uTw = null
    code rTw = null
    code sTw = null
    code tTw = null
    code iTw = null
    code STw = null
    code cTw = null
    code oTw = null
    code OTw = null
    code lTw = null
    code bTw = null
    code yTw = null
    code pTw = null
    code eTw = null
    code qTw = null
    code aTw = null
    code nTw = null
    code dTw = null
    code fTw = null
    code RTw = null
    code TTw = null
    code YTw = null
    code GTw = null
    code gTw = null
    code hTw = null
    code FTw = null
    code kTw = null
    code jTw = null
    code xTw = null
    code vTw = null
    code mTw = null
    code QTw = null
    code WTw = null
    code ETw = null
    code ZTw = null
    code UTw = null
    code ITw = null
    code PTw = null
    code ATw = null
    code DTw = null
    code HTw = null
    code JTw = null
    code KTw = null
    code LTw = null
    code XTw = null
    code CTw = null
    code VTw = null
    code BTw = null
    code NTw = null
    code MTw = null
    code wYw = null
    code uYw = null
    code rYw = null
    code sYw = null
    code tYw = null
    code iYw = null
    code SYw = null
    code cYw = null
    code oYw = null
    code OYw = null
    code lYw = null
    code bYw = null
    code yYw = null
    code pYw = null
    code eYw = null
    code qYw = null
    code aYw = null
    code nYw = null
    code dYw = null
    code fYw = null
    code RYw = null
    code TYw = null
    code YYw = null
    code GYw = null
    code gYw = null
    code hYw = null
    code FYw = null
    code kYw = null
    code jYw = null
    code xYw = null
    code vYw = null
    code mYw = null
    code QYw = null
    code WYw = null
    code EYw = null
    code ZYw = null
    code UYw = null
    code IYw = null
    code PYw = null
    code AYw = null
    code DYw = null
    code HYw = null
    code JYw = null
    code KYw = null
    code LYw = null
    code XYw = null
    code CYw = null
    code VYw = null
    code BYw = null
    code NYw = null
    code MYw = null
    code wGw = null
    code uGw = null
    code rGw = null
    code sGw = null
    code tGw = null
    code iGw = null
    code SGw = null
    code cGw = null
    code oGw = null
    code OGw = null
    code lGw = null
    code bGw = null
    code yGw = null
    code pGw = null
    code eGw = null
    code qGw = null
    code aGw = null
    code nGw = null
    code dGw = null
    code fGw = null
    code RGw = null
    code TGw = null
    code YGw = null
    code GGw = null
    code gGw = null
    code hGw = null
    code FGw = null
    code kGw = null
    code jGw = null
    code xGw = null
    code vGw = null
    code mGw = null
    code QGw = null
    code WGw = null
    code EGw = null
    code ZGw = null
    code UGw = null
    code IGw = null
    code PGw = null
    code AGw = null
    code DGw = null
    code HGw = null
    code JGw = null
    code KGw = null
    code LGw = null
    code XGw = null
    code CGw = null
    code VGw = null
    code BGw = null
    code NGw = null
    code MGw = null
    code wgw = null
    code ugw = null
    code rgw = null
    code sgw = null
    code tgw = null
    code igw = null
    code Sgw = null
    code cgw = null
    code ogw = null
    code Ogw = null
    code lgw = null
    code bgw = null
    code ygw = null
    code pgw = null
    code egw = null
    code qgw = null
    code agw = null
    code ngw = null
    code dgw = null
    code fgw = null
    code Rgw = null
    code Tgw = null
    code Ygw = null
    code Ggw = null
    code ggw = null
    code hgw = null
    code Fgw = null
    code kgw = null
    code jgw = null
    code xgw = null
    code vgw = null
    code mgw = null
    code Qgw = null
    code Wgw = null
    code Egw = null
    code Zgw = null
    code Ugw = null
    code Igw = null
    code Pgw = null
    code Agw = null
    code Dgw = null
    code Hgw = null
    code Jgw = null
    code Kgw = null
    code Lgw = null
    code Xgw = null
    code Cgw = null
    code Vgw = null
    code Bgw = null
    code Ngw = null
    code Mgw = null
    code whw = null
    code uhw = null
    code rhw = null
    code shw = null
    code thw = null
    code ihw = null
    code Shw = null
    code chw = null
    code ohw = null
    code Ohw = null
    code lhw = null
    code bhw = null
    code yhw = null
    code phw = null
    code ehw = null
    code qhw = null
    code ahw = null
    code nhw = null
    code dhw = null
    code fhw = null
    code Rhw = null
    code Thw = null
    code Yhw = null
    code Ghw = null
    code ghw = null
    code hhw = null
    code Fhw = null
    code khw = null
    code jhw = null
    code xhw = null
    code vhw = null
    code mhw = null
    code Qhw = null
    code Whw = null
    code Ehw = null
    code Zhw = null
    code Uhw = null
    code Ihw = null
    code Phw = null
    code Ahw = null
    code Dhw = null
    code Hhw = null
    code Jhw = null
    code Khw = null
    code Lhw = null
    code Xhw = null
    code Chw = null
    code Vhw = null
    code Bhw = null
    code Nhw = null
    code Mhw = null
    code wFw = null
    code uFw = null
    code rFw = null
    code sFw = null
    code tFw = null
    code iFw = null
    code SFw = null
    code cFw = null
    code oFw = null
    code OFw = null
    code lFw = null
    code bFw = null
    code yFw = null
    code pFw = null
    code eFw = null
    code qFw = null
    code aFw = null
    code nFw = null
    code dFw = null
    code fFw = null
    code RFw = null
    code TFw = null
    code YFw = null
    code GFw = null
    code gFw = null
    code hFw = null
    code FFw = null
    code kFw = null
    code jFw = null
    code xFw = null
    code vFw = null
    code mFw = null
    code QFw = null
    code WFw = null
    code EFw = null
    code ZFw = null
    code UFw = null
    code IFw = null
    code PFw = null
    code AFw = null
    code DFw = null
    code HFw = null
    code JFw = null
    code KFw = null
    code LFw = null
    code XFw = null
    code CFw = null
    code VFw = null
    code BFw = null
    code NFw = null
    code MFw = null
    code wkw = null
    code ukw = null
    code rkw = null
    code skw = null
    code tkw = null
    code ikw = null
    code Skw = null
    code ckw = null
    code okw = null
    code Okw = null
    code lkw = null
    code bkw = null
    code ykw = null
    code pkw = null
    code ekw = null
    code qkw = null
    code akw = null
    code nkw = null
    code dkw = null
    code fkw = null
    code Rkw = null
    code Tkw = null
    code Ykw = null
    code Gkw = null
    code gkw = null
    code hkw = null
    code Fkw = null
    code kkw = null
    code jkw = null
    code xkw = null
    code vkw = null
    code mkw = null
    code Qkw = null
    code Wkw = null
    code Ekw = null
    code Zkw = null
    code Ukw = null
    code Ikw = null
    code Pkw = null
    code Akw = null
    code Dkw = null
    code Hkw = null
    code Jkw = null
    code Kkw = null
    code Lkw = null
    code Xkw = null
    code Ckw = null
    code Vkw = null
    code Bkw = null
    code Nkw = null
    code Mkw = null
    code wjw = null
    code ujw = null
    code rjw = null
    code sjw = null
    code tjw = null
    code ijw = null
    code Sjw = null
    code cjw = null
    code ojw = null
    code Ojw = null
    code ljw = null
    code bjw = null
    code yjw = null
    code pjw = null
    code ejw = null
    code qjw = null
    code ajw = null
    code njw = null
    code djw = null
    code fjw = null
    code Rjw = null
    code Tjw = null
    code Yjw = null
    code Gjw = null
    code gjw = null
    code hjw = null
    code Fjw = null
    code kjw = null
    code jjw = null
    code xjw = null
    code vjw = null
    code mjw = null
    code Qjw = null
    code Wjw = null
    code Ejw = null
    code Zjw = null
    code Ujw = null
    code Ijw = null
    code Pjw = null
    code Ajw = null
    code Djw = null
    code Hjw = null
    code Jjw = null
    code Kjw = null
    code Ljw = null
    code Xjw = null
    code Cjw = null
    code Vjw = null
    code Bjw = null
    code Njw = null
    code Mjw = null
    code wxw = null
    code uxw = null
    code rxw = null
    code sxw = null
    code txw = null
    code ixw = null
    code Sxw = null
    code cxw = null
    code oxw = null
    code Oxw = null
    code lxw = null
    code bxw = null
    code yxw = null
    code pxw = null
    code exw = null
    code qxw = null
    code axw = null
    code nxw = null
    code dxw = null
    code fxw = null
    code Rxw = null
    code Txw = null
    code Yxw = null
    code Gxw = null
    code gxw = null
    code hxw = null
    code Fxw = null
    code kxw = null
    code jxw = null
    code xxw = null
    code vxw = null
    code mxw = null
    code Qxw = null
    code Wxw = null
    code Exw = null
    code Zxw = null
    code Uxw = null
    code Ixw = null
    code Pxw = null
    code Axw = null
    code Dxw = null
    code Hxw = null
    code Jxw = null
    code Kxw = null
    code Lxw = null
    code Xxw = null
    code Cxw = null
    code Vxw = null
    code Bxw = null
    code Nxw = null
    code Mxw = null
    code wvw = null
    code uvw = null
    code rvw = null
    code svw = null
    code tvw = null
    code ivw = null
    code Svw = null
    code cvw = null
    code ovw = null
    code Ovw = null
    code lvw = null
    code bvw = null
    code yvw = null
    code pvw = null
    code evw = null
    code qvw = null
    code avw = null
    code nvw = null
    code dvw = null
    code fvw = null
    code Rvw = null
    code Tvw = null
    code Yvw = null
    code Gvw = null
    code gvw = null
    code hvw = null
    code Fvw = null
    code kvw = null
    code jvw = null
    code xvw = null
    code vvw = null
    code mvw = null
    code Qvw = null
    code Wvw = null
    code Evw = null
    code Zvw = null
    code Uvw = null
    code Ivw = null
    code Pvw = null
    code Avw = null
    code Dvw = null
    code Hvw = null
    code Jvw = null
    code Kvw = null
    code Lvw = null
    code Xvw = null
    code Cvw = null
    code Vvw = null
    code Bvw = null
    code Nvw = null
    code Mvw = null
    code wmw = null
    code umw = null
    code rmw = null
    code smw = null
    code tmw = null
    code imw = null
    code Smw = null
    code cmw = null
    code omw = null
    code Omw = null
    code lmw = null
    code bmw = null
    code ymw = null
    code pmw = null
    code emw = null
    code qmw = null
    code amw = null
    code nmw = null
    code dmw = null
    code fmw = null
    code Rmw = null
    code Tmw = null
    code Ymw = null
    code Gmw = null
    code gmw = null
    code hmw = null
    code Fmw = null
    code kmw = null
    code jmw = null
    code xmw = null
    code vmw = null
    code mmw = null
    code Qmw = null
    code Wmw = null
    code Emw = null
    code Zmw = null
    code Umw = null
    code Imw = null
    code Pmw = null
    code Amw = null
    code Dmw = null
    code Hmw = null
    code Jmw = null
    code Kmw = null
    code Lmw = null
    code Xmw = null
    code Cmw = null
    code Vmw = null
    code Bmw = null
    code Nmw = null
    code Mmw = null
    code wQw = null
    code uQw = null
    code rQw = null
    code sQw = null
    code tQw = null
    code iQw = null
    code SQw = null
    code cQw = null
    code oQw = null
    code OQw = null
    code lQw = null
    code bQw = null
    code yQw = null
    code pQw = null
    code eQw = null
    code qQw = null
    code aQw = null
    code nQw = null
    code dQw = null
    code fQw = null
    code RQw = null
    code TQw = null
    code YQw = null
    code GQw = null
    code gQw = null
    code hQw = null
    code FQw = null
    code kQw = null
    code jQw = null
    code xQw = null
    code vQw = null
    code mQw = null
    code QQw = null
    code WQw = null
    code EQw = null
    code ZQw = null
    code UQw = null
    code IQw = null
    code PQw = null
    code AQw = null
    code DQw = null
    code HQw = null
    code JQw = null
    code KQw = null
    code LQw = null
    code XQw = null
    code CQw = null
    code VQw = null
    code BQw = null
    code NQw = null
    code MQw = null
    code wWw = null
    code uWw = null
    code rWw = null
    code sWw = null
    code tWw = null
    code iWw = null
    code SWw = null
    code cWw = null
    code oWw = null
    code OWw = null
    code lWw = null
    code bWw = null
    code yWw = null
    code pWw = null
    code eWw = null
    code qWw = null
    code aWw = null
    code nWw = null
    code dWw = null
    code fWw = null
    code RWw = null
    code TWw = null
    code YWw = null
    code GWw = null
    code gWw = null
    code hWw = null
    code FWw = null
    code kWw = null
    code jWw = null
    code xWw = null
    code vWw = null
    code mWw = null
    code QWw = null
    code WWw = null
    code EWw = null
    code ZWw = null
    code UWw = null
    code IWw = null
    code PWw = null
    code AWw = null
    code DWw = null
    code HWw = null
    code JWw = null
    code KWw = null
    code LWw = null
    code XWw = null
    code CWw = null
    code VWw = null
    code BWw = null
    code NWw = null
    code MWw = null
    code wEw = null
    code uEw = null
    code rEw = null
    code sEw = null
    code tEw = null
    code iEw = null
    code SEw = null
    code cEw = null
    code oEw = null
    code OEw = null
    code lEw = null
    code bEw = null
    code yEw = null
    code pEw = null
    code eEw = null
    code qEw = null
    code aEw = null
    code nEw = null
    code dEw = null
    code fEw = null
    code REw = null
    code TEw = null
    code YEw = null
    code GEw = null
    code gEw = null
    code hEw = null
    code FEw = null
    code kEw = null
    code jEw = null
    code xEw = null
    code vEw = null
    code mEw = null
    code QEw = null
    code WEw = null
    code EEw = null
    code ZEw = null
    code UEw = null
    code IEw = null
    code PEw = null
    code AEw = null
    code DEw = null
    code HEw = null
    code JEw = null
    code KEw = null
    code LEw = null
    code XEw = null
    code CEw = null
    code VEw = null
    code BEw = null
    code NEw = null
    code MEw = null
    code wZw = null
    code uZw = null
    code rZw = null
    code sZw = null
    code tZw = null
    code iZw = null
    code SZw = null
    code cZw = null
    code oZw = null
    code OZw = null
    code lZw = null
    code bZw = null
    code yZw = null
    code pZw = null
    code eZw = null
    code qZw = null
    code aZw = null
    code nZw = null
    code dZw = null
    code fZw = null
    code RZw = null
    code TZw = null
    code YZw = null
    code GZw = null
    code gZw = null
    code hZw = null
    code FZw = null
    code kZw = null
    code jZw = null
    code xZw = null
    code vZw = null
    code mZw = null
    code QZw = null
    code WZw = null
    code EZw = null
    code ZZw = null
    code UZw = null
    code IZw = null
    code PZw = null
    code AZw = null
    code DZw = null
    code HZw = null
    code JZw = null
    code KZw = null
    code LZw = null
    code XZw = null
    code CZw = null
    code VZw = null
    code BZw = null
    code NZw = null
    code MZw = null
    code wUw = null
    code uUw = null
    code rUw = null
    code sUw = null
    code tUw = null
    code iUw = null
    code SUw = null
    code cUw = null
    code oUw = null
    code OUw = null
    code lUw = null
    code bUw = null
    code yUw = null
    code pUw = null
    code eUw = null
    code qUw = null
    code aUw = null
    code nUw = null
    code dUw = null
    code fUw = null
    code RUw = null
    code TUw = null
    code YUw = null
    code GUw = null
    code gUw = null
    code hUw = null
    code FUw = null
    code kUw = null
    code jUw = null
    code xUw = null
    code vUw = null
    code mUw = null
    code QUw = null
    code WUw = null
    code EUw = null
    code ZUw = null
    code UUw = null
    code IUw = null
    code PUw = null
    code AUw = null
    code DUw = null
    code HUw = null
    code JUw = null
    code KUw = null
    code LUw = null
    code XUw = null
    code CUw = null
    code VUw = null
    code BUw = null
    code NUw = null
    code MUw = null
    code wIw = null
    code uIw = null
    code rIw = null
    code sIw = null
    code tIw = null
    code iIw = null
    code SIw = null
    code cIw = null
    code oIw = null
    code OIw = null
    code lIw = null
    code bIw = null
    code yIw = null
    group pIw = null
    integer eIw = 0
    string qIw = null
    boolean aIw = false
    unit nIw = null
    item dIw = null
    group fIw = null
    unit RIw = null
    trigger TIw = null
    item YIw = null
    unit GIw = null
    unit gIw = null
    unit hIw = null
    group FIw = null
    trigger kIw = null
    timer jIw = null
    multiboard xIw = null
    effect vIw = null
    group mIw = null
    timer QIw = null
    effect WIw = null
    unit EIw = null
    rect ZIw = null
    multiboard UIw = null
    unit IIw = null
    player PIw = null
    unit AIw = null
    dialog DIw = null
    multiboard HIw = null
    dialog JIw = null
    texttag KIw = null
    unit LIw = null
    quest XIw = null
    unit CIw = null
    unit VIw = null
    timer BIw = null
    player NIw = null
    lightning MIw = null
    unit wPw = null
    group uPw = null
    item rPw = null
    group sPw = null
    effect tPw = null
    unit iPw = null
    unit SPw = null
    unit cPw = null
    unit oPw = null
    unit OPw = null
    lightning lPw = null
    item bPw = null
    region yPw = null
    group pPw = null
    quest ePw = null
    rect qPw = null
    unit aPw = null
    group nPw = null
    effect dPw = null
endglobals
native UnitAlive takes unit id_1 returns boolean
function LZu takes nothing returns nothing
    local player JZu = Player(PLAYER_NEUTRAL_PASSIVE)
    local unit KZu = CreateUnit(JZu, $68303258, 2208.1, - 6782.3, 270.)
    set KZu = CreateUnit(JZu, $48303033, 11572.1, 13128.2, 270.)
    set KZu = CreateUnit(JZu, $48303035, 11839.4, 13130.4, 270.)
    set KZu = CreateUnit(JZu, $48303042, 12100.5, 13132.5, 270.)
    set KZu = CreateUnit(JZu, $48303038, 12340.2, 13130.6, 270.)
    call SetUnitState(KZu, UNIT_STATE_MANA, 180.)
    set KZu = CreateUnit(JZu, $48303041, 12614.7, 13128.9, 270.)
    call SetUnitState(KZu, UNIT_STATE_MANA, 195.)
    set KZu = CreateUnit(JZu, $48303034, 12816.7, 13124., 270.)
    set KZu = CreateUnit(JZu, $48303037, 12916.7, 13124., 270.)
    set KZu = CreateUnit(JZu, $48303039, 13118.8, 13124., 270.)
    set KZu = CreateUnit(JZu, $48303036, 13385.1, 13128.2, 270.)
    set KZu = CreateUnit(JZu, $6E726163, - 2167.2, 3876.1, .67)
    set KZu = CreateUnit(JZu, $68303257, 3841.5, 2263.8, 90.)
    set KZu = CreateUnit(JZu, $68303058, 3769.3, 1614.1, 300.)
    set KZu = CreateUnit(JZu, $68303247, 9050.2, - 2993.2, 180.)
    set oG = CreateUnit(JZu, $68303044, - 5709.3, - 5428.2, 180.)
    set cG = CreateUnit(JZu, $68303044, - 7106.7, - 3486.1, 270.)
    set KZu = CreateUnit(JZu, $68303235, - 6268.2, - 1844.3, 130.)
    set KZu = CreateUnit(JZu, $68303059, 1448.3, - 5939.9, 90.)
    set KZu = CreateUnit(JZu, $6E303253, 6507.9, 369.3, 90.)
    set KZu = CreateUnit(JZu, $6830305A, 2966.3, - 620.6, 270.)
    set KZu = CreateUnit(JZu, $6830314A, 12725.9, 11728.6, 230.)
    set KZu = CreateUnit(JZu, $68303149, 12503., 11645.7, 270.)
    set KZu = CreateUnit(JZu, $68303147, 12136.5, 11916.2, 270.)
    set KZu = CreateUnit(JZu, $6830314B, 13218., 11938.1, 270.)
    set KZu = CreateUnit(JZu, $68303231, 3389.3, 12886., 270.)
    set KZu = CreateUnit(JZu, $68303230, - 10813., 13101.4, 320.)
    call WaygateSetDestination(KZu, GetRectCenterX(wl), GetRectCenterY(wl))
    call WaygateActivate(KZu, true)
    set KZu = CreateUnit(JZu, $6E66726F, - 7099.5, 12110.1, 181.884)
    set KZu = CreateUnit(JZu, $6E66726F, - 5910.6, 11937.8, 155.912)
    set KZu = CreateUnit(JZu, $68303230, 10695.5, 12668.3, 180.)
    call WaygateSetDestination(KZu, GetRectCenterX(AO), GetRectCenterY(AO))
    call WaygateActivate(KZu, true)
    set KZu = CreateUnit(JZu, $68303230, 4258.5, 10304.8, 0.0)
    call WaygateSetDestination(KZu, GetRectCenterX(AO), GetRectCenterY(AO))
    call WaygateActivate(KZu, true)
    set KZu = CreateUnit(JZu, $6E66726F, - 5847.4, 9824.2, 40.101)
    set KZu = CreateUnit(JZu, $68303230, - 7024.7, 235.6, 320.)
    call WaygateSetDestination(KZu, GetRectCenterX(hl), GetRectCenterY(hl))
    call WaygateActivate(KZu, true)
    set KZu = CreateUnit(JZu, $68303244, - 3644., - 491.4, 240.)
    set KZu = CreateUnit(JZu, $68303230, - 6689.8, - 6167.8, 180.)
    call WaygateSetDestination(KZu, GetRectCenterX(gl), GetRectCenterY(gl))
    call WaygateActivate(KZu, true)
    set KZu = CreateUnit(JZu, $6E66726F, - 8510.2, 7309.8, 289.081)
    set KZu = CreateUnit(JZu, $6E66726F, - 7229.8, 9211.4, 123.325)
    set KZu = CreateUnit(JZu, $6830314F, 12567.5, 8694.5, 90.222)
    set KZu = CreateUnit(JZu, $68303148, - 4159.3, 12754.7, 330.)
    set KZu = CreateUnit(JZu, $68303152, - 3972.9, 13057.3, 270.)
    set KZu = CreateUnit(JZu, $6830314E, - 6913.2, 13138.2, 270.)
    set KZu = CreateUnit(JZu, $6830314D, 10059.2, 8534., 90.)
    set KZu = CreateUnit(JZu, $68303150, - 3650.7, 6220.8, 130.)
    set KZu = CreateUnit(JZu, $68303151, - 541., - 13151.1, 40.)
    set KZu = CreateUnit(JZu, $68303153, - 10523.4, 10364.5, 313.515)
    set KZu = CreateUnit(JZu, $68303154, 659.4, 4246.6, 270.)
    set KZu = CreateUnit(JZu, $68303230, 10699.8, 10077.8, 180.)
    call WaygateSetDestination(KZu, GetRectCenterX(KO), GetRectCenterY(KO))
    call WaygateActivate(KZu, true)
    set KZu = CreateUnit(JZu, $6830314C, 7613.4, - 6934.8, 100.)
    set KZu = CreateUnit(JZu, $68303230, 8521.9, 10966.9, 270.)
    call WaygateSetDestination(KZu, GetRectCenterX(DO), GetRectCenterY(DO))
    call WaygateActivate(KZu, true)
    set KZu = CreateUnit(JZu, $68303230, 9033.9, 11861.7, 180.)
    call WaygateSetDestination(KZu, GetRectCenterX(HO), GetRectCenterY(HO))
    call WaygateActivate(KZu, true)
    set KZu = CreateUnit(JZu, $68303230, 10052., 9261.2, 270.)
    call WaygateSetDestination(KZu, GetRectCenterX(BO), GetRectCenterY(BO))
    call WaygateActivate(KZu, true)
    set KZu = CreateUnit(JZu, $68303230, 4669.9, 12888., 270.)
    call WaygateSetDestination(KZu, GetRectCenterX(LO), GetRectCenterY(LO))
    call WaygateActivate(KZu, true)
    set KZu = CreateUnit(JZu, $68303230, 4896.4, 9111.2, 360.)
    call WaygateSetDestination(KZu, GetRectCenterX(JO), GetRectCenterY(JO))
    call WaygateActivate(KZu, true)
    set KZu = CreateUnit(JZu, $68303230, 5387.5, 9692.2, 270.)
    call WaygateSetDestination(KZu, GetRectCenterX(XO), GetRectCenterY(XO))
    call WaygateActivate(KZu, true)
    set KZu = CreateUnit(JZu, $68303230, 5846.6, 9075.7, 180.)
    call WaygateSetDestination(KZu, GetRectCenterX(VO), GetRectCenterY(VO))
    call WaygateActivate(KZu, true)
    set KZu = CreateUnit(JZu, $68303230, 5392.2, 8619.1, 90.)
    call WaygateSetDestination(KZu, GetRectCenterX(NO), GetRectCenterY(NO))
    call WaygateActivate(KZu, true)
    set KZu = CreateUnit(JZu, $68303230, 6432.7, 8798.8, 360.)
    call WaygateSetDestination(KZu, GetRectCenterX(CO), GetRectCenterY(CO))
    call WaygateActivate(KZu, true)
    set KZu = CreateUnit(JZu, $68303232, 3493.1, 12744.6, 230.)
    set KZu = CreateUnit(JZu, $68303256, 3828.5, - 1524.3, 270.)
    set KZu = CreateUnit(JZu, $68303259, - 7504.3, 13232.6, 230.)
    set KZu = CreateUnit(JZu, $6E303253, 8158.1, 3575.6, 180.)
    set KZu = CreateUnit(JZu, $68303330, - 9275., 11586.3, 270.)
    set KZu = CreateUnit(JZu, $68303334, - 8442.7, 13244.3, 270.)
    set KZu = CreateUnit(JZu, $68303332, - 9148.4, 11540., 230.)
    set KZu = CreateUnit(JZu, $68303331, 2720.7, 11977.2, 180.)
    set KZu = CreateUnit(JZu, $6E303253, 7135.1, 101.4, 90.)
    set KZu = CreateUnit(JZu, $6E726174, 10898.2, - 2057.3, 41.958)
    set KZu = CreateUnit(JZu, $6E303253, 7734.9, 2981.3, 270.)
    set KZu = CreateUnit(JZu, $6E726174, 10346.6, - 1347.6, 101.671)
    set KZu = CreateUnit(JZu, $6E726174, 12162.4, - 974.9, 111.592)
    set KZu = CreateUnit(JZu, $6E303253, 6375.1, 3166.2, 270.)
    set KZu = CreateUnit(JZu, $6E303253, 4148., 2987.7, 360.)
    set KZu = CreateUnit(JZu, $6E303253, 5231.4, 1751.7, 360.)
    set KZu = CreateUnit(JZu, $6E726174, 10609.4, 189.1, 196.013)
    set KZu = CreateUnit(JZu, $6E303253, - 5632., - 10432., 180.)
    set NY = CreateUnit(JZu, $6830325A, - 5359., 5472.6, 270.)
    set KZu = CreateUnit(JZu, $68303444, 2055.5, - 4924.2, 280.)
    set KZu = CreateUnit(JZu, $68303447, 2865.6, - 2468.7, 280.)
    set KZu = CreateUnit(JZu, $68303443, 8265.2, - 12439.6, 280.)
    set KZu = CreateUnit(JZu, $68303446, - 3519., 6219.9, 280.)
    set KZu = CreateUnit(JZu, $68303445, - 9797.5, - 11358.2, 280.)
    set KZu = CreateUnit(JZu, $68303448, 8986., - 12609.3, 180.)
    set KZu = CreateUnit(JZu, $6E303330, 1949.6, - 12782., 151.539)
    set JZu = null
    set KZu = null
endfunction
function A7S takes nothing returns boolean
    return (xo == 2 and IsUnitType(GetTriggerUnit(), UNIT_TYPE_HERO)) != false
endfunction
function kpu takes real hpu, location Fpu returns group
    set WG = CreateGroup()
    call GroupEnumUnitsInRangeOfLoc(WG, Fpu, hpu, ZG)
    return WG
endfunction
function A9s takes nothing returns boolean
    return GetUnitTypeId(GetTriggerUnit()) == 1211117637 and GetUnitTypeId(GetOrderTargetUnit()) == 1747988807 and vs[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))] == 5 and UnitHasItemOfTypeBJ(GetTriggerUnit(), $49303134) == false and IsUnitInGroup(GetTriggerUnit(), kpu(300., GetUnitLoc(GetOrderTargetUnit())))
endfunction
function AAw takes nothing returns boolean
    return true
endfunction
function ABs takes nothing returns nothing
    call SetUnitLifePercentBJ(GetEnumUnit(), 100.)
endfunction
function I3i takes player Z3i, integer U3i returns nothing
    call SetPlayerMaxHeroesAllowed(U3i, Z3i)
endfunction
function UtS takes unit EtS, player ZtS returns nothing
    call SelectUnitForPlayerSingle(EtS, ZtS)
endfunction
function ACi takes nothing returns nothing
    call I3i(GetOwningPlayer(GetSoldUnit()), $00000000)
    call UtS(GetSoldUnit(), GetOwningPlayer(GetSoldUnit()))
endfunction
function MwS takes player NwS returns force
    set EG = CreateForce()
    call ForceAddPlayer(EG, NwS)
    return EG
endfunction
function yju takes nothing returns boolean
    return UnitInventoryCount(GetTriggerUnit()) != 6
endfunction
function AHs takes nothing returns nothing
    if yju() then
        call PlaySoundBJ(ce)
        set lw[GetPlayerId(GetOwningPlayer(GetTriggerUnit()))] = 1227894873
        call TriggerExecute(ow)
        call DisplayTextToForce(MwS(GetOwningPlayer(GetTriggerUnit())), "|cffffcc00Master Ember|r : |cff87ceebWell done. I shall test you no more. You have my thanks, so take this letter of recommendation. You have certainly earned it.")
        call QuestSetDescription(Lr[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))], "I have it! I have the recommendation! Now to get back to my Class Trainer...")
    else
        call PlaySoundBJ(oe)
        call DisplayTimedTextToForce(MwS(GetOwningPlayer(GetTriggerUnit())), 7., "|cffff0000Inventory full! Cannot receive recommendation!|r")
    endif
endfunction
function AIr takes nothing returns boolean
    return true
endfunction
function YTi takes nothing returns boolean
    return UnitInventoryCount(GetTriggerUnit()) != 6
endfunction
function AIu takes nothing returns nothing
    if YTi() then
        call PlaySoundBJ(ce)
        set lw[GetPlayerId(GetOwningPlayer(GetTriggerUnit()))] = 1227895093
        call TriggerExecute(ow)
        call DisplayTextToForce(MwS(GetOwningPlayer(GetTriggerUnit())), "|cffffcc00Berengar the Witcher|r : |cff87ceebNicely done...I did not think you would have succeeded. Anyways, here is your recommendation. You have certainly earned it.")
        call QuestSetDescription(Lr[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))], "I have it! I have the recommendation! Now to get back to my Class Trainer...")
    else
        call PlaySoundBJ(oe)
        call DisplayTimedTextToForce(MwS(GetOwningPlayer(GetTriggerUnit())), 7., "|cffff0000Inventory full! Cannot receive recommendation!|r")
    endif
endfunction
function AJt takes nothing returns boolean
    return GetUnitTypeId(GetTriggerUnit()) == 1211117634 and GetOrderTargetUnit() == uG and IsPlayerInForce(GetOwningPlayer(GetTriggerUnit()), Fr) and IsPlayerInForce(GetOwningPlayer(GetTriggerUnit()), fr) and IsUnitInGroup(GetTriggerUnit(), kpu(300., GetUnitLoc(GetOrderTargetUnit())))
endfunction
function c0i takes nothing returns boolean
    return GetUnitTypeId(GetDyingUnit()) == 1848652097 or GetUnitTypeId(GetDyingUnit()) == 1848652099 or GetUnitTypeId(GetDyingUnit()) == 1848652088
endfunction
function AKu takes nothing returns boolean
    return c0i() and IsPlayerInForce(GetOwningPlayer(GetKillingUnit()), fs) and UnitHasItemOfTypeBJ(GetKillingUnit(), $49303059) == false
endfunction
function ALu takes nothing returns nothing
    call ModifyGateBJ($00000001, hG)
    call DestroyTrigger(GetTriggeringTrigger())
endfunction
function B2S takes trigger C2S, code V2S returns triggeraction
    return TriggerAddAction(C2S, V2S)
endfunction
function P3w takes real I3w returns integer
    return R2I(I3w)
endfunction
function B5r takes real V5r returns integer
    return P3w(V5r * UJ)
endfunction
function Ebs takes trigger vbs, player mbs, string Qbs, boolean Wbs returns event
    return TriggerRegisterPlayerChatEvent(vbs, mbs, Qbs, Wbs)
endfunction
function FEu takes hashtable GEu, integer gEu, integer hEu returns boolean
    return HaveSavedBoolean(GEu, gEu, hEu)
endfunction
function JNr takes hashtable ANr, integer DNr, integer HNr returns integer
    return LoadInteger(ANr, DNr, HNr)
endfunction
function R9S takes string f9S returns integer
    return StringHash(f9S)
endfunction
function dPu takes hashtable ePu, integer qPu, integer aPu, integer nPu returns nothing
    call SaveInteger(ePu, qPu, aPu, nPu)
endfunction
function tHw takes hashtable wHw, integer uHw, integer rHw, boolean sHw returns nothing
    call SaveBoolean(wHw, uHw, rHw, sHw)
endfunction
function tfu takes hashtable ufu, integer rfu, integer sfu returns boolean
    return HaveSavedInteger(ufu, rfu, sfu)
endfunction
function H6t takes integer A6t returns string
    local integer D6t = A6t
    if D6t == 0 then
        return "|cffADADADtrace|r"
    elseif D6t == 1 then
        return "|cff2685DCdebug|r"
    elseif D6t == 2 then
        return "|cffFFCC00info|r"
    elseif D6t == 3 then
        return "|cffF47E3Ewarning|r"
    else
        return "|cffFB2700error|r"
    endif
endfunction
function Jru takes player Pru, integer Aru, string Dru returns nothing
    local string Hru
    if FD <= Aru then
        set Hru = H6t(Aru) + " - " + Dru
        call DisplayTimedTextToPlayer(Pru, 0., 0., kD, Hru)
    endif
endfunction
function tqs takes string sqs returns nothing
    call Jru(nD, $00000004, sqs)
endfunction
function vGi takes string xGi returns nothing
endfunction
function yut takes hashtable Out, integer lut, integer but returns boolean
    return LoadBoolean(Out, lut, but)
endfunction
function tNr takes string LBr, string XBr returns nothing
    local integer CBr
    local string VBr
    local integer BBr
    local integer NBr
    local string MBr
    local integer wNr
    local integer uNr
    local string rNr
    local string sNr
    set DSw[ASw] = XBr
    set ASw = ASw + 1
    if WP then
        call vGi("ERROR: " + LBr)
    else
        if not av then
            set CBr = R9S(LBr)
            if tfu(ev, pv, CBr) then
    if JNr(ev, pv, CBr) + yv < GQ then
                    set rNr = LBr
                    set VBr = ""
                    set BBr = ASw
                    set NBr = 0
                    loop
                        set BBr = BBr - 1
                        set NBr = NBr + 1
                        exitwhen NBr > 20
                        exitwhen BBr < 0
                        set VBr = VBr + "\n   " + DSw[BBr]
                    endloop
                    call tqs(rNr + VBr)
                    call dPu(ev, pv, CBr, P3w(GQ))
                    call tHw(ev, pv, CBr, false)
    elseif FEu(ev, pv, CBr) then
                    if not yut(ev, pv, CBr) then
                        call tqs("|cffFF3A29Excessive repeating errors are being omitted")
                        call tHw(ev, pv, CBr, true)
                    endif
    else
                    call tqs("|cffFF3A29Excessive repeating errors are being omitted")
                    call tHw(ev, pv, CBr, true)
    endif
            else
    call dPu(ev, pv, CBr, P3w(GQ))
    set sNr = "Message: " + LBr
    set MBr = ""
    set wNr = ASw
    set uNr = 0
    loop
                    set wNr = wNr - 1
                    set uNr = uNr + 1
                    exitwhen uNr > 20
                    exitwhen wNr < 0
                    set MBr = MBr + "\n   " + DSw[wNr]
    endloop
    call tqs(sNr + MBr)
            endif
        endif
        set qv = LBr
        call I2S(1 / 0)
    endif
    set ASw = ASw - 1
endfunction
function cRS takes string iRS returns integer
    local integer SRS
    set DSw[ASw] = iRS
    set ASw = ASw + 1
    if ZB == 0 then
        if UB < 32768 then
            set UB = UB + 1
            set SRS = UB
            set IB[SRS] = 1196
        else
            call tNr("Out of memory: Could not create Imp3ShieldEffectsHolder.", "when calling error in Imp3DragonFortress, line 120")
            set SRS = 0
        endif
    else
        set ZB = ZB - 1
        set SRS = EB[ZB]
        set IB[SRS] = 1196
    endif
    set ASw = ASw - 1
    return SRS
endfunction
function LTr takes integer DTr, integer HTr, integer JTr, string KTr returns nothing
    if HTr < 0 or HTr >= 10 then
        call tNr("Index out of Bounds", KTr)
    elseif HTr <= 4 then
        if HTr <= 2 then
            if HTr <= 1 then
    if HTr <= 0 then
                    set jOw[DTr] = JTr
    else
                    set xOw[DTr] = JTr
    endif
            else
    set vOw[DTr] = JTr
            endif
        elseif HTr <= 3 then
            set mOw[DTr] = JTr
        else
            set QOw[DTr] = JTr
        endif
    elseif HTr <= 7 then
        if HTr <= 6 then
            if HTr <= 5 then
    set WOw[DTr] = JTr
            else
    set EOw[DTr] = JTr
            endif
        else
            set ZOw[DTr] = JTr
        endif
    elseif HTr <= 8 then
        set UOw[DTr] = JTr
    else
        set IOw[DTr] = JTr
    endif
endfunction
function mGS takes integer vGS returns nothing
    set Z9[vGS] = null
    set U9[vGS] = null
endfunction
function YZu takes integer TZu returns nothing
    call mGS(TZu)
endfunction
function vdS takes string jdS returns integer
    local integer xdS
    set DSw[ASw] = jdS
    set ASw = ASw + 1
    if QB == 0 then
        if WB < 32768 then
            set WB = WB + 1
            set xdS = WB
        else
            call tNr("Out of memory: Could not create Imp3ShieldEffects.", "when calling error in Imp3DragonFortress, line 115")
            set xdS = 0
        endif
    else
        set QB = QB - 1
        set xdS = mB[QB]
    endif
    set ASw = ASw - 1
    return xdS
endfunction
function k4u takes string h4u returns integer
    local integer F4u
    set DSw[ASw] = h4u
    set ASw = ASw + 1
    set F4u = vdS("when calling alloc_Imp3ShieldEffects in Imp3DragonFortress, line 118")
    call YZu(F4u)
    set ASw = ASw - 1
    return F4u
endfunction
function UPw takes integer EPw, string ZPw returns nothing
    set DSw[ASw] = ZPw
    set ASw = ASw + 1
    call LTr(EPw, $00000000, k4u("when calling new_Imp3ShieldEffects in Imp3DragonFortress, line 121"), "when writing array Imp3ShieldEffectsHolder_imp3Effects in Imp3DragonFortress, line 120")
    call LTr(EPw, $00000001, k4u("when calling new_Imp3ShieldEffects in Imp3DragonFortress, line 121"), "when writing array Imp3ShieldEffectsHolder_imp3Effects in Imp3DragonFortress, line 120")
    call LTr(EPw, $00000002, k4u("when calling new_Imp3ShieldEffects in Imp3DragonFortress, line 121"), "when writing array Imp3ShieldEffectsHolder_imp3Effects in Imp3DragonFortress, line 120")
    call LTr(EPw, $00000003, k4u("when calling new_Imp3ShieldEffects in Imp3DragonFortress, line 121"), "when writing array Imp3ShieldEffectsHolder_imp3Effects in Imp3DragonFortress, line 120")
    call LTr(EPw, $00000004, k4u("when calling new_Imp3ShieldEffects in Imp3DragonFortress, line 121"), "when writing array Imp3ShieldEffectsHolder_imp3Effects in Imp3DragonFortress, line 120")
    call LTr(EPw, $00000005, k4u("when calling new_Imp3ShieldEffects in Imp3DragonFortress, line 121"), "when writing array Imp3ShieldEffectsHolder_imp3Effects in Imp3DragonFortress, line 120")
    call LTr(EPw, $00000006, k4u("when calling new_Imp3ShieldEffects in Imp3DragonFortress, line 121"), "when writing array Imp3ShieldEffectsHolder_imp3Effects in Imp3DragonFortress, line 120")
    call LTr(EPw, $00000007, k4u("when calling new_Imp3ShieldEffects in Imp3DragonFortress, line 121"), "when writing array Imp3ShieldEffectsHolder_imp3Effects in Imp3DragonFortress, line 120")
    call LTr(EPw, $00000008, k4u("when calling new_Imp3ShieldEffects in Imp3DragonFortress, line 121"), "when writing array Imp3ShieldEffectsHolder_imp3Effects in Imp3DragonFortress, line 120")
    call LTr(EPw, $00000009, k4u("when calling new_Imp3ShieldEffects in Imp3DragonFortress, line 121"), "when writing array Imp3ShieldEffectsHolder_imp3Effects in Imp3DragonFortress, line 120")
    set ASw = ASw - 1
endfunction
function q8s takes integer p8s, string e8s returns nothing
    set DSw[ASw] = e8s
    set ASw = ASw + 1
    call UPw(p8s, "when calling Imp3ShieldEffectsHolder_init in Imp3DragonFortress, line 120")
    set ASw = ASw - 1
endfunction
function FPi takes string gPi returns integer
    local integer hPi
    set DSw[ASw] = gPi
    set ASw = ASw + 1
    set hPi = cRS("when calling alloc_Imp3ShieldEffectsHolder in Imp3DragonFortress, line 120")
    call q8s(hPi, "when calling construct_Imp3ShieldEffectsHolder in Imp3DragonFortress, line 120")
    set ASw = ASw - 1
    return hPi
endfunction
function WWu takes integer mWu, integer QWu returns integer
    return JNr(MQ, mWu, QWu)
endfunction
function inS takes integer unS, integer rnS, string snS returns integer
    local integer tnS
    set DSw[ASw] = snS
    set ASw = ASw + 1
    if FB[unS] == 0 then
        if unS == 0 then
            call tNr("Nullpointer exception when calling HashList.count", "when calling error in HashList, line 15")
        else
            call tNr("Called HashList.count on invalid object.", "when calling error in HashList, line 15")
        endif
    endif
    set tnS = WWu(unS, rnS)
    set ASw = ASw - 1
    return tnS
endfunction
function cvu takes integer svu, integer tvu, string ivu returns boolean
    local boolean Svu
    set DSw[ASw] = ivu
    set ASw = ASw + 1
    set Svu = inS(svu, tvu, "when calling count in HashList, line 88") > 0
    set ASw = ASw - 1
    return Svu
endfunction
function iVs takes integer uVs, integer rVs, string sVs returns boolean
    local boolean tVs
    set DSw[ASw] = sVs
    set ASw = ASw + 1
    if FB[uVs] == 0 then
        if uVs == 0 then
            call tNr("Nullpointer exception when calling HashList.has", "when calling error in HashList, line 87")
        else
            call tNr("Called HashList.has on invalid object.", "when calling error in HashList, line 87")
        endif
    endif
    set tVs = cvu(uVs, rVs, "when calling has in HashList, line 87")
    set ASw = ASw - 1
    return tVs
endfunction
function qpS takes integer bpS, integer ypS, string ppS returns boolean
    local boolean epS
    set DSw[ASw] = ppS
    set ASw = ASw + 1
    set epS = iVs(o8[bpS], ypS, "when calling has in HashMap, line 88")
    set ASw = ASw - 1
    return epS
endfunction
function LIr takes integer DIr, integer HIr, string JIr returns boolean
    local boolean KIr
    set DSw[ASw] = JIr
    set ASw = ASw + 1
    if vB[DIr] == 0 then
        if DIr == 0 then
            call tNr("Nullpointer exception when calling IterableMap.hasKey", "when calling error in HashMap, line 87")
        else
            call tNr("Called IterableMap.hasKey on invalid object.", "when calling error in HashMap, line 87")
        endif
    endif
    set KIr = qpS(DIr, HIr, "when calling hasKey in HashMap, line 87")
    set ASw = ASw - 1
    return KIr
endfunction
function tJi takes integer rJi, integer sJi returns boolean
    return tfu(qJ, rJi, sJi)
endfunction
function wci takes integer VSi, integer BSi, string NSi returns boolean
    local boolean MSi
    set DSw[ASw] = NSi
    set ASw = ASw + 1
    if vB[VSi] == 0 then
        if VSi == 0 then
            call tNr("Nullpointer exception when calling Table.hasInt", "when calling error in Table, line 9")
        else
            call tNr("Called Table.hasInt on invalid object.", "when calling error in Table, line 9")
        endif
    endif
    set MSi = tJi(VSi, BSi)
    set ASw = ASw - 1
    return MSi
endfunction
function ars takes integer yrs, integer prs, string ers returns boolean
    local boolean qrs
    set DSw[ASw] = ers
    set ASw = ASw + 1
    set qrs = wci(yrs, prs, "when calling hasInt in HashMap, line 14")
    set ASw = ASw - 1
    return qrs
endfunction
function Jyr takes integer Pyr, integer Ayr, string Dyr returns boolean
    local boolean Hyr
    set DSw[ASw] = Dyr
    set ASw = ASw + 1
    if vB[Pyr] == 0 then
        if Pyr == 0 then
            call tNr("Nullpointer exception when calling HashMap.has", "when calling error in HashMap, line 13")
        else
            call tNr("Called HashMap.has on invalid object.", "when calling error in HashMap, line 13")
        endif
    endif
    set Hyr = ars(Pyr, Ayr, "when calling has in HashMap, line 13")
    set ASw = ASw - 1
    return Hyr
endfunction
function Hji takes integer Pji, integer Aji, integer Dji returns nothing
    call dPu(qJ, Pji, Aji, Dji)
endfunction
function K_s takes integer A_s, integer D_s, integer H_s, string J_s returns nothing
    set DSw[ASw] = J_s
    set ASw = ASw + 1
    if vB[A_s] == 0 then
        if A_s == 0 then
            call tNr("Nullpointer exception when calling Table.saveInt", "when calling error in Table, line 42")
        else
            call tNr("Called Table.saveInt on invalid object.", "when calling error in Table, line 42")
        endif
    endif
    call Hji(A_s, D_s, H_s)
    set ASw = ASw - 1
endfunction
function fMt takes integer qMt, integer aMt, integer nMt, string dMt returns nothing
    set DSw[ASw] = dMt
    set ASw = ASw + 1
    if not Jyr(qMt, aMt, "when calling has in HashMap, line 18") then
        set c8[qMt] = c8[qMt] + 1
    endif
    call K_s(qMt, aMt, nMt, "when calling saveInt in HashMap, line 20")
    set ASw = ASw - 1
endfunction
function FZt takes integer GZt, integer gZt, string hZt returns nothing
    set DSw[ASw] = hZt
    set ASw = ASw + 1
    call dPu(MQ, GZt, gZt, inS(GZt, gZt, "when calling count in HashList, line 19") + 1)
    set ASw = ASw - 1
endfunction
function Obr takes integer Sbr, integer cbr, string obr returns nothing
    set DSw[ASw] = obr
    set ASw = ASw + 1
    if FB[Sbr] == 0 then
        if Sbr == 0 then
            call tNr("Nullpointer exception when calling HashList.incrOccurences", "when calling error in HashList, line 18")
        else
            call tNr("Called HashList.incrOccurences on invalid object.", "when calling error in HashList, line 18")
        endif
    endif
    call FZt(Sbr, cbr, "when calling incrOccurences in HashList, line 18")
    set ASw = ASw - 1
endfunction
function v5s takes integer k5s, integer j5s, string x5s returns nothing
    set DSw[ASw] = x5s
    set ASw = ASw + 1
    call dPu(NQ, k5s, S8[k5s], j5s)
    call Obr(k5s, j5s, "when calling incrOccurences in HashList, line 28")
    set S8[k5s] = S8[k5s] + 1
    set ASw = ASw - 1
endfunction
function uFu takes integer Nhu, integer Mhu, string wFu returns nothing
    set DSw[ASw] = wFu
    set ASw = ASw + 1
    if FB[Nhu] == 0 then
        if Nhu == 0 then
            call tNr("Nullpointer exception when calling HashList.add", "when calling error in HashList, line 25")
        else
            call tNr("Called HashList.add on invalid object.", "when calling error in HashList, line 25")
        endif
    endif
    call v5s(Nhu, Mhu, "when calling add in HashList, line 25")
    set ASw = ASw - 1
endfunction
function Wdr takes integer xdr, integer vdr, integer mdr, string Qdr returns nothing
    set DSw[ASw] = Qdr
    set ASw = ASw + 1
    call fMt(xdr, vdr, mdr, "when calling put in HashMap, line 60")
    if not LIr(xdr, vdr, "when calling hasKey in HashMap, line 61") then
        call uFu(o8[xdr], vdr, "when calling add in HashMap, line 62")
    endif
    set ASw = ASw - 1
endfunction
function GVw takes integer fVw, integer RVw, integer TVw, string YVw returns nothing
    set DSw[ASw] = YVw
    set ASw = ASw + 1
    if vB[fVw] == 0 then
        if fVw == 0 then
            call tNr("Nullpointer exception when calling HashMap.put", "when calling error in HashMap, line 17")
        else
            call tNr("Called HashMap.put on invalid object.", "when calling error in HashMap, line 17")
        endif
    endif
    if vB[fVw] <= 1278 then
        call fMt(fVw, RVw, TVw, "when calling put in HashMap, line 17")
    else
        call Wdr(fVw, RVw, TVw, "when calling put in HashMap, line 17")
    endif
    set ASw = ASw - 1
endfunction
function YEi takes handle TEi returns integer
    return GetHandleId(TEi)
endfunction
function Ici takes rect Uci returns integer
    return YEi(Uci)
endfunction
function CAw takes string KAw, integer LAw, integer XAw returns string
    return SubString(KAw, LAw, XAw)
endfunction
function Dsi takes string Psi, integer Asi returns string
    return SubString(Psi, Asi, Asi + 1)
endfunction
function cgs takes hashtable sgs, integer tgs, integer igs, string Sgs returns nothing
    call SaveStr(sgs, tgs, igs, Sgs)
endfunction
function KHs takes integer DHs, integer HHs, string JHs returns nothing
    call cgs(qJ, DHs, HHs, JHs)
endfunction
function QCt takes integer jCt, integer xCt, string vCt, string mCt returns nothing
    set DSw[ASw] = mCt
    set ASw = ASw + 1
    if vB[jCt] == 0 then
        if jCt == 0 then
            call tNr("Nullpointer exception when calling Table.saveString", "when calling error in Table, line 60")
        else
            call tNr("Called Table.saveString on invalid object.", "when calling error in Table, line 60")
        endif
    endif
    call KHs(jCt, xCt, vCt)
    set ASw = ASw - 1
endfunction
function iUu takes hashtable rUu, integer sUu, integer tUu returns boolean
    return HaveSavedString(rUu, sUu, tUu)
endfunction
function Tdi takes integer fdi, integer Rdi returns boolean
    return iUu(qJ, fdi, Rdi)
endfunction
function XVt takes integer HVt, integer JVt, string KVt returns boolean
    local boolean LVt
    set DSw[ASw] = KVt
    set ASw = ASw + 1
    if vB[HVt] == 0 then
        if HVt == 0 then
            call tNr("Nullpointer exception when calling Table.hasString", "when calling error in Table, line 18")
        else
            call tNr("Called Table.hasString on invalid object.", "when calling error in Table, line 18")
        endif
    endif
    set LVt = Tdi(HVt, JVt)
    set ASw = ASw - 1
    return LVt
endfunction
function OhS takes hashtable ShS, integer chS, integer ohS returns string
    return LoadStr(ShS, chS, ohS)
endfunction
function Bru takes integer Cru, integer Vru returns string
    return OhS(qJ, Cru, Vru)
endfunction
function a9s takes integer y9s, integer p9s, string e9s returns string
    local string q9s
    set DSw[ASw] = e9s
    set ASw = ASw + 1
    if vB[y9s] == 0 then
        if y9s == 0 then
            call tNr("Nullpointer exception when calling Table.loadString", "when calling error in Table, line 57")
        else
            call tNr("Called Table.loadString on invalid object.", "when calling error in Table, line 57")
        endif
    endif
    set q9s = Bru(y9s, p9s)
    set ASw = ASw - 1
    return q9s
endfunction
function err takes string brr, string yrr returns integer
    local integer prr
    set DSw[ASw] = yrr
    set ASw = ASw + 1
    set prr = R9S(brr)
    loop
        exitwhen not true
        if XVt(ZJ, prr, "when calling hasString in TypeCasting, line 26") then
            if a9s(ZJ, prr, "when calling loadString in TypeCasting, line 27") == brr then
    exitwhen true
            endif
        else
            call QCt(ZJ, prr, brr, "when calling saveString in TypeCasting, line 30")
            exitwhen true
        endif
        set prr = prr + 1
    endloop
    set ASw = ASw - 1
    return prr
endfunction
function ifi takes string tfi returns integer
    return S2I(tfi)
endfunction
function h7i takes string G7i returns integer
    local integer g7i
    set DSw[ASw] = G7i
    set ASw = ASw + 1
    if jB == 0 then
        if xB < 32768 then
            set xB = xB + 1
            set g7i = xB
            set vB[g7i] = 1278
        else
            call tNr("Out of memory: Could not create HashMap.", "when calling error in HashMap, line 8")
            set g7i = 0
        endif
    else
        set jB = jB - 1
        set g7i = kB[jB]
        set vB[g7i] = 1278
    endif
    set ASw = ASw - 1
    return g7i
endfunction
function S7w takes integer i7w returns nothing
endfunction
function Ect takes integer Wct returns nothing
    call S7w(Wct)
endfunction
function ror takes integer uor returns nothing
    set c8[uor] = 0
endfunction
function nhs takes integer ahs returns nothing
    call Ect(ahs)
    call ror(ahs)
endfunction
function jts takes string Fts returns integer
    local integer kts
    set DSw[ASw] = Fts
    set ASw = ASw + 1
    set kts = h7i("when calling alloc_HashMap in HashMap, line 7")
    call nhs(kts)
    set ASw = ASw - 1
    return kts
endfunction
function nPr takes integer ePr, string qPr returns string
    local string aPr
    set DSw[ASw] = qPr
    set ASw = ASw + 1
    set aPr = a9s(ZJ, ePr, "when calling loadString in TypeCasting, line 36")
    set ASw = ASw - 1
    return aPr
endfunction
function vQt takes string xQt returns integer
    return StringLength(xQt)
endfunction
function eSr takes integer ySr, integer pSr returns integer
    return JNr(qJ, ySr, pSr)
endfunction
function Ijt takes integer Wjt, integer Ejt, string Zjt returns integer
    local integer Ujt
    set DSw[ASw] = Zjt
    set ASw = ASw + 1
    if vB[Wjt] == 0 then
        if Wjt == 0 then
            call tNr("Nullpointer exception when calling Table.loadInt", "when calling error in Table, line 39")
        else
            call tNr("Called Table.loadInt on invalid object.", "when calling error in Table, line 39")
        endif
    endif
    set Ujt = eSr(Wjt, Ejt)
    set ASw = ASw - 1
    return Ujt
endfunction
function f5u takes integer q5u, integer a5u, string n5u returns integer
    local integer d5u
    set DSw[ASw] = n5u
    set ASw = ASw + 1
    set d5u = Ijt(q5u, a5u, "when calling loadInt in HashMap, line 24")
    set ASw = ASw - 1
    return d5u
endfunction
function wps takes integer Vys, integer Bys, string Nys returns integer
    local integer Mys
    set DSw[ASw] = Nys
    set ASw = ASw + 1
    if vB[Vys] == 0 then
        if Vys == 0 then
            call tNr("Nullpointer exception when calling HashMap.get", "when calling error in HashMap, line 23")
        else
            call tNr("Called HashMap.get on invalid object.", "when calling error in HashMap, line 23")
        endif
    endif
    set Mys = f5u(Vys, Bys, "when calling get in HashMap, line 23")
    set ASw = ASw - 1
    return Mys
endfunction
function xOt takes string YOt, boolean GOt, string gOt returns string
    local string hOt
    local string FOt
    local integer kOt
    local integer jOt
    set DSw[ASw] = gOt
    set ASw = ASw + 1
    if Jh then
        set hOt = ""
        set FOt = YOt
        if dJ == 0 then
            set dJ = jts("when calling new_HashMap in TerrainHighCliffSetup, line 150")
        endif
        if not Jyr(dJ, err(YOt, "when calling stringToIndex in TerrainHighCliffSetup, line 152"), "when calling has in TerrainHighCliffSetup, line 152") then
            loop
    exitwhen not(vQt(FOt) > 0)
    set kOt = 2
    set jOt = ifi(CAw(FOt, vQt(FOt) - kOt, vQt(FOt)))
    set FOt = CAw(FOt, $00000000, vQt(FOt) - kOt)
    if jOt == aJ then
                    set hOt = hOt + nJ
    elseif not(jOt == 0) then
                    set hOt = hOt + Dsi(fJ, jOt - 1)
    endif
            endloop
            call GVw(dJ, err(YOt, "when calling stringToIndex in TerrainHighCliffSetup, line 167"), err(hOt, "when calling stringToIndex in TerrainHighCliffSetup, line 167"), "when calling put in TerrainHighCliffSetup, line 167")
        else
            set hOt = nPr(wps(dJ, err(YOt, "when calling stringToIndex in TerrainHighCliffSetup, line 169"), "when calling get in TerrainHighCliffSetup, line 169"), "when calling stringFromIndex in TerrainHighCliffSetup, line 169")
        endif
        set ASw = ASw - 1
        return hOt
    endif
    set ASw = ASw - 1
    return YOt
endfunction
function Iji takes string Eji, string Zji returns string
    local string Uji
    set DSw[ASw] = Zji
    set ASw = ASw + 1
    set Uji = xOt(Eji, true, "when calling unObfuscate in TerrainHighCliffSetup, line 141")
    set ASw = ASw - 1
    return Uji
endfunction
function K2S takes rect H2S returns region
    local region J2S = CreateRegion()
    call RegionAddRect(J2S, H2S)
    set yPw = J2S
    set J2S = null
    return yPw
endfunction
function MNu takes originframetype BNu, integer NNu returns framehandle
    return BlzGetOriginFrame(BNu, NNu)
endfunction
function QFs takes integer mFs returns nothing
endfunction
function RUs takes integer fUs returns nothing
    call QFs(fUs)
endfunction
function F3r takes integer Y3r, integer G3r returns integer
    local integer g3r = eI
    local integer h3r
    if Y3r > g3r then
        set h3r = Y3r
    else
        set h3r = g3r
    endif
    set g3r = h3r
    if G3r > g3r then
        set h3r = G3r
    else
        set h3r = g3r
    endif
    set g3r = h3r
    return g3r
endfunction
function GNt takes string TNt returns integer
    local integer YNt
    set DSw[ASw] = TNt
    set ASw = ASw + 1
    if BV == 0 then
        if NV < 32768 then
            set NV = NV + 1
            set YNt = NV
            set MV[YNt] = 1151
        else
            call tNr("Out of memory: Could not create ForForceCallback_execute_GroupUtils.", "when calling error in GroupUtils, line 90")
            set YNt = 0
        endif
    else
        set BV = BV - 1
        set YNt = VV[BV]
        set MV[YNt] = 1151
    endif
    set ASw = ASw - 1
    return YNt
endfunction
function Sui takes integer rui, integer sui returns integer
    local integer tui = pI
    local integer iui
    if rui < tui then
        set iui = rui
    else
        set iui = tui
    endif
    set tui = iui
    if sui < tui then
        set iui = sui
    else
        set iui = tui
    endif
    set tui = iui
    return tui
endfunction
function fju takes integer dju returns string
    return I2S(dju)
endfunction
function vns takes integer jns, string xns returns nothing
    set DSw[ASw] = xns
    set ASw = ASw + 1
    if MV[jns] == 0 then
        call tNr("Double free: object of type ForForceCallback", "when calling error in Execute, line 9")
    else
        set VV[BV] = jns
        set BV = BV + 1
        set MV[jns] = 0
    endif
    set ASw = ASw - 1
endfunction
function dri takes integer ari, string nri returns nothing
    set DSw[ASw] = nri
    set ASw = ASw + 1
    call vns(ari, "when calling dealloc_ForForceCallback in Execute, line 9")
    set ASw = ASw - 1
endfunction
function eKr takes integer yKr, string pKr returns nothing
    set DSw[ASw] = pKr
    set ASw = ASw + 1
    if MV[yKr] == 0 then
        if yKr == 0 then
            call tNr("Nullpointer exception when calling ForForceCallback.ForForceCallback", "when calling error in Execute, line 9")
        else
            call tNr("Called ForForceCallback.ForForceCallback on invalid object.", "when calling error in Execute, line 9")
        endif
    endif
    call dri(yKr, "when calling destroyForForceCallback in Execute, line 9")
    set ASw = ASw - 1
endfunction
function Q3u takes string m3u returns nothing
    set DSw[ASw] = m3u
    set ASw = ASw + 1
    set Rv = Rv - 1
    call eKr(fv[Rv], "when calling dispatch_ForForceCallback_destroyForForceCallback in Execute, line 33")
    set ASw = ASw - 1
endfunction
function ffS takes integer dfS returns nothing
    set fv[Rv] = dfS
    set dv[Rv] = false
    set Rv = Rv + 1
endfunction
function p5s takes force b5s, code y5s returns nothing
    call ForForce(b5s, y5s)
endfunction
function pXs takes nothing returns boolean
    return dv[Rv]
endfunction
function eNr takes integer lNr, string bNr returns boolean
    local boolean yNr
    local boolean pNr
    set DSw[ASw] = bNr
    set ASw = ASw + 1
    call ffS(lNr)
    set yNr = av
    set av = true
    call p5s(nv, tmw)
    set av = yNr
    call Q3u("when calling popCallback in Execute, line 101")
    set pNr = pXs()
    set ASw = ASw - 1
    return pNr
endfunction
function ggu takes integer Ygu, string Ggu returns nothing
    set DSw[ASw] = Ggu
    set ASw = ASw + 1
    if not eNr(Ygu, "when calling try in Execute, line 78") then
        call tNr("execute: thread has crashed. caused by:\n| - " + qv, "when calling error in Execute, line 79")
    endif
    set ASw = ASw - 1
endfunction
function hHu takes string gHu returns nothing
    call Jru(nD, $00000003, gHu)
endfunction
function IbS takes integer jbS, string xbS returns nothing
    local integer vbS
    local integer mbS
    local integer QbS
    local integer WbS
    local integer EbS
    local integer ZbS
    local integer UbS
    set DSw[ASw] = xbS
    set ASw = ASw + 1
    set vbS = 256
    set mbS = F3r(JASS_MAX_ARRAY_SIZE - 1, LQ)
    set QbS = HQ + jbS
    set WbS = F3r($00000000, QbS - mbS)
    set EbS = F3r($00000000, QbS - WbS)
    loop
        exitwhen not(EbS > 0)
        set ZbS = Sui(EbS, vbS)
        set EbS = EbS - ZbS
        set UbS = GNt("when calling alloc_ForForceCallback_execute_GroupUtils in GroupUtils, line 90")
        set s8[UbS] = ZbS
        call ggu(UbS, "when calling execute in GroupUtils, line 90")
    endloop
    if HQ >= LQ and(not JQ) then
        call hHu("Maximum number of GroupUtils groups (" + fju(LQ) + ") created. " + "All newly created groups will be non-recyclable.")
        set JQ = true
    endif
    set ASw = ASw - 1
endfunction
function O_i takes boolean c_i returns integer
    local integer o_i
    if c_i then
        set o_i = 1
    else
        set o_i = 0
    endif
    return o_i
endfunction
function ryi takes group uyi returns integer
    return YEi(uyi)
endfunction
function UOS takes integer QOS, string WOS returns nothing
    local group EOS
    local group ZOS
    if QOS == 0 then
        set DSw[ASw] = WOS
        set ASw = ASw + 1
        set DQ = DQ - 1
        set EOS = AQ[DQ]
        if AQ[DQ] != null then
            call GVw(PQ, ryi(AQ[DQ]), O_i(true), "when calling put in GroupUtils, line 128")
        else
            if not KQ then
    call hHu("Groups on the GroupUtils stack shouldn't be destroyed! Use .release() instead.")
    set KQ = true
            endif
            call UOS($00000001, "when calling getGroup in GroupUtils, line 133")
            set EOS = pIw
        endif
        set ASw = ASw - 1
        set pIw = EOS
        set EOS = null
        set ZOS = null
        return
    elseif QOS == 1 then
        set DSw[ASw] = WOS
        set ASw = ASw + 1
        if DQ > 0 then
            call UOS($00000000, "when calling pop in GroupUtils, line 43")
            set ZOS = pIw
        elseif DQ <= 0 and HQ < LQ then
            call IbS(UQ, "when calling createGroups in GroupUtils, line 45")
            call UOS($00000000, "when calling pop in GroupUtils, line 46")
            set ZOS = pIw
        else
            set ZOS = CreateGroup()
        endif
        set ASw = ASw - 1
        set pIw = ZOS
        set EOS = null
        set ZOS = null
        return
    endif
    set EOS = null
    set ZOS = null
endfunction
function BRt takes string CRt returns integer
    local integer VRt
    set DSw[ASw] = CRt
    set ASw = ASw + 1
    if rN == 0 then
        if sN < 32768 then
            set sN = sN + 1
            set VRt = sN
            set tN[VRt] = 1212
        else
            call tNr("Out of memory: Could not create LLEntry.", "when calling error in LinkedList, line 411")
            set VRt = 0
        endif
    else
        set rN = rN - 1
        set VRt = uN[rN]
        set tN[VRt] = 1212
    endif
    set ASw = ASw - 1
    return VRt
endfunction
function qgt takes integer egt returns nothing
endfunction
function cLw takes integer sLw, integer tLw, integer iLw, integer SLw returns nothing
    call qgt(sLw)
    set Lww[sLw] = tLw
    set Xww[sLw] = iLw
    set Cww[sLw] = SLw
endfunction
function xeS takes integer geS, integer heS, integer FeS, string keS returns integer
    local integer jeS
    set DSw[ASw] = keS
    set ASw = ASw + 1
    set jeS = BRt("when calling alloc_LLEntry in LinkedList, line 416")
    call cLw(jeS, geS, heS, FeS)
    set ASw = ASw - 1
    return jeS
endfunction
function ytt takes integer ltt, string btt returns nothing
    set DSw[ASw] = btt
    set ASw = ASw + 1
    set wuw[ltt] = xeS($00000000, $00000000, $00000000, "when calling new_LLEntry in LinkedList, line 19")
    set uuw[ltt] = 0
    set ruw[ltt] = 0
    set suw[ltt] = 0
    set ASw = ASw - 1
endfunction
function pBt takes integer bBt, string yBt returns nothing
    set DSw[ASw] = yBt
    set ASw = ASw + 1
    call ytt(bBt, "when calling LinkedList_init in LinkedList, line 32")
    set Cww[wuw[bBt]] = wuw[bBt]
    set Xww[wuw[bBt]] = wuw[bBt]
    set ASw = ASw - 1
endfunction
function phs takes string bhs returns integer
    local integer yhs
    set DSw[ASw] = bhs
    set ASw = ASw + 1
    if lN == 0 then
        if bN < 32768 then
            set bN = bN + 1
            set yhs = bN
            set yN[yhs] = 1218
        else
            call tNr("Out of memory: Could not create LinkedList.", "when calling error in LinkedList, line 18")
            set yhs = 0
        endif
    else
        set lN = lN - 1
        set yhs = ON[lN]
        set yN[yhs] = 1218
    endif
    set ASw = ASw - 1
    return yhs
endfunction
function XQt takes string KQt returns integer
    local integer LQt
    set DSw[ASw] = KQt
    set ASw = ASw + 1
    set LQt = phs("when calling alloc_LinkedList in LinkedList, line 32")
    call pBt(LQt, "when calling construct_LinkedList2 in LinkedList, line 32")
    set ASw = ASw - 1
    return LQt
endfunction
function cps takes timer Sps returns integer
    return GetHandleId(Sps)
endfunction
function tNu takes timer uNu, integer rNu, string sNu returns nothing
    set DSw[ASw] = sNu
    set ASw = ASw + 1
    call K_s(hJ, cps(uNu), rNu, "when calling saveInt in TimerUtils, line 18")
    set ASw = ASw - 1
endfunction
function ZPs takes string QPs returns timer
    local timer WPs
    local timer EPs
    set DSw[ASw] = QPs
    set ASw = ASw + 1
    if gJ > 0 then
        set gJ = gJ - 1
        call tNu(GJ[gJ], $00000000, "when calling setData in TimerUtils, line 30")
        set ASw = ASw - 1
        set WPs = null
        set EPs = null
        return GJ[gJ]
    else
        set WPs = CreateTimer()
        call tNu(WPs, $00000000, "when calling setData in TimerUtils, line 33")
        set EPs = WPs
        set ASw = ASw - 1
        set jIw = EPs
        set WPs = null
        set EPs = null
        return jIw
    endif
endfunction
function gNu takes timer TNu, real YNu, code GNu returns nothing
    call TimerStart(TNu, YNu, false, GNu)
endfunction
function uJt takes integer CHt, timer VHt, real BHt, string NHt returns nothing
    local timer MHt
    local timer wJt
    set DSw[ASw] = NHt
    set ASw = ASw + 1
    set MHt = VHt
    call tNu(MHt, CHt, "when calling setData in ClosureTimers, line 113")
    set wJt = MHt
    call gNu(wJt, BHt, sZw)
    set xM[CHt] = wJt
    set ASw = ASw - 1
    set MHt = null
    set wJt = null
endfunction
function jli takes integer gli, timer hli, real Fli, string kli returns nothing
    set DSw[ASw] = kli
    set ASw = ASw + 1
    if wC[gli] == 0 then
        if gli == 0 then
            call tNr("Nullpointer exception when calling CallbackSingle.start", "when calling error in ClosureTimers, line 111")
        else
            call tNr("Called CallbackSingle.start on invalid object.", "when calling error in ClosureTimers, line 111")
        endif
    endif
    call uJt(gli, hli, Fli, "when calling start in ClosureTimers, line 111")
    set ASw = ASw - 1
endfunction
function iwu takes timer uwu, real rwu, integer swu, string twu returns integer
    set DSw[ASw] = twu
    set ASw = ASw + 1
    call jli(swu, uwu, rwu, "when calling start in ClosureTimers, line 16")
    set ASw = ASw - 1
    return swu
endfunction
function Ybr takes real dbr, integer fbr, string Rbr returns integer
    local integer Tbr
    set DSw[ASw] = Rbr
    set ASw = ASw + 1
    set Tbr = iwu(ZPs("when calling getTimer in ClosureTimers, line 27"), dbr, fbr, "when calling doAfter in ClosureTimers, line 27")
    set ASw = ASw - 1
    return Tbr
endfunction
function bVw takes region lVw returns integer
    return YEi(lVw)
endfunction
function cGt takes timer SGt returns integer
    return cps(SGt)
endfunction
function iUr takes integer uUr, integer rUr, integer sUr, string tUr returns nothing
    set DSw[ASw] = tUr
    set ASw = ASw + 1
    if vB[uUr] == 0 then
        if uUr == 0 then
            call tNr("Nullpointer exception when calling IterableMap.put", "when calling error in HashMap, line 59")
        else
            call tNr("Called IterableMap.put on invalid object.", "when calling error in HashMap, line 59")
        endif
    endif
    call Wdr(uUr, rUr, sUr, "when calling put in HashMap, line 59")
    set ASw = ASw - 1
endfunction
function k7w takes string h7w returns integer
    local integer F7w
    set DSw[ASw] = h7w
    set ASw = ASw + 1
    if NX == 0 then
        if MX < 32768 then
            set MX = MX + 1
            set F7w = MX
            set wC[F7w] = 868
        else
            call tNr("Out of memory: Could not create CallbackSingle_doAfter_Imp3DragonFortress.", "when calling error in Imp3DragonFortress, line 1643")
            set F7w = 0
        endif
    else
        set NX = NX - 1
        set F7w = BX[NX]
        set wC[F7w] = 868
    endif
    set ASw = ASw - 1
    return F7w
endfunction
function BgS takes string LgS, string XgS returns integer
    local integer CgS = 0
    local integer VgS = vQt(LgS) - vQt(XgS)
    loop
        exitwhen CgS > VgS
        if CAw(LgS, CgS, CgS + vQt(XgS)) == XgS then
            return CgS
        endif
        set CgS = CgS + 1
    endloop
    return - 1
endfunction
function Yst takes string ast, string nst returns integer
    local integer dst
    local integer fst
    local integer Rst
    local integer Tst
    set DSw[ASw] = nst
    set ASw = ASw + 1
    set dst = 0
    if vQt(ast) != 4 then
        call tNr("Fourchar value must be 4 chars long", "when calling error in ObjectIds, line 36")
    else
        set fst = 1
        set Rst = 0
        loop
            exitwhen Rst > 3
            set Tst = BgS(CA, Dsi(ast, 3 - Rst))
            set dst = dst + fst * Tst
            set fst = fst * 256
            set Rst = Rst + 1
        endloop
    endif
    set ASw = ASw - 1
    return dst
endfunction
function l2s takes string c2s, string o2s returns integer
    local integer O2s
    set DSw[ASw] = o2s
    set ASw = ASw + 1
    set O2s = Yst(c2s, "when calling fromRawCode in ObjectIds, line 47")
    set ASw = ASw - 1
    return O2s
endfunction
function Bsu takes rect Vsu returns real
    return GetRectCenterY(Vsu)
endfunction
function uys takes rect wys returns real
    return GetRectCenterX(wys)
endfunction
function oQu takes rect cQu returns real
    set Ycw = uys(cQu)
    set Gcw = Bsu(cQu)
    return Ycw
endfunction
function FRs takes integer YRs, integer GRs, string gRs returns nothing
    local integer hRs
    set DSw[ASw] = gRs
    set ASw = ASw + 1
    set hRs = xeS(GRs, Xww[wuw[YRs]], wuw[YRs], "when calling new_LLEntry in LinkedList, line 40")
    set Cww[Xww[wuw[YRs]]] = hRs
    set Xww[wuw[YRs]] = hRs
    set uuw[YRs] = uuw[YRs] + 1
    set ASw = ASw - 1
endfunction
function vwt takes integer kwt, integer jwt, string xwt returns nothing
    set DSw[ASw] = xwt
    set ASw = ASw + 1
    if yN[kwt] == 0 then
        if kwt == 0 then
            call tNr("Nullpointer exception when calling LinkedList.add", "when calling error in LinkedList, line 38")
        else
            call tNr("Called LinkedList.add on invalid object.", "when calling error in LinkedList, line 38")
        endif
    endif
    call FRs(kwt, jwt, "when calling add in LinkedList, line 38")
    set ASw = ASw - 1
endfunction
function HIt takes string AIt returns integer
    local integer DIt
    set DSw[ASw] = AIt
    set ASw = ASw + 1
    if jB == 0 then
        if xB < 32768 then
            set xB = xB + 1
            set DIt = xB
            set vB[DIt] = 1279
        else
            call tNr("Out of memory: Could not create IterableMap.", "when calling error in HashMap, line 46")
            set DIt = 0
        endif
    else
        set jB = jB - 1
        set DIt = kB[jB]
        set vB[DIt] = 1279
    endif
    set ASw = ASw - 1
    return DIt
endfunction
function D1s takes string P1s returns integer
    local integer A1s
    set DSw[ASw] = P1s
    set ASw = ASw + 1
    if gB == 0 then
        if hB < 32768 then
            set hB = hB + 1
            set A1s = hB
            set FB[A1s] = 1191
        else
            call tNr("Out of memory: Could not create HashList.", "when calling error in HashList, line 8")
            set A1s = 0
        endif
    else
        set gB = gB - 1
        set A1s = GB[gB]
        set FB[A1s] = 1191
    endif
    set ASw = ASw - 1
    return A1s
endfunction
function nlt takes integer alt returns nothing
    set S8[alt] = 0
endfunction
function iZi takes integer tZi returns nothing
    call nlt(tZi)
endfunction
function Jys takes string Dys returns integer
    local integer Hys
    set DSw[ASw] = Dys
    set ASw = ASw + 1
    set Hys = D1s("when calling alloc_HashList in HashList, line 112")
    call iZi(Hys)
    set ASw = ASw - 1
    return Hys
endfunction
function v5u takes integer j5u, string x5u returns nothing
    set DSw[ASw] = x5u
    set ASw = ASw + 1
    set o8[j5u] = Jys("when calling new_HashList in HashMap, line 47")
    set O8[j5u] = false
    set ASw = ASw - 1
endfunction
function vIt takes integer jIt, string xIt returns nothing
    set DSw[ASw] = xIt
    set ASw = ASw + 1
    call nhs(jIt)
    call v5u(jIt, "when calling IterableMap_init in HashMap, line 50")
    set ASw = ASw - 1
endfunction
function xMr takes string kMr returns integer
    local integer jMr
    set DSw[ASw] = kMr
    set ASw = ASw + 1
    set jMr = HIt("when calling alloc_IterableMap in HashMap, line 50")
    call vIt(jMr, "when calling construct_IterableMap in HashMap, line 50")
    set ASw = ASw - 1
    return jMr
endfunction
function Par takes string Per returns boolean
    local integer Aer
    local integer Der
    local integer Her
    local integer Jer
    local integer Ker
    local integer Ler
    local integer Xer
    local integer Cer
    local integer Ver
    local integer Ber
    local integer Ner
    local integer Mer
    local integer wqr
    local integer uqr
    local integer rqr
    local integer sqr
    local integer tqr
    local integer iqr
    local integer Sqr
    local integer cqr
    local integer oqr
    local integer Oqr
    local integer lqr
    local integer bqr
    local integer yqr
    local integer pqr
    local integer eqr
    local integer qqr
    local integer aqr
    local integer nqr
    local integer dqr
    local trigger fqr
    local integer Rqr
    local integer Tqr
    local integer Yqr
    local real Gqr
    local real gqr
    local integer hqr
    local integer Fqr
    local integer kqr
    local string jqr
    local real xqr
    local real vqr
    local integer mqr
    local integer Qqr
    local integer Wqr
    local real Eqr
    local real Zqr
    local string Uqr
    local real Iqr
    local real Pqr
    local integer Aqr
    local integer Dqr
    local integer Hqr
    local real Jqr
    local real Kqr
    local string Lqr
    local real Xqr
    local real Cqr
    local integer Vqr
    local integer Bqr
    local integer Nqr
    local real Mqr
    local real war
    local string uar
    local real rar
    local real sar
    local integer tar
    local integer iar
    local integer Sar
    local real car
    local real oar
    local string Oar
    local real lar
    local real bar
    local integer yar
    local integer par
    local integer ear
    local real qar
    local real aar
    local string nar
    local real dar
    local real far
    local integer Rar
    local integer Tar
    local integer Yar
    local real Gar
    local real gar
    local string har
    local real Far
    local real kar
    local integer jar
    local integer xar
    local integer mar
    local real Qar
    local real War
    local real Ear
    local real Zar
    local real Uar
    local real Iar
    set DSw[ASw] = Per
    set ASw = ASw + 1
    set bW = 100.
    set yW = 120.
    set pW = FPi("when calling new_Imp3ShieldEffectsHolder in Imp3DragonFortress, line 26")
    set eW = jts("when calling new_HashMap in Imp3DragonFortress, line 27")
    set qW = jts("when calling new_HashMap in Imp3DragonFortress, line 28")
    set aW = jts("when calling new_HashMap in Imp3DragonFortress, line 29")
    set nW = jts("when calling new_HashMap in Imp3DragonFortress, line 30")
    set dW = jts("when calling new_HashMap in Imp3DragonFortress, line 31")
    set fW = jts("when calling new_HashMap in Imp3DragonFortress, line 32")
    call K2S(Xl)
    set RW = jts("when calling new_HashMap in Imp3DragonFortress, line 36")
    set TW = XQt("when calling new_LinkedList in Imp3DragonFortress, line 38")
    set YW = XQt("when calling new_LinkedList in Imp3DragonFortress, line 39")
    set GW = jts("when calling new_HashMap in Imp3DragonFortress, line 41")
    set gW = XQt("when calling new_LinkedList in Imp3DragonFortress, line 42")
    set hW = jts("when calling new_HashMap in Imp3DragonFortress, line 43")
    set kW = 0
    set jW = 0
    set xW = 0
    set vW = xMr("when calling new_IterableMap in Imp3DragonFortress, line 48")
    set mW = xMr("when calling new_IterableMap in Imp3DragonFortress, line 49")
    set QW = XQt("when calling new_LinkedList in Imp3DragonFortress, line 50")
    set WW = 3500000
    set EW =- 1
    set Gqr = 0.
    set gqr = 0.
    set ZW = Gqr
    set UW = gqr
    set IW = false
    set PW = false
    set AW = 0
    set Aer = jts("when calling new_HashMap in Imp3DragonFortress, line 64")
    call GVw(Aer, $00000001, Ici(Il), "when calling put in Imp3DragonFortress, line 65")
    set Der = Aer
    call GVw(Der, $00000002, Ici(Pl), "when calling put in Imp3DragonFortress, line 66")
    set Her = Der
    call GVw(Her, $00000003, Ici(Al), "when calling put in Imp3DragonFortress, line 67")
    set Jer = Her
    call GVw(Jer, $00000004, Ici(Dl), "when calling put in Imp3DragonFortress, line 68")
    set DW = Jer
    set Ker = jts("when calling new_HashMap in Imp3DragonFortress, line 70")
    call GVw(Ker, Ici(Il), err("Fire", "when calling stringToIndex in Imp3DragonFortress, line 71"), "when calling put in Imp3DragonFortress, line 71")
    set Ler = Ker
    call GVw(Ler, Ici(Pl), err("Death", "when calling stringToIndex in Imp3DragonFortress, line 72"), "when calling put in Imp3DragonFortress, line 72")
    set Xer = Ler
    call GVw(Xer, Ici(Al), err("Lightning", "when calling stringToIndex in Imp3DragonFortress, line 73"), "when calling put in Imp3DragonFortress, line 73")
    set Cer = Xer
    call GVw(Cer, Ici(Dl), err("Frost", "when calling stringToIndex in Imp3DragonFortress, line 74"), "when calling put in Imp3DragonFortress, line 74")
    set HW = Cer
    set Ver = jts("when calling new_HashMap in Imp3DragonFortress, line 76")
    call GVw(Ver, Ici(Il), Ici(jl), "when calling put in Imp3DragonFortress, line 77")
    set Ber = Ver
    call GVw(Ber, Ici(Pl), Ici(vl), "when calling put in Imp3DragonFortress, line 78")
    set Ner = Ber
    call GVw(Ner, Ici(Al), Ici(Ql), "when calling put in Imp3DragonFortress, line 79")
    set Mer = Ner
    call GVw(Mer, Ici(Dl), Ici(El), "when calling put in Imp3DragonFortress, line 80")
    set JW = Mer
    set wqr = jts("when calling new_HashMap in Imp3DragonFortress, line 82")
    call GVw(wqr, Ici(Il), B5r(0.), "when calling put in Imp3DragonFortress, line 83")
    set uqr = wqr
    call GVw(uqr, Ici(Pl), B5r(0.), "when calling put in Imp3DragonFortress, line 84")
    set rqr = uqr
    call GVw(rqr, Ici(Al), B5r(0.), "when calling put in Imp3DragonFortress, line 85")
    set sqr = rqr
    call GVw(sqr, Ici(Dl), B5r(0.), "when calling put in Imp3DragonFortress, line 86")
    set KW = sqr
    set tqr = xMr("when calling new_IterableMap in Imp3DragonFortress, line 87")
    call iUr(tqr, Ici(Il), cGt(ZPs("when calling getTimer in Imp3DragonFortress, line 88")), "when calling put in Imp3DragonFortress, line 88")
    set iqr = tqr
    call iUr(iqr, Ici(Pl), cGt(ZPs("when calling getTimer in Imp3DragonFortress, line 89")), "when calling put in Imp3DragonFortress, line 89")
    set Sqr = iqr
    call iUr(Sqr, Ici(Al), cGt(ZPs("when calling getTimer in Imp3DragonFortress, line 90")), "when calling put in Imp3DragonFortress, line 90")
    set cqr = Sqr
    call iUr(cqr, Ici(Dl), cGt(ZPs("when calling getTimer in Imp3DragonFortress, line 91")), "when calling put in Imp3DragonFortress, line 91")
    set LW = cqr
    set oqr = xMr("when calling new_IterableMap in Imp3DragonFortress, line 93")
    call iUr(oqr, bVw(K2S(Il)), Ici(Il), "when calling put in Imp3DragonFortress, line 94")
    set Oqr = oqr
    call iUr(Oqr, bVw(K2S(Pl)), Ici(Pl), "when calling put in Imp3DragonFortress, line 95")
    set lqr = Oqr
    call iUr(lqr, bVw(K2S(Al)), Ici(Al), "when calling put in Imp3DragonFortress, line 96")
    set bqr = lqr
    call iUr(bqr, bVw(K2S(Dl)), Ici(Dl), "when calling put in Imp3DragonFortress, line 97")
    call xMr("when calling new_IterableMap in Imp3DragonFortress, line 99")
    set XW = 0
    call l2s(Iji("U00I", "when calling unObfuscate in Imp3DragonFortress, line 103"), "when calling fromRawCode in Imp3DragonFortress, line 103")
    call l2s(Iji("A09P", "when calling unObfuscate in Imp3DragonFortress, line 104"), "when calling fromRawCode in Imp3DragonFortress, line 104")
    set yqr = XQt("when calling new_LinkedList in Imp3DragonFortress, line 105")
    call vwt(yqr, l2s(Iji("BSTN", "when calling unObfuscate in Imp3DragonFortress, line 105"), "when calling fromRawCode in Imp3DragonFortress, line 105"), "when calling add in Imp3DragonFortress, line 105")
    set pqr = yqr
    call vwt(pqr, l2s(Iji("BPSE", "when calling unObfuscate in Imp3DragonFortress, line 105"), "when calling fromRawCode in Imp3DragonFortress, line 105"), "when calling add in Imp3DragonFortress, line 105")
    set eqr = pqr
    call vwt(eqr, l2s(Iji("BUst", "when calling unObfuscate in Imp3DragonFortress, line 105"), "when calling fromRawCode in Imp3DragonFortress, line 105"), "when calling add in Imp3DragonFortress, line 105")
    set qqr = eqr
    call vwt(qqr, l2s(Iji("BUsl", "when calling unObfuscate in Imp3DragonFortress, line 105"), "when calling fromRawCode in Imp3DragonFortress, line 105"), "when calling add in Imp3DragonFortress, line 105")
    set aqr = qqr
    call vwt(aqr, l2s(Iji("B01V", "when calling unObfuscate in Imp3DragonFortress, line 105"), "when calling fromRawCode in Imp3DragonFortress, line 105"), "when calling add in Imp3DragonFortress, line 105")
    set nqr = aqr
    call vwt(nqr, l2s(Iji("B012", "when calling unObfuscate in Imp3DragonFortress, line 105"), "when calling fromRawCode in Imp3DragonFortress, line 105"), "when calling add in Imp3DragonFortress, line 105")
    set dqr = nqr
    call vwt(dqr, l2s(Iji("B00O", "when calling unObfuscate in Imp3DragonFortress, line 105"), "when calling fromRawCode in Imp3DragonFortress, line 105"), "when calling add in Imp3DragonFortress, line 105")
    set CW = dqr
    set VW = MNu(ORIGIN_FRAME_WORLD_FRAME, $00000000)
    set BW = null
    set NW = null
    set MW = null
    set wE = null
    set uE = null
    set rE = null
    set hqr = 255
    set Fqr = 255
    set kqr = 255
    set sE = hqr
    set tE = Fqr
    set iE = kqr
    set jqr = "war3mapImported\\PillarOfFlameOrange.mdl"
    set xqr = 0.5
    set vqr = 2.
    set mqr = 255
    set Qqr = 255
    set Wqr = 255
    set Eqr =- 1.
    set Zqr = 0.
    set SE = jqr
    set cE = xqr
    set oE = vqr
    set OE = mqr
    set lE = Qqr
    set bE = Wqr
    set yE = Eqr
    set pE = Zqr
    set Uqr = "war3mapImported\\PillarOfFlameGreen.mdl"
    set Iqr = 0.5
    set Pqr = 2.
    set Aqr = 255
    set Dqr = 255
    set Hqr = 255
    set Jqr =- 1.
    set Kqr = 0.
    set eE = Uqr
    set qE = Iqr
    set aE = Pqr
    set nE = Aqr
    set dE = Dqr
    set fE = Hqr
    set RE = Jqr
    set TE = Kqr
    set Lqr = "war3mapImported\\Great Lightning.mdl"
    set Xqr = 1.
    set Cqr = 2.
    set Vqr = 255
    set Bqr = 255
    set Nqr = 255
    set Mqr =- 1.
    set war = 0.
    set YE = Lqr
    set GE = Xqr
    set gE = Cqr
    set hE = Vqr
    set FE = Bqr
    set kE = Nqr
    set jE = Mqr
    set xE = war
    set uar = "war3mapImported\\Lightnings.mdl"
    set rar = 1.
    set sar = 2.
    set tar = 255
    set iar = 255
    set Sar = 255
    set car =- 1.
    set oar = 0.
    set vE = uar
    set mE = rar
    set QE = sar
    set WE = tar
    set EE = iar
    set ZE = Sar
    set UE = car
    set IE = oar
    set Oar = "Abilities\\Spells\\Other\\Monsoon\\MonsoonBoltTarget.mdl"
    set lar = 1.
    set bar = 2.
    set yar = 255
    set par = 255
    set ear = 255
    set qar =- 1.
    set aar = 0.
    set PE = Oar
    set AE = lar
    set DE = bar
    set HE = yar
    set JE = par
    set KE = ear
    set LE = qar
    set XE = aar
    set nar = "Objects\\Spawnmodels\\Naga\\NagaDeath\\NagaDeath.mdl"
    set dar = 0.5
    set far = 2.
    set Rar = 255
    set Tar = 255
    set Yar = 255
    set Gar =- 1.
    set gar = 0.
    set CE = nar
    set VE = dar
    set BE = far
    set NE = Rar
    set ME = Tar
    set wZ = Yar
    set uZ = Gar
    set rZ = gar
    set har = "war3mapImported\\PillarOfFlameBlue.mdl"
    set Far = 0.5
    set kar = 2.
    set jar = 255
    set xar = 255
    set mar = 255
    set Qar =- 1.
    set War = 0.
    set sZ = har
    set tZ = Far
    set iZ = kar
    set SZ = jar
    set cZ = xar
    set oZ = mar
    set OZ = Qar
    set lZ = War
    set yZ = null
    set pZ = null
    set eZ = null
    set qZ = null
    set aZ = null
    set nZ = null
    set dZ = null
    set fZ = null
    set RZ = false
    set TZ = false
    set YZ = false
    set GZ = false
    set gZ = GetRectCenter(kl)
    set hZ = false
    set Ear = oQu(ib)
    set Zar = Gcw
    set FZ = Ear
    set kZ = Zar
    set Uar = oQu(Sb)
    set Iar = Gcw
    set jZ = Uar
    set xZ = Iar
    call UOS($00000001, "when calling getGroup in Imp3DragonFortress, line 1259")
    call UOS($00000001, "when calling getGroup in Imp3DragonFortress, line 1260")
    set mZ = jts("when calling new_HashMap in Imp3DragonFortress, line 1262")
    set QZ = jts("when calling new_HashMap in Imp3DragonFortress, line 1263")
    set WZ = false
    set fqr = CreateTrigger()
    set Rqr = 0
    set Tqr = Lh
    loop
        exitwhen Rqr > Tqr
        call Ebs(fqr, aD[Rqr], "-tah", true)
        call Ebs(fqr, aD[Rqr], "-testarrow", true)
        call Ebs(fqr, aD[Rqr], "-maze ", false)
        set Rqr = Rqr + 1
    endloop
    call B2S(fqr, Xmw)
    set EZ[$00000000] = "Phew!"
    set EZ[$00000001] = "Dodged!"
    set EZ[$00000002] = "I made it!"
    set EZ[$00000003] = "One, Two, Three... Easy!"
    set EZ[$00000004] = "Come here!"
    set EZ[$00000005] = "Nice Dodge!"
    set EZ[$00000006] = "Lightspeed!"
    set EZ[$00000007] = "Almost got me!"
    set ZZ[$00000000] = "Slipped!"
    set ZZ[$00000001] = "Blinded!"
    set ZZ[$00000002] = "Overdodge!"
    set ZZ[$00000003] = "Missclick!"
    set ZZ[$00000004] = "Misstepped!"
    set ZZ[$00000005] = "Freefall!"
    set ZZ[$00000006] = "Ups..."
    set ZZ[$00000007] = "ByeBye!"
    set ZZ[$00000008] = "This is not over!"
    set ZZ[$00000009] = "Maybe next time!"
    set Yqr = k7w("when calling alloc_CallbackSingle_doAfter_Imp3DragonFortress in Imp3DragonFortress, line 1643")
    call RUs(Yqr)
    call Ybr(1., Yqr, "when calling doAfter in Imp3DragonFortress, line 1643")
    set ASw = ASw - 1
    set fqr = null
    return true
endfunction
function ANs takes nothing returns boolean
    set ASw = 0
    return Par("via function reference Imp3DragonFortress, line 1")
endfunction
function hgr takes player ggr returns integer
    return GetPlayerId(ggr)
endfunction
function xus takes integer Fus, string kus returns integer
    local integer jus
    set DSw[ASw] = kus
    set ASw = ASw + 1
    set jus = wps(qD, Fus, "when calling get in PlayerRegistry, line 27")
    set ASw = ASw - 1
    return jus
endfunction
function GgS takes player RgS, string TgS returns integer
    local integer YgS
    set DSw[ASw] = TgS
    set ASw = ASw + 1
    set YgS = xus(hgr(RgS), "when calling getCustomPlayer in PlayerUtils, line 83")
    set ASw = ASw - 1
    return YgS
endfunction
function cht takes integer tht, integer iht returns boolean
    local integer Sht = Cww[wuw[tht]]
    loop
        exitwhen not(Sht != wuw[tht])
        if Lww[Sht] == iht then
            return true
        endif
        set Sht = Cww[Sht]
    endloop
    return false
endfunction
function GpS takes integer fpS, integer RpS, string TpS returns boolean
    local boolean YpS
    set DSw[ASw] = TpS
    set ASw = ASw + 1
    if yN[fpS] == 0 then
        if fpS == 0 then
            call tNr("Nullpointer exception when calling LinkedList.has", "when calling error in LinkedList, line 118")
        else
            call tNr("Called LinkedList.has on invalid object.", "when calling error in LinkedList, line 118")
        endif
    endif
    set YpS = cht(fpS, RpS)
    set ASw = ASw - 1
    return YpS
endfunction
function J7i takes unit A7i, real D7i, real H7i returns nothing
    call SetUnitPosition(A7i, D7i, H7i)
endfunction
function giS takes unit YiS, unittype GiS returns boolean
    return IsUnitType(YiS, GiS)
endfunction
function boS takes unit OoS returns integer
    local integer loS
    if giS(OoS, UNIT_TYPE_HERO) then
        set loS = GetHeroLevel(OoS)
    else
        set loS = GetUnitLevel(OoS)
    endif
    return loS
endfunction
function dii takes string qii, real aii, player nii returns nothing
    call DisplayTimedTextToPlayer(nii, 0., 0., aii, qii)
endfunction
function eDs takes unit pDs returns player
    return GetOwningPlayer(pDs)
endfunction
function WNu takes integer mNu, string QNu returns nothing
    set DSw[ASw] = QNu
    set ASw = ASw + 1
    if tN[mNu] == 0 then
        call tNr("Double free: object of type LLEntry", "when calling error in LinkedList, line 411")
    else
        set uN[rN] = mNu
        set rN = rN + 1
        set tN[mNu] = 0
    endif
    set ASw = ASw - 1
endfunction
function nNw takes integer aNw returns nothing
endfunction
function nPs takes integer qPs, string aPs returns nothing
    set DSw[ASw] = aPs
    set ASw = ASw + 1
    call nNw(qPs)
    call WNu(qPs, "when calling dealloc_LLEntry in LinkedList, line 411")
    set ASw = ASw - 1
endfunction
function n4s takes integer q4s, string a4s returns nothing
    set DSw[ASw] = a4s
    set ASw = ASw + 1
    if tN[q4s] == 0 then
        if q4s == 0 then
            call tNr("Nullpointer exception when calling LLEntry.LLEntry", "when calling error in LinkedList, line 411")
        else
            call tNr("Called LLEntry.LLEntry on invalid object.", "when calling error in LinkedList, line 411")
        endif
    endif
    call nPs(q4s, "when calling destroyLLEntry in LinkedList, line 411")
    set ASw = ASw - 1
endfunction
function aYt takes integer pYt, integer eYt, string qYt returns nothing
    set DSw[ASw] = qYt
    set ASw = ASw + 1
    set Cww[Xww[eYt]] = Cww[eYt]
    set Xww[Cww[eYt]] = Xww[eYt]
    call n4s(eYt, "when calling dispatch_LLEntry_destroyLLEntry in LinkedList, line 391")
    set uuw[pYt] = uuw[pYt] - 1
    set ASw = ASw - 1
endfunction
function aUi takes integer pUi, integer eUi, string qUi returns nothing
    set DSw[ASw] = qUi
    set ASw = ASw + 1
    if yN[pUi] == 0 then
        if pUi == 0 then
            call tNr("Nullpointer exception when calling LinkedList.removeEntry", "when calling error in LinkedList, line 388")
        else
            call tNr("Called LinkedList.removeEntry on invalid object.", "when calling error in LinkedList, line 388")
        endif
    endif
    call aYt(pUi, eUi, "when calling removeEntry in LinkedList, line 388")
    set ASw = ASw - 1
endfunction
function jFu takes integer gFu, integer hFu, string FFu returns nothing
    local integer kFu
    set DSw[ASw] = FFu
    set ASw = ASw + 1
    set kFu = Cww[wuw[gFu]]
    loop
        exitwhen not(kFu != wuw[gFu])
        if Lww[kFu] == hFu then
            call aUi(gFu, kFu, "when calling removeEntry in LinkedList, line 141")
            set ASw = ASw - 1
            return
        endif
        set kFu = Cww[kFu]
    endloop
    set ASw = ASw - 1
endfunction
function eys takes integer bys, integer yys, string pys returns nothing
    set DSw[ASw] = pys
    set ASw = ASw + 1
    if yN[bys] == 0 then
        if bys == 0 then
            call tNr("Nullpointer exception when calling LinkedList.remove", "when calling error in LinkedList, line 137")
        else
            call tNr("Called LinkedList.remove on invalid object.", "when calling error in LinkedList, line 137")
        endif
    endif
    call jFu(bys, yys, "when calling remove in LinkedList, line 137")
    set ASw = ASw - 1
endfunction
function Lar takes integer Kar returns unit
    return mM[Kar]
endfunction
function hqs takes integer Yqs, string Gqs returns unit
    local unit gqs
    set DSw[ASw] = Gqs
    set ASw = ASw + 1
    if MC[Yqs] == 0 then
        if Yqs == 0 then
            call tNr("Nullpointer exception when calling CustomHero.getHero", "when calling error in CustomHero, line 111")
        else
            call tNr("Called CustomHero.getHero on invalid object.", "when calling error in CustomHero, line 111")
        endif
    endif
    set gqs = Lar(Yqs)
    set ASw = ASw - 1
    set aPw = gqs
    set gqs = null
    return aPw
endfunction
function s5r takes integer r5r returns integer
    return w3[r5r]
endfunction
function xMi takes integer FMi, string kMi returns integer
    local integer jMi
    set DSw[ASw] = kMi
    set ASw = ASw + 1
    if bV[FMi] == 0 then
        if FMi == 0 then
            call tNr("Nullpointer exception when calling CustomPlayer.getCHero", "when calling error in CustomPlayer, line 71")
        else
            call tNr("Called CustomPlayer.getCHero on invalid object.", "when calling error in CustomPlayer, line 71")
        endif
    endif
    set jMi = s5r(FMi)
    set ASw = ASw - 1
    return jMi
endfunction
function GlS takes unit ylS, integer plS, boolean elS, string qlS returns nothing
    local player alS
    local integer nlS
    local integer dlS
    local integer flS
    local unit RlS
    local boolean TlS
    local integer YlS
    set DSw[ASw] = qlS
    set ASw = ASw + 1
    set alS = eDs(ylS)
    set nlS = hgr(alS)
    if GpS(gQ, nlS, "when calling has in RevivalLocations, line 27") then
        set dlS = GgS(alS, "when calling getCustomPlayer in RevivalLocations, line 28")
        set flS = xMi(dlS, "when calling getCHero in RevivalLocations, line 29")
        set RlS = hqs(flS, "when calling getHero in RevivalLocations, line 30")
        if RlS == ylS and RlS != null then
            set TlS = false
            set YlS = plS
            if YlS == 0 then
    if not GpS(iH, nlS, "when calling has in RevivalLocations, line 36") then
                    call vwt(iH, nlS, "when calling add in RevivalLocations, line 37")
                    call eys(SH, nlS, "when calling remove in RevivalLocations, line 38")
                    call eys(cH, nlS, "when calling remove in RevivalLocations, line 39")
                    call eys(oH, nlS, "when calling remove in RevivalLocations, line 40")
                    call eys(OH, nlS, "when calling remove in RevivalLocations, line 41")
                    set yr[1 + nlS] = GetRectCenter(Sp)
                    set TlS = true
    endif
            elseif YlS == 1 then
    if not GpS(SH, nlS, "when calling has in RevivalLocations, line 45") then
                    call eys(iH, nlS, "when calling remove in RevivalLocations, line 46")
                    call vwt(SH, nlS, "when calling add in RevivalLocations, line 47")
                    call eys(cH, nlS, "when calling remove in RevivalLocations, line 48")
                    call eys(oH, nlS, "when calling remove in RevivalLocations, line 49")
                    call eys(OH, nlS, "when calling remove in RevivalLocations, line 50")
                    set yr[1 + nlS] = GetRectCenter(ip)
                    set TlS = true
    endif
            elseif YlS == 2 then
    if not GpS(cH, nlS, "when calling has in RevivalLocations, line 54") then
                    call eys(iH, nlS, "when calling remove in RevivalLocations, line 55")
                    call eys(SH, nlS, "when calling remove in RevivalLocations, line 56")
                    call vwt(cH, nlS, "when calling add in RevivalLocations, line 57")
                    call eys(oH, nlS, "when calling remove in RevivalLocations, line 58")
                    call eys(OH, nlS, "when calling remove in RevivalLocations, line 59")
                    set yr[1 + nlS] = GetRectCenter(tp)
                    set TlS = true
    endif
            elseif YlS == 3 then
    if boS(RlS) < 100 then
                    if not elS then
                        call dii("|cffffcc00You are too weak to enter the Unknown Regions.|r", 4., alS)
                    endif
                    call J7i(RlS, oQu(tp), Gcw)
    elseif not GpS(oH, nlS, "when calling has in RevivalLocations, line 67") then
                    call eys(iH, nlS, "when calling remove in RevivalLocations, line 68")
                    call eys(SH, nlS, "when calling remove in RevivalLocations, line 69")
                    call eys(cH, nlS, "when calling remove in RevivalLocations, line 70")
                    call vwt(oH, nlS, "when calling add in RevivalLocations, line 71")
                    call eys(OH, nlS, "when calling remove in RevivalLocations, line 72")
                    set yr[1 + nlS] = GetRectCenter(Op)
                    set TlS = true
    endif
            elseif YlS == 4 then
    if not GpS(OH, nlS, "when calling has in RevivalLocations, line 76") then
                    call eys(iH, nlS, "when calling remove in RevivalLocations, line 77")
                    call eys(SH, nlS, "when calling remove in RevivalLocations, line 78")
                    call eys(cH, nlS, "when calling remove in RevivalLocations, line 79")
                    call eys(oH, nlS, "when calling remove in RevivalLocations, line 80")
                    call vwt(OH, nlS, "when calling add in RevivalLocations, line 81")
                    set yr[1 + nlS] = GetRectCenter(lp)
                    set TlS = true
    endif
            endif
            if TlS and(not elS) then
    call dii("Revival Point Saved.", 4., alS)
            endif
        endif
    endif
    set ASw = ASw - 1
    set alS = null
    set RlS = null
endfunction
function ZLt takes string ELt returns nothing
    set DSw[ASw] = ELt
    set ASw = ASw + 1
    call GlS(GetTriggerUnit(), $00000000, false, "when calling onRevivalLocationEntered in RevivalLocations, line 120")
    set ASw = ASw - 1
endfunction
function AOt takes nothing returns nothing
    set ASw = 0
    call ZLt("via function reference RevivalLocations, line 119")
endfunction
function AOu takes nothing returns nothing
    call ForceAddPlayer(Gs, GetOwningPlayer(GetTriggerUnit()))
    call ForceAddPlayer(Cr, GetOwningPlayer(GetTriggerUnit()))
    call DisplayTextToForce(MwS(GetOwningPlayer(GetTriggerUnit())), "|cffffcc00Luna|r : |cff87ceebWhy have you bothered me, Hunter? I do not have time for the likes of...What? A recommendation? From me? Do you know who I am? Well, it doesn't matter, does it? If you want a letter of recommendation, you have to prove that you are worthy of it. After all, people whom I recommended can't be useless can they? Hunt down the Lord of Puzzles and end his life. Bring me his bony hand and you shall receive my recommendation.")
    call QuestSetDescription(Lr[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))], "I need to hunt down and slay the Lord of Puzzles. From his name, I can infer that he is probably a dungeon boss...")
endfunction
function APi takes nothing returns nothing
    call DisplayTextToForce(MwS(GetOwningPlayer(GetTriggerUnit())), "|cffffcc00Class Trainer|r : |cff87ceebAh, a novice Witch Hunter! We differ from the rest, you know, as mutants. Although we seek to ferret out justice and destroy monsters, we are after all, mutants and different from the rest. This is a very difficult path, Witch Hunter, but from now onwards, you shall be a slayer.")
    call PlaySoundBJ(re)
    call SetHeroLevelBJ(GetTriggerUnit(), $00000001, false)
    call ReplaceUnitBJ(GetTriggerUnit(), $4830304D, $00000002)
    call SelectUnitForPlayerSingle(bj_lastReplacedUnit, GetOwningPlayer(GetTriggerUnit()))
    call SetHeroLevel(bj_lastReplacedUnit, $00000001, true)
    call UnitStripHeroLevel(bj_lastReplacedUnit, $00000001)
endfunction
function r5S takes unit u5S returns integer
    return GetUnitTypeId(u5S)
endfunction
function I8w takes string Z8w returns boolean
    local boolean U8w
    set DSw[ASw] = Z8w
    set ASw = ASw + 1
    set U8w = r5S(GetEnumUnit()) == l2s(Iji("U007", "when calling unObfuscate in Imp1_InitCooldown, line 10"), "when calling fromRawCode in Imp1_InitCooldown, line 10")
    set ASw = ASw - 1
    return U8w
endfunction
function APs takes nothing returns boolean
    set ASw = 0
    return I8w("via function reference Imp1_InitCooldown, line 14")
endfunction
function APu takes nothing returns boolean
    set PF = 0
    return true
endfunction
function EMi takes nothing returns boolean
    return Ss[1 + GetPlayerId(GetOwningPlayer(GetKillingUnit()))] >= 3
endfunction
function AQu takes nothing returns nothing
    set Ss[1 + GetPlayerId(GetOwningPlayer(GetKillingUnit()))] = Ss[1 + GetPlayerId(GetOwningPlayer(GetKillingUnit()))] + 1
    if EMi() then
        call QuestMessageBJ(MwS(GetOwningPlayer(GetKillingUnit())), $00000002, "|cffffcc00Satyr Extermination|r Quest Requirement Completed.")
    else
        call QuestMessageBJ(MwS(GetOwningPlayer(GetKillingUnit())), $00000001, I2S(Ss[1 + GetPlayerId(GetOwningPlayer(GetKillingUnit()))]) + " Aggressive Satyr(s) killed.")
    endif
endfunction
function Aei takes unit Pei returns integer
    return YEi(Pei)
endfunction
function Mvt takes unit Nvt returns nothing
    call ShowUnit(Nvt, false)
endfunction
function Tri takes unit Rri returns nothing
    call KillUnit(Rri)
endfunction
function uFr takes unit wFr returns nothing
    call RemoveUnit(wFr)
endfunction
function UwS takes string EwS returns nothing
    local unit ZwS
    set DSw[ASw] = EwS
    set ASw = ASw + 1
    set ZwS = GetTriggerUnit()
    if GpS(TW, Aei(ZwS), "when calling has in Imp3DragonFortress, line 1114") and(not GpS(YW, Aei(ZwS), "when calling has in Imp3DragonFortress, line 1114")) then
        call eys(TW, Aei(ZwS), "when calling remove in Imp3DragonFortress, line 1115")
        call vwt(YW, Aei(ZwS), "when calling add in Imp3DragonFortress, line 1116")
        call Mvt(ZwS)
        call J7i(ZwS, jZ, xZ)
    elseif GpS(YW, Aei(ZwS), "when calling has in Imp3DragonFortress, line 1119") then
        call Mvt(ZwS)
        call J7i(ZwS, jZ, xZ)
    else
        call Tri(ZwS)
        call uFr(ZwS)
    endif
    set ASw = ASw - 1
    set ZwS = null
endfunction
function ARu takes nothing returns nothing
    set ASw = 0
    call UwS("via function reference Imp3DragonFortress, line 1647")
endfunction
function AHt takes item PHt returns integer
    return GetItemLevel(PHt)
endfunction
function Hri takes item Dri returns itemtype
    return GetItemType(Dri)
endfunction
function dcs takes unit ncs returns integer
    return UnitInventorySize(ncs)
endfunction
function fmu takes item nmu, boolean dmu returns nothing
    call SetItemDroppable(nmu, dmu)
endfunction
function ofi takes unit Sfi, integer cfi returns item
    return UnitItemInSlot(Sfi, cfi)
endfunction
function Axu takes unit Exu, boolean Zxu returns nothing
    local integer Uxu = 0
    local integer Ixu = dcs(Exu) - 1
    local item Pxu
    loop
        exitwhen Uxu > Ixu
        set Pxu = ofi(Exu, Uxu)
        if Pxu != null then
            if Hri(Pxu) != ITEM_TYPE_PURCHASABLE and AHt(Pxu) != 125 then
    call fmu(Pxu, Zxu)
            endif
        endif
        set Uxu = Uxu + 1
    endloop
    set Pxu = null
endfunction
function BwS takes player LwS returns nothing
    local integer XwS = hgr(LwS)
    local integer CwS = 0
    local integer VwS = Lh
    loop
        exitwhen CwS > VwS
        if XwS != CwS then
            call SetPlayerAlliance(aD[XwS], aD[CwS], ALLIANCE_SHARED_CONTROL, false)
            call SetPlayerAlliance(aD[XwS], aD[CwS], ALLIANCE_SHARED_ADVANCED_CONTROL, false)
            call SetPlayerAlliance(aD[CwS], aD[XwS], ALLIANCE_SHARED_CONTROL, false)
            call SetPlayerAlliance(aD[CwS], aD[XwS], ALLIANCE_SHARED_ADVANCED_CONTROL, false)
        endif
        set CwS = CwS + 1
    endloop
endfunction
function oyS takes framehandle SyS, player cyS returns nothing
    if nD == cyS then
        call BlzFrameSetVisible(SyS, false)
    endif
endfunction
function D6i takes player A6i returns nothing
    call oyS(yX, A6i)
endfunction
function UVu takes integer EVu, string ZVu returns nothing
    set DSw[ASw] = ZVu
    set ASw = ASw + 1
    if YB[EVu] == 0 then
        call tNr("Double free: object of type HLIterator", "when calling error in HashList, line 125")
    else
        set fB[RB] = EVu
        set RB = RB + 1
        set YB[EVu] = 0
    endif
    set ASw = ASw - 1
endfunction
function Uki takes integer Zki returns nothing
endfunction
function eVr takes integer yVr, string pVr returns nothing
    set DSw[ASw] = pVr
    set ASw = ASw + 1
    call Uki(yVr)
    call UVu(yVr, "when calling dealloc_HLIterator in HashList, line 125")
    set ASw = ASw - 1
endfunction
function kNu takes integer hNu, string FNu returns nothing
    set DSw[ASw] = FNu
    set ASw = ASw + 1
    if YB[hNu] == 0 then
        if hNu == 0 then
            call tNr("Nullpointer exception when calling HLIterator.HLIterator", "when calling error in HashList, line 125")
        else
            call tNr("Called HLIterator.HLIterator on invalid object.", "when calling error in HashList, line 125")
        endif
    endif
    call eVr(hNu, "when calling destroyHLIterator in HashList, line 125")
    set ASw = ASw - 1
endfunction
function Ejr takes integer Qjr, string Wjr returns nothing
    set DSw[ASw] = Wjr
    set ASw = ASw + 1
    call kNu(Qjr, "when calling dispatch_HLIterator_destroyHLIterator in HashList, line 146")
    set ASw = ASw - 1
endfunction
function wOt takes integer Bot, integer Mot returns integer
    return JNr(NQ, Bot, Mot)
endfunction
function T5S takes integer n5S, integer d5S, string f5S returns integer
    local integer R5S
    set DSw[ASw] = f5S
    set ASw = ASw + 1
    if FB[n5S] == 0 then
        if n5S == 0 then
            call tNr("Nullpointer exception when calling HashList.get", "when calling error in HashList, line 79")
        else
            call tNr("Called HashList.get on invalid object.", "when calling error in HashList, line 79")
        endif
    endif
    set R5S = wOt(n5S, d5S)
    set ASw = ASw - 1
    return R5S
endfunction
function Gjs takes integer Rjs, string Tjs returns integer
    local integer Yjs
    set DSw[ASw] = Tjs
    set ASw = ASw + 1
    set t8[Rjs] = t8[Rjs] + 1
    set Yjs = T5S(i8[Rjs], t8[Rjs] - 1, "when calling get in HashList, line 140")
    set ASw = ASw - 1
    return Yjs
endfunction
function S3i takes integer i3i returns nothing
    call SetCameraFieldForPlayer(MM[i3i], CAMERA_FIELD_TARGET_DISTANCE, u3[i3i], 0.)
endfunction
function Gwt takes integer Twt, string Ywt returns nothing
    set DSw[ASw] = Ywt
    set ASw = ASw + 1
    if bV[Twt] == 0 then
        if Twt == 0 then
            call tNr("Nullpointer exception when calling CustomPlayer.resetCameraZoomLevel", "when calling error in CustomPlayer, line 159")
        else
            call tNr("Called CustomPlayer.resetCameraZoomLevel on invalid object.", "when calling error in CustomPlayer, line 159")
        endif
    endif
    call S3i(Twt)
    set ASw = ASw - 1
endfunction
function Qou takes hashtable jou, integer xou, integer vou, fogstate mou returns nothing
    call SaveFogStateHandle(jou, xou, vou, mou)
endfunction
function Got takes integer Rot, integer Tot, fogstate Yot returns nothing
    call Qou(qJ, Rot, Tot, Yot)
endfunction
function nfS takes integer pfS, integer efS, fogstate qfS, string afS returns nothing
    set DSw[ASw] = afS
    set ASw = ASw + 1
    if vB[pfS] == 0 then
        if pfS == 0 then
            call tNr("Nullpointer exception when calling Table.saveFogState", "when calling error in Table, line 168")
        else
            call tNr("Called Table.saveFogState on invalid object.", "when calling error in Table, line 168")
        endif
    endif
    call Got(pfS, efS, qfS)
    set ASw = ASw - 1
endfunction
function kuu takes hashtable guu, integer huu, integer Fuu returns effect
    return LoadEffectHandle(guu, huu, Fuu)
endfunction
function Olt takes integer clt, integer olt returns effect
    return kuu(qJ, clt, olt)
endfunction
function sgr takes integer MGr, integer wgr, string ugr returns effect
    local effect rgr
    set DSw[ASw] = ugr
    set ASw = ASw + 1
    if vB[MGr] == 0 then
        if MGr == 0 then
            call tNr("Nullpointer exception when calling Table.loadEffect", "when calling error in Table, line 159")
        else
            call tNr("Called Table.loadEffect on invalid object.", "when calling error in Table, line 159")
        endif
    endif
    set rgr = Olt(MGr, wgr)
    set ASw = ASw - 1
    set tPw = rgr
    set rgr = null
    return tPw
endfunction
function Aii takes integer Uii, string Iii returns effect
    local effect Pii
    set DSw[ASw] = Iii
    set ASw = ASw + 1
    call nfS(ZJ, $00000000, ConvertFogState(Uii), "when calling saveFogState in TypeCasting, line 151")
    set Pii = sgr(ZJ, $00000000, "when calling loadEffect in TypeCasting, line 152")
    set ASw = ASw - 1
    set dPw = Pii
    set Pii = null
    return dPw
endfunction
function I7S takes effect U7S returns nothing
    call DestroyEffect(U7S)
endfunction
function uxt takes integer Mjt, integer wxt returns nothing
    call RemoveSavedInteger(qJ, Mjt, wxt)
endfunction
function w1u takes integer B3u, integer N3u, string M3u returns nothing
    set DSw[ASw] = M3u
    set ASw = ASw + 1
    if vB[B3u] == 0 then
        if B3u == 0 then
            call tNr("Nullpointer exception when calling Table.removeInt", "when calling error in Table, line 24")
        else
            call tNr("Called Table.removeInt on invalid object.", "when calling error in Table, line 24")
        endif
    endif
    call uxt(B3u, N3u)
    set ASw = ASw - 1
endfunction
function YPu takes integer fPu, integer RPu, string TPu returns nothing
    set DSw[ASw] = TPu
    set ASw = ASw + 1
    if Jyr(fPu, RPu, "when calling has in HashMap, line 28") then
        set c8[fPu] = c8[fPu] - 1
    endif
    call w1u(fPu, RPu, "when calling removeInt in HashMap, line 30")
    set ASw = ASw - 1
endfunction
function Ccu takes integer Kcu, integer Lcu, string Xcu returns nothing
    set DSw[ASw] = Xcu
    set ASw = ASw + 1
    call dPu(MQ, Kcu, Lcu, inS(Kcu, Lcu, "when calling count in HashList, line 22") - 1)
    set ASw = ASw - 1
endfunction
function Hpr takes integer Ppr, integer Apr, string Dpr returns nothing
    set DSw[ASw] = Dpr
    set ASw = ASw + 1
    if FB[Ppr] == 0 then
        if Ppr == 0 then
            call tNr("Nullpointer exception when calling HashList.decrOccurences", "when calling error in HashList, line 21")
        else
            call tNr("Called HashList.decrOccurences on invalid object.", "when calling error in HashList, line 21")
        endif
    endif
    call Ccu(Ppr, Apr, "when calling decrOccurences in HashList, line 21")
    set ASw = ASw - 1
endfunction
function KbS takes integer PbS, integer AbS, string DbS returns nothing
    local integer HbS
    local integer JbS
    set DSw[ASw] = DbS
    set ASw = ASw + 1
    call Hpr(PbS, JNr(NQ, PbS, AbS), "when calling decrOccurences in HashList, line 54")
    set HbS = AbS
    set JbS = S8[PbS]
    loop
        exitwhen HbS > JbS
        call dPu(NQ, PbS, HbS, JNr(NQ, PbS, HbS + 1))
        set HbS = HbS + 1
    endloop
    set S8[PbS] = S8[PbS] - 1
    set ASw = ASw - 1
endfunction
function DWu takes integer IWu, integer PWu, string AWu returns nothing
    set DSw[ASw] = AWu
    set ASw = ASw + 1
    if FB[IWu] == 0 then
        if IWu == 0 then
            call tNr("Nullpointer exception when calling HashList.removeAt", "when calling error in HashList, line 53")
        else
            call tNr("Called HashList.removeAt on invalid object.", "when calling error in HashList, line 53")
        endif
    endif
    call KbS(IWu, PWu, "when calling removeAt in HashList, line 53")
    set ASw = ASw - 1
endfunction
function duu takes integer puu, integer euu, string quu returns nothing
    local integer auu
    local integer nuu
    set DSw[ASw] = quu
    set ASw = ASw + 1
    set auu = 0
    set nuu = S8[puu] - 1
    loop
        exitwhen auu > nuu
        if euu == JNr(NQ, puu, auu) then
            call DWu(puu, auu, "when calling removeAt in HashList, line 63")
            exitwhen true
        endif
        set auu = auu + 1
    endloop
    set ASw = ASw - 1
endfunction
function uQt takes integer Nmt, integer Mmt, string wQt returns nothing
    set DSw[ASw] = wQt
    set ASw = ASw + 1
    if FB[Nmt] == 0 then
        if Nmt == 0 then
            call tNr("Nullpointer exception when calling HashList.remove", "when calling error in HashList, line 60")
        else
            call tNr("Called HashList.remove on invalid object.", "when calling error in HashList, line 60")
        endif
    endif
    call duu(Nmt, Mmt, "when calling remove in HashList, line 60")
    set ASw = ASw - 1
endfunction
function e1r takes integer b1r, integer y1r, string p1r returns nothing
    set DSw[ASw] = p1r
    set ASw = ASw + 1
    call YPu(b1r, y1r, "when calling remove in HashMap, line 66")
    if LIr(b1r, y1r, "when calling hasKey in HashMap, line 67") then
        call uQt(o8[b1r], y1r, "when calling remove in HashMap, line 68")
    endif
    set ASw = ASw - 1
endfunction
function klS takes integer glS, integer hlS, string FlS returns nothing
    set DSw[ASw] = FlS
    set ASw = ASw + 1
    if vB[glS] == 0 then
        if glS == 0 then
            call tNr("Nullpointer exception when calling HashMap.remove", "when calling error in HashMap, line 27")
        else
            call tNr("Called HashMap.remove on invalid object.", "when calling error in HashMap, line 27")
        endif
    endif
    if vB[glS] <= 1278 then
        call YPu(glS, hlS, "when calling remove in HashMap, line 27")
    else
        call e1r(glS, hlS, "when calling remove in HashMap, line 27")
    endif
    set ASw = ASw - 1
endfunction
function Nqu takes integer Xqu, integer Cqu, string Vqu returns integer
    local integer Bqu
    set DSw[ASw] = Vqu
    set ASw = ASw + 1
    set Bqu = wps(Xqu, Cqu, "when calling get in HashMap, line 34")
    call klS(Xqu, Cqu, "when calling remove in HashMap, line 35")
    set ASw = ASw - 1
    return Bqu
endfunction
function H5S takes integer I5S, integer P5S, string A5S returns integer
    local integer D5S
    set DSw[ASw] = A5S
    set ASw = ASw + 1
    set D5S = Nqu(I5S, P5S, "when calling getAndRemove in HashMap, line 78")
    call uQt(o8[I5S], P5S, "when calling remove in HashMap, line 79")
    set ASw = ASw - 1
    return D5S
endfunction
function P_s takes integer E_s, integer Z_s, string U_s returns integer
    local integer I_s
    set DSw[ASw] = U_s
    set ASw = ASw + 1
    if vB[E_s] == 0 then
        if E_s == 0 then
            call tNr("Nullpointer exception when calling IterableMap.getAndRemove", "when calling error in HashMap, line 77")
        else
            call tNr("Called IterableMap.getAndRemove on invalid object.", "when calling error in HashMap, line 77")
        endif
    endif
    set I_s = H5S(E_s, Z_s, "when calling getAndRemove in HashMap, line 77")
    set ASw = ASw - 1
    return I_s
endfunction
function Mri takes real Nri returns real
    return Nri
endfunction
function WGi takes unit mGi, real QGi returns nothing
    call SetUnitPropWindow(mGi, Mri(QGi))
endfunction
function VRr takes real CRr returns real
    set JSw = CRr * JG
    return JSw
endfunction
function oVr takes unit cVr returns real
    set kow = VRr(GetUnitDefaultPropWindow(cVr))
    return kow
endfunction
function u5w takes integer N2w, integer M2w, string w5w returns nothing
    set DSw[ASw] = w5w
    set ASw = ASw + 1
    if vB[N2w] == 0 then
        if N2w == 0 then
            call tNr("Nullpointer exception when calling IterableMap.remove", "when calling error in HashMap, line 65")
        else
            call tNr("Called IterableMap.remove on invalid object.", "when calling error in HashMap, line 65")
        endif
    endif
    call e1r(N2w, M2w, "when calling remove in HashMap, line 65")
    set ASw = ASw - 1
endfunction
function Hus takes timer Dus returns nothing
    call PauseTimer(Dus)
endfunction
function PPi takes timer ZPi, string UPi returns integer
    local integer IPi
    set DSw[ASw] = UPi
    set ASw = ASw + 1
    set IPi = Ijt(hJ, cps(ZPi), "when calling loadInt in TimerUtils, line 22")
    set ASw = ASw - 1
    return IPi
endfunction
function HLr takes timer ALr, string DLr returns nothing
    set DSw[ASw] = DLr
    set ASw = ASw + 1
    if ALr == null then
        call tNr("Trying to release a null timer", "when calling error in TimerUtils, line 38")
        set ASw = ASw - 1
        return
    endif
    if PPi(ALr, "when calling getData in TimerUtils, line 40") == FJ then
        call tNr("ReleaseTimer: Double free!", "when calling error in TimerUtils, line 41")
        set ASw = ASw - 1
        return
    endif
    call tNu(ALr, FJ, "when calling setData in TimerUtils, line 43")
    call Hus(ALr)
    set GJ[gJ] = ALr
    set gJ = gJ + 1
    set ASw = ASw - 1
endfunction
function BVt takes integer CVt, string VVt returns nothing
    set DSw[ASw] = VVt
    set ASw = ASw + 1
    call HLr(jM[CVt], "when calling release in ClosureTimers, line 142")
    set ASw = ASw - 1
endfunction
function PPs takes integer UPs, string IPs returns nothing
    set DSw[ASw] = IPs
    set ASw = ASw + 1
    if DC[UPs] == 0 then
        call tNr("Double free: object of type CallbackPeriodic", "when calling error in ClosureTimers, line 127")
    else
        set IC[PC] = UPs
        set PC = PC + 1
        set DC[UPs] = 0
    endif
    set ASw = ASw - 1
endfunction
function m7S takes integer x7S, string v7S returns nothing
    set DSw[ASw] = v7S
    set ASw = ASw + 1
    call BVt(x7S, "when calling CallbackPeriodic_onDestroy in ClosureTimers, line 141")
    call PPs(x7S, "when calling dealloc_CallbackPeriodic in ClosureTimers, line 141")
    set ASw = ASw - 1
endfunction
function wHr takes integer NDr, string MDr returns nothing
    set DSw[ASw] = MDr
    set ASw = ASw + 1
    if DC[NDr] == 0 then
        if NDr == 0 then
            call tNr("Nullpointer exception when calling CallbackPeriodic.CallbackPeriodic", "when calling error in ClosureTimers, line 127")
        else
            call tNr("Called CallbackPeriodic.CallbackPeriodic on invalid object.", "when calling error in ClosureTimers, line 127")
        endif
    endif
    call m7S(NDr, "when calling destroyCallbackPeriodic in ClosureTimers, line 127")
    set ASw = ASw - 1
endfunction
function Rcu takes unit dcu, string fcu returns nothing
    set DSw[ASw] = fcu
    set ASw = ASw + 1
    if Jyr(lX, Aei(dcu), "when calling has in Voidless_mechanics, line 232") then
        if Aii(wps(lX, Aei(dcu), "when calling get in Voidless_mechanics, line 233"), "when calling effectFromIndex in Voidless_mechanics, line 233") != null then
            call I7S(Aii(wps(lX, Aei(dcu), "when calling get in Voidless_mechanics, line 234"), "when calling effectFromIndex in Voidless_mechanics, line 234"))
        endif
        call u5w(lX, Aei(dcu), "when calling remove in Voidless_mechanics, line 235")
        call WGi(dcu, oVr(dcu))
        if Jyr(tX, Aei(dcu), "when calling has in Voidless_mechanics, line 239") then
            call wHr(P_s(tX, Aei(dcu), "when calling getAndRemove in Voidless_mechanics, line 240"), "when calling dispatch_CallbackPeriodic_destroyCallbackPeriodic in Voidless_mechanics, line 240")
        endif
        call dii(SF + "You've managed to escape the grabbing hand!" + eF, 5., eDs(dcu))
        call D6i(eDs(dcu))
    endif
    set ASw = ASw - 1
endfunction
function Xjr takes effect Kjr, real Ljr returns nothing
    call BlzSetSpecialEffectZ(Kjr, Ljr)
endfunction
function XLw takes integer JLw, string KLw returns nothing
    local integer LLw
    set DSw[ASw] = KLw
    set ASw = ASw + 1
    set LLw = Cww[wuw[JLw]]
    loop
        exitwhen not(LLw != wuw[JLw])
        set LLw = Cww[LLw]
        call n4s(Xww[LLw], "when calling dispatch_LLEntry_destroyLLEntry in LinkedList, line 372")
    endloop
    set Cww[wuw[JLw]] = wuw[JLw]
    set Xww[wuw[JLw]] = wuw[JLw]
    set uuw[JLw] = 0
    set ASw = ASw - 1
endfunction
function u3w takes integer MMw, string w3w returns nothing
    set DSw[ASw] = w3w
    set ASw = ASw + 1
    if yN[MMw] == 0 then
        if MMw == 0 then
            call tNr("Nullpointer exception when calling LinkedList.clear", "when calling error in LinkedList, line 368")
        else
            call tNr("Called LinkedList.clear on invalid object.", "when calling error in LinkedList, line 368")
        endif
    endif
    call XLw(MMw, "when calling clear in LinkedList, line 368")
    set ASw = ASw - 1
endfunction
function Dns takes integer Uns, string Ins returns nothing
    local integer Pns
    local integer Ans
    set DSw[ASw] = Ins
    set ASw = ASw + 1
    set Ans = ML
    set Pns = Uns
    call u3w(Pns, "when calling clear in Voidless_mechanics, line 81")
    call vwt(Ans, Pns, "when calling add in Voidless_mechanics, line 81")
    set ASw = ASw - 1
endfunction
function gni takes hashtable Yni, integer Gni returns nothing
    call FlushChildHashtable(Yni, Gni)
endfunction
function lni takes integer Oni returns nothing
    call gni(qJ, Oni)
endfunction
function A8w takes integer P8w returns nothing
    set c8[P8w] = 0
    call lni(P8w)
endfunction
function K2w takes integer J2w returns nothing
    call gni(NQ, J2w)
    call gni(MQ, J2w)
    set S8[J2w] = 0
endfunction
function Uht takes integer Eht, string Zht returns nothing
    set DSw[ASw] = Zht
    set ASw = ASw + 1
    if FB[Eht] == 0 then
        if Eht == 0 then
            call tNr("Nullpointer exception when calling HashList.clear", "when calling error in HashList, line 43")
        else
            call tNr("Called HashList.clear on invalid object.", "when calling error in HashList, line 43")
        endif
    endif
    call K2w(Eht)
    set ASw = ASw - 1
endfunction
function H8r takes integer A8r, string D8r returns nothing
    set DSw[ASw] = D8r
    set ASw = ASw + 1
    if not O8[A8r]then
        call Uht(o8[A8r], "when calling clear in HashMap, line 73")
    endif
    call A8w(A8r)
    set ASw = ASw - 1
endfunction
function Hpi takes integer Api, string Dpi returns nothing
    set DSw[ASw] = Dpi
    set ASw = ASw + 1
    if vB[Api] == 0 then
        if Api == 0 then
            call tNr("Nullpointer exception when calling IterableMap.flush", "when calling error in HashMap, line 71")
        else
            call tNr("Called IterableMap.flush on invalid object.", "when calling error in HashMap, line 71")
        endif
    endif
    call H8r(Api, "when calling flush in HashMap, line 71")
    set ASw = ASw - 1
endfunction
function LXi takes integer KXi returns integer
    set Bww_215[KXi] = Cww[Bww_215[KXi]]
    return Lww[Bww_215[KXi]]
endfunction
function Tji takes integer Rji returns boolean
    return Cww[Bww_215[Rji]] != Vww_2373[Rji]
endfunction
function b9t takes lightning l9t returns boolean
    return DestroyLightning(l9t)
endfunction
function dci takes integer nci returns nothing
    set Mww_1397[nci] = true
endfunction
function kUt takes integer FUt returns integer
    return wuw[FUt]
endfunction
function hwr takes integer Ywr, string Gwr returns integer
    local integer gwr
    set DSw[ASw] = Gwr
    set ASw = ASw + 1
    if yN[Ywr] == 0 then
        if Ywr == 0 then
            call tNr("Nullpointer exception when calling LinkedList.getDummy", "when calling error in LinkedList, line 377")
        else
            call tNr("Called LinkedList.getDummy on invalid object.", "when calling error in LinkedList, line 377")
        endif
    endif
    set gwr = kUt(Ywr)
    set ASw = ASw - 1
    return gwr
endfunction
function t3t takes integer r3t, string s3t returns nothing
    set DSw[ASw] = s3t
    set ASw = ASw + 1
    set Vww_2373[r3t] = hwr(Nww_1498[r3t], "when calling getDummy in LinkedList, line 437")
    set Bww_215[r3t] = Vww_2373[r3t]
    set ASw = ASw - 1
endfunction
function mqs takes integer xqs, string vqs returns nothing
    set DSw[ASw] = vqs
    set ASw = ASw + 1
    if oN[xqs] == 0 then
        if xqs == 0 then
            call tNr("Nullpointer exception when calling LLIterator.reset", "when calling error in LinkedList, line 436")
        else
            call tNr("Called LLIterator.reset on invalid object.", "when calling error in LinkedList, line 436")
        endif
    endif
    call t3t(xqs, "when calling reset in LinkedList, line 436")
    set ASw = ASw - 1
endfunction
function Kvt takes integer Dvt, integer Hvt, string Jvt returns nothing
    set DSw[ASw] = Jvt
    set ASw = ASw + 1
    call dci(Dvt)
    set Nww_1498[Dvt] = Hvt
    call mqs(Dvt, "when calling reset in LinkedList, line 429")
    set ASw = ASw - 1
endfunction
function uCs takes string MXs returns integer
    local integer wCs
    set DSw[ASw] = MXs
    set ASw = ASw + 1
    if SN == 0 then
        if cN < 32768 then
            set cN = cN + 1
            set wCs = cN
            set oN[wCs] = 1213
        else
            call tNr("Out of memory: Could not create LLIterator.", "when calling error in LinkedList, line 421")
            set wCs = 0
        endif
    else
        set SN = SN - 1
        set wCs = iN[SN]
        set oN[wCs] = 1213
    endif
    set ASw = ASw - 1
    return wCs
endfunction
function w_s takes integer B0s, string N0s returns integer
    local integer M0s
    set DSw[ASw] = N0s
    set ASw = ASw + 1
    set M0s = uCs("when calling alloc_LLIterator in LinkedList, line 427")
    call Kvt(M0s, B0s, "when calling construct_LLIterator in LinkedList, line 427")
    set ASw = ASw - 1
    return M0s
endfunction
function c5r takes integer t5r, string i5r returns integer
    local integer S5r
    set DSw[ASw] = i5r
    set ASw = ASw + 1
    set S5r = w_s(t5r, "when calling new_LLIterator in LinkedList, line 180")
    set ASw = ASw - 1
    return S5r
endfunction
function Qer takes integer mer returns nothing
    set t8[mer] = 0
endfunction
function Xwr takes integer Kwr, integer Lwr returns nothing
    call Qer(Kwr)
    set i8[Kwr] = Lwr
endfunction
function wEu takes string NWu returns integer
    local integer MWu
    set DSw[ASw] = NWu
    set ASw = ASw + 1
    if RB == 0 then
        if TB < 32768 then
            set TB = TB + 1
            set MWu = TB
            set YB[MWu] = 1189
        else
            call tNr("Out of memory: Could not create HLIterator.", "when calling error in HashList, line 125")
            set MWu = 0
        endif
    else
        set RB = RB - 1
        set MWu = fB[RB]
        set YB[MWu] = 1189
    endif
    set ASw = ASw - 1
    return MWu
endfunction
function Utt takes integer Wtt, string Ett returns integer
    local integer Ztt
    set DSw[ASw] = Ett
    set ASw = ASw + 1
    set Ztt = wEu("when calling alloc_HLIterator in HashList, line 129")
    call Xwr(Ztt, Wtt)
    set ASw = ASw - 1
    return Ztt
endfunction
function ZKr takes integer QKr, string WKr returns integer
    local integer EKr
    set DSw[ASw] = WKr
    set ASw = ASw + 1
    set EKr = Utt(QKr, "when calling new_HLIterator in HashList, line 96")
    set ASw = ASw - 1
    return EKr
endfunction
function Eki takes integer mki, string Qki returns integer
    local integer Wki
    set DSw[ASw] = Qki
    set ASw = ASw + 1
    if FB[mki] == 0 then
        if mki == 0 then
            call tNr("Nullpointer exception when calling HashList.iterator", "when calling error in HashList, line 95")
        else
            call tNr("Called HashList.iterator on invalid object.", "when calling error in HashList, line 95")
        endif
    endif
    set Wki = ZKr(mki, "when calling iterator in HashList, line 95")
    set ASw = ASw - 1
    return Wki
endfunction
function gJi takes integer TJi, string YJi returns integer
    local integer GJi
    set DSw[ASw] = YJi
    set ASw = ASw + 1
    set GJi = Eki(o8[TJi], "when calling iterator in HashMap, line 84")
    set ASw = ASw - 1
    return GJi
endfunction
function V5w takes hashtable L5w, integer X5w, integer C5w returns unit
    return LoadUnitHandle(L5w, X5w, C5w)
endfunction
function Sgt takes integer tgt, integer igt returns unit
    return V5w(qJ, tgt, igt)
endfunction
function S0u takes integer r0u, integer s0u, string t0u returns unit
    local unit i0u
    set DSw[ASw] = t0u
    set ASw = ASw + 1
    if vB[r0u] == 0 then
        if r0u == 0 then
            call tNr("Nullpointer exception when calling Table.loadUnit", "when calling error in Table, line 75")
        else
            call tNr("Called Table.loadUnit on invalid object.", "when calling error in Table, line 75")
        endif
    endif
    set i0u = Sgt(r0u, s0u)
    set ASw = ASw - 1
    set hIw = i0u
    set i0u = null
    return hIw
endfunction
function iCu takes integer rCu, string sCu returns unit
    local unit tCu
    set DSw[ASw] = sCu
    set ASw = ASw + 1
    call nfS(ZJ, $00000000, ConvertFogState(rCu), "when calling saveFogState in TypeCasting, line 53")
    set tCu = S0u(ZJ, $00000000, "when calling loadUnit in TypeCasting, line 54")
    set ASw = ASw - 1
    set CIw = tCu
    set tCu = null
    return CIw
endfunction
function OJt takes unit cJt, boolean oJt returns nothing
    call SetUnitPathing(cJt, oJt)
endfunction
function Q_s takes unit v_s, integer m_s returns boolean
    return UnitRemoveAbility(v_s, m_s)
endfunction
function D4t takes integer P4t, player A4t returns nothing
    call ResetToGameCameraForPlayer(A4t, 0.)
endfunction
function eTu takes integer bTu, player yTu, string pTu returns nothing
    set DSw[ASw] = pTu
    set ASw = ASw + 1
    if UC[bTu] == 0 then
        if bTu == 0 then
            call tNr("Nullpointer exception when calling Camera.free", "when calling error in CameraUtils, line 64")
        else
            call tNr("Called Camera.free on invalid object.", "when calling error in CameraUtils, line 64")
        endif
    endif
    call D4t(bTu, yTu)
    set ASw = ASw - 1
endfunction
function gdr takes unit Tdr, real Ydr, real Gdr returns nothing
    call SetUnitFlyHeight(Tdr, Ydr, Gdr)
endfunction
function IKu takes integer UKu returns player
    return MM[UKu]
endfunction
function DCr takes integer ICr, string PCr returns player
    local player ACr
    set DSw[ASw] = PCr
    set ASw = ASw + 1
    if bV[ICr] == 0 then
        if ICr == 0 then
            call tNr("Nullpointer exception when calling CustomPlayer.getPlayer", "when calling error in CustomPlayer, line 118")
        else
            call tNr("Called CustomPlayer.getPlayer on invalid object.", "when calling error in CustomPlayer, line 118")
        endif
    endif
    set ACr = IKu(ICr)
    set ASw = ASw - 1
    set PIw = ACr
    set ACr = null
    return PIw
endfunction
function TMr takes integer dMr, player fMr, unit RMr returns nothing
    call SetCameraTargetControllerNoZForPlayer(fMr, RMr, 0., 0., false)
endfunction
function cor takes integer sor, player tor, unit ior, string Sor returns nothing
    set DSw[ASw] = Sor
    set ASw = ASw + 1
    if UC[sor] == 0 then
        if sor == 0 then
            call tNr("Nullpointer exception when calling Camera.lock", "when calling error in CameraUtils, line 67")
        else
            call tNr("Called Camera.lock on invalid object.", "when calling error in CameraUtils, line 67")
        endif
    endif
    call TMr(sor, tor, ior)
    set ASw = ASw - 1
endfunction
function wti takes integer Bsi, string Nsi returns nothing
    local unit Msi
    set DSw[ASw] = Nsi
    set ASw = ASw + 1
    if w3[Bsi] != 0 then
        set Msi = hqs(w3[Bsi], "when calling getHero in CustomPlayer, line 174")
        if Msi != null then
            call cor(Ng, DCr(Bsi, "when calling getPlayer in CustomPlayer, line 176"), Msi, "when calling lock in CustomPlayer, line 176")
            if not s3[Bsi]then
    call dii(Iji("|cffffcc00Camera locked.|r", "when calling unObfuscate in CustomPlayer, line 178"), 3., DCr(Bsi, "when calling getPlayer in CustomPlayer, line 178"))
            endif
            set s3[Bsi] = true
        endif
    endif
    set ASw = ASw - 1
    set Msi = null
endfunction
function WDr takes integer mDr, string QDr returns nothing
    set DSw[ASw] = QDr
    set ASw = ASw + 1
    if bV[mDr] == 0 then
        if mDr == 0 then
            call tNr("Nullpointer exception when calling CustomPlayer.cameraLock", "when calling error in CustomPlayer, line 172")
        else
            call tNr("Called CustomPlayer.cameraLock on invalid object.", "when calling error in CustomPlayer, line 172")
        endif
    endif
    call wti(mDr, "when calling cameraLock in CustomPlayer, line 172")
    set ASw = ASw - 1
endfunction
function J1s takes integer H1s returns boolean
    return s3[H1s]
endfunction
function dVw takes integer qVw, string aVw returns boolean
    local boolean nVw
    set DSw[ASw] = aVw
    set ASw = ASw + 1
    if bV[qVw] == 0 then
        if qVw == 0 then
            call tNr("Nullpointer exception when calling CustomPlayer.getCameraIsLockedIn", "when calling error in CustomPlayer, line 165")
        else
            call tNr("Called CustomPlayer.getCameraIsLockedIn on invalid object.", "when calling error in CustomPlayer, line 165")
        endif
    endif
    set nVw = J1s(qVw)
    set ASw = ASw - 1
    return nVw
endfunction
function OVu takes integer cVu, string oVu returns nothing
    set DSw[ASw] = oVu
    set ASw = ASw + 1
    if dVw(cVu, "when calling getCameraIsLockedIn in CustomPlayer, line 169") then
        call WDr(cVu, "when calling cameraLock in CustomPlayer, line 170")
    endif
    set ASw = ASw - 1
endfunction
function krS takes integer hrS, string FrS returns nothing
    set DSw[ASw] = FrS
    set ASw = ASw + 1
    if bV[hrS] == 0 then
        if hrS == 0 then
            call tNr("Nullpointer exception when calling CustomPlayer.cameraCheckLock", "when calling error in CustomPlayer, line 168")
        else
            call tNr("Called CustomPlayer.cameraCheckLock on invalid object.", "when calling error in CustomPlayer, line 168")
        endif
    endif
    call OVu(hrS, "when calling cameraCheckLock in CustomPlayer, line 168")
    set ASw = ASw - 1
endfunction
function qaS takes unit eaS returns nothing
    call PauseUnit(eaS, false)
endfunction
function qCt takes unit lCt, player bCt, string yCt returns nothing
    local integer pCt
    local integer eCt
    set DSw[ASw] = yCt
    set ASw = ASw + 1
    call qaS(lCt)
    call gdr(lCt, 0., 0.)
    call Q_s(lCt, $416D7266)
    call OJt(lCt, true)
    call D6i(bCt)
    call eTu(Ng, bCt, "when calling free in Voidless_mechanics, line 460")
    set pCt = GgS(bCt, "when calling getCustomPlayer in Voidless_mechanics, line 461")
    if pCt != 0 then
        set eCt = xMi(pCt, "when calling getCHero in Voidless_mechanics, line 464")
        if eCt != 0 and hqs(eCt, "when calling getHero in Voidless_mechanics, line 465") != null then
            call krS(pCt, "when calling cameraCheckLock in Voidless_mechanics, line 466")
        endif
    endif
    set ASw = ASw - 1
endfunction
function Vhs takes hashtable Lhs, integer Xhs, integer Chs returns lightning
    return LoadLightningHandle(Lhs, Xhs, Chs)
endfunction
function Cki takes integer Lki, integer Xki returns lightning
    return Vhs(qJ, Lki, Xki)
endfunction
function mDt takes integer kDt, integer jDt, string xDt returns lightning
    local lightning vDt
    set DSw[ASw] = xDt
    set ASw = ASw + 1
    if vB[kDt] == 0 then
        if kDt == 0 then
            call tNr("Nullpointer exception when calling Table.loadLightning", "when calling error in Table, line 213")
        else
            call tNr("Called Table.loadLightning on invalid object.", "when calling error in Table, line 213")
        endif
    endif
    set vDt = Cki(kDt, jDt)
    set ASw = ASw - 1
    set lPw = vDt
    set vDt = null
    return lPw
endfunction
function s1w takes integer w1w, string u1w returns lightning
    local lightning r1w
    set DSw[ASw] = u1w
    set ASw = ASw + 1
    set r1w = mDt(ZJ, w1w, "when calling loadLightning in TypeCasting, line 207")
    set ASw = ASw - 1
    set MIw = r1w
    set r1w = null
    return MIw
endfunction
function hWi takes integer gWi returns integer
    return S8[gWi]
endfunction
function qMw takes integer yMw, string pMw returns integer
    local integer eMw
    set DSw[ASw] = pMw
    set ASw = ASw + 1
    if FB[yMw] == 0 then
        if yMw == 0 then
            call tNr("Nullpointer exception when calling HashList.size", "when calling error in HashList, line 67")
        else
            call tNr("Called HashList.size on invalid object.", "when calling error in HashList, line 67")
        endif
    endif
    set eMw = hWi(yMw)
    set ASw = ASw - 1
    return eMw
endfunction
function slr takes integer wlr, string ulr returns boolean
    local boolean rlr
    set DSw[ASw] = ulr
    set ASw = ASw + 1
    set rlr = t8[wlr] < qMw(i8[wlr], "when calling size in HashList, line 133")
    set ASw = ASw - 1
    return rlr
endfunction
function GEr takes effect TEr, real YEr returns nothing
    call BlzSetSpecialEffectTime(TEr, YEr)
endfunction
function Wwu takes effect mwu, real Qwu returns nothing
    call BlzSetSpecialEffectScale(mwu, Qwu)
endfunction
function ZIr takes effect vIr, integer mIr, integer QIr, integer WIr, integer EIr returns nothing
    call BlzSetSpecialEffectColor(vIr, mIr, QIr, WIr)
    call BlzSetSpecialEffectAlpha(vIr, EIr)
endfunction
function iNw takes effect sNw, real tNw returns nothing
    call BlzSetSpecialEffectTimeScale(sNw, tNw)
endfunction
function rMw takes effect NNw, real MNw, real wMw, real uMw returns nothing
    call BlzSetSpecialEffectPosition(NNw, MNw, wMw, uMw)
endfunction
function uRi takes effect wRi returns nothing
    call Wwu(wRi, 0.0001)
    call ZIr(wRi, $00000000, $00000000, $00000000, $00000000)
    call rMw(wRi, HP, JP, - 500.)
    call GEr(wRi, 1.)
    call iNw(wRi, 10.)
    call I7S(wRi)
endfunction
function Fou takes integer gou, string hou returns nothing
    set DSw[ASw] = hou
    set ASw = ASw + 1
    if oN[gou] == 0 then
        call tNr("Double free: object of type LLIterator", "when calling error in LinkedList, line 421")
    else
        set iN[SN] = gou
        set SN = SN + 1
        set oN[gou] = 0
    endif
    set ASw = ASw - 1
endfunction
function jti takes integer kti returns nothing
endfunction
function Pgu takes integer Ugu, string Igu returns nothing
    set DSw[ASw] = Igu
    set ASw = ASw + 1
    call jti(Ugu)
    call Fou(Ugu, "when calling dealloc_LLIterator in LinkedList, line 421")
    set ASw = ASw - 1
endfunction
function LHw takes integer JHw, string KHw returns nothing
    set DSw[ASw] = KHw
    set ASw = ASw + 1
    if oN[JHw] == 0 then
        if JHw == 0 then
            call tNr("Nullpointer exception when calling LLIterator.LLIterator", "when calling error in LinkedList, line 421")
        else
            call tNr("Called LLIterator.LLIterator on invalid object.", "when calling error in LinkedList, line 421")
        endif
    endif
    call Pgu(JHw, "when calling destroyLLIterator in LinkedList, line 421")
    set ASw = ASw - 1
endfunction
function vms takes integer jms, string xms returns nothing
    set DSw[ASw] = xms
    set ASw = ASw + 1
    if Mww_1397[jms]then
        call LHw(jms, "when calling dispatch_LLIterator_destroyLLIterator in LinkedList, line 470")
    endif
    set ASw = ASw - 1
endfunction
function ibr takes string Hlr returns nothing
    local integer Jlr
    local unit Klr
    local integer Llr
    local unit Xlr
    local integer Clr
    local unit Vlr
    local integer Blr
    local unit Nlr
    local integer Mlr
    local unit wbr
    local integer ubr
    local unit rbr
    local integer sbr
    local unit tbr
    set DSw[ASw] = Hlr
    set ASw = ASw + 1
    set Jlr = gJi(lX, "when calling iterator in Voidless_mechanics, line 279")
    loop
        exitwhen not slr(Jlr, "when calling hasNext in Voidless_mechanics, line 279")
        set Klr = iCu(Gjs(Jlr, "when calling next in Voidless_mechanics, line 279"), "when calling unitFromIndex in Voidless_mechanics, line 279")
        call Rcu(Klr, "when calling invisibleProvidenceFree in Voidless_mechanics, line 280")
    endloop
    call Ejr(Jlr, "when calling close in Voidless_mechanics, line 279")
    set Llr = c5r(sX, "when calling iterator in Voidless_mechanics, line 282")
    loop
        exitwhen not Tji(Llr)
        set Xlr = iCu(LXi(Llr), "when calling unitFromIndex in Voidless_mechanics, line 282")
        call qCt(Xlr, eDs(Xlr), "when calling voidRiftBlackholeFree in Voidless_mechanics, line 283")
    endloop
    call vms(Llr, "when calling close in Voidless_mechanics, line 282")
    set Clr = gJi(iX, "when calling iterator in Voidless_mechanics, line 285")
    loop
        exitwhen not slr(Clr, "when calling hasNext in Voidless_mechanics, line 285")
        set Vlr = iCu(Gjs(Clr, "when calling next in Voidless_mechanics, line 285"), "when calling unitFromIndex in Voidless_mechanics, line 285")
        call uRi(Aii(wps(iX, Aei(Vlr), "when calling get in Voidless_mechanics, line 286"), "when calling effectFromIndex in Voidless_mechanics, line 286"))
    endloop
    call Ejr(Clr, "when calling close in Voidless_mechanics, line 285")
    set Blr = gJi(NL, "when calling iterator in Voidless_mechanics, line 288")
    loop
        exitwhen not slr(Blr, "when calling hasNext in Voidless_mechanics, line 288")
        set Nlr = iCu(Gjs(Blr, "when calling next in Voidless_mechanics, line 288"), "when calling unitFromIndex in Voidless_mechanics, line 288")
        set Mlr = c5r(wps(NL, Aei(Nlr), "when calling get in Voidless_mechanics, line 289"), "when calling iterator in Voidless_mechanics, line 289")
        loop
            exitwhen not Tji(Mlr)
            set wbr = iCu(LXi(Mlr), "when calling unitFromIndex in Voidless_mechanics, line 289")
            call uFr(wbr)
        endloop
        call vms(Mlr, "when calling close in Voidless_mechanics, line 289")
        call Dns(wps(NL, Aei(Nlr), "when calling get in Voidless_mechanics, line 291"), "when calling recycleRiftSpawnerLL in Voidless_mechanics, line 291")
        call uFr(Nlr)
    endloop
    call Ejr(Blr, "when calling close in Voidless_mechanics, line 288")
    set ubr = c5r(wX, "when calling iterator in Voidless_mechanics, line 294")
    loop
        exitwhen not Tji(ubr)
        set rbr = iCu(LXi(ubr), "when calling unitFromIndex in Voidless_mechanics, line 294")
        call uFr(rbr)
    endloop
    call vms(ubr, "when calling close in Voidless_mechanics, line 294")
    call u3w(wX, "when calling clear in Voidless_mechanics, line 296")
    set sbr = gJi(uX, "when calling iterator in Voidless_mechanics, line 298")
    loop
        exitwhen not slr(sbr, "when calling hasNext in Voidless_mechanics, line 298")
        set tbr = iCu(Gjs(sbr, "when calling next in Voidless_mechanics, line 298"), "when calling unitFromIndex in Voidless_mechanics, line 298")
        if Jyr(rX, Aei(tbr), "when calling has in Voidless_mechanics, line 299") then
            call b9t(s1w(wps(rX, Aei(tbr), "when calling get in Voidless_mechanics, line 300"), "when calling lightningFromIndex in Voidless_mechanics, line 300"))
            call u5w(rX, Aei(tbr), "when calling remove in Voidless_mechanics, line 301")
        endif
        call uFr(tbr)
    endloop
    call Ejr(sbr, "when calling close in Voidless_mechanics, line 298")
    call Hpi(lX, "when calling flush in Voidless_mechanics, line 304")
    call Hpi(iX, "when calling flush in Voidless_mechanics, line 305")
    call Hpi(NL, "when calling flush in Voidless_mechanics, line 306")
    call Hpi(rX, "when calling flush in Voidless_mechanics, line 307")
    call Hpi(uX, "when calling flush in Voidless_mechanics, line 308")
    call u3w(sX, "when calling clear in Voidless_mechanics, line 309")
    set ASw = ASw - 1
    set Klr = null
    set Xlr = null
    set Vlr = null
    set Nlr = null
    set wbr = null
    set rbr = null
    set tbr = null
endfunction
function eBw takes framehandle yBw, boolean pBw returns nothing
    call BlzFrameSetVisible(yBw, pBw)
endfunction
function oGt takes nothing returns nothing
    call eBw(DL, false)
    call eBw(HL, false)
    call eBw(JL, false)
    call eBw(KL, false)
    call eBw(LL, false)
    call eBw(XL, false)
endfunction
function yau takes integer lau, string bau returns nothing
    set DSw[ASw] = bau
    set ASw = ASw + 1
    if vB[lau] == 0 then
        if lau == 0 then
            call tNr("Nullpointer exception when calling HashMap.flush", "when calling error in HashMap, line 41")
        else
            call tNr("Called HashMap.flush on invalid object.", "when calling error in HashMap, line 41")
        endif
    endif
    if vB[lau] <= 1278 then
        call A8w(lau)
    else
        call H8r(lau, "when calling flush in HashMap, line 41")
    endif
    set ASw = ASw - 1
endfunction
function rEi takes string uEi returns nothing
    set DSw[ASw] = uEi
    set ASw = ASw + 1
    call u3w(RX, "when calling clear in Voidless_mechanics, line 848")
    call yau(TX, "when calling flush in Voidless_mechanics, line 849")
    call yau(YX, "when calling flush in Voidless_mechanics, line 850")
    set ASw = ASw - 1
endfunction
function d4r takes string n4r returns nothing
    set DSw[ASw] = n4r
    set ASw = ASw + 1
    set oK = 0.
    call ibr("when calling cleanupMechanics in Voidless, line 81")
    call rEi("when calling cleanupArrowGame in Voidless, line 82")
    if rK != null then
        call I7S(rK)
        set rK = null
    endif
    if uK != null then
        call uFr(uK)
    endif
    set uK = null
    set OX = 0
    call oGt()
    set ASw = ASw - 1
endfunction
function Rxi takes string fxi returns nothing
    set DSw[ASw] = fxi
    set ASw = ASw + 1
    call u3w(eK, "when calling clear in Voidless, line 65")
    call u3w(gL, "when calling clear in Voidless, line 66")
    set OK = 0
    set lK = 1
    if iK != null then
        call Xjr(iK, tK)
    endif
    set oX = false
    call d4r("when calling voidlessCleanup in Voidless, line 76")
    set ASw = ASw - 1
endfunction
function Z7t takes group W7t, unit E7t returns nothing
    call GroupRemoveUnit(W7t, E7t)
endfunction
function ZEu takes string WEu returns integer
    local integer EEu
    set DSw[ASw] = WEu
    set ASw = ASw + 1
    if NX == 0 then
        if MX < 32768 then
            set MX = MX + 1
            set EEu = MX
            set wC[EEu] = 1021
        else
            call tNr("Out of memory: Could not create CallbackSingle_doAfter_addAction_Voidless_triggers.", "when calling error in Voidless_triggers, line 240")
            set EEu = 0
        endif
    else
        set NX = NX - 1
        set EEu = BX[NX]
        set wC[EEu] = 1021
    endif
    set ASw = ASw - 1
    return EEu
endfunction
function F7S takes string g7S returns integer
    local integer h7S
    set DSw[ASw] = g7S
    set ASw = ASw + 1
    if NX == 0 then
        if MX < 32768 then
            set MX = MX + 1
            set h7S = MX
            set wC[h7S] = 986
        else
            call tNr("Out of memory: Could not create CallbackSingle_doAfter_Voidless_mechanics.", "when calling error in Voidless_mechanics, line 434")
            set h7S = 0
        endif
    else
        set NX = NX - 1
        set h7S = BX[NX]
        set wC[h7S] = 986
    endif
    set ASw = ASw - 1
    return h7S
endfunction
function aQs takes hashtable yQs, integer pQs, integer eQs, lightning qQs returns nothing
    call SaveLightningHandle(yQs, pQs, eQs, qQs)
endfunction
function abu takes integer pbu, integer ebu, lightning qbu returns nothing
    call aQs(qJ, pbu, ebu, qbu)
endfunction
function uqS takes integer BeS, integer NeS, lightning MeS, string wqS returns nothing
    set DSw[ASw] = wqS
    set ASw = ASw + 1
    if vB[BeS] == 0 then
        if BeS == 0 then
            call tNr("Nullpointer exception when calling Table.saveLightning", "when calling error in Table, line 216")
        else
            call tNr("Called Table.saveLightning on invalid object.", "when calling error in Table, line 216")
        endif
    endif
    call abu(BeS, NeS, MeS)
    set ASw = ASw - 1
endfunction
function hVs takes lightning YVs, string GVs returns integer
    local integer gVs
    set DSw[ASw] = GVs
    set ASw = ASw + 1
    call uqS(ZJ, - YEi(YVs), YVs, "when calling saveLightning in TypeCasting, line 210")
    set gVs =- YEi(YVs)
    set ASw = ASw - 1
    return gVs
endfunction
function yXu takes unit bXu returns boolean
    return UnitAlive(bXu)
endfunction
function ZdS takes unit mdS, string QdS returns nothing
    local unit WdS
    local integer EdS
    set DSw[ASw] = QdS
    set ASw = ASw + 1
    set WdS = iCu(wps(uX, Aei(mdS), "when calling get in Voidless_mechanics, line 428"), "when calling unitFromIndex in Voidless_mechanics, line 428")
    if WdS != null then
        call qCt(WdS, eDs(WdS), "when calling voidRiftBlackholeFree in Voidless_mechanics, line 431")
    endif
    if GpS(sX, Aei(WdS), "when calling has in Voidless_mechanics, line 433") then
        set EdS = F7S("when calling alloc_CallbackSingle_doAfter_Voidless_mechanics in Voidless_mechanics, line 434")
        call RUs(EdS)
        set miw[EdS] = WdS
        call Ybr(10., EdS, "when calling doAfter in Voidless_mechanics, line 434")
    endif
    if Jyr(iX, Aei(WdS), "when calling has in Voidless_mechanics, line 437") then
        call uRi(Aii(wps(iX, Aei(WdS), "when calling get in Voidless_mechanics, line 438"), "when calling effectFromIndex in Voidless_mechanics, line 438"))
        call u5w(iX, Aei(WdS), "when calling remove in Voidless_mechanics, line 439")
    endif
    if not yXu(mdS) then
        call u5w(uX, Aei(mdS), "when calling remove in Voidless_mechanics, line 442")
        if Jyr(rX, Aei(mdS), "when calling has in Voidless_mechanics, line 443") then
            call b9t(s1w(wps(rX, Aei(mdS), "when calling get in Voidless_mechanics, line 444"), "when calling lightningFromIndex in Voidless_mechanics, line 444"))
        endif
        call u5w(rX, Aei(mdS), "when calling remove in Voidless_mechanics, line 445")
        call uFr(mdS)
    else
        call iUr(uX, Aei(mdS), Aei(null), "when calling put in Voidless_mechanics, line 448")
        if Jyr(rX, Aei(mdS), "when calling has in Voidless_mechanics, line 449") then
            call b9t(s1w(wps(rX, Aei(mdS), "when calling get in Voidless_mechanics, line 450"), "when calling lightningFromIndex in Voidless_mechanics, line 450"))
        endif
        call iUr(rX, Aei(mdS), hVs(null, "when calling lightningToIndex in Voidless_mechanics, line 451"), "when calling put in Voidless_mechanics, line 451")
    endif
    set ASw = ASw - 1
    set WdS = null
endfunction
function smt takes group rmt returns integer
    return BlzGroupGetSize(rmt)
endfunction
function t_u takes unit s_u returns boolean
    return IsHeroUnitId(r5S(s_u))
endfunction
function Fvu takes framehandle Gvu, player gvu, boolean hvu returns nothing
    if nD == gvu then
        call BlzFrameSetVisible(Gvu, hvu)
    endif
endfunction
function w2u takes integer N4u, boolean M4u returns nothing
    if hgr(nD) == N4u then
        call Fvu(DL, aD[N4u], M4u)
        call Fvu(HL, aD[N4u], M4u)
        call Fvu(JL, aD[N4u], M4u)
        call Fvu(KL, aD[N4u], M4u)
        call Fvu(LL, aD[N4u], M4u)
        call Fvu(XL, aD[N4u], M4u)
    endif
endfunction
function vxi takes integer xxi returns integer
    return uuw[xxi]
endfunction
function wds takes integer Bns, string Nns returns integer
    local integer Mns
    set DSw[ASw] = Nns
    set ASw = ASw + 1
    if yN[Bns] == 0 then
        if Bns == 0 then
            call tNr("Nullpointer exception when calling LinkedList.size", "when calling error in LinkedList, line 150")
        else
            call tNr("Called LinkedList.size on invalid object.", "when calling error in LinkedList, line 150")
        endif
    endif
    set Mns = vxi(Bns)
    set ASw = ASw - 1
    return Mns
endfunction
function yLt takes force lLt, player bLt returns nothing
    call ForceRemovePlayer(lLt, bLt)
endfunction
function ayr takes string iyr returns nothing
    local unit Syr
    local unit cyr
    local player oyr
    local integer Oyr
    local integer lyr
    local unit byr
    local integer yyr
    local unit pyr
    local unit eyr
    local integer qyr
    set DSw[ASw] = iyr
    set ASw = ASw + 1
    if GetLeavingUnit() == null then
        set cyr = GetTriggerUnit()
    else
        set cyr = GetLeavingUnit()
    endif
    set Syr = cyr
    set oyr = eDs(Syr)
    set Oyr = hgr(oyr)
    if Oyr > Lh then
    elseif t_u(Syr) then
        set lyr = xus(Oyr, "when calling getCustomPlayer in Voidless_triggers, line 207")
        call Z7t(fc[MJ], Syr)
        call yLt(Rc[MJ], oyr)
        call w2u(Oyr, false)
        call D6i(oyr)
        call BwS(oyr)
        set byr = hqs(xMi(lyr, "when calling getCHero in Voidless_triggers, line 214"), "when calling getHero in Voidless_triggers, line 214")
        call Axu(byr, true)
        set vM[xMi(lyr, "when calling getCHero in Voidless_triggers, line 215")] =- 1
        call yLt(lt, oyr)
        call yLt(ws, oyr)
        call yLt(Gi, oyr)
        call Z7t(mo, Syr)
        set hu[Oyr] = false
        call eys(eK, xMi(lyr, "when calling getCHero in Voidless_triggers, line 225"), "when calling remove in Voidless_triggers, line 225")
        if GpS(sX, Aei(Syr), "when calling has in Voidless_triggers, line 228") then
            call eys(sX, Aei(Syr), "when calling remove in Voidless_triggers, line 229")
        endif
        set yyr = gJi(uX, "when calling iterator in Voidless_triggers, line 231")
        loop
            exitwhen not slr(yyr, "when calling hasNext in Voidless_triggers, line 231")
            set pyr = iCu(Gjs(yyr, "when calling next in Voidless_triggers, line 231"), "when calling unitFromIndex in Voidless_triggers, line 231")
            set eyr = iCu(wps(uX, Aei(pyr), "when calling get in Voidless_triggers, line 232"), "when calling unitFromIndex in Voidless_triggers, line 232")
            if eyr == Syr then
    call ZdS(pyr, "when calling blackholeCleanup in Voidless_triggers, line 234")
    exitwhen true
            endif
        endloop
        call Ejr(yyr, "when calling close in Voidless_triggers, line 231")
        call Rcu(Syr, "when calling invisibleProvidenceFree in Voidless_triggers, line 237")
        call Gwt(lyr, "when calling resetCameraZoomLevel in Voidless_triggers, line 239")
        set qyr = ZEu("when calling alloc_CallbackSingle_doAfter_addAction_Voidless_triggers in Voidless_triggers, line 240")
        call RUs(qyr)
        set WSw[qyr] = lyr
        call Ybr(0.25, qyr, "when calling doAfter in Voidless_triggers, line 240")
        if smt(fc[MJ]) == 0 and wds(eK, "when calling size in Voidless_triggers, line 244") == 0 then
            call Rxi("when calling voidlessReset in Voidless_triggers, line 245")
        endif
    endif
    set ASw = ASw - 1
    set Syr = null
    set cyr = null
    set oyr = null
    set byr = null
    set pyr = null
    set eyr = null
endfunction
function ASS takes nothing returns nothing
    set ASw = 0
    call ayr("via function reference Voidless_triggers, line 199")
endfunction
function Ehi takes nothing returns boolean
    return GetUnitTypeId(GetEnumUnit()) == 1429221442
endfunction
function AUs takes nothing returns nothing
    if Ehi() then
        call SetUnitInvulnerable(GetEnumUnit(), true)
        call DisableTrigger(GetTriggeringTrigger())
        call EnableTrigger(HY)
    endif
endfunction
function DDr takes group PDr, unit ADr returns nothing
    call GroupAddUnit(PDr, ADr)
endfunction
function Z5u takes group E5u returns nothing
    call DestroyGroup(E5u)
endfunction
function TYt takes integer RYt returns boolean
    return RYt == 1
endfunction
function iRi takes group rRi, string sRi returns boolean
    local boolean tRi
    set DSw[ASw] = sRi
    set ASw = ASw + 1
    set tRi = TYt(wps(PQ, ryi(rRi), "when calling get in GroupUtils, line 112"))
    set ASw = ASw - 1
    return tRi
endfunction
function rsi takes group wsi, string usi returns nothing
    set DSw[ASw] = usi
    set ASw = ASw + 1
    set AQ[DQ] = wsi
    call GVw(PQ, ryi(AQ[DQ]), O_i(false), "when calling put in GroupUtils, line 118")
    set DQ = DQ + 1
    set ASw = ASw - 1
endfunction
function ugu takes group wgu returns nothing
    call GroupClear(wgu)
endfunction
function j8t takes group F8t, string k8t returns nothing
    set DSw[ASw] = k8t
    set ASw = ASw + 1
    call ugu(F8t)
    call rsi(F8t, "when calling push in GroupUtils, line 138")
    set ASw = ASw - 1
endfunction
function txs takes group uxs, string rxs returns boolean
    local boolean sxs
    set DSw[ASw] = rxs
    set ASw = ASw + 1
    set sxs = Jyr(PQ, ryi(uxs), "when calling has in GroupUtils, line 108")
    set ASw = ASw - 1
    return sxs
endfunction
function Sju takes group tju, string iju returns nothing
    set DSw[ASw] = iju
    set ASw = ASw + 1
    if tju == XQ then
        call hHu("Attemping to release ENUM_GROUP!")
    elseif txs(tju, "when calling isRecyclable in GroupUtils, line 57") then
        if iRi(tju, "when calling isUsed in GroupUtils, line 58") then
            call j8t(tju, "when calling recycle in GroupUtils, line 59")
        else
            call hHu("Attemping to release an already released group!")
        endif
    else
        call ugu(tju)
        call Z5u(tju)
    endif
    set ASw = ASw - 1
endfunction
function FfS takes string RfS returns nothing
    local unit TfS
    local integer YfS
    local integer GfS
    local group gfS
    local group hfS
    set DSw[ASw] = RfS
    set ASw = ASw + 1
    set TfS = GetDyingUnit()
    if Jyr(dQ, Aei(TfS), "when calling has in Fishing, line 309") then
        set YfS = wps(dQ, Aei(TfS), "when calling get in Fishing, line 310")
        set GfS = xMi(xus(YfS, "when calling getCustomPlayer in Fishing, line 311"), "when calling getCHero in Fishing, line 311")
        call UOS($00000001, "when calling getGroup in Fishing, line 312")
        set hfS = pIw
        call DDr(hfS, hqs(GfS, "when calling getHero in Fishing, line 312"))
        set gfS = hfS
        call ForGroupBJ(gfS, amw)
        call Sju(gfS, "when calling release in Fishing, line 314")
        call klS(dQ, Aei(TfS), "when calling remove in Fishing, line 315")
    endif
    set ASw = ASw - 1
    set TfS = null
    set gfS = null
    set hfS = null
endfunction
function AXi takes nothing returns nothing
    set ASw = 0
    call FfS("via function reference Fishing, line 307")
endfunction
function Vyu takes nothing returns boolean
    return GetUnitTypeId(GetDyingUnit()) == 1848651860
endfunction
function ipr takes nothing returns boolean
    return GetUnitTypeId(GetDyingUnit()) == 1429221425
endfunction
function AZi takes nothing returns nothing
    if Vyu() then
        call DisplayTimedTextToForce(Rc[$00000002], 5., "|cffffcc00You are now transferred to the next level.|r")
        call PolledWait(c)
        set vo = GetRectCenter(il)
        call ForGroupBJ(fc[$00000002], Ylw)
        call ForForce(Rc[$00000002], Glw)
        call RemoveLocation(vo)
    endif
    if ipr() then
        set Ni = 2
        set Mi = 8
        call ForForce(Rc[$00000002], flw)
        call DisplayTimedTextToForce(Rc[$00000002], 10., "|cffffcc00You have completed the dungeon!|r Type -|c00ff0000d|r|c00ff1500o|r|c00ff3000n|r|c00ff4500e|r to exit the dungeon after looting your reward.")
        call DisplayTimedTextToForce(Rc[$00000002], 10., "|cffffcc00Type|r |c00ff0000-s2s X|r|cffffcc00 to send an item to your stash. (1-6)|r")
        call PolledWait(S)
        set pr[$00000001] = 1227894866
        set pr[$00000002] = 1227894864
        set pr[$00000003] = 1227894863
        set pr[$00000004] = 1227894861
        set pr[$00000005] = 1227894860
        set pr[$00000006] = 1227894865
        set pr[$00000007] = 1227894862
        set pr[$00000008] = 1227894867
        set Ni = 2
        set Mi = 8
        call ForForce(Rc[$00000002], glw)
        call ForGroupBJ(fc[$00000002], hlw)
        call TriggerExecute(cw)
        call GroupClear(fc[$00000002])
        call ForceClear(Rc[$00000002])
        call DisableTrigger(GetTriggeringTrigger())
        call DisableTrigger(HR)
    endif
endfunction
function q3t takes item e3t returns integer
    return GetItemTypeId(e3t)
endfunction
function BDs takes item XDs, string CDs returns boolean
    local boolean VDs
    set DSw[ASw] = CDs
    set ASw = ASw + 1
    set VDs = q3t(XDs) == l2s(Iji(am, "when calling unObfuscate in Items_Pickup_Drop, line 296"), "when calling fromRawCode in Items_Pickup_Drop, line 296")
    set ASw = ASw - 1
    return VDs
endfunction
function L1t takes unit K1t returns real
    return GetUnitY(K1t)
endfunction
function kEr takes unit FEr returns real
    return GetUnitX(FEr)
endfunction
function ANw takes unit PNw returns real
    set LSw = kEr(PNw)
    set XSw = L1t(PNw)
    return LSw
endfunction
function Frr takes unit grr, item hrr returns nothing
    call UnitRemoveItem(grr, hrr)
endfunction
function ATr takes rect PTr returns real
    return GetRectMinX(PTr)
endfunction
function EUu takes rect WUu returns real
    return GetRectMinY(WUu)
endfunction
function mxr takes rect vxr returns real
    return GetRectMaxY(vxr)
endfunction
function o2t takes rect c2t returns real
    return GetRectMaxX(c2t)
endfunction
function KBs takes rect DBs, real HBs, real JBs returns boolean
    return HBs > ATr(DBs) and HBs < o2t(DBs) and JBs > EUu(DBs) and JBs < mxr(DBs)
endfunction
function Xdu takes item Ldu returns integer
    return YEi(Ldu)
endfunction
function ccr takes integer tcr, string icr returns integer
    local integer Scr
    set DSw[ASw] = icr
    set ASw = ASw + 1
    set Scr = Ybr(0., tcr, "when calling doAfter in ClosureTimers, line 33")
    set ASw = ASw - 1
    return Scr
endfunction
function dJu takes string aJu returns integer
    local integer nJu
    set DSw[ASw] = aJu
    set ASw = ASw + 1
    if NX == 0 then
        if MX < 32768 then
            set MX = MX + 1
            set nJu = MX
            set wC[nJu] = 886
        else
            call tNr("Out of memory: Could not create CallbackSingle_doAfter_Items_Pickup_Drop.", "when calling error in Items_Pickup_Drop, line 133")
            set nJu = 0
        endif
    else
        set NX = NX - 1
        set nJu = BX[NX]
        set wC[nJu] = 886
    endif
    set ASw = ASw - 1
    return nJu
endfunction
function e5u takes item b5u, real y5u, real p5u returns nothing
    call SetItemPosition(b5u, y5u, p5u)
endfunction
function jXt takes item FXt, boolean kXt returns nothing
    call SetItemVisible(FXt, kXt)
endfunction
function kMu takes string hMu returns integer
    local integer FMu
    set DSw[ASw] = hMu
    set ASw = ASw + 1
    if NX == 0 then
        if MX < 32768 then
            set MX = MX + 1
            set FMu = MX
            set wC[FMu] = 1099
        else
            call tNr("Out of memory: Could not create CallbackSingle_nullTimer_Items_Pickup_Drop.", "when calling error in Items_Pickup_Drop, line 130")
            set FMu = 0
        endif
    else
        set NX = NX - 1
        set FMu = BX[NX]
        set wC[FMu] = 1099
    endif
    set ASw = ASw - 1
    return FMu
endfunction
function UTu takes unit aTu, item nTu, integer dTu, string fTu returns nothing
    local real RTu
    local real TTu
    local real YTu
    local real GTu
    local real gTu
    local real hTu
    local integer FTu
    local integer kTu
    local real jTu
    local real xTu
    local real vTu
    local real mTu
    local real QTu
    local real WTu
    local real ETu
    local real ZTu
    set DSw[ASw] = fTu
    set ASw = ASw + 1
    set jTu = ANw(aTu)
    set xTu = XSw
    set RTu = jTu
    set TTu = xTu
    if KBs(Bx[dTu], RTu, TTu) then
        set vTu = oQu(Bx[dTu])
        set mTu = Gcw
        set gTu = vTu
        set hTu = mTu
    else
        set QTu = RTu
        set WTu = TTu
        set gTu = QTu
        set hTu = WTu
    endif
    set ETu = gTu
    set ZTu = hTu
    set YTu = ETu
    set GTu = ZTu
    call vwt(px, Xdu(nTu), "when calling add in Items_Pickup_Drop, line 124")
    call GVw(ex, Xdu(nTu), dTu, "when calling put in Items_Pickup_Drop, line 125")
    call Frr(aTu, nTu)
    call e5u(nTu, YTu, GTu)
    call jXt(nTu, false)
    set FTu = kMu("when calling alloc_CallbackSingle_nullTimer_Items_Pickup_Drop in Items_Pickup_Drop, line 130")
    call RUs(FTu)
    set R0w[FTu] = dTu
    set T0w[FTu] = nTu
    call ccr(FTu, "when calling nullTimer in Items_Pickup_Drop, line 130")
    set kTu = dJu("when calling alloc_CallbackSingle_doAfter_Items_Pickup_Drop in Items_Pickup_Drop, line 133")
    call RUs(kTu)
    set Y0w[kTu] = nTu
    call Ybr(0.1, kTu, "when calling doAfter in Items_Pickup_Drop, line 133")
    set ASw = ASw - 1
endfunction
function v9S takes item x9S returns player
    return GetItemPlayer(x9S)
endfunction
function BZt takes unit KZt, item LZt, string XZt returns nothing
    local item CZt
    local integer VZt
    set DSw[ASw] = XZt
    set ASw = ASw + 1
    set CZt = LZt
    set VZt = hgr(v9S(LZt))
    call UTu(KZt, CZt, VZt, "when calling dropItem_Or_dropToRewardArea in Items_Pickup_Drop, line 696")
    call dii(Iji("|cffffcc00The Item does not belong to you.|r", "when calling unObfuscate in Items_Pickup_Drop, line 701"), 4., eDs(KZt))
    set ASw = ASw - 1
    set CZt = null
endfunction
function C2r takes item X2r returns boolean
    return q3t(X2r) == BF
endfunction
function h1u takes integer R1u, integer T1u returns integer
    local integer Y1u = wuw[R1u]
    local integer G1u = 0
    local integer g1u = T1u
    loop
        exitwhen G1u > g1u
        set Y1u = Cww[Y1u]
        set G1u = G1u + 1
    endloop
    return Y1u
endfunction
function qir takes integer bir, integer yir, string pir returns integer
    local integer eir
    set DSw[ASw] = pir
    set ASw = ASw + 1
    if yN[bir] == 0 then
        if bir == 0 then
            call tNr("Nullpointer exception when calling LinkedList.getEntry", "when calling error in LinkedList, line 381")
        else
            call tNr("Called LinkedList.getEntry on invalid object.", "when calling error in LinkedList, line 381")
        endif
    endif
    set eir = h1u(bir, yir)
    set ASw = ASw - 1
    return eir
endfunction
function Ajr takes integer Zjr, integer Ujr, string Ijr returns integer
    local integer Pjr
    set DSw[ASw] = Ijr
    set ASw = ASw + 1
    set Pjr = Lww[qir(Zjr, Ujr, "when calling getEntry in LinkedList, line 66")]
    set ASw = ASw - 1
    return Pjr
endfunction
function C_r takes integer J_r, integer K_r, string L_r returns integer
    local integer X_r
    set DSw[ASw] = L_r
    set ASw = ASw + 1
    if yN[J_r] == 0 then
        if J_r == 0 then
            call tNr("Nullpointer exception when calling LinkedList.get", "when calling error in LinkedList, line 65")
        else
            call tNr("Called LinkedList.get on invalid object.", "when calling error in LinkedList, line 65")
        endif
    endif
    set X_r = Ajr(J_r, K_r, "when calling get in LinkedList, line 65")
    set ASw = ASw - 1
    return X_r
endfunction
function wUu takes integer BZu, string NZu returns boolean
    local boolean MZu
    set DSw[ASw] = NZu
    set ASw = ASw + 1
    set MZu = BZu == l2s(Iji("h02J", "when calling unObfuscate in Items_Pickup_Drop, line 287"), "when calling fromRawCode in Items_Pickup_Drop, line 287")
    set ASw = ASw - 1
    return MZu
endfunction
function ESt takes unit mSt, string QSt returns boolean
    local boolean WSt
    set DSw[ASw] = QSt
    set ASw = ASw + 1
    set WSt = wUu(r5S(mSt), "when calling isStash in Items_Pickup_Drop, line 290")
    set ASw = ASw - 1
    return WSt
endfunction
function I4t takes unit Z4t, playercolor U4t returns nothing
    call SetUnitColor(Z4t, U4t)
endfunction
function IOt takes item EOt, player ZOt, boolean UOt returns nothing
    call SetItemPlayer(EOt, ZOt, UOt)
endfunction
function Kit takes item Hit, boolean Jit returns nothing
    call SetItemPawnable(Hit, Jit)
endfunction
function BDr takes integer LDr, integer XDr, string CDr returns boolean
    local boolean VDr
    set DSw[ASw] = CDr
    set ASw = ASw + 1
    set VDr = LDr == 6 and XDr != l2s(Iji("H003", "when calling unObfuscate in Items_Pickup_Drop, line 185"), "when calling fromRawCode in Items_Pickup_Drop, line 185") and XDr != l2s(Iji("H00J", "when calling unObfuscate in Items_Pickup_Drop, line 185"), "when calling fromRawCode in Items_Pickup_Drop, line 185") and XDr != l2s(Iji("H012", "when calling unObfuscate in Items_Pickup_Drop, line 185"), "when calling fromRawCode in Items_Pickup_Drop, line 185") and XDr != l2s(Iji("H013", "when calling unObfuscate in Items_Pickup_Drop, line 185"), "when calling fromRawCode in Items_Pickup_Drop, line 185") and XDr != l2s(Iji("H02H", "when calling unObfuscate in Items_Pickup_Drop, line 185"), "when calling fromRawCode in Items_Pickup_Drop, line 185") and XDr != l2s(Iji("H02K", "when calling unObfuscate in Items_Pickup_Drop, line 185"), "when calling fromRawCode in Items_Pickup_Drop, line 185") and XDr != l2s(Iji("H008", "when calling unObfuscate in Items_Pickup_Drop, line 185"), "when calling fromRawCode in Items_Pickup_Drop, line 185") and XDr != l2s(Iji("H00L", "when calling unObfuscate in Items_Pickup_Drop, line 185"), "when calling fromRawCode in Items_Pickup_Drop, line 185") and XDr != l2s(Iji("H011", "when calling unObfuscate in Items_Pickup_Drop, line 185"), "when calling fromRawCode in Items_Pickup_Drop, line 185") and XDr != l2s(Iji("H010", "when calling unObfuscate in Items_Pickup_Drop, line 185"), "when calling fromRawCode in Items_Pickup_Drop, line 185") and XDr != l2s(Iji("H02O", "when calling unObfuscate in Items_Pickup_Drop, line 185"), "when calling fromRawCode in Items_Pickup_Drop, line 185") and XDr != l2s(Iji("H02N", "when calling unObfuscate in Items_Pickup_Drop, line 185"), "when calling fromRawCode in Items_Pickup_Drop, line 185")
    set ASw = ASw - 1
    return VDr
endfunction
function CIu takes integer JIu, integer KIu, string LIu returns boolean
    local boolean XIu
    set DSw[ASw] = LIu
    set ASw = ASw + 1
    set XIu = JIu == 25 and KIu != l2s(Iji("H02K", "when calling unObfuscate in Items_Pickup_Drop, line 242"), "when calling fromRawCode in Items_Pickup_Drop, line 242") and KIu != l2s(Iji("H02H", "when calling unObfuscate in Items_Pickup_Drop, line 242"), "when calling fromRawCode in Items_Pickup_Drop, line 242") and KIu != l2s(Iji("H02M", "when calling unObfuscate in Items_Pickup_Drop, line 242"), "when calling fromRawCode in Items_Pickup_Drop, line 242") and KIu != l2s(Iji("H02L", "when calling unObfuscate in Items_Pickup_Drop, line 242"), "when calling fromRawCode in Items_Pickup_Drop, line 242")
    set ASw = ASw - 1
    return XIu
endfunction
function CUi takes integer JUi, integer KUi, string LUi returns boolean
    local boolean XUi
    set DSw[ASw] = LUi
    set ASw = ASw + 1
    set XUi = JUi == 28 and KUi != l2s(Iji("H02K", "when calling unObfuscate in Items_Pickup_Drop, line 251"), "when calling fromRawCode in Items_Pickup_Drop, line 251") and KUi != l2s(Iji("H02H", "when calling unObfuscate in Items_Pickup_Drop, line 251"), "when calling fromRawCode in Items_Pickup_Drop, line 251") and KUi != l2s(Iji("H02R", "when calling unObfuscate in Items_Pickup_Drop, line 251"), "when calling fromRawCode in Items_Pickup_Drop, line 251") and KUi != l2s(Iji("H02T", "when calling unObfuscate in Items_Pickup_Drop, line 251"), "when calling fromRawCode in Items_Pickup_Drop, line 251") and KUi != l2s(Iji("H02U", "when calling unObfuscate in Items_Pickup_Drop, line 251"), "when calling fromRawCode in Items_Pickup_Drop, line 251") and KUi != l2s(Iji("H02O", "when calling unObfuscate in Items_Pickup_Drop, line 251"), "when calling fromRawCode in Items_Pickup_Drop, line 251") and KUi != l2s(Iji("H02N", "when calling unObfuscate in Items_Pickup_Drop, line 251"), "when calling fromRawCode in Items_Pickup_Drop, line 251") and KUi != l2s(Iji("H02Q", "when calling unObfuscate in Items_Pickup_Drop, line 251"), "when calling fromRawCode in Items_Pickup_Drop, line 251") and KUi != l2s(Iji("H02P", "when calling unObfuscate in Items_Pickup_Drop, line 251"), "when calling fromRawCode in Items_Pickup_Drop, line 251")
    set ASw = ASw - 1
    return XUi
endfunction
function Fht takes integer Yht, integer Ght, string ght returns boolean
    local boolean hht
    set DSw[ASw] = ght
    set ASw = ASw + 1
    set hht = Yht == 10 and Ght != l2s(Iji("H01D", "when calling unObfuscate in Items_Pickup_Drop, line 197"), "when calling fromRawCode in Items_Pickup_Drop, line 197") and Ght != l2s(Iji("H02L", "when calling unObfuscate in Items_Pickup_Drop, line 197"), "when calling fromRawCode in Items_Pickup_Drop, line 197")
    set ASw = ASw - 1
    return hht
endfunction
function Hhu takes integer Ihu, integer Phu, string Ahu returns boolean
    local boolean Dhu
    set DSw[ASw] = Ahu
    set ASw = ASw + 1
    set Dhu = Ihu == 15 and Phu != l2s(Iji("H02E", "when calling unObfuscate in Items_Pickup_Drop, line 212"), "when calling fromRawCode in Items_Pickup_Drop, line 212") and Phu != l2s(Iji("H02F", "when calling unObfuscate in Items_Pickup_Drop, line 212"), "when calling fromRawCode in Items_Pickup_Drop, line 212")
    set ASw = ASw - 1
    return Dhu
endfunction
function J_u takes integer P_u, integer A_u, string D_u returns boolean
    local boolean H_u
    set DSw[ASw] = D_u
    set ASw = ASw + 1
    set H_u = P_u == 24 and A_u != l2s(Iji("H02K", "when calling unObfuscate in Items_Pickup_Drop, line 239"), "when calling fromRawCode in Items_Pickup_Drop, line 239") and A_u != l2s(Iji("H02H", "when calling unObfuscate in Items_Pickup_Drop, line 239"), "when calling fromRawCode in Items_Pickup_Drop, line 239") and A_u != l2s(Iji("H02S", "when calling unObfuscate in Items_Pickup_Drop, line 239"), "when calling fromRawCode in Items_Pickup_Drop, line 239") and A_u != l2s(Iji("H02R", "when calling unObfuscate in Items_Pickup_Drop, line 239"), "when calling fromRawCode in Items_Pickup_Drop, line 239") and A_u != l2s(Iji("H02T", "when calling unObfuscate in Items_Pickup_Drop, line 239"), "when calling fromRawCode in Items_Pickup_Drop, line 239") and A_u != l2s(Iji("H02U", "when calling unObfuscate in Items_Pickup_Drop, line 239"), "when calling fromRawCode in Items_Pickup_Drop, line 239") and A_u != l2s(Iji("H02O", "when calling unObfuscate in Items_Pickup_Drop, line 239"), "when calling fromRawCode in Items_Pickup_Drop, line 239") and A_u != l2s(Iji("H02N", "when calling unObfuscate in Items_Pickup_Drop, line 239"), "when calling fromRawCode in Items_Pickup_Drop, line 239") and A_u != l2s(Iji("H02Q", "when calling unObfuscate in Items_Pickup_Drop, line 239"), "when calling fromRawCode in Items_Pickup_Drop, line 239") and A_u != l2s(Iji("H02P", "when calling unObfuscate in Items_Pickup_Drop, line 239"), "when calling fromRawCode in Items_Pickup_Drop, line 239")
    set ASw = ASw - 1
    return H_u
endfunction
function L3r takes integer D3r, integer H3r, string J3r returns boolean
    local boolean K3r
    set DSw[ASw] = J3r
    set ASw = ASw + 1
    set K3r = D3r == 107 and H3r != l2s(Iji("H02K", "when calling unObfuscate in Items_Pickup_Drop, line 254"), "when calling fromRawCode in Items_Pickup_Drop, line 254") and H3r != l2s(Iji("H02H", "when calling unObfuscate in Items_Pickup_Drop, line 254"), "when calling fromRawCode in Items_Pickup_Drop, line 254") and H3r != l2s(Iji("H02R", "when calling unObfuscate in Items_Pickup_Drop, line 254"), "when calling fromRawCode in Items_Pickup_Drop, line 254") and H3r != l2s(Iji("H02T", "when calling unObfuscate in Items_Pickup_Drop, line 254"), "when calling fromRawCode in Items_Pickup_Drop, line 254") and H3r != l2s(Iji("H02U", "when calling unObfuscate in Items_Pickup_Drop, line 254"), "when calling fromRawCode in Items_Pickup_Drop, line 254") and H3r != l2s(Iji("H02O", "when calling unObfuscate in Items_Pickup_Drop, line 254"), "when calling fromRawCode in Items_Pickup_Drop, line 254") and H3r != l2s(Iji("H02N", "when calling unObfuscate in Items_Pickup_Drop, line 254"), "when calling fromRawCode in Items_Pickup_Drop, line 254") and H3r != l2s(Iji("H02Q", "when calling unObfuscate in Items_Pickup_Drop, line 254"), "when calling fromRawCode in Items_Pickup_Drop, line 254") and H3r != l2s(Iji("H02P", "when calling unObfuscate in Items_Pickup_Drop, line 254"), "when calling fromRawCode in Items_Pickup_Drop, line 254") and H3r != l2s(Iji("H02M", "when calling unObfuscate in Items_Pickup_Drop, line 254"), "when calling fromRawCode in Items_Pickup_Drop, line 254") and H3r != l2s(Iji("H02L", "when calling unObfuscate in Items_Pickup_Drop, line 254"), "when calling fromRawCode in Items_Pickup_Drop, line 254")
    set ASw = ASw - 1
    return K3r
endfunction
function MZs takes integer CZs, integer VZs, string BZs returns boolean
    local boolean NZs
    set DSw[ASw] = BZs
    set ASw = ASw + 1
    set NZs = CZs == 3 and VZs != l2s(Iji("H00B", "when calling unObfuscate in Items_Pickup_Drop, line 173"), "when calling fromRawCode in Items_Pickup_Drop, line 173") and VZs != l2s(Iji("H00G", "when calling unObfuscate in Items_Pickup_Drop, line 173"), "when calling fromRawCode in Items_Pickup_Drop, line 173") and VZs != l2s(Iji("H015", "when calling unObfuscate in Items_Pickup_Drop, line 173"), "when calling fromRawCode in Items_Pickup_Drop, line 173") and VZs != l2s(Iji("H014", "when calling unObfuscate in Items_Pickup_Drop, line 173"), "when calling fromRawCode in Items_Pickup_Drop, line 173") and VZs != l2s(Iji("H02E", "when calling unObfuscate in Items_Pickup_Drop, line 173"), "when calling fromRawCode in Items_Pickup_Drop, line 173") and VZs != l2s(Iji("H02F", "when calling unObfuscate in Items_Pickup_Drop, line 173"), "when calling fromRawCode in Items_Pickup_Drop, line 173")
    set ASw = ASw - 1
    return NZs
endfunction
function NnS takes integer XnS, integer CnS, string VnS returns boolean
    local boolean BnS
    set DSw[ASw] = VnS
    set ASw = ASw + 1
    set BnS = XnS == 9 and CnS != l2s(Iji("H018", "when calling unObfuscate in Items_Pickup_Drop, line 194"), "when calling fromRawCode in Items_Pickup_Drop, line 194") and CnS != l2s(Iji("H02R", "when calling unObfuscate in Items_Pickup_Drop, line 194"), "when calling fromRawCode in Items_Pickup_Drop, line 194") and CnS != l2s(Iji("H01Y", "when calling unObfuscate in Items_Pickup_Drop, line 194"), "when calling fromRawCode in Items_Pickup_Drop, line 194") and CnS != l2s(Iji("H01Z", "when calling unObfuscate in Items_Pickup_Drop, line 194"), "when calling fromRawCode in Items_Pickup_Drop, line 194") and CnS != l2s(Iji("H02T", "when calling unObfuscate in Items_Pickup_Drop, line 194"), "when calling fromRawCode in Items_Pickup_Drop, line 194") and CnS != l2s(Iji("H02U", "when calling unObfuscate in Items_Pickup_Drop, line 194"), "when calling fromRawCode in Items_Pickup_Drop, line 194")
    set ASw = ASw - 1
    return BnS
endfunction
function NpS takes integer XpS, integer CpS, string VpS returns boolean
    local boolean BpS
    set DSw[ASw] = VpS
    set ASw = ASw + 1
    set BpS = XpS == 110 and CpS != l2s(Iji("H024", "when calling unObfuscate in Items_Pickup_Drop, line 278"), "when calling fromRawCode in Items_Pickup_Drop, line 278") and CpS != l2s(Iji("H023", "when calling unObfuscate in Items_Pickup_Drop, line 278"), "when calling fromRawCode in Items_Pickup_Drop, line 278") and CpS != l2s(Iji("H02S", "when calling unObfuscate in Items_Pickup_Drop, line 278"), "when calling fromRawCode in Items_Pickup_Drop, line 278") and CpS != l2s(Iji("H02R", "when calling unObfuscate in Items_Pickup_Drop, line 278"), "when calling fromRawCode in Items_Pickup_Drop, line 278") and CpS != l2s(Iji("H02T", "when calling unObfuscate in Items_Pickup_Drop, line 278"), "when calling fromRawCode in Items_Pickup_Drop, line 278") and CpS != l2s(Iji("H02U", "when calling unObfuscate in Items_Pickup_Drop, line 278"), "when calling fromRawCode in Items_Pickup_Drop, line 278") and CpS != l2s(Iji("H02B", "when calling unObfuscate in Items_Pickup_Drop, line 278"), "when calling fromRawCode in Items_Pickup_Drop, line 278") and CpS != l2s(Iji("H02C", "when calling unObfuscate in Items_Pickup_Drop, line 278"), "when calling fromRawCode in Items_Pickup_Drop, line 278")
    set ASw = ASw - 1
    return BpS
endfunction
function Q8w takes integer j8w, integer x8w, string v8w returns boolean
    local boolean m8w
    set DSw[ASw] = v8w
    set ASw = ASw + 1
    set m8w = j8w == 26 and x8w != l2s(Iji("H02K", "when calling unObfuscate in Items_Pickup_Drop, line 245"), "when calling fromRawCode in Items_Pickup_Drop, line 245") and x8w != l2s(Iji("H02H", "when calling unObfuscate in Items_Pickup_Drop, line 245"), "when calling fromRawCode in Items_Pickup_Drop, line 245") and x8w != l2s(Iji("H02M", "when calling unObfuscate in Items_Pickup_Drop, line 245"), "when calling fromRawCode in Items_Pickup_Drop, line 245") and x8w != l2s(Iji("H02L", "when calling unObfuscate in Items_Pickup_Drop, line 245"), "when calling fromRawCode in Items_Pickup_Drop, line 245") and x8w != l2s(Iji("H02Q", "when calling unObfuscate in Items_Pickup_Drop, line 245"), "when calling fromRawCode in Items_Pickup_Drop, line 245") and x8w != l2s(Iji("H02P", "when calling unObfuscate in Items_Pickup_Drop, line 245"), "when calling fromRawCode in Items_Pickup_Drop, line 245")
    set ASw = ASw - 1
    return m8w
endfunction
function QJs takes integer jJs, integer xJs, string vJs returns boolean
    local boolean mJs
    set DSw[ASw] = vJs
    set ASw = ASw + 1
    set mJs = jJs == 32 and xJs != l2s(Iji("H02H", "when calling unObfuscate in Items_Pickup_Drop, line 269"), "when calling fromRawCode in Items_Pickup_Drop, line 269") and xJs != l2s(Iji("H02K", "when calling unObfuscate in Items_Pickup_Drop, line 269"), "when calling fromRawCode in Items_Pickup_Drop, line 269")
    set ASw = ASw - 1
    return mJs
endfunction
function RUr takes integer aUr, integer nUr, string dUr returns boolean
    local boolean fUr
    set DSw[ASw] = dUr
    set ASw = ASw + 1
    set fUr = aUr == 17 and nUr != l2s(Iji("H02O", "when calling unObfuscate in Items_Pickup_Drop, line 218"), "when calling fromRawCode in Items_Pickup_Drop, line 218") and nUr != l2s(Iji("H02N", "when calling unObfuscate in Items_Pickup_Drop, line 218"), "when calling fromRawCode in Items_Pickup_Drop, line 218")
    set ASw = ASw - 1
    return fUr
endfunction
function Ras takes integer aas, integer nas, string das returns boolean
    local boolean fas
    set DSw[ASw] = das
    set ASw = ASw + 1
    set fas = aas == 22 and nas != l2s(Iji("H02K", "when calling unObfuscate in Items_Pickup_Drop, line 233"), "when calling fromRawCode in Items_Pickup_Drop, line 233") and nas != l2s(Iji("H02H", "when calling unObfuscate in Items_Pickup_Drop, line 233"), "when calling fromRawCode in Items_Pickup_Drop, line 233") and nas != l2s(Iji("H02M", "when calling unObfuscate in Items_Pickup_Drop, line 233"), "when calling fromRawCode in Items_Pickup_Drop, line 233") and nas != l2s(Iji("H02L", "when calling unObfuscate in Items_Pickup_Drop, line 233"), "when calling fromRawCode in Items_Pickup_Drop, line 233") and nas != l2s(Iji("H02O", "when calling unObfuscate in Items_Pickup_Drop, line 233"), "when calling fromRawCode in Items_Pickup_Drop, line 233") and nas != l2s(Iji("H02N", "when calling unObfuscate in Items_Pickup_Drop, line 233"), "when calling fromRawCode in Items_Pickup_Drop, line 233") and nas != l2s(Iji("H02Q", "when calling unObfuscate in Items_Pickup_Drop, line 233"), "when calling fromRawCode in Items_Pickup_Drop, line 233") and nas != l2s(Iji("H02P", "when calling unObfuscate in Items_Pickup_Drop, line 233"), "when calling fromRawCode in Items_Pickup_Drop, line 233")
    set ASw = ASw - 1
    return fas
endfunction
function TOt takes integer nOt, integer dOt, string fOt returns boolean
    local boolean ROt
    set DSw[ASw] = fOt
    set ASw = ASw + 1
    set ROt = nOt == 27 and dOt != l2s(Iji("H02K", "when calling unObfuscate in Items_Pickup_Drop, line 248"), "when calling fromRawCode in Items_Pickup_Drop, line 248") and dOt != l2s(Iji("H02H", "when calling unObfuscate in Items_Pickup_Drop, line 248"), "when calling fromRawCode in Items_Pickup_Drop, line 248") and dOt != l2s(Iji("H02R", "when calling unObfuscate in Items_Pickup_Drop, line 248"), "when calling fromRawCode in Items_Pickup_Drop, line 248") and dOt != l2s(Iji("H02T", "when calling unObfuscate in Items_Pickup_Drop, line 248"), "when calling fromRawCode in Items_Pickup_Drop, line 248") and dOt != l2s(Iji("H02U", "when calling unObfuscate in Items_Pickup_Drop, line 248"), "when calling fromRawCode in Items_Pickup_Drop, line 248") and dOt != l2s(Iji("H02M", "when calling unObfuscate in Items_Pickup_Drop, line 248"), "when calling fromRawCode in Items_Pickup_Drop, line 248") and dOt != l2s(Iji("H02L", "when calling unObfuscate in Items_Pickup_Drop, line 248"), "when calling fromRawCode in Items_Pickup_Drop, line 248") and dOt != l2s(Iji("H02Q", "when calling unObfuscate in Items_Pickup_Drop, line 248"), "when calling fromRawCode in Items_Pickup_Drop, line 248") and dOt != l2s(Iji("H02P", "when calling unObfuscate in Items_Pickup_Drop, line 248"), "when calling fromRawCode in Items_Pickup_Drop, line 248")
    set ASw = ASw - 1
    return ROt
endfunction
function Tns takes integer nns, integer dns, string fns returns boolean
    local boolean Rns
    set DSw[ASw] = fns
    set ASw = ASw + 1
    set Rns = nns == 13 and dns != l2s(Iji("H02S", "when calling unObfuscate in Items_Pickup_Drop, line 206"), "when calling fromRawCode in Items_Pickup_Drop, line 206") and dns != l2s(Iji("H02R", "when calling unObfuscate in Items_Pickup_Drop, line 206"), "when calling fromRawCode in Items_Pickup_Drop, line 206") and dns != l2s(Iji("H02T", "when calling unObfuscate in Items_Pickup_Drop, line 206"), "when calling fromRawCode in Items_Pickup_Drop, line 206") and dns != l2s(Iji("H02U", "when calling unObfuscate in Items_Pickup_Drop, line 206"), "when calling fromRawCode in Items_Pickup_Drop, line 206")
    set ASw = ASw - 1
    return Rns
endfunction
function UCr takes integer QCr, integer WCr, string ECr returns boolean
    local boolean ZCr
    set DSw[ASw] = ECr
    set ASw = ASw + 1
    set ZCr = QCr == 105 and WCr != l2s(Iji("H02H", "when calling unObfuscate in Items_Pickup_Drop, line 266"), "when calling fromRawCode in Items_Pickup_Drop, line 266") and WCr != l2s(Iji("H02K", "when calling unObfuscate in Items_Pickup_Drop, line 266"), "when calling fromRawCode in Items_Pickup_Drop, line 266") and WCr != l2s(Iji("H02O", "when calling unObfuscate in Items_Pickup_Drop, line 266"), "when calling fromRawCode in Items_Pickup_Drop, line 266") and WCr != l2s(Iji("H02N", "when calling unObfuscate in Items_Pickup_Drop, line 266"), "when calling fromRawCode in Items_Pickup_Drop, line 266") and WCr != l2s(Iji("H02Q", "when calling unObfuscate in Items_Pickup_Drop, line 266"), "when calling fromRawCode in Items_Pickup_Drop, line 266") and WCr != l2s(Iji("H02P", "when calling unObfuscate in Items_Pickup_Drop, line 266"), "when calling fromRawCode in Items_Pickup_Drop, line 266")
    set ASw = ASw - 1
    return ZCr
endfunction
function UEi takes integer QEi, integer WEi, string EEi returns boolean
    local boolean ZEi
    set DSw[ASw] = EEi
    set ASw = ASw + 1
    set ZEi = QEi == 20 and WEi != l2s(Iji("H024", "when calling unObfuscate in Items_Pickup_Drop, line 227"), "when calling fromRawCode in Items_Pickup_Drop, line 227") and WEi != l2s(Iji("H023", "when calling unObfuscate in Items_Pickup_Drop, line 227"), "when calling fromRawCode in Items_Pickup_Drop, line 227") and WEi != l2s(Iji("H02S", "when calling unObfuscate in Items_Pickup_Drop, line 227"), "when calling fromRawCode in Items_Pickup_Drop, line 227") and WEi != l2s(Iji("H02R", "when calling unObfuscate in Items_Pickup_Drop, line 227"), "when calling fromRawCode in Items_Pickup_Drop, line 227") and WEi != l2s(Iji("H02T", "when calling unObfuscate in Items_Pickup_Drop, line 227"), "when calling fromRawCode in Items_Pickup_Drop, line 227") and WEi != l2s(Iji("H02U", "when calling unObfuscate in Items_Pickup_Drop, line 227"), "when calling fromRawCode in Items_Pickup_Drop, line 227") and WEi != l2s(Iji("H02Q", "when calling unObfuscate in Items_Pickup_Drop, line 227"), "when calling fromRawCode in Items_Pickup_Drop, line 227") and WEi != l2s(Iji("H02P", "when calling unObfuscate in Items_Pickup_Drop, line 227"), "when calling fromRawCode in Items_Pickup_Drop, line 227") and WEi != l2s(Iji("H02F", "when calling unObfuscate in Items_Pickup_Drop, line 227"), "when calling fromRawCode in Items_Pickup_Drop, line 227") and WEi != l2s(Iji("H02E", "when calling unObfuscate in Items_Pickup_Drop, line 227"), "when calling fromRawCode in Items_Pickup_Drop, line 227") and WEi != l2s(Iji("H02L", "when calling unObfuscate in Items_Pickup_Drop, line 227"), "when calling fromRawCode in Items_Pickup_Drop, line 227") and WEi != l2s(Iji("H02M", "when calling unObfuscate in Items_Pickup_Drop, line 227"), "when calling fromRawCode in Items_Pickup_Drop, line 227") and WEi != l2s(Iji("H02O", "when calling unObfuscate in Items_Pickup_Drop, line 227"), "when calling fromRawCode in Items_Pickup_Drop, line 227") and WEi != l2s(Iji("H02N", "when calling unObfuscate in Items_Pickup_Drop, line 227"), "when calling fromRawCode in Items_Pickup_Drop, line 227") and WEi != l2s(Iji("H02K", "when calling unObfuscate in Items_Pickup_Drop, line 227"), "when calling fromRawCode in Items_Pickup_Drop, line 227") and WEi != l2s(Iji("H02H", "when calling unObfuscate in Items_Pickup_Drop, line 227"), "when calling fromRawCode in Items_Pickup_Drop, line 227") and WEi != l2s(Iji("H02B", "when calling unObfuscate in Items_Pickup_Drop, line 227"), "when calling fromRawCode in Items_Pickup_Drop, line 227") and WEi != l2s(Iji("H02C", "when calling unObfuscate in Items_Pickup_Drop, line 227"), "when calling fromRawCode in Items_Pickup_Drop, line 227")
    set ASw = ASw - 1
    return ZEi
endfunction
function gDt takes integer TDt, string YDt returns boolean
    local boolean GDt
    set DSw[ASw] = YDt
    set ASw = ASw + 1
    set GDt = GpS(aA, TDt, "when calling has in Items_Pickup_Drop, line 281")
    set ASw = ASw - 1
    return GDt
endfunction
function VCi takes unit JCi, integer KCi, integer LCi, string XCi returns boolean
    local boolean CCi
    set DSw[ASw] = XCi
    set ASw = ASw + 1
    set CCi = KCi == 100 and(not gDt(LCi, "when calling is4thJob in Items_Pickup_Drop, line 275")) and LCi != l2s(Iji("H02T", "when calling unObfuscate in Items_Pickup_Drop, line 275"), "when calling fromRawCode in Items_Pickup_Drop, line 275") and LCi != l2s(Iji("H02U", "when calling unObfuscate in Items_Pickup_Drop, line 275"), "when calling fromRawCode in Items_Pickup_Drop, line 275")
    set ASw = ASw - 1
    return CCi
endfunction
function VDt takes integer KDt, integer LDt, string XDt returns boolean
    local boolean CDt
    set DSw[ASw] = XDt
    set ASw = ASw + 1
    set CDt = KDt == 12 and LDt != l2s(Iji("H024", "when calling unObfuscate in Items_Pickup_Drop, line 203"), "when calling fromRawCode in Items_Pickup_Drop, line 203") and LDt != l2s(Iji("H023", "when calling unObfuscate in Items_Pickup_Drop, line 203"), "when calling fromRawCode in Items_Pickup_Drop, line 203")
    set ASw = ASw - 1
    return CDt
endfunction
function WQu takes integer xQu, integer vQu, string mQu returns boolean
    local boolean QQu
    set DSw[ASw] = mQu
    set ASw = ASw + 1
    set QQu = xQu == 18 and vQu != l2s(Iji("H02B", "when calling unObfuscate in Items_Pickup_Drop, line 221"), "when calling fromRawCode in Items_Pickup_Drop, line 221") and vQu != l2s(Iji("H02C", "when calling unObfuscate in Items_Pickup_Drop, line 221"), "when calling fromRawCode in Items_Pickup_Drop, line 221")
    set ASw = ASw - 1
    return QQu
endfunction
function YhS takes integer dhS, integer fhS, string RhS returns boolean
    local boolean ThS
    set DSw[ASw] = RhS
    set ASw = ASw + 1
    set ThS = dhS == 21 and fhS != l2s(Iji("H024", "when calling unObfuscate in Items_Pickup_Drop, line 230"), "when calling fromRawCode in Items_Pickup_Drop, line 230") and fhS != l2s(Iji("H023", "when calling unObfuscate in Items_Pickup_Drop, line 230"), "when calling fromRawCode in Items_Pickup_Drop, line 230") and fhS != l2s(Iji("H02S", "when calling unObfuscate in Items_Pickup_Drop, line 230"), "when calling fromRawCode in Items_Pickup_Drop, line 230") and fhS != l2s(Iji("H02R", "when calling unObfuscate in Items_Pickup_Drop, line 230"), "when calling fromRawCode in Items_Pickup_Drop, line 230") and fhS != l2s(Iji("H02T", "when calling unObfuscate in Items_Pickup_Drop, line 230"), "when calling fromRawCode in Items_Pickup_Drop, line 230") and fhS != l2s(Iji("H02U", "when calling unObfuscate in Items_Pickup_Drop, line 230"), "when calling fromRawCode in Items_Pickup_Drop, line 230") and fhS != l2s(Iji("H02B", "when calling unObfuscate in Items_Pickup_Drop, line 230"), "when calling fromRawCode in Items_Pickup_Drop, line 230") and fhS != l2s(Iji("H02C", "when calling unObfuscate in Items_Pickup_Drop, line 230"), "when calling fromRawCode in Items_Pickup_Drop, line 230") and fhS != l2s(Iji("H02M", "when calling unObfuscate in Items_Pickup_Drop, line 230"), "when calling fromRawCode in Items_Pickup_Drop, line 230") and fhS != l2s(Iji("H02L", "when calling unObfuscate in Items_Pickup_Drop, line 230"), "when calling fromRawCode in Items_Pickup_Drop, line 230")
    set ASw = ASw - 1
    return ThS
endfunction
function ZOu takes integer mOu, integer QOu, string WOu returns boolean
    local boolean EOu
    set DSw[ASw] = WOu
    set ASw = ASw + 1
    set EOu = mOu == 8 and QOu != l2s(Iji("H003", "when calling unObfuscate in Items_Pickup_Drop, line 191"), "when calling fromRawCode in Items_Pickup_Drop, line 191") and QOu != l2s(Iji("H00J", "when calling unObfuscate in Items_Pickup_Drop, line 191"), "when calling fromRawCode in Items_Pickup_Drop, line 191") and QOu != l2s(Iji("H012", "when calling unObfuscate in Items_Pickup_Drop, line 191"), "when calling fromRawCode in Items_Pickup_Drop, line 191") and QOu != l2s(Iji("H013", "when calling unObfuscate in Items_Pickup_Drop, line 191"), "when calling fromRawCode in Items_Pickup_Drop, line 191") and QOu != l2s(Iji("H02H", "when calling unObfuscate in Items_Pickup_Drop, line 191"), "when calling fromRawCode in Items_Pickup_Drop, line 191") and QOu != l2s(Iji("H02K", "when calling unObfuscate in Items_Pickup_Drop, line 191"), "when calling fromRawCode in Items_Pickup_Drop, line 191") and QOu != l2s(Iji("H008", "when calling unObfuscate in Items_Pickup_Drop, line 191"), "when calling fromRawCode in Items_Pickup_Drop, line 191") and QOu != l2s(Iji("H00L", "when calling unObfuscate in Items_Pickup_Drop, line 191"), "when calling fromRawCode in Items_Pickup_Drop, line 191") and QOu != l2s(Iji("H011", "when calling unObfuscate in Items_Pickup_Drop, line 191"), "when calling fromRawCode in Items_Pickup_Drop, line 191") and QOu != l2s(Iji("H010", "when calling unObfuscate in Items_Pickup_Drop, line 191"), "when calling fromRawCode in Items_Pickup_Drop, line 191") and QOu != l2s(Iji("H02O", "when calling unObfuscate in Items_Pickup_Drop, line 191"), "when calling fromRawCode in Items_Pickup_Drop, line 191") and QOu != l2s(Iji("H02N", "when calling unObfuscate in Items_Pickup_Drop, line 191"), "when calling fromRawCode in Items_Pickup_Drop, line 191") and QOu != l2s(Iji("H009", "when calling unObfuscate in Items_Pickup_Drop, line 191"), "when calling fromRawCode in Items_Pickup_Drop, line 191") and QOu != l2s(Iji("H00M", "when calling unObfuscate in Items_Pickup_Drop, line 191"), "when calling fromRawCode in Items_Pickup_Drop, line 191") and QOu != l2s(Iji("H01F", "when calling unObfuscate in Items_Pickup_Drop, line 191"), "when calling fromRawCode in Items_Pickup_Drop, line 191") and QOu != l2s(Iji("H01E", "when calling unObfuscate in Items_Pickup_Drop, line 191"), "when calling fromRawCode in Items_Pickup_Drop, line 191") and QOu != l2s(Iji("H02Q", "when calling unObfuscate in Items_Pickup_Drop, line 191"), "when calling fromRawCode in Items_Pickup_Drop, line 191") and QOu != l2s(Iji("H02P", "when calling unObfuscate in Items_Pickup_Drop, line 191"), "when calling fromRawCode in Items_Pickup_Drop, line 191")
    set ASw = ASw - 1
    return EOu
endfunction
function awt takes integer ywt, integer pwt, string ewt returns boolean
    local boolean qwt
    set DSw[ASw] = ewt
    set ASw = ASw + 1
    set qwt = ywt == 23 and pwt != l2s(Iji("H02E", "when calling unObfuscate in Items_Pickup_Drop, line 236"), "when calling fromRawCode in Items_Pickup_Drop, line 236") and pwt != l2s(Iji("H02F", "when calling unObfuscate in Items_Pickup_Drop, line 236"), "when calling fromRawCode in Items_Pickup_Drop, line 236") and pwt != l2s(Iji("H02O", "when calling unObfuscate in Items_Pickup_Drop, line 236"), "when calling fromRawCode in Items_Pickup_Drop, line 236") and pwt != l2s(Iji("H02N", "when calling unObfuscate in Items_Pickup_Drop, line 236"), "when calling fromRawCode in Items_Pickup_Drop, line 236") and pwt != l2s(Iji("H02Q", "when calling unObfuscate in Items_Pickup_Drop, line 236"), "when calling fromRawCode in Items_Pickup_Drop, line 236") and pwt != l2s(Iji("H02P", "when calling unObfuscate in Items_Pickup_Drop, line 236"), "when calling fromRawCode in Items_Pickup_Drop, line 236")
    set ASw = ASw - 1
    return qwt
endfunction
function gRu takes integer RRu, integer TRu, string YRu returns boolean
    local boolean GRu
    set DSw[ASw] = YRu
    set ASw = ASw + 1
    set GRu = RRu == 16 and TRu != l2s(Iji("H02M", "when calling unObfuscate in Items_Pickup_Drop, line 215"), "when calling fromRawCode in Items_Pickup_Drop, line 215") and TRu != l2s(Iji("H02L", "when calling unObfuscate in Items_Pickup_Drop, line 215"), "when calling fromRawCode in Items_Pickup_Drop, line 215")
    set ASw = ASw - 1
    return GRu
endfunction
function iWt takes integer uWt, integer rWt, string sWt returns boolean
    local boolean tWt
    set DSw[ASw] = sWt
    set ASw = ASw + 1
    set tWt = uWt == 31 and rWt != l2s(Iji("H009", "when calling unObfuscate in Items_Pickup_Drop, line 257"), "when calling fromRawCode in Items_Pickup_Drop, line 257") and rWt != l2s(Iji("H00M", "when calling unObfuscate in Items_Pickup_Drop, line 257"), "when calling fromRawCode in Items_Pickup_Drop, line 257") and rWt != l2s(Iji("H008", "when calling unObfuscate in Items_Pickup_Drop, line 257"), "when calling fromRawCode in Items_Pickup_Drop, line 257") and rWt != l2s(Iji("H00L", "when calling unObfuscate in Items_Pickup_Drop, line 257"), "when calling fromRawCode in Items_Pickup_Drop, line 257") and rWt != l2s(Iji("H010", "when calling unObfuscate in Items_Pickup_Drop, line 257"), "when calling fromRawCode in Items_Pickup_Drop, line 257") and rWt != l2s(Iji("H011", "when calling unObfuscate in Items_Pickup_Drop, line 257"), "when calling fromRawCode in Items_Pickup_Drop, line 257") and rWt != l2s(Iji("H01E", "when calling unObfuscate in Items_Pickup_Drop, line 257"), "when calling fromRawCode in Items_Pickup_Drop, line 257") and rWt != l2s(Iji("H01F", "when calling unObfuscate in Items_Pickup_Drop, line 257"), "when calling fromRawCode in Items_Pickup_Drop, line 257") and rWt != l2s(Iji("H02O", "when calling unObfuscate in Items_Pickup_Drop, line 257"), "when calling fromRawCode in Items_Pickup_Drop, line 257") and rWt != l2s(Iji("H02N", "when calling unObfuscate in Items_Pickup_Drop, line 257"), "when calling fromRawCode in Items_Pickup_Drop, line 257") and rWt != l2s(Iji("H02Q", "when calling unObfuscate in Items_Pickup_Drop, line 257"), "when calling fromRawCode in Items_Pickup_Drop, line 257") and rWt != l2s(Iji("H02P", "when calling unObfuscate in Items_Pickup_Drop, line 257"), "when calling fromRawCode in Items_Pickup_Drop, line 257")
    set ASw = ASw - 1
    return tWt
endfunction
function ktr takes integer Gtr, integer gtr, string htr returns boolean
    local boolean Ftr
    set DSw[ASw] = htr
    set ASw = ASw + 1
    set Ftr = Gtr == 1 and gtr != l2s(Iji("H007", "when calling unObfuscate in Items_Pickup_Drop, line 167"), "when calling fromRawCode in Items_Pickup_Drop, line 167") and gtr != l2s(Iji("H00E", "when calling unObfuscate in Items_Pickup_Drop, line 167"), "when calling fromRawCode in Items_Pickup_Drop, line 167") and gtr != l2s(Iji("H01B", "when calling unObfuscate in Items_Pickup_Drop, line 167"), "when calling fromRawCode in Items_Pickup_Drop, line 167") and gtr != l2s(Iji("H02C", "when calling unObfuscate in Items_Pickup_Drop, line 167"), "when calling fromRawCode in Items_Pickup_Drop, line 167") and gtr != l2s(Iji("H004", "when calling unObfuscate in Items_Pickup_Drop, line 167"), "when calling fromRawCode in Items_Pickup_Drop, line 167") and gtr != l2s(Iji("H00F", "when calling unObfuscate in Items_Pickup_Drop, line 167"), "when calling fromRawCode in Items_Pickup_Drop, line 167") and gtr != l2s(Iji("H01A", "when calling unObfuscate in Items_Pickup_Drop, line 167"), "when calling fromRawCode in Items_Pickup_Drop, line 167") and gtr != l2s(Iji("H02B", "when calling unObfuscate in Items_Pickup_Drop, line 167"), "when calling fromRawCode in Items_Pickup_Drop, line 167") and gtr != l2s(Iji("H005", "when calling unObfuscate in Items_Pickup_Drop, line 167"), "when calling fromRawCode in Items_Pickup_Drop, line 167") and gtr != l2s(Iji("H00I", "when calling unObfuscate in Items_Pickup_Drop, line 167"), "when calling fromRawCode in Items_Pickup_Drop, line 167") and gtr != l2s(Iji("H017", "when calling unObfuscate in Items_Pickup_Drop, line 167"), "when calling fromRawCode in Items_Pickup_Drop, line 167") and gtr != l2s(Iji("H016", "when calling unObfuscate in Items_Pickup_Drop, line 167"), "when calling fromRawCode in Items_Pickup_Drop, line 167") and gtr != l2s(Iji("H024", "when calling unObfuscate in Items_Pickup_Drop, line 167"), "when calling fromRawCode in Items_Pickup_Drop, line 167") and gtr != l2s(Iji("H023", "when calling unObfuscate in Items_Pickup_Drop, line 167"), "when calling fromRawCode in Items_Pickup_Drop, line 167") and gtr != l2s(Iji("H006", "when calling unObfuscate in Items_Pickup_Drop, line 167"), "when calling fromRawCode in Items_Pickup_Drop, line 167") and gtr != l2s(Iji("H00H", "when calling unObfuscate in Items_Pickup_Drop, line 167"), "when calling fromRawCode in Items_Pickup_Drop, line 167") and gtr != l2s(Iji("H019", "when calling unObfuscate in Items_Pickup_Drop, line 167"), "when calling fromRawCode in Items_Pickup_Drop, line 167") and gtr != l2s(Iji("H02S", "when calling unObfuscate in Items_Pickup_Drop, line 167"), "when calling fromRawCode in Items_Pickup_Drop, line 167") and gtr != l2s(Iji("H018", "when calling unObfuscate in Items_Pickup_Drop, line 167"), "when calling fromRawCode in Items_Pickup_Drop, line 167") and gtr != l2s(Iji("H02R", "when calling unObfuscate in Items_Pickup_Drop, line 167"), "when calling fromRawCode in Items_Pickup_Drop, line 167") and gtr != l2s(Iji("H00N", "when calling unObfuscate in Items_Pickup_Drop, line 167"), "when calling fromRawCode in Items_Pickup_Drop, line 167") and gtr != l2s(Iji("H00O", "when calling unObfuscate in Items_Pickup_Drop, line 167"), "when calling fromRawCode in Items_Pickup_Drop, line 167") and gtr != l2s(Iji("H01Y", "when calling unObfuscate in Items_Pickup_Drop, line 167"), "when calling fromRawCode in Items_Pickup_Drop, line 167") and gtr != l2s(Iji("H01Z", "when calling unObfuscate in Items_Pickup_Drop, line 167"), "when calling fromRawCode in Items_Pickup_Drop, line 167") and gtr != l2s(Iji("H02T", "when calling unObfuscate in Items_Pickup_Drop, line 167"), "when calling fromRawCode in Items_Pickup_Drop, line 167") and gtr != l2s(Iji("H02U", "when calling unObfuscate in Items_Pickup_Drop, line 167"), "when calling fromRawCode in Items_Pickup_Drop, line 167")
    set ASw = ASw - 1
    return Ftr
endfunction
function kys takes integer Gys, integer gys, string hys returns boolean
    local boolean Fys
    set DSw[ASw] = hys
    set ASw = ASw + 1
    set Fys = Gys == 14 and gys != l2s(Iji("H02Q", "when calling unObfuscate in Items_Pickup_Drop, line 209"), "when calling fromRawCode in Items_Pickup_Drop, line 209") and gys != l2s(Iji("H02P", "when calling unObfuscate in Items_Pickup_Drop, line 209"), "when calling fromRawCode in Items_Pickup_Drop, line 209")
    set ASw = ASw - 1
    return Fys
endfunction
function l4s takes integer S4s, integer c4s, string o4s returns boolean
    local boolean O4s
    set DSw[ASw] = o4s
    set ASw = ASw + 1
    set O4s = S4s == 30 and c4s != l2s(Iji("H02L", "when calling unObfuscate in Items_Pickup_Drop, line 263"), "when calling fromRawCode in Items_Pickup_Drop, line 263")
    set ASw = ASw - 1
    return O4s
endfunction
function lst takes unit Ost returns boolean
    return r5S(Ost) == 1211117617 or r5S(Ost) == 1211117618 and boS(Ost) == 300
endfunction
function nau takes integer pau, integer eau, string qau returns boolean
    local boolean aau
    set DSw[ASw] = qau
    set ASw = ASw + 1
    set aau = pau == 19 and eau != l2s(Iji("H02K", "when calling unObfuscate in Items_Pickup_Drop, line 224"), "when calling fromRawCode in Items_Pickup_Drop, line 224") and eau != l2s(Iji("H02H", "when calling unObfuscate in Items_Pickup_Drop, line 224"), "when calling fromRawCode in Items_Pickup_Drop, line 224")
    set ASw = ASw - 1
    return aau
endfunction
function fKs takes integer qKs, integer aKs, string nKs returns boolean
    local boolean dKs
    set DSw[ASw] = nKs
    set ASw = ASw + 1
    set dKs = aKs == l2s(Iji("H005", "when calling unObfuscate in Items_Pickup_Drop, line 179"), "when calling fromRawCode in Items_Pickup_Drop, line 179") or aKs == l2s(Iji("H00I", "when calling unObfuscate in Items_Pickup_Drop, line 179"), "when calling fromRawCode in Items_Pickup_Drop, line 179") or aKs == l2s(Iji("H017", "when calling unObfuscate in Items_Pickup_Drop, line 179"), "when calling fromRawCode in Items_Pickup_Drop, line 179") or aKs == l2s(Iji("H016", "when calling unObfuscate in Items_Pickup_Drop, line 179"), "when calling fromRawCode in Items_Pickup_Drop, line 179") or aKs == l2s(Iji("H024", "when calling unObfuscate in Items_Pickup_Drop, line 179"), "when calling fromRawCode in Items_Pickup_Drop, line 179") or aKs == l2s(Iji("H023", "when calling unObfuscate in Items_Pickup_Drop, line 179"), "when calling fromRawCode in Items_Pickup_Drop, line 179")
    set ASw = ASw - 1
    return dKs
endfunction
function oXt takes integer tXt, integer iXt, string SXt returns boolean
    local boolean cXt
    set DSw[ASw] = SXt
    set ASw = ASw + 1
    set cXt = tXt == 5 and fKs(tXt, iXt, "when calling all_not_initiate in Items_Pickup_Drop, line 182")
    set ASw = ASw - 1
    return cXt
endfunction
function opu takes integer tpu, integer ipu, string Spu returns boolean
    local boolean cpu
    set DSw[ASw] = Spu
    set ASw = ASw + 1
    set cpu = tpu == 29 and ipu != l2s(Iji("H02O", "when calling unObfuscate in Items_Pickup_Drop, line 260"), "when calling fromRawCode in Items_Pickup_Drop, line 260") and ipu != l2s(Iji("H02N", "when calling unObfuscate in Items_Pickup_Drop, line 260"), "when calling fromRawCode in Items_Pickup_Drop, line 260") and ipu != l2s(Iji("H02Q", "when calling unObfuscate in Items_Pickup_Drop, line 260"), "when calling fromRawCode in Items_Pickup_Drop, line 260") and ipu != l2s(Iji("H02P", "when calling unObfuscate in Items_Pickup_Drop, line 260"), "when calling fromRawCode in Items_Pickup_Drop, line 260")
    set ASw = ASw - 1
    return cpu
endfunction
function pui takes integer Oui, integer lui, string bui returns boolean
    local boolean yui
    set DSw[ASw] = bui
    set ASw = ASw + 1
    set yui = Oui == 11 and lui != l2s(Iji("H008", "when calling unObfuscate in Items_Pickup_Drop, line 200"), "when calling fromRawCode in Items_Pickup_Drop, line 200") and lui != l2s(Iji("H00L", "when calling unObfuscate in Items_Pickup_Drop, line 200"), "when calling fromRawCode in Items_Pickup_Drop, line 200") and lui != l2s(Iji("H011", "when calling unObfuscate in Items_Pickup_Drop, line 200"), "when calling fromRawCode in Items_Pickup_Drop, line 200") and lui != l2s(Iji("H010", "when calling unObfuscate in Items_Pickup_Drop, line 200"), "when calling fromRawCode in Items_Pickup_Drop, line 200") and lui != l2s(Iji("H02O", "when calling unObfuscate in Items_Pickup_Drop, line 200"), "when calling fromRawCode in Items_Pickup_Drop, line 200") and lui != l2s(Iji("H02N", "when calling unObfuscate in Items_Pickup_Drop, line 200"), "when calling fromRawCode in Items_Pickup_Drop, line 200")
    set ASw = ASw - 1
    return yui
endfunction
function v8S takes integer F8S, integer k8S, string j8S returns boolean
    local boolean x8S
    set DSw[ASw] = j8S
    set ASw = ASw + 1
    set x8S = F8S == 7 and k8S != l2s(Iji("H003", "when calling unObfuscate in Items_Pickup_Drop, line 188"), "when calling fromRawCode in Items_Pickup_Drop, line 188") and k8S != l2s(Iji("H00J", "when calling unObfuscate in Items_Pickup_Drop, line 188"), "when calling fromRawCode in Items_Pickup_Drop, line 188") and k8S != l2s(Iji("H012", "when calling unObfuscate in Items_Pickup_Drop, line 188"), "when calling fromRawCode in Items_Pickup_Drop, line 188") and k8S != l2s(Iji("H013", "when calling unObfuscate in Items_Pickup_Drop, line 188"), "when calling fromRawCode in Items_Pickup_Drop, line 188") and k8S != l2s(Iji("H02H", "when calling unObfuscate in Items_Pickup_Drop, line 188"), "when calling fromRawCode in Items_Pickup_Drop, line 188") and k8S != l2s(Iji("H02K", "when calling unObfuscate in Items_Pickup_Drop, line 188"), "when calling fromRawCode in Items_Pickup_Drop, line 188") and k8S != l2s(Iji("H00A", "when calling unObfuscate in Items_Pickup_Drop, line 188"), "when calling fromRawCode in Items_Pickup_Drop, line 188") and k8S != l2s(Iji("H00K", "when calling unObfuscate in Items_Pickup_Drop, line 188"), "when calling fromRawCode in Items_Pickup_Drop, line 188") and k8S != l2s(Iji("H01D", "when calling unObfuscate in Items_Pickup_Drop, line 188"), "when calling fromRawCode in Items_Pickup_Drop, line 188") and k8S != l2s(Iji("H01C", "when calling unObfuscate in Items_Pickup_Drop, line 188"), "when calling fromRawCode in Items_Pickup_Drop, line 188") and k8S != l2s(Iji("H02M", "when calling unObfuscate in Items_Pickup_Drop, line 188"), "when calling fromRawCode in Items_Pickup_Drop, line 188") and k8S != l2s(Iji("H02L", "when calling unObfuscate in Items_Pickup_Drop, line 188"), "when calling fromRawCode in Items_Pickup_Drop, line 188") and k8S != l2s(Iji("H009", "when calling unObfuscate in Items_Pickup_Drop, line 188"), "when calling fromRawCode in Items_Pickup_Drop, line 188") and k8S != l2s(Iji("H00M", "when calling unObfuscate in Items_Pickup_Drop, line 188"), "when calling fromRawCode in Items_Pickup_Drop, line 188") and k8S != l2s(Iji("H01F", "when calling unObfuscate in Items_Pickup_Drop, line 188"), "when calling fromRawCode in Items_Pickup_Drop, line 188") and k8S != l2s(Iji("H01E", "when calling unObfuscate in Items_Pickup_Drop, line 188"), "when calling fromRawCode in Items_Pickup_Drop, line 188") and k8S != l2s(Iji("H02Q", "when calling unObfuscate in Items_Pickup_Drop, line 188"), "when calling fromRawCode in Items_Pickup_Drop, line 188") and k8S != l2s(Iji("H02P", "when calling unObfuscate in Items_Pickup_Drop, line 188"), "when calling fromRawCode in Items_Pickup_Drop, line 188")
    set ASw = ASw - 1
    return x8S
endfunction
function xct takes integer hct, integer Fct, string kct returns boolean
    local boolean jct
    set DSw[ASw] = kct
    set ASw = ASw + 1
    set jct = hct == 2 and Fct != l2s(Iji("H003", "when calling unObfuscate in Items_Pickup_Drop, line 170"), "when calling fromRawCode in Items_Pickup_Drop, line 170") and Fct != l2s(Iji("H00J", "when calling unObfuscate in Items_Pickup_Drop, line 170"), "when calling fromRawCode in Items_Pickup_Drop, line 170") and Fct != l2s(Iji("H012", "when calling unObfuscate in Items_Pickup_Drop, line 170"), "when calling fromRawCode in Items_Pickup_Drop, line 170") and Fct != l2s(Iji("H02H", "when calling unObfuscate in Items_Pickup_Drop, line 170"), "when calling fromRawCode in Items_Pickup_Drop, line 170") and Fct != l2s(Iji("H013", "when calling unObfuscate in Items_Pickup_Drop, line 170"), "when calling fromRawCode in Items_Pickup_Drop, line 170") and Fct != l2s(Iji("H02K", "when calling unObfuscate in Items_Pickup_Drop, line 170"), "when calling fromRawCode in Items_Pickup_Drop, line 170")
    set ASw = ASw - 1
    return jct
endfunction
function yGi takes integer oGi, integer OGi, string lGi returns boolean
    local boolean bGi
    set DSw[ASw] = lGi
    set ASw = ASw + 1
    set bGi = oGi == 4 and OGi != l2s(Iji("H00A", "when calling unObfuscate in Items_Pickup_Drop, line 176"), "when calling fromRawCode in Items_Pickup_Drop, line 176") and OGi != l2s(Iji("H00K", "when calling unObfuscate in Items_Pickup_Drop, line 176"), "when calling fromRawCode in Items_Pickup_Drop, line 176") and OGi != l2s(Iji("H01D", "when calling unObfuscate in Items_Pickup_Drop, line 176"), "when calling fromRawCode in Items_Pickup_Drop, line 176") and OGi != l2s(Iji("H01C", "when calling unObfuscate in Items_Pickup_Drop, line 176"), "when calling fromRawCode in Items_Pickup_Drop, line 176") and OGi != l2s(Iji("H02M", "when calling unObfuscate in Items_Pickup_Drop, line 176"), "when calling fromRawCode in Items_Pickup_Drop, line 176") and OGi != l2s(Iji("H02L", "when calling unObfuscate in Items_Pickup_Drop, line 176"), "when calling fromRawCode in Items_Pickup_Drop, line 176")
    set ASw = ASw - 1
    return bGi
endfunction
function yuS takes integer ouS, integer OuS, string luS returns boolean
    local boolean buS
    set DSw[ASw] = luS
    set ASw = ASw + 1
    set buS = ouS == 33 and OuS != l2s(Iji("H02H", "when calling unObfuscate in Items_Pickup_Drop, line 272"), "when calling fromRawCode in Items_Pickup_Drop, line 272") and OuS != l2s(Iji("H02K", "when calling unObfuscate in Items_Pickup_Drop, line 272"), "when calling fromRawCode in Items_Pickup_Drop, line 272") and OuS != l2s(Iji("H02O", "when calling unObfuscate in Items_Pickup_Drop, line 272"), "when calling fromRawCode in Items_Pickup_Drop, line 272")
    set ASw = ASw - 1
    return buS
endfunction
function Lor takes unit Por, item Aor, integer Dor, string Hor returns boolean
    local integer Jor
    local boolean Kor
    set DSw[ASw] = Hor
    set ASw = ASw + 1
    set Jor = AHt(Aor)
    set Kor = ktr(Jor, Dor, "when calling initiate_druid_acolyte in Items_Pickup_Drop, line 340") or xct(Jor, Dor, "when calling tU in Items_Pickup_Drop, line 340") or MZs(Jor, Dor, "when calling archer_one in Items_Pickup_Drop, line 340") or yGi(Jor, Dor, "when calling uU in Items_Pickup_Drop, line 340") or oXt(Jor, Dor, "when calling wU in Items_Pickup_Drop, line 340") or BDr(Jor, Dor, "when calling sword_thief in Items_Pickup_Drop, line 340") or v8S(Jor, Dor, "when calling yU in Items_Pickup_Drop, line 340") or ZOu(Jor, Dor, "when calling sword_thief_witcher in Items_Pickup_Drop, line 340") or NnS(Jor, Dor, "when calling zU in Items_Pickup_Drop, line 340") or Fht(Jor, Dor, "when calling high_templar in Items_Pickup_Drop, line 340") or pui(Jor, Dor, "when calling vw in Items_Pickup_Drop, line 341") or VDt(Jor, Dor, "when calling initiate_last in Items_Pickup_Drop, line 341") or Tns(Jor, Dor, "when calling druid in Items_Pickup_Drop, line 341") or kys(Jor, Dor, "when calling witcher in Items_Pickup_Drop, line 341") or Hhu(Jor, Dor, "when calling archer in Items_Pickup_Drop, line 341") or gRu(Jor, Dor, "when calling templar in Items_Pickup_Drop, line 341") or RUr(Jor, Dor, "when calling thief_last in Items_Pickup_Drop, line 341") or WQu(Jor, Dor, "when calling acolyte in Items_Pickup_Drop, line 341") or nau(Jor, Dor, "when calling sword in Items_Pickup_Drop, line 341") or UEi(Jor, Dor, "when calling initiate_andOthers in Items_Pickup_Drop, line 341") or YhS(Jor, Dor, "when calling initiate_druid_acolyte_templar in Items_Pickup_Drop, line 341") or Ras(Jor, Dor, "when calling sword_templar_thief_witcher in Items_Pickup_Drop, line 342") or awt(Jor, Dor, "when calling archer_thief_witcher in Items_Pickup_Drop, line 342") or J_u(Jor, Dor, "when calling sword_druid_thief_witcher in Items_Pickup_Drop, line 342") or CIu(Jor, Dor, "when calling sword_templar in Items_Pickup_Drop, line 342") or Q8w(Jor, Dor, "when calling sword_templar_witcher in Items_Pickup_Drop, line 342") or TOt(Jor, Dor, "when calling sword_runemaster_templar_witcher in Items_Pickup_Drop, line 342") or CUi(Jor, Dor, "when calling sword_runemaster_thief_witcher in Items_Pickup_Drop, line 343") or opu(Jor, Dor, "when calling thief_witcher_4thjob in Items_Pickup_Drop, line 343") or iWt(Jor, Dor, "when calling thief_witcher_3rd4thjobs in Items_Pickup_Drop, line 343") or l4s(Jor, Dor, "when calling grand_templar in Items_Pickup_Drop, line 343") or QJs(Jor, Dor, "when calling swordsman_4thjob in Items_Pickup_Drop, line 343") or yuS(Jor, Dor, "when calling swordsman_stalker_4thjob in Items_Pickup_Drop, line 343") or L3r(Jor, Dor, "when calling sword_runemaster_thief_witcher_templar in Items_Pickup_Drop, line 343") or VCi(Por, Jor, Dor, "when calling allClasses_4thJob in Items_Pickup_Drop, line 344") or NpS(Jor, Dor, "when calling initiate_druid_acolyte_4thjob in Items_Pickup_Drop, line 344") or UCr(Jor, Dor, "when calling sword_thief_witcher_4thjob in Items_Pickup_Drop, line 344") and(not lst(Por))
    set ASw = ASw - 1
    return Kor
endfunction
function QUu takes unit kUu, integer jUu returns boolean
    local boolean xUu = false
    local integer vUu = 0
    local integer mUu = dcs(kUu) - 1
    loop
        exitwhen vUu > mUu
        if q3t(ofi(kUu, vUu)) == jUu then
            set xUu = true
            exitwhen true
        endif
        set vUu = vUu + 1
    endloop
    return xUu
endfunction
function RNt takes integer fNt returns boolean
    return fNt == NF or fNt == MF or fNt == wk or fNt == uk or fNt == rk or fNt == sk or fNt == tk or fNt == ik or fNt == Sk or fNt == ck
endfunction
function brs takes item lrs returns integer
    return GetItemCharges(lrs)
endfunction
function Ynr takes unit dnr, integer fnr returns integer
    local integer Rnr = 0
    local integer Tnr = 0
    loop
        exitwhen Tnr > 5
        if RNt(q3t(ofi(dnr, Tnr))) and(not(brs(ofi(dnr, Tnr)) > 1)) and fnr != q3t(ofi(dnr, Tnr)) then
            set Rnr = Rnr + 1
        endif
        set Tnr = Tnr + 1
    endloop
    return Rnr
endfunction
function P3r takes unit U3r, integer I3r returns boolean
    return (lst(U3r) and Ynr(U3r, uk) > 2 and I3r != uk and I3r != rk and RNt(I3r) and Ynr(U3r, rk) > 2 and I3r != rk and I3r != uk and RNt(I3r))or (QUu(U3r, uk) and I3r == rk)or(QUu(U3r, rk) and I3r == uk)
endfunction
function RBt takes item fBt returns boolean
    return RNt(q3t(fBt))
endfunction
function V5S takes unit X5S, integer C5S returns boolean
    return UnitAddAbility(X5S, C5S)
endfunction
function XRt takes item LRt returns string
    return GetItemName(LRt)
endfunction
function BYi takes string CYi returns integer
    local integer VYi
    set DSw[ASw] = CYi
    set ASw = ASw + 1
    if PC == 0 then
        if AC < 32768 then
            set AC = AC + 1
            set VYi = AC
            set DC[VYi] = 689
        else
            call tNr("Out of memory: Could not create CallbackPeriodic_doPeriodically_Items_Pickup_Drop.", "when calling error in Items_Pickup_Drop, line 509")
            set VYi = 0
        endif
    else
        set PC = PC - 1
        set VYi = IC[PC]
        set DC[VYi] = 689
    endif
    set ASw = ASw - 1
    return VYi
endfunction
function Oir takes string cir returns integer
    local integer oir
    set DSw[ASw] = cir
    set ASw = ASw + 1
    if PC == 0 then
        if AC < 32768 then
            set AC = AC + 1
            set oir = AC
            set DC[oir] = 690
        else
            call tNr("Out of memory: Could not create CallbackPeriodic_doPeriodically_Items_Pickup_Drop.", "when calling error in Items_Pickup_Drop, line 522")
            set oir = 0
        endif
    else
        set PC = PC - 1
        set oir = IC[PC]
        set DC[oir] = 690
    endif
    set ASw = ASw - 1
    return oir
endfunction
function AYr takes item IYr, string PYr returns nothing
    call BlzSetItemExtendedTooltip(IYr, PYr)
endfunction
function D0i takes item P0i, string A0i returns nothing
    call BlzSetItemDescription(P0i, A0i)
endfunction
function Fcu takes item hcu returns string
    return BlzGetItemExtendedTooltip(hcu)
endfunction
function KFs takes item JFs returns string
    return BlzGetItemTooltip(JFs)
endfunction
function Z9r takes item W9r, string E9r returns nothing
    call BlzSetItemTooltip(W9r, E9r)
endfunction
function ost takes item Sst, integer cst returns nothing
    call BlzSetItemSkin(Sst, cst)
endfunction
function wis takes item Mts returns string
    return BlzGetItemDescription(Mts)
endfunction
function ReS takes item beS, integer yeS returns nothing
    local string peS
    local string eeS
    local string qeS
    local item aeS
    local item neS
    local item deS
    local item feS
    if beS != null then
        set peS = wis(beS)
        set eeS = KFs(beS)
        set qeS = Fcu(beS)
        set aeS = beS
        call ost(aeS, yeS)
        set neS = aeS
        call D0i(neS, peS)
        set deS = neS
        call Z9r(deS, eeS)
        set feS = deS
        call AYr(feS, qeS)
    endif
    set aeS = null
    set neS = null
    set deS = null
    set feS = null
endfunction
function uwr takes unit V_r, integer B_r returns item
    local item N_r = null
    local integer M_r = 0
    local integer wwr = dcs(V_r) - 1
    loop
        exitwhen M_r > wwr
        if q3t(ofi(V_r, M_r)) == B_r then
            set N_r = ofi(V_r, M_r)
            exitwhen true
        endif
        set M_r = M_r + 1
    endloop
    set rPw = N_r
    set N_r = null
    return rPw
endfunction
function c8w takes unit i8w, integer S8w returns boolean
    return uwr(i8w, S8w) != null
endfunction
function wBr takes unit PVr, string AVr returns nothing
    local boolean DVr
    local item HVr
    local integer JVr
    local integer KVr
    local integer LVr
    local integer XVr
    local integer CVr
    local item VVr
    local item BVr
    local item NVr
    local item MVr
    set DSw[ASw] = AVr
    set ASw = ASw + 1
    set DVr = wps(OI, hgr(eDs(PVr)), "when calling get in Voidless_extensions, line 204") == 0
    set HVr = uwr(PVr, BF)
    set JVr = brs(HVr)
    if HVr != null then
        if JVr <= 4 then
            set VVr = HVr
            if DVr then
    set KVr = oL
            else
    set KVr = cL
            endif
            call ReS(VVr, KVr)
        elseif JVr >= 5 and JVr <= 14 then
            set BVr = HVr
            if DVr then
    set LVr = lL
            else
    set LVr = OL
            endif
            call ReS(BVr, LVr)
        elseif JVr >= 15 and JVr <= 24 then
            set NVr = HVr
            if DVr then
    set XVr = yL
            else
    set XVr = bL
            endif
            call ReS(NVr, XVr)
        elseif JVr >= 25 then
            set MVr = HVr
            if DVr then
    set CVr = eL
            else
    set CVr = pL
            endif
            call ReS(MVr, CVr)
        endif
    endif
    set ASw = ASw - 1
    set HVr = null
    set VVr = null
    set BVr = null
    set NVr = null
    set MVr = null
endfunction
function Qpi takes unit hpi, string Fpi returns nothing
    local boolean kpi
    local integer jpi
    local integer xpi
    local item vpi
    local item mpi
    set DSw[ASw] = Fpi
    set ASw = ASw + 1
    set kpi = wps(OI, hgr(eDs(hpi)), "when calling get in Inspirit_Overvelde, line 113") == 0
    if c8w(hpi, BF) then
        call wBr(hpi, "when calling updateStabilizedVoidPrismIcon in Inspirit_Overvelde, line 116")
    elseif c8w(hpi, rk) then
        set vpi = uwr(hpi, rk)
        if kpi then
            set jpi = wI
        else
            set jpi = MU
        endif
        call ReS(vpi, jpi)
    elseif c8w(hpi, uk) then
        set mpi = uwr(hpi, uk)
        if kpi then
            set xpi = NU
        else
            set xpi = BU
        endif
        call ReS(mpi, xpi)
    endif
    set ASw = ASw - 1
    set vpi = null
    set mpi = null
endfunction
function iGu takes integer tGu returns nothing
endfunction
function kVu takes integer FVu returns nothing
    call iGu(FVu)
endfunction
function nnr takes timer enr, real qnr, code anr returns nothing
    call TimerStart(enr, qnr, true, anr)
endfunction
function YQu takes integer aQu, timer nQu, real dQu, string fQu returns nothing
    local timer RQu
    local timer TQu
    set DSw[ASw] = fQu
    set ASw = ASw + 1
    set RQu = nQu
    call tNu(RQu, aQu, "when calling setData in ClosureTimers, line 134")
    set TQu = RQu
    call nnr(TQu, dQu, rZw)
    set jM[aQu] = TQu
    set ASw = ASw - 1
    set RQu = null
    set TQu = null
endfunction
function rht takes integer Ngt, timer Mgt, real wht, string uht returns nothing
    set DSw[ASw] = uht
    set ASw = ASw + 1
    if DC[Ngt] == 0 then
        if Ngt == 0 then
            call tNr("Nullpointer exception when calling CallbackPeriodic.start", "when calling error in ClosureTimers, line 132")
        else
            call tNr("Called CallbackPeriodic.start on invalid object.", "when calling error in ClosureTimers, line 132")
        endif
    endif
    call YQu(Ngt, Mgt, wht, "when calling start in ClosureTimers, line 132")
    set ASw = ASw - 1
endfunction
function G7S takes timer f7S, real R7S, integer T7S, string Y7S returns integer
    set DSw[ASw] = Y7S
    set ASw = ASw + 1
    call rht(T7S, f7S, R7S, "when calling start in ClosureTimers, line 45")
    set ASw = ASw - 1
    return T7S
endfunction
function wcs takes real VSs, integer BSs, string NSs returns integer
    local integer MSs
    set DSw[ASw] = NSs
    set ASw = ASw + 1
    set MSs = G7S(ZPs("when calling getTimer in ClosureTimers, line 57"), VSs, BSs, "when calling doPeriodically in ClosureTimers, line 57")
    set ASw = ASw - 1
    return MSs
endfunction
function Ydu takes unit adu, string ndu returns nothing
    local player ddu
    local integer fdu
    local integer Rdu
    local integer Tdu
    set DSw[ASw] = ndu
    set ASw = ASw + 1
    set ddu = eDs(adu)
    set fdu = hgr(ddu)
    if Jyr(aI, fdu, "when calling has in Items_Pickup_Drop, line 506") and(not TYt(wps(aI, fdu, "when calling get in Items_Pickup_Drop, line 506"))) and Jyr(qI, fdu, "when calling has in Items_Pickup_Drop, line 506") and(not TYt(wps(qI, fdu, "when calling get in Items_Pickup_Drop, line 506"))) then
        call GVw(aI, fdu, O_i(true), "when calling put in Items_Pickup_Drop, line 507")
        set Rdu = BYi("when calling alloc_CallbackPeriodic_doPeriodically_Items_Pickup_Drop in Items_Pickup_Drop, line 509")
        call kVu(Rdu)
        set m0w[Rdu] = adu
        set Q0w[Rdu] = fdu
        call wcs(1., Rdu, "when calling doPeriodically in Items_Pickup_Drop, line 509")
        call GVw(qI, fdu, O_i(true), "when calling put in Items_Pickup_Drop, line 520")
        set Tdu = Oir("when calling alloc_CallbackPeriodic_doPeriodically_Items_Pickup_Drop in Items_Pickup_Drop, line 522")
        call kVu(Tdu)
        set W0w[Tdu] = adu
        set E0w[Tdu] = fdu
        call wcs(1., Tdu, "when calling doPeriodically in Items_Pickup_Drop, line 522")
    endif
    call Qpi(adu, "when calling inspiritPrismUpdateIcon in Items_Pickup_Drop, line 533")
    set ASw = ASw - 1
    set ddu = null
endfunction
function ZVi takes unit vVi, integer mVi returns boolean
    local integer QVi = 0
    local integer WVi
    local integer EVi
    if RNt(mVi) then
        set WVi = 0
        set EVi = dcs(vVi) - 1
        loop
            exitwhen WVi > EVi
            if q3t(ofi(vVi, WVi)) == mVi then
    set QVi = QVi + 1
            endif
            set WVi = WVi + 1
        endloop
    endif
    return QVi > 1
endfunction
function aHr takes unit yHr, integer pHr returns integer
    local integer eHr = 0
    local integer qHr = 0
    loop
        exitwhen qHr > 5
        if q3t(ofi(yHr, qHr)) == pHr and(not(brs(ofi(yHr, qHr)) > 1)) then
            set eHr = eHr + 1
        endif
        set qHr = qHr + 1
    endloop
    return eHr
endfunction
function agS takes effect qgS returns integer
    return YEi(qgS)
endfunction
function ait takes item yit, string pit returns boolean
    local integer eit
    local boolean qit
    set DSw[ASw] = pit
    set ASw = ASw + 1
    set eit = q3t(yit)
    set qit = Hri(yit) == ITEM_TYPE_PURCHASABLE or GpS(FI, eit, "when calling has in Items_Pickup_Drop, line 147") or GpS(hI, eit, "when calling has in Items_Pickup_Drop, line 147")
    set ASw = ASw - 1
    return qit
endfunction
function d7s takes unit O7s, integer l7s, string b7s returns boolean
    local integer y7s
    local boolean p7s
    local integer e7s
    local integer q7s
    local item a7s
    local integer n7s
    set DSw[ASw] = b7s
    set ASw = ASw + 1
    set y7s = 0
    set p7s = true
    set e7s = 0
    set q7s = dcs(O7s) - 1
    loop
        exitwhen e7s > q7s
        set a7s = ofi(O7s, e7s)
        set n7s = q3t(a7s)
        if n7s == uk or n7s == rk then
            call UTu(O7s, a7s, l7s, "when calling dropItem_Or_dropToRewardArea in Items_Pickup_Drop, line 311")
            call Frr(O7s, a7s)
            call dii(Iji("|cffff0000You already carry an Inspirit, infused with Psynergy.|r", "when calling unObfuscate in Items_Pickup_Drop, line 313"), 5., aD[l7s])
        endif
        if n7s == BF then
            set y7s = y7s + 1
            if y7s > 1 then
    set p7s = false
    call UTu(O7s, a7s, l7s, "when calling dropItem_Or_dropToRewardArea in Items_Pickup_Drop, line 319")
    call Frr(O7s, a7s)
    call dii(Iji("|cffff0000You already carry an Inspirit, infused with Psynergy.|r", "when calling unObfuscate in Items_Pickup_Drop, line 321"), 5., aD[l7s])
            endif
        endif
        set e7s = e7s + 1
    endloop
    set ASw = ASw - 1
    set a7s = null
    return p7s
endfunction
function eBr takes string yBr returns integer
    local integer pBr
    set DSw[ASw] = yBr
    set ASw = ASw + 1
    if NX == 0 then
        if MX < 32768 then
            set MX = MX + 1
            set pBr = MX
            set wC[pBr] = 887
        else
            call tNr("Out of memory: Could not create CallbackSingle_doAfter_Items_Pickup_Drop.", "when calling error in Items_Pickup_Drop, line 412")
            set pBr = 0
        endif
    else
        set NX = NX - 1
        set pBr = BX[NX]
        set wC[pBr] = 887
    endif
    set ASw = ASw - 1
    return pBr
endfunction
function k4i takes unit h4i, integer F4i returns boolean
    return RNt(F4i) and QUu(h4i, F4i)
endfunction
function mTs takes string xTs returns integer
    local integer vTs
    set DSw[ASw] = xTs
    set ASw = ASw + 1
    if NX == 0 then
        if MX < 32768 then
            set MX = MX + 1
            set vTs = MX
            set wC[vTs] = 888
        else
            call tNr("Out of memory: Could not create CallbackSingle_doAfter_Items_Pickup_Drop.", "when calling error in Items_Pickup_Drop, line 426")
            set vTs = 0
        endif
    else
        set NX = NX - 1
        set vTs = BX[NX]
        set wC[vTs] = 888
    endif
    set ASw = ASw - 1
    return vTs
endfunction
function mXi takes unit jXi, string xXi, string vXi returns effect
    return AddSpecialEffectTarget(xXi, jXi, vXi)
endfunction
function nMi takes unit eMi, string qMi returns boolean
    local boolean aMi
    set DSw[ASw] = qMi
    set ASw = ASw + 1
    set aMi = gDt(r5S(eMi), "when calling is4thJob in Items_Pickup_Drop, line 284")
    set ASw = ASw - 1
    return aMi
endfunction
function TSr takes hashtable dSr, integer fSr, integer RSr returns item
    return LoadItemHandle(dSr, fSr, RSr)
endfunction
function kbS takes integer hbS, integer FbS returns item
    return TSr(qJ, hbS, FbS)
endfunction
function tpr takes integer wpr, integer upr, string rpr returns item
    local item spr
    set DSw[ASw] = rpr
    set ASw = ASw + 1
    if vB[wpr] == 0 then
        if wpr == 0 then
            call tNr("Nullpointer exception when calling Table.loadItem", "when calling error in Table, line 87")
        else
            call tNr("Called Table.loadItem on invalid object.", "when calling error in Table, line 87")
        endif
    endif
    set spr = kbS(wpr, upr)
    set ASw = ASw - 1
    set dIw = spr
    set spr = null
    return dIw
endfunction
function s2r takes integer w2r, string u2r returns item
    local item r2r
    set DSw[ASw] = u2r
    set ASw = ASw + 1
    call nfS(ZJ, $00000000, ConvertFogState(w2r), "when calling saveFogState in TypeCasting, line 67")
    set r2r = tpr(ZJ, $00000000, "when calling loadItem in TypeCasting, line 68")
    set ASw = ASw - 1
    set bPw = r2r
    set r2r = null
    return bPw
endfunction
function tdu takes item sdu returns nothing
    call RemoveItem(sdu)
endfunction
function vBu takes player xBu returns playercolor
    return GetPlayerColor(xBu)
endfunction
function vkt takes string jkt returns integer
    local integer xkt
    set DSw[ASw] = jkt
    set ASw = ASw + 1
    if NX == 0 then
        if MX < 32768 then
            set MX = MX + 1
            set xkt = MX
            set wC[xkt] = 1100
        else
            call tNr("Out of memory: Could not create CallbackSingle_nullTimer_Items_Pickup_Drop.", "when calling error in Items_Pickup_Drop, line 494")
            set xkt = 0
        endif
    else
        set NX = NX - 1
        set xkt = BX[NX]
        set wC[xkt] = 1100
    endif
    set ASw = ASw - 1
    return xkt
endfunction
function wru takes integer Vuu, boolean Buu returns nothing
    local real Nuu
    local effect Muu
    if nD == aD[Vuu]then
        set Muu = tm
        if Buu then
            set Nuu = 200.
        else
            set Nuu = 0.
        endif
        call Xjr(Muu, Nuu)
    endif
    set Muu = null
endfunction
function o8r takes string K7u returns nothing
    local unit L7u
    local player X7u
    local integer C7u
    local item V7u
    local item B7u
    local item N7u
    local integer M7u
    local integer w8r
    local integer u8r
    local boolean r8r
    local integer s8r
    local integer t8r
    local integer i8r
    local integer S8r
    local real c8r
    set DSw[ASw] = K7u
    set ASw = ASw + 1
    set L7u = GetTriggerUnit()
    set X7u = eDs(L7u)
    set C7u = hgr(X7u)
    if GetManipulatedItem() == null then
        set B7u = s2r(wps(fI, C7u, "when calling get in Items_Pickup_Drop, line 350"), "when calling itemFromIndex in Items_Pickup_Drop, line 350")
    else
        set B7u = GetManipulatedItem()
    endif
    set V7u = B7u
    set N7u = GetManipulatedItem()
    set M7u = q3t(V7u)
    set w8r = r5S(L7u)
    set u8r = hgr(v9S(V7u))
    set r8r = false
    if not Jyr(C_r(RI, C7u, "when calling get in Items_Pickup_Drop, line 358"), Xdu(V7u), "when calling has in Items_Pickup_Drop, line 358") then
        call GVw(C_r(RI, C7u, "when calling get in Items_Pickup_Drop, line 359"), Xdu(V7u), $00000000, "when calling put in Items_Pickup_Drop, line 359")
    endif
    if not Jyr(nI, C7u, "when calling has in Items_Pickup_Drop, line 360") then
        call GVw(nI, C7u, Xdu(null), "when calling put in Items_Pickup_Drop, line 361")
    endif
    if not Jyr(dI, C7u, "when calling has in Items_Pickup_Drop, line 362") then
        call GVw(dI, C7u, Xdu(null), "when calling put in Items_Pickup_Drop, line 363")
    endif
    if (not Jyr(ex, Xdu(V7u), "when calling has in Items_Pickup_Drop, line 365"))and(not GpS(kI, q3t(V7u), "when calling has in Items_Pickup_Drop, line 365")) then
        call tdu(V7u)
        set r8r = true
    endif
    if s2r(wps(nI, C7u, "when calling get in Items_Pickup_Drop, line 369"), "when calling itemFromIndex in Items_Pickup_Drop, line 369") != V7u and V7u != null and(not r8r) then
        call GVw(nI, C7u, Xdu(N7u), "when calling put in Items_Pickup_Drop, line 370")
        if GpS(hI, M7u, "when calling has in Items_Pickup_Drop, line 371") then
            if Jyr(sH, C7u, "when calling has in Items_Pickup_Drop, line 372") then
    if not GpS(wps(sH, C7u, "when calling get in Items_Pickup_Drop, line 373"), Xdu(V7u), "when calling has in Items_Pickup_Drop, line 373") then
                    call vwt(wps(sH, C7u, "when calling get in Items_Pickup_Drop, line 374"), Xdu(V7u), "when calling add in Items_Pickup_Drop, line 374")
    endif
            endif
        endif
        if (not Jyr(aI, C7u, "when calling has in Items_Pickup_Drop, line 376"))or(not Jyr(qI, C7u, "when calling has in Items_Pickup_Drop, line 376")) then
            call GVw(aI, C7u, O_i(false), "when calling put in Items_Pickup_Drop, line 377")
            call GVw(qI, C7u, O_i(false), "when calling put in Items_Pickup_Drop, line 378")
        endif
        if Lor(L7u, V7u, w8r, "when calling cannotPickup in Items_Pickup_Drop, line 380") and(not ESt(L7u, "when calling isStash in Items_Pickup_Drop, line 380")) and(not BDs(V7u, "when calling isTheDestiny in Items_Pickup_Drop, line 380")) and u8r > Lh or u8r == C7u then
            call IOt(V7u, X7u, false)
            call UTu(L7u, V7u, C7u, "when calling dropItem_Or_dropToRewardArea in Items_Pickup_Drop, line 382")
            call dii(Iji("You cannot carry that item by your class.", "when calling unObfuscate in Items_Pickup_Drop, line 383"), 2., X7u)
            if not nMi(L7u, "when calling is4thJob in Items_Pickup_Drop, line 385") then
    call dii(Iji("Keep in mind that powerful artifacts can be worn only by powerful heroes.", "when calling unObfuscate in Items_Pickup_Drop, line 386"), 2., X7u)
            endif
        elseif V7u != null then
            if (not ait(V7u, "when calling isStackable in Items_Pickup_Drop, line 388"))and(not GpS(FI, M7u, "when calling has in Items_Pickup_Drop, line 388")) then
    if v9S(V7u) == aD[Bh] or v9S(V7u) == X7u then
                    call IOt(V7u, X7u, true)
    else
                    call BZt(L7u, V7u, "when calling item_drop_if_wrong_owner in Items_Pickup_Drop, line 392")
                    set r8r = true
    endif
    if not r8r then
                    if ZVi(L7u, M7u) then
                        call UTu(L7u, V7u, C7u, "when calling dropItem_Or_dropToRewardArea in Items_Pickup_Drop, line 396")
                        set r8r = true
                    elseif aHr(L7u, M7u) > 2 or P3r(L7u, M7u) and Hri(V7u) != ITEM_TYPE_PURCHASABLE and(not BDs(V7u, "when calling isTheDestiny in Items_Pickup_Drop, line 398")) then
                        call dii(Iji("|cffff0000You can only carry the same item twice.|r", "when calling unObfuscate in Items_Pickup_Drop, line 399"), 5., X7u)
                        call UTu(L7u, V7u, C7u, "when calling dropItem_Or_dropToRewardArea in Items_Pickup_Drop, line 400")
                        set r8r = true
                    elseif k4i(L7u, uk) or k4i(L7u, rk) or c8w(L7u, BF) then
                        call Ydu(L7u, "when calling checkForInspiritAndApplyRegen in Items_Pickup_Drop, line 403")
                    endif
                    if BDs(V7u, "when calling isTheDestiny in Items_Pickup_Drop, line 405") and(not r8r) then
                        if not Jyr(Kv, Aei(L7u), "when calling has in Items_Pickup_Drop, line 406") then
                            call GVw(Kv, Aei(L7u), agS(mXi(L7u, em, ng)), "when calling put in Items_Pickup_Drop, line 407")
                        endif
                        call I7S(mXi(L7u, qm, dg))
                        call wru(C7u, true)
                        set c8r = iF
                        set s8r = eBr("when calling alloc_CallbackSingle_doAfter_Items_Pickup_Drop in Items_Pickup_Drop, line 412")
                        call RUs(s8r)
                        set G0w[s8r] = L7u
                        set g0w[s8r] = C7u
                        set h0w[s8r] = X7u
                        set F0w[s8r] = V7u
                        call Ybr(c8r, s8r, "when calling doAfter in Items_Pickup_Drop, line 412")
                        set r8r = true
                    elseif C2r(V7u) then
                        call wru(C7u, true)
                        call d7s(L7u, C7u, "when calling dropInspirit in Items_Pickup_Drop, line 424")
                        set t8r = mTs("when calling alloc_CallbackSingle_doAfter_Items_Pickup_Drop in Items_Pickup_Drop, line 426")
                        call RUs(t8r)
                        set k0w[t8r] = X7u
                        set j0w[t8r] = L7u
                        call Ybr(0.1, t8r, "when calling doAfter in Items_Pickup_Drop, line 426")
                    elseif Jyr(EI, M7u, "when calling has in Items_Pickup_Drop, line 431") and(not C2r(V7u)) and c8w(L7u, BF) then
                        call d7s(L7u, C7u, "when calling dropInspirit in Items_Pickup_Drop, line 432")
                        set r8r = true
                    endif
    endif
    if RBt(V7u) and giS(L7u, UNIT_TYPE_HERO) and(not r8r) then
                    set i8r = 0
                    if M7u == l2s(Iji("I02Z", "when calling unObfuscate in Items_Pickup_Drop, line 439"), "when calling fromRawCode in Items_Pickup_Drop, line 439") then
                        set i8r = l2s(Iji("A0CJ", "when calling unObfuscate in Items_Pickup_Drop, line 440"), "when calling fromRawCode in Items_Pickup_Drop, line 440")
                    elseif M7u == l2s(Iji("I046", "when calling unObfuscate in Items_Pickup_Drop, line 441"), "when calling fromRawCode in Items_Pickup_Drop, line 441") then
                        set i8r = l2s(Iji("A0D4", "when calling unObfuscate in Items_Pickup_Drop, line 442"), "when calling fromRawCode in Items_Pickup_Drop, line 442")
                    elseif M7u == l2s(Iji("I05G", "when calling unObfuscate in Items_Pickup_Drop, line 443"), "when calling fromRawCode in Items_Pickup_Drop, line 443") or M7u == l2s(Iji("I05F", "when calling unObfuscate in Items_Pickup_Drop, line 444"), "when calling fromRawCode in Items_Pickup_Drop, line 444") then
                        set i8r = l2s(Iji("A0CH", "when calling unObfuscate in Items_Pickup_Drop, line 445"), "when calling fromRawCode in Items_Pickup_Drop, line 445")
                    elseif M7u == l2s(Iji("I04N", "when calling unObfuscate in Items_Pickup_Drop, line 446"), "when calling fromRawCode in Items_Pickup_Drop, line 446") or M7u == l2s(Iji("I047", "when calling unObfuscate in Items_Pickup_Drop, line 447"), "when calling fromRawCode in Items_Pickup_Drop, line 447") then
                        set i8r = l2s(Iji("A0CI", "when calling unObfuscate in Items_Pickup_Drop, line 448"), "when calling fromRawCode in Items_Pickup_Drop, line 448")
                    elseif M7u == l2s(Iji("I04O", "when calling unObfuscate in Items_Pickup_Drop, line 449"), "when calling fromRawCode in Items_Pickup_Drop, line 449") or M7u == l2s(Iji("I04P", "when calling unObfuscate in Items_Pickup_Drop, line 450"), "when calling fromRawCode in Items_Pickup_Drop, line 450") then
                        set i8r = l2s(Iji("A0CK", "when calling unObfuscate in Items_Pickup_Drop, line 451"), "when calling fromRawCode in Items_Pickup_Drop, line 451")
                    endif
                    if i8r != 0 then
                        if Jyr(vI, C7u, "when calling has in Items_Pickup_Drop, line 454") and wps(vI, C7u, "when calling get in Items_Pickup_Drop, line 454") != 0 then
                            call Q_s(L7u, wps(vI, C7u, "when calling get in Items_Pickup_Drop, line 455"))
                            if Jyr(mI, C7u, "when calling has in Items_Pickup_Drop, line 456") then
                                call I7S(Aii(wps(mI, C7u, "when calling get in Items_Pickup_Drop, line 457"), "when calling effectFromIndex in Items_Pickup_Drop, line 457"))
                            endif
                        endif
                        call GVw(vI, C7u, i8r, "when calling put in Items_Pickup_Drop, line 458")
                        call V5S(L7u, i8r)
                        if i8r == l2s(Iji("A0D4", "when calling unObfuscate in Items_Pickup_Drop, line 460"), "when calling fromRawCode in Items_Pickup_Drop, line 460") then
                            call GVw(mI, C7u, agS(mXi(L7u, "war3mapImported\\Lightsaber3D.mdx", "hand left")), "when calling put in Items_Pickup_Drop, line 461")
                            if L7u != null then
                                call I4t(L7u, vBu(eDs(L7u)))
                            endif
                        endif
                    endif
    endif
    if (not Jyr(ex, Xdu(V7u), "when calling has in Items_Pickup_Drop, line 466"))and(not GpS(kI, q3t(V7u), "when calling has in Items_Pickup_Drop, line 466")) then
                    call tdu(V7u)
                    set r8r = true
    endif
            elseif ait(V7u, "when calling isStackable in Items_Pickup_Drop, line 469") and v9S(V7u) == aD[Bh] or v9S(V7u) == X7u then
    call vwt(px, Xdu(V7u), "when calling add in Items_Pickup_Drop, line 470")
    call Frr(L7u, V7u)
    if QUu(L7u, M7u) then
                    call SetItemCharges(GetItemOfTypeFromUnitBJ(L7u, M7u), GetItemCharges(GetItemOfTypeFromUnitBJ(L7u, M7u)) + GetItemCharges(V7u))
                    call RemoveItem(V7u)
    else
                    call DisableTrigger(GetTriggeringTrigger())
                    call IOt(V7u, X7u, true)
                    call GVw(ex, Xdu(V7u), C7u, "when calling put in Items_Pickup_Drop, line 478")
                    call UnitAddItem(L7u, V7u)
                    call EnableTrigger(GetTriggeringTrigger())
    endif
    call eys(px, Xdu(V7u), "when calling remove in Items_Pickup_Drop, line 481")
            elseif ait(V7u, "when calling isStackable in Items_Pickup_Drop, line 482") and v9S(V7u) != aD[Bh] and v9S(V7u) != X7u and q3t(V7u) != xI then
    call Kit(V7u, false)
    call Kit(GetItemOfTypeFromUnitBJ(L7u, M7u), false)
    call dii("Fish " + XRt(V7u) + " got rotten and is no longer tradable.", 5., v9S(V7u))
    call dii("Fish " + XRt(V7u) + " got rotten and is no longer tradable.", 5., X7u)
            endif
        endif
        call GVw(dI, C7u, Xdu(null), "when calling put in Items_Pickup_Drop, line 488")
        if Jyr(fI, C7u, "when calling has in Items_Pickup_Drop, line 490") and s2r(wps(fI, C7u, "when calling get in Items_Pickup_Drop, line 490"), "when calling itemFromIndex in Items_Pickup_Drop, line 490") != null then
            call klS(fI, C7u, "when calling remove in Items_Pickup_Drop, line 491")
            call GVw(fI, C7u, Xdu(null), "when calling put in Items_Pickup_Drop, line 492")
        endif
        set S8r = vkt("when calling alloc_CallbackSingle_nullTimer_Items_Pickup_Drop in Items_Pickup_Drop, line 494")
        call RUs(S8r)
        set x0w[S8r] = C7u
        set v0w[S8r] = V7u
        call ccr(S8r, "when calling nullTimer in Items_Pickup_Drop, line 494")
    endif
    set ASw = ASw - 1
    set L7u = null
    set X7u = null
    set V7u = null
    set B7u = null
    set N7u = null
endfunction
function Afu takes nothing returns nothing
    set ASw = 0
    call o8r("via function reference Items_Pickup_Drop, line 776")
endfunction
function Aki takes nothing returns boolean
    local unit Iki = GetTriggerUnit()
    local integer Pki = hgr(GetTriggerPlayer())
    if Iki == BD then
        set Nh[Pki] = true
    elseif Iki == ND then
        set Nh[Pki] = false
    endif
    set Iki = null
    return false
endfunction
function n5r takes nothing returns boolean
    return qs == 6
endfunction
function Aus takes nothing returns nothing
    if n5r() then
        call PlaySoundBJ(ne)
        set qs = 0
        call DisplayTimedTextToForce(Rc[$00000005], 5., "|cffffcc00You have been transferred to the Boss Area!|r")
        set vo = GetRectCenter(up)
        call ForGroupBJ(fc[$00000005], pbw)
        call ForForce(Rc[$00000005], ebw)
        call RemoveLocation(vo)
        call ModifyGateBJ($00000000, kG)
    else
        set qs = 0
        call DisplayTimedTextToForce(Rc[$00000005], 5., "|cffff0000You hear a ringing sound. All pedals were reset!|r")
    endif
endfunction
function g9r takes string Y9r returns integer
    local integer G9r
    set DSw[ASw] = Y9r
    set ASw = ASw + 1
    if BB == 0 then
        if NB < 32768 then
            set NB = NB + 1
            set G9r = NB
        else
            call tNr("Out of memory: Could not create Comparator_LinkedList.", "when calling error in LinkedList, line 529")
            set G9r = 0
        endif
    else
        set BB = BB - 1
        set G9r = VB[BB]
    endif
    set ASw = ASw - 1
    return G9r
endfunction
function nbS takes string qbS returns integer
    local integer abS
    set DSw[ASw] = qbS
    set ASw = ASw + 1
    if BB == 0 then
        if NB < 32768 then
            set NB = NB + 1
            set abS = NB
        else
            call tNr("Out of memory: Could not create Comparator_LinkedList.", "when calling error in LinkedList, line 533")
            set abS = 0
        endif
    else
        set BB = BB - 1
        set abS = VB[BB]
    endif
    set ASw = ASw - 1
    return abS
endfunction
function wRS takes string MfS returns boolean
    set DSw[ASw] = MfS
    set ASw = ASw + 1
    call g9r("when calling alloc_Comparator_LinkedList in LinkedList, line 529")
    call nbS("when calling alloc_Comparator_LinkedList in LinkedList, line 533")
    call B5r(0.)
    set ASw = ASw - 1
    return true
endfunction
function Avt takes nothing returns boolean
    set ASw = 0
    return wRS("via function reference LinkedList, line 1")
endfunction
function Ayi takes nothing returns nothing
    call ForceRemovePlayer(hs, GetOwningPlayer(GetTriggerUnit()))
endfunction
function Z3r takes nothing returns boolean
    return ds[1 + GetPlayerId(GetOwningPlayer(GetKillingUnit()))] >= 20
endfunction
function Ays takes nothing returns nothing
    set ds[1 + GetPlayerId(GetOwningPlayer(GetKillingUnit()))] = ds[1 + GetPlayerId(GetOwningPlayer(GetKillingUnit()))] + 1
    if Z3r() then
        call QuestMessageBJ(MwS(GetOwningPlayer(GetKillingUnit())), $00000002, "|cffffcc003rd Job Advancement Quest Completed|r.")
        call ForceAddPlayer(Vr, GetOwningPlayer(GetKillingUnit()))
    else
        call QuestMessageBJ(MwS(GetOwningPlayer(GetKillingUnit())), $00000001, I2S(ds[1 + GetPlayerId(GetOwningPlayer(GetKillingUnit()))]) + " Lizardman/Lizardmen killed.")
    endif
endfunction
function Shu takes location shu, real thu, real ihu returns location
    return Location(GetLocationX(shu) + thu * Cos(ihu * bj_DEGTORAD), GetLocationY(shu) + thu * Sin(ihu * bj_DEGTORAD))
endfunction
function UFS takes real WFS, location EFS, boolexpr ZFS returns group
    set WG = CreateGroup()
    call GroupEnumUnitsInRangeOfLoc(WG, EFS, WFS, ZFS)
    return WG
endfunction
function n6t takes real e6t returns nothing
    local real a6t = TimerGetElapsed(vG)
    local real q6t
    if a6t <= 0. then
        set vG = CreateTimer()
        call TimerStart(vG, 1000000., false, null)
    endif
    if e6t > 0. then
        loop
            set q6t = e6t - TimerGetElapsed(vG) + a6t
            exitwhen q6t <= 0.
            if q6t > bj_POLLED_WAIT_SKIP_THRESHOLD then
    call TriggerSleepAction(.1 * q6t)
            else
    call TriggerSleepAction(bj_POLLED_WAIT_INTERVAL)
            endif
        endloop
    endif
endfunction
function B4i takes nothing returns nothing
    set pS[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))] = GetTriggerUnit()
    call SetPlayerStateBJ(GetOwningPlayer(pS[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))]), PLAYER_STATE_RESOURCE_FOOD_USED, $00000000)
    set qS[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))] = GetUnitLoc(GetTriggerUnit())
    set aS[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))] = GetSpellTargetLoc()
    set YS[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))] = UFS(700., GetSpellTargetLoc(), Condition(jyw))
    call ForGroupBJ(YS[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))], xyw)
    call PauseUnit(pS[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))], true)
    call SetUnitInvulnerable(pS[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))], true)
    set nS[$00000001] = Shu(qS[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))], 600., 90.)
    set nS[$00000002] = Shu(qS[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))], 600., 160.)
    set nS[$00000003] = Shu(qS[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))], 600., 235.)
    set nS[$00000004] = Shu(qS[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))], 600., 305.)
    set nS[$00000005] = Shu(qS[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))], 600., 20.)
    call AddLightningLoc("DRAM", nS[$00000001], nS[$00000003])
    set dS[$00000001] = bj_lastCreatedLightning
    call AddLightningLoc("DRAM", nS[$00000005], nS[$00000003])
    set dS[$00000002] = bj_lastCreatedLightning
    call AddLightningLoc("DRAM", nS[$00000005], nS[$00000002])
    set dS[$00000003] = bj_lastCreatedLightning
    call AddLightningLoc("DRAM", nS[$00000002], nS[$00000004])
    set dS[$00000004] = bj_lastCreatedLightning
    call AddLightningLoc("DRAM", nS[$00000004], nS[$00000001])
    set dS[$00000005] = bj_lastCreatedLightning
    call AddLightningLoc("DRAM", nS[$00000001], nS[$00000003])
    set dS[$00000006] = bj_lastCreatedLightning
    call AddLightningLoc("DRAM", nS[$00000005], nS[$00000003])
    set dS[$00000007] = bj_lastCreatedLightning
    call AddLightningLoc("DRAM", nS[$00000005], nS[$00000002])
    set dS[$00000008] = bj_lastCreatedLightning
    call AddLightningLoc("DRAM", nS[$00000002], nS[$00000004])
    set dS[$00000009] = bj_lastCreatedLightning
    call AddLightningLoc("DRAM", nS[$00000004], nS[$00000001])
    set dS[$0000000A] = bj_lastCreatedLightning
    call n6t(.5)
    call SetUnitAnimation(pS[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))], "spell")
    call SetUnitTimeScalePercent(pS[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))], 20.)
    call n6t(.1)
    call AddSpecialEffectLocBJ(qS[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))], "Abilities\\Spells\\Orc\\WarStomp\\WarStompCaster.mdl")
    call DestroyEffect(bj_lastCreatedEffect)
    call CreateTextTagUnitBJ("LIMIT BREAK!!!", pS[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))], 0., 15., 100., .0, .0, 0.)
    set fS[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))] = bj_lastCreatedTextTag
    call n6t(2.5)
    set Cc = 1
    loop
        exitwhen Cc > 10
        call DestroyLightning(dS[Cc])
        set Cc = Cc + 1
    endloop
    call DestroyTextTag(fS[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))])
    call n6t(.2)
    call CreateTextTagUnitBJ("SUPERNOVA!!!", pS[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))], 0., 15., 100., .0, .0, 0.)
    call SetTextTagVelocityBJ(bj_lastCreatedTextTag, 64., 90.)
    call SetTextTagPermanentBJ(bj_lastCreatedTextTag, false)
    call SetTextTagFadepointBJ(bj_lastCreatedTextTag, 1.5)
    call SetTextTagLifespanBJ(bj_lastCreatedTextTag, 3.)
    call n6t(1.)
    set go = 1
    loop
        exitwhen go > 5
        call n6t(.1)
        set GS[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))] = GetRandomLocInRect(RectFromCenterSizeBJ(aS[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))], 700., 700.))
        call CreateNUnitsAtLoc($00000001, $68303337, GetOwningPlayer(pS[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))]), GS[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))], 270.)
        call SetUnitTimeScalePercent(bj_lastCreatedUnit, 50.)
        call RemoveLocation(GS[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))])
        set go = go + 1
    endloop
    call n6t(.5)
    call ForGroupBJ(YS[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))], vyw)
    call SetUnitTimeScalePercent(pS[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))], 100.)
    call PauseUnit(pS[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))], false)
    call SetUnitInvulnerable(pS[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))], false)
    call IssueImmediateOrderById(pS[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))], $000D0004)
    call RemoveLocation(qS[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))])
    call DestroyGroup(YS[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))])
    call RemoveLocation(aS[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))])
endfunction
function B5w takes nothing returns boolean
    return (UnitHasItemOfTypeBJ(GetEventDamageSource(), $49303547) and IsUnitType(GetTriggerUnit(), UNIT_TYPE_STRUCTURE) == false) != false
endfunction
function B6t takes nothing returns nothing
    call SetUnitInvulnerable(GetEnumUnit(), true)
    call PauseUnit(GetEnumUnit(), true)
endfunction
function Qdu takes string mdu returns boolean
    set DSw[ASw] = mdu
    set ASw = ASw + 1
    call jts("when calling new_HashMap in ImageUtils, line 12")
    call jts("when calling new_HashMap in ImageUtils, line 13")
    set ASw = ASw - 1
    return true
endfunction
function B7t takes nothing returns boolean
    set ASw = 0
    return Qdu("via function reference ImageUtils, line 8")
endfunction
function B7w takes nothing returns boolean
    return GetUnitTypeId(GetTriggerUnit()) == 1211117894 and GetUnitTypeId(GetOrderTargetUnit()) == 1747989296 and IsPlayerInForce(GetOwningPlayer(GetTriggerUnit()), rt) == false and IsUnitInGroup(GetTriggerUnit(), kpu(300., GetUnitLoc(GetOrderTargetUnit()))) and GetHeroLevel(GetTriggerUnit()) >= 150
endfunction
function E3i takes unit m3i, integer Q3i, boolean W3i returns boolean
    return UnitMakeAbilityPermanent(m3i, W3i, Q3i)
endfunction
function M3w takes unit N3w returns nothing
    set NA[MA] = N3w
    set MA = MA + 1
endfunction
function e7S takes nothing returns nothing
    set MA = MA - 1
endfunction
function gct takes trigger Gct returns boolean
    return TriggerEvaluate(Gct)
endfunction
function tei takes unit uei returns nothing
    local unit rei = uei
    local unit sei
    call V5S(rei, wD)
    set sei = rei
    call E3i(sei, wD, true)
    call M3w(uei)
    call gct(VA)
    call e7S()
    set rei = null
    set sei = null
endfunction
function BAi takes nothing returns nothing
    call tei(GetEnumUnit())
endfunction
function BBu takes nothing returns nothing
    call UnitResetCooldown(GetTriggerUnit())
endfunction
function HEi takes integer IEi, integer PEi, string AEi returns boolean
    local boolean DEi
    set DSw[ASw] = AEi
    set ASw = ASw + 1
    set DEi = (not GpS(kJ, PEi, "when calling has in ToggleEffectProcs, line 21"))and(not(GpS(jJ, PEi, "when calling has in ToggleEffectProcs, line 21") and IEi != PEi))
    set ASw = ASw - 1
    return DEi
endfunction
function T0S takes unit R0S returns real
    return GetUnitFlyHeight(R0S)
endfunction
function wor takes real Ncr, real Mcr returns real
    call MoveLocation(NJ, Ncr, Mcr)
    return GetLocationZ(NJ)
endfunction
function NNs takes real CNs, real VNs, unit BNs returns real
    set Pcw = CNs
    set Acw = VNs
    set Dcw = wor(CNs, VNs) + T0S(BNs)
    return Pcw
endfunction
function PGi takes unit UGi, player IGi returns boolean
    return IsUnitEnemy(UGi, IGi)
endfunction
function R9s takes unit d9s, unit f9s returns boolean
    return d9s != null and f9s != null and PGi(d9s, eDs(f9s))
endfunction
function F3w takes string g3w returns integer
    local integer h3w
    set DSw[ASw] = g3w
    set ASw = ASw + 1
    if iB == 0 then
        if SB < 32768 then
            set SB = SB + 1
            set h3w = SB
            set cB[h3w] = 1260
        else
            call tNr("Out of memory: Could not create TextTagEntity.", "when calling error in TextTagEntity, line 5")
            set h3w = 0
        endif
    else
        set iB = iB - 1
        set h3w = tB[iB]
        set cB[h3w] = 1260
    endif
    set ASw = ASw - 1
    return h3w
endfunction
function Gjr takes integer Yjr returns nothing
endfunction
function C3r takes integer X3r returns boolean
    return E4[X3r] != 0
endfunction
function EXi takes integer QXi, string WXi returns nothing
    set DSw[ASw] = WXi
    set ASw = ASw + 1
    if wC[QXi] == 0 then
        call tNr("Double free: object of type CallbackSingle", "when calling error in ClosureTimers, line 107")
    else
        set BX[NX] = QXi
        set NX = NX + 1
        set wC[QXi] = 0
    endif
    set ASw = ASw - 1
endfunction
function Wht takes integer mht, string Qht returns nothing
    set DSw[ASw] = Qht
    set ASw = ASw + 1
    call HLr(xM[mht], "when calling release in ClosureTimers, line 124")
    set ASw = ASw - 1
endfunction
function tbS takes integer rbS, string sbS returns nothing
    set DSw[ASw] = sbS
    set ASw = ASw + 1
    call Wht(rbS, "when calling CallbackSingle_onDestroy in ClosureTimers, line 123")
    call EXi(rbS, "when calling dealloc_CallbackSingle in ClosureTimers, line 123")
    set ASw = ASw - 1
endfunction
function JNw takes integer DNw, string HNw returns nothing
    set DSw[ASw] = HNw
    set ASw = ASw + 1
    if wC[DNw] == 0 then
        if DNw == 0 then
            call tNr("Nullpointer exception when calling CallbackSingle.CallbackSingle", "when calling error in ClosureTimers, line 107")
        else
            call tNr("Called CallbackSingle.CallbackSingle on invalid object.", "when calling error in ClosureTimers, line 107")
        endif
    endif
    call tbS(DNw, "when calling destroyCallbackSingle in ClosureTimers, line 107")
    set ASw = ASw - 1
endfunction
function tGs takes integer rGs, string sGs returns nothing
    set DSw[ASw] = sGs
    set ASw = ASw + 1
    set j4[rGs] = true
    if v4[rGs] != 0 then
        call JNw(v4[rGs], "when calling dispatch_CallbackSingle_destroyCallbackSingle in FText, line 102")
        set v4[rGs] = 0
    endif
    set ASw = ASw - 1
endfunction
function G4i takes integer T4i, string Y4i returns nothing
    set DSw[ASw] = Y4i
    set ASw = ASw + 1
    if bB[T4i] == 0 then
        if T4i == 0 then
            call tNr("Nullpointer exception when calling FText.setPermanent", "when calling error in FText, line 99")
        else
            call tNr("Called FText.setPermanent on invalid object.", "when calling error in FText, line 99")
        endif
    endif
    call tGs(T4i, "when calling setPermanent in FText, line 99")
    set ASw = ASw - 1
endfunction
function I9r takes string U9r returns nothing
    call Jru(nD, $00000001, U9r)
endfunction
function hVt takes string GVt returns integer
    local integer gVt
    set DSw[ASw] = GVt
    set ASw = ASw + 1
    if OB == 0 then
        if lB < 32768 then
            set lB = lB + 1
            set gVt = lB
            set bB[gVt] = 1143
        else
            call tNr("Out of memory: Could not create FText.", "when calling error in FText, line 64")
            set gVt = 0
        endif
    else
        set OB = OB - 1
        set gVt = oB[OB]
        set bB[gVt] = 1143
    endif
    set ASw = ASw - 1
    return gVt
endfunction
function UQu takes integer ZQu returns nothing
    set Wv = Wv + 1
    if Wv == 1 then
        set mv = ZQu
        set m4[ZQu] = 0
    else
        set m4[ZQu] = Qv
        set Q4[Qv] = ZQu
        set m4[mv] = ZQu
    endif
    set Q4[ZQu] = 0
    set Qv = ZQu
endfunction
function oyi takes integer cyi returns nothing
    set k4[cyi] = CreateTextTag()
    set j4[cyi] = false
    set x4[cyi] = 0.
    set v4[cyi] = 0
    call UQu(cyi)
endfunction
function wfu takes texttag Ndu, boolean Mdu returns nothing
    call SetTextTagPermanent(Ndu, Mdu)
endfunction
function mCr takes integer xCr returns nothing
    local texttag vCr
    call oyi(xCr)
    set vCr = k4[xCr]
    call wfu(vCr, true)
    set vCr = null
endfunction
function JYi takes string DYi returns integer
    local integer HYi
    set DSw[ASw] = DYi
    set ASw = ASw + 1
    set HYi = hVt("when calling alloc_FText in FText, line 71")
    call mCr(HYi)
    set ASw = ASw - 1
    return HYi
endfunction
function C2u takes integer L2u, string X2u returns nothing
    set DSw[ASw] = X2u
    set ASw = ASw + 1
    if dB[L2u] == 0 then
        call tNr("Double free: object of type Iterator", "when calling error in LinkedListModule, line 71")
    else
        set qB[aB] = L2u
        set aB = aB + 1
        set dB[L2u] = 0
    endif
    set ASw = ASw - 1
endfunction
function Oor takes integer oor returns nothing
endfunction
function fot takes integer aot, string dot returns nothing
    set DSw[ASw] = dot
    set ASw = ASw + 1
    call Oor(aot)
    call C2u(aot, "when calling dealloc_Iterator in LinkedListModule, line 71")
    set ASw = ASw - 1
endfunction
function ips takes integer sps, string tps returns nothing
    set DSw[ASw] = tps
    set ASw = ASw + 1
    if dB[sps] == 0 then
        if sps == 0 then
            call tNr("Nullpointer exception when calling Iterator.Iterator", "when calling error in LinkedListModule, line 71")
        else
            call tNr("Called Iterator.Iterator on invalid object.", "when calling error in LinkedListModule, line 71")
        endif
    endif
    call fot(sps, "when calling destroyIterator in LinkedListModule, line 71")
    set ASw = ASw - 1
endfunction
function KOu takes integer HOu, string JOu returns nothing
    set DSw[ASw] = JOu
    set ASw = ASw + 1
    if Z4[HOu]then
        call ips(HOu, "when calling dispatch_Iterator_destroyIterator in LinkedListModule, line 91")
    endif
    set ASw = ASw - 1
endfunction
function Tci takes string fci returns integer
    local integer Rci
    set DSw[ASw] = fci
    set ASw = ASw + 1
    if aB == 0 then
        if nB < 32768 then
            set nB = nB + 1
            set Rci = nB
            set dB[Rci] = 1207
        else
            call tNr("Out of memory: Could not create Iterator.", "when calling error in LinkedListModule, line 71")
            set Rci = 0
        endif
    else
        set aB = aB - 1
        set Rci = qB[aB]
        set dB[Rci] = 1207
    endif
    set ASw = ASw - 1
    return Rci
endfunction
function l6S takes integer O6S returns nothing
    set E4[O6S] = mv
endfunction
function Wms takes integer mms, boolean Qms returns nothing
    call l6S(mms)
    set Z4[mms] = Qms
endfunction
function LWu takes boolean HWu, string JWu returns integer
    local integer KWu
    set DSw[ASw] = JWu
    set ASw = ASw + 1
    set KWu = Tci("when calling alloc_Iterator in LinkedListModule, line 75")
    call Wms(KWu, HWu)
    set ASw = ASw - 1
    return KWu
endfunction
function NOS takes string VOS returns integer
    local integer BOS
    set DSw[ASw] = VOS
    set ASw = ASw + 1
    set BOS = LWu(true, "when calling new_Iterator in LinkedListModule, line 53")
    set ASw = ASw - 1
    return BOS
endfunction
function Zuu takes integer Wuu returns integer
    local integer Euu = E4[Wuu]
    set E4[Wuu] = Q4[E4[Wuu]]
    return Euu
endfunction
function WwS takes integer xwS, string vwS returns integer
    local integer mwS
    local integer QwS
    set DSw[ASw] = vwS
    set ASw = ASw + 1
    set mwS = Cww[wuw[xwS]]
    set QwS = 0
    if mwS != wuw[xwS]then
        set QwS = Lww[mwS]
        call aUi(xwS, mwS, "when calling removeEntry in LinkedList, line 97")
    endif
    set ASw = ASw - 1
    return QwS
endfunction
function f9t takes integer a9t, string n9t returns integer
    local integer d9t
    set DSw[ASw] = n9t
    set ASw = ASw + 1
    if yN[a9t] == 0 then
        if a9t == 0 then
            call tNr("Nullpointer exception when calling LinkedList.dequeue", "when calling error in LinkedList, line 92")
        else
            call tNr("Called LinkedList.dequeue on invalid object.", "when calling error in LinkedList, line 92")
        endif
    endif
    set d9t = WwS(a9t, "when calling dequeue in LinkedList, line 92")
    set ASw = ASw - 1
    return d9t
endfunction
function fYu takes texttag eYu, integer qYu, integer aYu, integer nYu, integer dYu returns nothing
    call SetTextTagColor(eYu, qYu, aYu, nYu, dYu)
endfunction
function BFS takes texttag XFS, string CFS, real VFS returns nothing
    call SetTextTagText(XFS, CFS, VFS * 0.0023)
endfunction
function FBu takes texttag gBu, boolean hBu returns nothing
    call SetTextTagVisibility(gBu, hBu)
endfunction
function Hot takes texttag Pot, real Aot, real Dot returns nothing
    call SetTextTagVelocity(Pot, Aot, Dot)
endfunction
function Usr takes texttag Esr, real Zsr returns nothing
    call SetTextTagLifespan(Esr, Zsr)
endfunction
function Zkr takes texttag Wkr, real Ekr returns nothing
    call SetTextTagFadepoint(Wkr, Ekr)
endfunction
function sds takes texttag uds, real rds returns nothing
    call SetTextTagAge(uds, rds)
endfunction
function v1s takes texttag F1s, real k1s, real j1s, real x1s returns nothing
    call SetTextTagPos(F1s, k1s, j1s, x1s)
endfunction
function NXt takes integer UXt, string IXt, real PXt, real AXt, real DXt, real HXt returns nothing
    local texttag JXt = k4[UXt]
    local texttag KXt
    local texttag LXt
    local texttag XXt
    local texttag CXt
    local texttag VXt
    local texttag BXt
    call BFS(JXt, IXt, HXt)
    set KXt = JXt
    call v1s(KXt, PXt, AXt, DXt)
    set LXt = KXt
    call sds(LXt, 0.)
    set XXt = LXt
    call FBu(XXt, true)
    set CXt = XXt
    call Hot(CXt, LJ, XJ)
    set VXt = CXt
    call Zkr(VXt, .45)
    set BXt = VXt
    call Usr(BXt, LD)
    set JXt = null
    set KXt = null
    set LXt = null
    set XXt = null
    set CXt = null
    set VXt = null
    set BXt = null
endfunction
function oNs takes integer uNs, string rNs, real sNs, real tNs, real iNs, real SNs, string cNs returns nothing
    set DSw[ASw] = cNs
    set ASw = ASw + 1
    if bB[uNs] == 0 then
        if uNs == 0 then
            call tNr("Nullpointer exception when calling FText.setup", "when calling error in FText, line 90")
        else
            call tNr("Called FText.setup on invalid object.", "when calling error in FText, line 90")
        endif
    endif
    call NXt(uNs, rNs, sNs, tNs, iNs, SNs)
    set ASw = ASw - 1
endfunction
function EFr takes string QFr returns integer
    local integer WFr
    set DSw[ASw] = QFr
    set ASw = ASw + 1
    if NX == 0 then
        if MX < 32768 then
            set MX = MX + 1
            set WFr = MX
            set wC[WFr] = 771
        else
            call tNr("Out of memory: Could not create CallbackSingle_doAfter_FText_FText.", "when calling error in FText, line 111")
            set WFr = 0
        endif
    else
        set NX = NX - 1
        set WFr = BX[NX]
        set wC[WFr] = 771
    endif
    set ASw = ASw - 1
    return WFr
endfunction
function txt takes timer sxt returns real
    return TimerGetElapsed(sxt)
endfunction
function Yts takes nothing returns real
    return txt(YQ)
endfunction
function lIu takes integer uIu, real rIu, real sIu, real tIu, string iIu returns nothing
    local texttag SIu
    local texttag cIu
    local integer oIu
    local real OIu
    set DSw[ASw] = iIu
    set ASw = ASw + 1
    set SIu = k4[uIu]
    call Hot(SIu, rIu, sIu)
    set cIu = SIu
    call Usr(cIu, tIu)
    set x4[uIu] = Yts()
    if v4[uIu] != 0 then
        call JNw(v4[uIu], "when calling dispatch_CallbackSingle_destroyCallbackSingle in FText, line 110")
    endif
    set OIu = tIu - 0.025
    set oIu = EFr("when calling alloc_CallbackSingle_doAfter_FText_FText in FText, line 111")
    call RUs(oIu)
    set W4[oIu] = uIu
    set v4[uIu] = Ybr(OIu, oIu, "when calling doAfter in FText, line 111")
    set ASw = ASw - 1
    set SIu = null
    set cIu = null
endfunction
function u7w takes integer V6w, real B6w, real N6w, real M6w, string w7w returns nothing
    set DSw[ASw] = w7w
    set ASw = ASw + 1
    if bB[V6w] == 0 then
        if V6w == 0 then
            call tNr("Nullpointer exception when calling FText.setDynamic", "when calling error in FText, line 105")
        else
            call tNr("Called FText.setDynamic on invalid object.", "when calling error in FText, line 105")
        endif
    endif
    call lIu(V6w, B6w, N6w, M6w, "when calling setDynamic in FText, line 105")
    set ASw = ASw - 1
endfunction
function S2w takes real I4w, real P4w, real A4w, string D4w, real H4w, real J4w, real K4w, real L4w, integer X4w, integer C4w, integer V4w, integer B4w, string N4w returns integer
    local boolean M4w
    local integer w2w
    local integer u2w
    local integer r2w
    local integer s2w
    local integer t2w
    local integer i2w
    set DSw[ASw] = N4w
    set ASw = ASw + 1
    set M4w = J4w <= 0.
    set w2w = 0
    if wds(vv, "when calling size in FText, line 40") > 0 then
        call I9r("get recycled")
        set w2w = f9t(vv, "when calling dequeue in FText, line 42")
    elseif Wv < 100 then
        set w2w = JYi("when calling new_FText in FText, line 46")
        call I9r("get new")
    else
        set u2w = NOS("when calling iterator in FText, line 50")
        loop
            exitwhen not C3r(u2w)
            set r2w = Zuu(u2w)
            if (not j4[r2w])and w2w == 0 or x4[r2w] < x4[w2w]then
    set w2w = r2w
            endif
        endloop
        call KOu(u2w, "when calling close in FText, line 50")
        if w2w == 0 then
            call tNr("You have reached the maximum possible permanent texttags", "when calling error in FText, line 54")
        endif
        call I9r("get force recycle")
    endif
    set s2w = w2w
    call oNs(s2w, D4w, I4w, P4w, A4w, H4w, "when calling setup in FText, line 56")
    call fYu(k4[w2w], X4w, C4w, V4w, B4w)
    if M4w then
        set t2w = w2w
        call G4i(t2w, "when calling setPermanent in FText, line 59")
    else
        set i2w = w2w
        call u7w(i2w, K4w, L4w, J4w, "when calling setDynamic in FText, line 61")
    endif
    set ASw = ASw - 1
    return w2w
endfunction
function NTr takes integer BTr returns nothing
    set lv = lv + 1
    if lv == 1 then
        set Sv = BTr
        set R4[BTr] = 0
    else
        set R4[BTr] = cv
        set T4[cv] = BTr
        set R4[Sv] = BTr
    endif
    set T4[BTr] = 0
    set cv = BTr
endfunction
function TLu takes integer fLu, string RLu returns nothing
    set DSw[ASw] = RLu
    set ASw = ASw + 1
    if cB[fLu] == 0 then
        if fLu == 0 then
            call tNr("Nullpointer exception when calling Entity.addToActive", "when calling error in DupletListModule, line 63")
        else
            call tNr("Called Entity.addToActive on invalid object.", "when calling error in DupletListModule, line 63")
        endif
    endif
    call NTr(fLu)
    set ASw = ASw - 1
endfunction
function Htu takes integer Atu, string Dtu returns nothing
    set DSw[ASw] = Dtu
    set ASw = ASw + 1
    call TLu(Atu, "when calling addToActive in DupletListModule, line 16")
    set ASw = ASw - 1
endfunction
function BdS takes integer CdS, string VdS returns nothing
    set DSw[ASw] = VdS
    set ASw = ASw + 1
    set Y4[CdS] = true
    set f4[CdS] = false
    call Htu(CdS, "when calling construct_Entity_DupletListModule in DupletListModule, line 15")
    set ASw = ASw - 1
endfunction
function pwS takes integer bwS, boolean ywS returns nothing
endfunction
function VYr takes integer LYr, boolean XYr, string CYr returns nothing
    set DSw[ASw] = CYr
    set ASw = ASw + 1
    if cB[LYr] == 0 then
        if LYr == 0 then
            call tNr("Nullpointer exception when calling Entity.setFlying", "when calling error in Entity, line 150")
        else
            call tNr("Called Entity.setFlying on invalid object.", "when calling error in Entity, line 150")
        endif
    endif
    call pwS(LYr, XYr)
    set ASw = ASw - 1
endfunction
function smi takes real wmi, real umi, real rmi returns real
    call MoveLocation(NJ, wmi, umi)
    return GetLocationZ(NJ)
endfunction
function Rsu takes integer isu, real Ssu, real csu, real osu, real Osu, real lsu, real bsu, player ysu, real psu, string esu returns nothing
    local real qsu
    local real asu
    local real nsu
    local real dsu
    local real fsu
    set DSw[ASw] = esu
    set ASw = ASw + 1
    set nsu = Ssu
    set dsu = csu
    set fsu = osu
    set q4[isu] = nsu
    set a4[isu] = dsu
    set n4[isu] = fsu
    set d4[isu] = ysu
    set asu = osu
    if fQ then
        set qsu = smi(Ssu, csu, osu)
    else
        set qsu = 0.
    endif
    if asu > qsu then
        call VYr(isu, true, "when calling setFlying in Entity, line 104")
    endif
    set Kj = Kj + 1
    set ASw = ASw - 1
endfunction
function rts takes integer Kss, real Lss, real Xss, real Css, real Vss, real Bss, real Nss, player Mss, real wts, string uts returns nothing
    set DSw[ASw] = uts
    set ASw = ASw + 1
    if cB[Kss] == 0 then
        if Kss == 0 then
            call tNr("Nullpointer exception when calling Entity.setupEntity", "when calling error in Entity, line 97")
        else
            call tNr("Called Entity.setupEntity on invalid object.", "when calling error in Entity, line 97")
        endif
    endif
    call Rsu(Kss, Lss, Xss, Css, Vss, Bss, Nss, Mss, wts, "when calling setupEntity in Entity, line 97")
    set ASw = ASw - 1
endfunction
function mxu takes integer gxu, player hxu, real Fxu, real kxu, real jxu, real xxu, string vxu returns nothing
    set DSw[ASw] = vxu
    set ASw = ASw + 1
    call BdS(gxu, "when calling Entity_init in Entity, line 91")
    call rts(gxu, Fxu, kxu, jxu, CJ, VJ, BJ, hxu, xxu, "when calling setupEntity in Entity, line 92")
    set ASw = ASw - 1
endfunction
function Uqi takes integer Tqi, real Yqi, real Gqi, real gqi, real hqi, real Fqi, real kqi, string jqi, real xqi, real vqi, integer mqi, integer Qqi, integer Wqi, integer Eqi, string Zqi returns nothing
    set DSw[ASw] = Zqi
    set ASw = ASw + 1
    call mxu(Tqi, mg, Yqi, Gqi, gqi, 0., "when calling construct_Entity5 in TextTagEntity, line 10")
    call Gjr(Tqi)
    set Asw[Tqi] = S2w(Yqi, Gqi, gqi, jqi, xqi, vqi, LJ, XJ, mqi, Qqi, Wqi, Eqi, "when calling createFText in TextTagEntity, line 16")
    set ASw = ASw - 1
endfunction
function ADi takes real gDi, real hDi, real FDi, real kDi, real jDi, real xDi, string vDi, real mDi, real QDi, integer WDi, integer EDi, integer ZDi, integer UDi, string IDi returns integer
    local integer PDi
    set DSw[ASw] = IDi
    set ASw = ASw + 1
    set PDi = F3w("when calling alloc_TextTagEntity in TextTagEntity, line 10")
    call Uqi(PDi, gDi, hDi, FDi, kDi, jDi, xDi, vDi, mDi, QDi, WDi, EDi, ZDi, UDi, "when calling construct_TextTagEntity in TextTagEntity, line 10")
    set ASw = ASw - 1
    return PDi
endfunction
function Kki takes integer Dki, real Hki, real Jki returns nothing
    call Hot(k4[Asw[Dki]], Hki, Jki)
endfunction
function bQu takes integer OQu, real lQu returns nothing
    call Zkr(k4[Asw[OQu]], lQu)
endfunction
function jRu takes integer FRu, boolean kRu returns nothing
    call FBu(k4[Asw[FRu]], kRu)
endfunction
function bQs takes real Jms, real Kms, real Lms, real Xms, real Cms, string Vms, real Bms, real Nms, integer Mms, integer wQs, integer uQs, integer rQs, player sQs, string tQs returns integer
    local boolean iQs
    local integer SQs
    local integer cQs
    local integer oQs
    local integer OQs
    local integer lQs
    set DSw[ASw] = tQs
    set ASw = ASw + 1
    set SQs = ADi(Jms, Kms, Lms, 0., 0., 0., Vms, Bms, Nms, Mms, wQs, uQs, rQs, "when calling new_TextTagEntity in TextTagExtensions, line 17")
    set lQs = SQs
    if sQs == null then
        set iQs = true
    else
        set iQs = nD == sQs
    endif
    call jRu(lQs, iQs)
    set cQs = SQs
    call Kki(cQs, Xms, Cms)
    set oQs = cQs
    call bQu(oQs, .1)
    set OQs = oQs
    set ASw = ASw - 1
    return OQs
endfunction
function fIt takes string nIt returns integer
    local integer dIt
    set DSw[ASw] = nIt
    set ASw = ASw + 1
    if NX == 0 then
        if MX < 32768 then
            set MX = MX + 1
            set dIt = MX
            set wC[dIt] = 1002
        else
            call tNr("Out of memory: Could not create CallbackSingle_doAfter_Whirlwind_Effect.", "when calling error in Whirlwind_Effect, line 41")
            set dIt = 0
        endif
    else
        set NX = NX - 1
        set dIt = BX[NX]
        set wC[dIt] = 1002
    endif
    set ASw = ASw - 1
    return dIt
endfunction
function uSs takes real Nis, real Mis, string wSs returns effect
    return AddSpecialEffect(wSs, Nis, Mis)
endfunction
function vQs takes effect jQs, real xQs returns nothing
    call BlzSetSpecialEffectHeight(jQs, xQs)
endfunction
function fJi takes string nJi returns integer
    local integer dJi
    set DSw[ASw] = nJi
    set ASw = ASw + 1
    if NX == 0 then
        if MX < 32768 then
            set MX = MX + 1
            set dJi = MX
            set wC[dJi] = 821
        else
            call tNr("Out of memory: Could not create CallbackSingle_doAfter_GeneralUtils.", "when calling error in GeneralUtils, line 40")
            set dJi = 0
        endif
    else
        set NX = NX - 1
        set dJi = BX[NX]
        set wC[dJi] = 821
    endif
    set ASw = ASw - 1
    return dJi
endfunction
function yYi takes effect cYi, real oYi, string OYi returns nothing
    local integer lYi
    local real bYi
    set DSw[ASw] = OYi
    set ASw = ASw + 1
    set bYi = oYi
    set lYi = fJi("when calling alloc_CallbackSingle_doAfter_GeneralUtils in GeneralUtils, line 40")
    call RUs(lYi)
    set V7[lYi] = cYi
    call Ybr(bYi, lYi, "when calling doAfter in GeneralUtils, line 40")
    set ASw = ASw - 1
endfunction
function upi takes string Dyi returns nothing
    local unit Hyi
    local unit Jyi
    local player Kyi
    local integer Lyi
    local integer Xyi
    local integer Cyi
    local string Vyi
    local effect Byi
    local effect Nyi
    local effect Myi
    local real wpi
    set DSw[ASw] = Dyi
    set ASw = ASw + 1
    set Hyi = GetEventDamageSource()
    set Jyi = GetTriggerUnit()
    if Hyi != null then
        set Kyi = eDs(Hyi)
        set Lyi = hgr(Kyi)
        if not Jyr(ZX, Lyi, "when calling has in Whirlwind_Effect, line 24") then
            call GVw(ZX, Lyi, O_i(true), "when calling put in Whirlwind_Effect, line 25")
        endif
        if not Jyr(UX, Lyi, "when calling has in Whirlwind_Effect, line 27") then
            call GVw(UX, Lyi, $00000000, "when calling put in Whirlwind_Effect, line 28")
        endif
        if GetRandomInt($00000001, $00000064) <= PX + wps(UX, Lyi, "when calling get in Whirlwind_Effect, line 30") then
            if Hyi != null and Jyi != null then
    if GpS(gQ, hgr(eDs(Hyi)), "when calling has in Whirlwind_Effect, line 37") and Jyi != null and R9s(Hyi, Jyi) and Hyi != Jyi then
                    if TYt(wps(ZX, Lyi, "when calling get in Whirlwind_Effect, line 38")) then
                        call GVw(UX, Lyi, $00000000, "when calling put in Whirlwind_Effect, line 39")
                        call GVw(ZX, Lyi, O_i(false), "when calling put in Whirlwind_Effect, line 40")
                        set wpi = IX
                        set Xyi = fIt("when calling alloc_CallbackSingle_doAfter_Whirlwind_Effect in Whirlwind_Effect, line 41")
                        call RUs(Xyi)
                        set USw[Xyi] = Lyi
                        call Ybr(wpi, Xyi, "when calling doAfter in Whirlwind_Effect, line 41")
                        call GroupAddUnit(GO, Hyi)
                        set Cyi = bQs(NNs(ANw(Hyi), XSw, Hyi), Acw, Dcw, .03, .09, "|cffff0000Szelet!|r", 12., 2., $00000064, $00000064, $00000064, $00000000, null, "when calling _CreateTTExEntity_fading in Whirlwind_Effect, line 45")
                        set Vyi = ""
                        if HEi(Lyi, hgr(nD), "when calling ifDisplayEffectProcs in Whirlwind_Effect, line 47") then
                            set Vyi = "war3mapImported/ShivasWrath.mdl"
                        else
                            call jRu(Cyi, false)
                        endif
                        set Byi = uSs(ANw(Jyi), XSw, Vyi)
                        call vQs(Byi, wor(ANw(Jyi), XSw) + 100.)
                        set Nyi = Byi
                        call Wwu(Nyi, 2.)
                        set Myi = Nyi
                        call yYi(Myi, 5., "when calling destrAdvTimed in Whirlwind_Effect, line 52")
                        set gO = UFS(300., GetUnitLoc(Jyi), Condition(XEw))
                        call ForGroupBJ(gO, CEw)
                        call DestroyGroup(gO)
                        call GroupRemoveUnit(GO, Hyi)
                    endif
    elseif wps(UX, Lyi, "when calling get in Whirlwind_Effect, line 59") < 80 then
                    call GVw(UX, Lyi, wps(UX, Lyi, "when calling get in Whirlwind_Effect, line 60") + 10, "when calling put in Whirlwind_Effect, line 60")
    endif
            endif
        endif
    endif
    set ASw = ASw - 1
    set Hyi = null
    set Jyi = null
    set Kyi = null
    set Byi = null
    set Nyi = null
    set Myi = null
endfunction
function BGs takes nothing returns nothing
    set ASw = 0
    call upi("via function reference Whirlwind_Effect, line 64")
endfunction
function BMr takes nothing returns nothing
    set uo = GetUnitLoc(GetEnumUnit())
    call CreateNUnitsAtLoc($00000001, $68303054, GetOwningPlayer(GetTriggerUnit()), uo, 270.)
    call RemoveLocation(uo)
endfunction
function Cjt takes nothing returns boolean
    return SubStringBJ(GetEventPlayerChatString(), $00000008, $00000009) == " 2"
endfunction
function Cqi takes nothing returns boolean
    return SubStringBJ(GetEventPlayerChatString(), $00000008, $00000009) == " 5"
endfunction
function cMr takes nothing returns boolean
    return SubStringBJ(GetEventPlayerChatString(), $00000008, $00000009) == " 6"
endfunction
function lVs takes player oVs, boolexpr OVs returns group
    set WG = CreateGroup()
    call GroupEnumUnitsOfPlayer(WG, oVs, OVs)
    call DestroyBoolExpr(OVs)
    return WG
endfunction
function m1i takes nothing returns boolean
    return SubStringBJ(GetEventPlayerChatString(), $00000008, $00000009) == " 1"
endfunction
function mDs takes nothing returns boolean
    return SubStringBJ(GetEventPlayerChatString(), $00000008, $00000009) == " 4"
endfunction
function wks takes nothing returns boolean
    return SubStringBJ(GetEventPlayerChatString(), $00000008, $00000009) == " 3"
endfunction
function BNw takes nothing returns nothing
    call ForGroupBJ(lVs(GetTriggerPlayer(), Condition(blw)), ylw)
    if m1i() then
        call RemoveItem(UnitItemInSlotBJ(ts, $00000001))
    endif
    if Cjt() then
        call RemoveItem(UnitItemInSlotBJ(ts, $00000002))
    endif
    if wks() then
        call RemoveItem(UnitItemInSlotBJ(ts, $00000003))
    endif
    if mDs() then
        call RemoveItem(UnitItemInSlotBJ(ts, $00000004))
    endif
    if Cqi() then
        call RemoveItem(UnitItemInSlotBJ(ts, $00000005))
    endif
    if cMr() then
        call RemoveItem(UnitItemInSlotBJ(ts, $00000006))
    endif
    set ts = null
endfunction
function BOs takes nothing returns boolean
    return GetUnitTypeId(GetTriggerUnit()) == 1211117878 and GetUnitTypeId(GetOrderTargetUnit()) == 1747989041 and IsPlayerInForce(GetOwningPlayer(GetTriggerUnit()), rt) and IsPlayerInForce(GetOwningPlayer(GetTriggerUnit()), ot) and IsUnitInGroup(GetTriggerUnit(), kpu(300., GetUnitLoc(GetOrderTargetUnit())))
endfunction
function BPi takes nothing returns boolean
    return IsPlayerInForce(GetTriggerPlayer(), It) == false and IsPlayerInForce(GetTriggerPlayer(), mt)
endfunction
function BPw takes nothing returns boolean
    return GetUnitTypeId(GetTriggerUnit()) == 1211117638 and IsPlayerInForce(GetOwningPlayer(GetTriggerUnit()), Ws) and IsPlayerInForce(GetOwningPlayer(GetTriggerUnit()), Es) and IsPlayerInForce(GetOwningPlayer(GetTriggerUnit()), Zs) and IsPlayerInForce(GetOwningPlayer(GetTriggerUnit()), Vr) == false
endfunction
function BQt takes nothing returns nothing
    call ClearTextMessagesBJ(MwS(GetTriggerPlayer()))
endfunction
function Vvt takes nothing returns boolean
    return GetUnitTypeId(GetDyingUnit()) == 1848652082
endfunction
function xli takes nothing returns boolean
    return GetUnitTypeId(GetDyingUnit()) == 1429221427
endfunction
function BWu takes nothing returns nothing
    if Vvt() then
        call DisplayTimedTextToForce(Rc[$00000003], 5., "|cffffcc00You are now transferred to the next level.|r")
        call PolledWait(c)
        set vo = GetRectCenter(jb)
        call ForGroupBJ(fc[$00000003], Flw)
        call ForForce(Rc[$00000003], klw)
        call RemoveLocation(vo)
    endif
    if xli() then
        set Ni = 3
        set Mi = 8
        call ForForce(Rc[$00000003], flw)
        call DisplayTimedTextToForce(Rc[$00000003], 10., "|cffffcc00You have completed the dungeon!|r Type -|c00ff0000d|r|c00ff1500o|r|c00ff3000n|r|c00ff4500e|r to exit the dungeon after looting your reward.")
        call DisplayTimedTextToForce(Rc[$00000003], 10., "|cffffcc00Type|r |c00ff0000-s2s X|r|cffffcc00 to send an item to your stash. (1-6)|r")
        call PolledWait(S)
        set pr[$00000001] = 1227895347
        set pr[$00000002] = 1227895128
        set pr[$00000003] = 1227895344
        set pr[$00000004] = 1227895130
        set pr[$00000005] = 1227895346
        set pr[$00000006] = 1227895129
        set pr[$00000007] = 1227895345
        set pr[$00000008] = 1227895116
        set Ni = 3
        set Mi = 8
        call ForForce(Rc[$00000003], jlw)
        call ForGroupBJ(fc[$00000003], xlw)
        call TriggerExecute(cw)
        call GroupClear(fc[$00000003])
        call ForceClear(Rc[$00000003])
        call DisableTrigger(GetTriggeringTrigger())
    endif
endfunction
function BYS takes nothing returns nothing
    call SetUnitPositionLoc(GetEnumUnit(), vo)
endfunction
function hUu takes string YUu, string GUu returns boolean
    local integer gUu = vQt(YUu)
    if vQt(GUu) > gUu then
        return false
    endif
    return CAw(YUu, $00000000, vQt(GUu)) == GUu
endfunction
function jwS takes integer kwS returns nothing
    set FD = kwS
endfunction
function C1w takes integer J1w returns nothing
    local string K1w = GetEventPlayerChatString()
    local integer L1w
    local integer X1w
    if hUu(K1w, "-d ") then
        set L1w = ifi(CAw(K1w, $00000003, $00000004))
        if L1w >= 0 and L1w < 5 then
            set X1w = L1w
            call jwS(X1w)
            call dii("Loglevel adjusted to: " + H6t(X1w), 10., GetTriggerPlayer())
        endif
    endif
endfunction
function c8s takes integer i8s, real S8s returns nothing
    set O3[i8s] = S8s
endfunction
function BOr takes integer XOr, real COr, string VOr returns nothing
    set DSw[ASw] = VOr
    set ASw = ASw + 1
    if dV[XOr] == 0 then
        if XOr == 0 then
            call tNr("Nullpointer exception when calling DamageInstance.setReducedAmount", "when calling error in DamageEvent, line 157")
        else
            call tNr("Called DamageInstance.setReducedAmount on invalid object.", "when calling error in DamageEvent, line 157")
        endif
    endif
    call c8s(XOr, COr)
    set ASw = ASw - 1
endfunction
function H7S takes integer D7S returns nothing
    set vj = vj - 1
    set jj = xj[vj]
endfunction
function TOu takes integer fOu, string ROu returns nothing
    set DSw[ASw] = ROu
    set ASw = ASw + 1
    if dV[fOu] == 0 then
        call tNr("Double free: object of type DamageInstance", "when calling error in DamageEvent, line 114")
    else
        set qV[aV] = fOu
        set aV = aV + 1
        set dV[fOu] = 0
    endif
    set ASw = ASw - 1
endfunction
function fyi takes integer nyi, string dyi returns nothing
    set DSw[ASw] = dyi
    set ASw = ASw + 1
    call H7S(nyi)
    call TOu(nyi, "when calling dealloc_DamageInstance in DamageEvent, line 162")
    set ASw = ASw - 1
endfunction
function uxi takes integer Mji, string wxi returns nothing
    set DSw[ASw] = wxi
    set ASw = ASw + 1
    if dV[Mji] == 0 then
        if Mji == 0 then
            call tNr("Nullpointer exception when calling DamageInstance.DamageInstance", "when calling error in DamageEvent, line 114")
        else
            call tNr("Called DamageInstance.DamageInstance on invalid object.", "when calling error in DamageEvent, line 114")
        endif
    endif
    call fyi(Mji, "when calling destroyDamageInstance in DamageEvent, line 114")
    set ASw = ASw - 1
endfunction
function wxs takes integer Mjs returns nothing
endfunction
function Dis takes string Zis returns nothing
    local integer Uis
    local integer Iis
    local integer Pis
    local integer Ais
    set DSw[ASw] = Zis
    set ASw = ASw + 1
    set Uis = jj
    if not Gj then
        call BOr(Uis, GetEventDamage(), "when calling setReducedAmount in DamageEvent, line 222")
        set Iis = 0
        set Pis = hj
        loop
            exitwhen Iis > Pis
            set Ais = gj[Iis]
            loop
    exitwhen not(Ais != 0)
    call wxs(Ais)
    if Gj then
                    set O3[Uis] = 0.
                    exitwhen true
    else
                    set Ais = e3[Ais]
    endif
            endloop
            if Gj then
    exitwhen true
            endif
            set Iis = Iis + 1
        endloop
        call BlzSetEventAttackType(l3[Uis])
        call BlzSetEventDamageType(b3[Uis])
        call BlzSetEventWeaponType(y3[Uis])
        call BlzSetEventDamage(O3[Uis])
    endif
    call uxi(Uis, "when calling dispatch_DamageInstance_destroyDamageInstance in DamageEvent, line 240")
    set Gj = false
    set ASw = ASw - 1
endfunction
function Dqi takes integer Pqi, string Aqi returns nothing
    set DSw[ASw] = Aqi
    set ASw = ASw + 1
    call Dis("when calling onDamage in DamageEvent, line 475")
    set ASw = ASw - 1
endfunction
function Ulr takes string Elr returns integer
    local integer Zlr
    set DSw[ASw] = Elr
    set ASw = ASw + 1
    if NX == 0 then
        if MX < 32768 then
            set MX = MX + 1
            set Zlr = MX
            set wC[Zlr] = 1051
        else
            call tNr("Out of memory: Could not create CallbackSingle_doAfter_add_Buff.", "when calling error in Buff, line 152")
            set Zlr = 0
        endif
    else
        set NX = NX - 1
        set Zlr = BX[NX]
        set wC[Zlr] = 1051
    endif
    set ASw = ASw - 1
    return Zlr
endfunction
function aKr takes unit qKr returns integer
    return GetUnitUserData(qKr)
endfunction
function ftu takes unit dtu returns integer
    return aKr(dtu)
endfunction
function ist takes unit tst returns integer
    return iv[ftu(tst)]
endfunction
function HRr takes integer URr, string IRr returns nothing
    local unit PRr
    local integer ARr
    local integer DRr
    set DSw[ASw] = IRr
    set ASw = ASw + 1
    set PRr = GetTriggerUnit()
    if aKr(PRr) > 0 then
        set ARr = ist(PRr)
        if ARr != 0 and(not f4[ARr]) then
        endif
        set DRr = Ulr("when calling alloc_CallbackSingle_doAfter_add_Buff in Buff, line 152")
        call RUs(DRr)
        set OM[DRr] = PRr
        set lM[DRr] = ARr
        call Ybr(0.01, DRr, "when calling doAfter in Buff, line 152")
    endif
    set ASw = ASw - 1
    set PRr = null
endfunction
function C0s takes integer L0s, integer X0s returns nothing
endfunction
function w5S takes item M2S returns integer
    return GetItemUserData(M2S)
endfunction
function Ucs takes item Zcs returns integer
    return w5S(Zcs)
endfunction
function I0i takes nothing returns nothing
    local integer Z0i = Ucs(GetManipulatedItem())
    local integer U0i = ist(GetManipulatingUnit())
    if Z0i != 0 and(not f4[Z0i]) then
        if U0i != 0 and(not f4[U0i]) then
            call C0s(Z0i, U0i)
        endif
    endif
endfunction
function ZIu takes integer EIu returns nothing
    call I0i()
endfunction
function B_u takes integer C_u, integer V_u returns nothing
endfunction
function UAt takes nothing returns nothing
    local integer EAt = Ucs(GetManipulatedItem())
    local integer ZAt = ist(GetManipulatingUnit())
    if EAt != 0 and(not f4[EAt]) then
        if ZAt != 0 and(not f4[ZAt]) then
            call B_u(EAt, ZAt)
        endif
    endif
endfunction
function Zot takes integer Eot returns nothing
    call UAt()
endfunction
function SrS takes integer trS, integer irS returns nothing
endfunction
function Acs takes nothing returns nothing
    local integer Ics = Ucs(GetManipulatedItem())
    local integer Pcs = ist(GetManipulatingUnit())
    if Ics != 0 and(not f4[Ics]) then
        if Pcs != 0 and(not f4[Pcs]) then
            call SrS(Ics, Pcs)
        endif
    endif
endfunction
function phu takes integer yhu returns nothing
    call Acs()
endfunction
function jkS takes integer kkS returns nothing
endfunction
function Aes takes integer Ies, string Pes returns nothing
    set DSw[ASw] = Pes
    set ASw = ASw + 1
    if FC[Ies] == 0 then
        if Ies == 0 then
            call tNr("Nullpointer exception when calling Buff.attackModifier", "when calling error in Buff, line 87")
        else
            call tNr("Called Buff.attackModifier on invalid object.", "when calling error in Buff, line 87")
        endif
    endif
    call jkS(Ies)
    set ASw = ASw - 1
endfunction
function Fer takes nothing returns real
    if Mj != 0 and GetEventDamageSource() == T3[Mj] and GetTriggerUnit() == R3[Mj] and GetEventDamage() == g3[Mj]then
        return h3[Mj]
    endif
    return GetEventDamage()
endfunction
function Hxs takes integer Dxs returns boolean
    return Xg[Dxs] != 0
endfunction
function YCi takes integer dCi, integer fCi, boolean RCi, string TCi returns nothing
    set DSw[ASw] = TCi
    set ASw = ASw + 1
    call dci(dCi)
    set Nww_1498[dCi] = fCi
    call mqs(dCi, "when calling reset in LinkedList, line 433")
    set Mww_1397[dCi] = RCi
    set ASw = ASw - 1
endfunction
function Y6S takes integer d6S, boolean f6S, string R6S returns integer
    local integer T6S
    set DSw[ASw] = R6S
    set ASw = ASw + 1
    set T6S = uCs("when calling alloc_LLIterator in LinkedList, line 431")
    call YCi(T6S, d6S, f6S, "when calling construct_LLIterator2 in LinkedList, line 431")
    set ASw = ASw - 1
    return T6S
endfunction
function Mvi takes integer Bvi, string Nvi returns integer
    set DSw[ASw] = Nvi
    set ASw = ASw + 1
    if ruw[Bvi] == 0 then
        set ruw[Bvi] = Y6S(Bvi, false, "when calling new_LLIterator in LinkedList, line 167")
    endif
    call mqs(ruw[Bvi], "when calling reset in LinkedList, line 168")
    set ASw = ASw - 1
    return ruw[Bvi]
endfunction
function Kqu takes integer Dqu, string Hqu returns integer
    local integer Jqu
    set DSw[ASw] = Hqu
    set ASw = ASw + 1
    if yN[Dqu] == 0 then
        if Dqu == 0 then
            call tNr("Nullpointer exception when calling LinkedList.staticItr", "when calling error in LinkedList, line 165")
        else
            call tNr("Called LinkedList.staticItr on invalid object.", "when calling error in LinkedList, line 165")
        endif
    endif
    set Jqu = Mvi(Dqu, "when calling staticItr in LinkedList, line 165")
    set ASw = ASw - 1
    return Jqu
endfunction
function M2r takes unit N2r returns real
    set gow = kEr(N2r)
    set how = L1t(N2r)
    set Fow = T0S(N2r)
    return gow
endfunction
function Xqi takes unit Lqi returns real
    set mcw = NNs(ANw(Lqi), XSw, Lqi)
    set Qcw = Acw
    set Wcw = Dcw
    return mcw
endfunction
function Rts takes integer pts returns real
    local real ets
    local real qts
    local real ats
    local real nts
    local real dts
    local real fts
    if not Y4[pts]then
        if fQ then
            set ets = Xqi(G4[pts])
            set qts = Qcw
            set ats = Wcw
            set q4[pts] = ets
            set a4[pts] = qts
            set n4[pts] = ats
        else
            set nts = M2r(G4[pts])
            set dts = how
            set fts = Fow
            set q4[pts] = nts
            set a4[pts] = dts
            set n4[pts] = fts
        endif
    endif
    set Xow = q4[pts]
    set Cow = a4[pts]
    set Vow = n4[pts]
    return Xow
endfunction
function Sot takes integer Nct, string Mct returns real
    local real wot
    local real uot
    local real rot
    local real sot
    local real tot
    local real iot
    set DSw[ASw] = Mct
    set ASw = ASw + 1
    if cB[Nct] == 0 then
        if Nct == 0 then
            call tNr("Nullpointer exception when calling UnitEntity.getPos", "when calling error in Entity, line 256")
        else
            call tNr("Called UnitEntity.getPos on invalid object.", "when calling error in Entity, line 256")
        endif
    endif
    set sot = Rts(Nct)
    set tot = Cow
    set iot = Vow
    set wot = sot
    set uot = tot
    set rot = iot
    set ASw = ASw - 1
    set Dow = wot
    set How = uot
    set Jow = rot
    return Dow
endfunction
function Z1i takes nothing returns string
    return IH[GetRandomInt($00000000, $00000014)]
endfunction
function Gxi takes string Txi returns integer
    local integer Yxi
    set DSw[ASw] = Txi
    set ASw = ASw + 1
    if RV == 0 then
        if TV < 32768 then
            set TV = TV + 1
            set Yxi = TV
            set YV[Yxi] = 627
        else
            call tNr("Out of memory: Could not create Active.", "when calling error in DmgMod, line 58")
            set Yxi = 0
        endif
    else
        set RV = RV - 1
        set Yxi = fV[RV]
        set YV[Yxi] = 627
    endif
    set ASw = ASw - 1
    return Yxi
endfunction
function d7i takes integer n7i returns nothing
    set wx = wx + 1
    if wx == 1 then
        set Nj = n7i
        set j3[n7i] = 0
    else
        set j3[n7i] = Mj
        set x3[Mj] = n7i
        set j3[Nj] = n7i
    endif
    set x3[n7i] = 0
    set Mj = n7i
endfunction
function C5r takes integer X5r returns nothing
    call d7i(X5r)
endfunction
function Q0r takes integer m0r returns nothing
    call C5r(m0r)
    if m0r == Nj then
        call gNu(Bj, 0., OZw)
    endif
endfunction
function Bks takes string Cks returns integer
    local integer Vks
    set DSw[ASw] = Cks
    set ASw = ASw + 1
    set Vks = Gxi("when calling alloc_Active in DmgMod, line 71")
    call Q0r(Vks)
    set ASw = ASw - 1
    return Vks
endfunction
function B8s takes unit C8s, unitstate V8s returns real
    return GetUnitState(C8s, V8s)
endfunction
function Udi takes unit Zdi returns real
    return B8s(Zdi, UNIT_STATE_LIFE)
endfunction
function gSr takes unit YSr, integer GSr returns boolean
    return GetUnitAbilityLevel(YSr, GSr) > 0
endfunction
function i3r takes real MMr, string w3r returns nothing
    local unit u3r
    local real r3r
    local real s3r
    local integer t3r
    set DSw[ASw] = w3r
    set ASw = ASw + 1
    set u3r = GetTriggerUnit()
    set r3r = Udi(u3r)
    set s3r = GetEventDamage()
    if Mj != 0 and GetEventDamageSource() == T3[Mj] and u3r == R3[Mj] and s3r == g3[Mj]then
        set h3[Mj] = MMr
    else
        set t3r = Bks("when calling new_Active in DmgMod, line 32")
        set R3[t3r] = u3r
        set f3[t3r] = GetTriggeringTrigger()
        set T3[t3r] = GetEventDamageSource()
        set Y3[t3r] = r3r
        set g3[t3r] = s3r
        set h3[t3r] = MMr
        set k3[t3r] = not gSr(u3r, Cj)
        if k3[t3r]then
            call V5S(u3r, Cj)
            set r3r = Udi(u3r)
        endif
        set F3[t3r] = r3r - 0.405 < s3r
        if F3[t3r]then
            set r3r = r3r + s3r
            call SetWidgetLife(u3r, r3r)
        endif
        set G3[t3r] = r3r
    endif
    set ASw = ASw - 1
    set u3r = null
endfunction
function v3i takes integer x3i returns integer
    return Xg[x3i]
endfunction
function Zpu takes integer Epu returns nothing
endfunction
function vhs takes integer jhs, string xhs returns nothing
    set DSw[ASw] = xhs
    set ASw = ASw + 1
    if FC[jhs] == 0 then
        if jhs == 0 then
            call tNr("Nullpointer exception when calling Buff.defenseModifier", "when calling error in Buff, line 89")
        else
            call tNr("Called Buff.defenseModifier on invalid object.", "when calling error in Buff, line 89")
        endif
    endif
    call Zpu(jhs)
    set ASw = ASw - 1
endfunction
function yUr takes player lUr, player bUr returns boolean
    return IsPlayerAlly(lUr, bUr)
endfunction
function rLs takes integer HKs, string JKs returns nothing
    local unit KKs
    local unit LKs
    local integer XKs
    local integer CKs
    local integer VKs
    local integer BKs
    local integer NKs
    local integer MKs
    local integer wLs
    local integer uLs
    set DSw[ASw] = JKs
    set ASw = ASw + 1
    set KKs = GetTriggerUnit()
    set LKs = GetEventDamageSource()
    if ist(LKs) != 0 and yXu(LKs) then
        set CKs = ist(LKs)
    else
        set CKs = 0
    endif
    set XKs = CKs
    if ist(KKs) != 0 and yXu(KKs) then
        set BKs = ist(KKs)
    else
        set BKs = 0
    endif
    set VKs = BKs
    if RQ and VKs != 0 and XKs != 0 and yUr(d4[VKs], d4[XKs]) or d4[VKs] == d4[XKs]then
        if Fer() > 0.5 then
            call i3r(0., "when calling modifyDamage in Buff, line 131")
            if TQ then
    call ADi(Sot(VKs, "when calling getPos in Buff, line 133"), How, Jow, GetRandomReal(- 2., 2.), GetRandomReal(- 2., 2.), GetRandomReal(8., 10.), Z1i(), 10., .8, GetRandomInt($00000096, $000000FA), GetRandomInt($0000007D, $00000096), GetRandomInt($0000007D, $00000096), $000000FF, "when calling new_TextTagEntity in Buff, line 133")
            endif
        endif
    else
        if Hxs(XKs) then
            set MKs = Kqu(v3i(XKs), "when calling staticItr in Buff, line 137")
            loop
    exitwhen not Tji(MKs)
    set NKs = LXi(MKs)
    if not eM[NKs]then
                    call Aes(NKs, "when calling attackModifier in Buff, line 139")
    endif
            endloop
        endif
        if Hxs(VKs) then
            set uLs = Kqu(v3i(VKs), "when calling staticItr in Buff, line 142")
            loop
    exitwhen not Tji(uLs)
    set wLs = LXi(uLs)
    if not eM[wLs]then
                    call vhs(wLs, "when calling defenseModifier in Buff, line 144")
    endif
            endloop
        endif
    endif
    set ASw = ASw - 1
    set KKs = null
    set LKs = null
endfunction
function mei takes string xei returns integer
    local integer vei
    set DSw[ASw] = xei
    set ASw = ASw + 1
    if NX == 0 then
        if MX < 32768 then
            set MX = MX + 1
            set vei = MX
            set wC[vei] = 1052
        else
            call tNr("Out of memory: Could not create CallbackSingle_doAfter_add_Buff.", "when calling error in Buff, line 162")
            set vei = 0
        endif
    else
        set NX = NX - 1
        set vei = BX[NX]
        set wC[vei] = 1052
    endif
    set ASw = ASw - 1
    return vei
endfunction
function sUt takes integer NZt, string MZt returns nothing
    local unit wUt
    local integer uUt
    local integer rUt
    set DSw[ASw] = MZt
    set ASw = ASw + 1
    set wUt = GetTriggerUnit()
    if ist(wUt) != 0 then
        set uUt = ist(wUt)
        set rUt = mei("when calling alloc_CallbackSingle_doAfter_add_Buff in Buff, line 162")
        call RUs(rUt)
        set bM[rUt] = uUt
        call Ybr(0.01, rUt, "when calling doAfter in Buff, line 162")
    endif
    set ASw = ASw - 1
    set wUt = null
endfunction
function LWi takes string JWi returns integer
    local integer KWi
    set DSw[ASw] = JWi
    set ASw = ASw + 1
    if aV == 0 then
        if nV < 32768 then
            set nV = nV + 1
            set KWi = nV
            set dV[KWi] = 1122
        else
            call tNr("Out of memory: Could not create DamageInstance.", "when calling error in DamageEvent, line 114")
            set KWi = 0
        endif
    else
        set aV = aV - 1
        set KWi = qV[aV]
        set dV[KWi] = 1122
    endif
    set ASw = ASw - 1
    return KWi
endfunction
function vrS takes integer xrS returns nothing
endfunction
function Xbs takes integer Zbs, integer Ubs, unit Ibs, unit Pbs, real Abs, attacktype Dbs, damagetype Hbs, weapontype Jbs, integer Kbs, integer Lbs returns nothing
    call vrS(Zbs)
    set O3[Zbs] = Abs
    set l3[Zbs] = Dbs
    set b3[Zbs] = Hbs
    set y3[Zbs] = Jbs
    set p3[Zbs] = Kbs
    set vj = vj + 1
    set xj[vj] = Zbs
    set jj = Zbs
endfunction
function s0i takes integer K9i, unit L9i, unit X9i, real C9i, attacktype V9i, damagetype B9i, weapontype N9i, integer M9i, integer w0i, string u0i returns integer
    local integer r0i
    set DSw[ASw] = u0i
    set ASw = ASw + 1
    set r0i = LWi("when calling alloc_DamageInstance in DamageEvent, line 133")
    call Xbs(r0i, K9i, L9i, X9i, C9i, V9i, B9i, N9i, M9i, w0i)
    set ASw = ASw - 1
    return r0i
endfunction
function m6S takes string g6S returns nothing
    local real h6S
    local attacktype F6S
    local integer k6S
    local integer j6S
    local integer x6S
    local integer v6S
    set DSw[ASw] = g6S
    set ASw = ASw + 1
    set h6S = GetEventDamage()
    set F6S = BlzGetEventAttackType()
    if Tj == 4 then
        if dj and F6S == ATTACK_TYPE_NORMAL then
            set Tj = 1
        else
            set Tj = 0
            set Yj = fj
        endif
    endif
    set k6S = s0i(Rj, GetEventDamageSource(), GetTriggerUnit(), h6S, F6S, BlzGetEventDamageType(), BlzGetEventWeaponType(), Tj, Yj, "when calling new_DamageInstance in DamageEvent, line 196")
    set Rj = 0
    set Tj = 4
    set Yj = 0
    set j6S = 0
    set x6S = kj
    loop
        exitwhen j6S > x6S
        set v6S = Fj[j6S]
        loop
            exitwhen not(v6S != 0)
            call wxs(v6S)
            if Gj then
    set O3[k6S] = 0.
    exitwhen true
            else
    set v6S = e3[v6S]
            endif
        endloop
        if Gj then
            exitwhen true
        endif
        set j6S = j6S + 1
    endloop
    call BlzSetEventAttackType(l3[k6S])
    call BlzSetEventDamageType(b3[k6S])
    call BlzSetEventWeaponType(y3[k6S])
    call BlzSetEventDamage(O3[k6S])
    set ASw = ASw - 1
    set F6S = null
endfunction
function sju takes integer uju, string rju returns nothing
    set DSw[ASw] = rju
    set ASw = ASw + 1
    call m6S("when calling onUnreducedDamage in DamageEvent, line 474")
    set ASw = ASw - 1
endfunction
function cru takes integer iru, string Sru returns nothing
    set DSw[ASw] = Sru
    set ASw = ASw + 1
    if gC[iru] == 0 then
        if iru == 0 then
            call tNr("Nullpointer exception when calling EventListener.onEvent", "when calling error in ClosureEvents, line 109")
        else
            call tNr("Called EventListener.onEvent on invalid object.", "when calling error in ClosureEvents, line 109")
        endif
    endif
    if gC[iru] <= 1138 then
        if gC[iru] <= 1136 then
            if gC[iru] <= 1135 then
    if gC[iru] <= 1134 then
                    call rLs(iru, "when calling onEvent_add_Buff in ClosureEvents, line 109")
    else
                    call HRr(iru, "when calling onEvent_add_Buff in ClosureEvents, line 109")
    endif
            else
    call sUt(iru, "when calling onEvent_add_Buff in ClosureEvents, line 109")
            endif
        elseif gC[iru] <= 1137 then
            call sju(iru, "when calling onEvent_add_DamageEvent in ClosureEvents, line 109")
        else
            call Dqi(iru, "when calling onEvent_add_DamageEvent in ClosureEvents, line 109")
        endif
    elseif gC[iru] <= 1140 then
        if gC[iru] <= 1139 then
            call C1w(iru)
        else
            call ZIu(iru)
        endif
    elseif gC[iru] <= 1141 then
        call phu(iru)
    else
        call Zot(iru)
    endif
    set ASw = ASw - 1
endfunction
function ocu takes unit ccu returns boolean
    return true
endfunction
function WtS takes trigger vtS, player mtS, playerevent QtS returns event
    return TriggerRegisterPlayerEvent(vtS, mtS, QtS)
endfunction
function Ycs takes eventid Rcs returns boolean
    local integer Tcs = YEi(Rcs)
    return (Tcs >= 261 and Tcs <= 268)or Tcs == 17
endfunction
function rcu takes eventid wcu returns boolean
    local integer ucu = YEi(wcu)
    return ucu >= 305 and ucu <= 307
endfunction
function dUs takes trigger aUs, boolexpr nUs returns triggercondition
    return TriggerAddCondition(aUs, nUs)
endfunction
function r_u takes trigger N0u, player M0u, playerunitevent w_u, boolexpr u_u returns event
    return TriggerRegisterPlayerUnitEvent(N0u, M0u, w_u, u_u)
endfunction
function Ypu takes playerunitevent ypu, code ppu, code epu, code qpu returns nothing
    local integer apu = YEi(ypu)
    local integer npu
    local filterfunc dpu
    local trigger fpu
    local player Rpu
    local playerunitevent Tpu
    if MD[apu] == null then
        set MD[apu] = CreateTrigger()
        set npu = bj_MAX_PLAYER_SLOTS - 1
        loop
            exitwhen npu < 0
            set fpu = MD[apu]
            set Rpu = aD[npu]
            set Tpu = ypu
            if ppu != null then
    set dpu = Filter(ppu)
            else
    set dpu = null
            endif
            call r_u(fpu, Rpu, Tpu, dpu)
            set npu = npu - 1
        endloop
    endif
    if epu != null then
        call dUs(MD[apu], Filter(epu))
    endif
    if qpu != null then
        call B2S(MD[apu], qpu)
    endif
    set dpu = null
    set fpu = null
    set Rpu = null
    set Tpu = null
endfunction
function v4u takes playerunitevent j4u, code x4u returns nothing
    call Ypu(j4u, null, x4u, null)
endfunction
function xFs takes eventid kFs returns boolean
    local integer jFs = YEi(kFs)
    return (jFs >= 18 and jFs <= 51)or(jFs >= 269 and jFs <= 277) or jFs == 315 or jFs == 308
endfunction
function LRi takes eventid URi, string IRi returns integer
    local integer PRi
    local integer ARi
    local integer DRi
    local trigger HRi
    local trigger JRi
    local trigger KRi
    set DSw[ASw] = IRi
    set ASw = ASw + 1
    set PRi = YEi(URi)
    set nh = nh + 1
    set ah[PRi] = nh
    if xFs(URi) then
        call v4u(ConvertPlayerUnitEvent(PRi), Dvw)
    elseif URi != EVENT_UNIT_DAMAGED and URi != EVENT_PLAYER_LEAVE and URi != yh and(not Ycs(URi)) and(not rcu(URi)) then
        call tNr("registering handleid: " + fju(PRi) + " non-playerunitevent. Except EVENT_UNIT_DAMAGED and EVENT_PLAYER_LEAVE these are not supported right now.", "when calling error in ClosureEvents, line 245")
    endif
    if rcu(URi) and(not Yh) then
        set Yh = true
        set ARi = 0
        set DRi = bj_MAX_PLAYERS - 1
        loop
            exitwhen ARi > DRi
            set HRi = qh
            call WtS(HRi, aD[ARi], EVENT_PLAYER_MOUSE_UP)
            set JRi = HRi
            call WtS(JRi, aD[ARi], EVENT_PLAYER_MOUSE_DOWN)
            set KRi = JRi
            call WtS(KRi, aD[ARi], EVENT_PLAYER_MOUSE_MOVE)
            set ARi = ARi + 1
        endloop
    endif
    set ASw = ASw - 1
    set HRi = null
    set JRi = null
    set KRi = null
    return nh
endfunction
function yNs takes eventid ONs, string lNs returns integer
    local integer bNs
    set DSw[ASw] = lNs
    set ASw = ASw + 1
    set bNs = ah[YEi(ONs)]
    if bNs == 0 then
        set bNs = LRi(ONs, "when calling registerEventId in ClosureEvents, line 232")
    endif
    set ASw = ASw - 1
    return bNs
endfunction
function ggt takes string ngt returns nothing
    local unit dgt
    local integer fgt
    local integer Rgt
    local integer Tgt
    local integer Ygt
    local integer Ggt
    set DSw[ASw] = ngt
    set ASw = ASw + 1
    set dgt = GetTriggerUnit()
    set fgt = yNs(GetTriggerEventId(), "when calling toIntId in ClosureEvents, line 170")
    if dgt != null and ocu(dgt) and ftu(dgt) > 0 then
        if Th[ftu(dgt)] != 0 then
            set Rgt = Th[ftu(dgt)]
            loop
    exitwhen not(Rgt != 0)
    set Tgt = RM[Rgt]
    if fM[Rgt] == fgt then
                    call cru(Rgt, "when calling onEvent in ClosureEvents, line 178")
    endif
    set Rgt = Tgt
            endloop
        endif
    endif
    if Rh[fgt] != 0 then
        set Ygt = Rh[fgt]
        loop
            exitwhen not(Ygt != 0)
            set Ggt = RM[Ygt]
            call cru(Ygt, "when calling onEvent in ClosureEvents, line 185")
            set Ygt = Ggt
        endloop
    endif
    set ASw = ASw - 1
    set dgt = null
endfunction
function vJw takes string xJw returns nothing
    set DSw[ASw] = xJw
    set ASw = ASw + 1
    call ggt("when calling generalEventCallback in ClosureEvents, line 295")
    set ASw = ASw - 1
endfunction
function BYr takes nothing returns nothing
    set ASw = 0
    call vJw("via function reference ClosureEvents, line 295")
endfunction
function Kfi takes integer Wfi, player Efi, real Zfi, real Ufi, real Ifi returns nothing
    local real Pfi = Zfi
    local real Afi = Ufi
    local real Dfi = Pfi - GetCameraTargetPositionX()
    local real Hfi = Afi - GetCameraTargetPositionY()
    local real Jfi = SquareRoot(Dfi * Dfi + Hfi * Hfi)
    if GetLocalPlayer() == Efi then
        if Jfi >= bj_SMARTPAN_TRESHOLD_SNAP or Jfi >= bj_SMARTPAN_TRESHOLD_PAN then
            call PanCameraToTimed(Pfi, Afi, Ifi)
        endif
    endif
endfunction
function mir takes integer hir, player Fir, real kir, real jir, real xir, string vir returns nothing
    set DSw[ASw] = vir
    set ASw = ASw + 1
    if UC[hir] == 0 then
        if hir == 0 then
            call tNr("Nullpointer exception when calling Camera.pan", "when calling error in CameraUtils, line 40")
        else
            call tNr("Called Camera.pan on invalid object.", "when calling error in CameraUtils, line 40")
        endif
    endif
    call Kfi(hir, Fir, kir, jir, xir)
    set ASw = ASw - 1
endfunction
function KBw takes integer IBw, player PBw, real ABw, real DBw, real HBw, string JBw returns nothing
    set DSw[ASw] = JBw
    set ASw = ASw + 1
    call eTu(IBw, PBw, "when calling free in CameraUtils, line 77")
    call SetCameraFieldForPlayer(PBw, CAMERA_FIELD_TARGET_DISTANCE, HBw, 0.)
    call mir(Ng, PBw, ABw, DBw, 0., "when calling pan in CameraUtils, line 79")
    set ASw = ASw - 1
endfunction
function HLw takes integer ZLw, player ULw, real ILw, real PLw, real ALw, string DLw returns nothing
    set DSw[ASw] = DLw
    set ASw = ASw + 1
    if UC[ZLw] == 0 then
        if ZLw == 0 then
            call tNr("Nullpointer exception when calling Camera.freeAndPan", "when calling error in CameraUtils, line 76")
        else
            call tNr("Called Camera.freeAndPan on invalid object.", "when calling error in CameraUtils, line 76")
        endif
    endif
    call KBw(ZLw, ULw, ILw, PLw, ALw, "when calling freeAndPan in CameraUtils, line 76")
    set ASw = ASw - 1
endfunction
function ONt takes unit oNt returns real
    return BlzGetUnitArmor(oNt)
endfunction
function YSS takes unit TSS returns integer
    return GetHeroXP(TSS)
endfunction
function bVr takes trigger lVr returns nothing
    call DestroyTrigger(lVr)
endfunction
function xvt takes integer jvt returns real
    return jvt * 1.
endfunction
function A5w takes integer E5w, integer Z5w returns integer
    local real U5w = xvt(rF)
    local integer I5w
    local integer P5w
    if E5w + Z5w > 2 then
        set I5w = 3
        set P5w = E5w + Z5w
        loop
            exitwhen I5w > P5w
            set U5w = U5w * uF + I5w * wF + Mh
            set I5w = I5w + 1
        endloop
    elseif E5w + Z5w < 2 then
        set U5w = 0.
    endif
    return P3w(U5w)
endfunction
function uui takes unit Mwi, integer wui returns integer
    return A5w(boS(Mwi), wui)
endfunction
function o0t takes integer c0t returns nothing
    if PM[c0t] != null then
        call bVr(PM[c0t])
        set PM[c0t] = null
    endif
    set IM[c0t] = boS(mM[c0t])
    set ZM[c0t] = YSS(mM[c0t])
    call uui(mM[c0t], UM[c0t] - IM[c0t])
    if ZM[c0t] == 0 and IM[c0t] > 1 then
        call o0t(c0t)
    endif
endfunction
function UYu takes integer EYu, string ZYu returns nothing
    set DSw[ASw] = ZYu
    set ASw = ASw + 1
    if MC[EYu] == 0 then
        if EYu == 0 then
            call tNr("Nullpointer exception when calling CustomHero.initXpVariables", "when calling error in CustomHero, line 75")
        else
            call tNr("Called CustomHero.initXpVariables on invalid object.", "when calling error in CustomHero, line 75")
        endif
    endif
    call o0t(EYu)
    set ASw = ASw - 1
endfunction
function VeS takes trigger LeS, unit XeS, unitevent CeS returns event
    return TriggerRegisterUnitEvent(LeS, XeS, CeS)
endfunction
function XJu takes integer KJu, string LJu returns nothing
    set DSw[ASw] = LJu
    set ASw = ASw + 1
    call u3w(CM[KJu], "when calling clear in CustomLinkedList, line 65")
    set ASw = ASw - 1
endfunction
function W4s takes integer m4s, string Q4s returns nothing
    set DSw[ASw] = Q4s
    set ASw = ASw + 1
    if sV[m4s] == 0 then
        if m4s == 0 then
            call tNr("Nullpointer exception when calling CustomLinkedList.clear", "when calling error in CustomLinkedList, line 64")
        else
            call tNr("Called CustomLinkedList.clear on invalid object.", "when calling error in CustomLinkedList, line 64")
        endif
    endif
    call XJu(m4s, "when calling clear in CustomLinkedList, line 64")
    set ASw = ASw - 1
endfunction
function n9u takes integer a9u returns nothing
    if mM[a9u] != null then
        call uFr(mM[a9u])
        set mM[a9u] = null
    endif
    set QM[a9u] = 0
endfunction
function thS takes integer rhS, string shS returns nothing
    set DSw[ASw] = shS
    set ASw = ASw + 1
    if MC[rhS] == 0 then
        if rhS == 0 then
            call tNr("Nullpointer exception when calling CustomHero.removeHero", "when calling error in CustomHero, line 181")
        else
            call tNr("Called CustomHero.removeHero on invalid object.", "when calling error in CustomHero, line 181")
        endif
    endif
    call n9u(rhS)
    set ASw = ASw - 1
endfunction
function CPi takes integer HPi, unit JPi, string KPi returns nothing
    local trigger LPi
    local trigger XPi
    set DSw[ASw] = KPi
    set ASw = ASw + 1
    if mM[HPi] == null or(JPi != null and YEi(JPi) != YEi(mM[HPi])) or JPi == null then
        call thS(HPi, "when calling removeHero in CustomHero, line 91")
        set mM[HPi] = JPi
        call W4s(EM[HPi], "when calling clear in CustomHero, line 93")
        if JPi != null then
            call UYu(HPi, "when calling initXpVariables in CustomHero, line 96")
            set QM[HPi] = GetUnitTypeId(JPi)
            call ONt(mM[HPi])
            if WM[HPi] != null then
    call bVr(WM[HPi])
    set WM[HPi] = null
            endif
            set LPi = CreateTrigger()
            call VeS(LPi, mM[HPi], EVENT_UNIT_HERO_SKILL)
            set XPi = LPi
            call B2S(XPi, cZw)
            set WM[HPi] = XPi
        else
            set QM[HPi] = 0
        endif
    endif
    set ASw = ASw - 1
    set LPi = null
    set XPi = null
endfunction
function L5r takes integer H5r, unit J5r, string K5r returns nothing
    set DSw[ASw] = K5r
    set ASw = ASw + 1
    if MC[H5r] == 0 then
        if H5r == 0 then
            call tNr("Nullpointer exception when calling CustomHero.replaceHeroUnit", "when calling error in CustomHero, line 89")
        else
            call tNr("Called CustomHero.replaceHeroUnit on invalid object.", "when calling error in CustomHero, line 89")
        endif
    endif
    call CPi(H5r, J5r, "when calling replaceHeroUnit in CustomHero, line 89")
    set ASw = ASw - 1
endfunction
function XbS takes group LbS returns group
    set BQ = CreateGroup()
    call ForGroup(LbS, gmw)
    return BQ
endfunction
function hJw takes group gJw returns boolean
    return FirstOfGroup(gJw) != null
endfunction
function lxs takes group Oxs returns nothing
    call ugu(Oxs)
    call Z5u(Oxs)
endfunction
function ZUr takes integer EUr returns real
    return u3[EUr]
endfunction
function n8w takes integer e8w, string q8w returns real
    local real a8w
    set DSw[ASw] = q8w
    set ASw = ASw + 1
    if bV[e8w] == 0 then
        if e8w == 0 then
            call tNr("Nullpointer exception when calling CustomPlayer.getCameraZoomLevel", "when calling error in CustomPlayer, line 162")
        else
            call tNr("Called CustomPlayer.getCameraZoomLevel on invalid object.", "when calling error in CustomPlayer, line 162")
        endif
    endif
    set a8w = ZUr(e8w)
    set ASw = ASw - 1
    return a8w
endfunction
function tPr takes group rPr returns unit
    local unit sPr = FirstOfGroup(rPr)
    call GroupRemoveUnit(rPr, sPr)
    set OPw = sPr
    set sPr = null
    return OPw
endfunction
function rSu takes integer wSu, unit uSu returns nothing
endfunction
function yXs takes integer OXs, unit lXs, string bXs returns nothing
    set DSw[ASw] = bXs
    set ASw = ASw + 1
    if bV[OXs] == 0 then
        if OXs == 0 then
            call tNr("Nullpointer exception when calling CustomPlayer.setBarrel", "when calling error in CustomPlayer, line 219")
        else
            call tNr("Called CustomPlayer.setBarrel on invalid object.", "when calling error in CustomPlayer, line 219")
        endif
    endif
    call rSu(OXs, lXs)
    set ASw = ASw - 1
endfunction
function olS takes string ulS returns nothing
    local unit rlS
    local integer slS
    local integer tlS
    local group ilS
    local group SlS
    local unit clS
    set DSw[ASw] = ulS
    set ASw = ASw + 1
    set rlS = GetTriggerUnit()
    set slS = hgr(eDs(rlS))
    set tlS = xus(slS, "when calling getCustomPlayer in RespawnHeroesEnterReg, line 38")
    if GetTriggeringRegion() == sF then
        if hqs(xMi(tlS, "when calling getCHero in RespawnHeroesEnterReg, line 42"), "when calling getHero in RespawnHeroesEnterReg, line 42") == null then
            call L5r(xMi(tlS, "when calling getCHero in RespawnHeroesEnterReg, line 43"), rlS, "when calling replaceHeroUnit in RespawnHeroesEnterReg, line 43")
            call UOS($00000001, "when calling getGroup in RespawnHeroesEnterReg, line 46")
            set ilS = pIw
            call GroupEnumUnitsOfPlayer(ilS, DCr(tlS, "when calling getPlayer in RespawnHeroesEnterReg, line 47"), null)
            set SlS = XbS(ilS)
            loop
    exitwhen not hJw(SlS)
    set clS = tPr(SlS)
    if r5S(clS) == VF then
                    call yXs(tlS, clS, "when calling setBarrel in RespawnHeroesEnterReg, line 50")
                    exitwhen true
    endif
            endloop
            call lxs(SlS)
            call Z5u(ilS)
        endif
        call HLw(Ng, DCr(tlS, "when calling getPlayer in RespawnHeroesEnterReg, line 54"), ANw(rlS), XSw, n8w(xus(hgr(DCr(tlS, "when calling getPlayer in RespawnHeroesEnterReg, line 54")), "when calling getCustomPlayer in RespawnHeroesEnterReg, line 54"), "when calling getCameraZoomLevel in RespawnHeroesEnterReg, line 54"), "when calling freeAndPan in RespawnHeroesEnterReg, line 54")
        call I3i(DCr(tlS, "when calling getPlayer in RespawnHeroesEnterReg, line 55"), $00000000)
        call krS(tlS, "when calling cameraCheckLock in RespawnHeroesEnterReg, line 56")
    endif
    set ASw = ASw - 1
    set rlS = null
    set ilS = null
    set SlS = null
    set clS = null
endfunction
function BYu takes nothing returns nothing
    set ASw = 0
    call olS("via function reference RespawnHeroesEnterReg, line 75")
endfunction
function B_i takes nothing returns boolean
    return GetUnitTypeId(GetOrderTargetUnit()) == ct and IsUnitInGroup(GetTriggerUnit(), kpu(300., GetUnitLoc(GetOrderTargetUnit()))) and IsPlayerInForce(GetOwningPlayer(GetTriggerUnit()), pc[$00000001])
endfunction
function Vbs takes nothing returns boolean
    return IsUnitEnemy(GetEnumUnit(), GetOwningPlayer(pS[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))]))
endfunction
function B_s takes nothing returns nothing
    if Vbs() then
        call PauseUnit(GetEnumUnit(), false)
        call SetUnitInvulnerable(GetEnumUnit(), false)
        call UnitDamageTargetBJ(pS[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))], GetEnumUnit(), 20000., ATTACK_TYPE_CHAOS, DAMAGE_TYPE_UNIVERSAL)
    else
        call AddSpecialEffectTargetUnitBJ("overhead", GetEnumUnit(), "Abilities\\Spells\\Human\\Resurrect\\ResurrectTarget.mdl")
        call DestroyEffect(bj_lastCreatedEffect)
        call ResetUnitAnimation(GetEnumUnit())
        call PauseUnit(GetEnumUnit(), false)
        call SetUnitInvulnerable(GetEnumUnit(), false)
        call SetUnitLifePercentBJ(GetEnumUnit(), 100.)
    endif
endfunction
function tFs takes nothing returns boolean
    return GetUnitTypeId(GetTriggerUnit()) == 1211118131 or GetUnitTypeId(GetTriggerUnit()) == 1211118132
endfunction
function Bcs takes nothing returns boolean
    return GetSpellAbilityId() == 1093679416 and GetPlayerState(GetOwningPlayer(GetTriggerUnit()), PLAYER_STATE_RESOURCE_FOOD_USED) == 100 and oS[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))] == 1 and tFs()
endfunction
function Bgt takes nothing returns boolean
    return GetPlayerController(GetOwningPlayer(GetTriggerUnit())) == MAP_CONTROL_USER
endfunction
function Bgu takes nothing returns boolean
    return IsUnitType(GetTriggerUnit(), UNIT_TYPE_HERO) != false
endfunction
function Yau takes nothing returns boolean
    return UnitInventoryCount(GetTriggerUnit()) != 6
endfunction
function Bhs takes nothing returns nothing
    if Yau() then
        call PlaySoundBJ(ce)
        set lw[GetPlayerId(GetOwningPlayer(GetTriggerUnit()))] = 1227895091
        call TriggerExecute(ow)
        call DisplayTextToForce(MwS(GetOwningPlayer(GetTriggerUnit())), "|cffffcc00Shaman Maz'tha|r : |cff87ceebAlthough it is sad that their lives were involved in this mess, it was necessary. You have worked hard for this, so you have earned my recommendation. Take it.")
        call QuestSetDescription(Lr[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))], "I have it! I have the recommendation! Now to get back to my Class Trainer...")
    else
        call PlaySoundBJ(oe)
        call DisplayTimedTextToForce(MwS(GetOwningPlayer(GetTriggerUnit())), 7., "|cffff0000Inventory full! Cannot receive recommendation!|r")
    endif
endfunction
function piS takes nothing returns boolean
    return GetUnitTypeId(GetTriggerUnit()) == 1211118149 or GetUnitTypeId(GetTriggerUnit()) == 1211118150
endfunction
function Bhu takes nothing returns boolean
    return GetSpellAbilityId() == 1093679431 and GetPlayerState(GetOwningPlayer(GetTriggerUnit()), PLAYER_STATE_RESOURCE_FOOD_USED) == 100 and oS[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))] == 1 and piS()
endfunction
function Bku takes nothing returns boolean
    return GetUnitTypeId(GetOrderTargetUnit()) == ct and IsUnitInGroup(GetTriggerUnit(), kpu(300., GetUnitLoc(GetOrderTargetUnit()))) and IsPlayerInForce(GetOwningPlayer(GetTriggerUnit()), pc[$00000004])
endfunction
function Bli takes nothing returns nothing
    call RemoveUnit(GetEnumUnit())
endfunction
function SGi takes real iGi returns real
    set HSw = iGi * JG
    return HSw
endfunction
function YKs takes string RKs returns integer
    local integer TKs
    set DSw[ASw] = RKs
    set ASw = ASw + 1
    if EV == 0 then
        if ZV < 32768 then
            set ZV = ZV + 1
            set TKs = ZV
            set UV[TKs] = 628
        else
            call tNr("Out of memory: Could not create ArrayQueue.", "when calling error in DummyRecycler, line 61")
            set TKs = 0
        endif
    else
        set EV = EV - 1
        set TKs = WV[EV]
        set UV[TKs] = 628
    endif
    set ASw = ASw - 1
    return TKs
endfunction
function vrs takes integer xrs returns nothing
    set P3[xrs] = 0
    set A3[xrs] = 0
    set D3[xrs] = 0
endfunction
function vVs takes integer xVs returns nothing
    call vrs(xVs)
endfunction
function STu takes string tTu returns integer
    local integer iTu
    set DSw[ASw] = tTu
    set ASw = ASw + 1
    set iTu = YKs("when calling alloc_ArrayQueue in DummyRecycler, line 61")
    call vVs(iTu)
    set ASw = ASw - 1
    return iTu
endfunction
function Nbs takes real Bbs returns real
    return Bbs * KG
endfunction
function dps takes player pps, integer eps, real qps, real aps, real nps returns unit
    return CreateUnit(pps, eps, qps, aps, Nbs(nps))
endfunction
function Mur takes unit Bur, real Nur returns nothing
    call SetUnitY(Bur, Nur)
endfunction
function out takes unit Sut, real cut returns nothing
    call SetUnitX(Sut, cut)
endfunction
function grS takes unit frS, real RrS, real TrS returns nothing
    local unit YrS = frS
    local unit GrS
    call out(YrS, RrS)
    set GrS = YrS
    call Mur(GrS, TrS)
    set YrS = null
    set GrS = null
endfunction
function dqS takes real cqS, real oqS, player OqS, real lqS returns unit
    local unit bqS = dps(OqS, ux, cqS, oqS, lqS)
    local unit yqS = bqS
    local unit pqS
    local unit eqS
    local unit qqS
    local unit aqS
    local unit nqS
    call grS(yqS, cqS, oqS)
    set pqS = yqS
    call V5S(pqS, xg)
    set eqS = pqS
    call Q_s(eqS, xg)
    set qqS = eqS
    call V5S(qqS, vg)
    set aqS = qqS
    call V5S(aqS, rx)
    set nqS = aqS
    call Q_s(nqS, rx)
    set SPw = bqS
    set bqS = null
    set yqS = null
    set pqS = null
    set eqS = null
    set qqS = null
    set aqS = null
    set nqS = null
    return SPw
endfunction
function oXr takes real tXr, real iXr, real SXr, real cXr returns real
    set Rcw = tXr - SXr
    set Tcw = iXr - cXr
    return Rcw
endfunction
function t8s takes integer w8s, integer u8s, unit r8s, string s8s returns nothing
    if u8s < 0 or u8s >= 6 then
        call tNr("Index out of Bounds", s8s)
    elseif u8s <= 2 then
        if u8s <= 1 then
            if u8s <= 0 then
    set YOw[w8s] = r8s
            else
    set GOw[w8s] = r8s
            endif
        else
            set gOw[w8s] = r8s
        endif
    elseif u8s <= 4 then
        if u8s <= 3 then
            set hOw[w8s] = r8s
        else
            set FOw[w8s] = r8s
        endif
    else
        set kOw[w8s] = r8s
    endif
endfunction
function d7S takes integer q7S, unit a7S, string n7S returns nothing
    set DSw[ASw] = n7S
    set ASw = ASw + 1
    if D3[q7S] < ix then
        set D3[q7S] = D3[q7S] + 1
        set A3[q7S] = ModuloInteger(A3[q7S] + 1, ix)
        call t8s(q7S, A3[q7S], a7S, "when writing array ArrayQueue_units in DummyRecycler, line 71")
    else
        call tNr("Queue Overflow", "when calling error in DummyRecycler, line 73")
    endif
    set ASw = ASw - 1
endfunction
function u7i takes integer N6i, unit M6i, string w7i returns nothing
    set DSw[ASw] = w7i
    set ASw = ASw + 1
    if UV[N6i] == 0 then
        if N6i == 0 then
            call tNr("Nullpointer exception when calling ArrayQueue.enqueue", "when calling error in DummyRecycler, line 67")
        else
            call tNr("Called ArrayQueue.enqueue on invalid object.", "when calling error in DummyRecycler, line 67")
        endif
    endif
    call d7S(N6i, M6i, "when calling enqueue in DummyRecycler, line 67")
    set ASw = ASw - 1
endfunction
function RGu takes string qGu returns boolean
    local integer aGu
    local integer nGu
    local integer dGu
    local integer fGu
    set DSw[ASw] = qGu
    set ASw = ASw + 1
    set ux = 2019849581
    set rx = 2020765556
    set sx = 8
    set tx = 360 * 1. / sx
    set ix = 6
    set Sx = CreateTimer()
    set cx = 0
    set aGu = 0
    set nGu = sx - 1
    loop
        exitwhen aGu > nGu
        set ox[aGu] = STu("when calling new_ArrayQueue in DummyRecycler, line 152")
        set dGu = 0
        set fGu = ix - 1
        loop
            exitwhen dGu > fGu
            call u7i(ox[aGu], dqS(oXr(KP, LP, 16., 16.), Tcw, mg, SGi(aGu * tx)), "when calling enqueue in DummyRecycler, line 154")
            set dGu = dGu + 1
        endloop
        set aGu = aGu + 1
    endloop
    set ASw = ASw - 1
    return true
endfunction
function Blt takes nothing returns boolean
    set ASw = 0
    return RGu("via function reference DummyRecycler, line 1")
endfunction
function m9r takes unit v9r returns boolean
    return GetUnitAbilityLevel(v9r, yw) > 0
endfunction
function Bqs takes nothing returns nothing
    if not m9r(GetEnumUnit()) then
        call UnitDamageTargetBJ(GetEventDamageSource(), GetEnumUnit(), 18000., ATTACK_TYPE_HERO, DAMAGE_TYPE_ENHANCED)
    endif
endfunction
function tnr takes string rnr returns boolean
    local boolean snr
    set DSw[ASw] = rnr
    set ASw = ASw + 1
    set snr = GpS(gQ, hgr(eDs(GetTriggerUnit())), "when calling has in LockBosses, line 47") and t_u(GetTriggerUnit())
    set ASw = ASw - 1
    return snr
endfunction
function Btr takes nothing returns boolean
    set ASw = 0
    return tnr("via function reference LockBosses, line 58")
endfunction
function Bvt takes nothing returns nothing
    call AddSpecialEffectTargetUnitBJ("overhead", GetEnumUnit(), "Abilities\\Spells\\Human\\ReviveHuman\\ReviveHuman.mdl")
    call DestroyEffect(bj_lastCreatedEffect)
    call UnitDamageTargetBJ(GetTriggerUnit(), GetEnumUnit(), 900. * I2R(GetUnitAbilityLevelSwapped(GetSpellAbilityId(), GetTriggerUnit())), ATTACK_TYPE_CHAOS, DAMAGE_TYPE_NORMAL)
endfunction
function C1r takes nothing returns nothing
    call AdjustPlayerStateBJ(- 10000, GetOwningPlayer(GetTriggerUnit()), PLAYER_STATE_RESOURCE_GOLD)
    call ForceAddPlayer(Tt, GetOwningPlayer(GetTriggerUnit()))
    call DisplayTextToForce(MwS(GetOwningPlayer(GetTriggerUnit())), "|cffffcc00You left a huge sum of gold at the fountain and received its blessing.|r")
endfunction
function n1s takes player p1s, real e1s, real q1s, real a1s returns nothing
    call PanCameraToTimedForPlayer(p1s, e1s, q1s, a1s)
endfunction
function yct takes unit cct, integer oct returns integer
    local integer Oct = 0
    local integer lct = 0
    local integer bct = dcs(cct) - 1
    loop
        exitwhen lct > bct
        if q3t(ofi(cct, lct)) == oct then
            set Oct = Oct + 1
        endif
        set lct = lct + 1
    endloop
    return Oct
endfunction
function Xuu takes string Uuu returns nothing
    local region Iuu
    local unit Puu
    local player Auu
    local integer Duu
    local boolean Huu
    local boolean Juu
    local integer Kuu
    local boolean Luu
    set DSw[ASw] = Uuu
    set ASw = ASw + 1
    set Iuu = GetTriggeringRegion()
    set Puu = GetTriggerUnit()
    if not t_u(Puu) then
        set ASw = ASw - 1
        set Iuu = null
        set Puu = null
        set Auu = null
        return
    endif
    if k4i(Puu, uk) or k4i(Puu, rk) or c8w(Puu, BF) then
        set Auu = eDs(Puu)
        set Duu = hgr(Auu)
        set Huu = c8w(Puu, BF)
        set Juu = false
        set Kuu = YEi(Iuu)
        if Kuu == YEi(FX) then
            if wps(mX, Duu, "when calling get in Voidless_triggers, line 53") == 1 then
    set Juu = true
            endif
        elseif Kuu == YEi(kX) then
            if wps(mX, Duu, "when calling get in Voidless_triggers, line 56") == 2 then
    set Juu = true
            endif
        elseif Kuu == YEi(jX) then
            if wps(mX, Duu, "when calling get in Voidless_triggers, line 59") == 3 then
    set Juu = true
            endif
        elseif Kuu == YEi(xX) then
            if wps(mX, Duu, "when calling get in Voidless_triggers, line 62") == 4 then
    set Juu = true
            endif
        elseif Kuu == YEi(vX) then
            if Huu then
    set Juu = true
    if Auu == nD then
                    call Wwu(QX, 2.)
    endif
            else
    set Luu = yct(Puu, l2s(Iji(am, "when calling unObfuscate in Voidless_triggers, line 70"), "when calling fromRawCode in Voidless_triggers, line 70")) == 3
    if Luu then
                    if Auu == nD then
                        call Wwu(QX, 2.)
                    endif
                    call GVw(mX, Duu, GetRandomInt($00000001, $00000004), "when calling put in Voidless_triggers, line 75")
                    call dii(Iji("Something is not right here...", "when calling unObfuscate in Voidless_triggers, line 76"), 5., Auu)
    elseif Auu == nD then
                    call Wwu(QX, 0.)
    endif
            endif
        endif
        if Juu then
            call GVw(mX, Duu, $00000000, "when calling put in Voidless_triggers, line 82")
            call J7i(Puu, oQu(MO), Gcw)
            call n1s(Auu, oQu(MO), Gcw, 0.)
        endif
    endif
    set ASw = ASw - 1
    set Iuu = null
    set Puu = null
    set Auu = null
endfunction
function C1u takes nothing returns nothing
    set ASw = 0
    call Xuu("via function reference Voidless_triggers, line 178")
endfunction
function WMw takes nothing returns boolean
    return AS[1 + GetPlayerId(GetOwningPlayer(GetKillingUnit()))] >= 50
endfunction
function C3i takes nothing returns nothing
    set AS[1 + GetPlayerId(GetOwningPlayer(GetKillingUnit()))] = AS[1 + GetPlayerId(GetOwningPlayer(GetKillingUnit()))] + 1
    if WMw() then
        call QuestMessageBJ(MwS(GetOwningPlayer(GetKillingUnit())), $00000002, "|cffffcc00Vampirism|r Quest Requirement Completed.")
    else
        call QuestMessageBJ(MwS(GetOwningPlayer(GetKillingUnit())), $00000001, I2S(AS[1 + GetPlayerId(GetOwningPlayer(GetKillingUnit()))]) + " Enraged Owlkin(s) blood collected.")
    endif
endfunction
function Otr takes string ctr returns integer
    local integer otr
    set DSw[ASw] = ctr
    set ASw = ASw + 1
    if NX == 0 then
        if MX < 32768 then
            set MX = MX + 1
            set otr = MX
            set wC[otr] = 1104
        else
            call tNr("Out of memory: Could not create CallbackSingle_nullTimer_Preloader.", "when calling error in Preloader, line 55")
            set otr = 0
        endif
    else
        set NX = NX - 1
        set otr = BX[NX]
        set wC[otr] = 1104
    endif
    set ASw = ASw - 1
    return otr
endfunction
function CCr takes integer HCr returns string
    local string JCr = ""
    local integer KCr = HCr
    local integer LCr = 0
    local integer XCr
    loop
        exitwhen LCr > 3
        set XCr = ModuloInteger(KCr, $00000100)
        set KCr = KCr / 256
        set JCr = Dsi(CA, XCr) + JCr
        set LCr = LCr + 1
    endloop
    return JCr
endfunction
function TSs takes integer RSs returns string
    return CCr(RSs)
endfunction
function uYt takes string MTt returns boolean
    local integer wYt
    set DSw[ASw] = MTt
    set ASw = ASw + 1
    set GD = true
    set gD = CreateGroup()
    set hD = dps(mg, ux, 0., 0., 0.)
    if hD == null then
        call tNr("DUMMY_UNITID (" + TSs(ux) + ") not added correctly to the map.", "when calling error in Preloader, line 53")
    endif
    if GD then
        set wYt = Otr("when calling alloc_CallbackSingle_nullTimer_Preloader in Preloader, line 55")
        call RUs(wYt)
        call ccr(wYt, "when calling nullTimer in Preloader, line 55")
    endif
    set ASw = ASw - 1
    return true
endfunction
function C4r takes nothing returns boolean
    set ASw = 0
    return uYt("via function reference Preloader, line 1")
endfunction
function Jks takes string Qks returns boolean
    local integer Wks
    local integer Eks
    local integer Zks
    local integer Uks
    local integer Iks
    local integer Pks
    local integer Aks
    local integer Dks
    local integer Hks
    set DSw[ASw] = Qks
    set ASw = ASw + 1
    set Wks = XQt("when calling new_LinkedList in WorldBoss_hints, line 6")
    call vwt(Wks, err(Iji("The Betrayed Angel is not your Destiny...", "when calling unObfuscate in WorldBoss_hints, line 7"), "when calling stringToIndex in WorldBoss_hints, line 7"), "when calling add in WorldBoss_hints, line 7")
    set Eks = Wks
    call vwt(Eks, err(Iji("Integrity is paramount!", "when calling unObfuscate in WorldBoss_hints, line 8"), "when calling stringToIndex in WorldBoss_hints, line 8"), "when calling add in WorldBoss_hints, line 8")
    set Zks = Eks
    call vwt(Zks, err(Iji("No stone must be left unturned...", "when calling unObfuscate in WorldBoss_hints, line 9"), "when calling stringToIndex in WorldBoss_hints, line 9"), "when calling add in WorldBoss_hints, line 9")
    set Uks = Zks
    call vwt(Uks, err(Iji("You must Explore!", "when calling unObfuscate in WorldBoss_hints, line 10"), "when calling stringToIndex in WorldBoss_hints, line 10"), "when calling add in WorldBoss_hints, line 10")
    set Iks = Uks
    call vwt(Iks, err(Iji("The smallest challenges, as insignificant as they may seem, are necessary to overcome to reach your Destiny...", "when calling unObfuscate in WorldBoss_hints, line 11"), "when calling stringToIndex in WorldBoss_hints, line 11"), "when calling add in WorldBoss_hints, line 11")
    set Pks = Iks
    call vwt(Pks, err(Iji("Once a friend, once a foe, might make ye mighty...", "when calling unObfuscate in WorldBoss_hints, line 12"), "when calling stringToIndex in WorldBoss_hints, line 12"), "when calling add in WorldBoss_hints, line 12")
    set Aks = Pks
    call vwt(Aks, err(Iji("A huge amount of Power is needed to reach your Destiny...", "when calling unObfuscate in WorldBoss_hints, line 13"), "when calling stringToIndex in WorldBoss_hints, line 13"), "when calling add in WorldBoss_hints, line 13")
    set Dks = Aks
    call vwt(Dks, err(Iji("Repeating the same and expecting different results is madness, yet sometimes we must become mad to understand insanity...", "when calling unObfuscate in WorldBoss_hints, line 14"), "when calling stringToIndex in WorldBoss_hints, line 14"), "when calling add in WorldBoss_hints, line 14")
    set Hks = Dks
    call vwt(Hks, err(Iji("I have revealed all the secrets I know... The rest is up to you... ", "when calling unObfuscate in WorldBoss_hints, line 15"), "when calling stringToIndex in WorldBoss_hints, line 15"), "when calling add in WorldBoss_hints, line 15")
    set LX = Hks
    set ASw = ASw - 1
    return true
endfunction
function C6S takes nothing returns boolean
    set ASw = 0
    return Jks("via function reference WorldBoss_hints, line 1")
endfunction
function C7i takes nothing returns nothing
    call PanCameraToTimedLocForPlayer(GetEnumPlayer(), vo, 0.)
    call TriggerExecute(MT)
endfunction
function C7w takes nothing returns nothing
    set Fo[$00000001] = Sy
    set Fo[$00000002] = Sl
    set Fo[$00000003] = xb
    set Fo[$00000004] = Uy
    set Fo[$00000005] = My
    set Fo[$00000006] = Ay
    set Fo[$00000007] = vp
    set Fo[$00000008] = Wb
    set Fo[$00000009] = ep
    set Fo[$0000000A] = xO
    set Fo[$0000000B] = Oy
    set Fo[$0000000C] = Hl
    set Fo[$0000000D] = Cp
    set jo[$00000001] = cy
    set jo[$00000002] = cl
    set jo[$00000003] = vb
    set jo[$00000004] = Iy
    set jo[$00000005] = wp
    set jo[$00000006] = Dy
    set jo[$00000007] = mp
    set jo[$00000008] = Eb
    set jo[$00000009] = qp
    set jo[$0000000A] = vO
    set jo[$0000000B] = ly
    set jo[$0000000C] = Ul
    set jo[$0000000D] = Hp
    call DestroyTrigger(GetTriggeringTrigger())
endfunction
function Lus takes string Jus returns integer
    local integer Kus
    set DSw[ASw] = Jus
    set ASw = ASw + 1
    if NX == 0 then
        if MX < 32768 then
            set MX = MX + 1
            set Kus = MX
            set wC[Kus] = 937
        else
            call tNr("Out of memory: Could not create CallbackSingle_doAfter_Reforged_Skins.", "when calling error in Reforged_Skins, line 39")
            set Kus = 0
        endif
    else
        set NX = NX - 1
        set Kus = BX[NX]
        set wC[Kus] = 937
    endif
    set ASw = ASw - 1
    return Kus
endfunction
function nxi takes string qxi returns boolean
    local integer axi
    set DSw[ASw] = qxi
    set ASw = ASw + 1
    set axi = Lus("when calling alloc_CallbackSingle_doAfter_Reforged_Skins in Reforged_Skins, line 39")
    call RUs(axi)
    call Ybr(5., axi, "when calling doAfter in Reforged_Skins, line 39")
    set ASw = ASw - 1
    return true
endfunction
function CAr takes nothing returns boolean
    set ASw = 0
    return nxi("via function reference Reforged_Skins, line 1")
endfunction
function CBi takes nothing returns nothing
    call PanCameraToTimedLocForPlayer(GetEnumPlayer(), vo, 0.)
    call TriggerExecute(MT)
endfunction
function CEs takes nothing returns nothing
    call ForceAddPlayer(Rt, GetOwningPlayer(GetKillingUnit()))
    call DisplayTextToForce(MwS(GetOwningPlayer(GetKillingUnit())), "I have killed the Goblin and obtained one of his explosives.")
endfunction
function W1u takes integer F1u, integer k1u, integer j1u, integer x1u, integer v1u, string m1u returns nothing
    local integer Q1u
    set DSw[ASw] = m1u
    set ASw = ASw + 1
    set Q1u = xeS(k1u, Xww[wuw[F1u]], wuw[F1u], "when calling new_LLEntry in LinkedList, line 40")
    set Cww[Xww[wuw[F1u]]] = Q1u
    set Xww[wuw[F1u]] = Q1u
    set uuw[F1u] = uuw[F1u] + 1
    set Q1u = xeS(j1u, Xww[wuw[F1u]], wuw[F1u], "when calling new_LLEntry in LinkedList, line 40")
    set Cww[Xww[wuw[F1u]]] = Q1u
    set Xww[wuw[F1u]] = Q1u
    set uuw[F1u] = uuw[F1u] + 1
    set Q1u = xeS(x1u, Xww[wuw[F1u]], wuw[F1u], "when calling new_LLEntry in LinkedList, line 40")
    set Cww[Xww[wuw[F1u]]] = Q1u
    set Xww[wuw[F1u]] = Q1u
    set uuw[F1u] = uuw[F1u] + 1
    set Q1u = xeS(v1u, Xww[wuw[F1u]], wuw[F1u], "when calling new_LLEntry in LinkedList, line 40")
    set Cww[Xww[wuw[F1u]]] = Q1u
    set Xww[wuw[F1u]] = Q1u
    set uuw[F1u] = uuw[F1u] + 1
    set ASw = ASw - 1
endfunction
function aNt takes integer lNt, integer bNt, integer yNt, integer pNt, integer eNt, string qNt returns nothing
    set DSw[ASw] = qNt
    set ASw = ASw + 1
    if yN[lNt] == 0 then
        if lNt == 0 then
            call tNr("Nullpointer exception when calling LinkedList.add", "when calling error in LinkedList, line 38")
        else
            call tNr("Called LinkedList.add on invalid object.", "when calling error in LinkedList, line 38")
        endif
    endif
    call W1u(lNt, bNt, yNt, pNt, eNt, "when calling add in LinkedList, line 38")
    set ASw = ASw - 1
endfunction
function cCw takes string iCw returns boolean
    local integer SCw
    set DSw[ASw] = iCw
    set ASw = ASw + 1
    call l2s(Iji("A0DX", "when calling unObfuscate in AC_Abilities, line 7"), "when calling fromRawCode in AC_Abilities, line 7")
    set UG = l2s(Iji("A0DZ", "when calling unObfuscate in AC_Abilities, line 8"), "when calling fromRawCode in AC_Abilities, line 8")
    set IG = l2s(Iji("A0E0", "when calling unObfuscate in AC_Abilities, line 9"), "when calling fromRawCode in AC_Abilities, line 9")
    set PG = l2s(Iji("A0E7", "when calling unObfuscate in AC_Abilities, line 10"), "when calling fromRawCode in AC_Abilities, line 10")
    set AG = l2s(Iji("A0E9", "when calling unObfuscate in AC_Abilities, line 11"), "when calling fromRawCode in AC_Abilities, line 11")
    set SCw = XQt("when calling new_LinkedList in AC_Abilities, line 13")
    call aNt(SCw, UG, IG, PG, AG, "when calling add in AC_Abilities, line 13")
    set DG = SCw
    set ASw = ASw - 1
    return true
endfunction
function CEt takes nothing returns boolean
    set ASw = 0
    return cCw("via function reference AC_Abilities, line 1")
endfunction
function tti takes itemtype uti, integer rti returns nothing
    local group sti
    set bj_stockPickedItemType = uti
    set bj_stockPickedItemLevel = rti
    set sti = CreateGroup()
    call GroupEnumUnitsOfType(sti, "marketplace", ZG)
    call ForGroup(sti, function UpdateEachStockBuildingEnum)
    call DestroyGroup(sti)
    set sti = null
    set sti = null
endfunction
function dOu takes nothing returns nothing
    local integer qOu = 0
    local integer aOu = 0
    local integer nOu = 1
    local itemtype eOu
    loop
        if bj_stockAllowedPermanent[nOu]then
            set aOu = aOu + 1
            if GetRandomInt($00000001, aOu) == 1 then
    set eOu = ITEM_TYPE_PERMANENT
    set qOu = nOu
            endif
        endif
        if bj_stockAllowedCharged[nOu]then
            set aOu = aOu + 1
            if GetRandomInt($00000001, aOu) == 1 then
    set eOu = ITEM_TYPE_CHARGED
    set qOu = nOu
            endif
        endif
        if bj_stockAllowedArtifact[nOu]then
            set aOu = aOu + 1
            if GetRandomInt($00000001, aOu) == 1 then
    set eOu = ITEM_TYPE_ARTIFACT
    set qOu = nOu
            endif
        endif
        set nOu = nOu + 1
        exitwhen nOu > 10
    endloop
    if aOu == 0 then
        set eOu = null
        set eOu = null
        return
    endif
    call tti(eOu, qOu)
    set eOu = null
    set eOu = null
endfunction
function CKr takes nothing returns nothing
    call dOu()
    call TimerStart(bj_stockUpdateTimer, bj_STOCK_RESTOCK_INTERVAL, true, COw)
endfunction
function ewS takes nothing returns boolean
    return UnitHasItemOfTypeBJ(GetTriggerUnit(), $49303054)
endfunction
function lTs takes nothing returns boolean
    return UnitHasItemOfTypeBJ(GetTriggerUnit(), $49303055)
endfunction
function CMi takes nothing returns nothing
    if lTs() then
        call ForceRemovePlayer(Xr, GetOwningPlayer(GetTriggerUnit()))
        call ForceRemovePlayer(Mr, GetOwningPlayer(GetTriggerUnit()))
        call ForceRemovePlayer(Vr, GetOwningPlayer(GetTriggerUnit()))
        call ForceRemovePlayer(Kr, GetOwningPlayer(GetTriggerUnit()))
        call ForceRemovePlayer(Cr, GetOwningPlayer(GetTriggerUnit()))
        call PlaySoundBJ(ue)
        call SetHeroLevelBJ(GetTriggerUnit(), $00000001, false)
        call RemoveItem(GetItemOfTypeFromUnitBJ(GetTriggerUnit(), $49303055))
        call DisplayTextToForce(MwS(GetOwningPlayer(GetTriggerUnit())), "|cffffcc00Class Trainer|r : |cff87ceebYou...you have the recommendation? I...I am impressed...Nobody has come this far in ages...you truly are an asset to the Guild. Welcome, Stalker.")
        call ReplaceUnitBJ(GetTriggerUnit(), $48303130, $00000002)
        call SelectUnitForPlayerSingle(bj_lastReplacedUnit, GetOwningPlayer(GetTriggerUnit()))
        call DestroyQuest(Lr[1 + GetPlayerId(GetOwningPlayer(bj_lastReplacedUnit))])
        set Lr[1 + GetPlayerId(GetOwningPlayer(bj_lastReplacedUnit))] = null
        call SetHeroLevel(bj_lastReplacedUnit, $00000001, true)
        call UnitStripHeroLevel(bj_lastReplacedUnit, $00000001)
    endif
    if ewS() then
        call ForceRemovePlayer(Cr, GetOwningPlayer(GetTriggerUnit()))
        call ForceRemovePlayer(Kr, GetOwningPlayer(GetTriggerUnit()))
        call ForceRemovePlayer(Nr, GetOwningPlayer(GetTriggerUnit()))
        call ForceRemovePlayer(Vr, GetOwningPlayer(GetTriggerUnit()))
        call PlaySoundBJ(ue)
        call SetHeroLevelBJ(GetTriggerUnit(), $00000001, false)
        call RemoveItem(GetItemOfTypeFromUnitBJ(GetTriggerUnit(), $49303054))
        call DisplayTextToForce(MwS(GetOwningPlayer(GetTriggerUnit())), "|cffffcc00Class Trainer|r : |cff87ceebI am impressed. Jim doesn't just hand recommendations over to just anyone. He takes his work seriously, as do you. From here on out, you are a rogue no more. You join the ranks of the Assassins' Guild as an assassin yourself. Congrats, but don't get cocky, fledgling.")
        call ReplaceUnitBJ(GetTriggerUnit(), $48303131, $00000002)
        call SelectUnitForPlayerSingle(bj_lastReplacedUnit, GetOwningPlayer(GetTriggerUnit()))
        call DestroyQuest(Lr[1 + GetPlayerId(GetOwningPlayer(bj_lastReplacedUnit))])
        call SetHeroLevel(bj_lastReplacedUnit, $00000001, true)
        call UnitStripHeroLevel(bj_lastReplacedUnit, $00000001)
    endif
endfunction
function CNw takes nothing returns nothing
    set uO = Player($00000003)
    call TriggerExecute(OY)
endfunction
function bFu takes nothing returns boolean
    return GetUnitTypeId(GetEnteringUnit()) == 1211117618
endfunction
function e0u takes nothing returns boolean
    return GetUnitTypeId(GetEnteringUnit()) == 1211117617
endfunction
function COs takes nothing returns nothing
    call SetHeroLevelBJ(GetTriggerUnit(), $00000001, false)
    if bFu() then
        call ReplaceUnitBJ(GetEnteringUnit(), $48303037, $00000002)
    endif
    if e0u() then
        call ReplaceUnitBJ(GetEnteringUnit(), $48303034, $00000002)
    endif
    set Fu[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))] = bj_lastReplacedUnit
    call SetHeroLevel(Fu[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))], $00000001, true)
    call UnitStripHeroLevel(Fu[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))], $00000001)
    call DisplayTimedTextToForce(MwS(GetOwningPlayer(GetTriggerUnit())), 5., "|cffff8c00Congratulations! You have advanced to the 1st Job!|r")
    call SetUnitPositionLoc(Fu[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))], GetRectCenter(kO))
    call PanCameraToTimedLocForPlayer(GetOwningPlayer(GetTriggerUnit()), GetRectCenter(kO), 0.)
    call TriggerExecute(MT)
    call SelectUnitForPlayerSingle(Fu[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))], GetOwningPlayer(GetTriggerUnit()))
    call PlaySoundBJ(se)
endfunction
function NXw takes string VXw returns integer
    local integer BXw
    set DSw[ASw] = VXw
    set ASw = ASw + 1
    if NX == 0 then
        if MX < 32768 then
            set MX = MX + 1
            set BXw = MX
            set wC[BXw] = 1020
        else
            call tNr("Out of memory: Could not create CallbackSingle_doAfter_addAction_Stalker_Stalk.", "when calling error in Stalker_Stalk, line 21")
            set BXw = 0
        endif
    else
        set NX = NX - 1
        set BXw = BX[NX]
        set wC[BXw] = 1020
    endif
    set ASw = ASw - 1
    return BXw
endfunction
function gir takes unit Yir, integer Gir returns integer
    return GetUnitAbilityLevel(Yir, Gir)
endfunction
function bJi takes string SJi returns nothing
    local unit cJi
    local integer oJi
    local integer OJi
    local real lJi
    set DSw[ASw] = SJi
    set ASw = ASw + 1
    set cJi = GetTriggerUnit()
    set oJi = gir(cJi, rj)
    set lJi = iF
    set OJi = NXw("when calling alloc_CallbackSingle_doAfter_addAction_Stalker_Stalk in Stalker_Stalk, line 21")
    call RUs(OJi)
    set fsw[OJi] = cJi
    set Rsw[OJi] = oJi
    call Ybr(lJi, OJi, "when calling doAfter in Stalker_Stalk, line 21")
    set ASw = ASw - 1
    set cJi = null
endfunction
function CXs takes nothing returns nothing
    set ASw = 0
    call bJi("via function reference Stalker_Stalk, line 18")
endfunction
function PRu takes string URu returns integer
    local integer IRu
    set DSw[ASw] = URu
    set ASw = ASw + 1
    if NX == 0 then
        if MX < 32768 then
            set MX = MX + 1
            set IRu = MX
            set wC[IRu] = 924
        else
            call tNr("Out of memory: Could not create CallbackSingle_doAfter_NpcHandler.", "when calling error in NpcHandler, line 820")
            set IRu = 0
        endif
    else
        set NX = NX - 1
        set IRu = BX[NX]
        set wC[IRu] = 924
    endif
    set ASw = ASw - 1
    return IRu
endfunction
function Pfu takes string Ufu returns integer
    local integer Ifu
    set DSw[ASw] = Ufu
    set ASw = ASw + 1
    if NX == 0 then
        if MX < 32768 then
            set MX = MX + 1
            set Ifu = MX
            set wC[Ifu] = 921
        else
            call tNr("Out of memory: Could not create CallbackSingle_doAfter_NpcHandler.", "when calling error in NpcHandler, line 802")
            set Ifu = 0
        endif
    else
        set NX = NX - 1
        set Ifu = BX[NX]
        set wC[Ifu] = 921
    endif
    set ASw = ASw - 1
    return Ifu
endfunction
function cOS takes string iOS returns integer
    local integer SOS
    set DSw[ASw] = iOS
    set ASw = ASw + 1
    if NX == 0 then
        if MX < 32768 then
            set MX = MX + 1
            set SOS = MX
            set wC[SOS] = 923
        else
            call tNr("Out of memory: Could not create CallbackSingle_doAfter_NpcHandler.", "when calling error in NpcHandler, line 812")
            set SOS = 0
        endif
    else
        set NX = NX - 1
        set SOS = BX[NX]
        set wC[SOS] = 923
    endif
    set ASw = ASw - 1
    return SOS
endfunction
function qns takes string pns returns integer
    local integer ens
    set DSw[ASw] = pns
    set ASw = ASw + 1
    if PC == 0 then
        if AC < 32768 then
            set AC = AC + 1
            set ens = AC
            set DC[ens] = 701
        else
            call tNr("Out of memory: Could not create CallbackPeriodic_doPeriodically_NpcHandler.", "when calling error in NpcHandler, line 832")
            set ens = 0
        endif
    else
        set PC = PC - 1
        set ens = IC[PC]
        set DC[ens] = 701
    endif
    set ASw = ASw - 1
    return ens
endfunction
function vpS takes string jpS returns integer
    local integer xpS
    set DSw[ASw] = jpS
    set ASw = ASw + 1
    if NX == 0 then
        if MX < 32768 then
            set MX = MX + 1
            set xpS = MX
            set wC[xpS] = 922
        else
            call tNr("Out of memory: Could not create CallbackSingle_doAfter_NpcHandler.", "when calling error in NpcHandler, line 808")
            set xpS = 0
        endif
    else
        set NX = NX - 1
        set xpS = BX[NX]
        set wC[xpS] = 922
    endif
    set ASw = ASw - 1
    return xpS
endfunction
function RXi takes string pKi returns boolean
    local integer eKi
    local integer qKi
    local integer aKi
    local integer nKi
    local integer dKi
    local integer fKi
    local integer RKi
    local integer TKi
    local integer YKi
    local integer GKi
    local integer gKi
    local integer hKi
    local integer FKi
    local integer kKi
    local integer jKi
    local integer xKi
    local integer vKi
    local integer mKi
    local integer QKi
    local integer WKi
    local integer EKi
    local integer ZKi
    local integer UKi
    local integer IKi
    local integer PKi
    local integer AKi
    local integer DKi
    local integer HKi
    local integer JKi
    local integer KKi
    local integer LKi
    local integer XKi
    local integer CKi
    local integer VKi
    local integer BKi
    local integer NKi
    local integer MKi
    local integer wLi
    local integer uLi
    local integer rLi
    local integer sLi
    local integer tLi
    local integer iLi
    local integer SLi
    local integer cLi
    local integer oLi
    local integer OLi
    local integer lLi
    local integer bLi
    local integer yLi
    local integer pLi
    local integer eLi
    local integer qLi
    local integer aLi
    local integer nLi
    local integer dLi
    local integer fLi
    local integer RLi
    local integer TLi
    local integer YLi
    local integer GLi
    local integer gLi
    local integer hLi
    local integer FLi
    local integer kLi
    local integer jLi
    local integer xLi
    local integer vLi
    local integer mLi
    local integer QLi
    local integer WLi
    local integer ELi
    local integer ZLi
    local integer ULi
    local integer ILi
    local integer PLi
    local integer ALi
    local integer DLi
    local integer HLi
    local integer JLi
    local integer KLi
    local integer LLi
    local integer XLi
    local integer CLi
    local integer VLi
    local integer BLi
    local integer NLi
    local integer MLi
    local integer wXi
    local integer uXi
    local integer rXi
    local integer sXi
    local integer tXi
    local integer iXi
    local integer SXi
    local integer cXi
    local integer oXi
    local integer OXi
    local integer lXi
    local trigger bXi
    local trigger yXi
    local trigger pXi
    local trigger eXi
    local integer qXi
    local integer aXi
    local integer nXi
    local integer dXi
    local integer fXi
    set DSw[ASw] = pKi
    set ASw = ASw + 1
    set rA = "/<>:\"|?*"
    set sA = 5.
    set tA = 3.
    set iA[$00000000] = ""
    set SA[$00000000] = ""
    set cA = 0
    set oA = jts("when calling new_HashMap in NpcHandler, line 39")
    set OA = jts("when calling new_HashMap in NpcHandler, line 41")
    set lA = XQt("when calling new_LinkedList in NpcHandler, line 43")
    set bA = XQt("when calling new_LinkedList in NpcHandler, line 44")
    set yA = XQt("when calling new_LinkedList in NpcHandler, line 45")
    set eKi = XQt("when calling new_LinkedList in NpcHandler, line 47")
    call vwt(eKi, l2s(Iji("H02U", "when calling unObfuscate in NpcHandler, line 47"), "when calling fromRawCode in NpcHandler, line 47"), "when calling add in NpcHandler, line 47")
    set qKi = eKi
    call vwt(qKi, l2s(Iji("H02T", "when calling unObfuscate in NpcHandler, line 47"), "when calling fromRawCode in NpcHandler, line 47"), "when calling add in NpcHandler, line 47")
    set aKi = qKi
    call vwt(aKi, l2s(Iji("H01Y", "when calling unObfuscate in NpcHandler, line 47"), "when calling fromRawCode in NpcHandler, line 47"), "when calling add in NpcHandler, line 47")
    set nKi = aKi
    call vwt(nKi, l2s(Iji("H00N", "when calling unObfuscate in NpcHandler, line 47"), "when calling fromRawCode in NpcHandler, line 47"), "when calling add in NpcHandler, line 47")
    set dKi = nKi
    call vwt(dKi, l2s(Iji("H01Z", "when calling unObfuscate in NpcHandler, line 47"), "when calling fromRawCode in NpcHandler, line 47"), "when calling add in NpcHandler, line 47")
    set fKi = dKi
    call vwt(fKi, l2s(Iji("H00O", "when calling unObfuscate in NpcHandler, line 47"), "when calling fromRawCode in NpcHandler, line 47"), "when calling add in NpcHandler, line 47")
    set pA = fKi
    call UOS($00000001, "when calling getGroup in NpcHandler, line 48")
    set eA = pIw
    set RKi = XQt("when calling new_LinkedList in NpcHandler, line 50")
    call vwt(RKi, l2s(Iji("H013", "when calling unObfuscate in NpcHandler, line 50"), "when calling fromRawCode in NpcHandler, line 50"), "when calling add in NpcHandler, line 50")
    set TKi = RKi
    call vwt(TKi, l2s(Iji("H01C", "when calling unObfuscate in NpcHandler, line 50"), "when calling fromRawCode in NpcHandler, line 50"), "when calling add in NpcHandler, line 50")
    set YKi = TKi
    call vwt(YKi, l2s(Iji("H01D", "when calling unObfuscate in NpcHandler, line 50"), "when calling fromRawCode in NpcHandler, line 50"), "when calling add in NpcHandler, line 50")
    set GKi = YKi
    call vwt(GKi, l2s(Iji("H012", "when calling unObfuscate in NpcHandler, line 50"), "when calling fromRawCode in NpcHandler, line 50"), "when calling add in NpcHandler, line 50")
    set gKi = GKi
    call vwt(gKi, l2s(Iji("H01E", "when calling unObfuscate in NpcHandler, line 50"), "when calling fromRawCode in NpcHandler, line 50"), "when calling add in NpcHandler, line 50")
    set hKi = gKi
    call vwt(hKi, l2s(Iji("H015", "when calling unObfuscate in NpcHandler, line 50"), "when calling fromRawCode in NpcHandler, line 50"), "when calling add in NpcHandler, line 50")
    set FKi = hKi
    call vwt(FKi, l2s(Iji("H01A", "when calling unObfuscate in NpcHandler, line 50"), "when calling fromRawCode in NpcHandler, line 50"), "when calling add in NpcHandler, line 50")
    set kKi = FKi
    call vwt(kKi, l2s(Iji("H01B", "when calling unObfuscate in NpcHandler, line 50"), "when calling fromRawCode in NpcHandler, line 50"), "when calling add in NpcHandler, line 50")
    set jKi = kKi
    call vwt(jKi, l2s(Iji("H016", "when calling unObfuscate in NpcHandler, line 50"), "when calling fromRawCode in NpcHandler, line 50"), "when calling add in NpcHandler, line 50")
    set xKi = jKi
    call vwt(xKi, l2s(Iji("H019", "when calling unObfuscate in NpcHandler, line 50"), "when calling fromRawCode in NpcHandler, line 50"), "when calling add in NpcHandler, line 50")
    set vKi = xKi
    call vwt(vKi, l2s(Iji("H018", "when calling unObfuscate in NpcHandler, line 50"), "when calling fromRawCode in NpcHandler, line 50"), "when calling add in NpcHandler, line 50")
    set mKi = vKi
    call vwt(mKi, l2s(Iji("H010", "when calling unObfuscate in NpcHandler, line 50"), "when calling fromRawCode in NpcHandler, line 50"), "when calling add in NpcHandler, line 50")
    set QKi = mKi
    call vwt(QKi, l2s(Iji("H011", "when calling unObfuscate in NpcHandler, line 50"), "when calling fromRawCode in NpcHandler, line 50"), "when calling add in NpcHandler, line 50")
    set WKi = QKi
    call vwt(WKi, l2s(Iji("H014", "when calling unObfuscate in NpcHandler, line 50"), "when calling fromRawCode in NpcHandler, line 50"), "when calling add in NpcHandler, line 50")
    set EKi = WKi
    call vwt(EKi, l2s(Iji("H01F", "when calling unObfuscate in NpcHandler, line 50"), "when calling fromRawCode in NpcHandler, line 50"), "when calling add in NpcHandler, line 50")
    set ZKi = EKi
    call vwt(ZKi, l2s(Iji("H017", "when calling unObfuscate in NpcHandler, line 50"), "when calling fromRawCode in NpcHandler, line 50"), "when calling add in NpcHandler, line 50")
    set qA = ZKi
    set UKi = XQt("when calling new_LinkedList in NpcHandler, line 51")
    call vwt(UKi, l2s(Iji("H023", "when calling unObfuscate in NpcHandler, line 51"), "when calling fromRawCode in NpcHandler, line 51"), "when calling add in NpcHandler, line 51")
    set IKi = UKi
    call vwt(IKi, l2s(Iji("H02K", "when calling unObfuscate in NpcHandler, line 51"), "when calling fromRawCode in NpcHandler, line 51"), "when calling add in NpcHandler, line 51")
    set PKi = IKi
    call vwt(PKi, l2s(Iji("H02H", "when calling unObfuscate in NpcHandler, line 51"), "when calling fromRawCode in NpcHandler, line 51"), "when calling add in NpcHandler, line 51")
    set AKi = PKi
    call vwt(AKi, l2s(Iji("H02M", "when calling unObfuscate in NpcHandler, line 51"), "when calling fromRawCode in NpcHandler, line 51"), "when calling add in NpcHandler, line 51")
    set DKi = AKi
    call vwt(DKi, l2s(Iji("H02Q", "when calling unObfuscate in NpcHandler, line 51"), "when calling fromRawCode in NpcHandler, line 51"), "when calling add in NpcHandler, line 51")
    set HKi = DKi
    call vwt(HKi, l2s(Iji("H02L", "when calling unObfuscate in NpcHandler, line 51"), "when calling fromRawCode in NpcHandler, line 51"), "when calling add in NpcHandler, line 51")
    set JKi = HKi
    call vwt(JKi, l2s(Iji("H02C", "when calling unObfuscate in NpcHandler, line 51"), "when calling fromRawCode in NpcHandler, line 51"), "when calling add in NpcHandler, line 51")
    set KKi = JKi
    call vwt(KKi, l2s(Iji("H02O", "when calling unObfuscate in NpcHandler, line 51"), "when calling fromRawCode in NpcHandler, line 51"), "when calling add in NpcHandler, line 51")
    set LKi = KKi
    call vwt(LKi, l2s(Iji("H02F", "when calling unObfuscate in NpcHandler, line 51"), "when calling fromRawCode in NpcHandler, line 51"), "when calling add in NpcHandler, line 51")
    set XKi = LKi
    call vwt(XKi, l2s(Iji("H02N", "when calling unObfuscate in NpcHandler, line 51"), "when calling fromRawCode in NpcHandler, line 51"), "when calling add in NpcHandler, line 51")
    set CKi = XKi
    call vwt(CKi, l2s(Iji("H02P", "when calling unObfuscate in NpcHandler, line 51"), "when calling fromRawCode in NpcHandler, line 51"), "when calling add in NpcHandler, line 51")
    set VKi = CKi
    call vwt(VKi, l2s(Iji("H02B", "when calling unObfuscate in NpcHandler, line 51"), "when calling fromRawCode in NpcHandler, line 51"), "when calling add in NpcHandler, line 51")
    set BKi = VKi
    call vwt(BKi, l2s(Iji("H02R", "when calling unObfuscate in NpcHandler, line 51"), "when calling fromRawCode in NpcHandler, line 51"), "when calling add in NpcHandler, line 51")
    set NKi = BKi
    call vwt(NKi, l2s(Iji("H02E", "when calling unObfuscate in NpcHandler, line 51"), "when calling fromRawCode in NpcHandler, line 51"), "when calling add in NpcHandler, line 51")
    set MKi = NKi
    call vwt(MKi, l2s(Iji("H02S", "when calling unObfuscate in NpcHandler, line 51"), "when calling fromRawCode in NpcHandler, line 51"), "when calling add in NpcHandler, line 51")
    set wLi = MKi
    call vwt(wLi, l2s(Iji("H024", "when calling unObfuscate in NpcHandler, line 51"), "when calling fromRawCode in NpcHandler, line 51"), "when calling add in NpcHandler, line 51")
    set uLi = wLi
    call vwt(uLi, l2s(Iji("H02U", "when calling unObfuscate in NpcHandler, line 51"), "when calling fromRawCode in NpcHandler, line 51"), "when calling add in NpcHandler, line 51")
    set rLi = uLi
    call vwt(rLi, l2s(Iji("H02T", "when calling unObfuscate in NpcHandler, line 51"), "when calling fromRawCode in NpcHandler, line 51"), "when calling add in NpcHandler, line 51")
    set aA = rLi
    set nA = jts("when calling new_HashMap in NpcHandler, line 52")
    set sLi = XQt("when calling new_LinkedList in NpcHandler, line 54")
    call vwt(sLi, l2s(Iji("H004", "when calling unObfuscate in NpcHandler, line 54"), "when calling fromRawCode in NpcHandler, line 54"), "when calling add in NpcHandler, line 54")
    set tLi = sLi
    call vwt(tLi, l2s(Iji("H009", "when calling unObfuscate in NpcHandler, line 54"), "when calling fromRawCode in NpcHandler, line 54"), "when calling add in NpcHandler, line 54")
    set iLi = tLi
    call vwt(iLi, l2s(Iji("H007", "when calling unObfuscate in NpcHandler, line 54"), "when calling fromRawCode in NpcHandler, line 54"), "when calling add in NpcHandler, line 54")
    set SLi = iLi
    call vwt(SLi, l2s(Iji("H00H", "when calling unObfuscate in NpcHandler, line 54"), "when calling fromRawCode in NpcHandler, line 54"), "when calling add in NpcHandler, line 54")
    set cLi = SLi
    call vwt(cLi, l2s(Iji("H023", "when calling unObfuscate in NpcHandler, line 54"), "when calling fromRawCode in NpcHandler, line 54"), "when calling add in NpcHandler, line 54")
    set oLi = cLi
    call vwt(oLi, l2s(Iji("H00K", "when calling unObfuscate in NpcHandler, line 54"), "when calling fromRawCode in NpcHandler, line 54"), "when calling add in NpcHandler, line 54")
    set OLi = oLi
    call vwt(OLi, l2s(Iji("H00B", "when calling unObfuscate in NpcHandler, line 54"), "when calling fromRawCode in NpcHandler, line 54"), "when calling add in NpcHandler, line 54")
    set lLi = OLi
    call vwt(lLi, l2s(Iji("H011", "when calling unObfuscate in NpcHandler, line 54"), "when calling fromRawCode in NpcHandler, line 54"), "when calling add in NpcHandler, line 54")
    set bLi = lLi
    call vwt(bLi, l2s(Iji("H02K", "when calling unObfuscate in NpcHandler, line 54"), "when calling fromRawCode in NpcHandler, line 54"), "when calling add in NpcHandler, line 54")
    set yLi = bLi
    call vwt(yLi, l2s(Iji("H02H", "when calling unObfuscate in NpcHandler, line 54"), "when calling fromRawCode in NpcHandler, line 54"), "when calling add in NpcHandler, line 54")
    set pLi = yLi
    call vwt(pLi, l2s(Iji("H00F", "when calling unObfuscate in NpcHandler, line 54"), "when calling fromRawCode in NpcHandler, line 54"), "when calling add in NpcHandler, line 54")
    set eLi = pLi
    call vwt(eLi, l2s(Iji("H00E", "when calling unObfuscate in NpcHandler, line 54"), "when calling fromRawCode in NpcHandler, line 54"), "when calling add in NpcHandler, line 54")
    set qLi = eLi
    call vwt(qLi, l2s(Iji("H013", "when calling unObfuscate in NpcHandler, line 54"), "when calling fromRawCode in NpcHandler, line 54"), "when calling add in NpcHandler, line 54")
    set aLi = qLi
    call vwt(aLi, l2s(Iji("H02M", "when calling unObfuscate in NpcHandler, line 54"), "when calling fromRawCode in NpcHandler, line 54"), "when calling add in NpcHandler, line 54")
    set nLi = aLi
    call vwt(nLi, l2s(Iji("H01C", "when calling unObfuscate in NpcHandler, line 54"), "when calling fromRawCode in NpcHandler, line 54"), "when calling add in NpcHandler, line 54")
    set dLi = nLi
    call vwt(dLi, l2s(Iji("H006", "when calling unObfuscate in NpcHandler, line 54"), "when calling fromRawCode in NpcHandler, line 54"), "when calling add in NpcHandler, line 54")
    set fLi = dLi
    call vwt(fLi, l2s(Iji("H02Q", "when calling unObfuscate in NpcHandler, line 54"), "when calling fromRawCode in NpcHandler, line 54"), "when calling add in NpcHandler, line 54")
    set RLi = fLi
    call vwt(RLi, l2s(Iji("H02L", "when calling unObfuscate in NpcHandler, line 54"), "when calling fromRawCode in NpcHandler, line 54"), "when calling add in NpcHandler, line 54")
    set TLi = RLi
    call vwt(TLi, l2s(Iji("H02C", "when calling unObfuscate in NpcHandler, line 54"), "when calling fromRawCode in NpcHandler, line 54"), "when calling add in NpcHandler, line 54")
    set YLi = TLi
    call vwt(YLi, l2s(Iji("H01D", "when calling unObfuscate in NpcHandler, line 54"), "when calling fromRawCode in NpcHandler, line 54"), "when calling add in NpcHandler, line 54")
    set GLi = YLi
    call vwt(GLi, l2s(Iji("H00G", "when calling unObfuscate in NpcHandler, line 54"), "when calling fromRawCode in NpcHandler, line 54"), "when calling add in NpcHandler, line 54")
    set gLi = GLi
    call vwt(gLi, l2s(Iji("H012", "when calling unObfuscate in NpcHandler, line 54"), "when calling fromRawCode in NpcHandler, line 54"), "when calling add in NpcHandler, line 54")
    set hLi = gLi
    call vwt(hLi, l2s(Iji("H005", "when calling unObfuscate in NpcHandler, line 54"), "when calling fromRawCode in NpcHandler, line 54"), "when calling add in NpcHandler, line 54")
    set FLi = hLi
    call vwt(FLi, l2s(Iji("H01E", "when calling unObfuscate in NpcHandler, line 54"), "when calling fromRawCode in NpcHandler, line 54"), "when calling add in NpcHandler, line 54")
    set kLi = FLi
    call vwt(kLi, l2s(Iji("H00J", "when calling unObfuscate in NpcHandler, line 54"), "when calling fromRawCode in NpcHandler, line 54"), "when calling add in NpcHandler, line 54")
    set jLi = kLi
    call vwt(jLi, l2s(Iji("H00I", "when calling unObfuscate in NpcHandler, line 54"), "when calling fromRawCode in NpcHandler, line 54"), "when calling add in NpcHandler, line 54")
    set xLi = jLi
    call vwt(xLi, l2s(Iji("H015", "when calling unObfuscate in NpcHandler, line 54"), "when calling fromRawCode in NpcHandler, line 54"), "when calling add in NpcHandler, line 54")
    set vLi = xLi
    call vwt(vLi, l2s(Iji("H02O", "when calling unObfuscate in NpcHandler, line 54"), "when calling fromRawCode in NpcHandler, line 54"), "when calling add in NpcHandler, line 54")
    set mLi = vLi
    call vwt(mLi, l2s(Iji("H01A", "when calling unObfuscate in NpcHandler, line 54"), "when calling fromRawCode in NpcHandler, line 54"), "when calling add in NpcHandler, line 54")
    set QLi = mLi
    call vwt(QLi, l2s(Iji("H02F", "when calling unObfuscate in NpcHandler, line 54"), "when calling fromRawCode in NpcHandler, line 54"), "when calling add in NpcHandler, line 54")
    set WLi = QLi
    call vwt(WLi, l2s(Iji("H001", "when calling unObfuscate in NpcHandler, line 54"), "when calling fromRawCode in NpcHandler, line 54"), "when calling add in NpcHandler, line 54")
    set ELi = WLi
    call vwt(ELi, l2s(Iji("H002", "when calling unObfuscate in NpcHandler, line 54"), "when calling fromRawCode in NpcHandler, line 54"), "when calling add in NpcHandler, line 54")
    set ZLi = ELi
    call vwt(ZLi, l2s(Iji("H02N", "when calling unObfuscate in NpcHandler, line 54"), "when calling fromRawCode in NpcHandler, line 54"), "when calling add in NpcHandler, line 54")
    set ULi = ZLi
    call vwt(ULi, l2s(Iji("H01B", "when calling unObfuscate in NpcHandler, line 54"), "when calling fromRawCode in NpcHandler, line 54"), "when calling add in NpcHandler, line 54")
    set ILi = ULi
    call vwt(ILi, l2s(Iji("H02P", "when calling unObfuscate in NpcHandler, line 54"), "when calling fromRawCode in NpcHandler, line 54"), "when calling add in NpcHandler, line 54")
    set PLi = ILi
    call vwt(PLi, l2s(Iji("H02B", "when calling unObfuscate in NpcHandler, line 54"), "when calling fromRawCode in NpcHandler, line 54"), "when calling add in NpcHandler, line 54")
    set ALi = PLi
    call vwt(ALi, l2s(Iji("H00L", "when calling unObfuscate in NpcHandler, line 54"), "when calling fromRawCode in NpcHandler, line 54"), "when calling add in NpcHandler, line 54")
    set DLi = ALi
    call vwt(DLi, l2s(Iji("H02R", "when calling unObfuscate in NpcHandler, line 54"), "when calling fromRawCode in NpcHandler, line 54"), "when calling add in NpcHandler, line 54")
    set HLi = DLi
    call vwt(HLi, l2s(Iji("H02U", "when calling unObfuscate in NpcHandler, line 54"), "when calling fromRawCode in NpcHandler, line 54"), "when calling add in NpcHandler, line 54")
    set JLi = HLi
    call vwt(JLi, l2s(Iji("H02T", "when calling unObfuscate in NpcHandler, line 54"), "when calling fromRawCode in NpcHandler, line 54"), "when calling add in NpcHandler, line 54")
    set KLi = JLi
    call vwt(KLi, l2s(Iji("H016", "when calling unObfuscate in NpcHandler, line 54"), "when calling fromRawCode in NpcHandler, line 54"), "when calling add in NpcHandler, line 54")
    set LLi = KLi
    call vwt(LLi, l2s(Iji("H019", "when calling unObfuscate in NpcHandler, line 54"), "when calling fromRawCode in NpcHandler, line 54"), "when calling add in NpcHandler, line 54")
    set XLi = LLi
    call vwt(XLi, l2s(Iji("H018", "when calling unObfuscate in NpcHandler, line 54"), "when calling fromRawCode in NpcHandler, line 54"), "when calling add in NpcHandler, line 54")
    set CLi = XLi
    call vwt(CLi, l2s(Iji("H00M", "when calling unObfuscate in NpcHandler, line 54"), "when calling fromRawCode in NpcHandler, line 54"), "when calling add in NpcHandler, line 54")
    set VLi = CLi
    call vwt(VLi, l2s(Iji("H02E", "when calling unObfuscate in NpcHandler, line 54"), "when calling fromRawCode in NpcHandler, line 54"), "when calling add in NpcHandler, line 54")
    set BLi = VLi
    call vwt(BLi, l2s(Iji("H010", "when calling unObfuscate in NpcHandler, line 54"), "when calling fromRawCode in NpcHandler, line 54"), "when calling add in NpcHandler, line 54")
    set NLi = BLi
    call vwt(NLi, l2s(Iji("H02S", "when calling unObfuscate in NpcHandler, line 54"), "when calling fromRawCode in NpcHandler, line 54"), "when calling add in NpcHandler, line 54")
    set MLi = NLi
    call vwt(MLi, l2s(Iji("H003", "when calling unObfuscate in NpcHandler, line 54"), "when calling fromRawCode in NpcHandler, line 54"), "when calling add in NpcHandler, line 54")
    set wXi = MLi
    call vwt(wXi, l2s(Iji("H00A", "when calling unObfuscate in NpcHandler, line 54"), "when calling fromRawCode in NpcHandler, line 54"), "when calling add in NpcHandler, line 54")
    set uXi = wXi
    call vwt(uXi, l2s(Iji("H008", "when calling unObfuscate in NpcHandler, line 54"), "when calling fromRawCode in NpcHandler, line 54"), "when calling add in NpcHandler, line 54")
    set rXi = uXi
    call vwt(rXi, l2s(Iji("H014", "when calling unObfuscate in NpcHandler, line 54"), "when calling fromRawCode in NpcHandler, line 54"), "when calling add in NpcHandler, line 54")
    set sXi = rXi
    call vwt(sXi, l2s(Iji("H01Y", "when calling unObfuscate in NpcHandler, line 54"), "when calling fromRawCode in NpcHandler, line 54"), "when calling add in NpcHandler, line 54")
    set tXi = sXi
    call vwt(tXi, l2s(Iji("H00N", "when calling unObfuscate in NpcHandler, line 54"), "when calling fromRawCode in NpcHandler, line 54"), "when calling add in NpcHandler, line 54")
    set iXi = tXi
    call vwt(iXi, l2s(Iji("H01Z", "when calling unObfuscate in NpcHandler, line 54"), "when calling fromRawCode in NpcHandler, line 54"), "when calling add in NpcHandler, line 54")
    set SXi = iXi
    call vwt(SXi, l2s(Iji("H00O", "when calling unObfuscate in NpcHandler, line 54"), "when calling fromRawCode in NpcHandler, line 54"), "when calling add in NpcHandler, line 54")
    set cXi = SXi
    call vwt(cXi, l2s(Iji("H024", "when calling unObfuscate in NpcHandler, line 54"), "when calling fromRawCode in NpcHandler, line 54"), "when calling add in NpcHandler, line 54")
    set oXi = cXi
    call vwt(oXi, l2s(Iji("H00O", "when calling unObfuscate in NpcHandler, line 54"), "when calling fromRawCode in NpcHandler, line 54"), "when calling add in NpcHandler, line 54")
    set OXi = oXi
    call vwt(OXi, l2s(Iji("H01F", "when calling unObfuscate in NpcHandler, line 54"), "when calling fromRawCode in NpcHandler, line 54"), "when calling add in NpcHandler, line 54")
    set lXi = OXi
    call vwt(lXi, l2s(Iji("H017", "when calling unObfuscate in NpcHandler, line 54"), "when calling fromRawCode in NpcHandler, line 54"), "when calling add in NpcHandler, line 54")
    set dA = lXi
    set bXi = CreateTrigger()
    call dUs(bXi, Condition(rWw))
    set yXi = bXi
    call B2S(yXi, sWw)
    set fA = yXi
    set pXi = CreateTrigger()
    call B2S(pXi, tWw)
    set RA = pXi
    set eXi = CreateTrigger()
    call B2S(eXi, iWw)
    set TA = eXi
    set Ew = Iji("EN3P29DXeruxo6RUW5ZvYFbwgQ7hfAyBztSn4sKCqHpLOajkTVdG8JmcM", "when calling unObfuscate in NpcHandler, line 752")
    set Zw = Iji("vHGKFaXA5V72NbWruZJLxYnSR3k8Owmhepszg6oTyEDdUtqMQP4jcf9CB", "when calling unObfuscate in NpcHandler, line 753")
    set Uw = Iji("9fb%(wgQtS+_n4s[KCqH#pLAyBz<ruxo6R-mcM>EN3PU.D7hW5]ZvYF,8J$OX/eajkTV)d*G2", "when calling unObfuscate in NpcHandler, line 755")
    set Iw = Iji("vHmh/eps#(zFa6o&]TWruZJLxYnSR_=3k>8Ow)A5V>7yEDdU.tqMQP4jcf9,C$+BXG[*K2Nbg", "when calling unObfuscate in NpcHandler, line 756")
    set Pw = Iji("9fb(wgQtS+_n4s[KCqH#pLAyBz<ruxo6R-mcM>EN3PU.D7hW5]ZvYF,8JOXeajkTV)d*G2", "when calling unObfuscate in NpcHandler, line 759")
    set Aw = Iji("]Z4sp53PU.ed*D7hW6R-mcM>ENzn9fbF,)(wgy[KS+_uxo8JOXG2qH#vYaCQtjkTVBLA<r", "when calling unObfuscate in NpcHandler, line 760")
    set Dw = Iji("Fs3u.hSZ6w7>LQWfz8aX<gG,trRcNkBeU2pC4Po)qOAxvb]D9dMVET(Yy+5#mHnJj*K[", "when calling unObfuscate in NpcHandler, line 763")
    set Hw = Iji("p>wn8sv<mRHQeX7FrxqC[2K9MWdoUgf5yVGLhAZ+zJu3B#)SPbjD(OT.*c64kENY]t,a", "when calling unObfuscate in NpcHandler, line 764")
    set Jw = Iji("t[nFb&G.Q*co6Sar2p5Hw8JzqhsREY!VLx9(kP3NXAT>v#ZOWgMd4U)jKBD+m]u<eCy7_f?", "when calling unObfuscate in NpcHandler, line 767")
    set Kw = Iji("O)_CSDLxWr?6bmBvgUt5dHFQpqY[XokG9P4*yj.T<ZKe>87ERw3Mfza!+2sVc#Anu(hJN]", "when calling unObfuscate in NpcHandler, line 768")
    set Lw = Iji("t[nFb&G.)jKp5Hw?8,JzqCy7_fQ*co6Sar2T>v#ZOWghsEY!VLx9(kP3NXABD+m]uR<eMd4U", "when calling unObfuscate in NpcHandler, line 771")
    set Xw = Iji("ObmBvgUt5d87ERw3Mfza!+2sVc#AnqY[XokG9P4*yu(hJNHFQpj.T,<ZKe>)_CSDLxWr?6]", "when calling unObfuscate in NpcHandler, line 772")
    set Cw = Iji("!gWY2tqxeA,Q?aT8&N9Fd6kOm]*)XscB+fZRHnEy[wM5GP#p(z<SLbCKjU_u73hDVr>vo4J", "when calling unObfuscate in NpcHandler, line 775")
    set Vw = Iji("AZf!N[8qLhzUgCwntGW9SyDb_Pd3Qc?kM4KjvVmeJu*ap65+Y)F,BHROX<#(r]>Exs7To2", "when calling unObfuscate in NpcHandler, line 776")
    set cA = 0
    set iA[cA] = Ew
    set SA[cA] = Zw
    set cA = cA + 1
    set iA[cA] = Uw
    set SA[cA] = Iw
    set cA = cA + 1
    set iA[cA] = Pw
    set SA[cA] = Aw
    set cA = cA + 1
    set iA[cA] = Dw
    set SA[cA] = Hw
    set cA = cA + 1
    set iA[cA] = Jw
    set SA[cA] = Kw
    set cA = cA + 1
    set iA[cA] = Lw
    set SA[cA] = Xw
    set cA = cA + 1
    set iA[cA] = Cw
    set SA[cA] = Vw
    set qXi = Pfu("when calling alloc_CallbackSingle_doAfter_NpcHandler in NpcHandler, line 802")
    call RUs(qXi)
    call Ybr(1., qXi, "when calling doAfter in NpcHandler, line 802")
    set aXi = vpS("when calling alloc_CallbackSingle_doAfter_NpcHandler in NpcHandler, line 808")
    call RUs(aXi)
    call Ybr(.1, aXi, "when calling doAfter in NpcHandler, line 808")
    set nXi = cOS("when calling alloc_CallbackSingle_doAfter_NpcHandler in NpcHandler, line 812")
    call RUs(nXi)
    call Ybr(3., nXi, "when calling doAfter in NpcHandler, line 812")
    set dXi = PRu("when calling alloc_CallbackSingle_doAfter_NpcHandler in NpcHandler, line 820")
    call RUs(dXi)
    call Ybr(2.5, dXi, "when calling doAfter in NpcHandler, line 820")
    set fXi = qns("when calling alloc_CallbackPeriodic_doPeriodically_NpcHandler in NpcHandler, line 832")
    call kVu(fXi)
    call wcs(15., fXi, "when calling doPeriodically in NpcHandler, line 832")
    set ASw = ASw - 1
    set bXi = null
    set yXi = null
    set pXi = null
    set eXi = null
    return true
endfunction
function CZu takes nothing returns boolean
    set ASw = 0
    return RXi("via function reference NpcHandler, line 1")
endfunction
function N1u takes string V1u returns boolean
    local boolean B1u
    set DSw[ASw] = V1u
    set ASw = ASw + 1
    set B1u = Jyr(HD, r5S(GetTriggerUnit()), "when calling has in Quests_PartyShare, line 319")
    set ASw = ASw - 1
    return B1u
endfunction
function CaS takes nothing returns boolean
    set ASw = 0
    return N1u("via function reference Quests_PartyShare, line 324")
endfunction
function iYt takes unit rYt, real sYt, real tYt returns nothing
    call SetUnitPosition(rYt, sYt, tYt)
endfunction
function qIu takes string eIu returns nothing
    set DSw[ASw] = eIu
    set ASw = ASw + 1
    if r5S(GetTriggerUnit()) == l2s(Iji("hpal", "when calling unObfuscate in SecurityUtils, line 47"), "when calling fromRawCode in SecurityUtils, line 47") then
        call iYt(GetTriggerUnit(), 3351., - 13585.)
    endif
    set ASw = ASw - 1
endfunction
function Car takes nothing returns nothing
    set ASw = 0
    call qIu("via function reference SecurityUtils, line 46")
endfunction
function aVs takes nothing returns boolean
    return IsPlayerInForce(GetTriggerPlayer(), Rc[bj_forLoopAIndex])
endfunction
function pgt takes nothing returns boolean
    return CountUnitsInGroup(fc[bj_forLoopAIndex]) == 0
endfunction
function Cbs takes nothing returns nothing
    call SetUnitPositionLoc(GetEnumUnit(), yr[1 + GetPlayerId(GetTriggerPlayer())])
    call PauseUnit(GetEnumUnit(), true)
    call GroupAddUnit(mo, GetEnumUnit())
    set bj_forLoopAIndex = 1
    set bj_forLoopAIndexEnd = ko
    loop
        exitwhen bj_forLoopAIndex > bj_forLoopAIndexEnd
        if aVs() then
            call GroupRemoveUnit(fc[bj_forLoopAIndex], GetEnumUnit())
            call ForceRemovePlayer(Rc[bj_forLoopAIndex], GetOwningPlayer(GetEnumUnit()))
            if pgt() then
    set lr = bj_forLoopAIndex
    call TriggerExecute(LR)
            endif
        endif
        set bj_forLoopAIndex = bj_forLoopAIndex + 1
    endloop
endfunction
function LLt takes real ALt, real DLt, real HLt, string JLt returns group
    local group KLt
    set DSw[ASw] = JLt
    set ASw = ASw + 1
    call UOS($00000001, "when calling getGroup in RegionVectorLocationUtils, line 80")
    set KLt = pIw
    call GroupEnumUnitsInRange(KLt, ALt, DLt, HLt, null)
    set ASw = ASw - 1
    set mIw = KLt
    set KLt = null
    return mIw
endfunction
function MSr takes unit CSr, widget VSr, real BSr, attacktype NSr returns nothing
    call UnitDamageTarget(CSr, VSr, BSr, false, false, NSr, DAMAGE_TYPE_UNIVERSAL, WEAPON_TYPE_WHOKNOWS)
endfunction
function fRi takes unit dRi returns boolean
    return BlzIsUnitInvulnerable(dRi)
endfunction
function iBw takes player sBw, player tBw returns boolean
    return IsPlayerEnemy(sBw, tBw)
endfunction
function n2u takes unit a2u returns boolean
    return IsUnitPaused(a2u)
endfunction
function jei takes string yei returns nothing
    local unit pei
    local player eei
    local integer qei
    local integer aei
    local real nei
    local real dei
    local real fei
    local group Rei
    local group Tei
    local unit Yei
    local integer Gei
    local integer gei
    local integer hei
    local group Fei
    local unit kei
    set DSw[ASw] = yei
    set ASw = ASw + 1
    set pei = GetTriggerUnit()
    set eei = eDs(pei)
    set qei = GetSpellAbilityId()
    set aei = GetUnitAbilityLevel(pei, qei)
    if qei == Pk then
        set fei = ED * aei
    else
        if qei == Ik then
            set dei = ZD * aei
        else
            set dei = UD * aei
        endif
        set fei = dei
    endif
    set nei = fei
    set Rei = LLt(ANw(pei), XSw, WD, "when calling getUnitsInRange in Prophetess_Sanctus_HealingWave, line 29")
    set Tei = XbS(Rei)
    loop
        exitwhen not hJw(Tei)
        set Yei = tPr(Tei)
        if (not iBw(eDs(Yei), eei))or(not yXu(Yei)) then
            call Z7t(Rei, Yei)
        endif
    endloop
    call lxs(Tei)
    if qei == Pk then
        set hei = ID
    else
        if qei == Ik then
            set gei = PD
        else
            set gei = AD
        endif
        set hei = gei
    endif
    set Gei = hei
    set Fei = XbS(Rei)
    loop
        exitwhen not hJw(Fei)
        set kei = tPr(Fei)
        set Gei = Gei - 1
        if (not n2u(kei))and(not fRi(kei)) and(not gSr(kei, l2s(Iji("Avul", "when calling unObfuscate in Prophetess_Sanctus_HealingWave, line 38"), "when calling fromRawCode in Prophetess_Sanctus_HealingWave, line 38"))) and(not gSr(kei, l2s(Iji("AImx", "when calling unObfuscate in Prophetess_Sanctus_HealingWave, line 38"), "when calling fromRawCode in Prophetess_Sanctus_HealingWave, line 38"))) then
            call I7S(AddSpecialEffectTarget("Abilities/Spells/Orc/HealingWave/HealingWaveTarget.mdl", kei, "origin"))
            call MSr(pei, kei, nei, ATTACK_TYPE_CHAOS)
            set nei = nei * (1. - DD)
        endif
        if Gei == 0 then
            exitwhen true
        endif
    endloop
    call lxs(Fei)
    call Sju(Rei, "when calling release in Prophetess_Sanctus_HealingWave, line 44")
    set ASw = ASw - 1
    set pei = null
    set eei = null
    set Rei = null
    set Tei = null
    set Yei = null
    set Fei = null
    set kei = null
endfunction
function Cht takes nothing returns nothing
    set ASw = 0
    call jei("via function reference Prophetess_Sanctus_HealingWave, line 48")
endfunction
function Cii takes nothing returns nothing
    set Bc[1 + GetPlayerId(GetTriggerPlayer())] = Bc[1 + GetPlayerId(GetTriggerPlayer())] + 1
    set bS = lVs(GetTriggerPlayer(), Condition(Vyw))
    call ForGroupBJ(bS, Byw)
    call DestroyGroup(bS)
endfunction
function Bdu takes unit Cdu, string Vdu returns nothing
    call QueueUnitAnimation(Cdu, Vdu)
endfunction
function Uvs takes string Evs returns integer
    local integer Zvs
    set DSw[ASw] = Evs
    set ASw = ASw + 1
    if NX == 0 then
        if MX < 32768 then
            set MX = MX + 1
            set Zvs = MX
            set wC[Zvs] = 1017
        else
            call tNr("Out of memory: Could not create CallbackSingle_doAfter_addAction_RuneMaster_Metamorphs.", "when calling error in RuneMaster_Metamorphs, line 69")
            set Zvs = 0
        endif
    else
        set NX = NX - 1
        set Zvs = BX[NX]
        set wC[Zvs] = 1017
    endif
    set ASw = ASw - 1
    return Zvs
endfunction
function m6w takes string x6w returns integer
    local integer v6w
    set DSw[ASw] = x6w
    set ASw = ASw + 1
    if NX == 0 then
        if MX < 32768 then
            set MX = MX + 1
            set v6w = MX
            set wC[v6w] = 932
        else
            call tNr("Out of memory: Could not create CallbackSingle_doAfter_PlayerCommands.", "when calling error in PlayerCommands, line 256")
            set v6w = 0
        endif
    else
        set NX = NX - 1
        set v6w = BX[NX]
        set wC[v6w] = 932
    endif
    set ASw = ASw - 1
    return v6w
endfunction
function Z6r takes integer v6r, real m6r, string Q6r returns nothing
    local integer W6r
    local real E6r
    set DSw[ASw] = Q6r
    set ASw = ASw + 1
    if not GpS(lD, v6r, "when calling has in PlayerCommands, line 253") then
        call vwt(lD, v6r, "when calling add in PlayerCommands, line 254")
    endif
    set E6r = m6r
    set W6r = m6w("when calling alloc_CallbackSingle_doAfter_PlayerCommands in PlayerCommands, line 256")
    call RUs(W6r)
    set crw[W6r] = v6r
    call Ybr(E6r, W6r, "when calling doAfter in PlayerCommands, line 256")
    set ASw = ASw - 1
endfunction
function iFi takes string sFi returns integer
    local integer tFi
    set DSw[ASw] = sFi
    set ASw = ASw + 1
    if NX == 0 then
        if MX < 32768 then
            set MX = MX + 1
            set tFi = MX
            set wC[tFi] = 1015
        else
            call tNr("Out of memory: Could not create CallbackSingle_doAfter_addAction_RuneMaster_Metamorphs.", "when calling error in RuneMaster_Metamorphs, line 56")
            set tFi = 0
        endif
    else
        set NX = NX - 1
        set tFi = BX[NX]
        set wC[tFi] = 1015
    endif
    set ASw = ASw - 1
    return tFi
endfunction
function p0i takes string b0i returns integer
    local integer y0i
    set DSw[ASw] = b0i
    set ASw = ASw + 1
    if NX == 0 then
        if MX < 32768 then
            set MX = MX + 1
            set y0i = MX
            set wC[y0i] = 1016
        else
            call tNr("Out of memory: Could not create CallbackSingle_doAfter_addAction_RuneMaster_Metamorphs.", "when calling error in RuneMaster_Metamorphs, line 62")
            set y0i = 0
        endif
    else
        set NX = NX - 1
        set y0i = BX[NX]
        set wC[y0i] = 1016
    endif
    set ASw = ASw - 1
    return y0i
endfunction
function uiu takes unit Mtu, integer wiu returns nothing
    call SetUnitAnimationByIndex(Mtu, wiu)
endfunction
function NGr takes string DGr returns nothing
    local unit HGr
    local integer JGr
    local integer KGr
    local integer LGr
    local integer XGr
    local integer CGr
    local integer VGr
    local integer BGr
    set DSw[ASw] = DGr
    set ASw = ASw + 1
    set HGr = GetTriggerUnit()
    set JGr = hgr(eDs(HGr))
    set KGr = GetSpellAbilityId()
    set LGr = r5S(HGr)
    if KGr == 1093678935 or KGr == 1093678936 or KGr == 1093677396 or KGr == 1093677397 or KGr == 1093677653 or KGr == 1093677652 then
        call Z6r(JGr, 1., "when calling disableKillCmdTimed in RuneMaster_Metamorphs, line 49")
        set XGr = LGr
        if XGr == Rk then
            call Bdu(HGr, "spell slam")
            set CGr = iFi("when calling alloc_CallbackSingle_doAfter_addAction_RuneMaster_Metamorphs in RuneMaster_Metamorphs, line 56")
            call RUs(CGr)
            set rsw[CGr] = HGr
            call Ybr(2., CGr, "when calling doAfter in RuneMaster_Metamorphs, line 56")
        elseif XGr == Tk then
            call uiu(HGr, $00000003)
            set VGr = p0i("when calling alloc_CallbackSingle_doAfter_addAction_RuneMaster_Metamorphs in RuneMaster_Metamorphs, line 62")
            call RUs(VGr)
            set ssw[VGr] = HGr
            call Ybr(2., VGr, "when calling doAfter in RuneMaster_Metamorphs, line 62")
        elseif XGr == fk then
            call Bdu(HGr, "spell")
            set BGr = Uvs("when calling alloc_CallbackSingle_doAfter_addAction_RuneMaster_Metamorphs in RuneMaster_Metamorphs, line 69")
            call RUs(BGr)
            set tsw[BGr] = HGr
            call Ybr(2., BGr, "when calling doAfter in RuneMaster_Metamorphs, line 69")
        endif
    endif
    set ASw = ASw - 1
    set HGr = null
endfunction
function Cir takes nothing returns nothing
    set ASw = 0
    call NGr("via function reference RuneMaster_Metamorphs, line 38")
endfunction
function Cju takes nothing returns nothing
    call AddSpecialEffectTargetUnitBJ("overhead", GetEnumUnit(), "Abilities\\Spells\\Other\\TalkToMe\\TalkToMe.mdl")
    call SetUnitInvulnerable(GetEnumUnit(), true)
endfunction
function T_i takes player a_i, integer n_i, string d_i, string f_i, string R_i returns quest
    set bj_lastCreatedQuest = CreateQuest()
    call QuestSetTitle(bj_lastCreatedQuest, d_i)
    call QuestSetDescription(bj_lastCreatedQuest, f_i)
    call QuestSetIconPath(bj_lastCreatedQuest, R_i)
    call QuestSetRequired(bj_lastCreatedQuest, n_i == bj_QUESTTYPE_REQ_DISCOVERED or n_i == bj_QUESTTYPE_REQ_UNDISCOVERED)
    call QuestSetDiscovered(bj_lastCreatedQuest, n_i == bj_QUESTTYPE_REQ_DISCOVERED or n_i == bj_QUESTTYPE_OPT_DISCOVERED)
    call QuestSetCompleted(bj_lastCreatedQuest, false)
    call QuestSetEnabledBJ(false, bj_lastCreatedQuest)
    if GetLocalPlayer() == a_i then
        call QuestSetEnabledBJ(true, bj_lastCreatedQuest)
    endif
    return bj_lastCreatedQuest
endfunction
function Crr takes nothing returns nothing
    call RemoveItem(GetManipulatedItem())
    call ForceAddPlayer(wO, GetOwningPlayer(GetTriggerUnit()))
    call DisplayTextToForce(MwS(GetOwningPlayer(GetTriggerUnit())), "|cffff8c00Fisherman's Friend|r : Ready to take on bigger and better fishes I see. However, before I promote you to Legendary Fisherman, you have to prove yourself. Catch the legendary Flying Wish Fish and defeat it to prove your worth. Sounds simple? However, there's a catch. To order to catch it, you'll need true skill. The Flying Wish Fish is said to only appear to those truly worthy of facing it. It is also known to reside only in the deepest waters...you may find this task more difficult than expected.")
    call T_i(GetOwningPlayer(GetTriggerUnit()), $00000000, "Profession Advancement", "|cffff0000Fishing Profession Advancement Quest|r\n|cff00ff00Legend|r\nI'm able to advance to a Legendary Fisherman but first I need to catch the legendary Flying Wish Fish. There's no time limit but I have to entice it to come out. Hmm...only appears to the truly worthy? I bet I'll have to make lots of perfect catches...", "ReplaceableTextures\\CommandButtons\\BTNStatUp.blp")
    set Ao[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))] = bj_lastCreatedQuest
endfunction
function FSr takes string hSr returns boolean
    set DSw[ASw] = hSr
    set ASw = ASw + 1
    set Ev = jts("when calling new_HashMap in Faith_Effect, line 17")
    set Zv = jts("when calling new_HashMap in Faith_Effect, line 18")
    set Uv = 10
    set Iv = 3.
    set Pv = 300.
    set Av = 1097233512
    call TriggerAddCondition(mf, Condition(cmw))
    call TriggerAddAction(mf, omw)
    set ASw = ASw - 1
    return true
endfunction
function Csr takes nothing returns boolean
    set ASw = 0
    return FSr("via function reference Faith_Effect, line 1")
endfunction
function Ctu takes nothing returns nothing
    call SetUnitLifePercentBJ(GetEnumUnit(), 100.)
endfunction
function Cuu takes nothing returns boolean
    return GetUnitTypeId(GetDyingUnit()) == 1848651844 and IsPlayerInForce(GetOwningPlayer(GetKillingUnit()), IS[$00000002])
endfunction
function Cvt takes nothing returns nothing
    call dii("Selected Voidless stage " + fju(lK) + ".", 3., GetEnumPlayer())
endfunction
function D4s takes nothing returns boolean
    return GetUnitTypeId(GetTriggerUnit()) == 1211117874 and GetUnitTypeId(GetOrderTargetUnit()) == 1747989042 and IsPlayerInForce(GetOwningPlayer(GetTriggerUnit()), rt) == false and IsUnitInGroup(GetTriggerUnit(), kpu(300., GetUnitLoc(GetOrderTargetUnit()))) and GetHeroLevel(GetTriggerUnit()) >= 150
endfunction
function ONi takes force cNi, player oNi returns boolean
    return IsPlayerInForce(oNi, cNi)
endfunction
function Rnu takes item dnu, integer fnu returns nothing
    call SetItemCharges(dnu, fnu)
endfunction
function UQs takes unit EQs, item ZQs returns boolean
    return UnitAddItem(EQs, ZQs)
endfunction
function wiS takes integer DtS, integer HtS, real JtS, real KtS, player LtS, integer XtS, unit CtS, string VtS returns nothing
    local item BtS
    local item NtS
    local item MtS
    set DSw[ASw] = VtS
    set ASw = ASw + 1
    call vwt(Zx, DtS, "when calling add in SqueakyQuestReward, line 7")
    set NtS = CreateItem(HtS, JtS, KtS)
    call IOt(NtS, LtS, true)
    set MtS = NtS
    call Rnu(MtS, XtS)
    set BtS = MtS
    call vwt(px, Xdu(BtS), "when calling add in SqueakyQuestReward, line 9")
    call GVw(ex, Xdu(BtS), DtS, "when calling put in SqueakyQuestReward, line 10")
    call UQs(CtS, BtS)
    call eys(Zx, DtS, "when calling remove in SqueakyQuestReward, line 12")
    set ASw = ASw - 1
    set BtS = null
    set NtS = null
    set MtS = null
endfunction
function xxr takes force kxr, player jxr returns nothing
    call ForceAddPlayer(kxr, jxr)
endfunction
function Cur takes string Uur returns nothing
    local unit Iur
    local player Pur
    local integer Aur
    local real Dur
    local real Hur
    local integer Jur
    local integer Kur
    local real Lur
    local real Xur
    set DSw[ASw] = Uur
    set ASw = ASw + 1
    set Iur = GetTriggerUnit()
    set Pur = eDs(Iur)
    set Aur = hgr(Pur)
    set Lur = ANw(Iur)
    set Xur = XSw
    set Dur = Lur
    set Hur = Xur
    set Jur = 1227895108
    set Kur = 25
    if ONi(PS[$0000000B], Pur) then
        set Kur = 10
    else
        call xxr(PS[$0000000B], Pur)
    endif
    call ForceRemovePlayer(IS[$0000000B], Pur)
    call DestroyQuest(JS[1 + Aur])
    set JS[1 + Aur] = null
    set KS[1 + Aur] = 0
    call PlaySoundBJ(pe)
    call dii("|cffffcc00You have completed the Quest|r.", 5., Pur)
    call dii("|cffffcc00Squeaky|r : Ahh! Thank you so much, kind stranger! Just a moment ago, a new cart of supplies had arrived. I'm happy to say it's filled to the brim with Owlkin meat! Here's something from me to express my gratitude to you.", 15., Pur)
    call AddHeroXPSwapped(G, Iur, true)
    call wiS(Aur, Jur, Dur, Hur, Pur, Kur, Iur, "when calling addItemWithVirtualCharges in SqueakyQuestReward, line 57")
    set ASw = ASw - 1
    set Iur = null
    set Pur = null
endfunction
function D5s takes nothing returns nothing
    set ASw = 0
    call Cur("via function reference SqueakyQuestReward, line 123")
endfunction
function DAr takes nothing returns nothing
    call PanCameraToTimedLocForPlayer(GetEnumPlayer(), vo, 0.)
    call TriggerExecute(MT)
endfunction
function UWi takes integer QWi, integer WWi, string EWi returns boolean
    local boolean ZWi
    set DSw[ASw] = EWi
    set ASw = ASw + 1
    set ZWi = GpS(AM[QWi], WWi, "when calling has in CustomHero, line 238")
    set ASw = ASw - 1
    return ZWi
endfunction
function Mau takes integer Cau, integer Vau, string Bau returns boolean
    local boolean Nau
    set DSw[ASw] = Bau
    set ASw = ASw + 1
    if MC[Cau] == 0 then
        if Cau == 0 then
            call tNr("Nullpointer exception when calling CustomHero.hasCritterTierUnlocked", "when calling error in CustomHero, line 237")
        else
            call tNr("Called CustomHero.hasCritterTierUnlocked on invalid object.", "when calling error in CustomHero, line 237")
        endif
    endif
    set Nau = UWi(Cau, Vau, "when calling hasCritterTierUnlocked in CustomHero, line 237")
    set ASw = ASw - 1
    return Nau
endfunction
function hBt takes integer gBt returns player
    return eDs(mM[gBt])
endfunction
function UBt takes integer WBt, string EBt returns player
    local player ZBt
    set DSw[ASw] = EBt
    set ASw = ASw + 1
    if MC[WBt] == 0 then
        if WBt == 0 then
            call tNr("Nullpointer exception when calling CustomHero.getPlayer", "when calling error in CustomHero, line 123")
        else
            call tNr("Called CustomHero.getPlayer on invalid object.", "when calling error in CustomHero, line 123")
        endif
    endif
    set ZBt = hBt(WBt)
    set ASw = ASw - 1
    set NIw = ZBt
    set ZBt = null
    return NIw
endfunction
function rcS takes integer MSS returns string
    local string wcS = ""
    local integer ucS = MSS
    if ucS == 1 then
        set wcS = "Furry"
    elseif ucS == 2 then
        set wcS = "Watery"
    elseif ucS == 3 then
        set wcS = "Filthy"
    elseif ucS == 4 then
        set wcS = "Flying"
    elseif ucS == 5 then
        set wcS = "Godly"
    endif
    return wcS
endfunction
function uwi takes string M_i returns integer
    local integer wwi
    set DSw[ASw] = M_i
    set ASw = ASw + 1
    if NX == 0 then
        if MX < 32768 then
            set MX = MX + 1
            set wwi = MX
            set wC[wwi] = 1094
        else
            call tNr("Out of memory: Could not create CallbackSingle_nullTimer_CustomHero_CustomHero.", "when calling error in CustomHero, line 234")
            set wwi = 0
        endif
    else
        set NX = NX - 1
        set wwi = BX[NX]
        set wC[wwi] = 1094
    endif
    set ASw = ASw - 1
    return wwi
endfunction
function Lui takes integer Dui, integer Hui, string Jui returns nothing
    local integer Kui
    set DSw[ASw] = Jui
    set ASw = ASw + 1
    if not Mau(Dui, Hui, "when calling hasCritterTierUnlocked in CustomHero, line 229") then
        call dii("You have unlocked the " + rcS(Hui) + " Critters!", 5., UBt(Dui, "when calling getPlayer in CustomHero, line 230"))
        call vwt(AM[Dui], Hui, "when calling add in CustomHero, line 231")
    else
        call dii(rcS(Hui) + " critter tier is already unlocked!", 5., UBt(Dui, "when calling getPlayer in CustomHero, line 233"))
        set Kui = uwi("when calling alloc_CallbackSingle_nullTimer_CustomHero_CustomHero in CustomHero, line 234")
        call RUs(Kui)
        set KM[Kui] = Dui
        set LM[Kui] = Hui
        call ccr(Kui, "when calling nullTimer in CustomHero, line 234")
    endif
    set ASw = ASw - 1
endfunction
function Esi takes integer msi, integer Qsi, string Wsi returns nothing
    set DSw[ASw] = Wsi
    set ASw = ASw + 1
    if MC[msi] == 0 then
        if msi == 0 then
            call tNr("Nullpointer exception when calling CustomHero.unlockCritterTier", "when calling error in CustomHero, line 228")
        else
            call tNr("Called CustomHero.unlockCritterTier on invalid object.", "when calling error in CustomHero, line 228")
        endif
    endif
    call Lui(msi, Qsi, "when calling unlockCritterTier in CustomHero, line 228")
    set ASw = ASw - 1
endfunction
function UUt takes integer ZUt returns integer
    return ZUt
endfunction
function tOS takes player uOS, string rOS returns integer
    local integer sOS
    set DSw[ASw] = rOS
    set ASw = ASw + 1
    set sOS = wps(qD, hgr(uOS), "when calling get in PlayerRegistry, line 30")
    set ASw = ASw - 1
    return sOS
endfunction
function qai takes string oai returns nothing
    local unit Oai
    local item lai
    local integer bai
    local integer yai
    local integer pai
    local integer eai
    set DSw[ASw] = oai
    set ASw = ASw + 1
    set Oai = GetTriggerUnit()
    set lai = GetManipulatedItem()
    set bai = q3t(lai)
    set yai = tOS(eDs(Oai), "when calling getCustomPlayer in Critters, line 232")
    if yai != 0 then
        set pai = xMi(yai, "when calling getCHero in Critters, line 235")
        if pai != 0 then
            set eai = bai
            if eai == xF[UUt($00000001)]then
    call Esi(pai, $00000001, "when calling unlockCritterTier in Critters, line 239")
            elseif eai == xF[UUt($00000002)]then
    call Esi(pai, $00000002, "when calling unlockCritterTier in Critters, line 241")
            elseif eai == xF[UUt($00000003)]then
    call Esi(pai, $00000003, "when calling unlockCritterTier in Critters, line 243")
            elseif eai == xF[UUt($00000004)]then
    call Esi(pai, $00000004, "when calling unlockCritterTier in Critters, line 245")
            elseif eai == xF[UUt($00000005)]then
    call Esi(pai, $00000005, "when calling unlockCritterTier in Critters, line 247")
            endif
        endif
    endif
    set ASw = ASw - 1
    set Oai = null
    set lai = null
endfunction
function DAt takes nothing returns nothing
    set ASw = 0
    call qai("via function reference Critters, line 228")
endfunction
function ISt takes string ZSt returns integer
    local integer USt
    set DSw[ASw] = ZSt
    set ASw = ASw + 1
    if NX == 0 then
        if MX < 32768 then
            set MX = MX + 1
            set USt = MX
            set wC[USt] = 948
        else
            call tNr("Out of memory: Could not create CallbackSingle_doAfter_SpellIconWithGif.", "when calling error in SpellIconWithGif, line 78")
            set USt = 0
        endif
    else
        set NX = NX - 1
        set USt = BX[NX]
        set wC[USt] = 948
    endif
    set ASw = ASw - 1
    return USt
endfunction
function Ilu takes integer Elu returns string
    local integer Zlu = Elu / 16
    local integer Ulu = Elu - Zlu * 16
    return Dh[Zlu] + Dh[Ulu]
endfunction
function R7w takes integer a7w, integer n7w, integer d7w, integer f7w returns string
    return "|c" + Ilu(f7w) + Ilu(a7w) + Ilu(n7w) + Ilu(d7w)
endfunction
function kOS takes string hOS returns integer
    local integer FOS
    set DSw[ASw] = hOS
    set ASw = ASw + 1
    if NX == 0 then
        if MX < 32768 then
            set MX = MX + 1
            set FOS = MX
            set wC[FOS] = 949
        else
            call tNr("Out of memory: Could not create CallbackSingle_doAfter_SpellIconWithGif.", "when calling error in SpellIconWithGif, line 81")
            set FOS = 0
        endif
    else
        set NX = NX - 1
        set FOS = BX[NX]
        set wC[FOS] = 949
    endif
    set ASw = ASw - 1
    return FOS
endfunction
function wer takes string Bpr returns boolean
    local integer Npr
    local integer Mpr
    set DSw[ASw] = Bpr
    set ASw = ASw + 1
    set dH = "300"
    set fH = "You reached level 300 as Novice!"
    set RH = "Icons/MagicIcon/frame_"
    set TH = "_delay-0.04s.blp"
    set YH = 25
    set GH = R7w($000000A8, $00000004, $000000D2, $000000FF)
    set gH = R7w($00000000, $000000DC, $00000005, $000000FF)
    set hH = R7w($000000E0, $00000007, $00000000, $000000FF)
    set FH = R7w($00000000, $00000039, $000000DB, $000000FF)
    set kH = R7w($000000EA, $000000B8, $00000001, $000000FF)
    set jH = R7w($00000000, $000000D4, $000000E1, $000000FF)
    set xH = XQt("when calling new_LinkedList in SpellIconWithGif, line 24")
    set vH = XQt("when calling new_LinkedList in SpellIconWithGif, line 25")
    set mH = jts("when calling new_HashMap in SpellIconWithGif, line 26")
    set QH = "|r"
    set WH[$00000000] = GH
    set WH[$00000001] = gH
    set WH[$00000002] = hH
    set WH[$00000003] = FH
    set WH[$00000004] = kH
    set WH[$00000005] = jH
    set EH = 0
    set ZH = 100
    set Npr = ISt("when calling alloc_CallbackSingle_doAfter_SpellIconWithGif in SpellIconWithGif, line 78")
    call RUs(Npr)
    call Ybr(1., Npr, "when calling doAfter in SpellIconWithGif, line 78")
    set Mpr = kOS("when calling alloc_CallbackSingle_doAfter_SpellIconWithGif in SpellIconWithGif, line 81")
    call RUs(Mpr)
    call Ybr(1.5, Mpr, "when calling doAfter in SpellIconWithGif, line 81")
    set ASw = ASw - 1
    return true
endfunction
function DEu takes nothing returns boolean
    set ASw = 0
    return wer("via function reference SpellIconWithGif, line 1")
endfunction
function uCu takes string MXu returns integer
    local integer wCu
    set DSw[ASw] = MXu
    set ASw = ASw + 1
    if NX == 0 then
        if MX < 32768 then
            set MX = MX + 1
            set wCu = MX
            set wC[wCu] = 978
        else
            call tNr("Out of memory: Could not create CallbackSingle_doAfter_Voidless_extensions.", "when calling error in Voidless_extensions, line 314")
            set wCu = 0
        endif
    else
        set NX = NX - 1
        set wCu = BX[NX]
        set wC[wCu] = 978
    endif
    set ASw = ASw - 1
    return wCu
endfunction
function xSr takes string kSr returns integer
    local integer jSr
    set DSw[ASw] = kSr
    set ASw = ASw + 1
    if NX == 0 then
        if MX < 32768 then
            set MX = MX + 1
            set jSr = MX
            set wC[jSr] = 977
        else
            call tNr("Out of memory: Could not create CallbackSingle_doAfter_Voidless_extensions.", "when calling error in Voidless_extensions, line 264")
            set jSr = 0
        endif
    else
        set NX = NX - 1
        set jSr = BX[NX]
        set wC[jSr] = 977
    endif
    set ASw = ASw - 1
    return jSr
endfunction
function GIi takes string VUi returns boolean
    local integer BUi
    local integer NUi
    local integer MUi
    local integer wIi
    local integer uIi
    local integer rIi
    local integer sIi
    local integer tIi
    local integer iIi
    local integer SIi
    local integer cIi
    local integer oIi
    local integer OIi
    local integer lIi
    local integer bIi
    local integer yIi
    local integer pIi
    local integer eIi
    local integer qIi
    local integer aIi
    local integer nIi
    local integer dIi
    local integer fIi
    local integer RIi
    local integer TIi
    local integer YIi
    set DSw[ASw] = VUi
    set ASw = ASw + 1
    set GL = XQt("when calling new_LinkedList in Voidless_extensions, line 15")
    set gL = XQt("when calling new_LinkedList in Voidless_extensions, line 16")
    set hL = jts("when calling new_HashMap in Voidless_extensions, line 17")
    set FL = jts("when calling new_HashMap in Voidless_extensions, line 18")
    set kL = jts("when calling new_HashMap in Voidless_extensions, line 19")
    set jL = jts("when calling new_HashMap in Voidless_extensions, line 61")
    set xL = 1000
    set vL = 7500
    set mL = 0.01
    set QL = 0.02
    set WL = 0.01
    set BUi = XQt("when calling new_LinkedList in Voidless_extensions, line 241")
    call vwt(BUi, cL, "when calling add in Voidless_extensions, line 241")
    set NUi = BUi
    call vwt(NUi, oL, "when calling add in Voidless_extensions, line 241")
    set MUi = NUi
    call vwt(MUi, OL, "when calling add in Voidless_extensions, line 241")
    set wIi = MUi
    call vwt(wIi, lL, "when calling add in Voidless_extensions, line 241")
    set uIi = wIi
    call vwt(uIi, bL, "when calling add in Voidless_extensions, line 241")
    set rIi = uIi
    call vwt(rIi, yL, "when calling add in Voidless_extensions, line 241")
    set sIi = rIi
    call vwt(sIi, pL, "when calling add in Voidless_extensions, line 241")
    set tIi = sIi
    call vwt(tIi, eL, "when calling add in Voidless_extensions, line 241")
    set iIi = jts("when calling new_HashMap in Voidless_extensions, line 242")
    call GVw(iIi, cL, err(qL, "when calling stringToIndex in Voidless_extensions, line 242"), "when calling put in Voidless_extensions, line 242")
    set SIi = iIi
    call GVw(SIi, oL, err(aL, "when calling stringToIndex in Voidless_extensions, line 242"), "when calling put in Voidless_extensions, line 242")
    set cIi = SIi
    call GVw(cIi, OL, err(nL, "when calling stringToIndex in Voidless_extensions, line 242"), "when calling put in Voidless_extensions, line 242")
    set oIi = cIi
    call GVw(oIi, lL, err(dL, "when calling stringToIndex in Voidless_extensions, line 242"), "when calling put in Voidless_extensions, line 242")
    set OIi = oIi
    call GVw(OIi, bL, err(fL, "when calling stringToIndex in Voidless_extensions, line 242"), "when calling put in Voidless_extensions, line 242")
    set lIi = OIi
    call GVw(lIi, yL, err(RL, "when calling stringToIndex in Voidless_extensions, line 242"), "when calling put in Voidless_extensions, line 242")
    set bIi = lIi
    call GVw(bIi, pL, err(TL, "when calling stringToIndex in Voidless_extensions, line 242"), "when calling put in Voidless_extensions, line 242")
    set yIi = bIi
    call GVw(yIi, eL, err(YL, "when calling stringToIndex in Voidless_extensions, line 242"), "when calling put in Voidless_extensions, line 242")
    set pIi = jts("when calling new_HashMap in Voidless_extensions, line 243")
    call GVw(pIi, cL, err(aK, "when calling stringToIndex in Voidless_extensions, line 243"), "when calling put in Voidless_extensions, line 243")
    set eIi = pIi
    call GVw(eIi, oL, err(aK + " (charged)", "when calling stringToIndex in Voidless_extensions, line 243"), "when calling put in Voidless_extensions, line 243")
    set qIi = eIi
    call GVw(qIi, OL, err(aK, "when calling stringToIndex in Voidless_extensions, line 243"), "when calling put in Voidless_extensions, line 243")
    set aIi = qIi
    call GVw(aIi, lL, err(aK + " (charged)", "when calling stringToIndex in Voidless_extensions, line 243"), "when calling put in Voidless_extensions, line 243")
    set nIi = aIi
    call GVw(nIi, bL, err(aK, "when calling stringToIndex in Voidless_extensions, line 243"), "when calling put in Voidless_extensions, line 243")
    set dIi = nIi
    call GVw(dIi, yL, err(aK + " (charged)", "when calling stringToIndex in Voidless_extensions, line 243"), "when calling put in Voidless_extensions, line 243")
    set fIi = dIi
    call GVw(fIi, pL, err(aK, "when calling stringToIndex in Voidless_extensions, line 243"), "when calling put in Voidless_extensions, line 243")
    set RIi = fIi
    call GVw(RIi, eL, err(aK + " (charged)", "when calling stringToIndex in Voidless_extensions, line 243"), "when calling put in Voidless_extensions, line 243")
    set TIi = xSr("when calling alloc_CallbackSingle_doAfter_Voidless_extensions in Voidless_extensions, line 264")
    call RUs(TIi)
    call Ybr(3., TIi, "when calling doAfter in Voidless_extensions, line 264")
    set YIi = uCu("when calling alloc_CallbackSingle_doAfter_Voidless_extensions in Voidless_extensions, line 314")
    call RUs(YIi)
    call Ybr(2., YIi, "when calling doAfter in Voidless_extensions, line 314")
    set ASw = ASw - 1
    return true
endfunction
function DFr takes nothing returns boolean
    set ASw = 0
    return GIi("via function reference Voidless_extensions, line 1")
endfunction
function DFs takes nothing returns boolean
    return Ss[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))] >= 3 and GetUnitTypeId(GetOrderTargetUnit()) == sr and IsUnitInGroup(GetTriggerUnit(), kpu(300., GetUnitLoc(GetOrderTargetUnit())))
endfunction
function OeS takes nothing returns boolean
    return CountUnitsInGroup(fc[bj_forLoopAIndex]) == 0
endfunction
function cDi takes nothing returns boolean
    return IsPlayerInForce(GetOwningPlayer(GetTriggerUnit()), Rc[bj_forLoopAIndex])
endfunction
function DHi takes nothing returns nothing
    set bj_forLoopAIndex = 1
    set bj_forLoopAIndexEnd = ko
    loop
        exitwhen bj_forLoopAIndex > bj_forLoopAIndexEnd
        if cDi() then
            call GroupRemoveUnit(fc[bj_forLoopAIndex], GetTriggerUnit())
            if OeS() then
    set lr = bj_forLoopAIndex
    call TriggerExecute(LR)
            endif
        endif
        set bj_forLoopAIndex = bj_forLoopAIndex + 1
    endloop
endfunction
function BRi takes integer XRi returns integer
    local integer CRi = XRi / (256 * 256 * 256)
    local integer VRi
    set XRi = XRi - CRi * 256 * 256 * 256
    set VRi = Iu[CRi]
    set CRi = XRi / (256 * 256)
    set XRi = XRi - CRi * 256 * 256
    set VRi = VRi * 64 + Iu[CRi]
    set CRi = XRi / 256
    set VRi = VRi * 64 + Iu[CRi]
    return VRi * 64 + Iu[XRi - CRi * 256]
endfunction
function sHu takes nothing returns nothing
    local integer uHu = 0
    local integer rHu = 0
    loop
        set Iu[uHu + 48] = rHu
        set Au[uHu] = uHu + 48
        set rHu = rHu + 1
        set uHu = uHu + 1
        exitwhen uHu >= 10
    endloop
    set uHu = 0
    loop
        set Iu[uHu + 97] = rHu
        set Iu[uHu + 65] = rHu + 26
        set Au[uHu + 10] = uHu + 97
        set Au[uHu + 26 + 10] = uHu + 65
        set rHu = rHu + 1
        set uHu = uHu + 1
        exitwhen uHu >= 26
    endloop
endfunction
function fkS takes unit akS returns integer
    local integer nkS = 0
    local integer dkS = GetUnitTypeId(akS)
    if wr == false then
        set wr = true
        call sHu()
    endif
    loop
        set nkS = nkS + 1
        exitwhen nkS > Vu
        if Du[nkS] == dkS then
            return nkS
        endif
    endloop
    return BRi(dkS)
endfunction
function DIu takes nothing returns nothing
    call ForceRemovePlayer(ls, GetOwningPlayer(GetTriggerUnit()))
    call ForceRemovePlayer(IS[$00000006], GetOwningPlayer(GetTriggerUnit()))
    call ForceAddPlayer(PS[$00000006], GetOwningPlayer(GetTriggerUnit()))
    call DestroyQuest(Os[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))])
    set Os[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))] = null
    call PlaySoundBJ(pe)
    call DisplayTimedTextToForce(MwS(GetOwningPlayer(GetOrderedUnit())), 5., "|cffffcc00You have completed the Quest|r.")
    call AddHeroXPSwapped(d, GetTriggerUnit(), true)
    call AdjustPlayerStateBJ($00003A98, GetOwningPlayer(GetTriggerUnit()), PLAYER_STATE_RESOURCE_GOLD)
    set sw[(1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))) * 1000 + fkS(GetTriggerUnit())] = true
endfunction
function YkS takes string RkS returns integer
    local integer TkS
    set DSw[ASw] = RkS
    set ASw = ASw + 1
    if NX == 0 then
        if MX < 32768 then
            set MX = MX + 1
            set TkS = MX
            set wC[TkS] = 893
        else
            call tNr("Out of memory: Could not create CallbackSingle_doAfter_JobAdvancementQuestHandler.", "when calling error in JobAdvancementQuestHandler, line 479")
            set TkS = 0
        endif
    else
        set NX = NX - 1
        set TkS = BX[NX]
        set wC[TkS] = 893
    endif
    set ASw = ASw - 1
    return TkS
endfunction
function BWr takes string LWr returns nothing
    local integer XWr
    local string CWr
    local integer VWr
    set DSw[ASw] = LWr
    set ASw = ASw + 1
    set XWr = hgr(GetTriggerPlayer())
    set CWr = GetEventPlayerChatString()
    set VWr = YkS("when calling alloc_CallbackSingle_doAfter_JobAdvancementQuestHandler in JobAdvancementQuestHandler, line 479")
    call RUs(VWr)
    set uww_5077[VWr] = XWr
    set rww_4772[VWr] = CWr
    call Ybr(0.5, VWr, "when calling doAfter in JobAdvancementQuestHandler, line 479")
    set ASw = ASw - 1
endfunction
function DOu takes nothing returns nothing
    set ASw = 0
    call BWr("via function reference JobAdvancementQuestHandler, line 993")
endfunction
function OFt takes nothing returns boolean
    return IsUnitAliveBJ(GetFilterUnit())
endfunction
function iWs takes nothing returns boolean
    return IsUnitEnemy(GetFilterUnit(), GetOwningPlayer(pS[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))]))
endfunction
function DPi takes nothing returns boolean
    return GetBooleanAnd(OFt(), iWs())
endfunction
function DPs takes nothing returns boolean
    return true
endfunction
function DQu takes nothing returns nothing
    call ForceRemovePlayer(wO, GetOwningPlayer(GetTriggerUnit()))
    call AddSpecialEffectTargetUnitBJ("overhead", GetTriggerUnit(), "Abilities\\Spells\\Other\\Levelup\\LevelupCaster.mdl")
    call DestroyEffect(bj_lastCreatedEffect)
    call DisplayTextToForce(MwS(GetOwningPlayer(GetTriggerUnit())), "|cffff8c00Fisherman's Friend|r : Congratulations!! You're truly an outstanding fisherman - with powerful skills to boot as well! Hence, you're now promoted to a Legendary Fisherman! Oh and keep the Flying Wish Fish - you most certainly deserve it!")
    set Po[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))] = 5
    call DestroyQuest(Ao[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))])
endfunction
function DTS takes nothing returns nothing
    call RemoveItem(GetEnumItem())
endfunction
function DTt takes nothing returns boolean
    return IsUnitType(GetTriggerUnit(), UNIT_TYPE_HERO) != false
endfunction
function CRu takes unit XRu returns nothing
    set AJ[DJ] = XRu
    set DJ = DJ + 1
endfunction
function tFr takes unit rFr, integer sFr returns nothing
    call SetUnitUserData(rFr, sFr)
endfunction
function u1u takes nothing returns nothing
    set DJ = DJ - 1
endfunction
function DTi takes integer ATi returns nothing
    call CRu(Ksw[ATi])
    call gct(PJ)
    call u1u()
    call tFr(Ksw[ATi], $00000000)
endfunction
function VYu takes integer XYu, string CYu returns nothing
    set DSw[ASw] = CYu
    set ASw = ASw + 1
    if WN[XYu] == 0 then
        call tNr("Double free: object of type UnitIndex", "when calling error in UnitIndexer, line 172")
    else
        set vN[mN] = XYu
        set mN = mN + 1
        set WN[XYu] = 0
    endif
    set ASw = ASw - 1
endfunction
function pdi takes integer bdi, string ydi returns nothing
    set DSw[ASw] = ydi
    set ASw = ASw + 1
    call DTi(bdi)
    call VYu(bdi, "when calling dealloc_UnitIndex in UnitIndexer, line 188")
    set ASw = ASw - 1
endfunction
function E1i takes integer Q1i, string W1i returns nothing
    set DSw[ASw] = W1i
    set ASw = ASw + 1
    if WN[Q1i] == 0 then
        if Q1i == 0 then
            call tNr("Nullpointer exception when calling UnitIndex.UnitIndex", "when calling error in UnitIndexer, line 172")
        else
            call tNr("Called UnitIndex.UnitIndex on invalid object.", "when calling error in UnitIndexer, line 172")
        endif
    endif
    call pdi(Q1i, "when calling destroyUnitIndex in UnitIndexer, line 172")
    set ASw = ASw - 1
endfunction
function pii takes integer yii returns nothing
endfunction
function DUi takes integer PUi, unit AUi returns nothing
    call pii(PUi)
    set Ksw[PUi] = AUi
    call tFr(Ksw[PUi], PUi)
    call CRu(AUi)
    call gct(IJ)
    call u1u()
endfunction
function hst takes string Gst returns integer
    local integer gst
    set DSw[ASw] = Gst
    set ASw = ASw + 1
    if mN == 0 then
        if QN < 32768 then
            set QN = QN + 1
            set gst = QN
            set WN[gst] = 1286
        else
            call tNr("Out of memory: Could not create UnitIndex.", "when calling error in UnitIndexer, line 172")
            set gst = 0
        endif
    else
        set mN = mN - 1
        set gst = vN[mN]
        set WN[gst] = 1286
    endif
    set ASw = ASw - 1
    return gst
endfunction
function iDt takes unit rDt, string sDt returns integer
    local integer tDt
    set DSw[ASw] = sDt
    set ASw = ASw + 1
    set tDt = hst("when calling alloc_UnitIndex in UnitIndexer, line 181")
    call DUi(tDt, rDt)
    set ASw = ASw - 1
    return tDt
endfunction
function g1s takes unit T1s, string Y1s returns integer
    local integer G1s
    set DSw[ASw] = Y1s
    set ASw = ASw + 1
    set G1s = aKr(T1s)
    if G1s == 0 then
        set G1s = iDt(T1s, "when calling new_UnitIndex in UnitIndexer, line 135")
    endif
    set ASw = ASw - 1
    return G1s
endfunction
function SIr takes unit tIr, string iIr returns boolean
    set DSw[ASw] = iIr
    set ASw = ASw + 1
    if aKr(tIr) == 0 then
        set ASw = ASw - 1
        return false
    else
        call E1i(g1s(tIr, "when calling toUnitIndex in UnitIndexer, line 169"), "when calling dispatch_UnitIndex_destroyUnitIndex in UnitIndexer, line 169")
        set ASw = ASw - 1
        return true
    endif
endfunction
function Srs takes nothing returns unit
    return NA[MA - 1]
endfunction
function r_r takes unit u_r returns boolean
    return false
endfunction
function xAr takes string jAr returns nothing
    set DSw[ASw] = jAr
    set ASw = ASw + 1
    if r_r(Srs()) then
        call SIr(Srs(), "when calling deindex in UnitIndexer, line 197")
    endif
    set ASw = ASw - 1
endfunction
function DUs takes nothing returns nothing
    set ASw = 0
    call xAr("via function reference UnitIndexer, line 197")
endfunction
function DUu takes nothing returns nothing
    call PanCameraToTimedLocForPlayer(GetEnumPlayer(), vo, 0.)
    call TriggerExecute(MT)
endfunction
function DVt takes nothing returns boolean
    return GetUnitTypeId(GetDyingUnit()) == 1848652340 and GetUnitTypeId(GetKillingUnit()) == 1211117872 and IsPlayerInForce(GetOwningPlayer(GetKillingUnit()), rt)
endfunction
function DVu takes nothing returns nothing
    call ForceRemovePlayer(rt, GetOwningPlayer(GetTriggerUnit()))
    call ForceRemovePlayer(ot, GetOwningPlayer(GetTriggerUnit()))
    call ForceRemovePlayer(Ot, GetOwningPlayer(GetTriggerUnit()))
    call DisplayTextToForce(MwS(GetOwningPlayer(GetTriggerUnit())), "|cffffcc00Rain|r : |cff87ceebNot bad, kid. Very well then, I shall impart onto you the strongest sword techniques, including the legendary Asura Strike technique. However, it consumes all your mana if used, so make sure you plan when to use it.")
    call DestroyQuest(st[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))])
    set st[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))] = null
    call SetHeroLevelBJ(GetTriggerUnit(), $00000001, false)
    call ReplaceUnitBJ(GetTriggerUnit(), $48303248, $00000002)
    call SelectUnitForPlayerSingle(bj_lastReplacedUnit, GetOwningPlayer(GetTriggerUnit()))
    call SetHeroLevel(bj_lastReplacedUnit, $00000001, true)
    call UnitStripHeroLevel(bj_lastReplacedUnit, $00000001)
endfunction
function DXi takes nothing returns boolean
    return GetSpellAbilityId() == 1093679158
endfunction
function DXu takes nothing returns nothing
    set Cs = GetRectCenter(Rp)
    call SetUnitPositionLocFacingBJ(GetTriggerUnit(), Cs, 360.)
    call PanCameraToTimedLocForPlayer(GetOwningPlayer(GetTriggerUnit()), Cs, 0.)
    call TriggerExecute(MT)
    call RemoveLocation(Cs)
endfunction
function D_r takes nothing returns boolean
    return GetUnitTypeId(GetTriggerUnit()) == 1211117639 and GetUnitTypeId(GetOrderTargetUnit()) == 1747988819 and IsPlayerInForce(GetOwningPlayer(GetTriggerUnit()), Kr) and IsPlayerInForce(GetOwningPlayer(GetTriggerUnit()), Cr) == false and IsUnitInGroup(GetTriggerUnit(), kpu(300., GetUnitLoc(GetOrderTargetUnit())))
endfunction
function Dai takes nothing returns nothing
    call SetUnitPositionLoc(GetEnumUnit(), br[1 + GetPlayerId(GetOwningPlayer(GetEnumUnit()))])
endfunction
function Ior takes string Eor returns boolean
    local unit Zor
    local boolean Uor
    set DSw[ASw] = Eor
    set ASw = ASw + 1
    set Zor = GetDyingUnit()
    if Zor == null then
        set Zor = GetTriggerUnit()
    endif
    set Uor = t_u(Zor) and(not GpS(Uj, Aei(Zor), "when calling has in Imp3DragonFortress, line 388"))
    set ASw = ASw - 1
    set Zor = null
    return Uor
endfunction
function Dht takes nothing returns boolean
    set ASw = 0
    return Ior("via function reference Imp3DragonFortress, line 1654")
endfunction
function lir takes nothing returns boolean
    return GetSpellAbilityId() == 1093678161
endfunction
function srr takes nothing returns boolean
    return GetSpellAbilityId() == 1093678161
endfunction
function Dju takes nothing returns nothing
    call GroupAddUnit(GO, GetTriggerUnit())
    call GroupAddUnit(YO, GetTriggerUnit())
    if srr() then
        set Vs[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))] = GetSpellTargetLoc()
    else
        set Vs[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))] = GetUnitLoc(GetSpellTargetUnit())
    endif
    set hu[GetPlayerId(GetOwningPlayer(GetTriggerUnit()))] = true
    set Js[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))] = GetTriggerUnit()
    set Pt[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))] = UFS(600., Vs[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))], Condition(ayw))
    call PauseUnit(Js[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))], true)
    call SetUnitInvulnerable(Js[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))], true)
    call SetUnitAnimation(Js[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))], "channel")
    call CreateNUnitsAtLoc($00000001, $68303237, GetOwningPlayer(Js[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))]), GetUnitLoc(Js[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))]), 270.)
    set dt[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))] = bj_lastCreatedUnit
    if lir() then
        call ForGroupBJ(Pt[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))], nyw)
    endif
    set ho = 1
    loop
        exitwhen ho > 8
        call n6t(.1)
        set Hc[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))] = GetRandomLocInRect(RectFromCenterSizeBJ(GetUnitLoc(GetTriggerUnit()), 600., 600.))
        call CreateNUnitsAtLoc($00000001, $68303054, GetOwningPlayer(GetTriggerUnit()), Hc[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))], 270.)
        call RemoveLocation(Hc[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))])
        set ho = ho + 1
    endloop
    call n6t(1.9)
    call CreateNUnitsAtLoc($00000001, $68303239, GetOwningPlayer(GetTriggerUnit()), Vs[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))], 270.)
    call n6t(0.75)
    call ForGroupBJ(Pt[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))], dyw)
    call RemoveUnit(dt[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))])
    call GroupRemoveUnit(YO, GetTriggerUnit())
    call GroupRemoveUnit(GO, GetTriggerUnit())
    call PauseUnit(Js[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))], false)
    call SetUnitInvulnerable(Js[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))], false)
    call ResetUnitAnimation(Js[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))])
    call RemoveLocation(Vs[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))])
    call DestroyGroup(Pt[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))])
    set hu[GetPlayerId(GetOwningPlayer(GetTriggerUnit()))] = false
endfunction
function Dlr takes nothing returns nothing
    call AdjustPlayerStateBJ(- 10000, GetOwningPlayer(GetTriggerUnit()), PLAYER_STATE_RESOURCE_GOLD)
    call ForceAddPlayer(gt, GetOwningPlayer(GetTriggerUnit()))
    call DisplayTextToForce(MwS(GetOwningPlayer(GetTriggerUnit())), "|cffffcc00You left a huge sum of gold at the Statue and received its blessing.|r")
endfunction
function Dnr takes nothing returns boolean
    return (IsUnitType(GetDyingUnit(), UNIT_TYPE_HERO) and IsPlayerInForce(GetOwningPlayer(GetDyingUnit()), Ns)) != false
endfunction
function Dvs takes nothing returns nothing
    call ForceRemovePlayer(pc[$00000006], GetOwningPlayer(GetTriggerUnit()))
    call ForceAddPlayer(ec[$00000006], GetOwningPlayer(GetTriggerUnit()))
    call DestroyQuest(LS[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))])
    call PlaySoundBJ(pe)
    call DisplayTimedTextToForce(MwS(GetOwningPlayer(GetOrderedUnit())), 5., "|cffffcc00You have completed the Quest|r.")
    call DisplayTimedTextToForce(MwS(GetOwningPlayer(GetOrderedUnit())), 30., "|cffffcc00Kiba|r : Great! A new recruit for my evacuation team. Arnold did send me a letter, saying he sent his best expedition member on field to aid me with my evacuation, and you sure match the description! Okay, while waiting for the rest of the members of my team to arrive, I need to help stock up for our 'adventure'. Get ready and report back to me.")
    call AddHeroXPSwapped(m, GetTriggerUnit(), true)
    call AdjustPlayerStateBJ($0000038E, GetOwningPlayer(GetTriggerUnit()), PLAYER_STATE_RESOURCE_GOLD)
    set uw[(1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))) * 1000 + fkS(GetTriggerUnit())] = true
endfunction
function DwS takes nothing returns boolean
    return (GetItemTypeId(GetManipulatedItem()) == 1227895864 and IsUnitType(GetTriggerUnit(), UNIT_TYPE_HERO) and GetHeroLevel(GetTriggerUnit()) >= 120 and IsPlayerInForce(GetOwningPlayer(GetTriggerUnit()), IS[$0000000C]) == false) != false
endfunction
function E3r takes nothing returns boolean
    return GetUnitTypeId(GetTriggerUnit()) == 1747988570
endfunction
function OLt takes string oLt returns nothing
    set DSw[ASw] = oLt
    set ASw = ASw + 1
    if jR != null then
        call HLr(jR, "when calling release in Imp3DragonFortress, line 559")
    endif
    call GVw(eW, $00000000, $00000000, "when calling put in Imp3DragonFortress, line 561")
    set jR = ZPs("when calling getTimer in Imp3DragonFortress, line 562")
    call nnr(jR, GetRandomReal(1.5, 3.), rQw)
    set ASw = ASw - 1
endfunction
function b8S takes integer l8S returns boolean
    return GetRandomInt($00000001, $00000064) > 100 - l8S
endfunction
function ATS takes real UTS, real ITS, real PTS returns real
    set CSw = UTS
    set VSw = ITS
    set BSw = wor(UTS, ITS) + PTS
    return CSw
endfunction
function DpS takes string ZpS, real UpS, real IpS, real PpS returns effect
    local effect ApS = AddSpecialEffect(ZpS, UpS, IpS)
    call rMw(ApS, UpS, IpS, PpS)
    set WIw = ApS
    set ApS = null
    return WIw
endfunction
function Xht takes effect Hht, integer Jht, integer Kht, integer Lht returns nothing
    call BlzSetSpecialEffectColor(Hht, Jht, Kht, Lht)
endfunction
function Ggr takes unit Ygr returns nothing
    call PauseUnit(Ygr, true)
endfunction
function Xsr takes string Ksr returns integer
    local integer Lsr
    set DSw[ASw] = Ksr
    set ASw = ASw + 1
    if NX == 0 then
        if MX < 32768 then
            set MX = MX + 1
            set Lsr = MX
            set wC[Lsr] = 852
        else
            call tNr("Out of memory: Could not create CallbackSingle_doAfter_Imp3DragonFortress.", "when calling error in Imp3DragonFortress, line 754")
            set Lsr = 0
        endif
    else
        set NX = NX - 1
        set Lsr = BX[NX]
        set wC[Lsr] = 852
    endif
    set ASw = ASw - 1
    return Lsr
endfunction
function YJs takes player fJs, unit RJs, real TJs returns nothing
    if nD == fJs then
        call PanCameraToTimed(kEr(RJs), L1t(RJs), TJs)
    endif
endfunction
function xvu takes unit kvu, string jvu returns boolean
    return IssueImmediateOrder(kvu, jvu)
endfunction
function GLw takes unit dLw, real fLw, real RLw, string TLw returns nothing
    local integer YLw
    set DSw[ASw] = TLw
    set ASw = ASw + 1
    if dLw != null then
        call I7S(uSs(ANw(dLw), XSw, "Abilities/Spells/Undead/DarkRitual/DarkRitualTarget.mdl"))
        call J7i(dLw, fLw, RLw)
        call YJs(eDs(dLw), dLw, 0.)
        call krS(tOS(eDs(dLw), "when calling getCustomPlayer in Imp3DragonFortress, line 749"), "when calling cameraCheckLock in Imp3DragonFortress, line 749")
        call I7S(uSs(ANw(dLw), XSw, "Abilities/Spells/Undead/DarkRitual/DarkRitualTarget.mdl"))
        call xvu(dLw, "stop")
        call Ggr(dLw)
        set YLw = Xsr("when calling alloc_CallbackSingle_doAfter_Imp3DragonFortress in Imp3DragonFortress, line 754")
        call RUs(YLw)
        set e9[YLw] = dLw
        call Ybr(1.5, YLw, "when calling doAfter in Imp3DragonFortress, line 754")
    endif
    set ASw = ASw - 1
endfunction
function GLt takes integer TLt, real YLt returns nothing
    set u3[TLt] = YLt
endfunction
function Kcs takes integer Dcs, real Hcs, string Jcs returns nothing
    set DSw[ASw] = Jcs
    set ASw = ASw + 1
    if bV[Dcs] == 0 then
        if Dcs == 0 then
            call tNr("Nullpointer exception when calling CustomPlayer.setCameraZoomLevel", "when calling error in CustomPlayer, line 152")
        else
            call tNr("Called CustomPlayer.setCameraZoomLevel on invalid object.", "when calling error in CustomPlayer, line 152")
        endif
    endif
    call GLt(Dcs, Hcs)
    set ASw = ASw - 1
endfunction
function tKr takes integer wKr, integer uKr, string rKr returns integer
    local integer sKr
    if uKr < 0 or uKr >= 10 then
        call tNr("Index out of Bounds", rKr)
    elseif uKr <= 4 then
        if uKr <= 2 then
            if uKr <= 1 then
    if uKr <= 0 then
                    set sKr = jOw[wKr]
    else
                    set sKr = xOw[wKr]
    endif
            else
    set sKr = vOw[wKr]
            endif
        elseif uKr <= 3 then
            set sKr = mOw[wKr]
        else
            set sKr = QOw[wKr]
        endif
    elseif uKr <= 7 then
        if uKr <= 6 then
            if uKr <= 5 then
    set sKr = WOw[wKr]
            else
    set sKr = EOw[wKr]
            endif
        else
            set sKr = ZOw[wKr]
        endif
    elseif uKr <= 8 then
        set sKr = UOw[wKr]
    else
        set sKr = IOw[wKr]
    endif
    return sKr
endfunction
function yer takes integer Oer, integer ler, string ber returns integer
    set DSw[ASw] = ber
    set ASw = ASw + 1
    if ler >= 0 and ler <= 10 then
        if tKr(Oer, ler, "when reading array Imp3ShieldEffectsHolder_imp3Effects in  in Imp3DragonFortress, line 124") == 0 then
            call LTr(Oer, ler, k4u("when calling new_Imp3ShieldEffects in Imp3DragonFortress, line 125"), "when writing array Imp3ShieldEffectsHolder_imp3Effects in Imp3DragonFortress, line 125")
        endif
        set ASw = ASw - 1
        return tKr(Oer, ler, "when reading array Imp3ShieldEffectsHolder_imp3Effects in  in Imp3DragonFortress, line 126")
    else
        set ASw = ASw - 1
        return 0
    endif
endfunction
function NHw takes integer XHw, integer CHw, string VHw returns integer
    local integer BHw
    set DSw[ASw] = VHw
    set ASw = ASw + 1
    if IB[XHw] == 0 then
        if XHw == 0 then
            call tNr("Nullpointer exception when calling Imp3ShieldEffectsHolder.get", "when calling error in Imp3DragonFortress, line 122")
        else
            call tNr("Called Imp3ShieldEffectsHolder.get on invalid object.", "when calling error in Imp3DragonFortress, line 122")
        endif
    endif
    set BHw = yer(XHw, CHw, "when calling get in Imp3DragonFortress, line 122")
    set ASw = ASw - 1
    return BHw
endfunction
function O0s takes player c0s, unit o0s returns nothing
    if nD == c0s then
        call ClearSelection()
        call SelectUnit(o0s, true)
    endif
endfunction
function XYt takes real JYt, real KYt, rect LYt returns boolean
    return JYt > ATr(LYt) and JYt < o2t(LYt) and KYt > EUu(LYt) and KYt < mxr(LYt)
endfunction
function Zpr takes string Wpr returns integer
    local integer Epr
    set DSw[ASw] = Wpr
    set ASw = ASw + 1
    if NX == 0 then
        if MX < 32768 then
            set MX = MX + 1
            set Epr = MX
            set wC[Epr] = 850
        else
            call tNr("Out of memory: Could not create CallbackSingle_doAfter_Imp3DragonFortress.", "when calling error in Imp3DragonFortress, line 337")
            set Epr = 0
        endif
    else
        set NX = NX - 1
        set Epr = BX[NX]
        set wC[Epr] = 850
    endif
    set ASw = ASw - 1
    return Epr
endfunction
function Vqs takes real Cqs returns real
    return Cqs * Cqs
endfunction
function fYr takes real qYr, real aYr, real nYr, real dYr returns real
    return SquareRoot(Vqs(nYr - qYr) + Vqs(dYr - aYr))
endfunction
function lTi takes unit oTi, integer OTi returns boolean
    return IssueImmediateOrderById(oTi, OTi)
endfunction
function Qlt takes unit klt, integer jlt, string xlt returns nothing
    local string vlt
    local integer mlt
    set DSw[ASw] = xlt
    set ASw = ASw + 1
    if XYt(ANw(klt), XSw, Il) then
        call J7i(klt, oQu(jl), Gcw)
    elseif XYt(ANw(klt), XSw, Pl) then
        call J7i(klt, oQu(vl), Gcw)
    elseif XYt(ANw(klt), XSw, Al) then
        call J7i(klt, oQu(Ql), Gcw)
    elseif XYt(ANw(klt), XSw, Dl) then
        call J7i(klt, oQu(El), Gcw)
    else
        call J7i(klt, oQu(jl), Gcw)
        call dii(Iji("You slipped backwards, not quite looking where you were going and stepped on the blighted sand.", "when calling unObfuscate in Imp3DragonFortress, line 317"), 5., eDs(klt))
    endif
    if XYt(ANw(klt), XSw, Il) and fYr(oQu(ib), Gcw, ANw(klt), XSw) < 100. then
        call dii(Iji("After almost getting hit by the deadly firebolt, you slipped backwards, not quite looking where you were going and stepped on the blighted sand.", "when calling unObfuscate in Imp3DragonFortress, line 320"), 5., eDs(klt))
    endif
    call I7S(mXi(klt, "Abilities/Spells/Orc/MirrorImage/MirrorImageDeathCaster.mdl", hF))
    if jlt == 0 then
        call dii(Iji("You are paused for 3 seconds and lost your magic protection.", "when calling unObfuscate in Imp3DragonFortress, line 324"), 3., eDs(klt))
    else
        set vlt = "shield"
        if jlt > 1 then
            set vlt = vlt + "s"
        endif
        call dii(Iji("You are paused for 3 seconds and lost some of your magic protection (", "when calling unObfuscate in Imp3DragonFortress, line 329") + fju(jlt) + " " + vlt + " left).", 3., eDs(klt))
    endif
    call lTi(klt, TF)
    call O0s(eDs(klt), klt)
    call YJs(eDs(klt), klt, 0.)
    call krS(tOS(eDs(klt), "when calling getCustomPlayer in Imp3DragonFortress, line 334"), "when calling cameraCheckLock in Imp3DragonFortress, line 334")
    call Ggr(klt)
    set mlt = Zpr("when calling alloc_CallbackSingle_doAfter_Imp3DragonFortress in Imp3DragonFortress, line 337")
    call RUs(mlt)
    set l9[mlt] = klt
    call Ybr(3., mlt, "when calling doAfter in Imp3DragonFortress, line 337")
    set ASw = ASw - 1
endfunction
function WJt takes string mJt returns integer
    local integer QJt
    set DSw[ASw] = mJt
    set ASw = ASw + 1
    if NX == 0 then
        if MX < 32768 then
            set MX = MX + 1
            set QJt = MX
            set wC[QJt] = 1097
        else
            call tNr("Out of memory: Could not create CallbackSingle_nullTimer_Imp3DragonFortress.", "when calling error in Imp3DragonFortress, line 375")
            set QJt = 0
        endif
    else
        set NX = NX - 1
        set QJt = BX[NX]
        set wC[QJt] = 1097
    endif
    set ASw = ASw - 1
    return QJt
endfunction
function ZXr takes player EXr returns string
    return GetPlayerName(EXr)
endfunction
function dHu takes integer aHu, boolean nHu returns nothing
    set r3[aHu] = nHu
endfunction
function GZs takes integer RZs, boolean TZs, string YZs returns nothing
    set DSw[ASw] = YZs
    set ASw = ASw + 1
    if bV[RZs] == 0 then
        if RZs == 0 then
            call tNr("Nullpointer exception when calling CustomPlayer.setCommandsDisabled", "when calling error in CustomPlayer, line 88")
        else
            call tNr("Called CustomPlayer.setCommandsDisabled on invalid object.", "when calling error in CustomPlayer, line 88")
        endif
    endif
    call dHu(RZs, TZs)
    set ASw = ASw - 1
endfunction
function kMs takes force FMs returns nothing
    call ForceClear(FMs)
endfunction
function woS takes string NcS returns integer
    local integer McS
    set DSw[ASw] = NcS
    set ASw = ASw + 1
    if NX == 0 then
        if MX < 32768 then
            set MX = MX + 1
            set McS = MX
            set wC[McS] = 1096
        else
            call tNr("Out of memory: Could not create CallbackSingle_nullTimer_Imp3DragonFortress.", "when calling error in Imp3DragonFortress, line 244")
            set McS = 0
        endif
    else
        set NX = NX - 1
        set McS = BX[NX]
        set wC[McS] = 1096
    endif
    set ASw = ASw - 1
    return McS
endfunction
function pnr takes integer inr, boolean Snr, boolean cnr, string onr returns nothing
    local integer Onr
    local integer lnr
    local real bnr
    local real ynr
    set DSw[ASw] = onr
    set ASw = ASw + 1
    call GVw(qW, inr, $00000000, "when calling put in Imp3DragonFortress, line 225")
    if not cnr then
        if EW == inr then
            call GZs(xus(inr, "when calling getCustomPlayer in Imp3DragonFortress, line 228"), false, "when calling setCommandsDisabled in Imp3DragonFortress, line 228")
            set EW =- 1
            set bnr = LJ
            set ynr = XJ
            set ZW = bnr
            set UW = ynr
            call ugu(fc[$0000000C])
            call kMs(Rc[$0000000C])
        endif
    endif
    set Onr = NHw(pW, inr, "when calling get in Imp3DragonFortress, line 235")
    if Onr != 0 then
        if Z9[Onr] != null then
            call uRi(Z9[Onr])
            set Z9[Onr] = null
        endif
        if U9[Onr] != null then
            call uRi(U9[Onr])
            set U9[Onr] = null
        endif
    endif
    set lnr = woS("when calling alloc_CallbackSingle_nullTimer_Imp3DragonFortress in Imp3DragonFortress, line 244")
    call RUs(lnr)
    set O9[lnr] = inr
    call ccr(lnr, "when calling nullTimer in Imp3DragonFortress, line 244")
    set ASw = ASw - 1
endfunction
function J1u takes unit A1u, unitstate D1u, real H1u returns nothing
    call SetUnitState(A1u, D1u, H1u)
endfunction
function GYS takes unit TYS, real YYS returns nothing
    call J1u(TYS, UNIT_STATE_LIFE, YYS)
endfunction
function O2r takes hashtable S2r, integer c2r, integer o2r returns timer
    return LoadTimerHandle(S2r, c2r, o2r)
endfunction
function HNi takes integer ANi, integer DNi returns timer
    return O2r(qJ, ANi, DNi)
endfunction
function ByS takes integer LyS, integer XyS, string CyS returns timer
    local timer VyS
    set DSw[ASw] = CyS
    set ASw = ASw + 1
    if vB[LyS] == 0 then
        if LyS == 0 then
            call tNr("Nullpointer exception when calling Table.loadTimer", "when calling error in Table, line 129")
        else
            call tNr("Called Table.loadTimer on invalid object.", "when calling error in Table, line 129")
        endif
    endif
    set VyS = HNi(LyS, XyS)
    set ASw = ASw - 1
    set QIw = VyS
    set VyS = null
    return QIw
endfunction
function HCs takes integer PCs, string ACs returns timer
    local timer DCs
    set DSw[ASw] = ACs
    set ASw = ASw + 1
    call nfS(ZJ, $00000000, ConvertFogState(PCs), "when calling saveFogState in TypeCasting, line 116")
    set DCs = ByS(ZJ, $00000000, "when calling loadTimer in TypeCasting, line 117")
    set ASw = ASw - 1
    set BIw = DCs
    set DCs = null
    return BIw
endfunction
function Lhi takes string Jhi returns integer
    local integer Khi
    set DSw[ASw] = Jhi
    set ASw = ASw + 1
    if NX == 0 then
        if MX < 32768 then
            set MX = MX + 1
            set Khi = MX
            set wC[Khi] = 849
        else
            call tNr("Out of memory: Could not create CallbackSingle_doAfter_Imp3DragonFortress.", "when calling error in Imp3DragonFortress, line 155")
            set Khi = 0
        endif
    else
        set NX = NX - 1
        set Khi = BX[NX]
        set wC[Khi] = 849
    endif
    set ASw = ASw - 1
    return Khi
endfunction
function aer takes hashtable per, integer eer, integer qer returns rect
    return LoadRectHandle(per, eer, qer)
endfunction
function Xfu takes integer Kfu, integer Lfu returns rect
    return aer(qJ, Kfu, Lfu)
endfunction
function Arr takes integer Zrr, integer Urr, string Irr returns rect
    local rect Prr
    set DSw[ASw] = Irr
    set ASw = ASw + 1
    if vB[Zrr] == 0 then
        if Zrr == 0 then
            call tNr("Nullpointer exception when calling Table.loadRect", "when calling error in Table, line 147")
        else
            call tNr("Called Table.loadRect on invalid object.", "when calling error in Table, line 147")
        endif
    endif
    set Prr = Xfu(Zrr, Urr)
    set ASw = ASw - 1
    set qPw = Prr
    set Prr = null
    return qPw
endfunction
function Snu takes integer snu, string tnu returns rect
    local rect inu
    set DSw[ASw] = tnu
    set ASw = ASw + 1
    call nfS(ZJ, $00000000, ConvertFogState(snu), "when calling saveFogState in TypeCasting, line 137")
    set inu = Arr(ZJ, $00000000, "when calling loadRect in TypeCasting, line 138")
    set ASw = ASw - 1
    set ZIw = inu
    set inu = null
    return ZIw
endfunction
function fjs takes unit ajs, integer njs, integer djs returns nothing
    call BlzSetUnitBaseDamage(ajs, njs, djs)
endfunction
function k6w takes string g6w, string h6w returns integer
    local integer F6w
    set DSw[ASw] = h6w
    set ASw = ASw + 1
    set F6w = ifi(Iji(g6w, "when calling unObfuscate in TerrainHighCliffSetup, line 129"))
    set ASw = ASw - 1
    return F6w
endfunction
function rOi takes integer Hoi, boolean Joi, string Koi returns nothing
    local unit Loi
    local integer Xoi
    local rect Coi
    local unit Voi
    local integer Boi
    local unit Noi
    local integer Moi
    local timer wOi
    local timer uOi
    set DSw[ASw] = Koi
    set ASw = ASw + 1
    set kW = kW - 1
    set Loi = hqs(xMi(xus(Hoi, "when calling getCustomPlayer in Imp3DragonFortress, line 137"), "when calling getCHero in Imp3DragonFortress, line 137"), "when calling getHero in Imp3DragonFortress, line 137")
    set Xoi = gJi(vW, "when calling iterator in Imp3DragonFortress, line 138")
    loop
        exitwhen not slr(Xoi, "when calling hasNext in Imp3DragonFortress, line 138")
        set Coi = Snu(Gjs(Xoi, "when calling next in Imp3DragonFortress, line 138"), "when calling rectFromIndex in Imp3DragonFortress, line 138")
        if Jyr(vW, Ici(Coi), "when calling has in Imp3DragonFortress, line 139") then
            set Voi = iCu(wps(vW, Ici(Coi), "when calling get in Imp3DragonFortress, line 140"), "when calling unitFromIndex in Imp3DragonFortress, line 140")
            if Voi == Loi or Snu(wps(mW, Hoi, "when calling get in Imp3DragonFortress, line 141"), "when calling rectFromIndex in Imp3DragonFortress, line 141") == Coi then
    if Joi then
                    set xW = xW + 1
    else
                    set jW = jW + 1
                    set Boi = c5r(gW, "when calling iterator in Imp3DragonFortress, line 150")
                    loop
                        exitwhen not Tji(Boi)
                        set Noi = iCu(LXi(Boi), "when calling unitFromIndex in Imp3DragonFortress, line 150")
                        call fjs(Noi, k6w("7329298529", "when calling unObfuscateInt in Imp3DragonFortress, line 151") + jW * k6w("7329298585", "when calling unObfuscateInt in Imp3DragonFortress, line 151") + GetRandomInt($00000001, $000003E7), $00000000)
                        call GYS(Noi, xvt(WW))
                    endloop
                    call vms(Boi, "when calling close in Imp3DragonFortress, line 150")
                    if jW >= 4 then
                        set PW = true
                        set Moi = Lhi("when calling alloc_CallbackSingle_doAfter_Imp3DragonFortress in Imp3DragonFortress, line 155")
                        call RUs(Moi)
                        call Ybr(3., Moi, "when calling doAfter in Imp3DragonFortress, line 155")
                    endif
    endif
    if Loi != null then
                    call eys(QW, Aei(Loi), "when calling remove in Imp3DragonFortress, line 158")
    endif
    call u5w(vW, Ici(Coi), "when calling remove in Imp3DragonFortress, line 159")
    if Jyr(LW, Ici(Coi), "when calling has in Imp3DragonFortress, line 160") then
                    set uOi = HCs(wps(LW, Ici(Coi), "when calling get in Imp3DragonFortress, line 160"), "when calling timerFromIndex in Imp3DragonFortress, line 160")
    else
                    set uOi = null
    endif
    set wOi = uOi
    if wOi != null then
                    call Hus(wOi)
    endif
    call GVw(KW, Ici(Coi), B5r(0.), "when calling put in Imp3DragonFortress, line 164")
    call u5w(mW, Hoi, "when calling remove in Imp3DragonFortress, line 165")
    exitwhen true
            endif
        endif
    endloop
    call Ejr(Xoi, "when calling close in Imp3DragonFortress, line 138")
    set ASw = ASw - 1
    set Loi = null
    set Coi = null
    set Voi = null
    set Noi = null
    set wOi = null
    set uOi = null
endfunction
function uCi takes unit XXi, string CXi returns nothing
    local player VXi
    local integer BXi
    local integer NXi
    local integer MXi
    local integer wCi
    set DSw[ASw] = CXi
    set ASw = ASw + 1
    set VXi = eDs(XXi)
    set BXi = hgr(VXi)
    if Jyr(aW, BXi, "when calling has in Imp3DragonFortress, line 351") and(not TYt(wps(aW, BXi, "when calling get in Imp3DragonFortress, line 351"))) then
        call GVw(aW, BXi, O_i(true), "when calling put in Imp3DragonFortress, line 352")
        set NXi = NHw(pW, BXi, "when calling get in Imp3DragonFortress, line 354")
        set MXi = wps(qW, BXi, "when calling get in Imp3DragonFortress, line 355")
        if MXi > 0 then
            call GVw(qW, BXi, wps(qW, BXi, "when calling get in Imp3DragonFortress, line 358") - 1, "when calling put in Imp3DragonFortress, line 358")
            if MXi == 2 and U9[NXi] != null then
    call uRi(U9[NXi])
    set U9[NXi] = null
            endif
            if MXi == 1 and Z9[NXi] != null then
    call uRi(Z9[NXi])
    set Z9[NXi] = null
            endif
            call Qlt(XXi, MXi - 1, "when calling imp3MazeResetActualStage in Imp3DragonFortress, line 365")
        else
            if EW ==- 1 then
    call GLw(XXi, oQu(Ul), Gcw, "when calling heroUnitMove in Imp3DragonFortress, line 369")
    call Kcs(GgS(eDs(XXi), "when calling getCustomPlayer in Imp3DragonFortress, line 370"), 2500., "when calling setCameraZoomLevel in Imp3DragonFortress, line 370")
    call DisplayTimedTextToForce(Rc[$0000000C], 5., "Player " + ZXr(aD[BXi]) + " failed to complete the maze. Dragons are getting stronger!")
            else
    set wCi = WJt("when calling alloc_CallbackSingle_nullTimer_Imp3DragonFortress in Imp3DragonFortress, line 375")
    call RUs(wCi)
    set b9[wCi] = XXi
    call ccr(wCi, "when calling nullTimer in Imp3DragonFortress, line 375")
            endif
            call pnr(BXi, false, false, "when calling imp3EffectsResetForPlayer in Imp3DragonFortress, line 378")
            call rOi(BXi, false, "when calling imp3OnMazeEnd in Imp3DragonFortress, line 379")
        endif
    endif
    set ASw = ASw - 1
    set VXi = null
endfunction
function xki takes string oki, real Oki, real lki, integer bki, integer yki, integer pki, real eki, real qki, rect aki, string nki returns nothing
    local real dki
    local real fki
    local effect Rki
    local effect Tki
    local effect Yki
    local effect Gki
    local group gki
    local group hki
    local unit Fki
    local real kki
    local real jki
    set DSw[ASw] = nki
    set ASw = ASw + 1
    set kki = oQu(aki)
    set jki = Gcw
    set dki = kki
    set fki = jki
    set Tki = DpS(oki, ATS(dki, fki, qki), VSw, BSw)
    call Wwu(Tki, Oki)
    set Yki = Tki
    call yYi(Yki, lki, "when calling destrAdvTimed in Imp3DragonFortress, line 585")
    set Rki = Yki
    if bki != sE or yki != tE or pki != iE then
        call Xht(Rki, bki, yki, pki)
    endif
    if eki !=- 1. then
        set Gki = Rki
        call iNw(Gki, eki)
    endif
    set gki = LLt(dki, fki, bW, "when calling getUnitsInRange in Imp3DragonFortress, line 592")
    set hki = XbS(gki)
    loop
        exitwhen not hJw(hki)
        set Fki = tPr(hki)
        if t_u(Fki) then
            call uCi(Fki, "when calling imp3MazeCheckDeath in Imp3DragonFortress, line 595")
        endif
    endloop
    call lxs(hki)
    call Sju(gki, "when calling release in Imp3DragonFortress, line 596")
    set ASw = ASw - 1
    set Rki = null
    set Tki = null
    set Yki = null
    set Gki = null
    set gki = null
    set hki = null
    set Fki = null
endfunction
function sjr takes integer wjr, string ujr returns nothing
    local integer rjr
    set DSw[ASw] = ujr
    set ASw = ASw + 1
    set rjr = wjr
    if rjr == 0 then
        call xki(eE, qE, aE, nE, dE, fE, RE, TE, dl, "when calling imp3MazeOnSpikesUnitHit in Imp3DragonFortress, line 649")
        call xki(eE, qE, aE, nE, dE, fE, RE, TE, Tl, "when calling imp3MazeOnSpikesUnitHit in Imp3DragonFortress, line 650")
        call xki(eE, qE, aE, nE, dE, fE, RE, TE, Yl, "when calling imp3MazeOnSpikesUnitHit in Imp3DragonFortress, line 651")
    elseif rjr == 1 then
        call xki(eE, qE, aE, nE, dE, fE, RE, TE, Gl, "when calling imp3MazeOnSpikesUnitHit in Imp3DragonFortress, line 653")
        call xki(vE, mE, QE, WE, EE, ZE, UE, IE, jy, "when calling imp3MazeOnSpikesUnitHit in Imp3DragonFortress, line 654")
        call xki(vE, mE, QE, WE, EE, ZE, UE, IE, vy, "when calling imp3MazeOnSpikesUnitHit in Imp3DragonFortress, line 655")
    elseif rjr == 2 then
        call xki(vE, mE, QE, WE, EE, ZE, UE, IE, my, "when calling imp3MazeOnSpikesUnitHit in Imp3DragonFortress, line 657")
        call xki(vE, mE, QE, WE, EE, ZE, UE, IE, gy, "when calling imp3MazeOnSpikesUnitHit in Imp3DragonFortress, line 658")
        call xki(CE, VE, BE, NE, ME, wZ, uZ, rZ, uy, "when calling imp3MazeOnSpikesUnitHit in Imp3DragonFortress, line 659")
    elseif rjr == 3 then
        call xki(CE, VE, BE, NE, ME, wZ, uZ, rZ, sy, "when calling imp3MazeOnSpikesUnitHit in Imp3DragonFortress, line 661")
        call xki(sZ, tZ, iZ, SZ, cZ, oZ, OZ, lZ, Vb, "when calling imp3MazeOnSpikesUnitHit in Imp3DragonFortress, line 662")
        call xki(sZ, tZ, iZ, SZ, cZ, oZ, OZ, lZ, Nb, "when calling imp3MazeOnSpikesUnitHit in Imp3DragonFortress, line 663")
    endif
    set ASw = ASw - 1
endfunction
function yNw takes string SNw returns nothing
    local integer cNw
    local integer oNw
    local integer ONw
    local integer lNw
    local integer bNw
    set DSw[ASw] = SNw
    set ASw = ASw + 1
    if b8S($00000014) then
        call OLt("when calling imp3SpikesRunLoopRestart0 in Imp3DragonFortress, line 600")
    endif
    if Jyr(eW, $00000000, "when calling has in Imp3DragonFortress, line 602") then
        set oNw = wps(eW, $00000000, "when calling get in Imp3DragonFortress, line 602")
    else
        set oNw = 0
    endif
    set cNw = oNw
    if b8S($0000000A) then
        set cNw = GetRandomInt($00000000, $00000003)
    endif
    set bNw = eW
    if cNw == 3 then
        set ONw = 0
    else
        set ONw = cNw + 1
    endif
    call GVw(bNw, $00000000, ONw, "when calling put in Imp3DragonFortress, line 605")
    set lNw = cNw
    if lNw == 0 then
        call sjr($00000000, "when calling spikesRunLoop0_onTick in Imp3DragonFortress, line 609")
        call sjr($00000001, "when calling spikesRunLoop0_onTick in Imp3DragonFortress, line 610")
        call sjr($00000002, "when calling spikesRunLoop0_onTick in Imp3DragonFortress, line 611")
        call sjr($00000003, "when calling spikesRunLoop0_onTick in Imp3DragonFortress, line 612")
    elseif lNw == 1 then
        call sjr($00000000, "when calling spikesRunLoop0_onTick in Imp3DragonFortress, line 614")
        call sjr($00000003, "when calling spikesRunLoop0_onTick in Imp3DragonFortress, line 615")
    elseif lNw == 2 then
        call sjr($00000001, "when calling spikesRunLoop0_onTick in Imp3DragonFortress, line 617")
        call sjr($00000002, "when calling spikesRunLoop0_onTick in Imp3DragonFortress, line 618")
    elseif lNw == 3 then
        call sjr($00000000, "when calling spikesRunLoop0_onTick in Imp3DragonFortress, line 620")
        call sjr($00000002, "when calling spikesRunLoop0_onTick in Imp3DragonFortress, line 621")
    endif
    set ASw = ASw - 1
endfunction
function E4t takes nothing returns nothing
    set ASw = 0
    call yNw("via function reference Imp3DragonFortress, line 563")
endfunction
function EXt takes rect QXt, boolexpr WXt returns group
    set WG = CreateGroup()
    call GroupEnumUnitsInRect(WG, QXt, WXt)
    call DestroyBoolExpr(WXt)
    return WG
endfunction
function EBu takes nothing returns nothing
    set wt = GetRectCenter(bp)
    set ut = GetRectCenter(cp)
    call CreateNUnitsAtLoc($00000004, $6E303149, Player($0000000A), wt, bj_UNIT_FACING)
    call CreateNUnitsAtLoc($00000003, $6E30314A, Player($0000000A), wt, bj_UNIT_FACING)
    set eO = EXt(Cl, Condition(Uyw))
    call ForGroupBJ(eO, Iyw)
    call DestroyGroup(eO)
    call RemoveLocation(wt)
    call RemoveLocation(ut)
endfunction
function EFs takes nothing returns boolean
    return GetUnitTypeId(GetTriggerUnit()) == 1211117876 and GetUnitTypeId(GetOrderTargetUnit()) == 1747989063 and IsPlayerInForce(GetOwningPlayer(GetTriggerUnit()), rt) == false and IsUnitInGroup(GetTriggerUnit(), kpu(300., GetUnitLoc(GetOrderTargetUnit()))) and GetHeroLevel(GetTriggerUnit()) >= 150
endfunction
function EKs takes nothing returns boolean
    set HF = 0
    return true
endfunction
function Odr takes nothing returns unit
    return AJ[DJ - 1]
endfunction
function LDs takes integer JDs, string KDs returns nothing
    set DSw[ASw] = KDs
    set ASw = ASw + 1
    if gC[JDs] == 0 then
        call tNr("Double free: object of type EventListener", "when calling error in ClosureEvents, line 98")
    else
        set TC[YC] = JDs
        set YC = YC + 1
        set gC[JDs] = 0
    endif
    set ASw = ASw - 1
endfunction
function fVs takes integer nVs returns nothing
    local integer dVs = Rh[fM[nVs]]
    if dVs == nVs then
        set Rh[fM[nVs]] = RM[nVs]
    elseif TM[nVs] != 0 then
        set RM[TM[nVs]] = RM[nVs]
    endif
    if RM[nVs] != 0 then
        set TM[RM[nVs]] = TM[nVs]
    endif
    set dVs = Th[fM[nVs]]
    if dVs == nVs then
        set Th[fM[nVs]] = RM[nVs]
    elseif TM[nVs] != 0 then
        set RM[TM[nVs]] = RM[nVs]
    endif
    set RM[nVs] = 0
    set TM[nVs] = 0
endfunction
function stS takes integer utS, string rtS returns nothing
    set DSw[ASw] = rtS
    set ASw = ASw + 1
    call fVs(utS)
    call LDs(utS, "when calling dealloc_EventListener in ClosureEvents, line 206")
    set ASw = ASw - 1
endfunction
function c7t takes integer i7t, string S7t returns nothing
    set DSw[ASw] = S7t
    set ASw = ASw + 1
    if gC[i7t] == 0 then
        if i7t == 0 then
            call tNr("Nullpointer exception when calling EventListener.EventListener", "when calling error in ClosureEvents, line 98")
        else
            call tNr("Called EventListener.EventListener on invalid object.", "when calling error in ClosureEvents, line 98")
        endif
    endif
    call stS(i7t, "when calling destroyEventListener in ClosureEvents, line 98")
    set ASw = ASw - 1
endfunction
function lSu takes string OSu returns nothing
    call Jru(nD, $00000000, OSu)
endfunction
function BIt takes integer LIt, string XIt returns nothing
    local integer CIt
    local integer VIt
    set DSw[ASw] = XIt
    set ASw = ASw + 1
    if LIt > 0 then
        if Th[LIt] != 0 then
            call lSu("unregister unit has listeners. startid: " + fju(LIt))
            set CIt = Th[LIt]
            set Th[LIt] = 0
            loop
    exitwhen not(CIt != 0)
    set VIt = CIt
    set CIt = RM[CIt]
    call c7t(VIt, "when calling dispatch_EventListener_destroyEventListener in ClosureEvents, line 284")
            endloop
        endif
    endif
    set ASw = ASw - 1
endfunction
function Rfi takes integer afi, string nfi returns nothing
    local integer dfi
    local integer ffi
    set DSw[ASw] = nfi
    set ASw = ASw + 1
    if hM[afi] != null then
        set dfi = wps(fh, Aei(hM[afi]), "when calling get in ClosureEvents, line 60")
        if dfi == afi then
            call GVw(fh, Aei(hM[afi]), YM[afi], "when calling put in ClosureEvents, line 62")
        elseif GM[afi] != 0 then
            set YM[GM[afi]] = YM[afi]
        endif
    else
        set ffi = wps(dh, gM[afi], "when calling get in ClosureEvents, line 66")
        if ffi == afi then
            call GVw(dh, gM[afi], YM[afi], "when calling put in ClosureEvents, line 68")
        elseif GM[afi] != 0 then
            set YM[GM[afi]] = YM[afi]
        endif
    endif
    set GM[YM[afi]] = GM[afi]
    set YM[afi] = 0
    set GM[afi] = 0
    set ASw = ASw - 1
endfunction
function Toi takes integer foi, string Roi returns nothing
    set DSw[ASw] = Roi
    set ASw = ASw + 1
    if JC[foi] == 0 then
        call tNr("Double free: object of type OnCastListener", "when calling error in ClosureEvents, line 50")
    else
        set HC = HC + 1
        set JC[foi] = 0
    endif
    set ASw = ASw - 1
endfunction
function AwS takes integer IwS, string PwS returns nothing
    set DSw[ASw] = PwS
    set ASw = ASw + 1
    call Rfi(IwS, "when calling OnCastListener_onDestroy in ClosureEvents, line 58")
    call Toi(IwS, "when calling dealloc_OnCastListener in ClosureEvents, line 58")
    set ASw = ASw - 1
endfunction
function usu takes integer Mru, string wsu returns nothing
    set DSw[ASw] = wsu
    set ASw = ASw + 1
    if JC[Mru] == 0 then
        if Mru == 0 then
            call tNr("Nullpointer exception when calling OnCastListener.OnCastListener", "when calling error in ClosureEvents, line 50")
        else
            call tNr("Called OnCastListener.OnCastListener on invalid object.", "when calling error in ClosureEvents, line 50")
        endif
    endif
    call AwS(Mru, "when calling destroyOnCastListener in ClosureEvents, line 50")
    set ASw = ASw - 1
endfunction
function RiS takes unit eiS, string qiS returns nothing
    local integer aiS
    local integer niS
    local integer diS
    local integer fiS
    set DSw[ASw] = qiS
    set ASw = ASw + 1
    if ocu(eiS) then
        call BIt(ftu(eiS), "when calling unregisterEvents in ClosureEvents, line 260")
        if Jyr(fh, Aei(eiS), "when calling has in ClosureEvents, line 261") then
            set aiS = wps(fh, Aei(eiS), "when calling get in ClosureEvents, line 262")
            call klS(fh, Aei(eiS), "when calling remove in ClosureEvents, line 263")
            loop
    exitwhen not(aiS != 0)
    set niS = aiS
    set aiS = YM[aiS]
    call usu(niS, "when calling dispatch_OnCastListener_destroyOnCastListener in ClosureEvents, line 267")
            endloop
        endif
        if Jyr(fh, Aei(eiS), "when calling has in ClosureEvents, line 268") then
            set diS = wps(fh, Aei(eiS), "when calling get in ClosureEvents, line 269")
            loop
    exitwhen not(diS != 0)
    set fiS = diS
    set diS = YM[diS]
    call usu(fiS, "when calling dispatch_OnCastListener_destroyOnCastListener in ClosureEvents, line 273")
            endloop
        endif
    endif
    set ASw = ASw - 1
endfunction
function HZt takes string DZt returns nothing
    set DSw[ASw] = DZt
    set ASw = ASw + 1
    call RiS(Odr(), "when calling unregisterEventsForUnit in ClosureEvents, line 290")
    set ASw = ASw - 1
endfunction
function ELu takes nothing returns nothing
    set ASw = 0
    call HZt("via function reference ClosureEvents, line 290")
endfunction
function ELw takes nothing returns nothing
    call DisplayTextToForce(MwS(GetOwningPlayer(GetTriggerUnit())), "|cffffcc00Angel Dawn|r : |cff87ceebYou are worthy enough to enter the Rite of Passage...at the end lies the pathway to the Unknown Regions. However, you must transverse it in 1 minute...get moving.")
    set Ms = GetRectCenter(cp)
    call SetUnitPositionLoc(GetTriggerUnit(), Ms)
    call PanCameraToTimedLocForPlayer(GetOwningPlayer(GetTriggerUnit()), Ms, 0.)
    call TriggerExecute(MT)
    call RemoveLocation(Ms)
endfunction
function QNs takes nothing returns boolean
    return IsUnitInGroup(GetEnumUnit(), Kc) == false and IsUnitInGroup(GetEnumUnit(), Vc) == false and IsUnitInGroup(GetEnumUnit(), Lc) == false
endfunction
function q0u takes nothing returns boolean
    return Bc[1 + GetPlayerId(GetOwningPlayer(GetEnumUnit()))] == 4 and IsUnitInGroup(GetEnumUnit(), Lc) == false
endfunction
function ENr takes nothing returns nothing
    if QNs() then
        call GroupAddUnit(Kc, GetEnumUnit())
        call CreateTextTagUnitBJ("|cffffcc00Nice Dodge!|r", GetEnumUnit(), 0., 14., 100., 100., 100., 0.)
        call SetTextTagVelocityBJ(bj_lastCreatedTextTag, 45., 90.)
        call SetTextTagPermanentBJ(bj_lastCreatedTextTag, false)
        call SetTextTagFadepointBJ(bj_lastCreatedTextTag, 1.5)
        call SetTextTagLifespanBJ(bj_lastCreatedTextTag, 2.5)
    elseif q0u() then
        call GroupRemoveUnit(Kc, GetEnumUnit())
        call GroupAddUnit(Vc, GetEnumUnit())
        call CreateTextTagUnitBJ("|cffff0000Overdodge!|r", GetEnumUnit(), 0., 15., 100., 100., 100., 0.)
        call SetTextTagVelocityBJ(bj_lastCreatedTextTag, 45., 90.)
        call SetTextTagPermanentBJ(bj_lastCreatedTextTag, false)
        call SetTextTagFadepointBJ(bj_lastCreatedTextTag, 1.5)
        call SetTextTagLifespanBJ(bj_lastCreatedTextTag, 2.5)
    endif
endfunction
function XSr takes nothing returns boolean
    return FS[1 + GetPlayerId(GetTriggerPlayer())] == 1211118160 or FS[1 + GetPlayerId(GetTriggerPlayer())] == 1211118161 or FS[1 + GetPlayerId(GetTriggerPlayer())] == 1211118149 or FS[1 + GetPlayerId(GetTriggerPlayer())] == 1211118150 or FS[1 + GetPlayerId(GetTriggerPlayer())] == 1211118152 or FS[1 + GetPlayerId(GetTriggerPlayer())] == 1211118155
endfunction
function Tcu takes nothing returns boolean
    return XSr()
endfunction
function q9S takes nothing returns boolean
    return FS[1 + GetPlayerId(GetTriggerPlayer())] == 1211118157 or FS[1 + GetPlayerId(GetTriggerPlayer())] == 1211118156 or FS[1 + GetPlayerId(GetTriggerPlayer())] == 1211118131 or FS[1 + GetPlayerId(GetTriggerPlayer())] == 1211118132
endfunction
function V1r takes nothing returns boolean
    return q9S()
endfunction
function keu takes nothing returns boolean
    return FS[1 + GetPlayerId(GetTriggerPlayer())] == 1211118158 or FS[1 + GetPlayerId(GetTriggerPlayer())] == 1211118159 or FS[1 + GetPlayerId(GetTriggerPlayer())] == 1211118147 or FS[1 + GetPlayerId(GetTriggerPlayer())] == 1211118146 or FS[1 + GetPlayerId(GetTriggerPlayer())] == 1211118162 or FS[1 + GetPlayerId(GetTriggerPlayer())] == 1211118163 or FS[1 + GetPlayerId(GetTriggerPlayer())] == 1211118164 or FS[1 + GetPlayerId(GetTriggerPlayer())] == 1211118165
endfunction
function sli takes nothing returns boolean
    return keu()
endfunction
function ERi takes nothing returns nothing
    if V1r() then
        call DisplayTextToForce(MwS(GetTriggerPlayer()), "|Cff00ff00You have successfully learnt a Limit Break skill.|r")
        call UnitAddAbility(kS[1 + GetPlayerId(GetTriggerPlayer())], $41303938)
        set oS[1 + GetPlayerId(GetTriggerPlayer())] = 1
        set sS[1 + GetPlayerId(GetTriggerPlayer())] = 2
    endif
    if Tcu() then
        call DisplayTextToForce(MwS(GetTriggerPlayer()), "|Cff00ff00You have successfully learnt a Limit Break skill.|r")
        call UnitAddAbility(kS[1 + GetPlayerId(GetTriggerPlayer())], $41303947)
        set oS[1 + GetPlayerId(GetTriggerPlayer())] = 1
        set sS[1 + GetPlayerId(GetTriggerPlayer())] = 2
    endif
    if sli() then
        call DisplayTextToForce(MwS(GetTriggerPlayer()), "|Cff00ff00You have successfully learnt a Limit Break skill.|r")
        call UnitAddAbility(kS[1 + GetPlayerId(GetTriggerPlayer())], $41303854)
        set oS[1 + GetPlayerId(GetTriggerPlayer())] = 1
        set sS[1 + GetPlayerId(GetTriggerPlayer())] = 2
    endif
endfunction
function LZr takes nothing returns boolean
    return IsUnitEnemy(GetFilterUnit(), GetOwningPlayer(GetTriggerUnit()))
endfunction
function xst takes nothing returns boolean
    return IsUnitAliveBJ(GetFilterUnit())
endfunction
function ERt takes nothing returns boolean
    return GetBooleanAnd(xst(), LZr())
endfunction
function EZt takes nothing returns nothing
    call YJs(GetEnumPlayer(), aO, 2.)
endfunction
function Eei takes nothing returns nothing
    set pS[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))] = GetTriggerUnit()
    call SetPlayerStateBJ(GetOwningPlayer(pS[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))]), PLAYER_STATE_RESOURCE_FOOD_USED, $00000000)
    set eS[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))] = GetSpellTargetUnit()
    set qS[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))] = GetUnitLoc(GetTriggerUnit())
    set aS[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))] = GetUnitLoc(GetSpellTargetUnit())
    call PauseUnit(pS[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))], true)
    call PauseUnit(eS[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))], true)
    call SetUnitInvulnerable(pS[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))], true)
    call SetUnitInvulnerable(eS[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))], true)
    set nS[$00000001] = Shu(qS[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))], 600., 90.)
    set nS[$00000002] = Shu(qS[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))], 600., 160.)
    set nS[$00000003] = Shu(qS[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))], 600., 235.)
    set nS[$00000004] = Shu(qS[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))], 600., 305.)
    set nS[$00000005] = Shu(qS[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))], 600., 20.)
    call AddLightningLoc("DRAM", nS[$00000001], nS[$00000003])
    set dS[$00000001] = bj_lastCreatedLightning
    call AddLightningLoc("DRAM", nS[$00000005], nS[$00000003])
    set dS[$00000002] = bj_lastCreatedLightning
    call AddLightningLoc("DRAM", nS[$00000005], nS[$00000002])
    set dS[$00000003] = bj_lastCreatedLightning
    call AddLightningLoc("DRAM", nS[$00000002], nS[$00000004])
    set dS[$00000004] = bj_lastCreatedLightning
    call AddLightningLoc("DRAM", nS[$00000004], nS[$00000001])
    set dS[$00000005] = bj_lastCreatedLightning
    call AddLightningLoc("DRAM", nS[$00000001], nS[$00000003])
    set dS[$00000006] = bj_lastCreatedLightning
    call AddLightningLoc("DRAM", nS[$00000005], nS[$00000003])
    set dS[$00000007] = bj_lastCreatedLightning
    call AddLightningLoc("DRAM", nS[$00000005], nS[$00000002])
    set dS[$00000008] = bj_lastCreatedLightning
    call AddLightningLoc("DRAM", nS[$00000002], nS[$00000004])
    set dS[$00000009] = bj_lastCreatedLightning
    call AddLightningLoc("DRAM", nS[$00000004], nS[$00000001])
    set dS[$0000000A] = bj_lastCreatedLightning
    call n6t(.5)
    call SetUnitAnimation(pS[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))], "spell")
    call SetUnitTimeScalePercent(pS[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))], 30.)
    call n6t(.1)
    call AddSpecialEffectLocBJ(qS[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))], "Abilities\\Spells\\Orc\\WarStomp\\WarStompCaster.mdl")
    call DestroyEffect(bj_lastCreatedEffect)
    call CreateTextTagUnitBJ("LIMIT BREAK!!!", pS[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))], 0., 15., 100., .0, .0, 0.)
    set fS[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))] = bj_lastCreatedTextTag
    call n6t(2.5)
    set Cc = 1
    loop
        exitwhen Cc > 10
        call DestroyLightning(dS[Cc])
        set Cc = Cc + 1
    endloop
    call DestroyTextTag(fS[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))])
    call TriggerSleepAction(.2)
    call CreateNUnitsAtLoc($00000001, $68303338, GetOwningPlayer(pS[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))]), qS[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))], 270.)
    call CreateTextTagUnitBJ("MARK OF THE WOLVERINE!!!", pS[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))], 0., 15., 100., .0, .0, 0.)
    call SetTextTagVelocityBJ(bj_lastCreatedTextTag, 64., 90.)
    call SetTextTagPermanentBJ(bj_lastCreatedTextTag, false)
    call SetTextTagFadepointBJ(bj_lastCreatedTextTag, 1.5)
    call SetTextTagLifespanBJ(bj_lastCreatedTextTag, 3.)
    call AddSpecialEffectTargetUnitBJ("right hand", pS[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))], "Abilities\\Weapons\\PhoenixMissile\\Phoenix_Missile.mdl")
    set TS[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))] = bj_lastCreatedEffect
    call TriggerSleepAction(.5)
    call SetUnitTimeScalePercent(pS[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))], 100.)
    set go = 1
    loop
        exitwhen go > 8
        call TriggerSleepAction(.12)
        set GS[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))] = GetRandomLocInRect(RectFromCenterSizeBJ(GetUnitLoc(eS[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))]), 60., 60.))
        call SetUnitPositionLoc(pS[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))], GS[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))])
        call SetUnitAnimation(pS[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))], "attack")
        call AddSpecialEffectLocBJ(GetUnitLoc(eS[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))]), "Abilities\\Spells\\Other\\Stampede\\StampedeMissileDeath.mdl")
        call DestroyEffect(bj_lastCreatedEffect)
        call GetPlayerId(GetOwningPlayer(GetTriggerUnit()))
        set gi = eS[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))]
        set hi = 1
        set Fi = GS[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))]
        set ki = 4.
        set ji = 200.
        set xi[$00000001] = "Abilities\\Spells\\Human\\FlakCannons\\FlakTarget.mdl"
        set xi[$00000002] = "Abilities\\Weapons\\AncientProtectorMissile\\AncientProtectorMissile.mdl"
        set vi = false
        call ConditionalTriggerExecute(dT)
        call RemoveLocation(GS[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))])
        set go = go + 1
    endloop
    call DestroyEffect(TS[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))])
    call SetUnitPositionLoc(pS[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))], qS[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))])
    call SetUnitInvulnerable(pS[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))], false)
    call SetUnitInvulnerable(eS[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))], false)
    call UnitDamageTargetBJ(pS[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))], eS[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))], 40000., ATTACK_TYPE_CHAOS, DAMAGE_TYPE_UNIVERSAL)
    call PauseUnit(pS[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))], false)
    call PauseUnit(eS[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))], false)
    call ResetUnitAnimation(pS[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))])
    call ResetUnitAnimation(eS[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))])
    call RemoveLocation(qS[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))])
    call RemoveLocation(aS[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))])
endfunction
function AOS takes unit IOS, real POS returns real
    set ecw = kEr(IOS)
    set qcw = L1t(IOS)
    set acw = POS
    return ecw
endfunction
function B2r takes unit V2r returns string
    return GetUnitName(V2r)
endfunction
function CHi takes string LHi returns integer
    local integer XHi
    set DSw[ASw] = LHi
    set ASw = ASw + 1
    if NX == 0 then
        if MX < 32768 then
            set MX = MX + 1
            set XHi = MX
            set wC[XHi] = 913
        else
            call tNr("Out of memory: Could not create CallbackSingle_doAfter_MonsterHunter_Weakness.", "when calling error in MonsterHunter_Weakness, line 27")
            set XHi = 0
        endif
    else
        set NX = NX - 1
        set XHi = BX[NX]
        set wC[XHi] = 913
    endif
    set ASw = ASw - 1
    return XHi
endfunction
function Fci takes unit Gci, integer gci, integer hci returns nothing
    call SetUnitAbilityLevel(Gci, gci, hci)
endfunction
function r3i takes string w3i returns integer
    local integer u3i
    set DSw[ASw] = w3i
    set ASw = ASw + 1
    if NX == 0 then
        if MX < 32768 then
            set MX = MX + 1
            set u3i = MX
            set wC[u3i] = 960
        else
            call tNr("Out of memory: Could not create CallbackSingle_doAfter_UnitItemUtils.", "when calling error in UnitItemUtils, line 227")
            set u3i = 0
        endif
    else
        set NX = NX - 1
        set u3i = BX[NX]
        set wC[u3i] = 960
    endif
    set ASw = ASw - 1
    return u3i
endfunction
function CJi takes unit PJi, integer AJi, integer DJi, real HJi, string JJi returns nothing
    local integer KJi
    local real LJi
    local integer XJi
    set DSw[ASw] = JJi
    set ASw = ASw + 1
    call V5S(PJi, AJi)
    call Fci(PJi, AJi, $00000001)
    set LJi = HJi
    set KJi = r3i("when calling alloc_CallbackSingle_doAfter_UnitItemUtils in UnitItemUtils, line 227")
    call RUs(KJi)
    set Csw[KJi] = PJi
    set XJi = AJi
    set Vsw[KJi] = XJi
    call Ybr(LJi, KJi, "when calling doAfter in UnitItemUtils, line 227")
    set ASw = ASw - 1
endfunction
function lKs takes unit cKs, integer oKs, integer OKs returns boolean
    call UnitAddAbility(cKs, oKs)
    call SetUnitAbilityLevel(cKs, oKs, OKs)
    return GetUnitAbilityLevel(cKs, oKs) == OKs
endfunction
function BFr takes unit HFr, integer JFr, integer KFr, string LFr returns boolean
    local boolean XFr
    local integer CFr
    local real VFr
    set DSw[ASw] = LFr
    set ASw = ASw + 1
    set XFr = false
    if l2s(Iji("H02F", "when calling unObfuscate in MonsterHunter_Weakness, line 16"), "when calling fromRawCode in MonsterHunter_Weakness, line 16") == JFr then
        if not Jyr(VP, Aei(HFr), "when calling has in MonsterHunter_Weakness, line 17") then
            call GVw(VP, Aei(HFr), O_i(false), "when calling put in MonsterHunter_Weakness, line 18")
        endif
        if (not TYt(wps(VP, Aei(HFr), "when calling get in MonsterHunter_Weakness, line 19")))and(not gSr(HFr, l2s(Iji("AImx", "when calling unObfuscate in MonsterHunter_Weakness, line 19"), "when calling fromRawCode in MonsterHunter_Weakness, line 19"))) then
            set XFr = true
            call GVw(VP, Aei(HFr), O_i(true), "when calling put in MonsterHunter_Weakness, line 21")
            call lKs(HFr, vP[KFr], KFr)
            call CJi(HFr, mP, QP, XP, "when calling applyBuffTimed in MonsterHunter_Weakness, line 24")
            set VFr = XP
            set CFr = CHi("when calling alloc_CallbackSingle_doAfter_MonsterHunter_Weakness in MonsterHunter_Weakness, line 27")
            call RUs(CFr)
            set tuw[CFr] = HFr
            set iuw[CFr] = KFr
            call Ybr(VFr, CFr, "when calling doAfter in MonsterHunter_Weakness, line 27")
        endif
    endif
    set ASw = ASw - 1
    return XFr
endfunction
function BkS takes string CkS returns integer
    local integer VkS
    set DSw[ASw] = CkS
    set ASw = ASw + 1
    if NX == 0 then
        if MX < 32768 then
            set MX = MX + 1
            set VkS = MX
            set wC[VkS] = 1050
        else
            call tNr("Out of memory: Could not create CallbackSingle_doAfter_addOnDamageFunc_doAfter_DDS.", "when calling error in DDS, line 395")
            set VkS = 0
        endif
    else
        set NX = NX - 1
        set VkS = BX[NX]
        set wC[VkS] = 1050
    endif
    set ASw = ASw - 1
    return VkS
endfunction
function dMw takes integer nMw returns real
    return nMw / UJ
endfunction
function D2w takes unit I2w, string P2w returns real
    local real A2w
    set DSw[ASw] = P2w
    set ASw = ASw + 1
    set A2w = 1.0
    if Jyr(kL, Aei(I2w), "when calling has in Voidless_extensions, line 102") then
        set A2w = dMw(wps(kL, Aei(I2w), "when calling get in Voidless_extensions, line 103"))
    endif
    set ASw = ASw - 1
    return A2w
endfunction
function JGi takes real DGi returns integer
    local integer HGi = P3w(DGi)
    if DGi < 0. and DGi - HGi != 0. then
        set HGi = HGi - 1
    endif
    return HGi
endfunction
function Aqu takes string Iqu returns integer
    local integer Pqu
    set DSw[ASw] = Iqu
    set ASw = ASw + 1
    if NX == 0 then
        if MX < 32768 then
            set MX = MX + 1
            set Pqu = MX
            set wC[Pqu] = 930
        else
            call tNr("Out of memory: Could not create CallbackSingle_doAfter_PVP.", "when calling error in PVP, line 245")
            set Pqu = 0
        endif
    else
        set NX = NX - 1
        set Pqu = BX[NX]
        set wC[Pqu] = 930
    endif
    set ASw = ASw - 1
    return Pqu
endfunction
function Riu takes nothing returns boolean
    return Zt[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))] >= 1
endfunction
function aSr takes unit qSr returns real
    return B8s(qSr, UNIT_STATE_MAX_LIFE)
endfunction
function rIs takes unit uIs returns real
    return aSr(uIs) - Udi(uIs)
endfunction
function rxt takes nothing returns boolean
    return GetUnitLifePercent(GetKillingUnit()) == 100.
endfunction
function ucr takes nothing returns boolean
    return bo[1 + GetPlayerId(GetOwningPlayer(GetKillingUnit()))] >= 3
endfunction
function v0r takes unit j0r, boolean x0r returns nothing
    call SetUnitInvulnerable(j0r, x0r)
endfunction
function L9u takes unit E9u, unit Z9u, player U9u, player I9u, string P9u returns nothing
    local unit A9u
    local unit D9u
    local player H9u
    local player J9u
    local integer K9u
    set DSw[ASw] = P9u
    set ASw = ASw + 1
    set A9u = E9u
    set D9u = Z9u
    set H9u = U9u
    set J9u = I9u
    if (not GpS(gQ, hgr(H9u), "when calling has in PVP, line 159"))and(not GpS(gQ, hgr(J9u), "when calling has in PVP, line 159")) and eDs(A9u) != H9u and eDs(D9u) != J9u then
        set ASw = ASw - 1
        set A9u = null
        set D9u = null
        set H9u = null
        set J9u = null
        return
    endif
    if (not GpS(gQ, hgr(H9u), "when calling has in PVP, line 164"))and eDs(A9u) == H9u then
        if eDs(D9u) != J9u and GpS(gQ, hgr(J9u), "when calling has in PVP, line 167") and Jyr(cD, hgr(J9u), "when calling has in PVP, line 167") then
            set D9u = iCu(wps(cD, hgr(J9u), "when calling get in PVP, line 168"), "when calling unitFromIndex in PVP, line 168")
            if Jyr(SD, Aei(D9u), "when calling has in PVP, line 170") then
    set A9u = iCu(wps(SD, Aei(D9u), "when calling get in PVP, line 171"), "when calling unitFromIndex in PVP, line 171")
    set H9u = eDs(A9u)
            endif
        elseif eDs(D9u) != J9u and(not GpS(gQ, hgr(J9u), "when calling has in PVP, line 175")) and Jyr(SD, Aei(D9u), "when calling has in PVP, line 176") then
            set J9u = eDs(D9u)
            if Jyr(SD, Aei(D9u), "when calling has in PVP, line 179") then
    set A9u = iCu(wps(SD, Aei(D9u), "when calling get in PVP, line 180"), "when calling unitFromIndex in PVP, line 180")
    set H9u = eDs(A9u)
            endif
        endif
    endif
    if (not GpS(gQ, hgr(J9u), "when calling has in PVP, line 183"))and eDs(D9u) == J9u then
        if eDs(A9u) != H9u and GpS(gQ, hgr(H9u), "when calling has in PVP, line 186") and Jyr(cD, hgr(H9u), "when calling has in PVP, line 186") then
            set A9u = iCu(wps(cD, hgr(H9u), "when calling get in PVP, line 187"), "when calling unitFromIndex in PVP, line 187")
            if Jyr(SD, Aei(A9u), "when calling has in PVP, line 189") then
    set D9u = iCu(wps(SD, Aei(A9u), "when calling get in PVP, line 190"), "when calling unitFromIndex in PVP, line 190")
    set J9u = eDs(D9u)
            endif
        elseif eDs(A9u) != H9u and(not GpS(gQ, hgr(H9u), "when calling has in PVP, line 194")) and Jyr(SD, Aei(A9u), "when calling has in PVP, line 195") then
            set H9u = eDs(A9u)
            if Jyr(SD, Aei(A9u), "when calling has in PVP, line 198") then
    set D9u = iCu(wps(SD, Aei(A9u), "when calling get in PVP, line 199"), "when calling unitFromIndex in PVP, line 199")
    set J9u = eDs(D9u)
            endif
        endif
    endif
    if (not GpS(gQ, hgr(H9u), "when calling has in PVP, line 202"))or eDs(A9u) != H9u then
        if eDs(A9u) != H9u and GpS(gQ, hgr(H9u), "when calling has in PVP, line 204") and Jyr(cD, hgr(H9u), "when calling has in PVP, line 204") then
            set A9u = iCu(wps(cD, hgr(H9u), "when calling get in PVP, line 205"), "when calling unitFromIndex in PVP, line 205")
        elseif eDs(A9u) != H9u and(not GpS(gQ, hgr(H9u), "when calling has in PVP, line 208")) and Jyr(SD, Aei(A9u), "when calling has in PVP, line 209") then
            set H9u = eDs(A9u)
        endif
    endif
    if (not GpS(gQ, hgr(J9u), "when calling has in PVP, line 212"))or eDs(D9u) != J9u then
        if eDs(D9u) != J9u and GpS(gQ, hgr(J9u), "when calling has in PVP, line 214") and Jyr(cD, hgr(J9u), "when calling has in PVP, line 214") then
            set D9u = iCu(wps(cD, hgr(J9u), "when calling get in PVP, line 215"), "when calling unitFromIndex in PVP, line 215")
        elseif eDs(D9u) != J9u and(not GpS(gQ, hgr(J9u), "when calling has in PVP, line 217")) and Jyr(SD, Aei(D9u), "when calling has in PVP, line 218") then
            set J9u = eDs(D9u)
        endif
    endif
    if A9u != null and D9u != null and eDs(A9u) == H9u and eDs(D9u) == J9u and Jyr(cD, hgr(H9u), "when calling has in PVP, line 225") and iCu(wps(cD, hgr(H9u), "when calling get in PVP, line 225"), "when calling unitFromIndex in PVP, line 225") == A9u and Jyr(cD, hgr(J9u), "when calling has in PVP, line 226") and iCu(wps(cD, hgr(J9u), "when calling get in PVP, line 226"), "when calling unitFromIndex in PVP, line 226") == D9u and GpS(gQ, hgr(H9u), "when calling has in PVP, line 227") and GpS(gQ, hgr(J9u), "when calling has in PVP, line 227") and Jyr(SD, Aei(A9u), "when calling has in PVP, line 228") and iCu(wps(SD, Aei(A9u), "when calling get in PVP, line 228"), "when calling unitFromIndex in PVP, line 228") == D9u and Jyr(SD, Aei(D9u), "when calling has in PVP, line 229") and iCu(wps(SD, Aei(D9u), "when calling get in PVP, line 229"), "when calling unitFromIndex in PVP, line 229") == A9u then
        call klS(SD, Aei(D9u), "when calling remove in PVP, line 231")
        call klS(SD, Aei(A9u), "when calling remove in PVP, line 232")
        call klS(cD, hgr(J9u), "when calling remove in PVP, line 233")
        call klS(cD, hgr(H9u), "when calling remove in PVP, line 234")
        call UnitRemoveAbility(D9u, $42303137)
        call UnitRemoveAbility(D9u, o)
        call UnitRemoveAbility(A9u, $42303137)
        call UnitRemoveAbility(A9u, o)
        call v0r(D9u, true)
        call v0r(A9u, true)
        call Ggr(D9u)
        call Ggr(A9u)
        set K9u = Aqu("when calling alloc_CallbackSingle_doAfter_PVP in PVP, line 245")
        call RUs(K9u)
        set trw[K9u] = D9u
        set irw[K9u] = A9u
        call Ybr(2., K9u, "when calling doAfter in PVP, line 245")
        call DisplayTimedTextToForce(bj_FORCE_ALL_PLAYERS, 10., "|cffff8c00" + GetPlayerName(J9u) + "|r has defeated |cffff0000" + GetPlayerName(H9u) + "|r in a duel.")
        call SetUnitLifePercentBJ(A9u, 5.)
        call SetUnitManaPercentBJ(A9u, 5.)
        call SetPlayerAllianceStateBJ(H9u, J9u, $00000003)
        call SetPlayerAllianceStateBJ(J9u, H9u, $00000003)
        call ForceRemovePlayer(It, H9u)
        call ForceRemovePlayer(It, J9u)
        call ForceRemovePlayer(mt, H9u)
        call ForceRemovePlayer(mt, J9u)
        call ForceRemovePlayer(At, H9u)
        call ForceRemovePlayer(At, J9u)
        call ForceRemovePlayer(Lt, H9u)
        call ForceRemovePlayer(Lt, J9u)
        call ForceRemovePlayer(ws, H9u)
        call ForceRemovePlayer(ws, J9u)
        call ForceRemovePlayer(Xt, H9u)
        call ForceRemovePlayer(Xt, J9u)
        call PlaySoundBJ(Ye)
        if rxt() then
            call DisplayTimedTextToForce(bj_FORCE_ALL_PLAYERS, 10., "|cffff8c00" + GetPlayerName(J9u) + "|r has just achieved a |cffDAA520FLAWLESS VICTORY!|r")
            call PlaySoundBJ(me)
            set Zt[1 + GetPlayerId(J9u)] = Zt[1 + GetPlayerId(J9u)] + 2
        else
            set Zt[1 + GetPlayerId(J9u)] = Zt[1 + GetPlayerId(J9u)] + 1
        endif
        if rIs(D9u) == 0. then
            if Zt[1 + GetPlayerId(H9u)] >= 2 then
    set Zt[1 + GetPlayerId(H9u)] = Zt[1 + GetPlayerId(H9u)] - 2
            elseif Zt[1 + GetPlayerId(H9u)] == 1 then
    set Zt[1 + GetPlayerId(H9u)] = Zt[1 + GetPlayerId(H9u)] - 1
            endif
        elseif Riu() then
            set Zt[1 + GetPlayerId(H9u)] = Zt[1 + GetPlayerId(H9u)] - 1
        endif
        if ucr() then
            set bo[1 + GetPlayerId(J9u)] = 0
            call GroupRemoveUnit(yo, D9u)
            call n6t(.5)
            call DisplayTimedTextToForce(bj_FORCE_ALL_PLAYERS, 8., "|cffffcc00" + GetPlayerName(J9u) + "|r is a |Cff00ff00COMBOWHORE!|r")
            call PlaySoundBJ(ve)
        endif
        call MultiboardSetItemValueBJ(bj_lastCreatedMultiboard, $00000002, 1 + GetPlayerId(J9u) + 1, I2S(Zt[1 + GetPlayerId(J9u)]))
        call MultiboardSetItemValueBJ(bj_lastCreatedMultiboard, $00000002, 1 + GetPlayerId(H9u) + 1, I2S(Zt[1 + GetPlayerId(H9u)]))
        call SelectUnitForPlayerSingle(A9u, H9u)
        call SelectUnitForPlayerSingle(D9u, J9u)
    endif
    set ASw = ASw - 1
    set A9u = null
    set D9u = null
    set H9u = null
    set J9u = null
endfunction
function tfS takes unit rfS, player sfS returns boolean
    return rfS != null and IsUnitAlly(rfS, sfS)
endfunction
function MAs takes unit BAs, unit NAs returns boolean
    return BAs != null and NAs != null and tfS(BAs, eDs(NAs))
endfunction
function MQu takes unit LQu, integer XQu returns nothing
    local integer CQu = gir(LQu, XQu)
    local unit VQu = LQu
    local unit BQu
    local unit NQu
    call Q_s(VQu, XQu)
    set BQu = VQu
    call V5S(BQu, XQu)
    set NQu = BQu
    call Fci(NQu, XQu, CQu)
    set VQu = null
    set BQu = null
    set NQu = null
endfunction
function DdS takes nothing returns nothing
endfunction
function Nor takes nothing returns nothing
endfunction
function Uot takes nothing returns nothing
endfunction
function YnS takes nothing returns nothing
endfunction
function ayi takes nothing returns nothing
endfunction
function miS takes nothing returns nothing
endfunction
function Nkr takes nothing returns nothing
    call Uot()
    call Nor()
    call miS()
    call YnS()
    call DdS()
    call ayi()
endfunction
function Ges takes unit Yes returns real
    return B8s(Yes, UNIT_STATE_MAX_MANA)
endfunction
function aIt takes unit pIt, unitstate eIt, real qIt returns nothing
    call SetUnitState(pIt, eIt, B8s(pIt, eIt) + qIt)
endfunction
function Ziu takes unit Wiu, real Eiu returns nothing
    call aIt(Wiu, UNIT_STATE_MANA, Eiu)
endfunction
function t3i takes unit s3i returns real
    return B8s(s3i, UNIT_STATE_MANA)
endfunction
function KXw takes unit ZXw, real UXw, boolean IXw returns nothing
    local real HXw = t3i(ZXw)
    local real DXw = Ges(ZXw)
    local real PXw
    local real AXw
    local unit JXw
    if IXw then
        set PXw = bg
    else
        set PXw = lg
    endif
    if HXw <= DXw * PXw then
        set JXw = ZXw
        if IXw then
            set AXw = UXw / 2.
        else
            set AXw = UXw
        endif
        call Ziu(JXw, AXw)
    endif
    set JXw = null
endfunction
function W5S takes string m5S returns integer
    local integer Q5S
    set DSw[ASw] = m5S
    set ASw = ASw + 1
    if NX == 0 then
        if MX < 32768 then
            set MX = MX + 1
            set Q5S = MX
            set wC[Q5S] = 722
        else
            call tNr("Out of memory: Could not create CallbackSingle_doAfter_Archsage_WhiteWhizard_ArcaneManaBond.", "when calling error in Archsage_WhiteWhizard_ArcaneManaBond, line 139")
            set Q5S = 0
        endif
    else
        set NX = NX - 1
        set Q5S = BX[NX]
        set wC[Q5S] = 722
    endif
    set ASw = ASw - 1
    return Q5S
endfunction
function Ytr takes string etr, boolean qtr, real atr, real ntr, real dtr, real ftr, real Rtr, real Ttr returns lightning
    return AddLightningEx(etr, qtr, atr, ntr, dtr, ftr, Rtr, Ttr)
endfunction
function T6w takes real b6w, real y6w, real p6w, real e6w, real q6w, real a6w, string n6w returns nothing
    local lightning d6w
    local integer f6w
    local real R6w
    set DSw[ASw] = n6w
    set ASw = ASw + 1
    set d6w = Ytr("MFPB", true, b6w, y6w, p6w, e6w, q6w, a6w)
    set R6w = eg
    set f6w = W5S("when calling alloc_CallbackSingle_doAfter_Archsage_WhiteWhizard_ArcaneManaBond in Archsage_WhiteWhizard_ArcaneManaBond, line 139")
    call RUs(f6w)
    set LN[f6w] = d6w
    call Ybr(R6w, f6w, "when calling doAfter in Archsage_WhiteWhizard_ArcaneManaBond, line 139")
    set ASw = ASw - 1
    set d6w = null
endfunction
function mks takes unit xks, integer vks returns integer
    return BlzGetUnitBaseDamage(xks, vks)
endfunction
function imt takes unit tmt returns integer
    return F3r(mks(tmt, $00000000), mks(tmt, $00000001))
endfunction
function lht takes string oht returns integer
    local integer Oht
    set DSw[ASw] = oht
    set ASw = ASw + 1
    if NX == 0 then
        if MX < 32768 then
            set MX = MX + 1
            set Oht = MX
            set wC[Oht] = 721
        else
            call tNr("Out of memory: Could not create CallbackSingle_doAfter_Archsage_WhiteWhizard_ArcaneManaBond.", "when calling error in Archsage_WhiteWhizard_ArcaneManaBond, line 110")
            set Oht = 0
        endif
    else
        set NX = NX - 1
        set Oht = BX[NX]
        set wC[Oht] = 721
    endif
    set ASw = ASw - 1
    return Oht
endfunction
function UYi takes unit FYi, real kYi, unit jYi, string xYi returns nothing
    local real vYi
    local group mYi
    local integer QYi
    local group WYi
    local unit EYi
    local integer ZYi
    set DSw[ASw] = xYi
    set ASw = ASw + 1
    set vYi = (imt(jYi) - kYi) / (yg * gir(FYi, Mk)) * sg
    call KXw(FYi, vYi, false)
    set mYi = LLt(ANw(FYi), XSw, Sg, "when calling getUnitsInRange in Archsage_WhiteWhizard_ArcaneManaBond, line 101")
    set QYi = ig
    set WYi = XbS(mYi)
    loop
        exitwhen not hJw(WYi)
        set EYi = tPr(WYi)
        if QYi > 0 then
            if EYi != FYi and yXu(EYi) and t_u(EYi) and(not R9s(EYi, FYi)) and GpS(gQ, hgr(eDs(EYi)), "when calling has in Archsage_WhiteWhizard_ArcaneManaBond, line 105") then
    set QYi = QYi - 1
    call KXw(EYi, vYi, true)
    if not GpS(Og, Aei(EYi), "when calling has in Archsage_WhiteWhizard_ArcaneManaBond, line 108") then
                    call vwt(Og, Aei(EYi), "when calling add in Archsage_WhiteWhizard_ArcaneManaBond, line 109")
                    set ZYi = lht("when calling alloc_CallbackSingle_doAfter_Archsage_WhiteWhizard_ArcaneManaBond in Archsage_WhiteWhizard_ArcaneManaBond, line 110")
                    call RUs(ZYi)
                    set AN[ZYi] = EYi
                    call Ybr(.2, ZYi, "when calling doAfter in Archsage_WhiteWhizard_ArcaneManaBond, line 110")
                    call T6w(ATS(ANw(FYi), XSw, 25.), VSw, BSw, ATS(ANw(EYi), XSw, 25.), VSw, BSw, "when calling flashManaBondLightning in Archsage_WhiteWhizard_ArcaneManaBond, line 112")
    endif
            endif
        else
            exitwhen true
        endif
    endloop
    call lxs(WYi)
    call Sju(mYi, "when calling release in Archsage_WhiteWhizard_ArcaneManaBond, line 116")
    set ASw = ASw - 1
    set mYi = null
    set WYi = null
    set EYi = null
endfunction
function b9i takes unit O9i, real l9i returns nothing
    call J1u(O9i, UNIT_STATE_MANA, l9i)
endfunction
function cuS takes group iuS returns unit
    local integer SuS = smt(iuS)
    set CQ = 1 + GetRandomInt($00000000, SuS - 1)
    set VQ = null
    call ForGroup(iuS, Gmw)
    return VQ
endfunction
function dFs takes unit yFs, widget pFs, real eFs, boolean qFs, boolean aFs, attacktype nFs returns nothing
    call UnitDamageTarget(yFs, pFs, eFs, qFs, aFs, nFs, DAMAGE_TYPE_UNIVERSAL, WEAPON_TYPE_WHOKNOWS)
endfunction
function emi takes string ymi returns integer
    local integer pmi
    set DSw[ASw] = ymi
    set ASw = ASw + 1
    if NX == 0 then
        if MX < 32768 then
            set MX = MX + 1
            set pmi = MX
            set wC[pmi] = 1047
        else
            call tNr("Out of memory: Could not create CallbackSingle_doAfter_addOnDamageFunc_doAfter_DDS.", "when calling error in DDS, line 325")
            set pmi = 0
        endif
    else
        set NX = NX - 1
        set pmi = BX[NX]
        set wC[pmi] = 1047
    endif
    set ASw = ASw - 1
    return pmi
endfunction
function hPs takes group YPs returns integer
    local integer GPs = 0
    local group gPs = XbS(YPs)
    loop
        exitwhen not hJw(gPs)
        call tPr(gPs)
        set GPs = GPs + 1
    endloop
    call lxs(gPs)
    set gPs = null
    return GPs
endfunction
function FDt takes string hDt returns nothing
    call DisplayTimedTextToPlayer(nD, 0., 0., kD, hDt)
endfunction
function Lst takes hashtable Hst, integer Jst, integer Kst returns trigger
    return LoadTriggerHandle(Hst, Jst, Kst)
endfunction
function xyr takes integer kyr, integer jyr returns trigger
    return Lst(qJ, kyr, jyr)
endfunction
function VOi takes integer KOi, integer LOi, string XOi returns trigger
    local trigger COi
    set DSw[ASw] = XOi
    set ASw = ASw + 1
    if vB[KOi] == 0 then
        if KOi == 0 then
            call tNr("Nullpointer exception when calling Table.loadTrigger", "when calling error in Table, line 111")
        else
            call tNr("Called Table.loadTrigger on invalid object.", "when calling error in Table, line 111")
        endif
    endif
    set COi = xyr(KOi, LOi)
    set ASw = ASw - 1
    set TIw = COi
    set COi = null
    return TIw
endfunction
function LAr takes integer HAr, string JAr returns trigger
    local trigger KAr
    set DSw[ASw] = JAr
    set ASw = ASw + 1
    call nfS(ZJ, $00000000, ConvertFogState(HAr), "when calling saveFogState in TypeCasting, line 95")
    set KAr = VOi(ZJ, $00000000, "when calling loadTrigger in TypeCasting, line 96")
    set ASw = ASw - 1
    set kIw = KAr
    set KAr = null
    return kIw
endfunction
function bKi takes trigger lKi returns integer
    return YEi(lKi)
endfunction
function nqi takes unit cqi, string oqi returns nothing
    local integer Oqi
    local trigger lqi
    local trigger bqi
    local trigger yqi
    local trigger pqi
    local trigger eqi
    local trigger qqi
    local trigger aqi
    set DSw[ASw] = oqi
    set ASw = ASw + 1
    set Oqi = hgr(eDs(cqi))
    if GpS(gQ, Oqi, "when calling has in Imp3DragonFortress, line 393") then
        if Jyr(dW, Oqi, "when calling has in Imp3DragonFortress, line 394") then
            call bVr(LAr(wps(dW, Oqi, "when calling get in Imp3DragonFortress, line 395"), "when calling triggerFromIndex in Imp3DragonFortress, line 395"))
            call klS(dW, Oqi, "when calling remove in Imp3DragonFortress, line 396")
        endif
        if Jyr(fW, Oqi, "when calling has in Imp3DragonFortress, line 398") then
            call bVr(LAr(wps(fW, Oqi, "when calling get in Imp3DragonFortress, line 399"), "when calling triggerFromIndex in Imp3DragonFortress, line 399"))
            call klS(fW, Oqi, "when calling remove in Imp3DragonFortress, line 400")
        endif
        set bqi = CreateTrigger()
        call VeS(bqi, cqi, EVENT_UNIT_DEATH)
        set yqi = bqi
        call dUs(yqi, Condition(Cmw))
        set pqi = yqi
        call B2S(pqi, Vmw)
        set lqi = pqi
        call GVw(dW, Oqi, bKi(lqi), "when calling put in Imp3DragonFortress, line 407")
        set qqi = CreateTrigger()
        call WtS(qqi, aD[Oqi], EVENT_PLAYER_LEAVE)
        set aqi = qqi
        call B2S(aqi, Bmw)
        set eqi = aqi
        call GVw(fW, Oqi, bKi(eqi), "when calling put in Imp3DragonFortress, line 412")
    endif
    set ASw = ASw - 1
    set lqi = null
    set bqi = null
    set yqi = null
    set pqi = null
    set eqi = null
    set qqi = null
    set aqi = null
endfunction
function xZt takes string kZt returns integer
    local integer jZt
    set DSw[ASw] = kZt
    set ASw = ASw + 1
    if NX == 0 then
        if MX < 32768 then
            set MX = MX + 1
            set jZt = MX
            set wC[jZt] = 851
        else
            call tNr("Out of memory: Could not create CallbackSingle_doAfter_Imp3DragonFortress.", "when calling error in Imp3DragonFortress, line 485")
            set jZt = 0
        endif
    else
        set NX = NX - 1
        set jZt = BX[NX]
        set wC[jZt] = 851
    endif
    set ASw = ASw - 1
    return jZt
endfunction
function xAi takes unit gAi, string hAi returns nothing
    local integer FAi
    local integer kAi
    local real jAi
    set DSw[ASw] = hAi
    set ASw = ASw + 1
    call GVw(qW, hgr(eDs(gAi)), $00000002, "when calling put in Imp3DragonFortress, line 473")
    call GVw(aW, hgr(eDs(gAi)), O_i(false), "when calling put in Imp3DragonFortress, line 474")
    set FAi = NHw(pW, hgr(eDs(gAi)), "when calling get in Imp3DragonFortress, line 476")
    if Z9[FAi] != null then
        call uRi(Z9[FAi])
        set Z9[FAi] = null
    endif
    if U9[FAi] != null then
        call uRi(U9[FAi])
        set U9[FAi] = null
    endif
    set Z9[FAi] = mXi(gAi, "Abilities/Spells/Items/AIso/BIsvTarget.mdl", gF)
    set jAi = 3.334 * .5
    set kAi = xZt("when calling alloc_CallbackSingle_doAfter_Imp3DragonFortress in Imp3DragonFortress, line 485")
    call RUs(kAi)
    set y9[kAi] = FAi
    set p9[kAi] = gAi
    call Ybr(jAi, kAi, "when calling doAfter in Imp3DragonFortress, line 485")
    call nqi(gAi, "when calling initDeathTrigger in Imp3DragonFortress, line 488")
    call GVw(GW, hgr(eDs(gAi)), $00000000, "when calling put in Imp3DragonFortress, line 492")
    set ASw = ASw - 1
endfunction
function Cls takes unit Els, rect Zls, string Uls returns nothing
    local real Ils
    local real Pls
    local string Als
    local string Dls
    local timer Hls
    local timer Jls
    local integer Kls
    local real Lls
    local real Xls
    set DSw[ASw] = Uls
    set ASw = ASw + 1
    set Lls = oQu(Snu(wps(JW, Ici(Zls), "when calling get in Imp3DragonFortress, line 495"), "when calling rectFromIndex in Imp3DragonFortress, line 495"))
    set Xls = Gcw
    set Ils = Lls
    set Pls = Xls
    call iUr(vW, Ici(Zls), Aei(Els), "when calling put in Imp3DragonFortress, line 496")
    call vwt(QW, Aei(Els), "when calling add in Imp3DragonFortress, line 497")
    call GLw(Els, Ils, Pls, "when calling heroUnitMove in Imp3DragonFortress, line 498")
    set kW = kW + 1
    if Jyr(HW, Ici(Zls), "when calling has in Imp3DragonFortress, line 500") then
        set Dls = nPr(wps(HW, Ici(Zls), "when calling get in Imp3DragonFortress, line 500"), "when calling stringFromIndex in Imp3DragonFortress, line 500")
    else
        set Dls = ""
    endif
    set Als = "The " + Dls
    call dii(Als + Iji(" Dragon has teleported you to his maze!", "when calling unObfuscate in Imp3DragonFortress, line 501"), 5., eDs(Els))
    if Jyr(LW, Ici(Zls), "when calling has in Imp3DragonFortress, line 503") then
        set Jls = HCs(wps(LW, Ici(Zls), "when calling get in Imp3DragonFortress, line 503"), "when calling timerFromIndex in Imp3DragonFortress, line 503")
    else
        set Jls = null
    endif
    set Hls = Jls
    if Hls != null then
        call Hus(Hls)
        set Kls = YEi(Zls)
        if Kls == YEi(Il) then
            call nnr(Hls, 1., Nmw)
        elseif Kls == YEi(Pl) then
            call nnr(Hls, 1., Mmw)
        elseif Kls == YEi(Al) then
            call nnr(Hls, 1., wQw)
        elseif Kls == YEi(Dl) then
            call nnr(Hls, 1., uQw)
        else
            call FDt("Invalid rect called for imp3InitPlayerLifesAndTimer!")
        endif
    endif
    call xAi(Els, "when calling imp3InitPlayerLifesAndTimerOfUnit in Imp3DragonFortress, line 519")
    call iUr(mW, hgr(eDs(Els)), Ici(Zls), "when calling put in Imp3DragonFortress, line 520")
    set ASw = ASw - 1
    set Hls = null
    set Jls = null
endfunction
function LRu takes unit DRu, integer HRu, string JRu returns boolean
    local boolean KRu
    set DSw[ASw] = JRu
    set ASw = ASw + 1
    set KRu = true
    if not GpS(QW, Aei(DRu), "when calling has in Imp3DragonFortress, line 843") then
        if HRu == pk then
            if not GZ then
    set KRu = false
    set GZ = true
            endif
        elseif HRu == ek then
            if not YZ then
    set KRu = false
    set YZ = true
            endif
        elseif HRu == lk then
            if not RZ then
    set KRu = false
    set RZ = true
            endif
        elseif HRu == bk or HRu == dk or HRu == fk or HRu == Tk then
            set KRu = false
            set TZ = true
        endif
    else
        set KRu = false
    endif
    set ASw = ASw - 1
    return KRu
endfunction
function oni takes real Vai, real Bai, string Nai returns nothing
    local integer Mai
    local integer wni
    local integer uni
    local group rni
    local integer sni
    local group tni
    local unit ini
    local integer Sni
    local unit cni
    set DSw[ASw] = Nai
    set ASw = ASw + 1
    set Mai = JGi((100. - (Vai - Bai) / WW * 100.) / 20.)
    set RZ = false
    set YZ = false
    set GZ = false
    if Mai > 0 and Mai < 5 then
        set wni = 1
        set uni = Mai
        loop
            exitwhen wni > uni
            if wni > XW then
    set XW = wni
    call UOS($00000001, "when calling getGroup in Imp3DragonFortress, line 881")
    set rni = pIw
    set sni = 0
    set tni = XbS(fc[$0000000C])
    loop
                    exitwhen not hJw(tni)
                    set ini = tPr(tni)
                    set Sni = r5S(ini)
                    if LRu(ini, Sni, "when calling isValidUnitForMaze in Imp3DragonFortress, line 885") or(sni > 4 and YZ and TZ or RZ) and(not GpS(QW, Aei(ini), "when calling has in Imp3DragonFortress, line 885")) then
                        call DDr(rni, ini)
                    else
                        set sni = sni + 1
                    endif
    endloop
    call lxs(tni)
    if smt(rni) > 0 then
                    set cni = cuS(rni)
                    if cni != null then
                        call Cls(cni, Snu(wps(DW, XW, "when calling get in Imp3DragonFortress, line 892"), "when calling rectFromIndex in Imp3DragonFortress, line 892"), "when calling imp3InitPlayerLifesAndTimer in Imp3DragonFortress, line 892")
                    endif
    endif
    call Sju(rni, "when calling release in Imp3DragonFortress, line 893")
            endif
            set wni = wni + 1
        endloop
    endif
    set ASw = ASw - 1
    set rni = null
    set tni = null
    set ini = null
    set cni = null
endfunction
function qFt takes unit pFt, string eFt returns nothing
    set DSw[ASw] = eFt
    set ASw = ASw + 1
    if GpS(Uj, Aei(pFt), "when calling has in Dat_UltiIllusions, line 92") then
        call eys(Uj, Aei(pFt), "when calling remove in Dat_UltiIllusions, line 93")
        if pFt != null and yXu(pFt) then
            call I7S(uSs(ANw(pFt), XSw, "Abilities\\Spells\\Orc\\FeralSpirit\\feralspiritdone.mdl"))
        endif
        call uFr(pFt)
    endif
    set ASw = ASw - 1
endfunction
function Bor takes integer Cor, real Vor returns nothing
    call Zkr(k4[Asw[Cor]], Vor)
endfunction
function Oqu takes integer Squ, real cqu, real oqu returns nothing
    call Hot(k4[Asw[Squ]], cqu, oqu)
endfunction
function kXi takes integer hXi, boolean FXi returns nothing
    call FBu(k4[Asw[hXi]], FXi)
endfunction
function qmu takes real Cvu, real Vvu, real Bvu, real Nvu, real Mvu, string wmu, real umu, real rmu, integer smu, integer tmu, integer imu, integer Smu, player cmu, string omu returns integer
    local boolean Omu
    local integer lmu
    local integer bmu
    local integer ymu
    local integer pmu
    local integer emu
    set DSw[ASw] = omu
    set ASw = ASw + 1
    set lmu = ADi(Cvu, Vvu, Bvu, 0., 0., 0., wmu, umu, rmu, smu, tmu, imu, Smu, "when calling new_TextTagEntity in TextTagUtils, line 29")
    set emu = lmu
    if cmu == null then
        set Omu = true
    else
        set Omu = nD == cmu
    endif
    call kXi(emu, Omu)
    set bmu = lmu
    call Oqu(bmu, Nvu, Mvu)
    set ymu = bmu
    call Bor(ymu, .1)
    set pmu = ymu
    set ASw = ASw - 1
    return pmu
endfunction
function GPi takes unit YPi returns real
    set Lcw = SGi(GetUnitFacing(YPi))
    return Lcw
endfunction
function NPu takes real DPu, real HPu, real JPu, real KPu, real LPu, real XPu, real CPu, real VPu returns real
    local real BPu = KP
    if DPu < BPu then
        set BPu = DPu
    endif
    if JPu < BPu then
        set BPu = JPu
    endif
    if LPu < BPu then
        set BPu = LPu
    endif
    if CPu < BPu then
        set BPu = CPu
    endif
    return BPu
endfunction
function AEu takes real UEu, real IEu, real PEu returns real
    set dow = UEu
    set fow = IEu + PEu * SquareRoot(1. + Pow(UEu, 2.))
    return dow
endfunction
function f1u takes real r1u, real s1u, real t1u, real i1u, real S1u returns real
    local real c1u =- (1. / t1u)
    local real o1u = s1u - c1u * r1u
    local real q1u = c1u
    local real a1u = o1u
    local real O1u = q1u
    local real l1u = a1u
    local real n1u = AEu(t1u, i1u, S1u)
    local real d1u = fow
    local real b1u = n1u
    local real y1u = d1u
    local real p1u = (l1u - y1u) / (b1u - O1u)
    local real e1u = b1u * p1u + y1u
    set Row = p1u
    set Tow = e1u
    return Row
endfunction
function o9s takes real M8s, real w9s, real u9s, real r9s, real s9s, real t9s, real i9s, real S9s returns real
    local real c9s = LP
    if w9s < c9s then
        set c9s = w9s
    endif
    if r9s < c9s then
        set c9s = r9s
    endif
    if t9s < c9s then
        set c9s = t9s
    endif
    if S9s < c9s then
        set c9s = S9s
    endif
    return c9s
endfunction
function pHu takes real OHu, real lHu, real bHu, real yHu returns real
    set aow = (yHu - lHu) / (bHu - OHu)
    set now = (bHu * lHu - OHu * yHu) / (bHu - OHu)
    return aow
endfunction
function S0t takes real w0t, real u0t, real r0t, real s0t, real t0t, real i0t returns boolean
    return s0t > u0t != (i0t > u0t) and w0t < (t0t - r0t) * (u0t - s0t) / (i0t - s0t) + r0t
endfunction
function v1i takes real T1i, real Y1i, real G1i, real g1i, real h1i, real F1i, real k1i, real j1i returns real
    local real x1i = HP
    if T1i > x1i then
        set x1i = T1i
    endif
    if G1i > x1i then
        set x1i = G1i
    endif
    if h1i > x1i then
        set x1i = h1i
    endif
    if k1i > x1i then
        set x1i = k1i
    endif
    return x1i
endfunction
function vXr takes real TXr, real YXr, real GXr, real gXr, real hXr, real FXr, real kXr, real jXr returns real
    local real xXr = JP
    if YXr > xXr then
        set xXr = YXr
    endif
    if gXr > xXr then
        set xXr = gXr
    endif
    if FXr > xXr then
        set xXr = FXr
    endif
    if jXr > xXr then
        set xXr = jXr
    endif
    return xXr
endfunction
function rXs takes real YLs, real GLs, real gLs, real hLs, real FLs, real kLs, real jLs, real xLs, real vLs, real mLs returns boolean
    local boolean QLs = false
    local real WLs
    local real ELs
    local real ZLs
    local real ULs
    local real ILs
    local real PLs
    local real ALs
    local real DLs
    local real HLs
    local real JLs
    local real KLs
    local real LLs
    local real XLs
    local real CLs
    local real VLs
    local real BLs
    local real NLs
    local real MLs
    local real wXs
    local real uXs
    if vLs < NPu(YLs, GLs, gLs, hLs, FLs, kLs, jLs, xLs) or vLs > v1i(YLs, GLs, gLs, hLs, FLs, kLs, jLs, xLs) or mLs < o9s(YLs, GLs, gLs, hLs, FLs, kLs, jLs, xLs) or mLs > vXr(YLs, GLs, gLs, hLs, FLs, kLs, jLs, xLs) then
        return false
    endif
    set ILs = YLs
    set PLs = GLs
    set WLs = ILs
    set ELs = PLs
    set ALs = jLs
    set DLs = xLs
    set ZLs = ALs
    set ULs = DLs
    if S0t(vLs, mLs, WLs, ELs, ZLs, ULs) then
        set QLs = not QLs
    endif
    set HLs = gLs
    set JLs = hLs
    set WLs = HLs
    set ELs = JLs
    set KLs = YLs
    set LLs = GLs
    set ZLs = KLs
    set ULs = LLs
    if S0t(vLs, mLs, WLs, ELs, ZLs, ULs) then
        set QLs = not QLs
    endif
    set XLs = FLs
    set CLs = kLs
    set WLs = XLs
    set ELs = CLs
    set VLs = gLs
    set BLs = hLs
    set ZLs = VLs
    set ULs = BLs
    if S0t(vLs, mLs, WLs, ELs, ZLs, ULs) then
        set QLs = not QLs
    endif
    set NLs = jLs
    set MLs = xLs
    set WLs = NLs
    set ELs = MLs
    set wXs = FLs
    set uXs = kLs
    set ZLs = wXs
    set ULs = uXs
    if S0t(vLs, mLs, WLs, ELs, ZLs, ULs) then
        set QLs = not QLs
    endif
    return QLs
endfunction
function Q3w takes boolexpr m3w returns nothing
    call DestroyBoolExpr(m3w)
endfunction
function rhu takes rect Ngu, boolexpr Mgu, string whu returns group
    local group uhu
    set DSw[ASw] = whu
    set ASw = ASw + 1
    call UOS($00000001, "when calling getGroup in RegionVectorLocationUtils, line 94")
    set uhu = pIw
    call GroupEnumUnitsInRect(uhu, Ngu, Mgu)
    call Q3w(Mgu)
    set ASw = ASw - 1
    set FIw = uhu
    set uhu = null
    return FIw
endfunction
function qRr takes unit rfr, real sfr, real tfr, real ifr, boolean Sfr, boolexpr cfr, string ofr returns group
    local real Ofr
    local real lfr
    local real bfr
    local real yfr
    local real pfr
    local real efr
    local real qfr
    local real afr
    local real nfr
    local real dfr
    local real ffr
    local real Rfr
    local real Tfr
    local real Yfr
    local real Gfr
    local real gfr
    local real hfr
    local real Ffr
    local real kfr
    local real jfr
    local real xfr
    local real vfr
    local real mfr
    local rect Qfr
    local group Wfr
    local group Efr
    local unit Zfr
    local real Ufr
    local real Ifr
    local real Pfr
    local real Afr
    local real Dfr
    local real Hfr
    local real Jfr
    local real Kfr
    local real Lfr
    local real Xfr
    local real Cfr
    local real Vfr
    local real Bfr
    local real Nfr
    local real Mfr
    local real wRr
    local real uRr
    local real rRr
    local real sRr
    local real tRr
    local real iRr
    local real SRr
    local real cRr
    local real oRr
    local real ORr
    local real lRr
    local real bRr
    local real yRr
    local real pRr
    local real eRr
    set DSw[ASw] = ofr
    set ASw = ASw + 1
    set Ufr = ANw(rfr)
    set Ifr = XSw
    set Ofr = Ufr
    set lfr = Ifr
    set bfr = ifr
    set Pfr = Ofr + sfr * Cos(bfr)
    set Afr = lfr + sfr * Sin(bfr)
    set yfr = Pfr
    set pfr = Afr
    set Dfr = pHu(Ofr, lfr, yfr, pfr)
    set Hfr = now
    set efr = Dfr
    set qfr = Hfr
    if Sfr then
        set Jfr = Ofr
        set Kfr = lfr
        set afr = Jfr
        set nfr = Kfr
        set Lfr = Ofr
        set Xfr = lfr
        set dfr = Lfr
        set ffr = Xfr
        set Cfr = f1u(yfr, pfr, efr, qfr, tfr / 2.)
        set Vfr = Tow
        set Rfr = Cfr
        set Tfr = Vfr
        set Bfr = f1u(yfr, pfr, efr, qfr, - (tfr / 2.))
        set Nfr = Tow
        set Yfr = Bfr
        set Gfr = Nfr
    else
        set Mfr = f1u(Ofr, lfr, efr, qfr, - (tfr / 2.))
        set wRr = Tow
        set afr = Mfr
        set nfr = wRr
        set uRr = f1u(Ofr, lfr, efr, qfr, tfr / 2.)
        set rRr = Tow
        set dfr = uRr
        set ffr = rRr
        set sRr = f1u(yfr, pfr, efr, qfr, tfr / 2.)
        set tRr = Tow
        set Rfr = sRr
        set Tfr = tRr
        set iRr = f1u(yfr, pfr, efr, qfr, - (tfr / 2.))
        set SRr = Tow
        set Yfr = iRr
        set Gfr = SRr
    endif
    set cRr = afr
    set oRr = nfr
    set ORr = dfr
    set lRr = ffr
    set bRr = Rfr
    set yRr = Tfr
    set pRr = Yfr
    set eRr = Gfr
    set gfr = cRr
    set hfr = oRr
    set Ffr = ORr
    set kfr = lRr
    set jfr = bRr
    set xfr = yRr
    set vfr = pRr
    set mfr = eRr
    set Qfr = Rect(NPu(gfr, hfr, Ffr, kfr, jfr, xfr, vfr, mfr), o9s(gfr, hfr, Ffr, kfr, jfr, xfr, vfr, mfr), v1i(gfr, hfr, Ffr, kfr, jfr, xfr, vfr, mfr), vXr(gfr, hfr, Ffr, kfr, jfr, xfr, vfr, mfr))
    set Wfr = rhu(Qfr, cfr, "when calling getUnitsInRect in RegionVectorLocationUtils, line 292")
    set Efr = XbS(Wfr)
    loop
        exitwhen not hJw(Efr)
        set Zfr = tPr(Efr)
        if (not rXs(gfr, hfr, Ffr, kfr, jfr, xfr, vfr, mfr, ANw(Zfr), XSw))or Zfr == rfr then
            call Z7t(Wfr, Zfr)
        endif
    endloop
    call lxs(Efr)
    set ASw = ASw - 1
    set sPw = Wfr
    set Qfr = null
    set Wfr = null
    set Efr = null
    set Zfr = null
    return sPw
endfunction
function tHt takes unit BDt, real NDt, real MDt, boolean wHt, boolexpr uHt, string rHt returns group
    local group sHt
    set DSw[ASw] = rHt
    set ASw = ASw + 1
    set sHt = qRr(BDt, NDt, MDt, Mri(GPi(BDt)), wHt, uHt, "when calling getUnitsInDirection in RegionVectorLocationUtils, line 248")
    set ASw = ASw - 1
    set nPw = sHt
    set sHt = null
    return nPw
endfunction
function tos takes unit uos, string ros returns real
    local real sos
    set DSw[ASw] = ros
    set ASw = ASw + 1
    set sos = 1.0
    if Jyr(hL, Aei(uos), "when calling has in Voidless_extensions, line 109") then
        set sos = dMw(wps(hL, Aei(uos), "when calling get in Voidless_extensions, line 110"))
    endif
    set ASw = ASw - 1
    return sos
endfunction
function vVu takes string jVu returns integer
    local integer xVu
    set DSw[ASw] = jVu
    set ASw = ASw + 1
    if NX == 0 then
        if MX < 32768 then
            set MX = MX + 1
            set xVu = MX
            set wC[xVu] = 1048
        else
            call tNr("Out of memory: Could not create CallbackSingle_doAfter_addOnDamageFunc_doAfter_DDS.", "when calling error in DDS, line 340")
            set xVu = 0
        endif
    else
        set NX = NX - 1
        set xVu = BX[NX]
        set wC[xVu] = 1048
    endif
    set ASw = ASw - 1
    return xVu
endfunction
function yFt takes string lFt returns integer
    local integer bFt
    set DSw[ASw] = lFt
    set ASw = ASw + 1
    if NX == 0 then
        if MX < 32768 then
            set MX = MX + 1
            set bFt = MX
            set wC[bFt] = 1049
        else
            call tNr("Out of memory: Could not create CallbackSingle_doAfter_addOnDamageFunc_doAfter_DDS.", "when calling error in DDS, line 348")
            set bFt = 0
        endif
    else
        set NX = NX - 1
        set bFt = BX[NX]
        set wC[bFt] = 1049
    endif
    set ASw = ASw - 1
    return bFt
endfunction
function yTs takes nothing returns integer
    return p3[jj]
endfunction
function ycS takes unit lcS, integer bcS returns real
    return BlzGetUnitAbilityCooldownRemaining(lcS, bcS)
endfunction
function Jss takes string Irs returns nothing
    local unit Prs
    local integer Ars
    local player Drs
    local integer Hrs
    local unit Jrs
    local integer Krs
    local player Lrs
    local integer Xrs
    local boolean Crs
    local real Vrs
    local integer Brs
    local integer Nrs
    local integer Mrs
    local integer wss
    local boolean uss
    local boolean rss
    local real sss
    local real tss
    local real iss
    local integer Sss
    local integer css
    local group oss
    local group Oss
    local unit lss
    local real bss
    local unit yss
    local group pss
    local unit ess
    local real qss
    local real ass
    local real nss
    local real dss
    local real fss
    local real Rss
    local integer Tss
    local real Yss
    local integer Gss
    local integer gss
    local integer hss
    local string Fss
    local integer kss
    local real jss
    local integer xss
    local integer vss
    local real mss
    local real Qss
    local real Wss
    local real Ess
    local real Zss
    local integer Uss
    local integer Iss
    local unit Pss
    local real Ass
    local integer Dss
    local real Hss
    set DSw[ASw] = Irs
    set ASw = ASw + 1
    set Prs = GetTriggerUnit()
    set Ars = r5S(Prs)
    set Drs = eDs(Prs)
    set Hrs = hgr(Drs)
    set Jrs = GetEventDamageSource()
    set Krs = r5S(Jrs)
    set Lrs = eDs(Jrs)
    set Xrs = hgr(Lrs)
    set Crs = false
    call Nkr()
    set Vrs = GetEventDamage()
    if GpS(gQ, Xrs, "when calling has in DDS, line 159") then
        set Vrs = Vrs * tos(Jrs, "when calling getPrismDmgDoneIncreaseMultiplier in DDS, line 160")
    elseif GpS(gQ, Hrs, "when calling has in DDS, line 161") then
        set Vrs = Vrs * D2w(Jrs, "when calling getPrismDmgTakenReductionMultiplier in DDS, line 162")
    endif
    if Lrs == ew or Lrs == aD[PLAYER_NEUTRAL_AGGRESSIVE] and GpS(gQ, Hrs, "when calling has in DDS, line 165") and Vrs > k6w("9090908348", "when calling unObfuscateInt in DDS, line 165") then
        call BlzSetEventDamage(xvt(k6w("9090908348", "when calling unObfuscateInt in DDS, line 166")))
    endif
    set Brs = 0
    set Nrs = wds(DG, "when calling size in DDS, line 179") - 1
    loop
        exitwhen Brs > Nrs
        if gSr(Prs, C_r(DG, Brs, "when calling get in DDS, line 180")) then
            call BlzSetEventDamage(aSr(Prs))
        endif
        set Brs = Brs + 1
    endloop
    if Ars == l2s(Iji("h02J", "when calling unObfuscate in DDS, line 186"), "when calling fromRawCode in DDS, line 186") or Ars == l2s(Iji("n003", "when calling unObfuscate in DDS, line 186"), "when calling fromRawCode in DDS, line 186") then
        call BlzSetEventDamage(0.)
        call lKs(Prs, l2s(Iji("Avul", "when calling unObfuscate in DDS, line 188"), "when calling fromRawCode in DDS, line 188"), $00000001)
        call GYS(Prs, aSr(Prs))
    endif
    if Lrs == qw and Vrs > Udi(Prs) - .401 then
        call BlzSetEventDamage(0.)
        call GYS(Prs, 1.)
    elseif Drs == qw and GpS(Uj, Aei(Prs), "when calling has in DDS, line 194") and Vrs > Udi(Prs) - .401 then
        call BlzSetEventDamage(0.)
        call qFt(Prs, "when calling decayIllusion in DDS, line 196")
    endif
    if GpS(gQ, Hrs, "when calling has in DDS, line 201") and Lrs == aD[PLAYER_NEUTRAL_AGGRESSIVE] and(not Jyr(SD, Aei(Prs), "when calling has in DDS, line 201")) and(not GpS(bj, Krs, "when calling has in DDS, line 201")) then
        set Mrs = xus(Hrs, "when calling getCustomPlayer in DDS, line 202")
        if xMi(Mrs, "when calling getCHero in DDS, line 203") != 0 and boS(Prs) >= 100 and nMi(Prs, "when calling is4thJob in DDS, line 203") then
            set wss = boS(Prs)
            set uss = GpS(lj, Krs, "when calling has in DDS, line 205")
            set rss = GpS(Oj, Krs, "when calling has in DDS, line 206")
            if rss then
    set iss = 2.
            else
    if uss then
                    set tss = 1.1
    else
                    set tss = 0.
    endif
    set iss = tss
            endif
            set sss = iss
            if sss == 0. then
    set sss = 1. + JGi((wss - 100) * 1. / 10) * 0.1445
            endif
            set sss = sss * (1. + (wss - 100) * 0.004)
            call BlzSetEventDamage(Vrs * sss)
            if rss or uss and Vrs > k6w("9090908366", "when calling unObfuscateInt in DDS, line 235") then
    call BlzSetEventDamage(xvt(k6w("9090908366", "when calling unObfuscateInt in DDS, line 236")))
            endif
        endif
    endif
    if GpS(bj, Krs, "when calling has in DDS, line 240") and GpS(gQ, Hrs, "when calling has in DDS, line 240") and Vrs > k6w("9090908348", "when calling unObfuscateInt in DDS, line 240") then
        call BlzSetEventDamage(xvt(k6w("9090908348", "when calling unObfuscateInt in DDS, line 241")))
    endif
    if (Jyr(SD, Aei(Jrs), "when calling has in DDS, line 244") and iCu(wps(SD, Aei(Jrs), "when calling get in DDS, line 244"), "when calling unitFromIndex in DDS, line 244") == Prs)or(Jyr(SD, Aei(Prs), "when calling has in DDS, line 245") and iCu(wps(SD, Aei(Prs), "when calling get in DDS, line 245"), "when calling unitFromIndex in DDS, line 245") == Jrs) then
        if Udi(Prs) <= Vrs * l then
            set Crs = true
            call BlzSetEventDamage(0.)
            call GYS(Prs, Udi(Prs) + Vrs * l)
            call L9u(Prs, Jrs, Drs, Lrs, "when calling pvp_finish in DDS, line 254")
        endif
    elseif Jyr(SD, Aei(Jrs), "when calling has in DDS, line 255") and iCu(wps(SD, Aei(Jrs), "when calling get in DDS, line 255"), "when calling unitFromIndex in DDS, line 255") != Prs then
        call BlzSetEventDamage(0.)
    elseif Jyr(SD, Aei(Prs), "when calling has in DDS, line 257") and iCu(wps(SD, Aei(Prs), "when calling get in DDS, line 257"), "when calling unitFromIndex in DDS, line 257") != Jrs then
        call BlzSetEventDamage(0.)
    endif
    set Sss = yTs()
    if Sss == 2 then
        if Jyr(SD, Aei(Prs), "when calling has in DDS, line 262") and iCu(wps(SD, Aei(Prs), "when calling get in DDS, line 262"), "when calling unitFromIndex in DDS, line 262") == Jrs then
            if not Crs then
    call BlzSetEventDamage(Vrs * l)
            endif
        endif
    else
        if Jyr(SD, Aei(Prs), "when calling has in DDS, line 268") and iCu(wps(SD, Aei(Prs), "when calling get in DDS, line 268"), "when calling unitFromIndex in DDS, line 268") == Jrs then
            if not Crs then
    call BlzSetEventDamage(Vrs * l)
            endif
        endif
        if Krs == ok and gSr(Jrs, l2s(Iji("A0BL", "when calling unObfuscate in DDS, line 285"), "when calling fromRawCode in DDS, line 285")) and gir(Jrs, l2s(Iji("A0BL", "when calling unObfuscate in DDS, line 285"), "when calling fromRawCode in DDS, line 285")) >= 1 then
            if R9s(Jrs, Prs) then
    set css = gir(Jrs, l2s(Iji("A0BL", "when calling unObfuscate in DDS, line 287"), "when calling fromRawCode in DDS, line 287"))
    call BFr(Prs, ok, css, "when calling applyArmorDebuff in DDS, line 288")
            endif
        endif
        if Krs == Ok and gSr(Jrs, l2s(Iji("A0C3", "when calling unObfuscate in DDS, line 290"), "when calling fromRawCode in DDS, line 290")) and gir(Jrs, l2s(Iji("A0C3", "when calling unObfuscate in DDS, line 290"), "when calling fromRawCode in DDS, line 290")) >= 1 then
            if not Jyr(ij, Xrs, "when calling has in DDS, line 291") then
    call GVw(ij, Xrs, O_i(true), "when calling put in DDS, line 292")
            endif
            set oss = tHt(Jrs, 200., 200., true, null, "when calling getUnitsInfront in DDS, line 294")
            set Oss = XbS(oss)
            loop
    exitwhen not hJw(Oss)
    set lss = tPr(Oss)
    if MAs(lss, Jrs) then
                    call Z7t(oss, lss)
    endif
            endloop
            call lxs(Oss)
            if TYt(wps(ij, Xrs, "when calling get in DDS, line 299")) == true and hPs(oss) > 0 then
    call GVw(ij, Xrs, O_i(false), "when calling put in DDS, line 300")
    set bss = 500.
    set yss = null
    if hPs(oss) > 1 then
                    set pss = XbS(oss)
                    loop
                        exitwhen not hJw(pss)
                        set ess = tPr(pss)
                        if bss > fYr(ANw(Jrs), XSw, ANw(ess), XSw) then
                            set yss = ess
                            set bss = fYr(ANw(Jrs), XSw, ANw(ess), XSw)
                        endif
                    endloop
                    call lxs(pss)
    else
                    set yss = cuS(oss)
    endif
    set qss = 2000.
    if t3i(yss) >= qss then
                    set nss = qss
    else
                    set nss = t3i(yss)
    endif
    set ass = nss
    set dss = 5.
    if t3i(yss) >= ass then
                    set Rss = ass * dss
    else
                    set Rss = t3i(yss) * dss
    endif
    set fss = Rss
    call b9i(yss, t3i(yss) - 2000.)
    call b9i(Jrs, t3i(Jrs) + ass / 10.)
    call MSr(Jrs, yss, fss, ATTACK_TYPE_CHAOS)
    set Tss = emi("when calling alloc_CallbackSingle_doAfter_addOnDamageFunc_doAfter_DDS in DDS, line 325")
    call RUs(Tss)
    set S3[Tss] = Xrs
    call Ybr(0.8, Tss, "when calling doAfter in DDS, line 325")
            endif
            call Sju(oss, "when calling release in DDS, line 327")
        endif
        if R9s(Jrs, Prs) and gSr(Prs, cW) then
            call BlzSetEventDamage(0.)
        endif
        if Ars == lk and gSr(Prs, wj) and giS(Jrs, UNIT_TYPE_RANGED_ATTACKER) then
            set Yss = imt(Jrs) * gir(Prs, wj) * 0.02
            call dFs(Prs, Jrs, Yss, true, false, ATTACK_TYPE_HERO)
            call lKs(Jrs, $41304358, $00000001)
            set Gss = vVu("when calling alloc_CallbackSingle_doAfter_addOnDamageFunc_doAfter_DDS in DDS, line 340")
            call RUs(Gss)
            set c3[Gss] = Jrs
            call Ybr(0.5, Gss, "when calling doAfter in DDS, line 340")
        endif
        if Ars == l2s(Iji("h02J", "when calling unObfuscate in DDS, line 345"), "when calling fromRawCode in DDS, line 345") or Ars == l2s(Iji("n003", "when calling unObfuscate in DDS, line 345"), "when calling fromRawCode in DDS, line 345") then
            if Sj then
    set Sj = false
    set gss = yFt("when calling alloc_CallbackSingle_doAfter_addOnDamageFunc_doAfter_DDS in DDS, line 348")
    call RUs(gss)
    call Ybr(0.33, gss, "when calling doAfter in DDS, line 348")
    set hss = GetRandomInt($00000000, $00000006)
    set Fss = ""
    set kss = hss
    if kss == 0 then
                    set Fss = Iji("Aim higher!", "when calling unObfuscate in DDS, line 354")
    elseif kss == 1 then
                    set Fss = Iji("Wow, you can't hit even stationary object!", "when calling unObfuscate in DDS, line 356")
    elseif kss == 2 then
                    set Fss = Iji("I'm just a simple ", "when calling unObfuscate in DDS, line 358") + B2r(Prs) + Iji(" yet you can't land a single blow on me!", "when calling unObfuscate in DDS, line 358")
    elseif kss == 3 then
                    set Fss = Iji("Aim lower!", "when calling unObfuscate in DDS, line 360")
    elseif kss == 4 then
                    set Fss = Iji("Boring...", "when calling unObfuscate in DDS, line 362")
    elseif kss == 5 then
                    set Fss = Iji("Are you even trying?", "when calling unObfuscate in DDS, line 364")
    elseif kss == 6 then
                    set Fss = Iji("Why don't you just give up?", "when calling unObfuscate in DDS, line 366")
    endif
    call qmu(AOS(Prs, 75.), qcw, acw, .015, .03, "|cff800080" + Fss + "|r", 12., 5., $00000064, $00000064, $00000064, $00000000, null, "when calling _CreateTTExEntity_fading in DDS, line 367")
            endif
        endif
    endif
    if GpS(gQ, Hrs, "when calling has in DDS, line 379") and Vrs > 0. and GpS(og, Aei(Prs), "when calling has in DDS, line 379") and(not(Vrs > Udi(Prs) - .401)) then
        call UYi(Prs, Vrs, Jrs, "when calling ww_applyManaRefundOnDmg in DDS, line 380")
        call BlzSetEventDamage(Vrs * pg)
    endif
    if Ars == l2s(Iji("U00R", "when calling unObfuscate in DDS, line 384"), "when calling fromRawCode in DDS, line 384") then
        set jss = Udi(Prs)
        if gSr(Prs, Ig) then
            set Hss = jss
            set Dss = Pg
            if NZ then
    set xss = Dg * gir(Prs, Ig)
            else
    set xss = Ag * gir(Prs, Ig)
            endif
            if Hss <= Dss - xss then
    call Fci(Prs, Ig, gir(Prs, Ig) + 1)
    call MQu(Prs, Ig)
    call Fci(Prs, Jg, gir(Prs, Jg) + 1)
            endif
        elseif jss <= Pg then
            call lKs(Prs, Ig, $00000001)
        endif
        if ycS(Prs, Ig) < 1. then
            set vss = BkS("when calling alloc_CallbackSingle_doAfter_addOnDamageFunc_doAfter_DDS in DDS, line 395")
            call RUs(vss)
            set o3[vss] = Prs
            call Ybr(2., vss, "when calling doAfter in DDS, line 395")
        endif
    elseif Ars == l2s(Iji("U00V", "when calling unObfuscate in DDS, line 397"), "when calling fromRawCode in DDS, line 397") then
        if ONi(Rc[MJ], Lrs) then
            if bK == 0 then
    if GpS(cj, Krs, "when calling has in DDS, line 401") then
                    set Qss = 0.5
    else
                    set Qss = 1.
    endif
    set mss = Qss
            elseif bK == 1 then
    if GpS(oj, Krs, "when calling has in DDS, line 403") then
                    set Wss = 0.5
    else
                    set Wss = 1.
    endif
    set mss = Wss
            else
    set mss = 0.5
            endif
            call BlzSetEventDamage(Vrs * mss)
        else
            call BlzSetEventDamage(0.)
        endif
    elseif Jyr(hW, Ars, "when calling has in DDS, line 409") then
        set Ess = 1. - (kW + jW) * 0.24
        set Zss = Vrs * 0.25 * Ess
        if Zss <= 0. then
            call BlzSetEventDamage(1.)
        else
            set Uss = 0
            set Iss = 0
            loop
    exitwhen Iss > 3
    set Pss = FW[Iss]
    set Ass = Udi(Pss)
    if kW > 0 and Ass < 500000. then
                    call BlzSetEventDamage(1.)
                    call GYS(Pss, 500000.)
    elseif Ass > Zss * 2. then
                    call BlzSetEventDamage(1.)
                    call GYS(Pss, Ass - Zss)
    endif
    if Uss == 0 then
                    call oni(Ass, Zss, "when calling on_imp3DragonDamage_StartMaze in DDS, line 432")
    endif
    set Uss = Uss + 1
    set Iss = Iss + 1
            endloop
        endif
    elseif Ars == AK and(not XYt(ANw(Jrs), XSw, hK)) then
        call BlzSetEventDamage(0.)
    elseif Ars == l2s(Iji("U00I", "when calling unObfuscate in DDS, line 441"), "when calling fromRawCode in DDS, line 441") and IW then
        call BlzSetEventDamage(Vrs / 10.)
    endif
    set ASw = ASw - 1
    set Prs = null
    set Drs = null
    set Jrs = null
    set Lrs = null
    set oss = null
    set Oss = null
    set lss = null
    set yss = null
    set pss = null
    set ess = null
    set Pss = null
endfunction
function Eer takes nothing returns nothing
    set ASw = 0
    call Jss("via function reference DDS, line 139")
endfunction
function Eeu takes nothing returns boolean
    return GetOrderTargetUnit() == iG and IsUnitInGroup(GetTriggerUnit(), kpu(300., GetUnitLoc(GetOrderTargetUnit())))
endfunction
function B2w takes nothing returns boolean
    return Bc[1 + GetPlayerId(GetOwningPlayer(GetEnumUnit()))] == 4 and IsUnitInGroup(GetEnumUnit(), Lc) == false
endfunction
function nWu takes nothing returns boolean
    return IsUnitInGroup(GetEnumUnit(), Kc) == false and IsUnitInGroup(GetEnumUnit(), Vc) == false and IsUnitInGroup(GetEnumUnit(), Lc) == false
endfunction
function Ekt takes nothing returns nothing
    if nWu() then
        call GroupAddUnit(Kc, GetEnumUnit())
        call CreateTextTagUnitBJ("|cffffcc00Nice Dodge!|r", GetEnumUnit(), 0., 14., 100., 100., 100., 0.)
        call SetTextTagVelocityBJ(bj_lastCreatedTextTag, 45., 90.)
        call SetTextTagPermanentBJ(bj_lastCreatedTextTag, false)
        call SetTextTagFadepointBJ(bj_lastCreatedTextTag, 1.5)
        call SetTextTagLifespanBJ(bj_lastCreatedTextTag, 2.5)
    elseif B2w() then
        call GroupRemoveUnit(Kc, GetEnumUnit())
        call GroupAddUnit(Vc, GetEnumUnit())
        call CreateTextTagUnitBJ("|cffff0000Overdodge!|r", GetEnumUnit(), 0., 15., 100., 100., 100., 0.)
        call SetTextTagVelocityBJ(bj_lastCreatedTextTag, 45., 90.)
        call SetTextTagPermanentBJ(bj_lastCreatedTextTag, false)
        call SetTextTagFadepointBJ(bj_lastCreatedTextTag, 1.5)
        call SetTextTagLifespanBJ(bj_lastCreatedTextTag, 2.5)
    endif
endfunction
function Ems takes nothing returns nothing
    call AdjustPlayerStateBJ($00000002, GetEnumPlayer(), PLAYER_STATE_RESOURCE_LUMBER)
    call PanCameraToTimedLocForPlayer(GetEnumPlayer(), br[1 + GetPlayerId(GetEnumPlayer())], 0.)
    set iw[GetPlayerId(GetEnumPlayer())] = GetPlayerId(GetEnumPlayer())
    set Sw[GetPlayerId(GetEnumPlayer())] = pr[wS[Ni * 100 + GetPlayerId(GetEnumPlayer())]]
endfunction
function Ens takes nothing returns boolean
    return GetSpellAbilityId() == jk
endfunction
function Equ takes nothing returns nothing
    call SetUnitPositionLoc(GetEnumUnit(), br[1 + GetPlayerId(GetOwningPlayer(GetEnumUnit()))])
endfunction
function Err takes nothing returns nothing
    call ForceAddPlayer(rt, GetOwningPlayer(GetTriggerUnit()))
    call ForceAddPlayer(Ot, GetOwningPlayer(GetTriggerUnit()))
    call DisplayTextToForce(MwS(GetOwningPlayer(GetTriggerUnit())), "|cffffcc00Freya|r : |cff87ceebGreetings, fellow High Templar. I have sensed your coming and I know why you are here. If you are truly ready to learn the strongest psionic energy skills known to man, then transverse the Rite of Passage and return to me.")
    call PlaySoundBJ(Se)
    call T_i(GetOwningPlayer(GetTriggerUnit()), $00000000, "4th Job Advancement Quest", "I have to transverse the Rite of Passage successfully.", "ReplaceableTextures\\PassiveButtons\\PASBTNGenericSpellImmunity.blp")
    set st[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))] = bj_lastCreatedQuest
    set kt[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))] = 0
endfunction
function RZu takes nothing returns boolean
    return IsPlayerInForce(GetTriggerPlayer(), rO)
endfunction
function Eru takes nothing returns nothing
    if RZu() then
        set uO = GetTriggerPlayer()
        call TriggerExecute(oY)
        call ForceRemovePlayer(rO, GetTriggerPlayer())
    else
        call DisplayTimedTextToForce(MwS(GetTriggerPlayer()), 4., "|cff8A2BE2WORST")
        call ForceRemovePlayer(sO, GetTriggerPlayer())
    endif
    call PauseTimerBJ(true, tO[1 + GetPlayerId(GetTriggerPlayer())])
endfunction
function Eti takes nothing returns nothing
    set uO = Player($00000007)
    call TriggerExecute(OY)
endfunction
function Eur takes nothing returns boolean
    return GetUnitTypeId(GetTriggerUnit()) == 1211117893 and GetUnitTypeId(GetOrderTargetUnit()) == 1747988811 and IsPlayerInForce(GetOwningPlayer(GetTriggerUnit()), rt) and IsPlayerInForce(GetOwningPlayer(GetTriggerUnit()), ii) and IsUnitInGroup(GetTriggerUnit(), kpu(300., GetUnitLoc(GetOrderTargetUnit())))
endfunction
function l5u takes nothing returns boolean
    return qs == 3
endfunction
function Ewu takes nothing returns nothing
    if l5u() then
        call PlaySoundBJ(ne)
        set qs = 4
        call DisplayTimedTextToForce(Rc[$00000005], 5., "|cffffcc00You hear a click sound and know you have stepped on the correct pedal.|r")
    else
        set qs = 0
        call DisplayTimedTextToForce(Rc[$00000005], 5., "|cffff0000You hear a ringing sound. All pedals were reset!|r")
    endif
endfunction
function Eyu takes nothing returns nothing
    call TriggerExecute(pR)
endfunction
function F2w takes nothing returns boolean
    return GetUnitTypeId(GetDyingUnit()) == 1429221442
endfunction
function sGu takes player uGu, playerstate rGu returns integer
    return GetPlayerState(uGu, rGu)
endfunction
function gGS takes player TGS, playerstate YGS, integer GGS returns nothing
    call SetPlayerState(TGS, YGS, sGu(TGS, YGS) + GGS)
endfunction
function N3r takes player V3r, integer B3r returns nothing
    call gGS(V3r, PLAYER_STATE_RESOURCE_LUMBER, B3r)
endfunction
function O3i takes unit c3i, integer o3i returns ability
    return BlzGetUnitAbility(c3i, o3i)
endfunction
function SMr takes unit tMr, item iMr returns boolean
    return UnitHasItem(tMr, iMr)
endfunction
function d0u takes real a0u returns integer
    local integer n0u = P3w(a0u)
    if a0u > 0. and a0u - n0u != 0. then
        set n0u = n0u + 1
    endif
    return n0u
endfunction
function hIu takes real gIu returns string
    return I2S(R2I(gIu))
endfunction
function Q3s takes integer b3s, unit y3s, string p3s returns nothing
    local item e3s
    local integer q3s
    local integer a3s
    local integer n3s
    local string d3s
    local boolean f3s
    local integer R3s
    local integer T3s
    local real Y3s
    local real G3s
    local integer g3s
    local integer h3s
    local ability F3s
    local integer k3s
    local real j3s
    local integer x3s
    local real v3s
    local real m3s
    set DSw[ASw] = p3s
    set ASw = ASw + 1
    set e3s = uwr(y3s, BF)
    if b3s < 1 and b3s !=- 1 then
        set a3s = 1
    else
        set a3s = b3s + 1
    endif
    set q3s = a3s
    set n3s = Sui((d0u(q3s * 1. / 8) + 1) * q3s * 70 + xL, vL)
    set d3s = ""
    set f3s = SMr(y3s, e3s)
    set R3s = JGi(ModuloReal(n3s, $000003E8) / 100.)
    set T3s = JGi(n3s * 1. / 1000)
    if (not gSr(y3s, VK))and R3s > 0 and f3s then
        call lKs(y3s, VK, R3s)
    elseif R3s == 0 or(not f3s) then
        call Q_s(y3s, VK)
    else
        call Fci(y3s, VK, R3s)
    endif
    if (not gSr(y3s, BK))and T3s > 0 and f3s then
        call lKs(y3s, BK, T3s)
    elseif T3s == 0 or(not f3s) then
        call Q_s(y3s, BK)
    else
        call Fci(y3s, BK, T3s)
    endif
    set d3s = d3s + "|cffb38300+" + fju(T3s * 1000 + R3s * 100) + " to all stats|r|n"
    set Y3s = 1. + q3s * mL
    call GVw(hL, Aei(y3s), B5r(Y3s), "when calling put in Voidless_extensions, line 155")
    set d3s = d3s + "|cffb38300+" + hIu(q3s * mL * 100.) + "% damage dealt|r|n"
    set G3s = 1. + q3s * QL
    call GVw(FL, Aei(y3s), B5r(G3s), "when calling put in Voidless_extensions, line 160")
    set d3s = d3s + "|cffb38300+" + hIu(q3s * QL * 100.) + "% healing done|r|n"
    set g3s = gJi(Qk, "when calling iterator in Voidless_extensions, line 164")
    loop
        exitwhen not slr(g3s, "when calling hasNext in Voidless_extensions, line 164")
        set h3s = Gjs(g3s, "when calling next in Voidless_extensions, line 164")
        if gSr(y3s, h3s) then
            set F3s = O3i(y3s, h3s)
            set k3s = wps(Qk, h3s, "when calling get in Voidless_extensions, line 167")
            set j3s = dMw(wps(Wk, h3s, "when calling get in Voidless_extensions, line 168"))
            if k3s == 1382378033 then
    set x3s = 1382378034
    set v3s = dMw(wps(Wk, x3s, "when calling get in Voidless_extensions, line 172"))
    call BlzSetAbilityRealLevelField(F3s, ConvertAbilityRealLevelField(x3s), $0000001D, v3s * G3s)
            endif
            call BlzSetAbilityRealLevelField(F3s, ConvertAbilityRealLevelField(k3s), $0000001D, j3s * G3s)
        endif
    endloop
    call Ejr(g3s, "when calling close in Voidless_extensions, line 164")
    set m3s = 1. + q3s * WL
    call GVw(kL, Aei(y3s), B5r(m3s), "when calling put in Voidless_extensions, line 185")
    set d3s = d3s + "|cffb38300-" + hIu(q3s * WL * 100.) + "% damage taken|r|n"
    if b3s >= 25 then
    endif
    call AYr(e3s, nK + "|nCurrent bonus for |cffb38300" + fju(b3s) + "|r |cff070024Voidpsy|r is: |n" + d3s)
    call wBr(y3s, "when calling updateStabilizedVoidPrismIcon in Voidless_extensions, line 199")
    set ASw = ASw - 1
    set e3s = null
    set F3s = null
endfunction
function Aku takes unit Wku, integer Eku, integer Zku, string Uku returns integer
    local integer Iku
    local integer Pku
    set DSw[ASw] = Uku
    set ASw = ASw + 1
    if Wku != null then
        set Iku = Eku
        if Iku ==- 1 then
            set Iku = wps(jL, Zku, "when calling get in Voidless_extensions, line 86")
        else
            call GVw(jL, Zku, Iku, "when calling put in Voidless_extensions, line 88")
        endif
        set Pku = wps(jL, Zku, "when calling get in Voidless_extensions, line 90")
        set ASw = ASw - 1
        return Pku
    endif
    set ASw = ASw - 1
    return - 1
endfunction
function wNs takes integer VBs, integer BBs, string NBs returns nothing
    local unit MBs
    set DSw[ASw] = NBs
    set ASw = ASw + 1
    if VBs != 0 then
        set MBs = hqs(VBs, "when calling getHero in Voidless_extensions, line 70")
        call Aku(MBs, BBs, hgr(UBt(VBs, "when calling getPlayer in Voidless_extensions, line 71")), "when calling setVoidlessMaxReachableStage in Voidless_extensions, line 71")
    endif
    set ASw = ASw - 1
    set MBs = null
endfunction
function x0S takes player g0S, string h0S returns integer
    local integer F0S
    local integer k0S
    local integer j0S
    set DSw[ASw] = h0S
    set ASw = ASw + 1
    set F0S = hgr(g0S)
    if Jyr(jL, F0S, "when calling has in Voidless_extensions, line 65") then
        set j0S = wps(jL, F0S, "when calling get in Voidless_extensions, line 65")
    else
        set j0S = 0
    endif
    set k0S = j0S
    set ASw = ASw - 1
    return k0S
endfunction
function Z6t takes string x6t returns nothing
    local player v6t
    local integer m6t
    local integer Q6t
    local integer W6t
    local integer E6t
    set DSw[ASw] = x6t
    set ASw = ASw + 1
    set v6t = GetEnumPlayer()
    set m6t = smt(fc[MJ])
    set Q6t = xus(hgr(v6t), "when calling getCustomPlayer in Voidless_triggers, line 113")
    set W6t = xMi(Q6t, "when calling getCHero in Voidless_triggers, line 114")
    if x0S(GetEnumPlayer(), "when calling getVoidlessMaxReachableStage in Voidless_triggers, line 116") < OK then
        call wNs(W6t, OK, "when calling setVoidlessMaxReachableStage in Voidless_triggers, line 117")
        call Q3s(x0S(v6t, "when calling getVoidlessMaxReachableStage in Voidless_triggers, line 118"), hqs(W6t, "when calling getHero in Voidless_triggers, line 118"), "when calling updateStabilizedVoidPrismBonus in Voidless_triggers, line 118")
        call Qpi(hqs(W6t, "when calling getHero in Voidless_triggers, line 119"), "when calling inspiritPrismUpdateIcon in Voidless_triggers, line 119")
    endif
    set E6t = 20 + (OK + (10 - m6t)) * 2
    call N3r(DCr(Q6t, "when calling getPlayer in Voidless_triggers, line 122"), E6t)
    call dii(Iji("Your received ", "when calling unObfuscate in Voidless_triggers, line 123") + fju(E6t) + Iji(" shards for finishing this stage.", "when calling unObfuscate in Voidless_triggers, line 123"), 8., DCr(Q6t, "when calling getPlayer in Voidless_triggers, line 123"))
    set ASw = ASw - 1
    set v6t = null
endfunction
function F9s takes nothing returns nothing
    set ASw = 0
    call Z6t("via function reference Voidless_triggers, line 110")
endfunction
function Uai takes player Rai, real Tai, real Yai, real Gai, real gai, real hai, string Fai, real kai, real jai, real xai, integer vai, integer mai, integer Qai, integer Wai, string Eai returns nothing
    local integer Zai
    set DSw[ASw] = Eai
    set ASw = ASw + 1
    set Zai = bQs(Tai, Yai, Gai, gai, hai, Fai, kai, jai, vai, mai, Qai, Wai, Rai, "when calling _CreateTTExEntity_fading in EffectExtensions, line 65")
    call bQu(Zai, xai)
    set ASw = ASw - 1
endfunction
function d4w takes integer a4w, integer n4w returns integer
    return BlzBitOr(a4w, n4w)
endfunction
function MaS takes integer BaS, integer NaS returns integer
    set NSw = d4w(BaS, Ug[NaS])
    return NSw
endfunction
function eRs takes string yRs returns integer
    local integer pRs
    set DSw[ASw] = yRs
    set ASw = ASw + 1
    if NX == 0 then
        if MX < 32768 then
            set MX = MX + 1
            set pRs = MX
            set wC[pRs] = 775
        else
            call tNr("Out of memory: Could not create CallbackSingle_doAfter_FateDestinyUnlocker.", "when calling error in FateDestinyUnlocker, line 213")
            set pRs = 0
        endif
    else
        set NX = NX - 1
        set pRs = BX[NX]
        set wC[pRs] = 775
    endif
    set ASw = ASw - 1
    return pRs
endfunction
function jYr takes string FYr returns integer
    local integer kYr
    set DSw[ASw] = FYr
    set ASw = ASw + 1
    if NX == 0 then
        if MX < 32768 then
            set MX = MX + 1
            set kYr = MX
            set wC[kYr] = 773
        else
            call tNr("Out of memory: Could not create CallbackSingle_doAfter_FateDestinyUnlocker.", "when calling error in FateDestinyUnlocker, line 193")
            set kYr = 0
        endif
    else
        set NX = NX - 1
        set kYr = BX[NX]
        set wC[kYr] = 773
    endif
    set ASw = ASw - 1
    return kYr
endfunction
function nht takes string qht returns integer
    local integer aht
    set DSw[ASw] = qht
    set ASw = ASw + 1
    if NX == 0 then
        if MX < 32768 then
            set MX = MX + 1
            set aht = MX
            set wC[aht] = 774
        else
            call tNr("Out of memory: Could not create CallbackSingle_doAfter_FateDestinyUnlocker.", "when calling error in FateDestinyUnlocker, line 202")
            set aht = 0
        endif
    else
        set NX = NX - 1
        set aht = BX[NX]
        set wC[aht] = 774
    endif
    set ASw = ASw - 1
    return aht
endfunction
function wrS takes integer KuS, string LuS returns nothing
    local integer XuS
    local unit CuS
    local player VuS
    local integer BuS
    local integer NuS
    local integer MuS
    set DSw[ASw] = LuS
    set ASw = ASw + 1
    if wps(Hv, KuS, "when calling get in FateDestinyUnlocker, line 183") == Dv and(not GpS(Jv, KuS, "when calling has in FateDestinyUnlocker, line 183")) and Zt[1 + KuS] > 14 and Po[1 + KuS] > 0 then
        call vwt(Jv, KuS, "when calling add in FateDestinyUnlocker, line 185")
        set XuS = xMi(xus(KuS, "when calling getCustomPlayer in FateDestinyUnlocker, line 187"), "when calling getCHero in FateDestinyUnlocker, line 187")
        if XuS != 0 then
            set CuS = hqs(XuS, "when calling getHero in FateDestinyUnlocker, line 189")
            if CuS != null then
    set VuS = eDs(CuS)
    set BuS = jYr("when calling alloc_CallbackSingle_doAfter_FateDestinyUnlocker in FateDestinyUnlocker, line 193")
    call RUs(BuS)
    set I4[BuS] = VuS
    set P4[BuS] = CuS
    call Ybr(1.5, BuS, "when calling doAfter in FateDestinyUnlocker, line 193")
    set NuS = nht("when calling alloc_CallbackSingle_doAfter_FateDestinyUnlocker in FateDestinyUnlocker, line 202")
    call RUs(NuS)
    set A4[NuS] = CuS
    set D4[NuS] = KuS
    set H4[NuS] = VuS
    call Ybr(2.5, NuS, "when calling doAfter in FateDestinyUnlocker, line 202")
    set MuS = eRs("when calling alloc_CallbackSingle_doAfter_FateDestinyUnlocker in FateDestinyUnlocker, line 213")
    call RUs(MuS)
    set J4[MuS] = VuS
    set K4[MuS] = CuS
    set L4[MuS] = KuS
    call Ybr(3., MuS, "when calling doAfter in FateDestinyUnlocker, line 213")
            endif
        endif
    endif
    set ASw = ASw - 1
    set CuS = null
    set VuS = null
endfunction
function WNw takes integer kNw, string jNw returns nothing
    local integer xNw
    local integer vNw
    local integer mNw
    local integer QNw
    set DSw[ASw] = jNw
    set ASw = ASw + 1
    set vNw = Hv
    set mNw = kNw
    set QNw = MaS(wps(Hv, kNw, "when calling get in FateDestinyUnlocker, line 164"), pQ)
    set xNw = QNw
    call GVw(vNw, mNw, xNw, "when calling put in FateDestinyUnlocker, line 164")
    call wrS(kNw, "when calling checkDestinyReached in FateDestinyUnlocker, line 167")
    set ASw = ASw - 1
endfunction
function kbr takes player Fbr returns integer
    return sGu(Fbr, PLAYER_STATE_RESOURCE_LUMBER)
endfunction
function u8w takes string M7w returns integer
    local integer w8w
    set DSw[ASw] = M7w
    set ASw = ASw + 1
    if NX == 0 then
        if MX < 32768 then
            set MX = MX + 1
            set w8w = MX
            set wC[w8w] = 1045
        else
            call tNr("Out of memory: Could not create CallbackSingle_doAfter_addAction_doAfter_NpcTalking.", "when calling error in NpcTalking, line 306")
            set w8w = 0
        endif
    else
        set NX = NX - 1
        set w8w = BX[NX]
        set wC[w8w] = 1045
    endif
    set ASw = ASw - 1
    return w8w
endfunction
function aji takes string lji returns nothing
    local unit bji
    local player yji
    local integer pji
    local integer eji
    local integer qji
    set DSw[ASw] = lji
    set ASw = ASw + 1
    set bji = GetTriggerUnit()
    set yji = eDs(bji)
    set pji = hgr(yji)
    if GpS(gQ, pji, "when calling has in NpcTalking, line 292") and t_u(bji) and(not GpS(wm, pji, "when calling has in NpcTalking, line 292")) then
        set eji = xus(pji, "when calling getCustomPlayer in NpcTalking, line 293")
        call GZs(eji, true, "when calling setCommandsDisabled in NpcTalking, line 294")
        call dii(Iji("|cffEEB422Wow! You really want a meeting with the devs?|r", "when calling unObfuscate in NpcTalking, line 296"), 12., yji)
        call dii(Iji("|cffEEB422Better contact us on discord, instead of disturbing us here, in our garden of peace :)|r", "when calling unObfuscate in NpcTalking, line 297"), 12., yji)
        if (not GpS(DA, pji, "when calling has in NpcTalking, line 299"))and kbr(yji) < k6w("9083", "when calling unObfuscateInt in NpcTalking, line 299") then
            call dii(Iji("|cffEEB422But at least take that little gift (3 Shards) for visiting us.|r", "when calling unObfuscate in NpcTalking, line 300"), 12., yji)
            call N3r(yji, k6w("29", "when calling unObfuscateInt in NpcTalking, line 301"))
            call Uai(aD[pji], AOS(bji, 260.), qcw, acw, 0.005, 0.005, "+3 power shards", 8., 2., 0.75, cF, oF, OF, lF, "when calling createTag in NpcTalking, line 302")
            call vwt(DA, pji, "when calling add in NpcTalking, line 303")
            call WNw(pji, "when calling onDestinyFinishDevGardenVisit in NpcTalking, line 304")
        endif
        set qji = u8w("when calling alloc_CallbackSingle_doAfter_addAction_doAfter_NpcTalking in NpcTalking, line 306")
        call RUs(qji)
        set Puw[qji] = bji
        set Auw[qji] = yji
        set Duw[qji] = eji
        call Ybr(8., qji, "when calling doAfter in NpcTalking, line 306")
    endif
    set ASw = ASw - 1
    set bji = null
    set yji = null
endfunction
function FBs takes nothing returns nothing
    set ASw = 0
    call aji("via function reference NpcTalking, line 287")
endfunction
function FEt takes nothing returns nothing
    call SetUnitLifePercentBJ(GetEnumUnit(), 100.)
endfunction
function Wor takes string mor returns integer
    local integer Qor
    set DSw[ASw] = mor
    set ASw = ASw + 1
    if NX == 0 then
        if MX < 32768 then
            set MX = MX + 1
            set Qor = MX
            set wC[Qor] = 944
        else
            call tNr("Out of memory: Could not create CallbackSingle_doAfter_Rh_Effect.", "when calling error in Rh_Effect, line 31")
            set Qor = 0
        endif
    else
        set NX = NX - 1
        set Qor = BX[NX]
        set wC[Qor] = 944
    endif
    set ASw = ASw - 1
    return Qor
endfunction
function rvu takes string Bxu returns nothing
    local unit Nxu
    local player Mxu
    local integer wvu
    local integer uvu
    set DSw[ASw] = Bxu
    set ASw = ASw + 1
    set Nxu = GetTriggerUnit()
    set Mxu = eDs(Nxu)
    set wvu = hgr(Mxu)
    if Nxu != null and GpS(gQ, wvu, "when calling has in Rh_Effect, line 30") and(not(r5S(Nxu) == 1211117617 or r5S(Nxu) == 1211117618)) then
        set uvu = Wor("when calling alloc_CallbackSingle_doAfter_Rh_Effect in Rh_Effect, line 31")
        call RUs(uvu)
        set Wrw[uvu] = Nxu
        set Erw[uvu] = wvu
        set Zrw[uvu] = Mxu
        call Ybr(.05, uvu, "when calling doAfter in Rh_Effect, line 31")
    endif
    set ASw = ASw - 1
    set Nxu = null
    set Mxu = null
endfunction
function FFs takes nothing returns nothing
    set ASw = 0
    call rvu("via function reference Rh_Effect, line 194")
endfunction
function CCu takes string LCu returns integer
    local integer XCu
    set DSw[ASw] = LCu
    set ASw = ASw + 1
    if gV == 0 then
        if hV < 32768 then
            set hV = hV + 1
            set XCu = hV
        else
            call tNr("Out of memory: Could not create BackIterator.", "when calling error in LinkedListModule, line 93")
            set XCu = 0
        endif
    else
        set gV = gV - 1
        set XCu = GV[gV]
    endif
    set ASw = ASw - 1
    return XCu
endfunction
function aYs takes integer qYs returns nothing
endfunction
function M4t takes integer B4t, boolean N4t returns nothing
    call aYs(B4t)
endfunction
function PZu takes boolean ZZu, string UZu returns integer
    local integer IZu
    set DSw[ASw] = UZu
    set ASw = ASw + 1
    set IZu = CCu("when calling alloc_BackIterator in LinkedListModule, line 97")
    call M4t(IZu, ZZu)
    set ASw = ASw - 1
    return IZu
endfunction
function K5s takes integer J5s returns nothing
endfunction
function Axs takes integer Ixs, boolean Pxs returns nothing
    call K5s(Ixs)
endfunction
function Mwr takes string Bwr returns integer
    local integer Nwr
    set DSw[ASw] = Bwr
    set ASw = ASw + 1
    if kV == 0 then
        if jV < 32768 then
            set jV = jV + 1
            set Nwr = jV
        else
            call tNr("Out of memory: Could not create Iterator.", "when calling error in LinkedListModule, line 71")
            set Nwr = 0
        endif
    else
        set kV = kV - 1
        set Nwr = FV[kV]
    endif
    set ASw = ASw - 1
    return Nwr
endfunction
function x7i takes boolean F7i, string k7i returns integer
    local integer j7i
    set DSw[ASw] = k7i
    set ASw = ASw + 1
    set j7i = Mwr("when calling alloc_Iterator in LinkedListModule, line 75")
    call Axs(j7i, F7i)
    set ASw = ASw - 1
    return j7i
endfunction
function H8w takes string D8w returns boolean
    set DSw[ASw] = D8w
    set ASw = ASw + 1
    set Cj = 2019847535
    set Vj = 500000
    set Nj = 0
    set Mj = 0
    set wx = 0
    call x7i(false, "when calling new_Iterator in LinkedListModule, line 55")
    call PZu(false, "when calling new_BackIterator in LinkedListModule, line 65")
    set Bj = CreateTimer()
    set ASw = ASw - 1
    return true
endfunction
function FGS takes nothing returns boolean
    set ASw = 0
    return H8w("via function reference DmgMod, line 1")
endfunction
function ahr takes nothing returns boolean
    return Rr[1 + GetPlayerId(GetOwningPlayer(GetKillingUnit()))] >= 15
endfunction
function FJs takes nothing returns nothing
    set Rr[1 + GetPlayerId(GetOwningPlayer(GetKillingUnit()))] = Rr[1 + GetPlayerId(GetOwningPlayer(GetKillingUnit()))] + 1
    if ahr() then
        call QuestMessageBJ(MwS(GetOwningPlayer(GetKillingUnit())), $00000002, "|cffffcc002nd Job Advancement Quest Completed|r.")
        call ForceAddPlayer(fr, GetOwningPlayer(GetKillingUnit()))
    else
        call QuestMessageBJ(MwS(GetOwningPlayer(GetKillingUnit())), $00000001, I2S(Rr[1 + GetPlayerId(GetOwningPlayer(GetKillingUnit()))]) + " Bandit(s) killed.")
    endif
endfunction
function FQt takes nothing returns boolean
    return GetHeroLevel(GetEnteringUnit()) >= 10
endfunction
function FRi takes nothing returns boolean
    return GetUnitTypeId(GetTriggerUnit()) == 1211117881 and GetUnitTypeId(GetOrderTargetUnit()) == 1747989298 and IsPlayerInForce(GetOwningPlayer(GetTriggerUnit()), rt) == false and IsUnitInGroup(GetTriggerUnit(), kpu(300., GetUnitLoc(GetOrderTargetUnit()))) and GetHeroLevel(GetTriggerUnit()) >= 150
endfunction
function FSt takes nothing returns nothing
    set Bt[1 + GetPlayerId(GetTriggerPlayer())] = GetEnumUnit()
endfunction
function FUu takes nothing returns nothing
    call RemoveUnit(GetEnumUnit())
endfunction
function sMr takes unit KNr, string LNr returns nothing
    local item XNr
    local integer CNr
    local player VNr
    local real BNr
    local real NNr
    local integer MNr
    local item wMr
    local real uMr
    local real rMr
    set DSw[ASw] = LNr
    set ASw = ASw + 1
    if KNr == null then
        set ASw = ASw - 1
        set XNr = null
        set VNr = null
        set wMr = null
        return
    else
        set CNr = hgr(eDs(KNr))
        set VNr = eDs(KNr)
        set uMr = ANw(KNr)
        set rMr = XSw
        set BNr = uMr
        set NNr = rMr
        set MNr = lw[CNr]
        if MNr ==- 1 then
            set ASw = ASw - 1
            set XNr = null
            set VNr = null
            set wMr = null
            return
        else
            set lw[CNr] =- 1
            call vwt(Zx, CNr, "when calling add in Items_Pickup_Drop, line 108")
            set wMr = CreateItem(MNr, BNr, NNr)
            call IOt(wMr, VNr, true)
            set XNr = wMr
            call vwt(px, Xdu(XNr), "when calling add in Items_Pickup_Drop, line 110")
            call GVw(ex, Xdu(XNr), CNr, "when calling put in Items_Pickup_Drop, line 111")
            if UnitInventoryCount(KNr) <= 5 then
    call UQs(KNr, XNr)
            else
    call e5u(XNr, ANw(KNr), XSw)
    call DisplayTimedTextToForce(MwS(GetOwningPlayer(GetEnumUnit())), 8., "|cffffcc00My inventory is full, I cannot carry |r" + XRt(XNr))
            endif
            call eys(Zx, CNr, "when calling remove in Items_Pickup_Drop, line 117")
        endif
    endif
    set ASw = ASw - 1
    set XNr = null
    set VNr = null
    set wMr = null
endfunction
function Egs takes string mgs returns nothing
    local integer Qgs
    local integer Wgs
    set DSw[ASw] = mgs
    set ASw = ASw + 1
    set Qgs = tOS(GetTriggerPlayer(), "when calling getCustomPlayer in Items_Pickup_Drop, line 86")
    if Qgs != 0 then
        set Wgs = xMi(Qgs, "when calling getCHero in Items_Pickup_Drop, line 88")
        if Wgs != 0 then
            call sMr(hqs(Wgs, "when calling getHero in Items_Pickup_Drop, line 90"), "when calling specialItemsCreate in Items_Pickup_Drop, line 90")
        endif
    endif
    set ASw = ASw - 1
endfunction
function FVs takes nothing returns nothing
    set ASw = 0
    call Egs("via function reference Items_Pickup_Drop, line 772")
endfunction
function FVt takes nothing returns boolean
    return GetUnitTypeId(GetTriggerUnit()) == 1211117637 and GetUnitTypeId(GetOrderTargetUnit()) == sr and IsPlayerInForce(GetOwningPlayer(GetTriggerUnit()), js) and vs[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))] == 3 and IsUnitInGroup(GetTriggerUnit(), kpu(300., GetUnitLoc(GetOrderTargetUnit())))
endfunction
function FWr takes nothing returns boolean
    return SubStringBJ(GetEventPlayerChatString(), $00000001, $00000007) == GetEventPlayerChatStringMatched() and StringLength(GetEventPlayerChatString()) > 7
endfunction
function FYs takes nothing returns nothing
    set Dt = Jt[1 + GetPlayerId(GetTriggerPlayer())]
    call ForceRemovePlayer(mt, Player(- 1 + Dt))
    call ForceRemovePlayer(At, GetTriggerPlayer())
    call ForceRemovePlayer(At, Player(- 1 + Dt))
    call DisplayTimedTextToForce(MwS(GetTriggerPlayer()), 5., "|cffffcc00You have cancelled the duel challenge.|r")
    call DisplayTimedTextToForce(MwS(Player(- 1 + Dt)), 8., "|cffffcc00" + GetPlayerName(GetTriggerPlayer()) + "|r has cancelled the duel challenge.")
endfunction
function l2w takes trigger o2w, playerunitevent O2w returns nothing
    call TriggerRegisterAnyUnitEventBJ(o2w, O2w)
endfunction
function nTS takes string YRS returns boolean
    local integer GRS
    local integer gRS
    local integer hRS
    local integer FRS
    local integer kRS
    local integer jRS
    local integer xRS
    local integer vRS
    local integer mRS
    local integer QRS
    local integer WRS
    local integer ERS
    local integer ZRS
    local integer URS
    local integer IRS
    local integer PRS
    local integer ARS
    local integer DRS
    local integer HRS
    local integer JRS
    local integer KRS
    local integer LRS
    local integer XRS
    local integer CRS
    local integer VRS
    local integer BRS
    local integer NRS
    local integer MRS
    local integer wTS
    local integer uTS
    local integer rTS
    local integer sTS
    local integer tTS
    local integer iTS
    local integer STS
    local integer cTS
    local integer oTS
    local integer OTS
    local integer lTS
    local integer bTS
    local integer yTS
    local integer pTS
    local integer eTS
    local trigger qTS
    local trigger aTS
    set DSw[ASw] = YRS
    set ASw = ASw + 1
    set GRS = XQt("when calling new_LinkedList in GenericUnitRespawn, line 9")
    call vwt(GRS, $6E737072, "when calling add in GenericUnitRespawn, line 10")
    set gRS = GRS
    call vwt(gRS, $6E303248, "when calling add in GenericUnitRespawn, line 10")
    set hRS = gRS
    call vwt(hRS, $6E303249, "when calling add in GenericUnitRespawn, line 10")
    set FRS = hRS
    call vwt(FRS, $6E303244, "when calling add in GenericUnitRespawn, line 10")
    set kRS = FRS
    call vwt(kRS, $6E303246, "when calling add in GenericUnitRespawn, line 10")
    set jRS = kRS
    call vwt(jRS, $6E303245, "when calling add in GenericUnitRespawn, line 10")
    set xRS = jRS
    call vwt(xRS, $6E303247, "when calling add in GenericUnitRespawn, line 10")
    set vRS = xRS
    call vwt(vRS, $6E30324E, "when calling add in GenericUnitRespawn, line 10")
    set mRS = vRS
    call vwt(mRS, $6E30324D, "when calling add in GenericUnitRespawn, line 10")
    set QRS = mRS
    call vwt(QRS, $6E30324C, "when calling add in GenericUnitRespawn, line 11")
    set WRS = QRS
    call vwt(WRS, $6E30324F, "when calling add in GenericUnitRespawn, line 11")
    set ERS = WRS
    call vwt(ERS, $6E30324A, "when calling add in GenericUnitRespawn, line 11")
    set ZRS = ERS
    call vwt(ZRS, $6E30324B, "when calling add in GenericUnitRespawn, line 11")
    set URS = ZRS
    call vwt(URS, $55303030, "when calling add in GenericUnitRespawn, line 11")
    set IRS = URS
    call vwt(IRS, $55303031, "when calling add in GenericUnitRespawn, line 11")
    set PRS = IRS
    call vwt(PRS, $55303033, "when calling add in GenericUnitRespawn, line 11")
    set ARS = PRS
    call vwt(ARS, $55303032, "when calling add in GenericUnitRespawn, line 11")
    set DRS = ARS
    call vwt(DRS, $55303034, "when calling add in GenericUnitRespawn, line 11")
    set HRS = DRS
    call vwt(HRS, $55303036, "when calling add in GenericUnitRespawn, line 12")
    set JRS = HRS
    call vwt(JRS, $55303041, "when calling add in GenericUnitRespawn, line 12")
    set KRS = JRS
    call vwt(KRS, $55303039, "when calling add in GenericUnitRespawn, line 12")
    set LRS = KRS
    call vwt(LRS, $55303042, "when calling add in GenericUnitRespawn, line 12")
    set XRS = LRS
    call vwt(XRS, $55303037, "when calling add in GenericUnitRespawn, line 12")
    set CRS = XRS
    call vwt(CRS, $55303043, "when calling add in GenericUnitRespawn, line 12")
    set VRS = CRS
    call vwt(VRS, $55303049, "when calling add in GenericUnitRespawn, line 12")
    set BRS = VRS
    call vwt(BRS, PK, "when calling add in GenericUnitRespawn, line 13")
    set NRS = BRS
    call vwt(NRS, AK, "when calling add in GenericUnitRespawn, line 13")
    set MRS = NRS
    call vwt(MRS, JK, "when calling add in GenericUnitRespawn, line 13")
    set wTS = MRS
    call vwt(wTS, KK, "when calling add in GenericUnitRespawn, line 13")
    set uTS = wTS
    call vwt(uTS, LK, "when calling add in GenericUnitRespawn, line 13")
    set rTS = uTS
    call vwt(rTS, XK, "when calling add in GenericUnitRespawn, line 13")
    set sTS = rTS
    call vwt(sTS, CK, "when calling add in GenericUnitRespawn, line 13")
    set tTS = sTS
    call vwt(tTS, AX, "when calling add in GenericUnitRespawn, line 14")
    set FQ = tTS
    set iTS = jts("when calling new_HashMap in GenericUnitRespawn, line 16")
    call GVw(iTS, $55303030, $00000019, "when calling put in GenericUnitRespawn, line 17")
    set STS = iTS
    call GVw(STS, $55303031, $0000002D, "when calling put in GenericUnitRespawn, line 18")
    set cTS = STS
    call GVw(cTS, $55303033, $0000002A, "when calling put in GenericUnitRespawn, line 19")
    set oTS = cTS
    call GVw(oTS, $55303032, $0000003C, "when calling put in GenericUnitRespawn, line 20")
    set OTS = oTS
    call GVw(OTS, $55303034, $00000041, "when calling put in GenericUnitRespawn, line 21")
    set lTS = OTS
    call GVw(lTS, $55303036, $0000005A, "when calling put in GenericUnitRespawn, line 22")
    set bTS = lTS
    call GVw(bTS, $55303039, $000000B4, "when calling put in GenericUnitRespawn, line 23")
    set yTS = bTS
    call GVw(yTS, $55303041, $0000008C, "when calling put in GenericUnitRespawn, line 24")
    set pTS = yTS
    call GVw(pTS, $55303042, $000000DC, "when calling put in GenericUnitRespawn, line 25")
    set eTS = pTS
    call GVw(eTS, $55303037, $000000FA, "when calling put in GenericUnitRespawn, line 26")
    set kQ = eTS
    set jQ = Rect(- 512., - 512., 512., 512.)
    set qTS = CreateTrigger()
    call l2w(qTS, EVENT_PLAYER_UNIT_DEATH)
    set aTS = qTS
    call B2S(aTS, Rmw)
    set ASw = ASw - 1
    set qTS = null
    set aTS = null
    return true
endfunction
function FZi takes nothing returns boolean
    set ASw = 0
    return nTS("via function reference GenericUnitRespawn, line 1")
endfunction
function Fas takes nothing returns boolean
    return GetSpellAbilityId() == 1093678917
endfunction
function SIs takes string tIs returns integer
    local integer iIs
    set DSw[ASw] = tIs
    set ASw = ASw + 1
    if NX == 0 then
        if MX < 32768 then
            set MX = MX + 1
            set iIs = MX
            set wC[iIs] = 1010
        else
            call tNr("Out of memory: Could not create CallbackSingle_doAfter_addAction_JobAdvancementQuestHandler.", "when calling error in JobAdvancementQuestHandler, line 947")
            set iIs = 0
        endif
    else
        set NX = NX - 1
        set iIs = BX[NX]
        set wC[iIs] = 1010
    endif
    set ASw = ASw - 1
    return iIs
endfunction
function ddS takes string qdS returns nothing
    local dialog adS
    local integer ndS
    set DSw[ASw] = qdS
    set ASw = ASw + 1
    set adS = DialogCreate()
    call DialogDisplay(nD, adS, true)
    set ndS = SIs("when calling alloc_CallbackSingle_doAfter_addAction_JobAdvancementQuestHandler in JobAdvancementQuestHandler, line 947")
    call RUs(ndS)
    set Yww_2677[ndS] = adS
    call Ybr(0., ndS, "when calling doAfter in JobAdvancementQuestHandler, line 947")
    set ASw = ASw - 1
    set adS = null
endfunction
function FdS takes nothing returns nothing
    set ASw = 0
    call ddS("via function reference JobAdvancementQuestHandler, line 944")
endfunction
function J_i takes group D_i, unit H_i returns boolean
    return IsUnitInGroup(H_i, D_i)
endfunction
function jUi takes string fUi returns nothing
    local player RUi
    local integer TUi
    local integer YUi
    local integer GUi
    local unit gUi
    local oskeytype hUi
    local string FUi
    local integer kUi
    set DSw[ASw] = fUi
    set ASw = ASw + 1
    set RUi = GetTriggerPlayer()
    set TUi = hgr(RUi)
    set YUi = GgS(RUi, "when calling getCustomPlayer in Voidless_mechanics, line 871")
    set GUi = xMi(YUi, "when calling getCHero in Voidless_mechanics, line 872")
    set gUi = hqs(GUi, "when calling getHero in Voidless_mechanics, line 873")
    set hUi = BlzGetTriggerPlayerKey()
    set FUi = ""
    if J_i(fc[MJ], gUi) and GpS(RX, TUi, "when calling has in Voidless_mechanics, line 877") then
        set kUi = YEi(hUi)
        if kUi == YEi(OSKEY_LEFT) then
            set FUi = "1"
        elseif kUi == YEi(OSKEY_RIGHT) then
            set FUi = "2"
        elseif kUi == YEi(OSKEY_UP) then
            set FUi = "3"
        elseif kUi == YEi(OSKEY_DOWN) then
            set FUi = "4"
        elseif kUi == YEi(OSKEY_OEM_PLUS) then
            set FUi = "5"
        elseif kUi == YEi(OSKEY_OEM_MINUS) then
            set FUi = "6"
        endif
        call GVw(YX, TUi, err(nPr(wps(YX, TUi, "when calling get in Voidless_mechanics, line 891"), "when calling stringFromIndex in Voidless_mechanics, line 891") + FUi, "when calling stringToIndex in Voidless_mechanics, line 891"), "when calling put in Voidless_mechanics, line 891")
    endif
    set ASw = ASw - 1
    set RUi = null
    set gUi = null
    set hUi = null
endfunction
function Feu takes nothing returns nothing
    set ASw = 0
    call jUi("via function reference Voidless_mechanics, line 854")
endfunction
function ais takes nothing returns boolean
    return GetUnitTypeId(GetTriggerUnit()) == 1211117890 or GetUnitTypeId(GetTriggerUnit()) == 1211117889
endfunction
function Fji takes nothing returns boolean
    return ais() and IsPlayerInForce(GetOwningPlayer(GetTriggerUnit()), rt) and IsPlayerInForce(GetOwningPlayer(GetTriggerUnit()), gt) == false and GetPlayerState(GetOwningPlayer(GetTriggerUnit()), PLAYER_STATE_RESOURCE_GOLD) >= 10000
endfunction
function ITr takes nothing returns boolean
    return HS[1 + GetPlayerId(GetOwningPlayer(GetKillingUnit()))] >= 50
endfunction
function Fjr takes nothing returns nothing
    set HS[1 + GetPlayerId(GetOwningPlayer(GetKillingUnit()))] = HS[1 + GetPlayerId(GetOwningPlayer(GetKillingUnit()))] + 1
    if ITr() then
        call QuestMessageBJ(MwS(GetOwningPlayer(GetKillingUnit())), $00000002, "|cffffcc00Blood and Snow|r Quest Requirement Completed.")
    else
        call QuestMessageBJ(MwS(GetOwningPlayer(GetKillingUnit())), $00000001, I2S(HS[1 + GetPlayerId(GetOwningPlayer(GetKillingUnit()))]) + " snow orc(s) killed.")
    endif
endfunction
function yAt takes string lAt returns boolean
    local boolean bAt
    set DSw[ASw] = lAt
    set ASw = ASw + 1
    set bAt = GetSpellAbilityId() == l2s(Iji("A05I", "when calling unObfuscate in Hope_Effect, line 17"), "when calling fromRawCode in Hope_Effect, line 17") or GetSpellAbilityId() == l2s(Iji("A051", "when calling unObfuscate in Hope_Effect, line 17"), "when calling fromRawCode in Hope_Effect, line 17") or GetSpellAbilityId() == l2s(Iji("A050", "when calling unObfuscate in Hope_Effect, line 17"), "when calling fromRawCode in Hope_Effect, line 17") or GetSpellAbilityId() == l2s(Iji("A04Z", "when calling unObfuscate in Hope_Effect, line 17"), "when calling fromRawCode in Hope_Effect, line 17") or GetSpellAbilityId() == l2s(Iji("A052", "when calling unObfuscate in Hope_Effect, line 17"), "when calling fromRawCode in Hope_Effect, line 17") or GetSpellAbilityId() == l2s(Iji("A055", "when calling unObfuscate in Hope_Effect, line 17"), "when calling fromRawCode in Hope_Effect, line 17") or GetSpellAbilityId() == l2s(Iji("A0BP", "when calling unObfuscate in Hope_Effect, line 17"), "when calling fromRawCode in Hope_Effect, line 17") or GetSpellAbilityId() == l2s(Iji("A054", "when calling unObfuscate in Hope_Effect, line 17"), "when calling fromRawCode in Hope_Effect, line 17")
    set ASw = ASw - 1
    return bAt
endfunction
function Eis takes string Qis returns boolean
    local boolean Wis
    set DSw[ASw] = Qis
    set ASw = ASw + 1
    set Wis = UnitHasItemOfTypeBJ(GetTriggerUnit(), l2s(Iji("I05F", "when calling unObfuscate in Hope_Effect, line 14"), "when calling fromRawCode in Hope_Effect, line 14")) and yAt("when calling getSpellCast_Matriarch in Hope_Effect, line 14")
    set ASw = ASw - 1
    return Wis
endfunction
function Flr takes nothing returns boolean
    set ASw = 0
    return Eis("via function reference Hope_Effect, line 76")
endfunction
function f1s takes rect d1s returns group
    set WG = CreateGroup()
    call GroupEnumUnitsInRect(WG, d1s, ZG)
    return WG
endfunction
function Flt takes nothing returns nothing
    call ForGroupBJ(f1s(bj_mapInitialPlayableArea), ppw)
endfunction
function Fns takes nothing returns boolean
    return IsPlayerInForce(GetTriggerPlayer(), At) == false
endfunction
function Gju takes string Tju returns integer
    local integer Yju
    set DSw[ASw] = Tju
    set ASw = ASw + 1
    if NX == 0 then
        if MX < 32768 then
            set MX = MX + 1
            set Yju = MX
            set wC[Yju] = 1031
        else
            call tNr("Out of memory: Could not create CallbackSingle_doAfter_addAction_doAfter_FateDestinyUnlocker.", "when calling error in FateDestinyUnlocker, line 684")
            set Yju = 0
        endif
    else
        set NX = NX - 1
        set Yju = BX[NX]
        set wC[Yju] = 1031
    endif
    set ASw = ASw - 1
    return Yju
endfunction
function Hjt takes string Ajt returns integer
    local integer Djt
    set DSw[ASw] = Ajt
    set ASw = ASw + 1
    if NX == 0 then
        if MX < 32768 then
            set MX = MX + 1
            set Djt = MX
            set wC[Djt] = 1030
        else
            call tNr("Out of memory: Could not create CallbackSingle_doAfter_addAction_doAfter_FateDestinyUnlocker.", "when calling error in FateDestinyUnlocker, line 678")
            set Djt = 0
        endif
    else
        set NX = NX - 1
        set Djt = BX[NX]
        set wC[Djt] = 1030
    endif
    set ASw = ASw - 1
    return Djt
endfunction
function ict takes unit uct, integer rct returns integer
    local integer sct = 0
    local integer tct = 0
    loop
        exitwhen tct > 5
        if q3t(ofi(uct, tct)) == rct then
            set sct = sct + 1
        endif
        set tct = tct + 1
    endloop
    return sct
endfunction
function mcs takes string Gcs returns nothing
    local unit gcs
    local unit hcs
    local player Fcs
    local integer kcs
    local integer jcs
    local integer xcs
    local integer vcs
    set DSw[ASw] = Gcs
    set ASw = ASw + 1
    set gcs = GetTriggerUnit()
    set hcs = GetOrderTargetUnit()
    set Fcs = eDs(gcs)
    set kcs = hgr(Fcs)
    if gcs != null and hcs != null and t_u(gcs) and boS(gcs) == 300 and fYr(ANw(hcs), XSw, ANw(gcs), XSw) <= 300. and(not GpS(Xv, hgr(Fcs), "when calling has in FateDestinyUnlocker, line 672")) and r5S(hcs) == 1747988815 and(not(IsPlayerInForce(GetOwningPlayer(GetTriggerUnit()), Kr) and IsPlayerInForce(GetOwningPlayer(GetTriggerUnit()), Cr) == false and IsUnitInGroup(GetTriggerUnit(), kpu(300., GetUnitLoc(GetOrderTargetUnit()))))) then
        set jcs = ict(gcs, l2s(Iji(am, "when calling unObfuscate in FateDestinyUnlocker, line 673"), "when calling fromRawCode in FateDestinyUnlocker, line 673"))
        if QUu(gcs, BF) then
            call vwt(Xv, kcs, "when calling add in FateDestinyUnlocker, line 675")
            call dii(Iji("|cffffcc00Wizard Hannah|r: You... You have succeeded!! You've stabilized the artifact! I can sense a great power from it, yet I feel like the artifact is in fact an empty shell of its former self... I'd bet you can fill it with more power and then draw from it. Just be careful... ", "when calling unObfuscate in FateDestinyUnlocker, line 676"), 15., Fcs)
            set xcs = Hjt("when calling alloc_CallbackSingle_doAfter_addAction_doAfter_FateDestinyUnlocker in FateDestinyUnlocker, line 678")
            call RUs(xcs)
            set v7[xcs] = kcs
            call Ybr(10., xcs, "when calling doAfter in FateDestinyUnlocker, line 678")
        elseif jcs > 0 and jcs <= 2 then
            call vwt(Xv, kcs, "when calling add in FateDestinyUnlocker, line 681")
            call dii(Iji("|cffffcc00Wizard Hannah|r: Something is draining your power. I can feel it it also is draining mine, even if I am strong enough to hold on to this. Maybe you can find a way to stabilise the artifact against itself.", "when calling unObfuscate in FateDestinyUnlocker, line 682"), 10., Fcs)
            set vcs = Gju("when calling alloc_CallbackSingle_doAfter_addAction_doAfter_FateDestinyUnlocker in FateDestinyUnlocker, line 684")
            call RUs(vcs)
            set m7[vcs] = kcs
            call Ybr(10., vcs, "when calling doAfter in FateDestinyUnlocker, line 684")
        endif
    endif
    set ASw = ASw - 1
    set gcs = null
    set hcs = null
    set Fcs = null
endfunction
function Frs takes nothing returns nothing
    set ASw = 0
    call mcs("via function reference FateDestinyUnlocker, line 665")
endfunction
function Fst takes nothing returns nothing
    call QuestMessageBJ(MwS(GetOwningPlayer(GetTriggerUnit())), $00000001, "|cffffcc00I found it! There really is a city! I need to get back to Arnold and tell him what I've found.|r")
    call ForceAddPlayer(US, GetOwningPlayer(GetTriggerUnit()))
endfunction
function Ftu takes nothing returns boolean
    return SubStringBJ(GetEventPlayerChatString(), $00000001, $00000008) == GetEventPlayerChatStringMatched() and StringLength(GetEventPlayerChatString()) > 8
endfunction
function Fur takes nothing returns nothing
    call ForceAddPlayer(rt, GetOwningPlayer(GetTriggerUnit()))
    call DisplayTextToForce(MwS(GetOwningPlayer(GetTriggerUnit())), "|cffffcc00Raven|r : |cff87ceebWhat is it you want, assassin? What? You want to be like me? I have mastered the skills of the shadow until I no longer look...human. Do you still want to be like me? If so, then go to the Unknown Regions and kill 50 dark elves. Do this and return to me.")
    call PlaySoundBJ(Se)
    call T_i(GetOwningPlayer(GetTriggerUnit()), $00000000, "4th Job Advancement Quest", "I have to kill 50 Dark Elves.", "ReplaceableTextures\\PassiveButtons\\PASBTNGenericSpellImmunity.blp")
    set st[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))] = bj_lastCreatedQuest
    set kt[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))] = 0
endfunction
function initPlayerArray takes nothing returns nothing
    local integer i_1 = 0
    local integer temp = bj_MAX_PLAYER_SLOTS - 1
    loop
        exitwhen i_1 > temp
        set aD[i_1] = Player(i_1)
        set i_1 = i_1 + 1
    endloop
endfunction
function Fxr takes nothing returns boolean
    set nD = GetLocalPlayer()
    call initPlayerArray()
    return true
endfunction
function Fyr takes nothing returns boolean
    return true
endfunction
function G0i takes nothing returns boolean
    return IsUnitType(GetFilterUnit(), UNIT_TYPE_HERO) == false
endfunction
function G4r takes nothing returns boolean
    return boS(GetTriggerUnit()) == 300
endfunction
function G4w takes nothing returns nothing
    if not m9r(GetEnumUnit()) then
        call UnitDamageTargetBJ(GetTriggerUnit(), GetEnumUnit(), 4000. * I2R(GetUnitAbilityLevelSwapped(GetSpellAbilityId(), GetTriggerUnit())), ATTACK_TYPE_CHAOS, DAMAGE_TYPE_UNIVERSAL)
    endif
endfunction
function ATu takes player PTu returns integer
    return sGu(PTu, PLAYER_STATE_RESOURCE_GOLD)
endfunction
function IZs takes integer WZs, integer EZs, string ZZs returns boolean
    local boolean UZs
    set DSw[ASw] = ZZs
    set ASw = ASw + 1
    set UZs = GpS(CM[WZs], EZs, "when calling has in CustomLinkedList, line 89")
    set ASw = ASw - 1
    return UZs
endfunction
function CPw takes integer JPw, integer KPw, string LPw returns boolean
    local boolean XPw
    set DSw[ASw] = LPw
    set ASw = ASw + 1
    if sV[JPw] == 0 then
        if JPw == 0 then
            call tNr("Nullpointer exception when calling CustomLinkedList.has", "when calling error in CustomLinkedList, line 88")
        else
            call tNr("Called CustomLinkedList.has on invalid object.", "when calling error in CustomLinkedList, line 88")
        endif
    endif
    set XPw = IZs(JPw, KPw, "when calling has in CustomLinkedList, line 88")
    set ASw = ASw - 1
    return XPw
endfunction
function VQt takes integer CQt returns integer
    return AM[CQt]
endfunction
function k_u takes integer g_u, string h_u returns integer
    local integer F_u
    set DSw[ASw] = h_u
    set ASw = ASw + 1
    if MC[g_u] == 0 then
        if g_u == 0 then
            call tNr("Nullpointer exception when calling CustomHero.getUnlockedCritterTiers", "when calling error in CustomHero, line 253")
        else
            call tNr("Called CustomHero.getUnlockedCritterTiers on invalid object.", "when calling error in CustomHero, line 253")
        endif
    endif
    set F_u = VQt(g_u)
    set ASw = ASw - 1
    return F_u
endfunction
function DGu takes integer EGu, string ZGu returns string
    local string UGu
    local integer IGu
    local integer PGu
    local string AGu
    set DSw[ASw] = ZGu
    set ASw = ASw + 1
    set UGu = ""
    if wds(k_u(EGu, "when calling getUnlockedCritterTiers in Critters, line 96"), "when calling size in Critters, line 96") == 0 then
        set ASw = ASw - 1
        return "none"
    else
        set IGu = c5r(k_u(EGu, "when calling getUnlockedCritterTiers in Critters, line 99"), "when calling iterator in Critters, line 99")
        loop
            exitwhen not Tji(IGu)
            set PGu = LXi(IGu)
            set UGu = UGu + rcS(PGu) + ", "
        endloop
        call vms(IGu, "when calling close in Critters, line 99")
    endif
    set AGu = CAw(UGu, $00000000, vQt(UGu) - 2)
    set ASw = ASw - 1
    return AGu
endfunction
function Hnu takes string Pnu, string Anu returns boolean
    local integer Dnu
    if Anu == "" then
        return true
    endif
    set Dnu = vQt(Pnu)
    if vQt(Anu) > Dnu then
        return false
    endif
    return CAw(Pnu, Dnu - vQt(Anu), Dnu) == Anu
endfunction
function Ots takes item tts, integer its, string Sts returns integer
    local integer cts
    local integer ots
    set DSw[ASw] = Sts
    set ASw = ASw + 1
    if Jyr(C_r(RI, its, "when calling get in Items_Pickup_Drop, line 744"), Xdu(tts), "when calling has in Items_Pickup_Drop, line 744") then
        set cts = wps(C_r(RI, its, "when calling get in Items_Pickup_Drop, line 744"), Xdu(tts), "when calling get in Items_Pickup_Drop, line 744")
    else
        set cts = 0
    endif
    set ots = cts
    set ASw = ASw - 1
    return ots
endfunction
function XKr takes string KKr returns integer
    local integer LKr
    set DSw[ASw] = KKr
    set ASw = ASw + 1
    if uV == 0 then
        if rV < 32768 then
            set rV = rV + 1
            set LKr = rV
            set sV[LKr] = 1114
        else
            call tNr("Out of memory: Could not create CustomLinkedList.", "when calling error in CustomLinkedList, line 16")
            set LKr = 0
        endif
    else
        set uV = uV - 1
        set LKr = wV[uV]
        set sV[LKr] = 1114
    endif
    set ASw = ASw - 1
    return LKr
endfunction
function E9S takes integer Q9S, string W9S returns nothing
    set DSw[ASw] = W9S
    set ASw = ASw + 1
    set CM[Q9S] = XQt("when calling new_LinkedList in CustomLinkedList, line 20")
    set ASw = ASw - 1
endfunction
function Z1r takes integer W1r, string E1r returns nothing
    set DSw[ASw] = E1r
    set ASw = ASw + 1
    call E9S(W1r, "when calling CustomLinkedList_init in CustomLinkedList, line 24")
    set HF = HF + 1
    set ASw = ASw - 1
endfunction
function dvu takes string avu returns integer
    local integer nvu
    set DSw[ASw] = avu
    set ASw = ASw + 1
    set nvu = XKr("when calling alloc_CustomLinkedList in CustomLinkedList, line 24")
    call Z1r(nvu, "when calling construct_CustomLinkedList in CustomLinkedList, line 24")
    set ASw = ASw - 1
    return nvu
endfunction
function gMt takes nothing returns integer
    set DF = DF + 1
    return DF
endfunction
function SNi takes string sNi returns integer
    local integer tNi
    local integer iNi
    set DSw[ASw] = sNi
    set ASw = ASw + 1
    set tNi = gMt()
    set iNi = dvu("when calling new_CustomLinkedList in CustomLinkedListRegistry, line 26")
    call GVw(AF, tNi, iNi, "when calling put in CustomLinkedListRegistry, line 27")
    set ASw = ASw - 1
    return iNi
endfunction
function Uru takes real Zru returns string
    return R2S(Zru)
endfunction
function V2w takes string X2w, string C2w returns boolean
    return BgS(X2w, C2w) !=- 1
endfunction
function Wcr takes integer jcr, boolean xcr, string vcr returns string
    local string mcr
    local integer Qcr
    set DSw[ASw] = vcr
    set ASw = ASw + 1
    set mcr = Iji("None", "when calling unObfuscate in PlayerCommands, line 183")
    set Qcr = Zt[1 + jcr]
    if Qcr > 14 then
        if Qcr < 30 then
            set mcr = Iji("|cff8B8989Pit Dog|r", "when calling unObfuscate in PlayerCommands, line 188")
        elseif Qcr < 75 then
            set mcr = Iji("|cff8B8989Fighter|r", "when calling unObfuscate in PlayerCommands, line 190")
        elseif Qcr < 100 then
            set mcr = Iji("Myrmidon", "when calling unObfuscate in PlayerCommands, line 192")
        elseif Qcr < 200 then
            set mcr = Iji("|cff00ff00Knight|r", "when calling unObfuscate in PlayerCommands, line 194")
        elseif Qcr < 300 then
            set mcr = Iji("|cff00ff00Crusader|r", "when calling unObfuscate in PlayerCommands, line 196")
        elseif Qcr < 500 then
            set mcr = Iji("|cffA020F0Gladiator|r", "when calling unObfuscate in PlayerCommands, line 198")
        elseif Qcr < 750 then
            set mcr = Iji("|cffA020F0Veteran|r", "when calling unObfuscate in PlayerCommands, line 200")
        elseif Qcr < 1000 then
            set mcr = Iji("|cff4682B4Commander|r", "when calling unObfuscate in PlayerCommands, line 202")
        elseif Qcr < 1500 then
            set mcr = Iji("|cff4682B4General|r", "when calling unObfuscate in PlayerCommands, line 204")
        elseif Qcr < 2000 then
            set mcr = Iji("|cffff0000Marshal|r", "when calling unObfuscate in PlayerCommands, line 206")
        elseif Qcr < 3000 then
            set mcr = Iji("|cffff0000Hero|r", "when calling unObfuscate in PlayerCommands, line 208")
        elseif Qcr < 5000 then
            set mcr = Iji("|cffB8860BChampion|r", "when calling unObfuscate in PlayerCommands, line 210")
        elseif Qcr >= 5000 then
            set mcr = Iji("|cffFFD700Grand Champion|r", "when calling unObfuscate in PlayerCommands, line 212")
        endif
        if not xcr then
            if hUu(mcr, "|c") or hUu(mcr, "|C") then
    set mcr = CAw(mcr, $0000000A, vQt(mcr))
            endif
            if Hnu(mcr, "|r") or Hnu(mcr, "|R") then
    set mcr = CAw(mcr, $00000000, vQt(mcr) - 2)
            endif
        endif
    endif
    set ASw = ASw - 1
    return mcr
endfunction
function Y2r takes trigger T2r returns nothing
    call EnableTrigger(T2r)
endfunction
function HWi takes string IWi returns string
    local integer PWi = StringLength(IWi)
    local string DWi = ""
    local string AWi
    loop
        set PWi = PWi - 1
        set AWi = SubString(IWi, PWi, PWi + 1)
        if AWi == "a" or AWi == "b" or AWi == "c" or AWi == "d" or AWi == "e" or AWi == "f" or AWi == "g" or AWi == "h" or AWi == "j" or AWi == "k" or AWi == "m" or AWi == "n" or AWi == "o" or AWi == "p" or AWi == "q" or AWi == "r" or AWi == "s" or AWi == "t" or AWi == "u" or AWi == "v" or AWi == "w" or AWi == "x" or AWi == "y" or AWi == "z" or AWi == "2" or AWi == "3" or AWi == "4" or AWi == "5" or AWi == "6" or AWi == "7" or AWi == "8" or AWi == "9" then
            set DWi = "|cffffcc00" + AWi + "|r" + DWi
        elseif AWi == "-" then
            set DWi = "|cffdddddd-|r" + DWi
        else
            set DWi = AWi + DWi
        endif
        exitwhen PWi <= 0
    endloop
    return DWi
endfunction
function hmi takes string Rmi returns integer
    local integer Tmi = 0
    local string Ymi = "ABCDEFGHIJKLMNOPQRSTUVWXYZ"
    local string Gmi = "abcdefghijklmnopqrstuvwxyz"
    local string gmi = "0123456789"
    loop
        if SubString(Ymi, Tmi, Tmi + 1) == Rmi then
            return Tmi
        endif
        if SubString(Gmi, Tmi, Tmi + 1) == Rmi then
            return Tmi
        endif
        set Tmi = Tmi + 1
        exitwhen Tmi >= 26
    endloop
    set Tmi = 0
    loop
        if SubString(gmi, Tmi, Tmi + 1) == Rmi then
            return Tmi
        endif
        set Tmi = Tmi + 1
        exitwhen Tmi >= 10
    endloop
    return 0
endfunction
function DBu takes string UBu returns integer
    local integer IBu = 0
    local integer PBu = 0
    local string ABu = Mt[1 + GetPlayerId(GetTriggerPlayer())]
    if Cu then
        loop
            set PBu = PBu + hmi(SubString(ABu, IBu, IBu + 1))
            set IBu = IBu + 1
            exitwhen IBu >= StringLength(ABu)
        endloop
    endif
    set IBu = 0
    loop
        set PBu = PBu + hmi(SubString(UBu, IBu, IBu + 1))
        set IBu = IBu + 1
        exitwhen IBu >= StringLength(UBu)
    endloop
    return PBu
endfunction
function jTs takes nothing returns string
    local integer TTs = StringLength(Lu)
    local string GTs = ""
    local string gTs = ""
    local integer hTs = 0
    local integer FTs = 1000000
    local string kTs = "0123456789"
    local integer aTs = 0
    local integer nTs
    local integer dTs
    local integer fTs
    local integer RTs
    local integer array YTs
    loop
        set aTs = aTs + 1
        exitwhen aTs > Uu
        set GTs = GTs + I2S(Zu[aTs]) + "-"
    endloop
    set GTs = GTs + I2S(DBu(GTs))
    if Zu[$00000001] == 0 then
        set GTs = "-" + GTs
    endif
    set aTs = 0
    loop
        set YTs[aTs] = 0
        set aTs = aTs + 1
        exitwhen aTs >= 100
    endloop
    set RTs = 0
    set aTs = 0
    loop
        set nTs = 0
        loop
            set YTs[nTs] = YTs[nTs] * 11
            set nTs = nTs + 1
            exitwhen nTs > RTs
        endloop
        set fTs = 0
        set gTs = SubString(GTs, aTs, aTs + 1)
        loop
            exitwhen SubString(kTs, fTs, fTs + 1) == gTs
            set fTs = fTs + 1
            exitwhen fTs > 9
        endloop
        set YTs[$00000000] = YTs[$00000000] + fTs
        set nTs = 0
        loop
            set dTs = YTs[nTs] / FTs
            set YTs[nTs] = YTs[nTs] - dTs * FTs
            set YTs[nTs + 1] = YTs[nTs + 1] + dTs
            set nTs = nTs + 1
            exitwhen nTs > RTs
        endloop
        if dTs > 0 then
            set RTs = RTs + 1
        endif
        set aTs = aTs + 1
        exitwhen aTs >= StringLength(GTs)
    endloop
    set GTs = ""
    loop
        exitwhen RTs < 0
        set nTs = RTs
        loop
            exitwhen nTs <= 0
            set dTs = YTs[nTs] / TTs
            set YTs[nTs - 1] = YTs[nTs - 1] + (YTs[nTs] - dTs * TTs) * FTs
            set YTs[nTs] = dTs
            set nTs = nTs - 1
        endloop
        set dTs = YTs[nTs] / TTs
        set aTs = YTs[nTs] - dTs * TTs
        set GTs = GTs + SubString(Lu, aTs, aTs + 1)
        set YTs[nTs] = dTs
        if YTs[RTs] == 0 then
            set RTs = RTs - 1
        endif
    endloop
    set aTs = StringLength(GTs)
    set hTs = 0
    set gTs = ""
    loop
        set aTs = aTs - 1
        set gTs = gTs + SubString(GTs, aTs, aTs + 1)
        set hTs = hTs + 1
        if hTs == 4 and aTs > 0 then
            set gTs = gTs + "-"
            set hTs = 0
        endif
        exitwhen aTs <= 0
    endloop
    return gTs
endfunction
function YNi takes nothing returns string
    if Xu == false then
        set Lu = StringCase(Lu, true)
    endif
    return HWi(jTs())
endfunction
function Zii takes integer Qii, string Wii returns boolean
    local boolean Eii
    set DSw[ASw] = Wii
    set ASw = ASw + 1
    set Eii = false
    if Jyr(AF, Qii, "when calling has in CustomLinkedListRegistry, line 39") then
        call klS(AF, Qii, "when calling remove in CustomLinkedListRegistry, line 41")
        set Eii = true
    endif
    set ASw = ASw - 1
    return Eii
endfunction
function fsi takes integer asi, string nsi returns integer
    local integer dsi
    set DSw[ASw] = nsi
    set ASw = ASw + 1
    if yN[asi] == 0 then
        if asi == 0 then
            call tNr("Nullpointer exception when calling LinkedList.iterator", "when calling error in LinkedList, line 179")
        else
            call tNr("Called LinkedList.iterator on invalid object.", "when calling error in LinkedList, line 179")
        endif
    endif
    set dsi = c5r(asi, "when calling iterator in LinkedList, line 179")
    set ASw = ASw - 1
    return dsi
endfunction
function dBw takes integer qBw, string aBw returns integer
    local integer nBw
    set DSw[ASw] = aBw
    set ASw = ASw + 1
    set nBw = fsi(CM[qBw], "when calling iterator in CustomLinkedList, line 93")
    set ASw = ASw - 1
    return nBw
endfunction
function oxt takes player Sxt, string cxt returns nothing
    call SetPlayerName(Sxt, cxt)
endfunction
function dSs takes player qSs, boolean aSs returns nothing
    local integer nSs = hgr(qSs)
    if aSs then
        set Mt[nSs + 1] = wi[nSs + 1]
    else
        set Mt[nSs + 1] = ui[nSs + 1]
    endif
    call oxt(qSs, Mt[nSs + 1])
endfunction
function fFu takes string nFu returns integer
    local integer dFu
    set DSw[ASw] = nFu
    set ASw = ASw + 1
    if NX == 0 then
        if MX < 32768 then
            set MX = MX + 1
            set dFu = MX
            set wC[dFu] = 919
        else
            call tNr("Out of memory: Could not create CallbackSingle_doAfter_NpcHandler.", "when calling error in NpcHandler, line 509")
            set dFu = 0
        endif
    else
        set NX = NX - 1
        set dFu = BX[NX]
        set wC[dFu] = 919
    endif
    set ASw = ASw - 1
    return dFu
endfunction
function fhi takes player phi returns boolean
    local boolean ehi = false
    local integer qhi = 1
    local integer ahi = ko
    local group nhi
    local unit dhi
    loop
        exitwhen qhi > ahi
        set nhi = XbS(fc[qhi])
        loop
            exitwhen not hJw(nhi)
            set dhi = tPr(nhi)
            if eDs(dhi) == phi then
    set ehi = true
    exitwhen true
            endif
        endloop
        call lxs(nhi)
        set qhi = qhi + 1
    endloop
    set nhi = null
    set dhi = null
    return ehi
endfunction
function iHs takes integer tHs returns integer
    return XM[tHs]
endfunction
function gFi takes integer TFi, string YFi returns integer
    local integer GFi
    set DSw[ASw] = YFi
    set ASw = ASw + 1
    if sV[TFi] == 0 then
        if TFi == 0 then
            call tNr("Nullpointer exception when calling CustomLinkedList.getId", "when calling error in CustomLinkedList, line 34")
        else
            call tNr("Called CustomLinkedList.getId on invalid object.", "when calling error in CustomLinkedList, line 34")
        endif
    endif
    set GFi = iHs(TFi)
    set ASw = ASw - 1
    return GFi
endfunction
function gcu takes integer Ycu, string Gcu returns integer
    set DSw[ASw] = Gcu
    set ASw = ASw + 1
    if GpS(iH, Ycu, "when calling has in RevivalLocations, line 91") then
        set ASw = ASw - 1
        return 0
    elseif GpS(SH, Ycu, "when calling has in RevivalLocations, line 93") then
        set ASw = ASw - 1
        return 1
    elseif GpS(cH, Ycu, "when calling has in RevivalLocations, line 95") then
        set ASw = ASw - 1
        return 2
    elseif GpS(oH, Ycu, "when calling has in RevivalLocations, line 97") then
        set ASw = ASw - 1
        return 3
    elseif GpS(OH, Ycu, "when calling has in RevivalLocations, line 99") then
        set ASw = ASw - 1
        return 4
    endif
    set ASw = ASw - 1
    return 0
endfunction
function gku takes string Yku returns integer
    local integer Gku
    set DSw[ASw] = Yku
    set ASw = ASw + 1
    if LC == 0 then
        if XC < 32768 then
            set XC = XC + 1
            set Gku = XC
            set CC[Gku] = 1169
        else
            call tNr("Out of memory: Could not create ForGroupCallback_forEachIn_NpcHandler.", "when calling error in NpcHandler, line 580")
            set Gku = 0
        endif
    else
        set LC = LC - 1
        set Gku = KC[LC]
        set CC[Gku] = 1169
    endif
    set ASw = ASw - 1
    return Gku
endfunction
function ZrS takes integer ErS returns integer
    return QM[ErS]
endfunction
function iCi takes integer rCi, string sCi returns integer
    local integer tCi
    set DSw[ASw] = sCi
    set ASw = ASw + 1
    if MC[rCi] == 0 then
        if rCi == 0 then
            call tNr("Nullpointer exception when calling CustomHero.getHeroType", "when calling error in CustomHero, line 114")
        else
            call tNr("Called CustomHero.getHeroType on invalid object.", "when calling error in CustomHero, line 114")
        endif
    endif
    set tCi = ZrS(rCi)
    set ASw = ASw - 1
    return tCi
endfunction
function vgs takes integer xgs returns integer
    return xgs
endfunction
function hbu takes integer nbu, string dbu returns integer
    local integer fbu
    local integer Rbu
    local integer Tbu
    local integer Ybu
    local integer Gbu
    local integer gbu
    set DSw[ASw] = dbu
    set ASw = ASw + 1
    set Gbu = 0
    set fbu = Gbu
    set Rbu = c5r(AM[nbu], "when calling iterator in CustomHero, line 242")
    loop
        exitwhen not Tji(Rbu)
        set Tbu = LXi(Rbu)
        set gbu = MaS(fbu, Tbu)
        set fbu = gbu
    endloop
    call vms(Rbu, "when calling close in CustomHero, line 242")
    set Ybu = vgs(fbu)
    set ASw = ASw - 1
    return Ybu
endfunction
function jru takes integer hru, string Fru returns integer
    local integer kru
    set DSw[ASw] = Fru
    set ASw = ASw + 1
    if MC[hru] == 0 then
        if hru == 0 then
            call tNr("Nullpointer exception when calling CustomHero.critterTierToSaveLoad", "when calling error in CustomHero, line 240")
        else
            call tNr("Called CustomHero.critterTierToSaveLoad on invalid object.", "when calling error in CustomHero, line 240")
        endif
    endif
    set kru = hbu(hru, "when calling critterTierToSaveLoad in CustomHero, line 240")
    set ASw = ASw - 1
    return kru
endfunction
function k2r takes string h2r returns integer
    local integer F2r
    set DSw[ASw] = h2r
    set ASw = ASw + 1
    if NX == 0 then
        if MX < 32768 then
            set MX = MX + 1
            set F2r = MX
            set wC[F2r] = 920
        else
            call tNr("Out of memory: Could not create CallbackSingle_doAfter_NpcHandler.", "when calling error in NpcHandler, line 701")
            set F2r = 0
        endif
    else
        set NX = NX - 1
        set F2r = BX[NX]
        set wC[F2r] = 920
    endif
    set ASw = ASw - 1
    return F2r
endfunction
function OMs takes string tMs, string iMs, integer SMs returns integer
    local integer cMs = SMs
    local integer oMs = vQt(tMs) - vQt(iMs)
    loop
        exitwhen cMs > oMs
        if CAw(tMs, cMs, cMs + vQt(iMs)) == iMs then
            return cMs
        endif
        set cMs = cMs + 1
    endloop
    return - 1
endfunction
function xpr takes string gpr, string hpr, string Fpr returns string
    local string kpr = gpr
    local integer jpr
    if vQt(hpr) > 0 then
        set jpr = BgS(gpr, hpr)
        loop
            exitwhen not(jpr !=- 1)
            set kpr = CAw(kpr, $00000000, jpr) + Fpr + CAw(kpr, jpr + vQt(hpr), vQt(kpr))
            set jpr = OMs(kpr, hpr, jpr + vQt(Fpr))
        endloop
    endif
    return kpr
endfunction
function kms takes string hms returns string
    local string Fms = hms
    set Fms = xpr(Fms, "|r", "")
    set Fms = xpr(Fms, "|cffffcc00", "")
    set Fms = xpr(Fms, "|cffdddddd", "")
    return Fms
endfunction
function ncu takes integer ycu, boolean pcu, string ecu returns string
    local string qcu
    local integer acu
    set DSw[ASw] = ecu
    set ASw = ASw + 1
    set qcu = Iji("Never caught a fish", "when calling unObfuscate in PlayerCommands, line 222")
    set acu = Po[1 + ycu]
    if acu == 1 then
        set qcu = Iji("Fishing Newbie", "when calling unObfuscate in PlayerCommands, line 225")
    elseif acu == 2 then
        set qcu = Iji("Journeyman Fisherman", "when calling unObfuscate in PlayerCommands, line 227")
    elseif acu == 3 then
        set qcu = Iji("Expert Fisherman", "when calling unObfuscate in PlayerCommands, line 229")
    elseif acu == 4 then
        set qcu = Iji("Master Fisherman", "when calling unObfuscate in PlayerCommands, line 231")
    elseif acu == 5 then
        set qcu = Iji("Legendary Fisherman", "when calling unObfuscate in PlayerCommands, line 233")
    endif
    if not pcu then
        if hUu(qcu, "|c") or hUu(qcu, "|C") then
            set qcu = CAw(qcu, $0000000A, vQt(qcu))
        endif
        if Hnu(qcu, "|r") or Hnu(qcu, "|R") then
            set qcu = CAw(qcu, $00000000, vQt(qcu) - 2)
        endif
    endif
    set ASw = ASw - 1
    return qcu
endfunction
function sCw takes string uCw returns integer
    local integer rCw
    set DSw[ASw] = uCw
    set ASw = ASw + 1
    if kN == 0 then
        if jN < 32768 then
            set jN = jN + 1
            set rCw = jN
            set xN[rCw] = 1267
        else
            call tNr("Out of memory: Could not create StringIterator.", "when calling error in String, line 213")
            set rCw = 0
        endif
    else
        set kN = kN - 1
        set rCw = FN[kN]
        set xN[rCw] = 1267
    endif
    set ASw = ASw - 1
    return rCw
endfunction
function Oci takes integer oci returns nothing
endfunction
function xWu takes integer hWu, string FWu, integer kWu, integer jWu returns nothing
    call Oci(hWu)
    set gsw[hWu] = FWu
    set hsw[hWu] = kWu
    set Fsw[hWu] = jWu
endfunction
function D3s takes string Z3s, integer U3s, integer I3s, string P3s returns integer
    local integer A3s
    set DSw[ASw] = P3s
    set ASw = ASw + 1
    set A3s = sCw("when calling alloc_StringIterator in String, line 218")
    call xWu(A3s, Z3s, U3s, I3s)
    set ASw = ASw - 1
    return A3s
endfunction
function E8s takes string m8s, string Q8s returns integer
    local integer W8s
    set DSw[ASw] = Q8s
    set ASw = ASw + 1
    set W8s = D3s(m8s, $00000000, vQt(m8s), "when calling new_StringIterator in String, line 211")
    set ASw = ASw - 1
    return W8s
endfunction
function hlr takes integer glr returns nothing
endfunction
function ljr takes integer ojr, string Ojr returns nothing
    set DSw[ASw] = Ojr
    set ASw = ASw + 1
    if xN[ojr] == 0 then
        call tNr("Double free: object of type StringIterator", "when calling error in String, line 213")
    else
        set FN[kN] = ojr
        set kN = kN + 1
        set xN[ojr] = 0
    endif
    set ASw = ASw - 1
endfunction
function WTr takes integer mTr, string QTr returns nothing
    set DSw[ASw] = QTr
    set ASw = ASw + 1
    call hlr(mTr)
    call ljr(mTr, "when calling dealloc_StringIterator in String, line 213")
    set ASw = ASw - 1
endfunction
function JkS takes integer DkS, string HkS returns nothing
    set DSw[ASw] = HkS
    set ASw = ASw + 1
    if xN[DkS] == 0 then
        if DkS == 0 then
            call tNr("Nullpointer exception when calling StringIterator.StringIterator", "when calling error in String, line 213")
        else
            call tNr("Called StringIterator.StringIterator on invalid object.", "when calling error in String, line 213")
        endif
    endif
    call WTr(DkS, "when calling destroyStringIterator in String, line 213")
    set ASw = ASw - 1
endfunction
function Swr takes integer twr, string iwr returns nothing
    set DSw[ASw] = iwr
    set ASw = ASw + 1
    call JkS(twr, "when calling dispatch_StringIterator_destroyStringIterator in String, line 232")
    set ASw = ASw - 1
endfunction
function bEr takes integer OEr returns string
    local string lEr = CAw(gsw[OEr], hsw[OEr], hsw[OEr] + 1)
    set hsw[OEr] = hsw[OEr] + 1
    return lEr
endfunction
function x9i takes integer j9i returns boolean
    return hsw[j9i] < Fsw[j9i]
endfunction
function pSs takes string iSs, string SSs, string cSs, string oSs returns string
    local string OSs
    local integer lSs
    local string bSs
    local string ySs
    set DSw[ASw] = oSs
    set ASw = ASw + 1
    set OSs = iSs
    set lSs = E8s(SSs, "when calling iterator in StringDataUtils, line 98")
    loop
        exitwhen not x9i(lSs)
        set bSs = bEr(lSs)
        if V2w(OSs, bSs) then
            set ySs = xpr(OSs, bSs, cSs)
        else
            set ySs = OSs
        endif
        set OSs = ySs
    endloop
    call Swr(lSs, "when calling close in StringDataUtils, line 98")
    set ASw = ASw - 1
    return OSs
endfunction
function Y4r takes integer f4r, integer R4r, string T4r returns nothing
    set DSw[ASw] = T4r
    set ASw = ASw + 1
    call vwt(CM[f4r], R4r, "when calling add in CustomLinkedList, line 41")
    set ASw = ASw - 1
endfunction
function q9i takes integer y9i, integer p9i, string e9i returns nothing
    set DSw[ASw] = e9i
    set ASw = ASw + 1
    if sV[y9i] == 0 then
        if y9i == 0 then
            call tNr("Nullpointer exception when calling CustomLinkedList.add", "when calling error in CustomLinkedList, line 39")
        else
            call tNr("Called CustomLinkedList.add on invalid object.", "when calling error in CustomLinkedList, line 39")
        endif
    endif
    call Y4r(y9i, p9i, "when calling add in CustomLinkedList, line 39")
    set ASw = ASw - 1
endfunction
function E8i takes integer Q8i, unit W8i returns nothing
    call Ggr(W8i)
endfunction
function K5w takes integer D5w, unit H5w, string J5w returns nothing
    set DSw[ASw] = J5w
    set ASw = ASw + 1
    call vwt(Kww[D5w], Aei(H5w), "when calling add in LinkedList, line 540")
    set ASw = ASw - 1
endfunction
function Kku takes integer Dku, unit Hku, string Jku returns nothing
    set DSw[ASw] = Jku
    set ASw = ASw + 1
    call dii(Iji("|cffff0000You cannot enter this dungeon yet. Please wait for the current stage to finish.", "when calling unObfuscate in DungeonCmds, line 416"), 1.5, eDs(Hku))
    set ASw = ASw - 1
endfunction
function Mht takes integer Bht, unit Nht returns nothing
    call lTi(Nht, $000D0004)
    call qaS(Nht)
endfunction
function RcS takes integer ncS, unit dcS, string fcS returns nothing
    set DSw[ASw] = fcS
    set ASw = ASw + 1
    call dii(Iji("|cffff0000You cannot enter this dungeon yet. You need to kill Harbinger of Doom, Doppleganger, and Fusion Dragon in order to move forward.|r", "when calling unObfuscate in DungeonCmds, line 488"), 1.5, eDs(dcS))
    set ASw = ASw - 1
endfunction
function BKt takes string CKt returns integer
    local integer VKt
    set DSw[ASw] = CKt
    set ASw = ASw + 1
    if NX == 0 then
        if MX < 32768 then
            set MX = MX + 1
            set VKt = MX
            set wC[VKt] = 827
        else
            call tNr("Out of memory: Could not create CallbackSingle_doAfter_Hiero_Resurrection.", "when calling error in Hiero_Resurrection, line 84")
            set VKt = 0
        endif
    else
        set NX = NX - 1
        set VKt = BX[NX]
        set wC[VKt] = 827
    endif
    set ASw = ASw - 1
    return VKt
endfunction
function VTr takes unit CTr returns boolean
    return not ONi(Ns, eDs(CTr))
endfunction
function mqu takes unit Fqu returns boolean
    local real xqu = ANw(Fqu)
    local real vqu = XSw
    local real kqu = xqu
    local real jqu = vqu
    return (not XYt(kqu, jqu, Il))and(not XYt(kqu, jqu, Pl)) and(not XYt(kqu, jqu, Al)) and(not XYt(kqu, jqu, Dl))
endfunction
function pOS takes unit OOS, real lOS, real bOS, boolean yOS returns nothing
    call ReviveHero(OOS, lOS, bOS, yOS)
endfunction
function qsS takes player ysS, integer psS, boolean esS returns nothing
    call SetPlayerAbilityAvailable(ysS, psS, esS)
endfunction
function x_r takes player j_r returns nothing
    if ONi(us, j_r) then
        call yLt(us, j_r)
        call qsS(j_r, $41303154, true)
        call qsS(j_r, $41303254, true)
        call qsS(j_r, $41303757, true)
        call qsS(j_r, $41303155, true)
        call qsS(j_r, $41303255, true)
        call qsS(j_r, $41303758, true)
    endif
endfunction
function KWr takes unit EWr, player ZWr, string UWr returns nothing
    local player IWr
    local integer PWr
    local integer AWr
    local integer DWr
    local boolean HWr
    local integer JWr
    set DSw[ASw] = UWr
    set ASw = ASw + 1
    set IWr = eDs(EWr)
    set PWr = hgr(IWr)
    set AWr = GgS(IWr, "when calling getCustomPlayer in Hiero_Resurrection, line 50")
    if (not yXu(EWr))and t_u(EWr) and GpS(gQ, PWr, "when calling has in Hiero_Resurrection, line 52") and mqu(EWr) and VTr(EWr) then
        call x_r(IWr)
        call pOS(EWr, ANw(EWr), XSw, true)
        call b9i(EWr, Ges(EWr) * .3)
        call GYS(EWr, aSr(EWr) * .5)
        call O0s(IWr, EWr)
        call YJs(IWr, EWr, 0.)
        call dii("|cff00FF00Your hero was ressurected by " + ZXr(ZWr) + "!|r", 8., IWr)
        call DestroyTimerDialog(uW[PWr])
        call Hus(wW[PWr])
        call yLt(ws, IWr)
        if Jyr(rW, Aei(EWr), "when calling has in Hiero_Resurrection, line 66") then
            set DWr = wps(rW, Aei(EWr), "when calling get in Hiero_Resurrection, line 68")
            if DWr > 0 and DWr < 15 then
    call GZs(xus(PWr, "when calling getCustomPlayer in Hiero_Resurrection, line 70"), false, "when calling setCommandsDisabled in Hiero_Resurrection, line 70")
    set hu[PWr] = true
    call Axu(EWr, false)
    call xxr(Rc[DWr], IWr)
    call DDr(fc[DWr], EWr)
    call xxr(ws, IWr)
    call xxr(lt, IWr)
    call klS(rW, Aei(EWr), "when calling remove in Hiero_Resurrection, line 79")
            endif
        endif
        set HWr = dVw(AWr, "when calling getCameraIsLockedIn in Hiero_Resurrection, line 83")
        set JWr = BKt("when calling alloc_CallbackSingle_doAfter_Hiero_Resurrection in Hiero_Resurrection, line 84")
        call RUs(JWr)
        set f8[JWr] = HWr
        set R8[JWr] = EWr
        set T8[JWr] = AWr
        call Ybr(.1, JWr, "when calling doAfter in Hiero_Resurrection, line 84")
    endif
    set ASw = ASw - 1
    set IWr = null
endfunction
function TRS takes integer dRS, unit fRS, string RRS returns nothing
    set DSw[ASw] = RRS
    set ASw = ASw + 1
    call KWr(fRS, h8[dRS], "when calling resurrectUnit in Hiero_Resurrection, line 108")
    set ASw = ASw - 1
endfunction
function Vgu takes integer Xgu, unit Cgu returns nothing
    call uFr(Cgu)
endfunction
function Xqs takes integer Kqs, unit Lqs returns nothing
    if not m9r(Lqs) then
        call UnitDamageTargetBJ(Nrw[Kqs], Lqs, Mrw[Kqs], ATTACK_TYPE_CHAOS, DAMAGE_TYPE_UNIVERSAL)
    endif
endfunction
function eKs takes integer bKs, unit yKs returns nothing
    local player pKs = eDs(yKs)
    if yXu(yKs) and pKs != eDs(j9[bKs]) then
        call dii(pF + ZXr(eDs(j9[bKs])) + " 'luckily' hides from the Chronosphere behind a dragon egg.|r", 5., pKs)
    endif
    set pKs = null
endfunction
function HDt takes string ADt returns integer
    local integer DDt
    set DSw[ASw] = ADt
    set ASw = ASw + 1
    if NX == 0 then
        if MX < 32768 then
            set MX = MX + 1
            set DDt = MX
            set wC[DDt] = 748
        else
            call tNr("Out of memory: Could not create CallbackSingle_doAfter_DungeonCmds.", "when calling error in DungeonCmds, line 507")
            set DDt = 0
        endif
    else
        set NX = NX - 1
        set DDt = BX[NX]
        set wC[DDt] = 748
    endif
    set ASw = ASw - 1
    return DDt
endfunction
function lOu takes location OOu returns real
    set gcw = GetLocationX(OOu)
    set hcw = GetLocationY(OOu)
    return gcw
endfunction
function wxr takes string Njr returns integer
    local integer Mjr
    set DSw[ASw] = Njr
    set ASw = ASw + 1
    if NX == 0 then
        if MX < 32768 then
            set MX = MX + 1
            set Mjr = MX
            set wC[Mjr] = 747
        else
            call tNr("Out of memory: Could not create CallbackSingle_doAfter_DungeonCmds.", "when calling error in DungeonCmds, line 505")
            set Mjr = 0
        endif
    else
        set NX = NX - 1
        set Mjr = BX[NX]
        set wC[Mjr] = 747
    endif
    set ASw = ASw - 1
    return Mjr
endfunction
function Eyi takes unit Tyi, integer Yyi, string Gyi returns nothing
    local integer gyi
    local player hyi
    local real Fyi
    local real kyi
    local integer jyi
    local integer xyi
    local real vyi
    local real myi
    local real Qyi
    local real Wyi
    set DSw[ASw] = Gyi
    set ASw = ASw + 1
    set gyi = xus(hgr(eDs(Tyi)), "when calling getCustomPlayer in DungeonCmds, line 495")
    set vM[xMi(gyi, "when calling getCHero in DungeonCmds, line 496")] = Yyi
    call xxr(Rc[bj_forLoopAIndex], eDs(Tyi))
    call xxr(ws, eDs(Tyi))
    call xxr(lt, eDs(Tyi))
    call SetUnitPositionLoc(Tyi, vo)
    set hyi = eDs(Tyi)
    set vyi = lOu(vo)
    set myi = hcw
    set Fyi = vyi
    set kyi = myi
    set jyi = wxr("when calling alloc_CallbackSingle_doAfter_DungeonCmds in DungeonCmds, line 505")
    call RUs(jyi)
    set i1[jyi] = hyi
    set Qyi = Fyi
    set Wyi = kyi
    set S1[jyi] = Qyi
    set c1[jyi] = Wyi
    call Ybr(.1, jyi, "when calling doAfter in DungeonCmds, line 505")
    set xyi = HDt("when calling alloc_CallbackSingle_doAfter_DungeonCmds in DungeonCmds, line 507")
    call RUs(xyi)
    set o1[xyi] = gyi
    call Ybr(0.25, xyi, "when calling doAfter in DungeonCmds, line 507")
    set hu[hgr(eDs(Tyi))] = true
    call Axu(Tyi, false)
    set ASw = ASw - 1
    set hyi = null
endfunction
function qjs takes integer yjs, unit pjs, string ejs returns nothing
    set DSw[ASw] = ejs
    set ASw = ASw + 1
    call Eyi(pjs, t1[yjs], "when calling unitSetEnterDungeon in DungeonCmds, line 450")
    set ASw = ASw - 1
endfunction
function sTt takes integer wTt, unit uTt, string rTt returns nothing
    set DSw[ASw] = rTt
    set ASw = ASw + 1
    call dii(Iji("|cffff0000You cannot enter this dungeon yet. Please wait for the current stage to finish.", "when calling unObfuscate in DungeonCmds, line 437"), 1.5, eDs(uTt))
    set ASw = ASw - 1
endfunction
function tqi takes integer rqi, unit sqi returns nothing
    if not m9r(sqi) then
        call UnitDamageTargetBJ(usw[rqi], sqi, qH, ATTACK_TYPE_CHAOS, DAMAGE_TYPE_UNIVERSAL)
    endif
endfunction
function w9S takes integer B8S, unit N8S returns nothing
    local player M8S = eDs(N8S)
    if yXu(N8S) and M8S != eDs(x9[B8S]) then
        call dii(bF + "Chronosphere 'unluckily' hits " + ZXr(eDs(x9[B8S])) + "!!!|r", 5., M8S)
    endif
    set M8S = null
endfunction
function BIr takes item XIr returns integer
    local integer CIr = 0
    local integer VIr = GetItemTypeId(XIr)
    if wr == false then
        set wr = true
        call sHu()
    endif
    loop
        set CIr = CIr + 1
        exitwhen CIr > Bu
        if Hu[CIr] == VIr then
            return CIr
        endif
    endloop
    return BRi(VIr)
endfunction
function wNw takes integer LBw, unit XBw, string CBw returns nothing
    local integer VBw
    local integer BBw
    local item NBw
    local integer MBw
    set DSw[ASw] = CBw
    set ASw = ASw + 1
    set VBw = hgr(eDs(XBw))
    set Uu = Uu + 1
    set Zu[Uu] = UnitInventoryCount(XBw)
    set BBw = 1
    loop
        exitwhen BBw > 6
        set NBw = UnitItemInSlotBJ(XBw, BBw)
        set Uu = Uu + 1
        set Zu[Uu] = BIr(NBw)
        set Uu = Uu + 1
        if ait(NBw, "when calling isStackable in NpcHandler, line 592") then
            set MBw = Ots(NBw, VBw, "when calling getChargesVirtual in NpcHandler, line 592")
        else
            set MBw = 0
        endif
        set Zu[Uu] = MBw
        set BBw = BBw + 1
    endloop
    set ASw = ASw - 1
    set NBw = null
endfunction
function jcS takes integer hcS, unit FcS, string kcS returns nothing
    set DSw[ASw] = kcS
    set ASw = ASw + 1
    if CC[hcS] == 0 then
        if hcS == 0 then
            call tNr("Nullpointer exception when calling ForGroupCallback.callback", "when calling error in ClosureForGroups, line 4")
        else
            call tNr("Called ForGroupCallback.callback on invalid object.", "when calling error in ClosureForGroups, line 4")
        endif
    endif
    if CC[hcS] <= 1168 then
        if CC[hcS] <= 1165 then
            if CC[hcS] <= 1163 then
    if CC[hcS] <= 1162 then
                    call K5w(hcS, FcS, "when calling callback_forEachFrom_LinkedList in ClosureForGroups, line 4")
    else
                    call Vgu(hcS, FcS)
    endif
            elseif CC[hcS] <= 1164 then
    call Kku(hcS, FcS, "when calling callback_forEachIn_DungeonCmds in ClosureForGroups, line 4")
            else
    call sTt(hcS, FcS, "when calling callback_forEachIn_DungeonCmds in ClosureForGroups, line 4")
            endif
        elseif CC[hcS] <= 1167 then
            if CC[hcS] <= 1166 then
    call qjs(hcS, FcS, "when calling callback_forEachIn_DungeonCmds in ClosureForGroups, line 4")
            else
    call RcS(hcS, FcS, "when calling callback_forEachIn_DungeonCmds in ClosureForGroups, line 4")
            endif
        else
            call E8i(hcS, FcS)
        endif
    elseif CC[hcS] <= 1172 then
        if CC[hcS] <= 1170 then
            if CC[hcS] <= 1169 then
    call wNw(hcS, FcS, "when calling callback_forEachIn_NpcHandler in ClosureForGroups, line 4")
            else
    call TRS(hcS, FcS, "when calling callback_forEachIn_doAfter_Hiero_Resurrection in ClosureForGroups, line 4")
            endif
        elseif CC[hcS] <= 1171 then
            call Mht(hcS, FcS)
        else
            call tqi(hcS, FcS)
        endif
    elseif CC[hcS] <= 1174 then
        if CC[hcS] <= 1173 then
            call Xqs(hcS, FcS)
        else
            call eKs(hcS, FcS)
        endif
    else
        call w9S(hcS, FcS)
    endif
    set ASw = ASw - 1
endfunction
function siS takes integer uiS, string riS returns nothing
    set DSw[ASw] = riS
    set ASw = ASw + 1
    if CC[uiS] == 0 then
        call tNr("Double free: object of type ForGroupCallback", "when calling error in ClosureForGroups, line 3")
    else
        set KC[LC] = uiS
        set LC = LC + 1
        set CC[uiS] = 0
    endif
    set ASw = ASw - 1
endfunction
function HCt takes integer ACt, string DCt returns nothing
    set DSw[ASw] = DCt
    set ASw = ASw + 1
    call siS(ACt, "when calling dealloc_ForGroupCallback in ClosureForGroups, line 3")
    set ASw = ASw - 1
endfunction
function qju takes integer pju, string eju returns nothing
    set DSw[ASw] = eju
    set ASw = ASw + 1
    if CC[pju] == 0 then
        if pju == 0 then
            call tNr("Nullpointer exception when calling ForGroupCallback.ForGroupCallback", "when calling error in ClosureForGroups, line 3")
        else
            call tNr("Called ForGroupCallback.ForGroupCallback on invalid object.", "when calling error in ClosureForGroups, line 3")
        endif
    endif
    call HCt(pju, "when calling destroyForGroupCallback in ClosureForGroups, line 3")
    set ASw = ASw - 1
endfunction
function rou takes group Bcu, integer Ncu, string Mcu returns nothing
    local group wou
    local unit uou
    set DSw[ASw] = Mcu
    set ASw = ASw + 1
    set wou = XbS(Bcu)
    loop
        exitwhen not hJw(wou)
        set uou = tPr(wou)
        call jcS(Ncu, uou, "when calling callback in ClosureForGroups, line 47")
    endloop
    call lxs(wou)
    call qju(Ncu, "when calling dispatch_ForGroupCallback_destroyForGroupCallback in ClosureForGroups, line 48")
    set ASw = ASw - 1
    set wou = null
    set uou = null
endfunction
function s3s takes player u3s, integer r3s returns group
    set WG = CreateGroup()
    set bj_groupEnumTypeId = r3s
    call GroupEnumUnitsOfPlayer(WG, u3s, filterGetUnitsOfPlayerAndTypeId)
    return WG
endfunction
function vci takes group jci, group xci returns integer
    return BlzGroupAddGroupFast(xci, jci)
endfunction
function DKt takes player BJt, string NJt returns nothing
    local integer MJt
    local string wKt
    local unit uKt
    local string rKt
    local integer sKt
    local integer tKt
    local unit iKt
    local integer SKt
    local boolean cKt
    local integer oKt
    local boolean OKt
    local group lKt
    local unit bKt
    local string yKt
    local string pKt
    local integer eKt
    local integer qKt
    local integer aKt
    local unit nKt
    local integer dKt
    local integer fKt
    local boolean RKt
    local integer TKt
    local boolean YKt
    local group GKt
    local unit gKt
    local integer hKt
    local string FKt
    local integer kKt
    local integer jKt
    local item xKt
    local string vKt
    local integer mKt
    local integer QKt
    local item WKt
    local string EKt
    local string ZKt
    local integer UKt
    local real IKt
    local group PKt
    local real AKt
    set DSw[ASw] = NJt
    set ASw = ASw + 1
    set MJt = hgr(BJt)
    if V2w(Mt[MJt + 1], "#") then
        call dSs(BJt, false)
    endif
    set wKt = Mt[1 + MJt]
    set uKt = hqs(xMi(xus(MJt, "when calling getCustomPlayer in NpcHandler, line 492"), "when calling getCHero in NpcHandler, line 492"), "when calling getHero in NpcHandler, line 492")
    set rKt = GetUnitName(uKt)
    set sKt = xus(MJt, "when calling getCustomPlayer in NpcHandler, line 494")
    set tKt = xMi(sKt, "when calling getCHero in NpcHandler, line 495")
    set iKt = hqs(tKt, "when calling getHero in NpcHandler, line 496")
    set SKt = r5S(iKt)
    set cKt = false
    if not fhi(BJt) then
        if not(Jyr(OA, MJt, "when calling has in NpcHandler, line 502") and TYt(wps(OA, MJt, "when calling get in NpcHandler, line 502"))) then
            if (not GpS(lA, MJt, "when calling has in NpcHandler, line 503"))and(not GpS(aP, MJt, "when calling has in NpcHandler, line 503")) and(not(Jyr(nA, MJt, "when calling has in NpcHandler, line 504") and wps(nA, MJt, "when calling get in NpcHandler, line 504") > 5)) then
    call vwt(lA, MJt, "when calling add in NpcHandler, line 505")
    set cKt = true
    call Uot()
    set IKt = sA
    set oKt = fFu("when calling alloc_CallbackSingle_doAfter_NpcHandler in NpcHandler, line 509")
    call RUs(oKt)
    set fuw[oKt] = MJt
    call Ybr(IKt, oKt, "when calling doAfter in NpcHandler, line 509")
    set OKt = false
    set eA = lVs(BJt, Condition(SWw))
    set lKt = XbS(eA)
    loop
                    exitwhen not hJw(lKt)
                    set bKt = tPr(lKt)
                    if GpS(pA, r5S(bKt), "when calling has in NpcHandler, line 516") then
                        set OKt = true
                    endif
    endloop
    call lxs(lKt)
    call ugu(eA)
    if not OKt then
                    set Lu = iA[cA]
                    call SetPlayerName(BJt, Mt[1 + MJt])
                    set Uu = 1
                    set Zu[Uu] = sS[1 + MJt]
                    set Uu = Uu + 1
                    set Zu[Uu] = oS[1 + MJt]
                    set Uu = Uu + 1
                    set Zu[Uu] = GetPlayerState(BJt, PLAYER_STATE_RESOURCE_FOOD_USED)
                    set Uu = Uu + 1
                    set Zu[Uu] = Eo[1 + MJt]
                    set Uu = Uu + 1
                    set Zu[Uu] = Zo[1 + MJt]
                    set Uu = Uu + 1
                    set Zu[Uu] = Po[1 + MJt]
                    set Wu = lVs(BJt, Condition(SWw))
                    set Uu = Uu + 1
                    set Zu[Uu] = gcu(MJt, "when calling getRevivalLocationOnSave in NpcHandler, line 542")
                    set Uu = Uu + 1
                    set Zu[Uu] = x0S(BJt, "when calling getVoidlessMaxReachableStage in NpcHandler, line 544")
                    set Uu = Uu + 1
                    set Zu[Uu] = 1
                    call ForGroupBJ(Wu, yWw)
                    set Eu = YNi()
                    call QuestMessageBJ(MwS(BJt), $00000008, Iji("Hero Code: |cff87ceeb(Codes are case-sensitive and are restricted to the Player's Username.)|r", "when calling unObfuscate in NpcHandler, line 551"))
                    call DisplayTimedTextToForce(MwS(BJt), 45., Eu)
                    set yKt = kms(Eu)
                    set Lu = SA[cA]
                    set Uu = 1
                    if GetPlayerState(BJt, PLAYER_STATE_RESOURCE_GOLD) > bD then
                        set Zu[Uu] = bD
                    else
                        set Zu[Uu] = GetPlayerState(BJt, PLAYER_STATE_RESOURCE_GOLD)
                    endif
                    set Uu = Uu + 1
                    if GetPlayerState(BJt, PLAYER_STATE_RESOURCE_LUMBER) > yD then
                        set Zu[Uu] = yD
                    else
                        set Zu[Uu] = GetPlayerState(BJt, PLAYER_STATE_RESOURCE_LUMBER)
                    endif
                    set Uu = Uu + 1
                    set Zu[Uu] = Zt[1 + MJt]
                    set Uu = Uu + 1
                    set Zu[Uu] = jru(tKt, "when calling critterTierToSaveLoad in NpcHandler, line 573")
                    set Wu = lVs(BJt, Condition(pWw))
                    set Ct = s3s(BJt, l2s(Iji("h02J", "when calling unObfuscate in NpcHandler, line 576"), "when calling fromRawCode in NpcHandler, line 576"))
                    call vci(Wu, Ct)
                    set PKt = Wu
                    set eKt = gku("when calling alloc_ForGroupCallback_forEachIn_NpcHandler in NpcHandler, line 580")
                    call rou(PKt, eKt, "when calling forEachIn in NpcHandler, line 580")
                    set Eu = YNi()
                    call QuestMessageBJ(MwS(BJt), $00000008, Iji("Item Code: |cff87ceeb(Codes are case-sensitive and are restricted to the Player's Username.)|r", "when calling unObfuscate in NpcHandler, line 595"))
                    call DisplayTimedTextToForce(MwS(BJt), 45., Eu)
                    call DisplayTimedTextToForce(MwS(BJt), 45., Iji("|cff87ceebYou can get code in ", "when calling unObfuscate in NpcHandler, line 597") + "%userprofile%/Documents/Warcraft III/CustomMapData/" + nw + "/|r")
                    set pKt = kms(Eu)
                    set qKt = SNi("when calling addCustomList in NpcHandler, line 600")
                    set aKt = SNi("when calling addCustomList in NpcHandler, line 601")
                    set nKt = null
                    set fKt = 0
                    loop
                        exitwhen fKt > 5
                        set RKt = false
                        loop
                            exitwhen not not RKt
                            set dKt = GetRandomInt($00000000, $00000005)
                            if not CPw(qKt, dKt, "when calling has in NpcHandler, line 609") then
                                call q9i(qKt, dKt, "when calling add in NpcHandler, line 610")
                                set RKt = true
                            endif
                        endloop
                        set fKt = fKt + 1
                    endloop
                    set TKt = 0
                    loop
                        exitwhen TKt > 5
                        set YKt = false
                        loop
                            exitwhen not not YKt
                            set dKt = GetRandomInt($00000000, $00000005)
                            if not CPw(aKt, dKt, "when calling has in NpcHandler, line 617") then
                                call q9i(aKt, dKt, "when calling add in NpcHandler, line 618")
                                set YKt = true
                            endif
                        endloop
                        set TKt = TKt + 1
                    endloop
                    set GKt = XbS(Ct)
                    loop
                        exitwhen not hJw(GKt)
                        set gKt = tPr(GKt)
                        if r5S(gKt) == l2s(Iji("h02J", "when calling unObfuscate in NpcHandler, line 622"), "when calling fromRawCode in NpcHandler, line 622") and eDs(gKt) == BJt then
                            set nKt = gKt
                            exitwhen true
                        endif
                    endloop
                    call lxs(GKt)
                    set hKt = boS(uKt)
                    set FKt = fju(hKt)
                    if hKt < 10 then
                        set FKt = "00" + FKt
                    elseif hKt < 100 then
                        set FKt = "0" + FKt
                    endif
                    if nD == BJt then
                        call PreloadGenClear()
                        call Preload(Iji("MAP: Twilight", "when calling unObfuscate in NpcHandler, line 635") + "'" + Iji("s Eve R4", "when calling unObfuscate in NpcHandler, line 635"))
                        call Preload(Iji("Brought to you by Donach#6231 and KryptonRazer#3935, developers for new Teve Community!", "when calling unObfuscate in NpcHandler, line 636"))
                        call Preload(Iji("Join us at discord.tever.xyz and visit tever.xyz", "when calling unObfuscate in NpcHandler, line 637"))
                        call Preload(Iji("Version: Teve_R4.18.4", "when calling unObfuscate in NpcHandler, line 638"))
                        call Preload(Iji("Recommended Wc3 Version: 1.33.0.19378 (classic)", "when calling unObfuscate in NpcHandler, line 639"))
                        call Preload(Iji("Player Name: ", "when calling unObfuscate in NpcHandler, line 640") + wKt)
                        call Preload("   ")
                        call Preload(Iji("Hero: ", "when calling unObfuscate in NpcHandler, line 642") + rKt + " [Lv." + I2S(GetUnitLevel(uKt)) + "]")
                        call Preload(Iji("Load Type: Hero", "when calling unObfuscate in NpcHandler, line 643"))
                        call Preload(Iji("-load ", "when calling unObfuscate in NpcHandler, line 644") + yKt)
                        call Preload(Iji("PvP rank: ", "when calling unObfuscate in NpcHandler, line 645") + Wcr(MJt, false, "when calling heroPvPRankToString in NpcHandler, line 645") + " (Points: " + fju(Zt[1 + MJt]) + ")")
                        call Preload(Iji("Fishing profession: ", "when calling unObfuscate in NpcHandler, line 646") + ncu(MJt, false, "when calling heroFishingRankToString in NpcHandler, line 646") + " (Points: " + fju(Po[1 + MJt]) + ")")
                        call Preload(Iji("Imp5 Stage Finished: ", "when calling unObfuscate in NpcHandler, line 647") + fju(x0S(BJt, "when calling getVoidlessMaxReachableStage in NpcHandler, line 647")))
                        call Preload("   ")
                        call Preload(Iji("Load Type: Item", "when calling unObfuscate in NpcHandler, line 649"))
                        call Preload(Iji("-load2 ", "when calling unObfuscate in NpcHandler, line 650") + pKt)
                        call Preload(Iji("Gold: ", "when calling unObfuscate in NpcHandler, line 651") + fju(ATu(BJt)) + Iji("   Shards: ", "when calling unObfuscate in NpcHandler, line 651") + fju(kbr(BJt)))
                        call Preload(Iji("Unlocked Critter Tiers: ", "when calling unObfuscate in NpcHandler, line 652") + DGu(tKt, "when calling getUnlockedCritterTiersAsStringList in NpcHandler, line 652"))
                        call Preload(Iji("Items Worn by Hero: ", "when calling unObfuscate in NpcHandler, line 653"))
                        set kKt = dBw(qKt, "when calling iterator in NpcHandler, line 655")
                        loop
                            exitwhen not Tji(kKt)
                            set jKt = LXi(kKt)
                            set xKt = ofi(uKt, jKt)
                            set vKt = XRt(ofi(uKt, jKt))
                            if q3t(ofi(uKt, jKt)) == l2s(Iji(am, "when calling unObfuscate in NpcHandler, line 658"), "when calling fromRawCode in NpcHandler, line 658") then
                                set vKt = "The Destiny, The Fate, The Void"
                            elseif q3t(ofi(uKt, jKt)) == BF then
                                set vKt = "Stabilized Void Prism"
                            else
                                if hUu(vKt, "|c") or hUu(vKt, "|C") then
                                    set vKt = CAw(vKt, $0000000A, vQt(vKt))
                                endif
                                if Hnu(vKt, "|r") or Hnu(vKt, "|R") then
                                    set vKt = CAw(vKt, $00000000, vQt(vKt) - 2)
                                endif
                                if ait(xKt, "when calling isStackable in NpcHandler, line 667") then
                                    set vKt = vKt + " (" + fju(Ots(xKt, MJt, "when calling getChargesVirtual in NpcHandler, line 668")) + ")"
                                endif
                            endif
                            call Preload(vKt)
                        endloop
                        call vms(kKt, "when calling close in NpcHandler, line 655")
                        call Preload(Iji("Items in Stash: ", "when calling unObfuscate in NpcHandler, line 671"))
                        set mKt = dBw(aKt, "when calling iterator in NpcHandler, line 673")
                        loop
                            exitwhen not Tji(mKt)
                            set QKt = LXi(mKt)
                            set WKt = ofi(nKt, QKt)
                            set EKt = XRt(ofi(nKt, QKt))
                            if q3t(ofi(nKt, QKt)) == l2s(Iji(am, "when calling unObfuscate in NpcHandler, line 676"), "when calling fromRawCode in NpcHandler, line 676") then
                                set EKt = "The Destiny, The Fate, The Void"
                            elseif q3t(ofi(nKt, QKt)) == BF then
                                set EKt = "Stabilized Void Prism"
                            else
                                if hUu(EKt, "|c") or hUu(EKt, "|C") then
                                    set EKt = CAw(EKt, $0000000A, vQt(EKt))
                                endif
                                if Hnu(EKt, "|r") or Hnu(EKt, "|R") then
                                    set EKt = CAw(EKt, $00000000, vQt(EKt) - 2)
                                endif
                                if ait(WKt, "when calling isStackable in NpcHandler, line 685") then
                                    set EKt = EKt + " (" + fju(Ots(WKt, MJt, "when calling getChargesVirtual in NpcHandler, line 686")) + ")"
                                endif
                            endif
                            call Preload(EKt)
                        endloop
                        call vms(mKt, "when calling close in NpcHandler, line 673")
                        call Preload("        ")
                        call PreloadGenEnd(pSs(nw + "\\" + wKt + "\\" + rKt + "\\[Lv." + FKt + "]_" + rKt + ".txt", rA, "", "when calling replaceInvalidChars in NpcHandler, line 692"))
                        call dii(Iji("|cffc28f04Saving data to file, please wait ...|r", "when calling unObfuscate in NpcHandler, line 693"), 3., BJt)
                    endif
                    if tA != (- 1337.) then
                        set ZKt = ""
                        if nD == BJt then
                            set ZKt = pSs(nw + "\\" + wKt + "\\" + rKt + "\\backups\\[Lv." + FKt + "]_" + rKt + "_" + Uru(GQ) + ".txt", rA, "", "when calling replaceInvalidChars in NpcHandler, line 699")
                        endif
                        set AKt = tA
                        set UKt = k2r("when calling alloc_CallbackSingle_doAfter_NpcHandler in NpcHandler, line 701")
                        call RUs(UKt)
                        set Ruw[UKt] = BJt
                        set Tuw[UKt] = ZKt
                        call Ybr(AKt, UKt, "when calling doAfter in NpcHandler, line 701")
                    endif
                    call Zii(gFi(qKt, "when calling getId in NpcHandler, line 707"), "when calling removeCustomList in NpcHandler, line 707")
                    call Uot()
                    call Zii(gFi(aKt, "when calling getId in NpcHandler, line 709"), "when calling removeCustomList in NpcHandler, line 709")
    else
                    call dii(Iji("You cannot save while being in werebear or werewolf form.", "when calling unObfuscate in NpcHandler, line 713"), 3., BJt)
    endif
            elseif GpS(aP, MJt, "when calling has in NpcHandler, line 716") then
    call dii(Iji("For your protection saveload is disabled by anticheat.", "when calling unObfuscate in NpcHandler, line 717"), 3., BJt)
            elseif GpS(lA, MJt, "when calling has in NpcHandler, line 718") then
    call dii(Iji("Please wait (up to 5.0 seconds) before saving again.", "when calling unObfuscate in NpcHandler, line 719"), 3., BJt)
            else
    call dii(Iji("Please wait before saving again.", "when calling unObfuscate in NpcHandler, line 721"), 3., BJt)
            endif
        else
            call dii(Iji("Due to previous actions, saving is currently disabled.", "when calling unObfuscate in NpcHandler, line 723"), 3., BJt)
        endif
    else
        call dii(Iji("You cannot use save/load/repick in dungeons!", "when calling unObfuscate in NpcHandler, line 725"), 3., BJt)
    endif
    if (not cKt)and GpS(pA, iCi(tKt, "when calling getHeroType in NpcHandler, line 727"), "when calling has in NpcHandler, line 727") or GpS(pA, SKt, "when calling has in NpcHandler, line 727") or SKt == fk or SKt == 1211117640 then
        call dii(Iji("If you are NOT in a dungeon and got stuck in wrong form, try to use '-unform' command.", "when calling unObfuscate in NpcHandler, line 728"), 10., BJt)
    endif
    call Y2r(GetTriggeringTrigger())
    set ASw = ASw - 1
    set uKt = null
    set iKt = null
    set lKt = null
    set bKt = null
    set nKt = null
    set GKt = null
    set gKt = null
    set xKt = null
    set WKt = null
    set PKt = null
endfunction
function SqS takes trigger iqS returns nothing
    call DisableTrigger(iqS)
endfunction
function W7w takes string Q7w returns nothing
    set DSw[ASw] = Q7w
    set ASw = ASw + 1
    call SqS(GetTriggeringTrigger())
    call DKt(GetTriggerPlayer(), "when calling saveLoad_save in NpcHandler, line 483")
    set ASw = ASw - 1
endfunction
function G5S takes nothing returns nothing
    set ASw = 0
    call W7w("via function reference NpcHandler, line 58")
endfunction
function G6S takes nothing returns boolean
    set CA = ".................................!.#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[.]^_`abcdefghijklmnopqrstuvwxyz{|}~................................................................................................................................."
    return true
endfunction
function V4t takes string X4t returns boolean
    local boolean C4t
    set DSw[ASw] = X4t
    set ASw = ASw + 1
    set C4t = r5S(GetTriggerUnit()) == l2s(Iji("h03I", "when calling unObfuscate in Imp3DragonFortress, line 382"), "when calling fromRawCode in Imp3DragonFortress, line 382")
    set ASw = ASw - 1
    return C4t
endfunction
function G6w takes nothing returns boolean
    set ASw = 0
    return V4t("via function reference Imp3DragonFortress, line 1646")
endfunction
function GCr takes nothing returns boolean
    return IsUnitType(GetEventDamageSource(), UNIT_TYPE_HERO) != false
endfunction
function GDr takes nothing returns boolean
    return IsUnitEnemy(GetFilterUnit(), GetOwningPlayer(GetTriggerUnit()))
endfunction
function GEi takes nothing returns boolean
    return IsUnitType(GetTriggerUnit(), UNIT_TYPE_HERO) != false
endfunction
function GEs takes nothing returns boolean
    set OD = 1095784001
    return true
endfunction
function GFu takes nothing returns boolean
    return IsUnitType(GetTriggerUnit(), UNIT_TYPE_HERO) != false
endfunction
function B4s takes nothing returns boolean
    return IsUnitInGroup(gi, mi)
endfunction
function GhS takes nothing returns boolean
    return Zi[Wi[$00000001]] == gi
endfunction
function c6w takes nothing returns boolean
    return Qi == 0
endfunction
function hBs takes nothing returns boolean
    return Ei > Wi[$00000001]
endfunction
function llS takes nothing returns boolean
    return Qi == 0
endfunction
function GHu takes nothing returns nothing
    if B4s() then
        call GroupRemoveUnit(mi, gi)
        set Qi = Qi - 1
        set Wi[$00000002] = 1
        loop
            exitwhen Wi[$00000002] > Ei
            if GhS() then
    set Wi[$00000001] = Wi[$00000002]
    set Wi[$00000002] = Ei
            endif
            set Wi[$00000002] = Wi[$00000002] + 1
        endloop
        if hBs() then
            set Ui[Wi[$00000001]] = Ui[Ei]
            set Zi[Wi[$00000001]] = Zi[Ei]
            set Ii[Wi[$00000001]] = Ii[Ei]
            set Pi[Wi[$00000001]] = Pi[Ei]
            set Ai[Wi[$00000001]] = Ai[Ei]
            set Di[Wi[$00000001]] = Di[Ei]
            set Hi[Wi[$00000001]] = Hi[Ei]
            set Ji[Wi[$00000001]] = Ji[Ei]
            set Ki[Wi[$00000001]] = Ki[Ei]
            set Li[Wi[$00000001]] = Li[Ei]
            set Xi[Wi[$00000001]] = Xi[Ei]
            set Ci[Wi[$00000001]] = Ci[Ei]
            set Wi[$00000001] = Wi[$00000001] - 1
        endif
        set Zi[Ei] = null
        set Ei = Ei - 1
        if llS() then
            set Ei = 0
        endif
    endif
    if c6w() then
    endif
    set Qi = Qi + 1
    set Ei = Ei + 1
    set Ui[Ei] = hi
    set Zi[Ei] = gi
    set Vi[Ei] = Fi
    set Bi[Ei] = GetUnitLoc(gi)
    set Ii[Ei] = AngleBetweenPoints(Vi[Ei], Bi[Ei])
    set Pi[Ei] = ji * I2R(hi)
    set Ai[Ei] = .0
    set Di[Wi[$00000001]] = .0
    set Hi[Ei] = ki
    set Ji[Ei] = xi[$00000001]
    set Ki[Ei] = xi[$00000002]
    set Li[Ei] = vi
    set Xi[Wi[$00000001]] = 0
    set Ci[Wi[$00000001]] = 0
    call GroupAddUnit(mi, gi)
    call RemoveLocation(Fi)
    call RemoveLocation(Bi[Ei])
    call RemoveLocation(Vi[Ei])
endfunction
function bei takes nothing returns boolean
    return GetSpellAbilityId() == 1093679431 or GetSpellAbilityId() == 1093679188 or GetSpellAbilityId() == 1093679416
endfunction
function GIu takes nothing returns boolean
    return IsPlayerInForce(GetOwningPlayer(GetTriggerUnit()), Ns) and bei()
endfunction
function GJw takes nothing returns boolean
    return os[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))] >= 15 and GetUnitTypeId(GetOrderTargetUnit()) == sr and IsUnitInGroup(GetTriggerUnit(), kpu(300., GetUnitLoc(GetOrderTargetUnit())))
endfunction
function PKu takes nothing returns boolean
    return Po[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))] != 5
endfunction
function S7S takes nothing returns boolean
    return Io <= 80
endfunction
function XYi takes nothing returns boolean
    return Po[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))] != 5
endfunction
function a3t takes nothing returns boolean
    return UnitInventoryCount(GetTriggerUnit()) <= 4
endfunction
function wyr takes nothing returns boolean
    return Io <= 5
endfunction
function GKs takes nothing returns nothing
    if a3t() then
        call TriggerExecute(Tu)
        call SetUnitFacing(GetTriggerUnit(), 90. * bj_DEGTORAD)
        call ForceAddPlayer(iO, GetOwningPlayer(GetTriggerUnit()))
        call PauseUnit(GetTriggerUnit(), true)
        call SetUnitInvulnerable(GetTriggerUnit(), true)
        call DisplayTimedTextToForce(MwS(GetOwningPlayer(GetTriggerUnit())), 5., "|cffffcc00You swing your fishing line into the water.|r")
        call UnitAddAbility(GetTriggerUnit(), $41304144)
        call n6t(GetRandomReal(1., 2.5))
        if PKu() then
            set Io = GetRandomInt($00000001, $00000064)
            if wyr() then
    call KillUnit(GetTriggerUnit())
    call PauseUnit(GetTriggerUnit(), false)
    call SetUnitInvulnerable(GetTriggerUnit(), false)
    call ForceRemovePlayer(iO, GetOwningPlayer(GetTriggerUnit()))
    call UnitRemoveAbility(GetTriggerUnit(), $41304144)
    call DisplayTimedTextToForce(MwS(GetOwningPlayer(GetTriggerUnit())), 10., "|cffff0000KARMA! You have fallen into the river and drowned!|r\n|cff00ff00--- Courtesy of Wishing~|r")
    call TriggerExecute(Yu)
    return
            endif
        endif
        if XYi() then
            set Io = GetRandomInt($00000001, $00000064)
            if S7S() then
    call DisplayTimedTextToForce(MwS(GetOwningPlayer(GetTriggerUnit())), 5., "|cffffcc00You feel a tug on your fishing rod!|r")
    call SetCameraTargetControllerNoZForPlayer(GetOwningPlayer(GetTriggerUnit()), GetTriggerUnit(), 0., 0., false)
    set SO[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))] = 0
    set uO = GetOwningPlayer(GetTriggerUnit())
    call TriggerExecute(cY)
            else
    call PauseUnit(GetTriggerUnit(), false)
    call SetUnitInvulnerable(GetTriggerUnit(), false)
    call ForceRemovePlayer(iO, GetOwningPlayer(GetTriggerUnit()))
    call UnitRemoveAbility(GetTriggerUnit(), $41304144)
    call DisplayTimedTextToForce(MwS(GetOwningPlayer(GetTriggerUnit())), 5., "|cffffcc00There seems to be no bite.|r")
    call TriggerExecute(Yu)
            endif
        else
            call DisplayTimedTextToForce(MwS(GetOwningPlayer(GetTriggerUnit())), 5., "|cffffcc00You feel a tug on your fishing rod!|r")
            call SetCameraTargetControllerNoZForPlayer(GetOwningPlayer(GetTriggerUnit()), GetTriggerUnit(), 0., 0., false)
            set SO[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))] = 0
            set uO = GetOwningPlayer(GetTriggerUnit())
            call TriggerExecute(cY)
        endif
    else
        call PlaySoundBJ(oe)
        call DisplayTimedTextToForce(MwS(GetOwningPlayer(GetTriggerUnit())), 5., "|cffff0000Inventory must have at least 2 empty slots in order to begin fishing.|r")
        call TriggerExecute(Yu)
    endif
endfunction
function GLu takes nothing returns nothing
    call PanCameraToTimedLocForPlayer(GetEnumPlayer(), yr[1 + GetPlayerId(GetEnumPlayer())], 0.)
    call TriggerExecute(MT)
endfunction
function GMi takes nothing returns boolean
    return GetUnitTypeId(GetTriggerUnit()) == 1211117645 and GetUnitTypeId(GetOrderTargetUnit()) == 1747988812 and UnitHasItemOfTypeBJ(GetTriggerUnit(), $49303135) == false and IsPlayerInForce(GetOwningPlayer(GetTriggerUnit()), Vr) and IsPlayerInForce(GetOwningPlayer(GetTriggerUnit()), Fs) and IsUnitInGroup(GetTriggerUnit(), kpu(300., GetUnitLoc(GetOrderTargetUnit())))
endfunction
function GNr takes nothing returns nothing
    call ForceRemovePlayer(ys, GetOwningPlayer(GetTriggerUnit()))
    call ForceRemovePlayer(IS[$00000007], GetOwningPlayer(GetTriggerUnit()))
    call ForceAddPlayer(PS[$00000007], GetOwningPlayer(GetTriggerUnit()))
    call DestroyQuest(bs[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))])
    set bs[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))] = null
    call PlaySoundBJ(pe)
    call DisplayTimedTextToForce(MwS(GetOwningPlayer(GetOrderedUnit())), 5., "|cffffcc00You have completed the Quest|r.")
    call AddHeroXPSwapped(a, GetTriggerUnit(), true)
    call AdjustPlayerStateBJ($00001D4C, GetOwningPlayer(GetTriggerUnit()), PLAYER_STATE_RESOURCE_GOLD)
    set rw[(1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))) * 1000 + fkS(GetTriggerUnit())] = true
endfunction
function GPr takes nothing returns boolean
    return GetSpellAbilityId() == 1093678676
endfunction
function QYr takes trigger xYr, region vYr, boolexpr mYr returns event
    return TriggerRegisterEnterRegion(xYr, vYr, mYr)
endfunction
function C0t takes string m0t returns nothing
    local real Q0t
    local real W0t
    local real E0t
    local real Z0t
    local region U0t
    local region I0t
    local trigger P0t
    local trigger A0t
    local trigger D0t
    local trigger H0t
    local real J0t
    local real K0t
    local real L0t
    local real X0t
    set DSw[ASw] = m0t
    set ASw = ASw + 1
    set J0t = 3051.
    set K0t =- 13585.
    set Q0t = J0t
    set W0t = K0t
    set L0t = 3351.
    set X0t =- 13585.
    set E0t = L0t
    set Z0t = X0t
    set U0t = K2S(Rect(2912., - 13728., 3200., - 13440.))
    set I0t = K2S(Rect(3200., - 13728., 3488., - 13408.))
    call dps(aD[PLAYER_NEUTRAL_PASSIVE], l2s(Iji("hpal", "when calling unObfuscate in SecurityUtils, line 41"), "when calling fromRawCode in SecurityUtils, line 41"), Q0t, W0t, 0.)
    call dps(aD[PLAYER_NEUTRAL_PASSIVE], l2s(Iji("hpal", "when calling unObfuscate in SecurityUtils, line 42"), "when calling fromRawCode in SecurityUtils, line 42"), E0t, Z0t, 0.)
    set P0t = CreateTrigger()
    call QYr(P0t, U0t, null)
    set A0t = P0t
    call B2S(A0t, bEw)
    set D0t = CreateTrigger()
    call QYr(D0t, I0t, null)
    set H0t = D0t
    call B2S(H0t, yEw)
    set ASw = ASw - 1
    set U0t = null
    set I0t = null
    set P0t = null
    set A0t = null
    set D0t = null
    set H0t = null
endfunction
function L5S takes string J5S returns nothing
    local timer K5S
    set DSw[ASw] = J5S
    set ASw = ASw + 1
    set K5S = ZPs("when calling getTimer in SecurityUtils, line 28")
    call nnr(K5S, iF, pEw)
    set ASw = ASw - 1
    set K5S = null
endfunction
function E1s takes trigger m1s, real Q1s, boolean W1s returns event
    return TriggerRegisterTimerEvent(m1s, Q1s, W1s)
endfunction
function ZAw takes nothing returns nothing
    local trigger mAw = CreateTrigger()
    local trigger QAw
    local trigger WAw
    local trigger EAw
    call E1s(mAw, iF, true)
    set QAw = mAw
    call B2S(QAw, OEw)
    set WAw = QAw
    call B2S(WAw, OEw)
    set EAw = WAw
    call B2S(EAw, lEw)
    set mAw = null
    set QAw = null
    set WAw = null
    set EAw = null
endfunction
function Uhu takes string Zhu returns nothing
    set DSw[ASw] = Zhu
    set ASw = ASw + 1
    call ZAw()
    call L5S("when calling _CrashMapFunction2 in SecurityUtils, line 31")
    call C0t("when calling _CrashMapFunction3 in SecurityUtils, line 32")
    set ASw = ASw - 1
endfunction
function GPu takes nothing returns nothing
    set ASw = 0
    call Uhu("via function reference SecurityUtils, line 29")
endfunction
function Ajs takes nothing returns boolean
    return po[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))] <= 50
endfunction
function Skr takes integer ikr returns nothing
    set FM[ikr] = 0
endfunction
function Inr takes integer Unr returns nothing
    call Skr(Unr)
endfunction
function dDr takes string aDr returns integer
    local integer nDr
    set DSw[ASw] = aDr
    set ASw = ASw + 1
    if NX == 0 then
        if MX < 32768 then
            set MX = MX + 1
            set nDr = MX
            set wC[nDr] = 939
        else
            call tNr("Out of memory: Could not create CallbackSingle_doAfter_Reinforce_Effect.", "when calling error in Reinforce_Effect, line 152")
            set nDr = 0
        endif
    else
        set NX = NX - 1
        set nDr = BX[NX]
        set wC[nDr] = 939
    endif
    set ASw = ASw - 1
    return nDr
endfunction
function iKw takes effect uKw, real rKw, real sKw, real tKw returns nothing
    call BlzSetSpecialEffectOrientation(uKw, rKw, sKw, tKw)
endfunction
function kBw takes string hBw returns integer
    local integer FBw
    set DSw[ASw] = hBw
    set ASw = ASw + 1
    if NX == 0 then
        if MX < 32768 then
            set MX = MX + 1
            set FBw = MX
            set wC[FBw] = 940
        else
            call tNr("Out of memory: Could not create CallbackSingle_doAfter_Reinforce_Effect.", "when calling error in Reinforce_Effect, line 191")
            set FBw = 0
        endif
    else
        set NX = NX - 1
        set FBw = BX[NX]
        set wC[FBw] = 940
    endif
    set ASw = ASw - 1
    return FBw
endfunction
function UJi takes integer xJi, timer vJi, real mJi, integer QJi, string WJi returns nothing
    local timer EJi
    local timer ZJi
    set DSw[ASw] = WJi
    set ASw = ASw + 1
    set FM[xJi] = QJi
    set EJi = vJi
    call tNu(EJi, xJi, "when calling setData in ClosureTimers, line 153")
    set ZJi = EJi
    call nnr(ZJi, mJi, uZw)
    set kM[xJi] = ZJi
    set ASw = ASw - 1
    set EJi = null
    set ZJi = null
endfunction
function xIr takes integer gIr, timer hIr, real FIr, integer kIr, string jIr returns nothing
    set DSw[ASw] = jIr
    set ASw = ASw + 1
    if tC[gIr] == 0 then
        if gIr == 0 then
            call tNr("Nullpointer exception when calling CallbackCounted.start", "when calling error in ClosureTimers, line 150")
        else
            call tNr("Called CallbackCounted.start on invalid object.", "when calling error in ClosureTimers, line 150")
        endif
    endif
    call UJi(gIr, hIr, FIr, kIr, "when calling start in ClosureTimers, line 150")
    set ASw = ASw - 1
endfunction
function uJi takes timer VHi, real BHi, integer NHi, integer MHi, string wJi returns integer
    set DSw[ASw] = wJi
    set ASw = ASw + 1
    call xIr(MHi, VHi, BHi, NHi, "when calling start in ClosureTimers, line 69")
    set ASw = ASw - 1
    return MHi
endfunction
function l5s takes real i5s, integer S5s, integer c5s, string o5s returns integer
    local integer O5s
    set DSw[ASw] = o5s
    set ASw = ASw + 1
    set O5s = uJi(ZPs("when calling getTimer in ClosureTimers, line 81"), i5s, S5s, c5s, "when calling doPeriodicallyCounted in ClosureTimers, line 81")
    set ASw = ASw - 1
    return O5s
endfunction
function vYt takes string jYt returns integer
    local integer xYt
    set DSw[ASw] = jYt
    set ASw = ASw + 1
    if rC == 0 then
        if sC < 32768 then
            set sC = sC + 1
            set xYt = sC
            set tC[xYt] = 654
        else
            call tNr("Out of memory: Could not create CallbackCounted_doPeriodicallyCounted_Reinforce_Effect.", "when calling error in Reinforce_Effect, line 138")
            set xYt = 0
        endif
    else
        set rC = rC - 1
        set xYt = uC[rC]
        set tC[xYt] = 654
    endif
    set ASw = ASw - 1
    return xYt
endfunction
function wki takes string QFi returns nothing
    local unit WFi
    local real EFi
    local integer ZFi
    local string UFi
    local string IFi
    local effect PFi
    local effect AFi
    local effect DFi
    local effect HFi
    local effect JFi
    local effect KFi
    local effect LFi
    local effect XFi
    local effect CFi
    local integer VFi
    local integer BFi
    local integer NFi
    local real MFi
    set DSw[ASw] = QFi
    set ASw = ASw + 1
    set WFi = GetTriggerUnit()
    set po[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))] = GetRandomInt($00000001, $00000064)
    if Ajs() and(not J_i(GO, WFi)) then
        set EFi = Mri(GPi(WFi))
        call GroupAddUnit(GO, WFi)
        call GroupAddUnit(fo, WFi)
        set ZFi = bQs(NNs(ANw(WFi), XSw, WFi), Acw, Dcw, .03, .09, "|cffCFCFCFResound, Horn of Judgment!|r", 12., 2.5, $00000064, $00000064, $00000064, $00000000, null, "when calling _CreateTTExEntity_fading in Reinforce_Effect, line 113")
        set UFi = ""
        set IFi = ""
        if HEi(hgr(eDs(WFi)), hgr(nD), "when calling ifDisplayEffectProcs in Reinforce_Effect, line 116") then
            set UFi = "war3mapImported/GlaciarAura.mdl"
            set IFi = "war3mapImported/ShiningForce.mdl"
        else
            call jRu(ZFi, false)
        endif
        set no[1 + GetPlayerId(GetOwningPlayer(WFi))] = GetUnitLoc(WFi)
        set eo[1 + GetPlayerId(GetOwningPlayer(WFi))] = GetUnitFacing(WFi)
        set qo[1 + GetPlayerId(GetOwningPlayer(WFi))] = Shu(GetUnitLoc(WFi), 100., eo[1 + GetPlayerId(GetOwningPlayer(WFi))])
        set PFi = uSs(lOu(qo[1 + GetPlayerId(GetOwningPlayer(WFi))]), hcw, UFi)
        call iKw(PFi, EFi, Deg2Rad(90.), 0.)
        set AFi = PFi
        call vQs(AFi, wor(lOu(qo[1 + GetPlayerId(GetOwningPlayer(WFi))]), hcw) + 350.)
        set DFi = AFi
        call Wwu(DFi, 5.)
        set HFi = DFi
        call yYi(HFi, 8., "when calling destrAdvTimed in Reinforce_Effect, line 127")
        set KFi = uSs(lOu(no[1 + GetPlayerId(GetOwningPlayer(WFi))]), hcw, IFi)
        call iKw(KFi, EFi, Deg2Rad(90.), 0.)
        set LFi = KFi
        call vQs(LFi, wor(lOu(no[1 + GetPlayerId(GetOwningPlayer(WFi))]), hcw) + 100.)
        set XFi = LFi
        call Wwu(XFi, 0.)
        set CFi = XFi
        call yYi(CFi, 8., "when calling destrAdvTimed in Reinforce_Effect, line 130")
        set JFi = CFi
        call SetUnitAnimation(WFi, "spell")
        set MFi = iF
        set VFi = vYt("when calling alloc_CallbackCounted_doPeriodicallyCounted_Reinforce_Effect in Reinforce_Effect, line 138")
        call Inr(VFi)
        set hrw[VFi] = JFi
        call l5s(MFi, $00000014, VFi, "when calling doPeriodicallyCounted in Reinforce_Effect, line 138")
        set BFi = dDr("when calling alloc_CallbackSingle_doAfter_Reinforce_Effect in Reinforce_Effect, line 152")
        call RUs(BFi)
        set Frw[BFi] = WFi
        set krw[BFi] = EFi
        call Ybr(0.7, BFi, "when calling doAfter in Reinforce_Effect, line 152")
        set NFi = kBw("when calling alloc_CallbackSingle_doAfter_Reinforce_Effect in Reinforce_Effect, line 191")
        call RUs(NFi)
        set jrw[NFi] = WFi
        call Ybr(3., NFi, "when calling doAfter in Reinforce_Effect, line 191")
    endif
    set ASw = ASw - 1
    set WFi = null
    set PFi = null
    set AFi = null
    set DFi = null
    set HFi = null
    set JFi = null
    set KFi = null
    set LFi = null
    set XFi = null
    set CFi = null
endfunction
function GQu takes nothing returns nothing
    set ASw = 0
    call wki("via function reference Reinforce_Effect, line 208")
endfunction
function Tes takes nothing returns boolean
    return IsUnitDeadBJ(vr[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))])
endfunction
function wqi takes nothing returns boolean
    return IsUnitInGroup(GetTriggerUnit(), mo) == false
endfunction
function GSi takes nothing returns nothing
    call GroupAddUnit(YO, GetTriggerUnit())
    set xr[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))] = GetTriggerUnit()
    set vr[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))] = GetSpellTargetUnit()
    call PauseUnit(vr[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))], true)
    call SetUnitInvulnerable(vr[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))], true)
    call PauseUnit(xr[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))], true)
    set bj_forLoopAIndex = 1
    set bj_forLoopAIndexEnd = 3
    loop
        exitwhen bj_forLoopAIndex > bj_forLoopAIndexEnd
        call SetUnitAnimation(xr[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))], "attack")
        call AddSpecialEffectTargetUnitBJ("origin", vr[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))], "Abilities\\Spells\\Other\\Stampede\\StampedeMissileDeath.mdl")
        call DestroyEffect(bj_lastCreatedEffect)
        call TriggerSleepAction(.1)
        set bj_forLoopAIndex = bj_forLoopAIndex + 1
    endloop
    call SetUnitAnimation(xr[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))], "attack")
    call AddSpecialEffectTargetUnitBJ("origin", vr[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))], "Objects\\Spawnmodels\\Human\\HumanLargeDeathExplode\\HumanLargeDeathExplode.mdl")
    call DestroyEffect(bj_lastCreatedEffect)
    if wqi() then
        call PauseUnit(xr[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))], false)
    endif
    call PauseUnit(vr[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))], false)
    call SetUnitInvulnerable(vr[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))], false)
    call UnitDamageTargetBJ(xr[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))], vr[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))], 100. * I2R(GetUnitAbilityLevelSwapped($41303159, xr[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))])), ATTACK_TYPE_CHAOS, DAMAGE_TYPE_NORMAL)
    if Tes() then
        call KillUnit(vr[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))])
    endif
    call GroupRemoveUnit(YO, GetTriggerUnit())
    call ResetUnitAnimation(xr[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))])
    call ResetUnitAnimation(vr[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))])
endfunction
function Gau takes nothing returns boolean
    return RectContainsUnit(bb, GetTriggerUnit()) and Zo[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))] == 1 and GetItemTypeId(GetManipulatedItem()) == 1227895894 and IsPlayerInForce(GetOwningPlayer(GetTriggerUnit()), At) == false
endfunction
function cki takes timer uki, real rki, real ski, integer tki, string iki returns integer
    local integer Ski
    set DSw[ASw] = iki
    set ASw = ASw + 1
    set Ski = uJi(uki, rki, P3w(ski / rki + 0.5), tki, "when calling doPeriodicallyCounted in ClosureTimers, line 93")
    set ASw = ASw - 1
    return Ski
endfunction
function UYt takes real mYt, real QYt, integer WYt, string EYt returns integer
    local integer ZYt
    set DSw[ASw] = EYt
    set ASw = ASw + 1
    set ZYt = cki(ZPs("when calling getTimer in ClosureTimers, line 104"), mYt, QYt, WYt, "when calling doPeriodicallyTimed in ClosureTimers, line 104")
    set ASw = ASw - 1
    return ZYt
endfunction
function tyS takes string ryS returns integer
    local integer syS
    set DSw[ASw] = ryS
    set ASw = ASw + 1
    if rC == 0 then
        if sC < 32768 then
            set sC = sC + 1
            set syS = sC
            set tC[syS] = 667
        else
            call tNr("Out of memory: Could not create CallbackCounted_doPeriodicallyTimed_PVP.", "when calling error in PVP, line 105")
            set syS = 0
        endif
    else
        set rC = rC - 1
        set syS = uC[rC]
        set tC[syS] = 667
    endif
    set ASw = ASw - 1
    return syS
endfunction
function yXr takes string lXr returns integer
    local integer bXr
    set DSw[ASw] = lXr
    set ASw = ASw + 1
    if NX == 0 then
        if MX < 32768 then
            set MX = MX + 1
            set bXr = MX
            set wC[bXr] = 929
        else
            call tNr("Out of memory: Could not create CallbackSingle_doAfter_PVP.", "when calling error in PVP, line 110")
            set bXr = 0
        endif
    else
        set NX = NX - 1
        set bXr = BX[NX]
        set wC[bXr] = 929
    endif
    set ASw = ASw - 1
    return bXr
endfunction
function Uut takes string dut returns nothing
    local boolean fut
    local player Rut
    local integer Tut
    local unit Yut
    local unit Gut
    local real gut
    local real hut
    local real Fut
    local real kut
    local integer jut
    local rect xut
    local integer vut
    local integer mut
    local real Qut
    local real Wut
    local real Eut
    local real Zut
    set DSw[ASw] = dut
    set ASw = ASw + 1
    set fut = true
    set Rut = GetTriggerPlayer()
    set Tut = hgr(Rut)
    call ForGroupBJ(lVs(Rut, Condition(cpw)), opw)
    call ForGroupBJ(lVs(vt[1 + Tut], Condition(Opw)), lpw)
    set Yut = Et[1 + Tut]
    set Gut = Ut[1 + Tut]
    set Qut = ANw(Yut)
    set Wut = XSw
    set gut = Qut
    set hut = Wut
    set Eut = ANw(Gut)
    set Zut = XSw
    set Fut = Eut
    set kut = Zut
    set jut = c5r(oD, "when calling iterator in PVP, line 80")
    loop
        exitwhen not Tji(jut)
        set xut = Snu(LXi(jut), "when calling rectFromIndex in PVP, line 80")
        if XYt(gut, hut, xut) or XYt(Fut, kut, xut) then
            set fut = false
            call dii("|cffff0000Some magical barrier prevents you from engaging PvP in this area.|r", 5., eDs(Yut))
            call dii("|cffff0000Some magical barrier prevents you from engaging PvP in this area.|r", 5., eDs(Gut))
            exitwhen true
        endif
    endloop
    call vms(jut, "when calling close in PVP, line 80")
    if fut and fYr(ANw(Yut), XSw, ANw(Gut), XSw) <= 800. and yXu(Yut) and yXu(Gut) then
        call ForceAddPlayer(Lt, vt[1 + Tut])
        call ForceAddPlayer(Lt, Rut)
        call ForceAddPlayer(It, Rut)
        call CreateNUnitsAtLoc($00000001, l2s(Iji("h02I", "when calling unObfuscate in PVP, line 92"), "when calling fromRawCode in PVP, line 92"), Rut, GetUnitLoc(Et[1 + Tut]), 270.)
        call IssueImmediateOrderById(bj_lastCreatedUnit, $000D026C)
        call CreateNUnitsAtLoc($00000001, l2s(Iji("h02I", "when calling unObfuscate in PVP, line 94"), "when calling fromRawCode in PVP, line 94"), vt[1 + Tut], GetUnitLoc(Ut[1 + Tut]), 270.)
        call IssueImmediateOrderById(bj_lastCreatedUnit, $000D026C)
        call lKs(Yut, o, $00000001)
        call lKs(Gut, o, $00000001)
        call Ggr(Yut)
        call Ggr(Gut)
        set vut = tyS("when calling alloc_CallbackCounted_doPeriodicallyTimed_PVP in PVP, line 105")
        call Inr(vut)
        set Nuw[vut] = Rut
        set Muw[vut] = Tut
        call UYt(1., 5., vut, "when calling doPeriodicallyTimed in PVP, line 105")
        set mut = yXr("when calling alloc_CallbackSingle_doAfter_PVP in PVP, line 110")
        call RUs(mut)
        set wrw[mut] = Yut
        set urw[mut] = Gut
        set rrw[mut] = Rut
        set srw[mut] = Tut
        call Ybr(6., mut, "when calling doAfter in PVP, line 110")
    else
        set fut = false
        call dii("|cffff0000Your Hero must be within 800 range of the challenged player's Hero in order to duel. Both heroes cannot be dead.|r", 5., eDs(Yut))
        call dii("|cffff0000Your Hero must be within 800 range of the challenged player's Hero in order to duel. Both heroes cannot be dead.|r", 5., eDs(Gut))
    endif
    if not fut then
        call ForceRemovePlayer(mt, eDs(Yut))
        call ForceRemovePlayer(At, eDs(Yut))
        call ForceRemovePlayer(mt, eDs(Gut))
        call ForceRemovePlayer(At, eDs(Gut))
    endif
    set ASw = ASw - 1
    set Rut = null
    set Yut = null
    set Gut = null
    set xut = null
endfunction
function Gcr takes nothing returns nothing
    set ASw = 0
    call Uut("via function reference PVP, line 317")
endfunction
function Gdi takes nothing returns nothing
    call SetUnitPositionLoc(GetEnumUnit(), vo)
endfunction
function Gdu takes nothing returns boolean
    return IsUnitType(GetTriggerUnit(), UNIT_TYPE_HERO) != false
endfunction
function umt takes string wmt returns boolean
    set DSw[ASw] = wmt
    set ASw = ASw + 1
    set kJ = XQt("when calling new_LinkedList in ToggleEffectProcs, line 6")
    set jJ = XQt("when calling new_LinkedList in ToggleEffectProcs, line 7")
    set xJ = XQt("when calling new_LinkedList in ToggleEffectProcs, line 9")
    set ASw = ASw - 1
    return true
endfunction
function GeS takes nothing returns boolean
    set ASw = 0
    return umt("via function reference ToggleEffectProcs, line 1")
endfunction
function Ghi takes nothing returns nothing
    set uO = Player($00000008)
    call TriggerExecute(OY)
endfunction
function noS takes string yoS returns nothing
    local player poS
    local integer eoS
    local integer qoS
    local integer aoS
    set DSw[ASw] = yoS
    set ASw = ASw + 1
    set poS = GetEnumPlayer()
    set eoS = hgr(poS)
    call ResetToGameCameraForPlayer(poS, 0.)
    if GpS(gQ, eoS, "when calling has in Imp4, line 125") then
        set qoS = xus(hgr(GetEnumPlayer()), "when calling getCustomPlayer in Imp4, line 126")
        if qoS != 0 then
            set aoS = xMi(qoS, "when calling getCHero in Imp4, line 129")
            if aoS != 0 and hqs(aoS, "when calling getHero in Imp4, line 130") != null then
    call krS(qoS, "when calling cameraCheckLock in Imp4, line 131")
            endif
        endif
    endif
    set ASw = ASw - 1
    set poS = null
endfunction
function GkS takes nothing returns nothing
    set ASw = 0
    call noS("via function reference Imp4, line 268")
endfunction
function Gnr takes nothing returns boolean
    return GetUnitTypeId(GetOrderTargetUnit()) == mS and IsUnitInGroup(GetTriggerUnit(), kpu(300., GetUnitLoc(GetOrderTargetUnit()))) and IsPlayerInForce(GetOwningPlayer(GetTriggerUnit()), IS[$0000000B]) and KS[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))] >= 50
endfunction
function Gpi takes nothing returns nothing
    set Ti = Ti + 1
endfunction
function eZt takes nothing returns boolean
    return UnitInventoryCount(GetTriggerUnit()) != 6
endfunction
function Gqu takes nothing returns nothing
    if eZt() then
        call PlaySoundBJ(ce)
        set lw[GetPlayerId(GetOwningPlayer(GetTriggerUnit()))] = 1227894874
        call TriggerExecute(ow)
        call DisplayTextToForce(MwS(GetOwningPlayer(GetTriggerUnit())), "|cffffcc00Luna|r : |cff87ceebHmm, it appears you do have some skill. Very well; he was no easy feat so you have definitely earned this letter of recommendation.")
        call QuestSetDescription(Lr[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))], "I have it! I have the recommendation! Now to get back to my Class Trainer...")
    else
        call PlaySoundBJ(oe)
        call DisplayTimedTextToForce(MwS(GetOwningPlayer(GetTriggerUnit())), 7., "|cffff0000Inventory full! Cannot receive recommendation!|r")
    endif
endfunction
function Gru takes nothing returns nothing
    call SetUnitPositionLoc(GetEnumUnit(), br[1 + GetPlayerId(GetOwningPlayer(GetEnumUnit()))])
endfunction
function Bts takes hashtable Xts, integer Cts, integer Vts returns quest
    return LoadQuestHandle(Xts, Cts, Vts)
endfunction
function sHs takes integer uHs, integer rHs returns quest
    return Bts(qJ, uHs, rHs)
endfunction
function K7w takes integer A7w, integer D7w, string H7w returns quest
    local quest J7w
    set DSw[ASw] = H7w
    set ASw = ASw + 1
    if vB[A7w] == 0 then
        if A7w == 0 then
            call tNr("Nullpointer exception when calling Table.loadQuest", "when calling error in Table, line 183")
        else
            call tNr("Called Table.loadQuest on invalid object.", "when calling error in Table, line 183")
        endif
    endif
    set J7w = sHs(A7w, D7w)
    set ASw = ASw - 1
    set XIw = J7w
    set J7w = null
    return XIw
endfunction
function I7w takes integer E7w, string Z7w returns quest
    local quest U7w
    set DSw[ASw] = Z7w
    set ASw = ASw + 1
    call nfS(ZJ, $00000000, ConvertFogState(E7w), "when calling saveFogState in TypeCasting, line 172")
    set U7w = K7w(ZJ, $00000000, "when calling loadQuest in TypeCasting, line 173")
    set ASw = ASw - 1
    set ePw = U7w
    set U7w = null
    return ePw
endfunction
function NZr takes integer XZr, string CZr returns nothing
    local quest VZr
    local force BZr
    set DSw[ASw] = CZr
    set ASw = ASw + 1
    if Jyr(CX, XZr, "when calling has in WorldBoss_quests, line 18") then
        set VZr = I7w(wps(CX, XZr, "when calling get in WorldBoss_quests, line 19"), "when calling questFromIndex in WorldBoss_quests, line 19")
        if not IsQuestCompleted(VZr) then
            set BZr = GetForceOfPlayer(aD[XZr])
            call QuestSetCompleted(VZr, true)
            call QuestMessageBJ(BZr, $00000005, "|cffffcc00Betrayed Angels|r Quest Requirement Completed.")
            call kMs(BZr)
        endif
    endif
    set ASw = ASw - 1
    set VZr = null
    set BZr = null
endfunction
function oGu takes integer cGu returns integer
    return KD + JGi(cGu * 1. / 5)
endfunction
function Srr takes unit trr, unit irr returns boolean
    return (not(boS(trr) > boS(irr) + oGu(boS(irr))))and(not(boS(irr) > boS(trr) + oGu(boS(trr))))
endfunction
function dVt takes player aVt, integer nVt returns nothing
    call gGS(aVt, PLAYER_STATE_RESOURCE_GOLD, nVt)
endfunction
function CFt takes player KFt, string LFt, boolean XFt returns nothing
    if XFt then
        call dii(" ", bj_TEXT_DELAY_QUESTDONE, KFt)
        call dii(LFt, bj_TEXT_DELAY_QUESTDONE, KFt)
        if KFt == nD then
            call StartSound(bj_questCompletedSound)
        endif
    else
        call dii(" ", bj_TEXT_DELAY_QUESTUPDATE, KFt)
        call dii(LFt, bj_TEXT_DELAY_QUESTUPDATE, KFt)
        if KFt == nD then
            call StartSound(bj_questUpdatedSound)
        endif
    endif
    if KFt == nD then
        call FlashQuestDialogButton()
    endif
endfunction
function yZu takes unit sZu, unit tZu, integer iZu, integer SZu, string cZu, string oZu returns nothing
    local player OZu = eDs(sZu)
    local string lZu
    local string bZu
    if iZu > 1 then
        set bZu = "s"
    else
        set bZu = ""
    endif
    set lZu = bZu
    if iZu >= SZu then
        call CFt(OZu, "|cffffcc00" + cZu + "|r Quest Requirement Completed.", true)
    elseif vQt(oZu) > 30 then
        call CFt(OZu, oZu, false)
    else
        call CFt(OZu, fju(iZu) + " " + B2r(tZu) + lZu + oZu, false)
    endif
    set OZu = null
endfunction
function R3u takes string QMu returns nothing
    local unit WMu
    local integer EMu
    local unit ZMu
    local player UMu
    local real IMu
    local real PMu
    local integer AMu
    local integer DMu
    local unit HMu
    local group JMu
    local group KMu
    local group LMu
    local boolean XMu
    local group CMu
    local unit VMu
    local group BMu
    local unit NMu
    local player MMu
    local integer w3u
    local integer u3u
    local boolean r3u
    local integer s3u
    local string t3u
    local string i3u
    local string S3u
    local string c3u
    local string o3u
    local string O3u
    local string l3u
    local string b3u
    local integer y3u
    local integer p3u
    local integer e3u
    local integer q3u
    local integer a3u
    local integer n3u
    local real d3u
    local real f3u
    set DSw[ASw] = QMu
    set ASw = ASw + 1
    set WMu = GetTriggerUnit()
    set EMu = r5S(WMu)
    set ZMu = GetKillingUnit()
    set UMu = eDs(ZMu)
    if (not ONi(At, UMu))and GpS(gQ, hgr(UMu), "when calling has in Quests_PartyShare, line 101") then
        set d3u = ANw(WMu)
        set f3u = XSw
        set IMu = d3u
        set PMu = f3u
        set AMu = tOS(UMu, "when calling getCustomPlayer in Quests_PartyShare, line 103")
        set DMu = xMi(AMu, "when calling getCHero in Quests_PartyShare, line 104")
        if DMu != 0 and hqs(DMu, "when calling getHero in Quests_PartyShare, line 106") != null then
            set HMu = hqs(DMu, "when calling getHero in Quests_PartyShare, line 107")
            if ZMu != HMu then
    set ZMu = HMu
            endif
            call UOS($00000001, "when calling getGroup in Quests_PartyShare, line 112")
            set JMu = pIw
            set KMu = LLt(IMu, PMu, JD, "when calling getUnitsInRange in Quests_PartyShare, line 113")
            set LMu = LLt(ANw(ZMu), XSw, JD, "when calling getUnitsInRange in Quests_PartyShare, line 114")
            set XMu = giS(ZMu, UNIT_TYPE_HERO)
            call GroupAddGroup(LMu, KMu)
            set CMu = XbS(KMu)
            loop
    exitwhen not hJw(CMu)
    set VMu = tPr(CMu)
    if VMu != ZMu and GpS(gQ, hgr(eDs(VMu)), "when calling has in Quests_PartyShare, line 119") and(not J_i(JMu, VMu)) and giS(VMu, UNIT_TYPE_HERO) then
                    call DDr(JMu, VMu)
    endif
            endloop
            call lxs(CMu)
            call Sju(KMu, "when calling release in Quests_PartyShare, line 121")
            call Sju(LMu, "when calling release in Quests_PartyShare, line 122")
            set BMu = XbS(JMu)
            loop
    exitwhen not hJw(BMu)
    set NMu = tPr(BMu)
    if (XMu and Srr(ZMu, NMu))or((not XMu)and Srr(HMu, NMu)) then
                    set MMu = eDs(NMu)
                    set w3u = hgr(MMu)
                    set u3u = r5S(NMu)
                    set r3u = false
                    set s3u = EMu
                    if s3u == l2s(Iji("n005", "when calling unObfuscate in Quests_PartyShare, line 138"), "when calling fromRawCode in Quests_PartyShare, line 138") then
                        if rr[1 + w3u] != null then
                            set ur[1 + w3u] = ur[1 + w3u] + 1
                            call yZu(NMu, WMu, ur[1 + w3u], $00000005, "Ridding the Satyrs", " killed.")
                        endif
                        set r3u = true
                    elseif s3u == l2s(Iji("n00D", "when calling unObfuscate in Quests_PartyShare, line 143"), "when calling fromRawCode in Quests_PartyShare, line 143") then
                        if is[1 + w3u] != null then
                            set Ss[1 + w3u] = Ss[1 + w3u] + 1
                            call yZu(NMu, WMu, Ss[1 + w3u], $00000003, "Satyr Extermination", " killed.")
                        endif
                        set r3u = true
                    elseif s3u == l2s(Iji("n00K", "when calling unObfuscate in Quests_PartyShare, line 148"), "when calling fromRawCode in Quests_PartyShare, line 148") then
                        if ci[1 + w3u] != null then
                            set Oi[1 + w3u] = Oi[1 + w3u] + 1
                            call yZu(NMu, WMu, Oi[1 + w3u], $0000000A, "Head Hunter", " head(s) received.")
                        endif
                        set r3u = true
                    elseif s3u == l2s(Iji("n00G", "when calling unObfuscate in Quests_PartyShare, line 153"), "when calling fromRawCode in Quests_PartyShare, line 153") then
                        if oi[1 + w3u] != null then
                            set li[1 + w3u] = li[1 + w3u] + 1
                            if li[1 + w3u] > 1 then
                                set i3u = "s"
                            else
                                set i3u = ""
                            endif
                            set t3u = i3u
                            call yZu(NMu, WMu, li[1 + w3u], $0000000A, "Waterworks", " specimen" + t3u + " obtained.")
                        endif
                        set r3u = true
                    elseif s3u == l2s(Iji("n00M", "when calling unObfuscate in Quests_PartyShare, line 159"), "when calling fromRawCode in Quests_PartyShare, line 159") then
                        if qr[1 + w3u] != null then
                            set ar[1 + w3u] = ar[1 + w3u] + 1
                            if ar[1 + w3u] > 1 then
                                set c3u = "es"
                            else
                                set c3u = ""
                            endif
                            set S3u = c3u
                            call yZu(NMu, WMu, ar[1 + w3u], $0000000F, "Hunter in the Night", fju(ar[1 + w3u]) + " \"Shadow Witch" + S3u + "\" killed.            ")
                        endif
                        set r3u = true
                    elseif s3u == l2s(Iji("n00Q", "when calling unObfuscate in Quests_PartyShare, line 165"), "when calling fromRawCode in Quests_PartyShare, line 165") then
                        if cs[1 + w3u] != null then
                            set os[1 + w3u] = os[1 + w3u] + 1
                            if os[1 + w3u] > 1 then
                                set O3u = "s"
                            else
                                set O3u = ""
                            endif
                            set o3u = O3u
                            call yZu(NMu, WMu, os[1 + w3u], $0000000F, "No Rest For the Wicked", " head" + o3u + " received.")
                        endif
                        set r3u = true
                    elseif s3u == l2s(Iji("n019", "when calling unObfuscate in Quests_PartyShare, line 171"), "when calling fromRawCode in Quests_PartyShare, line 171") then
                        if WS[1 + w3u] != null then
                            set AS[1 + w3u] = AS[1 + w3u] + 1
                            call yZu(NMu, WMu, AS[1 + w3u], $00000032, "Vampirism", " blood collected.")
                        endif
                        set r3u = true
                    elseif s3u == l2s(Iji("n01G", "when calling unObfuscate in Quests_PartyShare, line 176"), "when calling fromRawCode in Quests_PartyShare, line 176") then
                        if JS[1 + w3u] != null and ONi(dc[$00000003], MMu) then
                            set KS[1 + w3u] = KS[1 + w3u] + 1
                            call yZu(NMu, WMu, KS[1 + w3u], $00000032, "Ghastly Appetite", " killed.")
                        endif
                        set r3u = true
                    elseif s3u == l2s(Iji("n028", "when calling unObfuscate in Quests_PartyShare, line 181"), "when calling fromRawCode in Quests_PartyShare, line 181") then
                        if xS[1 + w3u] != null and ONi(IS[$0000000C], MMu) then
                            set vS[1 + w3u] = vS[1 + w3u] + 1
                            call yZu(NMu, WMu, vS[1 + w3u], $0000003C, "Sludge Fudge", " Juice collected.")
                        endif
                        set r3u = true
                    elseif s3u == l2s(Iji("n018", "when calling unObfuscate in Quests_PartyShare, line 187"), "when calling fromRawCode in Quests_PartyShare, line 187") then
                        if ES[1 + w3u] != null and ONi(IS[$0000000E], MMu) then
                            set DS[1 + w3u] = DS[1 + w3u] + 1
                            call yZu(NMu, WMu, DS[1 + w3u], $00000032, "Demonology", " killed.")
                        endif
                        set r3u = true
                    elseif s3u == l2s(Iji("n01A", "when calling unObfuscate in Quests_PartyShare, line 192"), "when calling fromRawCode in Quests_PartyShare, line 192") then
                        if ES[1 + w3u] != null and ONi(IS[$0000000E], MMu) then
                            set DS[1 + w3u] = DS[1 + w3u] + 1
                            call yZu(NMu, WMu, DS[1 + w3u], $00000032, "Demonology", " killed.")
                        endif
                        set r3u = true
                    elseif s3u == l2s(Iji("n01D", "when calling unObfuscate in Quests_PartyShare, line 197"), "when calling fromRawCode in Quests_PartyShare, line 197") then
                        if ZS[1 + w3u] != null and ONi(IS[$0000000F], MMu) then
                            set HS[1 + w3u] = HS[1 + w3u] + 1
                            call yZu(NMu, WMu, HS[1 + w3u], $00000032, "Blood and Snow", " killed.")
                        endif
                        set r3u = true
                    elseif s3u == l2s(Iji("n01E", "when calling unObfuscate in Quests_PartyShare, line 202"), "when calling fromRawCode in Quests_PartyShare, line 202") then
                        if ZS[1 + w3u] != null and ONi(IS[$0000000F], MMu) then
                            set HS[1 + w3u] = HS[1 + w3u] + 1
                            call yZu(NMu, WMu, HS[1 + w3u], $00000032, "Blood and Snow", " killed.")
                        endif
                        set r3u = true
                    elseif s3u == l2s(Iji("n01F", "when calling unObfuscate in Quests_PartyShare, line 207"), "when calling fromRawCode in Quests_PartyShare, line 207") then
                        if ZS[1 + w3u] != null and ONi(IS[$0000000F], MMu) then
                            set HS[1 + w3u] = HS[1 + w3u] + 1
                            call yZu(NMu, WMu, HS[1 + w3u], $00000032, "Blood and Snow", " killed.")
                        endif
                        set r3u = true
                    elseif s3u == l2s(Iji("n01K", "when calling unObfuscate in Quests_PartyShare, line 212"), "when calling fromRawCode in Quests_PartyShare, line 212") then
                        if NS[1 + w3u] != null then
                            set BS[1 + w3u] = BS[1 + w3u] + 1
                            call yZu(NMu, WMu, BS[1 + w3u], $00000064, "Stocking Up - Life Essence", " life essence collected.")
                        endif
                        set r3u = true
                    elseif s3u == l2s(Iji("n01B", "when calling unObfuscate in Quests_PartyShare, line 217"), "when calling fromRawCode in Quests_PartyShare, line 217") then
                        if NS[1 + w3u] != null then
                            set VS[1 + w3u] = VS[1 + w3u] + 1
                            if VS[1 + w3u] > 1 then
                                set b3u = "s"
                            else
                                set b3u = ""
                            endif
                            set l3u = b3u
                            call yZu(NMu, WMu, VS[1 + w3u], $00000064, "Stocking Up - Snap Meat", " chunk" + l3u + " of meat.")
                        endif
                        if wc[1 + w3u] != null then
                            set uc[1 + w3u] = uc[1 + w3u] + 1
                            call yZu(NMu, WMu, uc[1 + w3u], $00000028, "Proving a Worth - Snap Dragons", " slain.")
                        endif
                        set r3u = true
                    elseif s3u == l2s(Iji("n016", "when calling unObfuscate in Quests_PartyShare, line 226"), "when calling fromRawCode in Quests_PartyShare, line 226") then
                        if wc[1 + w3u] != null then
                            set qc[1 + w3u] = qc[1 + w3u] + 1
                            call yZu(NMu, WMu, qc[1 + w3u], $00000028, "Proving a Worth - Lizards", " slain.")
                        endif
                        set r3u = true
                    elseif s3u == l2s(Iji("n017", "when calling unObfuscate in Quests_PartyShare, line 231"), "when calling fromRawCode in Quests_PartyShare, line 231") then
                        if wc[1 + w3u] != null then
                            set qc[1 + w3u] = qc[1 + w3u] + 1
                            call yZu(NMu, WMu, qc[1 + w3u], $00000028, "Proving a Worth - Lizards", " slain.")
                        endif
                        set r3u = true
                    elseif s3u == l2s(Iji("n01T", "when calling unObfuscate in Quests_PartyShare, line 236"), "when calling fromRawCode in Quests_PartyShare, line 236") then
                        if St[1 + w3u] != null and(not ONi(yt, MMu)) then
                            call ForceAddPlayer(yt, MMu)
                            if ONi(yt, MMu) and ONi(pt, MMu) and ONi(et, MMu) then
                                set p3u = 3
                            else
                                set p3u = 1
                            endif
                            set y3u = p3u
                            call yZu(NMu, WMu, y3u, $00000003, "Immortal's Final Breath", "|cffffcc00Obtained a fragment of the artifact from the Snoworc Camp|r")
                        endif
                        set r3u = true
                    elseif s3u == l2s(Iji("n01S", "when calling unObfuscate in Quests_PartyShare, line 242"), "when calling fromRawCode in Quests_PartyShare, line 242") then
                        if St[1 + w3u] != null and(not ONi(pt, MMu)) then
                            call ForceAddPlayer(pt, MMu)
                            if ONi(yt, MMu) and ONi(pt, MMu) and ONi(et, MMu) then
                                set q3u = 3
                            else
                                set q3u = 1
                            endif
                            set e3u = q3u
                            call yZu(NMu, WMu, e3u, $00000003, "Immortal's Final Breath", "|cffffcc00Obtained a fragment of the artifact from the Cemetery|r")
                        endif
                        set r3u = true
                    elseif s3u == l2s(Iji("n01M", "when calling unObfuscate in Quests_PartyShare, line 248"), "when calling fromRawCode in Quests_PartyShare, line 248") then
                        if St[1 + w3u] != null and(not ONi(et, MMu)) then
                            call ForceAddPlayer(et, MMu)
                            if ONi(yt, MMu) and ONi(pt, MMu) and ONi(et, MMu) then
                                set n3u = 3
                            else
                                set n3u = 1
                            endif
                            set a3u = n3u
                            call yZu(NMu, WMu, a3u, $00000003, "Immortal's Final Breath", "|cffffcc00Obtained a fragment of the artifact from the Unknown Regions|r")
                        endif
                        set r3u = true
                    elseif s3u == l2s(Iji("U000", "when calling unObfuscate in Quests_PartyShare, line 256"), "when calling fromRawCode in Quests_PartyShare, line 256") then
                        if bs[1 + w3u] != null and(not ONi(ys, MMu)) then
                            call ForceAddPlayer(ys, eDs(NMu))
                            call yZu(NMu, WMu, $00000001, $00000001, "A Dish Best Served Cold", "I have killed Frostfang and obtained some of his meat and paw.")
                        endif
                        if u3u == l2s(Iji("H003", "when calling unObfuscate in Quests_PartyShare, line 260"), "when calling fromRawCode in Quests_PartyShare, line 260") and ONi(nr, MMu) and(not ONi(fr, MMu)) then
                            call ForceAddPlayer(fr, MMu)
                            call QuestMessageBJ(MwS(MMu), $00000002, "|cffffcc002nd Job Advancement Quest Completed|r.")
                            call QuestSetDescription(dr[1 + w3u], "I have slained the might bear and obtained his fang. I have to return to the trainer...")
                        endif
                        set r3u = true
                    elseif s3u == l2s(Iji("U001", "when calling unObfuscate in Quests_PartyShare, line 265"), "when calling fromRawCode in Quests_PartyShare, line 265") then
                        if Os[1 + w3u] != null and(not ONi(ls, MMu)) then
                            call ForceAddPlayer(ls, eDs(NMu))
                            call yZu(NMu, WMu, $00000001, $00000001, "The Enemy of my Enemy", "I have killed Stitches and scavenged his hook.")
                        endif
                        set r3u = true
                    elseif s3u == l2s(Iji("n012", "when calling unObfuscate in Quests_PartyShare, line 271"), "when calling fromRawCode in Quests_PartyShare, line 271") then
                        if ft[1 + w3u] != null and(not ONi(Rt, MMu)) then
                            call ForceAddPlayer(Rt, eDs(NMu))
                            call yZu(NMu, WMu, $00000001, $00000001, "Gold Rush", "I have killed the Goblin and obtained one of his explosives.")
                        endif
                        set r3u = true
                    elseif s3u == l2s(Iji("U003", "when calling unObfuscate in Quests_PartyShare, line 277"), "when calling fromRawCode in Quests_PartyShare, line 277") then
                        if rc[1 + w3u] != null then
                            set sc[1 + w3u] = sc[1 + w3u] + 1
                            call yZu(NMu, WMu, sc[1 + w3u], $00000001, "Armoured Pride", "I have destroyed the leader of the goblins. Time to report back to Arnold.")
                        endif
                        set r3u = true
                    elseif s3u == l2s(Iji("U004", "when calling unObfuscate in Quests_PartyShare, line 283"), "when calling fromRawCode in Quests_PartyShare, line 283") then
                        if Lr[1 + w3u] != null and(not ONi(Vr, MMu)) then
                            call ForceAddPlayer(Vr, eDs(NMu))
                            call yZu(NMu, WMu, $00000001, $00000001, "3rd Job Advancement Quest", "|cffffcc00I have killed the Lord of Puzzles and received his bony hand|r.")
                            call QuestSetDescription(Lr[1 + w3u], "I should get back to Luna and tell her I have killed the Lord of Puzzles.")
                        endif
                        set r3u = true
                    elseif s3u == l2s(Iji("U006", "when calling unObfuscate in Quests_PartyShare, line 291"), "when calling fromRawCode in Quests_PartyShare, line 291") then
                        if st[1 + w3u] != null and(not ONi(Ft, MMu)) and u3u == l2s(Iji("H015", "when calling unObfuscate in Quests_PartyShare, line 292"), "when calling fromRawCode in Quests_PartyShare, line 292") then
                            call ForceAddPlayer(Ft, eDs(NMu))
                            call yZu(NMu, WMu, $00000001, $00000001, "4th Job Advancement Quest", "|cffffcc00I have killed the Leviathan. Now to return to Luna|r.")
                            call QuestSetDescription(st[1 + w3u], "I should get back to Luna and tell her I have killed the Abominable Hydra.")
                        endif
                        set r3u = true
                    elseif s3u == l2s(Iji("n024", "when calling unObfuscate in Quests_PartyShare, line 298"), "when calling fromRawCode in Quests_PartyShare, line 298") then
                        if st[1 + w3u] != null and ONi(rt, MMu) and u3u == l2s(Iji("H010", "when calling unObfuscate in Quests_PartyShare, line 299"), "when calling fromRawCode in Quests_PartyShare, line 299") then
                            call ForceAddPlayer(ii, eDs(NMu))
                            call yZu(NMu, WMu, $00000001, $00000001, "4th Job Advancement Quest", "|cffffcc00I have killed Lord De Seis. I should get back to Nazgul|r.")
                            call QuestSetDescription(st[1 + w3u], "I should get back to Nazgul and tell him I have killed Lord De Seis and am willing to lose my humanity...")
                        endif
                        set r3u = true
                    elseif s3u == k6w("48296085387385296685", "when calling unObfuscateInt in Quests_PartyShare, line 306") then
                        if Jyr(CX, w3u, "when calling has in Quests_PartyShare, line 307") then
                            call NZr(w3u, "when calling completeQuest_betrayedAngels in Quests_PartyShare, line 308")
                        endif
                        call N3r(MMu, $00000003)
                        set r3u = true
                    endif
                    if r3u and NMu != ZMu and Jyr(HD, EMu, "when calling has in Quests_PartyShare, line 312") then
                        call dVt(eDs(NMu), wps(HD, EMu, "when calling get in Quests_PartyShare, line 313"))
                        call miS()
                    endif
    endif
            endloop
            call lxs(BMu)
            call Sju(JMu, "when calling release in Quests_PartyShare, line 316")
        endif
    endif
    set ASw = ASw - 1
    set WMu = null
    set ZMu = null
    set UMu = null
    set HMu = null
    set JMu = null
    set KMu = null
    set LMu = null
    set CMu = null
    set VMu = null
    set BMu = null
    set NMu = null
    set MMu = null
endfunction
function Gts takes nothing returns nothing
    set ASw = 0
    call R3u("via function reference Quests_PartyShare, line 325")
endfunction
function Gur takes nothing returns boolean
    return IsUnitEnemy(GetFilterUnit(), GetOwningPlayer(GetTriggerUnit()))
endfunction
function Gxu takes nothing returns boolean
    return (GetItemTypeId(GetManipulatedItem()) == 1227895620 and IsUnitType(GetTriggerUnit(), UNIT_TYPE_HERO) and GetHeroLevel(GetTriggerUnit()) >= 10 and IsPlayerInForce(GetOwningPlayer(GetTriggerUnit()), IS[$00000003]) == false) != false
endfunction
function H3s takes nothing returns nothing
    call IssueImmediateOrderById(GetTriggerUnit(), $000D0004)
    call DisplayTimedTextToForce(MwS(GetOwningPlayer(GetTriggerUnit())), 5., "|cffff0000You cannot teleport now.|r")
endfunction
function H3w takes nothing returns nothing
    call ForceRemovePlayer(Gi, GetEnumPlayer())
endfunction
function BUr takes unit XUr, unit CUr returns boolean
    local real VUr = Nbs(GPi(XUr)) - Nbs(GPi(CUr))
    return (- PH) <= VUr and VUr <= PH
endfunction
function D3w takes unit A3w returns real
    return BlzGetLocalUnitZ(A3w)
endfunction
function Upi takes unit Epi, integer Zpi returns nothing
    call BlzEndUnitAbilityCooldown(Epi, Zpi)
endfunction
function Bbi takes string Ibi returns nothing
    local unit Pbi
    local unit Abi
    local integer Dbi
    local integer Hbi
    local integer Jbi
    local boolean Kbi
    local texttag Lbi
    local texttag Xbi
    local texttag Cbi
    local texttag Vbi
    set DSw[ASw] = Ibi
    set ASw = ASw + 1
    set Pbi = GetSpellTargetUnit()
    set Abi = GetTriggerUnit()
    set Dbi = GetSpellAbilityId()
    if gir(Abi, Dbi) * 100 > 1500 then
        set Jbi = 1500
    else
        set Jbi = gir(Abi, Dbi) * 100
    endif
    set Hbi = Jbi
    set Kbi = iCu(wps(gg, Aei(Pbi), "when calling get in Stalker_Backstab, line 37"), "when calling unitFromIndex in Stalker_Backstab, line 37") == Abi and iCu(wps(gg, Aei(Pbi), "when calling get in Stalker_Backstab, line 37"), "when calling unitFromIndex in Stalker_Backstab, line 37") != null
    if (not BUr(Abi, Pbi))and(not Kbi) then
        call DisplayTextToForce(MwS(GetOwningPlayer(GetTriggerUnit())), "|cffff0000You must be behind the target|r.")
        call IssueImmediateOrderById(GetTriggerUnit(), $000D0004)
        call Upi(Abi, Dbi)
        call Ziu(Abi, xvt(Hbi))
        set ASw = ASw - 1
        set Pbi = null
        set Abi = null
        set Lbi = null
        set Xbi = null
        set Cbi = null
        set Vbi = null
        return
    endif
    if GetRandomInt($00000001, $00000064) <= 55 and(not Kbi) then
        set Lbi = CreateTextTagUnitBJ("|cff800080Backstab!|r", Abi, D3w(Abi) + 100., 12., 255., 0., 0., 0.)
        call Hot(Lbi, .03, .09)
        set Xbi = Lbi
        call wfu(Xbi, false)
        set Cbi = Xbi
        call Zkr(Cbi, 1.)
        set Vbi = Cbi
        call Usr(Vbi, 2.)
        call UnitDamageTargetBJ(GetTriggerUnit(), GetSpellTargetUnit(), 3000. * I2R(GetUnitAbilityLevelSwapped(GetSpellAbilityId(), GetTriggerUnit())), ATTACK_TYPE_CHAOS, DAMAGE_TYPE_DIVINE)
    else
        call UnitDamageTargetBJ(GetTriggerUnit(), GetSpellTargetUnit(), 1000. * I2R(GetUnitAbilityLevelSwapped(GetSpellAbilityId(), GetTriggerUnit())), ATTACK_TYPE_CHAOS, DAMAGE_TYPE_DIVINE)
    endif
    set ASw = ASw - 1
    set Pbi = null
    set Abi = null
    set Lbi = null
    set Xbi = null
    set Cbi = null
    set Vbi = null
endfunction
function H4r takes nothing returns nothing
    set ASw = 0
    call Bbi("via function reference Stalker_Backstab, line 64")
endfunction
function H4s takes nothing returns nothing
    call SetUnitLifePercentBJ(GetEnumUnit(), 100.)
endfunction
function H4u takes nothing returns nothing
    local player P4u = uO
    local integer D4u = 1
    local unit I4u
    local group A4u
    call ForceAddPlayer(lt, P4u)
    loop
        exitwhen D4u > ku
        if GetRandomInt($00000001, $00000002) == 1 then
            call DisplayTimedTextToPlayer(P4u, 0., 0., 4., "Press the [|cffffcc00UP ARROW KEY!|r]")
            call ForceAddPlayer(rO, P4u)
        else
            call DisplayTimedTextToPlayer(P4u, 0., 0., 4., "Press the [|cff00ff00DOWN ARROW KEY!|r]")
            call ForceAddPlayer(sO, P4u)
        endif
        call StartTimerBJ(tO[1 + GetPlayerId(P4u)], false, 1.0)
        call TriggerSleepAction(1.1)
        set D4u = D4u + 1
    endloop
    call ForceRemovePlayer(iO, P4u)
    set A4u = lVs(P4u, Condition(ipw))
    set I4u = GroupPickRandomUnit(A4u)
    call PauseUnit(I4u, false)
    call SetUnitInvulnerable(I4u, false)
    call UnitRemoveAbility(GetTriggerUnit(), $41304144)
    call DestroyGroup(A4u)
    call ResetToGameCameraForPlayer(P4u, 0.)
    call DisplayTimedTextToPlayer(P4u, 0., 0., 12., "|cff00ff00SCORE|r: " + I2S(SO[1 + GetPlayerId(P4u)]))
    set uO = P4u
    set yO = I4u
    if SO[1 + GetPlayerId(P4u)] < 5000 then
        call DisplayTimedTextToPlayer(P4u, 0., 0., 12., "|cff00FFFFGRADE|r: |cffFF69B4MISSXTAKE")
        call DisplayTimedTextToPlayer(P4u, 0., 0., 12., "|cffffcc00Unfortunately, it seems that the fish got away...")
    elseif SO[1 + GetPlayerId(P4u)] < 8000 then
        call DisplayTimedTextToPlayer(P4u, 0., 0., 12., "|cff00FFFFGRADE|r: |cff1874CDSTANDARD")
        call TriggerExecute(CT)
        call TriggerExecute(NT)
    elseif SO[1 + GetPlayerId(P4u)] < 10000 then
        call DisplayTimedTextToPlayer(P4u, 0., 0., 12., "|cff00FFFFGRADE|r: |cffFFC125GREAT")
        call TriggerExecute(VT)
        call TriggerExecute(NT)
    else
        call DisplayTimedTextToPlayer(P4u, 0., 0., 12., "|cff00FFFFGRADE|r: |cffFF69B4P|r|cffDB7093E|r|cff9932CCR|r|cff00F5FFF|r|cff4EEE94E|r|cffFFA500C|r|cffFFA54FT|r")
        call TriggerExecute(BT)
        call TriggerExecute(NT)
    endif
    call TriggerExecute(wY)
    call ForceRemovePlayer(lt, P4u)
    set P4u = null
    call TriggerExecute(Yu)
    set I4u = null
    set P4u = null
    set A4u = null
endfunction
function H6i takes nothing returns boolean
    return (GetItemTypeId(GetManipulatedItem()) == 1227895878 and IsUnitType(GetTriggerUnit(), UNIT_TYPE_HERO) and GetHeroLevel(GetTriggerUnit()) >= 55 and IsPlayerInForce(GetOwningPlayer(GetTriggerUnit()), pc[$00000002]) == false and B[(1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))) * 1000 + fkS(GetTriggerUnit())] == false) != false
endfunction
function Vtr takes string mtr returns boolean
    local trigger Qtr
    local trigger Wtr
    local trigger Etr
    local real Ztr
    local real Utr
    local real Itr
    local real Ptr
    local real Atr
    local real Dtr
    local real Htr
    local real Jtr
    local real Ktr
    local real Ltr
    local real Xtr
    local real Ctr
    set DSw[ASw] = mtr
    set ASw = ASw + 1
    set mj = 15.
    set Qj = 2
    set Ztr = 75.
    set Utr = 75.
    set Wj[$00000000] = Ztr
    set Ej[$00000000] = Utr
    set Itr =- 75.
    set Ptr =- 75.
    set Wj[$00000001] = Itr
    set Ej[$00000001] = Ptr
    set Atr = 75.
    set Dtr = 0.
    set Wj[$00000002] = Atr
    set Ej[$00000002] = Dtr
    set Htr =- 75.
    set Jtr = 0.
    set Wj[$00000003] = Htr
    set Ej[$00000003] = Jtr
    set Ktr = 0.
    set Ltr = 75.
    set Wj[$00000004] = Ktr
    set Ej[$00000004] = Ltr
    set Xtr = 0.
    set Ctr =- 75.
    set Wj[$00000005] = Xtr
    set Ej[$00000005] = Ctr
    set Zj = XQt("when calling new_LinkedList in Dat_UltiIllusions, line 18")
    set Uj = XQt("when calling new_LinkedList in Dat_UltiIllusions, line 19")
    set Qtr = CreateTrigger()
    call B2S(Qtr, Xvw)
    set Wtr = Qtr
    call dUs(Wtr, Condition(Cvw))
    set Etr = Wtr
    call l2w(Etr, EVENT_PLAYER_UNIT_SPELL_EFFECT)
    set ASw = ASw - 1
    set Qtr = null
    set Wtr = null
    set Etr = null
    return true
endfunction
function HBr takes nothing returns boolean
    set ASw = 0
    return Vtr("via function reference Dat_UltiIllusions, line 1")
endfunction
function V7t takes string C7t returns boolean
    set DSw[ASw] = C7t
    set ASw = ASw + 1
    set uH = jts("when calling new_HashMap in Reinforce_Effect, line 12")
    set rH = 1.
    set kf = CreateTrigger()
    call TriggerAddCondition(kf, Condition(XWw))
    call TriggerAddAction(kf, CWw)
    set Ff = CreateTrigger()
    call TriggerRegisterAnyUnitEventBJ(Ff, EVENT_PLAYER_UNIT_SPELL_EFFECT)
    call TriggerAddCondition(Ff, Condition(VWw))
    call TriggerAddAction(Ff, BWw)
    set ASw = ASw - 1
    return true
endfunction
function HDr takes nothing returns boolean
    set ASw = 0
    return V7t("via function reference Reinforce_Effect, line 1")
endfunction
function HEs takes nothing returns boolean
    return true
endfunction
function bDw takes string ODw returns boolean
    local boolean lDw
    set DSw[ASw] = ODw
    set ASw = ASw + 1
    set lDw = gct(LAr(wps(wH, GetSpellAbilityId(), "when calling get in RegisterEvents, line 58"), "when calling triggerFromIndex in RegisterEvents, line 58"))
    set ASw = ASw - 1
    return lDw
endfunction
function HFs takes nothing returns boolean
    set ASw = 0
    return bDw("via function reference RegisterEvents, line 58")
endfunction
function HGu takes nothing returns nothing
    if GetEnumPlayer() == GetLocalPlayer() then
        if not IsTimerDialogDisplayed(fi) then
            call TimerDialogDisplay(fi, true)
        endif
    endif
endfunction
function ydu takes string Sdu returns boolean
    local trigger cdu
    local trigger odu
    local trigger Odu
    local integer ldu
    local integer bdu
    set DSw[ASw] = Sdu
    set ASw = ASw + 1
    set LG = 30
    set XG = 60.
    set CG = XQt("when calling new_LinkedList in Archsage_WhiteWhizard_ArcaneManaBond, line 14")
    set VG = 6.
    set BG = 3
    set NG = 450.
    set MG = .05
    set wg = .20
    set ug = .25
    set rg = .15
    set sg = 2.0
    set tg = 12.
    set ig = 3
    set Sg = 450.
    set cg = 350.
    set og = XQt("when calling new_LinkedList in Archsage_WhiteWhizard_ArcaneManaBond, line 29")
    set Og = XQt("when calling new_LinkedList in Archsage_WhiteWhizard_ArcaneManaBond, line 30")
    set lg = .25
    set bg = .15
    set yg = .37
    set pg = .5
    set eg = .8
    set ldu = 1095577652
    set bdu = 1112354866
    set qg = ldu
    set ag = bdu
    set cdu = CreateTrigger()
    call B2S(cdu, xvw)
    set odu = cdu
    call dUs(odu, Condition(vvw))
    set Odu = odu
    call l2w(Odu, EVENT_PLAYER_UNIT_SPELL_EFFECT)
    set ASw = ASw - 1
    set cdu = null
    set odu = null
    set Odu = null
    return true
endfunction
function HHw takes nothing returns boolean
    set ASw = 0
    return ydu("via function reference Archsage_WhiteWhizard_ArcaneManaBond, line 1")
endfunction
function COu takes string LOu returns integer
    local integer XOu
    set DSw[ASw] = LOu
    set ASw = ASw + 1
    if lC == 0 then
        if bC < 32768 then
            set bC = bC + 1
            set XOu = bC
            set yC[XOu] = 637
        else
            call tNr("Out of memory: Could not create BigNum_l.", "when calling error in BigNum, line 28")
            set XOu = 0
        endif
    else
        set lC = lC - 1
        set XOu = OC[lC]
        set yC[XOu] = 637
    endif
    set ASw = ASw - 1
    return XOu
endfunction
function R9i takes integer f9i returns nothing
    set wM[f9i] = 0
    set uM[f9i] = 0
endfunction
function g4u takes integer G4u returns nothing
    call R9i(G4u)
    set Qg = Qg + 1
endfunction
function BAt takes string CAt returns integer
    local integer VAt
    set DSw[ASw] = CAt
    set ASw = ASw + 1
    set VAt = COu("when calling alloc_BigNum_l in BigNum, line 33")
    call g4u(VAt)
    set ASw = ASw - 1
    return VAt
endfunction
function XEt takes integer HEt, integer JEt, string KEt returns string
    local string LEt
    if JEt < 0 or JEt >= 25 then
        call tNr("Index out of Bounds", KEt)
    elseif JEt <= 12 then
        if JEt <= 6 then
            if JEt <= 3 then
    if JEt <= 1 then
                    if JEt <= 0 then
                        set LEt = Bow[HEt]
                    else
                        set LEt = Now[HEt]
                    endif
    elseif JEt <= 2 then
                    set LEt = Mow[HEt]
    else
                    set LEt = wOw[HEt]
    endif
            elseif JEt <= 5 then
    if JEt <= 4 then
                    set LEt = uOw[HEt]
    else
                    set LEt = rOw[HEt]
    endif
            else
    set LEt = sOw[HEt]
            endif
        elseif JEt <= 9 then
            if JEt <= 8 then
    if JEt <= 7 then
                    set LEt = tOw[HEt]
    else
                    set LEt = iOw[HEt]
    endif
            else
    set LEt = SOw[HEt]
            endif
        elseif JEt <= 11 then
            if JEt <= 10 then
    set LEt = cOw[HEt]
            else
    set LEt = oOw[HEt]
            endif
        else
            set LEt = OOw[HEt]
        endif
    elseif JEt <= 18 then
        if JEt <= 15 then
            if JEt <= 14 then
    if JEt <= 13 then
                    set LEt = lOw[HEt]
    else
                    set LEt = bOw[HEt]
    endif
            else
    set LEt = yOw[HEt]
            endif
        elseif JEt <= 17 then
            if JEt <= 16 then
    set LEt = pOw[HEt]
            else
    set LEt = eOw[HEt]
            endif
        else
            set LEt = qOw[HEt]
        endif
    elseif JEt <= 21 then
        if JEt <= 20 then
            if JEt <= 19 then
    set LEt = aOw[HEt]
            else
    set LEt = nOw[HEt]
            endif
        else
            set LEt = dOw[HEt]
        endif
    elseif JEt <= 23 then
        if JEt <= 22 then
            set LEt = fOw[HEt]
        else
            set LEt = ROw[HEt]
        endif
    else
        set LEt = TOw[HEt]
    endif
    return LEt
endfunction
function Dwt takes integer Awt returns integer
    return rM[Awt] - sM[Awt]
endfunction
function gTS takes integer TTS, string YTS returns integer
    local integer GTS
    set DSw[ASw] = YTS
    set ASw = ASw + 1
    if aC[TTS] == 0 then
        if TTS == 0 then
            call tNr("Nullpointer exception when calling BigString.getLength", "when calling error in BigString, line 122")
        else
            call tNr("Called BigString.getLength on invalid object.", "when calling error in BigString, line 122")
        endif
    endif
    set GTS = Dwt(TTS)
    set ASw = ASw - 1
    return GTS
endfunction
function anu takes integer ynu, string pnu returns nothing
    local integer enu
    local integer qnu
    set DSw[ASw] = pnu
    set ASw = ASw + 1
    if FD == 0 then
        call I9r("BigString length: " + fju(gTS(ynu, "when calling getLength in BigString, line 188")) + " lines: ")
        set enu = 0
        set qnu = Eg - 1
        loop
            exitwhen enu > qnu
            if vQt(XEt(ynu, enu, "when reading array BigString_substrings in  in BigString, line 190")) > 0 then
    call I9r("\n\tLine " + fju(enu) + " : " + XEt(ynu, enu, "when reading array BigString_substrings in  in BigString, line 191"))
            else
    exitwhen true
            endif
            set enu = enu + 1
        endloop
    endif
    set ASw = ASw - 1
endfunction
function EUt takes integer QUt, string WUt returns nothing
    set DSw[ASw] = WUt
    set ASw = ASw + 1
    if aC[QUt] == 0 then
        if QUt == 0 then
            call tNr("Nullpointer exception when calling BigString.debugPrint", "when calling error in BigString, line 186")
        else
            call tNr("Called BigString.debugPrint on invalid object.", "when calling error in BigString, line 186")
        endif
    endif
    call anu(QUt, "when calling debugPrint in BigString, line 186")
    set ASw = ASw - 1
endfunction
function NFs takes string VFs returns integer
    local integer BFs
    set DSw[ASw] = VFs
    set ASw = ASw + 1
    if BV == 0 then
        if NV < 32768 then
            set NV = NV + 1
            set BFs = NV
            set MV[BFs] = 1156
        else
            call tNr("Out of memory: Could not create ForForceCallback_execute_fromString_Encoder_Encoder.", "when calling error in Encoder, line 135")
            set BFs = 0
        endif
    else
        set BV = BV - 1
        set BFs = VV[BV]
        set MV[BFs] = 1156
    endif
    set ASw = ASw - 1
    return BFs
endfunction
function Q9s takes string v9s returns integer
    local integer m9s
    set DSw[ASw] = v9s
    set ASw = ASw + 1
    if BV == 0 then
        if NV < 32768 then
            set NV = NV + 1
            set m9s = NV
            set MV[m9s] = 1154
        else
            call tNr("Out of memory: Could not create ForForceCallback_execute_fromString_Encoder_Encoder.", "when calling error in Encoder, line 129")
            set m9s = 0
        endif
    else
        set BV = BV - 1
        set m9s = VV[BV]
        set MV[m9s] = 1154
    endif
    set ASw = ASw - 1
    return m9s
endfunction
function Qku takes boolean vku returns integer
    local integer mku
    if vku then
        set mku = 1
    else
        set mku = 0
    endif
    return mku
endfunction
function Udr takes string Edr returns integer
    local integer Zdr
    set DSw[ASw] = Edr
    set ASw = ASw + 1
    if BV == 0 then
        if NV < 32768 then
            set NV = NV + 1
            set Zdr = NV
            set MV[Zdr] = 1155
        else
            call tNr("Out of memory: Could not create ForForceCallback_execute_fromString_Encoder_Encoder.", "when calling error in Encoder, line 133")
            set Zdr = 0
        endif
    else
        set BV = BV - 1
        set Zdr = VV[BV]
        set MV[Zdr] = 1155
    endif
    set ASw = ASw - 1
    return Zdr
endfunction
function rDs takes integer wDs, string uDs returns nothing
    set DSw[ASw] = uDs
    set ASw = ASw + 1
    if oC[wDs] == 0 then
        call tNr("Double free: object of type BigNum", "when calling error in BigNum, line 63")
    else
        set iC[SC] = wDs
        set SC = SC + 1
        set oC[wDs] = 0
    endif
    set ASw = ASw - 1
endfunction
function j2s takes integer F2s, string k2s returns nothing
    set DSw[ASw] = k2s
    set ASw = ASw + 1
    if yC[F2s] == 0 then
        call tNr("Double free: object of type BigNum_l", "when calling error in BigNum, line 28")
    else
        set OC[lC] = F2s
        set lC = lC + 1
        set yC[F2s] = 0
    endif
    set ASw = ASw - 1
endfunction
function tAu takes integer sAu returns nothing
    set Qg = Qg - 1
endfunction
function icu takes integer scu, string tcu returns nothing
    set DSw[ASw] = tcu
    set ASw = ASw + 1
    call tAu(scu)
    call j2s(scu, "when calling dealloc_BigNum_l in BigNum, line 36")
    set ASw = ASw - 1
endfunction
function D2S takes integer P2S, string A2S returns nothing
    set DSw[ASw] = A2S
    set ASw = ASw + 1
    if yC[P2S] == 0 then
        if P2S == 0 then
            call tNr("Nullpointer exception when calling BigNum_l.BigNum_l", "when calling error in BigNum, line 28")
        else
            call tNr("Called BigNum_l.BigNum_l on invalid object.", "when calling error in BigNum, line 28")
        endif
    endif
    call icu(P2S, "when calling destroyBigNum_l in BigNum, line 28")
    set ASw = ASw - 1
endfunction
function v5S takes integer F5S, string k5S returns nothing
    local integer j5S
    local integer x5S
    set DSw[ASw] = k5S
    set ASw = ASw + 1
    set j5S = NN[F5S]
    loop
        exitwhen not(j5S != 0)
        set x5S = uM[j5S]
        call D2S(j5S, "when calling dispatch_BigNum_l_destroyBigNum_l in BigNum, line 75")
        set j5S = x5S
    endloop
    set ASw = ASw - 1
endfunction
function uDt takes integer MAt, string wDt returns nothing
    set DSw[ASw] = wDt
    set ASw = ASw + 1
    call v5S(MAt, "when calling BigNum_onDestroy in BigNum, line 70")
    call rDs(MAt, "when calling dealloc_BigNum in BigNum, line 70")
    set ASw = ASw - 1
endfunction
function R9u takes integer d9u, string f9u returns nothing
    set DSw[ASw] = f9u
    set ASw = ASw + 1
    if oC[d9u] == 0 then
        if d9u == 0 then
            call tNr("Nullpointer exception when calling BigNum.BigNum", "when calling error in BigNum, line 63")
        else
            call tNr("Called BigNum.BigNum on invalid object.", "when calling error in BigNum, line 63")
        endif
    endif
    call uDt(d9u, "when calling destroyBigNum in BigNum, line 63")
    set ASw = ASw - 1
endfunction
function V3u takes integer X3u, string C3u returns nothing
    set DSw[ASw] = C3u
    set ASw = ASw + 1
    call R9u(I1[X3u], "when calling dispatch_BigNum_destroyBigNum in Encoder, line 23")
    set ASw = ASw - 1
endfunction
function jmi takes integer Fmi, string kmi returns nothing
    set DSw[ASw] = kmi
    set ASw = ASw + 1
    if JV[Fmi] == 0 then
        call tNr("Double free: object of type Encoder", "when calling error in Encoder, line 11")
    else
        set AV[DV] = Fmi
        set DV = DV + 1
        set JV[Fmi] = 0
    endif
    set ASw = ASw - 1
endfunction
function IFr takes integer ZFr, string UFr returns nothing
    set DSw[ASw] = UFr
    set ASw = ASw + 1
    call V3u(ZFr, "when calling Encoder_onDestroy in Encoder, line 22")
    call jmi(ZFr, "when calling dealloc_Encoder in Encoder, line 22")
    set ASw = ASw - 1
endfunction
function Ust takes integer Est, string Zst returns nothing
    set DSw[ASw] = Zst
    set ASw = ASw + 1
    if JV[Est] == 0 then
        if Est == 0 then
            call tNr("Nullpointer exception when calling Encoder.Encoder", "when calling error in Encoder, line 11")
        else
            call tNr("Called Encoder.Encoder on invalid object.", "when calling error in Encoder, line 11")
        endif
    endif
    call IFr(Est, "when calling destroyEncoder in Encoder, line 11")
    set ASw = ASw - 1
endfunction
function KSi takes string HSi returns integer
    local integer JSi
    set DSw[ASw] = HSi
    set ASw = ASw + 1
    if NX == 0 then
        if MX < 32768 then
            set MX = MX + 1
            set JSi = MX
            set wC[JSi] = 1107
        else
            call tNr("Out of memory: Could not create CallbackSingle_nullTimer_load_LZW.", "when calling error in LZW, line 66")
            set JSi = 0
        endif
    else
        set NX = NX - 1
        set JSi = BX[NX]
        set wC[JSi] = 1107
    endif
    set ASw = ASw - 1
    return JSi
endfunction
function Exr takes integer Qxr, string Wxr returns nothing
    set DSw[ASw] = Wxr
    set ASw = ASw + 1
    if sB[Qxr] == 0 then
        call tNr("Double free: object of type PayloadCallback", "when calling error in SeqWorker, line 24")
    else
        set wB[uB] = Qxr
        set uB = uB + 1
        set sB[Qxr] = 0
    endif
    set ASw = ASw - 1
endfunction
function Uqu takes integer Zqu returns nothing
endfunction
function Vns takes integer Xns, string Cns returns nothing
    set DSw[ASw] = Cns
    set ASw = ASw + 1
    call Uqu(Xns)
    call Exr(Xns, "when calling dealloc_PayloadCallback in SeqWorker, line 24")
    set ASw = ASw - 1
endfunction
function vgu takes integer jgu, string xgu returns nothing
    set DSw[ASw] = xgu
    set ASw = ASw + 1
    if sB[jgu] == 0 then
        if jgu == 0 then
            call tNr("Nullpointer exception when calling PayloadCallback.PayloadCallback", "when calling error in SeqWorker, line 24")
        else
            call tNr("Called PayloadCallback.PayloadCallback on invalid object.", "when calling error in SeqWorker, line 24")
        endif
    endif
    call Vns(jgu, "when calling destroyPayloadCallback in SeqWorker, line 24")
    set ASw = ASw - 1
endfunction
function Zbr takes integer mbr, integer Qbr, string Wbr returns nothing
    local integer Ebr
    set DSw[ASw] = Wbr
    set ASw = ASw + 1
    if Ssw[Qbr] == 1 then
        call I9r("file valid")
        set Ebr = KSi("when calling alloc_CallbackSingle_nullTimer_load_LZW in LZW, line 66")
        call RUs(Ebr)
        set Gww[Ebr] = Tww[mbr]
        set gww[Ebr] = Yww[mbr]
        call ccr(Ebr, "when calling nullTimer in LZW, line 66")
    else
        call tNr("loaded input is invalid", "when calling error in LZW, line 89")
    endif
    call vgu(Qbr, "when calling dispatch_PayloadCallback_destroyPayloadCallback in LZW, line 90")
    set ASw = ASw - 1
endfunction
function Ogt takes integer ogt returns nothing
    set csw[ogt] = false
    set osw[ogt] = null
endfunction
function Vwr takes integer Cwr returns nothing
    call Ogt(Cwr)
endfunction
function kyS takes string hyS returns integer
    local integer FyS
    set DSw[ASw] = hyS
    set ASw = ASw + 1
    if LV == 0 then
        if XV < 32768 then
            set XV = XV + 1
            set FyS = XV
            set CV[FyS] = 1255
        else
            call tNr("Out of memory: Could not create SeqCallback_doSeq_decodePositions_LZW.", "when calling error in LZW, line 168")
            set FyS = 0
        endif
    else
        set LV = LV - 1
        set FyS = KV[LV]
        set CV[FyS] = 1255
    endif
    set ASw = ASw - 1
    return FyS
endfunction
function nZu takes integer pZu, string eZu returns nothing
    local timer qZu
    local timer aZu
    set DSw[ASw] = eZu
    set ASw = ASw + 1
    set qZu = ZPs("when calling getTimer in SeqWorker, line 12")
    call tNu(qZu, pZu, "when calling setData in SeqWorker, line 12")
    set osw[pZu] = qZu
    set aZu = osw[pZu]
    call gNu(aZu, 0.001, eEw)
    set ASw = ASw - 1
    set qZu = null
    set aZu = null
endfunction
function qUs takes integer cUs, integer oUs, string OUs returns nothing
    local integer lUs
    local integer bUs
    local string yUs
    local string pUs
    local integer eUs
    set DSw[ASw] = OUs
    set ASw = ASw + 1
    set lUs = Ssw[oUs]
    set bUs = Kqu(lUs, "when calling staticItr in LZW, line 164")
    set yUs = ""
    set pUs = ""
    set eUs = kyS("when calling alloc_SeqCallback_doSeq_decodePositions_LZW in LZW, line 168")
    call Vwr(eUs)
    set Pww[eUs] = bUs
    set Aww[eUs] = yUs
    set Dww[eUs] = pUs
    set Hww[eUs] = Uww[cUs]
    set Jww[eUs] = Iww[cUs]
    call nZu(eUs, "when calling doSeq in LZW, line 168")
    set ASw = ASw - 1
endfunction
function O8t takes integer u8t, integer r8t, integer s8t, string t8t returns nothing
    local integer i8t
    local integer S8t
    local integer c8t
    local integer o8t
    if u8t == 0 then
        set DSw[ASw] = t8t
        set ASw = ASw + 1
        set Ssw[fww[r8t]] = Ssw[s8t]
        call Ust(Rww[r8t], "when calling dispatch_Encoder_destroyEncoder in LZW, line 53")
        call O8t($00000005, fww[r8t], $00000000, "when calling doStep in LZW, line 54")
        set ASw = ASw - 1
    elseif u8t == 1 then
        set DSw[ASw] = t8t
        set ASw = ASw + 1
        call I9r("loaded..")
        set i8t = Q9s("when calling alloc_ForForceCallback_execute_fromString_Encoder_Encoder in Encoder, line 129")
        set y4[i8t] = l4[r8t]
        call ggu(i8t, "when calling execute in Encoder, line 129")
        call I9r("decoded..")
        set S8t = Udr("when calling alloc_ForForceCallback_execute_fromString_Encoder_Encoder in Encoder, line 133")
        set p4[S8t] = l4[r8t]
        call ggu(S8t, "when calling execute in Encoder, line 133")
        call I9r("claned..")
        set c8t = NFs("when calling alloc_ForForceCallback_execute_fromString_Encoder_Encoder in Encoder, line 135")
        set e4[c8t] = l4[r8t]
        call ggu(c8t, "when calling execute in Encoder, line 135")
        call I9r("hashed..")
        set Ssw[b4[r8t]] = Qku(A1[l4[r8t]] == D1[l4[r8t]])
        call O8t($00000005, b4[r8t], $00000000, "when calling doStep in Encoder, line 140")
        set ASw = ASw - 1
    elseif u8t == 2 then
        set DSw[ASw] = t8t
        set ASw = ASw + 1
        call I9r("positions encoded")
        set o8t = Ssw[s8t]
        call EUt(o8t, "when calling debugPrint in LZW, line 147")
        set Ssw[Zww[r8t]] = o8t
        call O8t($00000005, Zww[r8t], $00000000, "when calling doStep in LZW, line 149")
        set ASw = ASw - 1
    elseif u8t == 3 then
        set DSw[ASw] = t8t
        set ASw = ASw + 1
        if sB[r8t] == 0 then
            if r8t == 0 then
    call tNr("Nullpointer exception when calling PayloadCallback.onExecute", "when calling error in SeqWorker, line 30")
            else
    call tNr("Called PayloadCallback.onExecute on invalid object.", "when calling error in SeqWorker, line 30")
            endif
        endif
        if sB[r8t] <= 1236 then
            if sB[r8t] <= 1235 then
    if sB[r8t] <= 1234 then
                    call qUs(r8t, s8t, "when calling onExecute_decodePositions_LZW in SeqWorker, line 30")
    else
                    call O8t($00000002, r8t, s8t, "when calling onExecute_encodePositions_doSeq_LZW in SeqWorker, line 30")
    endif
            else
    call O8t($00000001, r8t, s8t, "when calling onExecute_fromString_Encoder_Encoder in SeqWorker, line 30")
            endif
        elseif sB[r8t] <= 1237 then
            call Zbr(r8t, s8t, "when calling onExecute_load_LZW in SeqWorker, line 30")
        else
            call O8t($00000000, r8t, s8t, "when calling onExecute_save_doSeq_LZW in SeqWorker, line 30")
        endif
        set ASw = ASw - 1
    elseif u8t == 4 then
        set DSw[ASw] = t8t
        set ASw = ASw + 1
        call O8t($00000003, r8t, r8t, "when calling onExecute in SeqWorker, line 28")
        set ASw = ASw - 1
    elseif u8t == 5 then
        set DSw[ASw] = t8t
        set ASw = ASw + 1
        if sB[r8t] == 0 then
            if r8t == 0 then
    call tNr("Nullpointer exception when calling PayloadCallback.doStep", "when calling error in SeqWorker, line 27")
            else
    call tNr("Called PayloadCallback.doStep on invalid object.", "when calling error in SeqWorker, line 27")
            endif
        endif
        call O8t($00000004, r8t, $00000000, "when calling doStep in SeqWorker, line 27")
        set ASw = ASw - 1
    endif
endfunction
function X8i takes integer Z8i, integer U8i, integer I8i, string P8i returns string
    local integer A8i
    local integer D8i
    local integer H8i
    local integer J8i
    local string K8i
    local string L8i
    set DSw[ASw] = P8i
    set ASw = ASw + 1
    if U8i + I8i > gTS(Z8i, "when calling getLength in BigString, line 174") then
        call tNr("2Trying to get string out of bounds", "when calling error in BigString, line 175")
    endif
    if I8i > Wg then
        call tNr("Trying to get oversized string", "when calling error in BigString, line 177")
    endif
    set A8i = U8i + sM[Z8i]
    set D8i = P3w(A8i * 1. / Wg)
    set H8i = ModuloInteger(A8i, Wg)
    set J8i = H8i + I8i
    if J8i > Wg then
        set K8i = CAw(XEt(Z8i, D8i, "when reading array BigString_substrings in  in BigString, line 183"), H8i, vQt(XEt(Z8i, D8i, "when reading array BigString_substrings in  in BigString, line 183"))) + CAw(XEt(Z8i, D8i + 1, "when reading array BigString_substrings in  in BigString, line 183"), $00000000, J8i - Wg)
        set ASw = ASw - 1
        return K8i
    endif
    set L8i = CAw(XEt(Z8i, D8i, "when reading array BigString_substrings in  in BigString, line 184"), H8i, J8i)
    set ASw = ASw - 1
    return L8i
endfunction
function YYs takes integer nYs, integer dYs, integer fYs, string RYs returns string
    local string TYs
    set DSw[ASw] = RYs
    set ASw = ASw + 1
    if aC[nYs] == 0 then
        if nYs == 0 then
            call tNr("Nullpointer exception when calling BigString.getString", "when calling error in BigString, line 173")
        else
            call tNr("Called BigString.getString on invalid object.", "when calling error in BigString, line 173")
        endif
    endif
    set TYs = X8i(nYs, dYs, fYs, "when calling getString in BigString, line 173")
    set ASw = ASw - 1
    return TYs
endfunction
function M9t takes integer N9t returns nothing
    set rM[N9t] =- 1
endfunction
function ser takes integer uer, string rer returns nothing
    set DSw[ASw] = rer
    set ASw = ASw + 1
    if aC[uer] == 0 then
        call tNr("Double free: object of type BigString", "when calling error in BigString, line 101")
    else
        set pC[eC] = uer
        set eC = eC + 1
        set aC[uer] = 0
    endif
    set ASw = ASw - 1
endfunction
function khi takes integer hhi, string Fhi returns nothing
    set DSw[ASw] = Fhi
    set ASw = ASw + 1
    call M9t(hhi)
    call ser(hhi, "when calling dealloc_BigString in BigString, line 194")
    set ASw = ASw - 1
endfunction
function qEi takes integer pEi, string eEi returns nothing
    set DSw[ASw] = eEi
    set ASw = ASw + 1
    if aC[pEi] == 0 then
        if pEi == 0 then
            call tNr("Nullpointer exception when calling BigString.BigString", "when calling error in BigString, line 101")
        else
            call tNr("Called BigString.BigString on invalid object.", "when calling error in BigString, line 101")
        endif
    endif
    call khi(pEi, "when calling destroyBigString in BigString, line 101")
    set ASw = ASw - 1
endfunction
function sFs takes integer Nhs, string Mhs returns integer
    local integer wFs = 0
    local string uFs = E1[Nhs]
    local integer rFs = Z1[Nhs]
    loop
        exitwhen not(wFs < rFs and Mhs != SubString(uFs, wFs, wFs + 1))
        set wFs = wFs + 1
    endloop
    return wFs
endfunction
function rNi takes integer NBi, string MBi, string wNi returns integer
    local integer uNi
    set DSw[ASw] = wNi
    set ASw = ASw + 1
    if JV[NBi] == 0 then
        if NBi == 0 then
            call tNr("Nullpointer exception when calling Encoder.chartoi", "when calling error in Encoder, line 144")
        else
            call tNr("Called Encoder.chartoi on invalid object.", "when calling error in Encoder, line 144")
        endif
    endif
    set uNi = sFs(NBi, MBi)
    set ASw = ASw - 1
    return uNi
endfunction
function Gou takes integer dou, integer fou, string Rou returns boolean
    local boolean Tou
    local boolean You
    set DSw[ASw] = Rou
    set ASw = ASw + 1
    set Tou = true
    set wM[X1[dou]] = rNi(C1[dou], YYs(V1[dou], B1[dou], $00000001, "when calling getString in Encoder, line 80"), "when calling chartoi in Encoder, line 80")
    if B1[dou] < gTS(V1[dou], "when calling getLength in Encoder, line 81") - 1 then
        set uM[X1[dou]] = BAt("when calling new_BigNum_l in Encoder, line 82")
        set X1[dou] = uM[X1[dou]]
        set B1[dou] = B1[dou] + 1
    else
        set Tou = false
        call qEi(V1[dou], "when calling dispatch_BigString_destroyBigString in Encoder, line 87")
        call O8t($00000005, N1[dou], $00000000, "when calling doStep in Encoder, line 88")
    endif
    set You = Tou
    set ASw = ASw - 1
    return You
endfunction
function Uvt takes integer Evt returns nothing
    local integer Zvt = www[Evt]
    if Zvt == 1 then
        set Nww[Evt] = Bww[Evt]
    endif
    set www[Evt] = 2
endfunction
function Jjr takes integer Djr, string Hjr returns nothing
    set DSw[ASw] = Hjr
    set ASw = ASw + 1
    if JB[Djr] == 0 then
        if Djr == 0 then
            call tNr("Nullpointer exception when calling JsonParser.onNumber", "when calling error in JsonParser, line 140")
        else
            call tNr("Called JsonParser.onNumber on invalid object.", "when calling error in JsonParser, line 140")
        endif
    endif
    call Uvt(Djr)
    set ASw = ASw - 1
endfunction
function DKr takes integer AKr returns integer
    return SM[AKr]
endfunction
function NYs takes integer CYs, string VYs returns integer
    local integer BYs
    set DSw[ASw] = VYs
    set ASw = ASw + 1
    if RC[CYs] == 0 then
        if CYs == 0 then
            call tNr("Nullpointer exception when calling BigSubString.getStart", "when calling error in BigString, line 31")
        else
            call tNr("Called BigSubString.getStart on invalid object.", "when calling error in BigString, line 31")
        endif
    endif
    set BYs = DKr(CYs)
    set ASw = ASw - 1
    return BYs
endfunction
function slt takes integer rlt returns integer
    return cM[rlt]
endfunction
function lBw takes integer cBw, string oBw returns integer
    local integer OBw
    set DSw[ASw] = oBw
    set ASw = ASw + 1
    if RC[cBw] == 0 then
        if cBw == 0 then
            call tNr("Nullpointer exception when calling BigSubString.getSingleLength", "when calling error in BigString, line 23")
        else
            call tNr("Called BigSubString.getSingleLength on invalid object.", "when calling error in BigString, line 23")
        endif
    endif
    set OBw = slt(cBw)
    set ASw = ASw - 1
    return OBw
endfunction
function dur takes integer lur, integer bur, string yur returns string
    local integer pur
    local integer eur
    local integer qur
    local string aur
    local string nur
    set DSw[ASw] = yur
    set ASw = ASw + 1
    if NYs(bur, "when calling getStart in BigString, line 154") + lBw(bur, "when calling getSingleLength in BigString, line 154") > rM[lur]then
        call tNr("string out of bounds: length: " + fju(rM[lur]) + " s.length: " + fju(lBw(bur, "when calling getSingleLength in BigString, line 155")) + " s.start: " + fju(NYs(bur, "when calling getStart in BigString, line 155")), "when calling error in BigString, line 155")
    endif
    if lBw(bur, "when calling getSingleLength in BigString, line 156") > Wg then
        call tNr("substring is longer than maxsize", "when calling error in BigString, line 157")
    endif
    set pur = P3w(NYs(bur, "when calling getStart in BigString, line 158") * 1. / Wg)
    set eur = ModuloInteger(NYs(bur, "when calling getStart in BigString, line 159"), Wg)
    set qur = eur + lBw(bur, "when calling getSingleLength in BigString, line 160")
    if qur > Wg then
        set nur = CAw(XEt(lur, pur, "when reading array BigString_substrings in  in BigString, line 162"), eur, Wg) + CAw(XEt(lur, pur + 1, "when reading array BigString_substrings in  in BigString, line 162"), $00000000, qur - Wg)
        set ASw = ASw - 1
        return nur
    endif
    set aur = CAw(XEt(lur, pur, "when reading array BigString_substrings in  in BigString, line 163"), eur, qur)
    set ASw = ASw - 1
    return aur
endfunction
function blr takes integer clr, integer olr, string Olr returns string
    local string llr
    set DSw[ASw] = Olr
    set ASw = ASw + 1
    if aC[clr] == 0 then
        if clr == 0 then
            call tNr("Nullpointer exception when calling BigString.getSubStringData", "when calling error in BigString, line 153")
        else
            call tNr("Called BigString.getSubStringData on invalid object.", "when calling error in BigString, line 153")
        endif
    endif
    set llr = dur(clr, olr, "when calling getSubStringData in BigString, line 153")
    set ASw = ASw - 1
    return llr
endfunction
function cji takes integer tji, string iji returns string
    local string Sji
    set DSw[ASw] = iji
    set ASw = ASw + 1
    if lBw(tji, "when calling getSingleLength in BigString, line 42") > Wg then
        call tNr("cannot use getSingle on oversized SubStrings. You need to iterate through the chunks", "when calling error in BigString, line 43")
    endif
    if tM[tji] == 0 and oM[tji] == null then
        call tNr("cannot generate new cache without parent", "when calling error in BigString, line 45")
    endif
    if oM[tji] != null then
        set ASw = ASw - 1
        return oM[tji]
    else
        set Sji = blr(tM[tji], tji, "when calling getSubStringData in BigString, line 49")
        set ASw = ASw - 1
        return Sji
    endif
endfunction
function I_u takes integer E_u, string Z_u returns string
    local string U_u
    set DSw[ASw] = Z_u
    set ASw = ASw + 1
    if RC[E_u] == 0 then
        if E_u == 0 then
            call tNr("Nullpointer exception when calling BigSubString.getSingle", "when calling error in BigString, line 41")
        else
            call tNr("Called BigSubString.getSingle on invalid object.", "when calling error in BigString, line 41")
        endif
    endif
    set U_u = cji(E_u, "when calling getSingle in BigString, line 41")
    set ASw = ASw - 1
    return U_u
endfunction
function n0i takes integer e0i, integer q0i, string a0i returns nothing
    set DSw[ASw] = a0i
    set ASw = ASw + 1
    if yww[q0i] != 0 and cM[yww[q0i]] >= 0 then
        call vwt(bww[e0i], q0i, "when calling add in Json, line 44")
        set iM[yww[q0i]] = 0
        set iM[pww[q0i]] = 0
        call GVw(lww[e0i], R9S(I_u(yww[q0i], "when calling getSingle in Json, line 47")), q0i, "when calling put in Json, line 47")
    endif
    set ASw = ASw - 1
endfunction
function ZTs takes integer QTs, integer WTs, string ETs returns nothing
    set DSw[ASw] = ETs
    set ASw = ASw + 1
    if KB[QTs] == 0 then
        if QTs == 0 then
            call tNr("Nullpointer exception when calling Json.addProperty", "when calling error in Json, line 42")
        else
            call tNr("Called Json.addProperty on invalid object.", "when calling error in Json, line 42")
        endif
    endif
    call n0i(QTs, WTs, "when calling addProperty in Json, line 42")
    set ASw = ASw - 1
endfunction
function ICt takes string ZCt returns integer
    local integer UCt
    set DSw[ASw] = ZCt
    set ASw = ASw + 1
    if dC == 0 then
        if fC < 32768 then
            set fC = fC + 1
            set UCt = fC
            set RC[UCt] = 639
        else
            call tNr("Out of memory: Could not create BigSubString.", "when calling error in BigString, line 7")
            set UCt = 0
        endif
    else
        set dC = dC - 1
        set UCt = nC[dC]
        set RC[UCt] = 639
    endif
    set ASw = ASw - 1
    return UCt
endfunction
function m1r takes integer v1r returns nothing
    set tM[v1r] = 0
    set iM[v1r] = 0
    set SM[v1r] = 0
    set cM[v1r] = 0
    set oM[v1r] = null
endfunction
function jfu takes integer gfu, integer hfu, integer Ffu, integer kfu returns nothing
    call m1r(gfu)
    set tM[gfu] = hfu
    set SM[gfu] = Ffu
    set cM[gfu] = kfu
endfunction
function oEr takes integer sEr, integer tEr, integer iEr, string SEr returns integer
    local integer cEr
    set DSw[ASw] = SEr
    set ASw = ASw + 1
    set cEr = ICt("when calling alloc_BigSubString in BigString, line 18")
    call jfu(cEr, sEr, tEr, iEr)
    set ASw = ASw - 1
    return cEr
endfunction
function S6w takes string t6w returns integer
    local integer i6w
    set DSw[ASw] = t6w
    set ASw = ASw + 1
    if XB == 0 then
        if CB < 32768 then
            set CB = CB + 1
            set i6w = CB
        else
            call tNr("Out of memory: Could not create Property.", "when calling error in Json, line 17")
            set i6w = 0
        endif
    else
        set XB = XB - 1
        set i6w = LB[XB]
    endif
    set ASw = ASw - 1
    return i6w
endfunction
function s6w takes integer r6w returns nothing
endfunction
function WZt takes integer vZt, integer mZt, integer QZt returns nothing
    call s6w(vZt)
    set yww[vZt] = mZt
    set pww[vZt] = QZt
endfunction
function p_r takes integer O_r, integer l_r, string b_r returns integer
    local integer y_r
    set DSw[ASw] = b_r
    set ASw = ASw + 1
    set y_r = S6w("when calling alloc_Property in Json, line 21")
    call WZt(y_r, O_r, l_r)
    set ASw = ASw - 1
    return y_r
endfunction
function cEs takes integer tEs, string iEs returns nothing
    local integer SEs
    set DSw[ASw] = iEs
    set ASw = ASw + 1
    set SEs = www[tEs]
    if SEs == 0 then
        set tww[tEs] = oEr(Vww[tEs], Bww[tEs], $00000001, "when calling new_BigSubString in JsonParser, line 150")
        set Nww[tEs] = Bww[tEs] + 1
    elseif SEs == 2 then
        set iww[tEs] = oEr(Vww[tEs], Nww[tEs], Bww[tEs] - Nww[tEs], "when calling new_BigSubString in JsonParser, line 153")
        call ZTs(rww[tEs], p_r(tww[tEs], iww[tEs], "when calling new_Property in JsonParser, line 154"), "when calling addProperty in JsonParser, line 154")
        set tww[tEs] = oEr(Vww[tEs], Bww[tEs], $00000001, "when calling new_BigSubString in JsonParser, line 155")
        set Nww[tEs] = Bww[tEs] + 1
    elseif SEs == 4 then
        set tww[tEs] = oEr(Vww[tEs], Bww[tEs], $00000001, "when calling new_BigSubString in JsonParser, line 158")
        set Nww[tEs] = Bww[tEs] + 1
    endif
    set www[tEs] = 1
    set ASw = ASw - 1
endfunction
function oDs takes integer SDs, string cDs returns nothing
    set DSw[ASw] = cDs
    set ASw = ASw + 1
    if JB[SDs] == 0 then
        if SDs == 0 then
            call tNr("Nullpointer exception when calling JsonParser.onLetter", "when calling error in JsonParser, line 147")
        else
            call tNr("Called JsonParser.onLetter on invalid object.", "when calling error in JsonParser, line 147")
        endif
    endif
    call cEs(SDs, "when calling onLetter in JsonParser, line 147")
    set ASw = ASw - 1
endfunction
function p8t takes integer l8t, string b8t returns nothing
    local string y8t
    set DSw[ASw] = b8t
    set ASw = ASw + 1
    set uww[l8t] = YYs(Vww[l8t], Bww[l8t], $00000001, "when calling getString in JsonParser, line 117")
    set y8t = uww[l8t]
    if y8t == isw[RP]then
        set Mww[l8t] = Mww[l8t] + 1
        if Mww[l8t] == 1 then
            set Nww[l8t] = Bww[l8t]
        endif
        set www[l8t] = 3
    elseif y8t == isw[TP]then
        set Mww[l8t] = Mww[l8t] - 1
        if Mww[l8t] == 0 then
            set iww[l8t] = oEr(Vww[l8t], Nww[l8t], Bww[l8t] - Nww[l8t] + 1, "when calling new_BigSubString in JsonParser, line 127")
            call ZTs(rww[l8t], p_r(tww[l8t], iww[l8t], "when calling new_Property in JsonParser, line 128"), "when calling addProperty in JsonParser, line 128")
            set Nww[l8t] = Bww[l8t] + 1
        endif
        set www[l8t] = 4
    elseif Mww[l8t] == 0 then
        if V2w(dP, uww[l8t]) then
            call oDs(l8t, "when calling onLetter in JsonParser, line 134")
        elseif V2w(nP, uww[l8t]) then
            call Jjr(l8t, "when calling onNumber in JsonParser, line 136")
        endif
    endif
    set Bww[l8t] = Bww[l8t] + 1
    set ASw = ASw - 1
endfunction
function HrS takes integer ArS, string DrS returns nothing
    set DSw[ASw] = DrS
    set ASw = ASw + 1
    if JB[ArS] == 0 then
        if ArS == 0 then
            call tNr("Nullpointer exception when calling JsonParser.parseSeq", "when calling error in JsonParser, line 116")
        else
            call tNr("Called JsonParser.parseSeq on invalid object.", "when calling error in JsonParser, line 116")
        endif
    endif
    call p8t(ArS, "when calling parseSeq in JsonParser, line 116")
    set ASw = ASw - 1
endfunction
function IAr takes integer QAr, integer WAr, string EAr returns boolean
    local boolean ZAr
    local boolean UAr
    set DSw[ASw] = EAr
    set ASw = ASw + 1
    set ZAr = true
    if Bww[oww[QAr]] < gTS(Vww[oww[QAr]], "when calling getLength in JsonParser, line 106") then
        call HrS(oww[QAr], "when calling parseSeq in JsonParser, line 107")
    else
        set ZAr = false
        if Nww[oww[QAr]] < Bww[oww[QAr]]then
            set iww[oww[QAr]] = oEr(Vww[oww[QAr]], Nww[oww[QAr]], Bww[oww[QAr]] - Nww[oww[QAr]], "when calling new_BigSubString in JsonParser, line 111")
            call ZTs(rww[oww[QAr]], p_r(tww[oww[QAr]], iww[oww[QAr]], "when calling new_Property in JsonParser, line 112"), "when calling addProperty in JsonParser, line 112")
        endif
        call O8t($00000005, Oww[QAr], $00000000, "when calling doStep in JsonParser, line 113")
    endif
    set UAr = ZAr
    set ASw = ASw - 1
    return UAr
endfunction
function Z9i takes integer W9i, string E9i returns nothing
    set DSw[ASw] = E9i
    set ASw = ASw + 1
    if yN[W9i] == 0 then
        call tNr("Double free: object of type LinkedList", "when calling error in LinkedList, line 18")
    else
        set ON[lN] = W9i
        set lN = lN + 1
        set yN[W9i] = 0
    endif
    set ASw = ASw - 1
endfunction
function DSi takes integer ASi returns nothing
endfunction
function Okr takes integer ckr, string okr returns nothing
    set DSw[ASw] = okr
    set ASw = ASw + 1
    if wN[ckr] == 0 then
        call tNr("Double free: object of type LLBackIterator", "when calling error in LinkedList, line 472")
    else
        set MB = MB + 1
        set wN[ckr] = 0
    endif
    set ASw = ASw - 1
endfunction
function Fwt takes integer gwt, string hwt returns nothing
    set DSw[ASw] = hwt
    set ASw = ASw + 1
    call DSi(gwt)
    call Okr(gwt, "when calling dealloc_LLBackIterator in LinkedList, line 472")
    set ASw = ASw - 1
endfunction
function hUt takes integer GUt, string gUt returns nothing
    set DSw[ASw] = gUt
    set ASw = ASw + 1
    if wN[GUt] == 0 then
        if GUt == 0 then
            call tNr("Nullpointer exception when calling LLBackIterator.LLBackIterator", "when calling error in LinkedList, line 472")
        else
            call tNr("Called LLBackIterator.LLBackIterator on invalid object.", "when calling error in LinkedList, line 472")
        endif
    endif
    call Fwt(GUt, "when calling destroyLLBackIterator in LinkedList, line 472")
    set ASw = ASw - 1
endfunction
function utu takes integer Nsu, string Msu returns nothing
    local integer wtu
    set DSw[ASw] = Msu
    set ASw = ASw + 1
    if ruw[Nsu] != 0 then
        call LHw(ruw[Nsu], "when calling dispatch_LLIterator_destroyLLIterator in LinkedList, line 396")
    endif
    if suw[Nsu] != 0 then
        call hUt(suw[Nsu], "when calling dispatch_LLBackIterator_destroyLLBackIterator in LinkedList, line 398")
    endif
    set wtu = Cww[wuw[Nsu]]
    loop
        exitwhen not(wtu != wuw[Nsu])
        set wtu = Cww[wtu]
        call n4s(Xww[wtu], "when calling dispatch_LLEntry_destroyLLEntry in LinkedList, line 402")
    endloop
    call n4s(wuw[Nsu], "when calling dispatch_LLEntry_destroyLLEntry in LinkedList, line 403")
    set ASw = ASw - 1
endfunction
function dOS takes integer aOS, string nOS returns nothing
    set DSw[ASw] = nOS
    set ASw = ASw + 1
    call utu(aOS, "when calling LinkedList_onDestroy in LinkedList, line 394")
    call Z9i(aOS, "when calling dealloc_LinkedList in LinkedList, line 394")
    set ASw = ASw - 1
endfunction
function Z9s takes integer W9s, string E9s returns nothing
    set DSw[ASw] = E9s
    set ASw = ASw + 1
    if yN[W9s] == 0 then
        if W9s == 0 then
            call tNr("Nullpointer exception when calling LinkedList.LinkedList", "when calling error in LinkedList, line 18")
        else
            call tNr("Called LinkedList.LinkedList on invalid object.", "when calling error in LinkedList, line 18")
        endif
    endif
    call dOS(W9s, "when calling destroyLinkedList in LinkedList, line 18")
    set ASw = ASw - 1
endfunction
function KUu takes string HUu returns integer
    local integer JUu
    set DSw[ASw] = HUu
    set ASw = ASw + 1
    if BV == 0 then
        if NV < 32768 then
            set NV = NV + 1
            set JUu = NV
            set MV[JUu] = 1148
        else
            call tNr("Out of memory: Could not create ForForceCallback_execute_Encoder_Encoder.", "when calling error in Encoder, line 106")
            set JUu = 0
        endif
    else
        set BV = BV - 1
        set JUu = VV[BV]
        set MV[JUu] = 1148
    endif
    set ASw = ASw - 1
    return JUu
endfunction
function SPu takes string tPu returns integer
    local integer iPu
    set DSw[ASw] = tPu
    set ASw = ASw + 1
    if BV == 0 then
        if NV < 32768 then
            set NV = NV + 1
            set iPu = NV
            set MV[iPu] = 1149
        else
            call tNr("Out of memory: Could not create ForForceCallback_execute_Encoder_Encoder.", "when calling error in Encoder, line 109")
            set iPu = 0
        endif
    else
        set BV = BV - 1
        set iPu = VV[BV]
        set MV[iPu] = 1149
    endif
    set ASw = ASw - 1
    return iPu
endfunction
function tyr takes string ryr returns integer
    local integer syr
    set DSw[ASw] = ryr
    set ASw = ASw + 1
    if NX == 0 then
        if MX < 32768 then
            set MX = MX + 1
            set syr = MX
            set wC[syr] = 1095
        else
            call tNr("Out of memory: Could not create CallbackSingle_nullTimer_Encoder_Encoder.", "when calling error in Encoder, line 112")
            set syr = 0
        endif
    else
        set NX = NX - 1
        set syr = BX[NX]
        set wC[syr] = 1095
    endif
    set ASw = ASw - 1
    return syr
endfunction
function jfi takes integer Tfi, integer Yfi, integer Gfi, string gfi returns nothing
    local integer hfi
    local integer Ffi
    local integer kfi
    set DSw[ASw] = gfi
    set ASw = ASw + 1
    call I9r("save1")
    set hfi = KUu("when calling alloc_ForForceCallback_execute_Encoder_Encoder in Encoder, line 106")
    set M1[hfi] = Tfi
    call ggu(hfi, "when calling execute in Encoder, line 106")
    call I9r("save2")
    set P1[Tfi] =- 1
    set Ffi = SPu("when calling alloc_ForForceCallback_execute_Encoder_Encoder in Encoder, line 109")
    set w4[Ffi] = Tfi
    call ggu(Ffi, "when calling execute in Encoder, line 109")
    set kfi = tyr("when calling alloc_CallbackSingle_nullTimer_Encoder_Encoder in Encoder, line 112")
    call RUs(kfi)
    set u4[kfi] = Tfi
    set r4[kfi] = Yfi
    set s4[kfi] = Gfi
    call ccr(kfi, "when calling nullTimer in Encoder, line 112")
    set ASw = ASw - 1
endfunction
function cWu takes integer sWu, integer tWu, integer iWu, string SWu returns nothing
    set DSw[ASw] = SWu
    set ASw = ASw + 1
    if JV[sWu] == 0 then
        if sWu == 0 then
            call tNr("Nullpointer exception when calling Encoder.save", "when calling error in Encoder, line 104")
        else
            call tNr("Called Encoder.save on invalid object.", "when calling error in Encoder, line 104")
        endif
    endif
    call jfi(sWu, tWu, iWu, "when calling save in Encoder, line 104")
    set ASw = ASw - 1
endfunction
function ejr takes integer bjr, string yjr returns boolean
    local boolean pjr
    set DSw[ASw] = yjr
    set ASw = ASw + 1
    if oN[bjr] == 0 then
        if bjr == 0 then
            call tNr("Nullpointer exception when calling LLIterator.hasNext", "when calling error in LinkedList, line 455")
        else
            call tNr("Called LLIterator.hasNext on invalid object.", "when calling error in LinkedList, line 455")
        endif
    endif
    set pjr = Tji(bjr)
    set ASw = ASw - 1
    return pjr
endfunction
function ooS takes integer toS, integer ioS, string SoS, string coS returns nothing
    if ioS < 0 or ioS >= 25 then
        call tNr("Index out of Bounds", coS)
    elseif ioS <= 12 then
        if ioS <= 6 then
            if ioS <= 3 then
    if ioS <= 1 then
                    if ioS <= 0 then
                        set Bow[toS] = SoS
                    else
                        set Now[toS] = SoS
                    endif
    elseif ioS <= 2 then
                    set Mow[toS] = SoS
    else
                    set wOw[toS] = SoS
    endif
            elseif ioS <= 5 then
    if ioS <= 4 then
                    set uOw[toS] = SoS
    else
                    set rOw[toS] = SoS
    endif
            else
    set sOw[toS] = SoS
            endif
        elseif ioS <= 9 then
            if ioS <= 8 then
    if ioS <= 7 then
                    set tOw[toS] = SoS
    else
                    set iOw[toS] = SoS
    endif
            else
    set SOw[toS] = SoS
            endif
        elseif ioS <= 11 then
            if ioS <= 10 then
    set cOw[toS] = SoS
            else
    set oOw[toS] = SoS
            endif
        else
            set OOw[toS] = SoS
        endif
    elseif ioS <= 18 then
        if ioS <= 15 then
            if ioS <= 14 then
    if ioS <= 13 then
                    set lOw[toS] = SoS
    else
                    set bOw[toS] = SoS
    endif
            else
    set yOw[toS] = SoS
            endif
        elseif ioS <= 17 then
            if ioS <= 16 then
    set pOw[toS] = SoS
            else
    set eOw[toS] = SoS
            endif
        else
            set qOw[toS] = SoS
        endif
    elseif ioS <= 21 then
        if ioS <= 20 then
            if ioS <= 19 then
    set aOw[toS] = SoS
            else
    set nOw[toS] = SoS
            endif
        else
            set dOw[toS] = SoS
        endif
    elseif ioS <= 23 then
        if ioS <= 22 then
            set fOw[toS] = SoS
        else
            set ROw[toS] = SoS
        endif
    else
        set TOw[toS] = SoS
    endif
endfunction
function F5s takes integer Y5s, string G5s returns nothing
    local integer g5s
    local integer h5s
    set DSw[ASw] = G5s
    set ASw = ASw + 1
    set g5s = 0
    set h5s = Eg - 1
    loop
        exitwhen g5s > h5s
        call ooS(Y5s, g5s, "", "when writing array BigString_substrings in BigString, line 115")
        set g5s = g5s + 1
    endloop
    set rM[Y5s] = 0
    set sM[Y5s] = 0
    set ASw = ASw - 1
endfunction
function DEt takes integer PEt, string AEt returns nothing
    set DSw[ASw] = AEt
    set ASw = ASw + 1
    if aC[PEt] == 0 then
        if PEt == 0 then
            call tNr("Nullpointer exception when calling BigString.reset", "when calling error in BigString, line 113")
        else
            call tNr("Called BigString.reset on invalid object.", "when calling error in BigString, line 113")
        endif
    endif
    call F5s(PEt, "when calling reset in BigString, line 113")
    set ASw = ASw - 1
endfunction
function Y9S takes integer T9S returns nothing
    set rM[T9S] = 0
    set sM[T9S] = 0
endfunction
function kTr takes integer hTr, string FTr returns nothing
    set DSw[ASw] = FTr
    set ASw = ASw + 1
    call Y9S(hTr)
    call DEt(hTr, "when calling reset in BigString, line 107")
    set ASw = ASw - 1
endfunction
function rFi takes string wFi returns integer
    local integer uFi
    set DSw[ASw] = wFi
    set ASw = ASw + 1
    if eC == 0 then
        if qC < 32768 then
            set qC = qC + 1
            set uFi = qC
            set aC[uFi] = 638
        else
            call tNr("Out of memory: Could not create BigString.", "when calling error in BigString, line 101")
            set uFi = 0
        endif
    else
        set eC = eC - 1
        set uFi = pC[eC]
        set aC[uFi] = 638
    endif
    set ASw = ASw - 1
    return uFi
endfunction
function p1i takes string b1i returns integer
    local integer y1i
    set DSw[ASw] = b1i
    set ASw = ASw + 1
    set y1i = rFi("when calling alloc_BigString in BigString, line 106")
    call kTr(y1i, "when calling construct_BigString in BigString, line 106")
    set ASw = ASw - 1
    return y1i
endfunction
function t9i takes integer u9i, string r9i returns integer
    local integer s9i
    set DSw[ASw] = r9i
    set ASw = ASw + 1
    if oN[u9i] == 0 then
        if u9i == 0 then
            call tNr("Nullpointer exception when calling LLIterator.next", "when calling error in LinkedList, line 458")
        else
            call tNr("Called LLIterator.next on invalid object.", "when calling error in LinkedList, line 458")
        endif
    endif
    set s9i = LXi(u9i)
    set ASw = ASw - 1
    return s9i
endfunction
function UTi takes integer xTi, integer vTi, string mTi returns nothing
    local integer QTi
    local integer WTi
    local integer ETi
    local integer ZTi
    set DSw[ASw] = mTi
    set ASw = ASw + 1
    set QTi = NN[xTi]
    set ZTi = 0
    loop
        exitwhen not(QTi != 0 or ZTi != 0)
        set WTi = vTi * wM[QTi] + ZTi
        set ZTi = WTi / MN[xTi]
        set ETi = WTi - ZTi * MN[xTi]
        set wM[QTi] = ETi
        if uM[QTi] == 0 and ZTi != 0 then
            set uM[QTi] = BAt("when calling new_BigNum_l in BigNum, line 127")
        endif
        set QTi = uM[QTi]
    endloop
    set ASw = ASw - 1
endfunction
function Twu takes integer dwu, integer fwu, string Rwu returns nothing
    set DSw[ASw] = Rwu
    set ASw = ASw + 1
    if oC[dwu] == 0 then
        if dwu == 0 then
            call tNr("Nullpointer exception when calling BigNum.mulSmall", "when calling error in BigNum, line 116")
        else
            call tNr("Called BigNum.mulSmall on invalid object.", "when calling error in BigNum, line 116")
        endif
    endif
    call UTi(dwu, fwu, "when calling mulSmall in BigNum, line 116")
    set ASw = ASw - 1
endfunction
function Znr takes real jnr, real xnr returns real
    local real vnr = jnr
    local real mnr = xnr
    local real Qnr = 1.0
    local real Wnr = 0.0
    local real Enr = 1.0
    if vnr < 0. then
        return 0.0
    endif
    if vnr < 1. then
        set vnr = 1.0 / vnr
        set Enr =- 1.0
    endif
    loop
        exitwhen not(vnr >= 1.0001)
        if vnr > mnr then
            set vnr = vnr / mnr
            set Wnr = Wnr + Qnr
        else
            set mnr = SquareRoot(mnr)
            set Qnr = Qnr / 2.
        endif
    endloop
    return Enr * Wnr
endfunction
function xnS takes integer GnS, integer gnS, string hnS returns nothing
    local integer FnS
    local integer knS
    local integer jnS
    set DSw[ASw] = hnS
    set ASw = ASw + 1
    set FnS = NN[GnS]
    set jnS = gnS
    if FnS == 0 then
        set FnS = BAt("when calling new_BigNum_l in BigNum, line 99")
        set NN[GnS] = FnS
    endif
    loop
        exitwhen not(jnS != 0)
        set knS = wM[FnS] + jnS
        set jnS = knS / MN[GnS]
        set knS = knS - jnS * MN[GnS]
        set wM[FnS] = knS
        if uM[FnS] == 0 then
            set uM[FnS] = BAt("when calling new_BigNum_l in BigNum, line 110")
        endif
        set FnS = uM[FnS]
    endloop
    set ASw = ASw - 1
endfunction
function oqs takes integer iqs, integer Sqs, string cqs returns nothing
    set DSw[ASw] = cqs
    set ASw = ASw + 1
    if oC[iqs] == 0 then
        if iqs == 0 then
            call tNr("Nullpointer exception when calling BigNum.addSmall", "when calling error in BigNum, line 93")
        else
            call tNr("Called BigNum.addSmall on invalid object.", "when calling error in BigNum, line 93")
        endif
    endif
    call xnS(iqs, Sqs, "when calling addSmall in BigNum, line 93")
    set ASw = ASw - 1
endfunction
function vsi takes integer Fsi, integer ksi, integer jsi, string xsi returns nothing
    set DSw[ASw] = xsi
    set ASw = ASw + 1
    set U1[Fsi] = U1[Fsi] + Znr(jsi + 1., Z1[Fsi] + 0.)
    call Twu(I1[Fsi], jsi + 1, "when calling mulSmall in Encoder, line 27")
    call oqs(I1[Fsi], ksi, "when calling addSmall in Encoder, line 28")
    call lSu("encoded val: " + fju(ksi) + " max: " + fju(jsi))
    set ASw = ASw - 1
endfunction
function vCi takes integer FCi, integer kCi, integer jCi, string xCi returns nothing
    set DSw[ASw] = xCi
    set ASw = ASw + 1
    if JV[FCi] == 0 then
        if FCi == 0 then
            call tNr("Nullpointer exception when calling Encoder.encode", "when calling error in Encoder, line 25")
        else
            call tNr("Called Encoder.encode on invalid object.", "when calling error in Encoder, line 25")
        endif
    endif
    call vsi(FCi, kCi, jCi, "when calling encode in Encoder, line 25")
    set ASw = ASw - 1
endfunction
function vxt takes string jxt returns integer
    local integer xxt
    set DSw[ASw] = jxt
    set ASw = ASw + 1
    if uB == 0 then
        if rB < 32768 then
            set rB = rB + 1
            set xxt = rB
            set sB[xxt] = 1238
        else
            call tNr("Out of memory: Could not create PayloadCallback_save_doSeq_LZW.", "when calling error in LZW, line 51")
            set xxt = 0
        endif
    else
        set uB = uB - 1
        set xxt = wB[uB]
        set sB[xxt] = 1238
    endif
    set ASw = ASw - 1
    return xxt
endfunction
function f8w takes integer d8w returns nothing
    set Ssw[d8w] = 0
endfunction
function wlS takes integer MOS returns nothing
    call f8w(MOS)
endfunction
function K9S takes integer Z9S, integer U9S, string I9S returns boolean
    local boolean P9S
    local integer A9S
    local boolean D9S
    local integer H9S
    local integer J9S
    set DSw[ASw] = I9S
    set ASw = ASw + 1
    set P9S = true
    if ejr(eww[Z9S], "when calling hasNext in LZW, line 45") then
        call vCi(qww[Z9S], t9i(eww[Z9S], "when calling next in LZW, line 46"), aww[Z9S], "when calling encode in LZW, line 46")
    else
        set P9S = false
        call vCi(qww[Z9S], aww[Z9S], YP, "when calling encode in LZW, line 49")
        call Z9s(nww[Z9S], "when calling dispatch_LinkedList_destroyLinkedList in LZW, line 50")
        set H9S = qww[Z9S]
        set J9S = p1i("when calling new_BigString in LZW, line 51")
        set A9S = vxt("when calling alloc_PayloadCallback_save_doSeq_LZW in LZW, line 51")
        call wlS(A9S)
        set fww[A9S] = dww[Z9S]
        set Rww[A9S] = qww[Z9S]
        call cWu(H9S, J9S, A9S, "when calling save in LZW, line 51")
    endif
    set D9S = P9S
    set ASw = ASw - 1
    return D9S
endfunction
function dwr takes integer awr, integer nwr returns string
    return SubString(E1[awr], nwr, nwr + 1)
endfunction
function Our takes integer iur, integer Sur, string cur returns string
    local string our
    set DSw[ASw] = cur
    set ASw = ASw + 1
    if JV[iur] == 0 then
        if iur == 0 then
            call tNr("Nullpointer exception when calling Encoder.itochar", "when calling error in Encoder, line 152")
        else
            call tNr("Called Encoder.itochar on invalid object.", "when calling error in Encoder, line 152")
        endif
    endif
    set our = dwr(iur, Sur)
    set ASw = ASw - 1
    return our
endfunction
function Mes takes string Bes, integer Nes returns string
    return SubString(Bes, Nes, vQt(Bes))
endfunction
function Lgu takes integer Agu, string Dgu, string Hgu returns nothing
    local integer Jgu
    local integer Kgu
    set DSw[ASw] = Hgu
    set ASw = ASw + 1
    if vQt(Dgu) > Wg then
        call tNr("adding too long string", "when calling error in BigString, line 142")
    endif
    set Jgu = P3w(gTS(Agu, "when calling getLength in BigString, line 143") * 1. / Wg)
    if vQt(XEt(Agu, Jgu, "when reading array BigString_substrings in  in BigString, line 144")) + vQt(Dgu) > Wg then
        set Kgu = Wg - vQt(XEt(Agu, Jgu, "when reading array BigString_substrings in  in BigString, line 145"))
        call ooS(Agu, Jgu, XEt(Agu, Jgu, "when reading array BigString_substrings in  in BigString, line 146") + CAw(Dgu, $00000000, Kgu), "when writing array BigString_substrings in BigString, line 146")
        set Jgu = Jgu + 1
        call ooS(Agu, Jgu, XEt(Agu, Jgu, "when reading array BigString_substrings in  in BigString, line 148") + Mes(Dgu, Kgu), "when writing array BigString_substrings in BigString, line 148")
    else
        call ooS(Agu, Jgu, XEt(Agu, Jgu, "when reading array BigString_substrings in  in BigString, line 150") + Dgu, "when writing array BigString_substrings in BigString, line 150")
    endif
    set rM[Agu] = rM[Agu] + vQt(Dgu)
    set ASw = ASw - 1
endfunction
function qxr takes integer yxr, string pxr, string exr returns nothing
    set DSw[ASw] = exr
    set ASw = ASw + 1
    if aC[yxr] == 0 then
        if yxr == 0 then
            call tNr("Nullpointer exception when calling BigString.addString", "when calling error in BigString, line 140")
        else
            call tNr("Called BigString.addString on invalid object.", "when calling error in BigString, line 140")
        endif
    endif
    call Lgu(yxr, pxr, "when calling addString in BigString, line 140")
    set ASw = ASw - 1
endfunction
function LOr takes integer AOr, integer DOr, string HOr returns boolean
    local boolean JOr
    local boolean KOr
    set DSw[ASw] = HOr
    set ASw = ASw + 1
    set JOr = true
    if H1[AOr] != 0 then
        call qxr(J1[AOr], Our(K1[AOr], wM[H1[AOr]], "when calling itochar in Encoder, line 65"), "when calling addString in Encoder, line 65")
        set H1[AOr] = uM[H1[AOr]]
    else
        set JOr = false
        set Ssw[L1[AOr]] = J1[AOr]
        call O8t($00000005, L1[AOr], $00000000, "when calling doStep in Encoder, line 70")
    endif
    set KOr = JOr
    set ASw = ASw - 1
    return KOr
endfunction
function G5i takes integer n5i, integer d5i, string f5i returns nothing
    local integer R5i
    local integer T5i
    local integer Y5i
    if n5i == 0 then
        set DSw[ASw] = f5i
        set ASw = ASw + 1
        if iM[d5i] != 0 and iM[d5i] != d5i then
            set Y5i = cM[d5i]
            call G5i($00000001, iM[d5i], "when calling getCombinedLength in BigString, line 28")
            set R5i = Y5i + eIw
            set ASw = ASw - 1
            set eIw = R5i
            return
        endif
        set ASw = ASw - 1
        set eIw = cM[d5i]
        return
    elseif n5i == 1 then
        set DSw[ASw] = f5i
        set ASw = ASw + 1
        if RC[d5i] == 0 then
            if d5i == 0 then
    call tNr("Nullpointer exception when calling BigSubString.getCombinedLength", "when calling error in BigString, line 26")
            else
    call tNr("Called BigSubString.getCombinedLength on invalid object.", "when calling error in BigString, line 26")
            endif
        endif
        call G5i($00000000, d5i, "when calling getCombinedLength in BigString, line 26")
        set T5i = eIw
        set ASw = ASw - 1
        set eIw = T5i
        return
    endif
endfunction
function HQt takes integer ZQt, integer UQt, string IQt returns nothing
    local string PQt
    local string AQt
    local string DQt
    if ZQt == 0 then
        set DSw[ASw] = IQt
        set ASw = ASw + 1
        call G5i($00000001, UQt, "when calling getCombinedLength in BigString, line 52")
        if eIw > Wg then
            call tNr("cannot use getCombined on oversized SubStrings. You need to iterate through the chunks", "when calling error in BigString, line 53")
        endif
        if tM[UQt] == 0 and oM[UQt] == null then
            call tNr("cannot generate new cache without parent", "when calling error in BigString, line 55")
        endif
        set PQt = ""
        if oM[UQt] != null then
            set PQt = PQt + oM[UQt]
        else
            set PQt = PQt + blr(tM[UQt], UQt, "when calling getSubStringData in BigString, line 60")
        endif
        if iM[UQt] != 0 then
            set DQt = PQt
            call HQt($00000001, iM[UQt], "when calling getCombined in BigString, line 62")
            set PQt = DQt + qIw
        endif
        set ASw = ASw - 1
        set qIw = PQt
        return
    elseif ZQt == 1 then
        set DSw[ASw] = IQt
        set ASw = ASw + 1
        if RC[UQt] == 0 then
            if UQt == 0 then
    call tNr("Nullpointer exception when calling BigSubString.getCombined", "when calling error in BigString, line 51")
            else
    call tNr("Called BigSubString.getCombined on invalid object.", "when calling error in BigString, line 51")
            endif
        endif
        call HQt($00000000, UQt, "when calling getCombined in BigString, line 51")
        set AQt = qIw
        set ASw = ASw - 1
        set qIw = AQt
        return
    endif
endfunction
function D3i takes integer P3i, string A3i returns nothing
    call Jru(nD, P3i, A3i)
endfunction
function urt takes integer wrt returns nothing
    set NN[wrt] = 0
endfunction
function LGs takes integer JGs, integer KGs returns nothing
    call urt(JGs)
    set MN[JGs] = KGs
endfunction
function d5s takes string a5s returns integer
    local integer n5s
    set DSw[ASw] = a5s
    set ASw = ASw + 1
    if SC == 0 then
        if cC < 32768 then
            set cC = cC + 1
            set n5s = cC
            set oC[n5s] = 636
        else
            call tNr("Out of memory: Could not create BigNum.", "when calling error in BigNum, line 63")
            set n5s = 0
        endif
    else
        set SC = SC - 1
        set n5s = iC[SC]
        set oC[n5s] = 636
    endif
    set ASw = ASw - 1
    return n5s
endfunction
function Yur takes integer fur, string Rur returns integer
    local integer Tur
    set DSw[ASw] = Rur
    set ASw = ASw + 1
    set Tur = d5s("when calling alloc_BigNum in BigNum, line 67")
    call LGs(Tur, fur)
    set ASw = ASw - 1
    return Tur
endfunction
function jEu takes integer kEu returns nothing
    set U1[kEu] = 0.
    set P1[kEu] =- 1
    set A1[kEu] =- 1
    set D1[kEu] =- 1
endfunction
function nxt takes integer ext, string qxt, string axt returns nothing
    set DSw[ASw] = axt
    set ASw = ASw + 1
    call jEu(ext)
    set E1[ext] = qxt
    set Z1[ext] = vQt(qxt)
    set I1[ext] = Yur(Z1[ext], "when calling new_BigNum in Encoder, line 20")
    set ASw = ASw - 1
endfunction
function xmu takes string kmu returns integer
    local integer jmu
    set DSw[ASw] = kmu
    set ASw = ASw + 1
    if DV == 0 then
        if HV < 32768 then
            set HV = HV + 1
            set jmu = HV
            set JV[jmu] = 1129
        else
            call tNr("Out of memory: Could not create Encoder.", "when calling error in Encoder, line 11")
            set jmu = 0
        endif
    else
        set DV = DV - 1
        set jmu = AV[DV]
        set JV[jmu] = 1129
    endif
    set ASw = ASw - 1
    return jmu
endfunction
function m_S takes string j_S, string x_S returns integer
    local integer v_S
    set DSw[ASw] = x_S
    set ASw = ASw + 1
    set v_S = xmu("when calling alloc_Encoder in Encoder, line 17")
    call nxt(v_S, j_S, "when calling construct_Encoder in Encoder, line 17")
    set ASw = ASw - 1
    return v_S
endfunction
function t6r takes string r6r returns integer
    local integer s6r
    set DSw[ASw] = r6r
    set ASw = ASw + 1
    if LV == 0 then
        if XV < 32768 then
            set XV = XV + 1
            set s6r = XV
            set CV[s6r] = 1253
        else
            call tNr("Out of memory: Could not create SeqCallback_doSeq_LZW.", "when calling error in LZW, line 43")
            set s6r = 0
        endif
    else
        set LV = LV - 1
        set s6r = KV[LV]
        set CV[s6r] = 1253
    endif
    set ASw = ASw - 1
    return s6r
endfunction
function U0s takes integer F0s, integer k0s, integer j0s, string x0s returns nothing
    local string v0s
    local integer m0s
    local integer Q0s
    local integer W0s
    local integer E0s
    local integer Z0s
    set DSw[ASw] = x0s
    set ASw = ASw + 1
    if k0s > YP then
        call tNr("dictionary size exceeds max size", "when calling error in LZW, line 32")
    endif
    if FD == 0 then
        set v0s = ""
        set m0s = c5r(F0s, "when calling iterator in LZW, line 36")
        loop
            exitwhen not Tji(m0s)
            set Q0s = LXi(m0s)
            set v0s = v0s + fju(Q0s) + ","
        endloop
        call vms(m0s, "when calling close in LZW, line 36")
        call D3i($00000000, "encoding positions: " + v0s)
    endif
    set W0s = m_S(GP, "when calling new_Encoder in LZW, line 40")
    set E0s = Kqu(F0s, "when calling staticItr in LZW, line 42")
    set Z0s = t6r("when calling alloc_SeqCallback_doSeq_LZW in LZW, line 43")
    call Vwr(Z0s)
    set eww[Z0s] = E0s
    set qww[Z0s] = W0s
    set aww[Z0s] = k0s
    set nww[Z0s] = F0s
    set dww[Z0s] = j0s
    call nZu(Z0s, "when calling doSeq in LZW, line 43")
    set ASw = ASw - 1
endfunction
function VDw takes string XDw returns integer
    local integer CDw
    set DSw[ASw] = XDw
    set ASw = ASw + 1
    if uB == 0 then
        if rB < 32768 then
            set rB = rB + 1
            set CDw = rB
            set sB[CDw] = 1235
        else
            call tNr("Out of memory: Could not create PayloadCallback_encodePositions_doSeq_LZW.", "when calling error in LZW, line 144")
            set CDw = 0
        endif
    else
        set uB = uB - 1
        set CDw = wB[uB]
        set sB[CDw] = 1235
    endif
    set ASw = ASw - 1
    return CDw
endfunction
function BbS takes integer CbS, string VbS returns nothing
    call m1r(CbS)
    set oM[CbS] = VbS
    set cM[CbS] = vQt(oM[CbS])
endfunction
function Zgu takes string Qgu, string Wgu returns integer
    local integer Egu
    set DSw[ASw] = Wgu
    set ASw = ASw + 1
    set Egu = ICt("when calling alloc_BigSubString in BigString, line 14")
    call BbS(Egu, Qgu)
    set ASw = ASw - 1
    return Egu
endfunction
function Icu takes integer Ucu returns nothing
    set cM[Ucu] =- 1
endfunction
function Uit takes integer Eit, string Zit returns nothing
    set DSw[ASw] = Zit
    set ASw = ASw + 1
    if RC[Eit] == 0 then
        call tNr("Double free: object of type BigSubString", "when calling error in BigString, line 7")
    else
        set nC[dC] = Eit
        set dC = dC + 1
        set RC[Eit] = 0
    endif
    set ASw = ASw - 1
endfunction
function Cni takes integer Lni, string Xni returns nothing
    set DSw[ASw] = Xni
    set ASw = ASw + 1
    call Icu(Lni)
    call Uit(Lni, "when calling dealloc_BigSubString in BigString, line 98")
    set ASw = ASw - 1
endfunction
function d2S takes integer a2S, string n2S returns nothing
    set DSw[ASw] = n2S
    set ASw = ASw + 1
    if RC[a2S] == 0 then
        if a2S == 0 then
            call tNr("Nullpointer exception when calling BigSubString.BigSubString", "when calling error in BigString, line 7")
        else
            call tNr("Called BigSubString.BigSubString on invalid object.", "when calling error in BigString, line 7")
        endif
    endif
    call Cni(a2S, "when calling destroyBigSubString in BigString, line 7")
    set ASw = ASw - 1
endfunction
function PHu takes integer EHu, integer ZHu, string UHu returns integer
    local integer IHu
    set DSw[ASw] = UHu
    set ASw = ASw + 1
    if ZHu == 0 then
        call tNr("null", "when calling error in BigString, line 68")
    endif
    set IHu = EHu
    loop
        exitwhen not(iM[IHu] != 0)
        set IHu = iM[IHu]
    endloop
    set iM[IHu] = ZHu
    set ASw = ASw - 1
    return EHu
endfunction
function rEr takes integer NWr, integer MWr, string wEr returns integer
    local integer uEr
    set DSw[ASw] = wEr
    set ASw = ASw + 1
    if RC[NWr] == 0 then
        if NWr == 0 then
            call tNr("Nullpointer exception when calling BigSubString.concat", "when calling error in BigString, line 66")
        else
            call tNr("Called BigSubString.concat on invalid object.", "when calling error in BigString, line 66")
        endif
    endif
    set uEr = PHu(NWr, MWr, "when calling concat in BigString, line 66")
    set ASw = ASw - 1
    return uEr
endfunction
function vBw takes string jBw, string xBw returns nothing
    set DSw[ASw] = xBw
    set ASw = ASw + 1
    call GVw(gP, err(jBw, "when calling stringToIndex in LZW, line 20"), hP, "when calling put in LZW, line 20")
    call QCt(gP, hP, jBw, "when calling saveString in LZW, line 21")
    set hP = hP + 1
    set ASw = ASw - 1
endfunction
function Hti takes integer Iti, integer Pti, string Ati returns integer
    local integer Dti
    set DSw[ASw] = Ati
    set ASw = ASw + 1
    set Dti = oEr(Iti, Pti, $00000001, "when calling new_BigSubString in BigString, line 138")
    set ASw = ASw - 1
    return Dti
endfunction
function vNi takes integer FNi, integer kNi, string jNi returns integer
    local integer xNi
    set DSw[ASw] = jNi
    set ASw = ASw + 1
    if aC[FNi] == 0 then
        if FNi == 0 then
            call tNr("Nullpointer exception when calling BigString.charAt", "when calling error in BigString, line 137")
        else
            call tNr("Called BigString.charAt on invalid object.", "when calling error in BigString, line 137")
        endif
    endif
    set xNi = Hti(FNi, kNi, "when calling charAt in BigString, line 137")
    set ASw = ASw - 1
    return xNi
endfunction
function WKu takes integer GKu, integer gKu, string hKu returns boolean
    local boolean FKu
    local string kKu
    local integer jKu
    local boolean xKu
    local integer vKu
    local integer mKu
    local integer QKu
    set DSw[ASw] = hKu
    set ASw = ASw + 1
    set FKu = true
    if xww[GKu] < gTS(vww[GKu], "when calling getLength in LZW, line 108") - 1 then
        if mww[GKu] != 0 then
            call d2S(mww[GKu], "when calling dispatch_BigSubString_destroyBigSubString in LZW, line 110")
        endif
        set mww[GKu] = vNi(vww[GKu], xww[GKu], "when calling charAt in LZW, line 111")
        set xww[GKu] = xww[GKu] + 1
        if Qww[GKu] != 0 then
            call d2S(Qww[GKu], "when calling dispatch_BigSubString_destroyBigSubString in LZW, line 114")
        endif
        set Qww[GKu] = vNi(vww[GKu], xww[GKu], "when calling charAt in LZW, line 115")
        call rEr(mww[GKu], Qww[GKu], "when calling concat in LZW, line 116")
        loop
            exitwhen not true
            set QKu = gP
            call HQt($00000001, mww[GKu], "when calling getCombined in LZW, line 118")
            if not Jyr(QKu, err(qIw, "when calling stringToIndex in LZW, line 118"), "when calling has in LZW, line 118") then
    exitwhen true
            endif
            set kKu = I_u(mww[GKu], "when calling getSingle in LZW, line 120")
            if mww[GKu] != 0 then
    call d2S(mww[GKu], "when calling dispatch_BigSubString_destroyBigSubString in LZW, line 122")
            endif
            set mww[GKu] = Zgu(kKu + I_u(Qww[GKu], "when calling getSingle in LZW, line 123"), "when calling new_BigSubString in LZW, line 123")
            set xww[GKu] = xww[GKu] + 1
            if xww[GKu] < gTS(vww[GKu], "when calling getLength in LZW, line 125") then
    if Qww[GKu] != 0 then
                    call d2S(Qww[GKu], "when calling dispatch_BigSubString_destroyBigSubString in LZW, line 127")
    endif
    set Qww[GKu] = vNi(vww[GKu], xww[GKu], "when calling charAt in LZW, line 128")
    call rEr(mww[GKu], Qww[GKu], "when calling concat in LZW, line 129")
            else
    exitwhen true
            endif
        endloop
        call vwt(Www[GKu], wps(gP, err(I_u(mww[GKu], "when calling getSingle in LZW, line 134"), "when calling stringToIndex in LZW, line 134"), "when calling get in LZW, line 134"), "when calling add in LZW, line 134")
        call HQt($00000001, mww[GKu], "when calling getCombined in LZW, line 136")
        call vBw(qIw, "when calling putDict in LZW, line 136")
    else
        call I9r("Compressed")
        set FKu = false
        if Qww[GKu] != 0 and Dsi(I_u(mww[GKu], "when calling getSingle in LZW, line 142"), lBw(mww[GKu], "when calling getSingleLength in LZW, line 142") - 1) != I_u(Qww[GKu], "when calling getSingle in LZW, line 142") then
            call vwt(Www[GKu], wps(gP, err(I_u(Qww[GKu], "when calling getSingle in LZW, line 143"), "when calling stringToIndex in LZW, line 143"), "when calling get in LZW, line 143"), "when calling add in LZW, line 143")
        endif
        set vKu = Www[GKu]
        set mKu = hP
        set jKu = VDw("when calling alloc_PayloadCallback_encodePositions_doSeq_LZW in LZW, line 144")
        call wlS(jKu)
        set Zww[jKu] = Eww[GKu]
        call U0s(vKu, mKu, jKu, "when calling encodePositions in LZW, line 144")
    endif
    set xKu = FKu
    set ASw = ASw - 1
    return xKu
endfunction
function vDs takes integer kDs, string jDs returns integer
    local integer xDs
    set DSw[ASw] = jDs
    set ASw = ASw + 1
    set xDs = 0
    if ejr(kDs, "when calling hasNext in LinkedList, line 464") then
        set xDs = Lww[Cww[Bww_215[kDs]]]
    endif
    set ASw = ASw - 1
    return xDs
endfunction
function gCw takes integer TCw, string YCw returns integer
    local integer GCw
    set DSw[ASw] = YCw
    set ASw = ASw + 1
    if oN[TCw] == 0 then
        if TCw == 0 then
            call tNr("Nullpointer exception when calling LLIterator.lookahead", "when calling error in LinkedList, line 462")
        else
            call tNr("Called LLIterator.lookahead on invalid object.", "when calling error in LinkedList, line 462")
        endif
    endif
    set GCw = vDs(TCw, "when calling lookahead in LinkedList, line 462")
    set ASw = ASw - 1
    return GCw
endfunction
function YZt takes integer aZt, integer nZt, string dZt returns boolean
    local boolean fZt
    local integer RZt
    local boolean TZt
    set DSw[ASw] = dZt
    set ASw = ASw + 1
    set fZt = true
    if ejr(Pww[aZt], "when calling hasNext in LZW, line 170") then
        set RZt = t9i(Pww[aZt], "when calling next in LZW, line 171")
        set Aww[aZt] = a9s(gP, RZt, "when calling loadString in LZW, line 172")
        if ejr(Pww[aZt], "when calling hasNext in LZW, line 173") and gCw(Pww[aZt], "when calling lookahead in LZW, line 173") < hP then
            set Dww[aZt] = a9s(gP, gCw(Pww[aZt], "when calling lookahead in LZW, line 174"), "when calling loadString in LZW, line 174")
            set Dww[aZt] = Dsi(Dww[aZt], $00000000)
        elseif not ejr(Pww[aZt], "when calling hasNext in LZW, line 176") then
            set Dww[aZt] = null
        else
            set Dww[aZt] = Dsi(Aww[aZt], $00000000)
        endif
        if Dww[aZt] != null and vQt(Dww[aZt]) > 0 then
            call vBw(Aww[aZt] + Dww[aZt], "when calling putDict in LZW, line 181")
        endif
        call qxr(Hww[aZt], Aww[aZt], "when calling addString in LZW, line 183")
    else
        set fZt = false
        call I9r("decompressed")
        call EUt(Hww[aZt], "when calling debugPrint in LZW, line 187")
        set Ssw[Jww[aZt]] = Hww[aZt]
        call O8t($00000005, Jww[aZt], $00000000, "when calling doStep in LZW, line 189")
    endif
    set TZt = fZt
    set ASw = ASw - 1
    return TZt
endfunction
function ylt takes integer llt returns boolean
    local integer blt = NN[llt]
    loop
        exitwhen not(blt != 0)
        if wM[blt] != 0 then
            return false
        endif
        set blt = uM[blt]
    endloop
    return true
endfunction
function GPw takes integer RPw, string TPw returns boolean
    local boolean YPw
    set DSw[ASw] = TPw
    set ASw = ASw + 1
    if oC[RPw] == 0 then
        if RPw == 0 then
            call tNr("Nullpointer exception when calling BigNum.isZero", "when calling error in BigNum, line 78")
        else
            call tNr("Called BigNum.isZero on invalid object.", "when calling error in BigNum, line 78")
        endif
    endif
    set YPw = ylt(RPw)
    set ASw = ASw - 1
    return YPw
endfunction
function vwr takes integer Fwr, integer kwr, string jwr returns nothing
    local integer xwr
    set DSw[ASw] = jwr
    set ASw = ASw + 1
    set xwr = xeS(kwr, wuw[Fwr], Cww[wuw[Fwr]], "when calling new_LLEntry in LinkedList, line 188")
    set Xww[Cww[wuw[Fwr]]] = xwr
    set Cww[wuw[Fwr]] = xwr
    set uuw[Fwr] = uuw[Fwr] + 1
    set ASw = ASw - 1
endfunction
function drS takes integer qrS, integer arS, string nrS returns nothing
    set DSw[ASw] = nrS
    set ASw = ASw + 1
    if yN[qrS] == 0 then
        if qrS == 0 then
            call tNr("Nullpointer exception when calling LinkedList.addtoStart", "when calling error in LinkedList, line 187")
        else
            call tNr("Called LinkedList.addtoStart on invalid object.", "when calling error in LinkedList, line 187")
        endif
    endif
    call vwr(qrS, arS, "when calling addtoStart in LinkedList, line 187")
    set ASw = ASw - 1
endfunction
function nBu takes integer oBu, integer OBu, integer lBu, integer bBu, string yBu returns nothing
    local integer pBu
    local integer eBu
    local integer qBu
    local integer aBu
    if oBu == 0 then
        set DSw[ASw] = yBu
        set ASw = ASw + 1
        set pBu = 0
        if uM[OBu] != 0 then
            call nBu($00000001, uM[OBu], lBu, bBu, "when calling divSmall in BigNum, line 54")
            set pBu = eIw
        endif
        set eBu = wM[OBu] + pBu * lBu
        set qBu = eBu / bBu
        set pBu = eBu - qBu * bBu
        set wM[OBu] = qBu
        set ASw = ASw - 1
        set eIw = pBu
        return
    elseif oBu == 1 then
        set DSw[ASw] = yBu
        set ASw = ASw + 1
        if yC[OBu] == 0 then
            if OBu == 0 then
    call tNr("Nullpointer exception when calling BigNum_l.divSmall", "when calling error in BigNum, line 51")
            else
    call tNr("Called BigNum_l.divSmall on invalid object.", "when calling error in BigNum, line 51")
            endif
        endif
        call nBu($00000000, OBu, lBu, bBu, "when calling divSmall in BigNum, line 51")
        set aBu = eIw
        set ASw = ASw - 1
        set eIw = aBu
        return
    endif
endfunction
function bsi takes integer csi, integer osi, string Osi returns integer
    local integer lsi
    set DSw[ASw] = Osi
    set ASw = ASw + 1
    call nBu($00000001, NN[csi], MN[csi], osi, "when calling divSmall in BigNum, line 133")
    set lsi = eIw
    set ASw = ASw - 1
    return lsi
endfunction
function Ivu takes integer Wvu, integer Evu, string Zvu returns integer
    local integer Uvu
    set DSw[ASw] = Zvu
    set ASw = ASw + 1
    if oC[Wvu] == 0 then
        if Wvu == 0 then
            call tNr("Nullpointer exception when calling BigNum.divSmall", "when calling error in BigNum, line 132")
        else
            call tNr("Called BigNum.divSmall on invalid object.", "when calling error in BigNum, line 132")
        endif
    endif
    set Uvu = bsi(Wvu, Evu, "when calling divSmall in BigNum, line 132")
    set ASw = ASw - 1
    return Uvu
endfunction
function nNs takes integer pNs, integer eNs, string qNs returns integer
    local integer aNs
    set DSw[ASw] = qNs
    set ASw = ASw + 1
    set aNs = Ivu(I1[pNs], eNs + 1, "when calling divSmall in Encoder, line 32")
    set ASw = ASw - 1
    return aNs
endfunction
function fcr takes integer qcr, integer acr, string ncr returns integer
    local integer dcr
    set DSw[ASw] = ncr
    set ASw = ASw + 1
    if JV[qcr] == 0 then
        if qcr == 0 then
            call tNr("Nullpointer exception when calling Encoder.decode", "when calling error in Encoder, line 31")
        else
            call tNr("Called Encoder.decode on invalid object.", "when calling error in Encoder, line 31")
        endif
    endif
    set dcr = nNs(qcr, acr, "when calling decode in Encoder, line 31")
    set ASw = ASw - 1
    return dcr
endfunction
function eHw takes integer iHw, integer SHw, string cHw returns boolean
    local boolean oHw
    local integer OHw
    local string lHw
    local integer bHw
    local integer yHw
    local boolean pHw
    set DSw[ASw] = cHw
    set ASw = ASw + 1
    set oHw = true
    if not GPw(I1[hww[iHw]], "when calling isZero in LZW, line 74") then
        set OHw = fcr(hww[iHw], Fww[iHw], "when calling decode in LZW, line 75")
        call drS(kww[iHw], OHw, "when calling addtoStart in LZW, line 76")
    else
        set oHw = false
        if FD == 0 then
            set lHw = ""
            set bHw = c5r(kww[iHw], "when calling iterator in LZW, line 81")
            loop
    exitwhen not Tji(bHw)
    set yHw = LXi(bHw)
    set lHw = lHw + fju(yHw) + ","
            endloop
            call vms(bHw, "when calling close in LZW, line 81")
            call D3i($00000000, "decoded positions: " + lHw)
        endif
        set Ssw[jww[iHw]] = kww[iHw]
        call O8t($00000005, jww[iHw], $00000000, "when calling doStep in LZW, line 85")
    endif
    set pHw = oHw
    set ASw = ASw - 1
    return pHw
endfunction
function JBi takes integer IBi, string PBi returns nothing
    local string ABi
    local integer DBi
    local integer HBi
    set DSw[ASw] = PBi
    set ASw = ASw + 1
    set uww[IBi] = YYs(Vww[IBi], Bww[IBi], $00000001, "when calling getString in JsonParser, line 74")
    set ABi = uww[IBi]
    if ABi == isw[RP]then
        set Mww[IBi] = Mww[IBi] + 1
        if Mww[IBi] == 1 then
            set Nww[IBi] = Bww[IBi] + 1
        endif
    elseif ABi == isw[TP]then
        set Mww[IBi] = Mww[IBi] - 1
        if Mww[IBi] == 0 then
            set DBi = oEr(Vww[IBi], Nww[IBi], Bww[IBi] - Nww[IBi], "when calling new_BigSubString in JsonParser, line 83")
            call vwt(sww[IBi], DBi, "when calling add in JsonParser, line 84")
            set Nww[IBi] = Bww[IBi] + 1
        endif
    elseif ABi == isw[fP]then
        if Mww[IBi] == 1 then
            set HBi = oEr(Vww[IBi], Nww[IBi], Bww[IBi] - Nww[IBi], "when calling new_BigSubString in JsonParser, line 88")
            call vwt(sww[IBi], HBi, "when calling add in JsonParser, line 89")
            set Nww[IBi] = Bww[IBi] + 1
        endif
    endif
    set Bww[IBi] = Bww[IBi] + 1
    set ASw = ASw - 1
endfunction
function Wkt takes integer mkt, string Qkt returns nothing
    set DSw[ASw] = Qkt
    set ASw = ASw + 1
    if JB[mkt] == 0 then
        if mkt == 0 then
            call tNr("Nullpointer exception when calling JsonParser.parseListSeq", "when calling error in JsonParser, line 73")
        else
            call tNr("Called JsonParser.parseListSeq on invalid object.", "when calling error in JsonParser, line 73")
        endif
    endif
    call JBi(mkt, "when calling parseListSeq in JsonParser, line 73")
    set ASw = ASw - 1
endfunction
function eLw takes integer OLw, integer lLw, string bLw returns boolean
    local boolean yLw
    local boolean pLw
    set DSw[ASw] = bLw
    set ASw = ASw + 1
    set yLw = true
    if Bww[Sww[OLw]] < gTS(Vww[Sww[OLw]], "when calling getLength in JsonParser, line 64") then
        call Wkt(Sww[OLw], "when calling parseListSeq in JsonParser, line 65")
    else
        set yLw = false
        call I9r("parsed list")
        call O8t($00000005, cww[OLw], $00000000, "when calling doStep in JsonParser, line 69")
    endif
    set pLw = yLw
    set ASw = ASw - 1
    return pLw
endfunction
function Shs takes integer rhs, integer shs, string ths returns boolean
    local boolean ihs
    set DSw[ASw] = ths
    set ASw = ASw + 1
    if CV[rhs] == 0 then
        if rhs == 0 then
            call tNr("Nullpointer exception when calling SeqCallback.onExecute", "when calling error in SeqWorker, line 49")
        else
            call tNr("Called SeqCallback.onExecute on invalid object.", "when calling error in SeqWorker, line 49")
        endif
    endif
    if CV[rhs] <= 1252 then
        if CV[rhs] <= 1250 then
            if CV[rhs] <= 1249 then
    set ihs = LOr(rhs, shs, "when calling onExecute_doSeq_Encoder_Encoder in SeqWorker, line 49")
            else
    set ihs = Gou(rhs, shs, "when calling onExecute_doSeq_Encoder_Encoder in SeqWorker, line 49")
            endif
        elseif CV[rhs] <= 1251 then
            set ihs = eLw(rhs, shs, "when calling onExecute_doSeq_JsonParser_JsonParser in SeqWorker, line 49")
        else
            set ihs = IAr(rhs, shs, "when calling onExecute_doSeq_JsonParser_JsonParser in SeqWorker, line 49")
        endif
    elseif CV[rhs] <= 1254 then
        if CV[rhs] <= 1253 then
            set ihs = K9S(rhs, shs, "when calling onExecute_doSeq_LZW in SeqWorker, line 49")
        else
            set ihs = WKu(rhs, shs, "when calling onExecute_doSeq_LZW in SeqWorker, line 49")
        endif
    elseif CV[rhs] <= 1255 then
        set ihs = YZt(rhs, shs, "when calling onExecute_doSeq_decodePositions_LZW in SeqWorker, line 49")
    else
        set ihs = eHw(rhs, shs, "when calling onExecute_doSeq_nullTimer_load_LZW in SeqWorker, line 49")
    endif
    set ASw = ASw - 1
    return ihs
endfunction
function kEi takes integer gEi, string hEi returns boolean
    local boolean FEi
    set DSw[ASw] = hEi
    set ASw = ASw + 1
    if not csw[gEi]then
        set FEi = Shs(gEi, gEi, "when calling onExecute in SeqWorker, line 46")
        set ASw = ASw - 1
        return FEi
    endif
    set ASw = ASw - 1
    return false
endfunction
function oxs takes integer ixs, string Sxs returns boolean
    local boolean cxs
    set DSw[ASw] = Sxs
    set ASw = ASw + 1
    if CV[ixs] == 0 then
        if ixs == 0 then
            call tNr("Nullpointer exception when calling SeqCallback.doStep", "when calling error in SeqWorker, line 44")
        else
            call tNr("Called SeqCallback.doStep on invalid object.", "when calling error in SeqWorker, line 44")
        endif
    endif
    set cxs = kEi(ixs, "when calling doStep in SeqWorker, line 44")
    set ASw = ASw - 1
    return cxs
endfunction
function UDr takes integer EDr, string ZDr returns nothing
    set DSw[ASw] = ZDr
    set ASw = ASw + 1
    if CV[EDr] == 0 then
        call tNr("Double free: object of type SeqCallback", "when calling error in SeqWorker, line 32")
    else
        set KV[LV] = EDr
        set LV = LV + 1
        set CV[EDr] = 0
    endif
    set ASw = ASw - 1
endfunction
function WSu takes integer mSu, string QSu returns nothing
    set DSw[ASw] = QSu
    set ASw = ASw + 1
    if osw[mSu] != null then
        call HLr(osw[mSu], "when calling release in SeqWorker, line 53")
        set osw[mSu] = null
    endif
    set ASw = ASw - 1
endfunction
function WIu takes integer mIu, string QIu returns nothing
    set DSw[ASw] = QIu
    set ASw = ASw + 1
    call WSu(mIu, "when calling SeqCallback_onDestroy in SeqWorker, line 51")
    call UDr(mIu, "when calling dealloc_SeqCallback in SeqWorker, line 51")
    set ASw = ASw - 1
endfunction
function yLs takes integer lLs, string bLs returns nothing
    set DSw[ASw] = bLs
    set ASw = ASw + 1
    if CV[lLs] == 0 then
        if lLs == 0 then
            call tNr("Nullpointer exception when calling SeqCallback.SeqCallback", "when calling error in SeqWorker, line 32")
        else
            call tNr("Called SeqCallback.SeqCallback on invalid object.", "when calling error in SeqWorker, line 32")
        endif
    endif
    call WIu(lLs, "when calling destroySeqCallback in SeqWorker, line 32")
    set ASw = ASw - 1
endfunction
function JeS takes integer DeS, string HeS returns nothing
    set DSw[ASw] = HeS
    set ASw = ASw + 1
    if (not csw[DeS])or osw[DeS] != null then
        set csw[DeS] = true
        call yLs(DeS, "when calling dispatch_SeqCallback_destroySeqCallback in SeqWorker, line 42")
    endif
    set ASw = ASw - 1
endfunction
function tRS takes integer rRS, string sRS returns nothing
    set DSw[ASw] = sRS
    set ASw = ASw + 1
    if CV[rRS] == 0 then
        if rRS == 0 then
            call tNr("Nullpointer exception when calling SeqCallback.terminate", "when calling error in SeqWorker, line 39")
        else
            call tNr("Called SeqCallback.terminate on invalid object.", "when calling error in SeqWorker, line 39")
        endif
    endif
    call JeS(rRS, "when calling terminate in SeqWorker, line 39")
    set ASw = ASw - 1
endfunction
function iuu takes string ruu returns nothing
    local timer suu
    local integer tuu
    set DSw[ASw] = ruu
    set ASw = ASw + 1
    set suu = GetExpiredTimer()
    set tuu = PPi(suu, "when calling getData in SeqWorker, line 17")
    if (not csw[tuu])and osw[tuu] != null then
        if oxs(tuu, "when calling doStep in SeqWorker, line 19") then
            call gNu(suu, 0.001, qEw)
        else
            call tRS(tuu, "when calling terminate in SeqWorker, line 22")
        endif
    endif
    set ASw = ASw - 1
    set suu = null
endfunction
function Dwu takes string Awu returns nothing
    set DSw[ASw] = Awu
    set ASw = ASw + 1
    call iuu("when calling onSeq in SeqWorker, line 20")
    set ASw = ASw - 1
endfunction
function HKr takes nothing returns nothing
    set ASw = 0
    call Dwu("via function reference SeqWorker, line 20")
endfunction
function J_S takes nothing returns boolean
    return Rr[1 + GetPlayerId(GetOwningPlayer(GetKillingUnit()))] >= 15
endfunction
function HMt takes nothing returns nothing
    set Rr[1 + GetPlayerId(GetOwningPlayer(GetKillingUnit()))] = Rr[1 + GetPlayerId(GetOwningPlayer(GetKillingUnit()))] + 1
    if J_S() then
        call QuestMessageBJ(MwS(GetOwningPlayer(GetKillingUnit())), $00000002, "|cffffcc002nd Job Advancement Quest Completed|r.")
        call ForceAddPlayer(fr, GetOwningPlayer(GetKillingUnit()))
    else
        call QuestMessageBJ(MwS(GetOwningPlayer(GetKillingUnit())), $00000001, I2S(Rr[1 + GetPlayerId(GetOwningPlayer(GetKillingUnit()))]) + " Bandit(s) killed.")
    endif
endfunction
function s9S takes nothing returns boolean
    return IsPlayerInForce(GetOwningPlayer(GetTriggerUnit()), nc[$00000001]) and IsPlayerInForce(GetOwningPlayer(GetTriggerUnit()), nc[$00000002])
endfunction
function HVw takes nothing returns nothing
    if s9S() then
        call ForceRemovePlayer(pc[$00000004], GetOwningPlayer(GetTriggerUnit()))
        call ForceAddPlayer(ec[$00000004], GetOwningPlayer(GetTriggerUnit()))
        call ForceRemovePlayer(nc[$00000001], GetOwningPlayer(GetTriggerUnit()))
        call ForceRemovePlayer(nc[$00000002], GetOwningPlayer(GetTriggerUnit()))
        call DestroyQuest(ac[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))])
        call PlaySoundBJ(pe)
        call DisplayTimedTextToForce(MwS(GetOwningPlayer(GetOrderedUnit())), 5., "|cffffcc00You have completed the Quest|r.")
        call DisplayTimedTextToForce(MwS(GetOwningPlayer(GetOrderedUnit())), 20., "|cffffcc00Arnold|r : By the looks of a cart arriving with my materials, I see you have conveyed my message to Kain. Master Ember also sent me a letter that he had recieved the crystals. Great! You've done well.")
        call AddHeroXPSwapped(x, GetTriggerUnit(), true)
        call AdjustPlayerStateBJ($00004B00, GetOwningPlayer(GetTriggerUnit()), PLAYER_STATE_RESOURCE_GOLD)
        set M[(1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))) * 1000 + fkS(GetTriggerUnit())] = true
    else
        call DisplayTimedTextToForce(MwS(GetOwningPlayer(GetTriggerUnit())), 5., "|cffffcc00Arnold|r : You've got your task. Now get on with it!")
    endif
endfunction
function HXi takes nothing returns boolean
    return GetUnitTypeId(GetOrderTargetUnit()) == sr and IsPlayerInForce(GetOwningPlayer(GetTriggerUnit()), Yr) and IsUnitInGroup(GetTriggerUnit(), kpu(300., GetUnitLoc(GetOrderTargetUnit())))
endfunction
function HXr takes nothing returns boolean
    return IsUnitAliveBJ(GetFilterUnit())
endfunction
function HXu takes nothing returns boolean
    return GetUnitTypeId(GetDyingUnit()) == 1848651857 and IsPlayerInForce(GetOwningPlayer(GetKillingUnit()), IS[$00000005])
endfunction
function HYs takes nothing returns boolean
    return IsUnitEnemy(GetFilterUnit(), GetOwningPlayer(GetEventDamageSource()))
endfunction
function ROS takes string fOS returns boolean
    set DSw[ASw] = fOS
    set ASw = ASw + 1
    set HJ = 3
    set JJ = ConvertAttackType($00000007)
    set KJ = jts("when calling new_HashMap in UnitItemUtils, line 586")
    set ASw = ASw - 1
    return true
endfunction
function HYt takes nothing returns boolean
    set ASw = 0
    return ROS("via function reference UnitItemUtils, line 12")
endfunction
function Hct takes nothing returns boolean
    return GetUnitTypeId(GetTriggerUnit()) == 1211117873 and GetUnitTypeId(GetOrderTargetUnit()) == 1747989080 and IsPlayerInForce(GetOwningPlayer(GetTriggerUnit()), rt) and IsPlayerInForce(GetOwningPlayer(GetTriggerUnit()), ti) and IsUnitInGroup(GetTriggerUnit(), kpu(300., GetUnitLoc(GetOrderTargetUnit())))
endfunction
function Hlu takes nothing returns nothing
    set eO = EXt(Cl, Condition(Jyw))
    call ForGroupBJ(eO, Kyw)
    call DestroyGroup(eO)
    set eO = EXt(Cl, Condition(Lyw))
    call ForGroupBJ(eO, Xyw)
    call DestroyGroup(eO)
    call ForForce(Ns, Cyw)
    call DisableTrigger(UT)
    call DestroyTimerDialog(ht)
    call DisplayTimedTextToForce(Ns, 4., "|cffffcc00You have failed to transverse the Rite of Passage!|r")
    call ForceClear(Ns)
endfunction
function HpS takes nothing returns nothing
    call PanCameraToTimedLocForPlayer(GetEnumPlayer(), vo, 0.)
    call TriggerExecute(MT)
endfunction
function Hwt takes nothing returns boolean
    return r5S(GetDyingUnit()) == 1848652122
endfunction
function Dit takes rect Iit, string Pit returns group
    local group Ait
    set DSw[ASw] = Pit
    set ASw = ASw + 1
    call UOS($00000001, "when calling getGroup in RegionVectorLocationUtils, line 87")
    set Ait = pIw
    call GroupEnumUnitsInRect(Ait, Iit, null)
    set ASw = ASw - 1
    set fIw = Ait
    set Ait = null
    return fIw
endfunction
function I7i takes string v7i returns nothing
    local unit m7i
    local player Q7i
    local integer W7i
    local group E7i
    local group Z7i
    local unit U7i
    set DSw[ASw] = v7i
    set ASw = ASw + 1
    set m7i = GetLeavingUnit()
    if m7i != null then
        set Q7i = eDs(m7i)
        if hgr(eDs(m7i)) <= Lh then
            call TimerDialogDisplayForPlayerBJ(false, fi, Q7i)
            set W7i = 0
            set E7i = Dit(Vl, "when calling getUnitsInRect in Imp2, line 215")
            set Z7i = XbS(E7i)
            loop
    exitwhen not hJw(Z7i)
    set U7i = tPr(Z7i)
    if hgr(eDs(U7i)) <= Lh and giS(U7i, UNIT_TYPE_HERO) and yXu(U7i) then
                    set W7i = W7i + 1
    endif
            endloop
            call lxs(Z7i)
            call Sju(E7i, "when calling release in Imp2, line 219")
            if W7i == 0 then
    call ugu(fc[$0000000B])
    call kMs(Rc[$0000000B])
    set ni = 0
    set Ti = 0
    call Y2r(aR)
    call EnableTrigger(aR)
    call DisableTrigger(dR)
    call DisableTrigger(fR)
    call DisableTrigger(RR)
    call DisableTrigger(TR)
    call DestroyTimerDialog(fi)
    call DisableTrigger(YR)
    call Hus(di)
            endif
        endif
    endif
    set ASw = ASw - 1
    set m7i = null
    set Q7i = null
    set E7i = null
    set Z7i = null
    set U7i = null
endfunction
function Hwu takes nothing returns nothing
    set ASw = 0
    call I7i("via function reference Imp2, line 207")
endfunction
function I1s takes nothing returns boolean
    return GetUnitTypeId(GetDyingUnit()) == 1848652344 and IsPlayerInForce(GetOwningPlayer(GetKillingUnit()), IS[$0000000C])
endfunction
function Ali takes string Ili returns integer
    local integer Pli
    set DSw[ASw] = Ili
    set ASw = ASw + 1
    if PC == 0 then
        if AC < 32768 then
            set AC = AC + 1
            set Pli = AC
            set DC[Pli] = 679
        else
            call tNr("Out of memory: Could not create CallbackPeriodic_doPeriodically_FateDestinyUnlocker.", "when calling error in FateDestinyUnlocker, line 827")
            set Pli = 0
        endif
    else
        set PC = PC - 1
        set Pli = IC[PC]
        set DC[Pli] = 679
    endif
    set ASw = ASw - 1
    return Pli
endfunction
function Bgs takes string Cgs returns integer
    local integer Vgs
    set DSw[ASw] = Cgs
    set ASw = ASw + 1
    if PC == 0 then
        if AC < 32768 then
            set AC = AC + 1
            set Vgs = AC
            set DC[Vgs] = 678
        else
            call tNr("Out of memory: Could not create CallbackPeriodic_doPeriodically_FateDestinyUnlocker.", "when calling error in FateDestinyUnlocker, line 819")
            set Vgs = 0
        endif
    else
        set PC = PC - 1
        set Vgs = IC[PC]
        set DC[Vgs] = 678
    endif
    set ASw = ASw - 1
    return Vgs
endfunction
function Fdi takes sound gdi, real hdi returns nothing
    call SetSoundPitch(gdi, hdi)
endfunction
function Tjr takes string fjr returns integer
    local integer Rjr
    set DSw[ASw] = fjr
    set ASw = ASw + 1
    if NX == 0 then
        if MX < 32768 then
            set MX = MX + 1
            set Rjr = MX
            set wC[Rjr] = 816
        else
            call tNr("Out of memory: Could not create CallbackSingle_doAfter_FateDestinyUnlocker.", "when calling error in FateDestinyUnlocker, line 855")
            set Rjr = 0
        endif
    else
        set NX = NX - 1
        set Rjr = BX[NX]
        set wC[Rjr] = 816
    endif
    set ASw = ASw - 1
    return Rjr
endfunction
function a3i takes string e3i returns integer
    local integer q3i
    set DSw[ASw] = e3i
    set ASw = ASw + 1
    if NX == 0 then
        if MX < 32768 then
            set MX = MX + 1
            set q3i = MX
            set wC[q3i] = 815
        else
            call tNr("Out of memory: Could not create CallbackSingle_doAfter_FateDestinyUnlocker.", "when calling error in FateDestinyUnlocker, line 560")
            set q3i = 0
        endif
    else
        set NX = NX - 1
        set q3i = BX[NX]
        set wC[q3i] = 815
    endif
    set ASw = ASw - 1
    return q3i
endfunction
function nRs takes string qRs returns integer
    local integer aRs
    set DSw[ASw] = qRs
    set ASw = ASw + 1
    if PC == 0 then
        if AC < 32768 then
            set AC = AC + 1
            set aRs = AC
            set DC[aRs] = 680
        else
            call tNr("Out of memory: Could not create CallbackPeriodic_doPeriodically_FateDestinyUnlocker.", "when calling error in FateDestinyUnlocker, line 836")
            set aRs = 0
        endif
    else
        set PC = PC - 1
        set aRs = IC[PC]
        set DC[aRs] = 680
    endif
    set ASw = ASw - 1
    return aRs
endfunction
function pPr takes sound bPr, integer yPr returns nothing
    call SetSoundVolume(bPr, yPr)
endfunction
function nPi takes string hIi returns boolean
    local effect FIi
    local effect kIi
    local sound jIi
    local sound xIi
    local trigger vIi
    local trigger mIi
    local integer QIi
    local integer WIi
    local integer EIi
    local integer ZIi
    local integer UIi
    local integer IIi
    local real PIi
    local real AIi
    local real DIi
    local real HIi
    local real JIi
    local real KIi
    local real LIi
    local real XIi
    local real CIi
    local real VIi
    local real BIi
    local real NIi
    local real MIi
    local real wPi
    local integer uPi
    local integer rPi
    local integer sPi
    local integer tPi
    local integer iPi
    local integer SPi
    local integer cPi
    local integer oPi
    local integer OPi
    local integer lPi
    local integer bPi
    local integer yPi
    local integer pPi
    local integer ePi
    local integer qPi
    local integer aPi
    set DSw[ASw] = hIi
    set ASw = ASw + 1
    set OQ = 0
    set lQ = 1
    set bQ = 13
    set yQ = 14
    set pQ = 15
    set Dv = 65535
    set Hv = jts("when calling new_HashMap in FateDestinyUnlocker, line 63")
    set Jv = XQt("when calling new_LinkedList in FateDestinyUnlocker, line 64")
    set Kv = jts("when calling new_HashMap in FateDestinyUnlocker, line 65")
    set Lv = XQt("when calling new_LinkedList in FateDestinyUnlocker, line 66")
    set Xv = XQt("when calling new_LinkedList in FateDestinyUnlocker, line 67")
    set Cv = XQt("when calling new_LinkedList in FateDestinyUnlocker, line 68")
    set Vv = XQt("when calling new_LinkedList in FateDestinyUnlocker, line 69")
    set Bv = XQt("when calling new_LinkedList in FateDestinyUnlocker, line 70")
    set Nv = XQt("when calling new_LinkedList in FateDestinyUnlocker, line 71")
    set Mv = XQt("when calling new_LinkedList in FateDestinyUnlocker, line 72")
    set wm = XQt("when calling new_LinkedList in FateDestinyUnlocker, line 73")
    set um = false
    set rm = jts("when calling new_HashMap in FateDestinyUnlocker, line 75")
    set sm = Rect(- 7328., - 3264., - 6880., - 3648.)
    call Iji("Effects/VoidDisc.mdx", "when calling unObfuscate in FateDestinyUnlocker, line 78")
    set FIi = AddSpecialEffect(Iji("Effects/VoidDisc.mdx", "when calling unObfuscate in FateDestinyUnlocker, line 79"), KP, LP)
    call Xjr(FIi, 0.)
    set tm = FIi
    set im = 3
    set PIi = 4670.
    set AIi = 11707.
    set Sm[$00000000] = PIi
    set cm[$00000000] = AIi
    set DIi = 6222.
    set HIi = 10859.
    set Sm[$00000001] = DIi
    set cm[$00000001] = HIi
    set JIi = 8157.
    set KIi = 8810.
    set Sm[$00000002] = JIi
    set cm[$00000002] = KIi
    set LIi = 7534.
    set XIi = 12575.
    set Sm[$00000003] = LIi
    set cm[$00000003] = XIi
    set CIi =- 13222.
    set VIi =- 13374.
    set om = CIi
    set Om = VIi
    set BIi =- 13309.
    set NIi =- 13401.
    set lm = BIi
    set bm = NIi
    set MIi =- 12748.
    set wPi =- 13305.
    set ym = MIi
    set pm = wPi
    set kIi = AddSpecialEffect(Iji("Effects/VoidDisc.mdx", "when calling unObfuscate in FateDestinyUnlocker, line 86"), om, Om)
    call Xjr(kIi, wor(om, Om))
    call Iji("ReplaceableTextures/CommandButtons/BTNVoidOrb.blp", "when calling unObfuscate in FateDestinyUnlocker, line 88")
    set em = Iji("Models/TheVoidOrb.mdx", "when calling unObfuscate in FateDestinyUnlocker, line 89")
    set qm = "Abilities\\Spells\\Orc\\Purge\\PurgeBuffTarget.mdl"
    set am = "49122636"
    call Iji("|cffffffffThe Destiny|r, |cffb38300The Fate|r, |cff070024The Void|r", "when calling unObfuscate in FateDestinyUnlocker, line 93")
    set nm = Iji("I have obtained The Destiny, The Fate, The Void, but where does it come from?
Where will it lead you?
You are feeling weakened - something is draining your inner force.
Maybe given time there is a right place for this...", "when calling unObfuscate in FateDestinyUnlocker, line 94")
    set dm = Iji("|cffffcc00Angel Dawn: |r You managed to find all three shards necessary to complete the ancient artifact... However, here is not the place to do so... Venture into the ruined town north of here, into the utter darkness. Find the correct portal path which will lead you to The Sanctum. Only there you will be able to combine the shards together...", "when calling unObfuscate in FateDestinyUnlocker, line 95")
    set fm = Iji("... Hmm... Nothing is happening, maybe the artifact is not yet powerful enough?...", "when calling unObfuscate in FateDestinyUnlocker, line 96")
    set Rm[$00000000] = "war3mapImported/Fate.mdl"
    set Rm[$00000001] = "war3mapImported/NanohaMG.mdl"
    set Rm[$00000002] = "war3mapImported/GlaciarAura.mdl"
    set Rm[$00000003] = "war3mapImported/Runical-Holy Aura.mdl"
    set uPi = 209
    set rPi = 212
    set sPi = 88
    set tPi = 255
    set Tm[$00000000] = uPi
    set Ym[$00000000] = rPi
    set Gm[$00000000] = sPi
    set gm[$00000000] = tPi
    set iPi = 209
    set SPi = 105
    set cPi = 209
    set oPi = 255
    set Tm[$00000001] = iPi
    set Ym[$00000001] = SPi
    set Gm[$00000001] = cPi
    set gm[$00000001] = oPi
    set OPi = 23
    set lPi = 162
    set bPi = 209
    set yPi = 255
    set Tm[$00000002] = OPi
    set Ym[$00000002] = lPi
    set Gm[$00000002] = bPi
    set gm[$00000002] = yPi
    set pPi = 221
    set ePi = 112
    set qPi = 39
    set aPi = 255
    set Tm[$00000003] = pPi
    set Ym[$00000003] = ePi
    set Gm[$00000003] = qPi
    set gm[$00000003] = aPi
    set jIi = CreateSound(Iji("Sounds/destinyVoidSound.mp3", "when calling unObfuscate in FateDestinyUnlocker, line 102"), true, false, false, $0000000A, $0000000A, "DefaultEAXON")
    call Fdi(jIi, 1.2)
    set xIi = jIi
    call pPr(xIi, $00000023)
    set hm = xIi
    set Fm = "At last. I've been waiting for you, young one... I'm sure you may have many questions though first you must understand... " + "The orb you're holding, that which has taken you here, is no ordinary orb... It's an ancient artifact, capable of revealing many secrets, and can even foresee what the future can bring..."
    set km = "Watch as your Destiny unravels! " + "Can you prevent the inevitable Fate of this world, and look deep into the Void, the reflection of the ultimate end of this world?"
    set jm = "What... what does this mean? Is this going to happen?! ...Why?!"
    set xm = "You have broken the chain broken the cycle you've brought a doom to this world... That which is already done, cannot be undone, only the future is unclear..."
    set vm = "Wait, what do you mean? I have slain the infernal demon, defeated the Doppelganger and put an end to the horrible dragons, all of them were enda..."
    set mm = "You fool! Do you really think those Dragons were your foes? Why do you think they awoke after thousands of years asleep and nested in the Unknown Regions so close to the demons the Doppelganger?"
    set Qm = "But I thought... Well, we thought..."
    set Wm = "They are the ancient guardians, the four forces that keep a perfect balance... They are protecting us, holding them back... But you have broken this balance, the enemy has broken from its chains... " + "The dragons have grown exhausted fighting you and your kin, and now when they can't hold them back anymore, the enemy will thrive..."
    set Em = "... that's terrible, we did not know... We thought... What can be done now? We can defeat them, whatever they are! We already killed Doppelganger, we can kill anyone who endangers this world!"
    set Zm = "You may have defeated him, yet he is not dead... They are not dead... And you, confronting him unprepared have only given them chance to get under your skin, to drain your force, to learn and mimic your skills... " + "The more you will resist it, the worse it becomes... You cannot escape it, you cannot fight it you can only accept it..."
    set Um = "Your fight is over young one... Yet your days are not over... There will be, one day, same as your kind emerged when we needed help, adventurers full of courage and determination... " + "They might be the only chance we have, the chance we must work hard towards..."
    set Im = "There where is courage there is hope, and where is hope, there is a chance Our one chance... " + "Among you, threats will rise, traitors may emerge and you might even ally with demons. Perhaps you will fight the whole world and it will burn in the aftermath..."
    set Pm = "Go on now, fulfill your Destiny. Don't let the flame go out, as there will be a day, when your Fate will be decided..."
    set Am = .05
    set Dm = .15
    set Hm = Rect(- 13600., - 14016., - 12448., - 12960.)
    set Jm = false
    set rQ = .5
    set sQ = 2
    set tQ = 20.
    set iQ = 15.
    set SQ = 22.
    set cQ = 6.
    set oQ = 12.
    set vIi = CreateTrigger()
    set mIi = CreateTrigger()
    set QIi = a3i("when calling alloc_CallbackSingle_doAfter_FateDestinyUnlocker in FateDestinyUnlocker, line 560")
    call RUs(QIi)
    set p7[QIi] = vIi
    set e7[QIi] = mIi
    call Ybr(1.2, QIi, "when calling doAfter in FateDestinyUnlocker, line 560")
    set WIi = Bgs("when calling alloc_CallbackPeriodic_doPeriodically_FateDestinyUnlocker in FateDestinyUnlocker, line 819")
    call kVu(WIi)
    call wcs(5., WIi, "when calling doPeriodically in FateDestinyUnlocker, line 819")
    set EIi = l2s(Iji(am, "when calling unObfuscate in FateDestinyUnlocker, line 825"), "when calling fromRawCode in FateDestinyUnlocker, line 825")
    set ZIi = Ali("when calling alloc_CallbackPeriodic_doPeriodically_FateDestinyUnlocker in FateDestinyUnlocker, line 827")
    call kVu(ZIi)
    set J7[ZIi] = EIi
    call wcs(1., ZIi, "when calling doPeriodically in FateDestinyUnlocker, line 827")
    set UIi = nRs("when calling alloc_CallbackPeriodic_doPeriodically_FateDestinyUnlocker in FateDestinyUnlocker, line 836")
    call kVu(UIi)
    set K7[UIi] = EIi
    call wcs(1., UIi, "when calling doPeriodically in FateDestinyUnlocker, line 836")
    set IIi = Tjr("when calling alloc_CallbackSingle_doAfter_FateDestinyUnlocker in FateDestinyUnlocker, line 855")
    call RUs(IIi)
    call Ybr(1., IIi, "when calling doAfter in FateDestinyUnlocker, line 855")
    set ASw = ASw - 1
    set FIi = null
    set kIi = null
    set jIi = null
    set xIi = null
    set vIi = null
    set mIi = null
    return true
endfunction
function I4s takes nothing returns boolean
    set ASw = 0
    return nPi("via function reference FateDestinyUnlocker, line 1")
endfunction
function txi takes string sxi returns nothing
    set DSw[ASw] = sxi
    set ASw = ASw + 1
    if not GpS(tH, Xdu(GetEnumItem()), "when calling has in Repick, line 70") then
        call vwt(tH, Xdu(GetEnumItem()), "when calling add in Repick, line 71")
    endif
    set ASw = ASw - 1
endfunction
function I6S takes nothing returns nothing
    set ASw = 0
    call txi("via function reference Repick, line 69")
endfunction
function I6i takes nothing returns nothing
    call SetHeroLevelBJ(GetTriggerUnit(), $00000001, false)
    call ReplaceUnitBJ(GetEnteringUnit(), $48303033, $00000002)
    set Fu[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))] = bj_lastReplacedUnit
    call SetHeroLevel(Fu[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))], $00000001, true)
    call UnitStripHeroLevel(Fu[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))], $00000001)
    call DisplayTimedTextToForce(MwS(GetOwningPlayer(GetTriggerUnit())), 5., "|cffff8c00Congratulations! You have advanced to the 1st Job!|r")
    call SetUnitPositionLoc(Fu[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))], GetRectCenter(kO))
    call PanCameraToTimedLocForPlayer(GetOwningPlayer(GetTriggerUnit()), GetRectCenter(kO), 0.)
    call TriggerExecute(MT)
    call SelectUnitForPlayerSingle(Fu[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))], GetOwningPlayer(GetTriggerUnit()))
    call PlaySoundBJ(se)
endfunction
function JHt takes unit DHt, boolean HHt returns integer
    return GetHeroAgi(DHt, HHt)
endfunction
function OtS takes unit ctS, real otS returns nothing
    call SetUnitMoveSpeed(ctS, otS)
endfunction
function Q7t takes unit v7t, boolean m7t returns integer
    return GetHeroStr(v7t, m7t)
endfunction
function SJu takes unit rJu, string sJu returns boolean
    local integer tJu
    local boolean iJu
    set DSw[ASw] = sJu
    set ASw = ASw + 1
    set tJu = GetRandomInt($00000000, wds(DG, "when calling size in AC_Abilities, line 24") - 1)
    call V5S(rJu, C_r(DG, tJu, "when calling get in AC_Abilities, line 25"))
    call Fci(rJu, C_r(DG, tJu, "when calling get in AC_Abilities, line 26"), $00000001)
    set iJu = V5S(rJu, C_r(DG, tJu, "when calling get in AC_Abilities, line 27"))
    set ASw = ASw - 1
    return iJu
endfunction
function str takes unit utr, boolean rtr returns integer
    return GetHeroInt(utr, rtr)
endfunction
function v0t takes string x0t returns real
    return S2R(x0t)
endfunction
function a6i takes string l6i returns nothing
    local integer b6i
    local integer y6i
    local integer p6i
    local integer e6i
    local unit q6i
    set DSw[ASw] = l6i
    set ASw = ASw + 1
    set b6i = c5r(gQ, "when calling iterator in JobAdvancementQuestHandler, line 199")
    loop
        exitwhen not Tji(b6i)
        set y6i = LXi(b6i)
        set p6i = xus(y6i, "when calling getCustomPlayer in JobAdvancementQuestHandler, line 200")
        set e6i = xMi(p6i, "when calling getCHero in JobAdvancementQuestHandler, line 201")
        if e6i != 0 then
            set q6i = hqs(e6i, "when calling getHero in JobAdvancementQuestHandler, line 203")
            if q6i != null and yXu(q6i) and t_u(q6i) then
    if mks(q6i, $00000001) > k6w("909090908317", "when calling unObfuscateInt in JobAdvancementQuestHandler, line 205") or Q7t(q6i, true) > k6w("9090908317", "when calling unObfuscateInt in JobAdvancementQuestHandler, line 206") or Ges(q6i) > k6w("909090909048", "when calling unObfuscateInt in JobAdvancementQuestHandler, line 207") or JHt(q6i, true) > k6w("9090908317", "when calling unObfuscateInt in JobAdvancementQuestHandler, line 208") or aSr(q6i) > k6w("909090909048", "when calling unObfuscateInt in JobAdvancementQuestHandler, line 209") or str(q6i, true) > k6w("9090908317", "when calling unObfuscateInt in JobAdvancementQuestHandler, line 210") then
                    if q6i != null then
                        call OtS(q6i, v0t(Iji("0", "when calling unObfuscate in JobAdvancementQuestHandler, line 214")))
                        call SJu(q6i, "when calling ac_addRandomDebuff2 in JobAdvancementQuestHandler, line 215")
                    endif
                    call dii(Iji("Your actions seems to come from hacking! You are a fool!          ", "when calling unObfuscate in JobAdvancementQuestHandler, line 217"), 5., eDs(q6i))
    endif
            endif
        endif
    endloop
    call vms(b6i, "when calling close in JobAdvancementQuestHandler, line 199")
    set ru = true
    set ASw = ASw - 1
    set q6i = null
endfunction
function I6r takes nothing returns nothing
    set ASw = 0
    call a6i("via function reference JobAdvancementQuestHandler, line 1206")
endfunction
function I8s takes nothing returns boolean
    return GetUnitTypeId(GetEnteringUnit()) == 1211117617 and GetHeroLevel(GetEnteringUnit()) >= 10
endfunction
function IBt takes nothing returns nothing
    call ForceRemovePlayer(IS[$00000001], GetOwningPlayer(GetTriggerUnit()))
    call DestroyQuest(rr[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))])
    set rr[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))] = null
    set ur[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))] = 0
    call PlaySoundBJ(pe)
    call DisplayTimedTextToForce(MwS(GetOwningPlayer(GetOrderedUnit())), 5., "|cffffcc00You have completed the Quest|r.")
    call AddHeroXPSwapped(b, GetTriggerUnit(), true)
    call AdjustPlayerStateBJ($000000C8, GetOwningPlayer(GetTriggerUnit()), PLAYER_STATE_RESOURCE_GOLD)
endfunction
function ICs takes nothing returns boolean
    return GetUnitTypeId(GetTriggerUnit()) == 1211117879 and GetUnitTypeId(GetOrderTargetUnit()) == 1747989045 and IsPlayerInForce(GetOwningPlayer(GetTriggerUnit()), rt) == false and IsUnitInGroup(GetTriggerUnit(), kpu(300., GetUnitLoc(GetOrderTargetUnit()))) and GetHeroLevel(GetTriggerUnit()) >= 150
endfunction
function xLw takes integer gLw, integer hLw, string FLw returns nothing
    local integer kLw
    local integer jLw
    set DSw[ASw] = FLw
    set ASw = ASw + 1
    set kLw = 0
    if hLw == nx then
        set kLw = 1
    elseif hLw == dx then
        set kLw = 3
    elseif hLw == fx then
        set kLw = 5
    endif
    set jLw = 0
    if Jyr(mx, gLw, "when calling has in DungeonCmds, line 768") then
        set jLw = wps(mx, gLw, "when calling get in DungeonCmds, line 769")
    endif
    if jLw == 0 then
        set jLw = jLw + kLw
    elseif jLw == 1 and kLw != 1 then
        set jLw = jLw + kLw
    elseif jLw == 3 and kLw != 3 then
        set jLw = jLw + kLw
    elseif jLw == 5 and kLw != 5 then
        set jLw = jLw + kLw
    elseif jLw == 1 + 3 and kLw != 1 and kLw != 3 then
        set jLw = jLw + kLw
    elseif jLw == 1 + 5 then
        if kLw != 1 and kLw != 5 then
            set jLw = jLw + kLw
        endif
    elseif jLw == 3 + 5 then
        if kLw != 3 and kLw != 5 then
            set jLw = jLw + kLw
        endif
    elseif jLw == 9 then
        set ASw = ASw - 1
        return
    endif
    call GVw(mx, gLw, jLw, "when calling put in DungeonCmds, line 790")
    if jLw == Qx and kLw != 0 then
        call dii(Iji("|cffff0000Marine Fortress is open for further challenge|r", "when calling unObfuscate in DungeonCmds, line 792"), 5., aD[gLw])
    endif
    set ASw = ASw - 1
endfunction
function oAu takes string iAu returns nothing
    local unit SAu
    local integer cAu
    set DSw[ASw] = iAu
    set ASw = ASw + 1
    set SAu = GetTriggerUnit()
    set cAu = hgr(eDs(SAu))
    if GpS(gQ, cAu, "when calling has in DungeonCmds, line 922") and boS(SAu) == 300 then
        call xLw(cAu, nx, "when calling unlockMarineFortressCheck in DungeonCmds, line 923")
        call xLw(cAu, dx, "when calling unlockMarineFortressCheck in DungeonCmds, line 924")
        call xLw(cAu, fx, "when calling unlockMarineFortressCheck in DungeonCmds, line 925")
    endif
    set ASw = ASw - 1
    set SAu = null
endfunction
function IDs takes nothing returns nothing
    set ASw = 0
    call oAu("via function reference DungeonCmds, line 919")
endfunction
function IEs takes nothing returns nothing
    set qt = GetRectCenter(op)
    call DisplayTextToForce(MwS(GetOwningPlayer(GetTriggerUnit())), "|cffffcc00Angel Dawn|r : |cff87ceebVery well, I shall teleport you back to Mount Twilight.")
    call SetUnitPositionLoc(GetTriggerUnit(), qt)
    call PanCameraToTimedLocForPlayer(GetOwningPlayer(GetTriggerUnit()), qt, 0.)
    call TriggerExecute(MT)
    call RemoveLocation(qt)
endfunction
function jFS takes nothing returns boolean
    return GetUnitTypeId(GetTriggerUnit()) == 1211117890 or GetUnitTypeId(GetTriggerUnit()) == 1211117889
endfunction
function IEt takes nothing returns boolean
    return jFS() and IsPlayerInForce(GetOwningPlayer(GetTriggerUnit()), rt) and IsPlayerInForce(GetOwningPlayer(GetTriggerUnit()), Tt) == false and GetPlayerState(GetOwningPlayer(GetTriggerUnit()), PLAYER_STATE_RESOURCE_GOLD) >= 10000
endfunction
function AGi takes nothing returns boolean
    return IsUnitEnemy(GetFilterUnit(), GetOwningPlayer(GetTriggerUnit()))
endfunction
function B3w takes nothing returns boolean
    return IsUnitAliveBJ(GetFilterUnit())
endfunction
function IJi takes nothing returns boolean
    return GetBooleanAnd(AGi(), B3w())
endfunction
function SJw takes rect tJw, player iJw returns group
    set WG = CreateGroup()
    set bj_groupEnumOwningPlayer = iJw
    call GroupEnumUnitsInRect(WG, tJw, filterGetUnitsInRectOfPlayer)
    return WG
endfunction
function IJt takes nothing returns nothing
    if lr == 1 then
        call EnableTrigger(wR)
        call DisplayTimedTextToForce(Rc[$00000001], 7., "|cffff0000Entering the Icy Highlands...|r\n|cff87ceebDungeon Difficulty Level: Easy|r")
    elseif lr == 2 then
        call EnableTrigger(uR)
        call EnableTrigger(HR)
        call DisplayTimedTextToForce(Rc[$00000002], 7., "|cffff0000Entering the Forgotten Crypt...|r\n|cff87ceebDungeon Difficulty Level: Easy|r")
    elseif lr == 3 then
        call EnableTrigger(rR)
        call DisplayTimedTextToForce(Rc[$00000003], 7., "|cffff0000Entering the Gold Mine...|r\n|Cff00ff00Dungeon Difficulty Level: Hard|r")
    elseif lr == 4 then
        call EnableTrigger(sR)
        call DisplayTimedTextToForce(Rc[$00000004], 7., "|cffff0000Entering the Centaur Mountains...|r\n|Cff00ff00Dungeon Difficulty Level: Hard|r")
    elseif lr == 5 then
        call EnableTrigger(tR)
        call DisplayTimedTextToForce(Rc[$00000005], 7., "|cffff0000Entering the Puzzle Sanctuary...|r\n|Cff00ff00Dungeon Difficulty Level: Hard|r")
    elseif lr == 6 then
        call EnableTrigger(iR)
        call DisplayTimedTextToForce(Rc[$00000006], 7., "|cffff0000Entering the Naga Ruins...|r\n|cffff8c00Dungeon Difficulty Level: Nightmare|r")
    elseif lr == 7 then
        call EnableTrigger(SR)
        call DisplayTimedTextToForce(Rc[$00000007], 7., "|cffff0000Entering Tristram...|r\n|cffB22222Dungeon Difficulty Level: Impossible|r")
    elseif lr == 8 then
        call EnableTrigger(cR)
        call DisplayTimedTextToForce(Rc[$00000008], 7., "|cffff0000Entering Oblivion...|r\n|cffff0000Dungeon Difficulty Level: Hell|r")
    elseif lr == 9 then
        call EnableTrigger(oR)
        call DisplayTimedTextToForce(Rc[$00000009], 7., "|cffff0000Entering the Forgotten Sewers...|r\n|cffff8c00Dungeon Difficulty Level: Nightmare|r")
    elseif lr == 10 then
        set xo = GetRandomInt($00000001, $00000004)
        call EnableTrigger(eR)
        call DisplayTimedTextToForce(Rc[$0000000A], 7., "|cffff0000Entering the Abyssal Labyrinth...|r\n|cffff0000Dungeon Difficulty Level: Hell|r")
    elseif lr == 11 then
        set ni = 1
        call ForGroupBJ(SJw(Vl, Player(PLAYER_NEUTRAL_AGGRESSIVE)), qbw)
        call ForGroupBJ(SJw(Vl, Player($0000000A)), abw)
        call EnableTrigger(qR)
        call EnableTrigger(nR)
        call DisplayTimedTextToForce(Rc[$0000000B], 7., "|cffff0000Entering the City of Illusions...|r\n|cffB22222Dungeon Difficulty Level: Impossible|r")
    elseif lr == 12 then
        set Dc = false
        call ForGroupBJ(SJw(Xl, Player(PLAYER_NEUTRAL_AGGRESSIVE)), nbw)
        call ForGroupBJ(SJw(Xl, Player($0000000A)), dbw)
        call EnableTrigger(GR)
        call DisplayTimedTextToForce(Rc[$0000000C], 7., "|cffff0000Entering the Dragon Fortress...|r\n|cffB22222Dungeon Difficulty Level: Impossible|r")
    elseif lr == 13 then
        call ForGroupBJ(SJw(Vp, Player(PLAYER_NEUTRAL_AGGRESSIVE)), fbw)
        call ForGroupBJ(SJw(Vp, Player($0000000A)), Rbw)
        call ForGroupBJ(SJw(Dp, Player(PLAYER_NEUTRAL_AGGRESSIVE)), Tbw)
        call ForGroupBJ(SJw(Dp, Player($0000000A)), Ybw)
        set qO = 0
        call DisplayTimedTextToForce(Rc[$0000000D], 7., "|cffff0000Entering the Marine Fortress...|r\n|cffB22222Dungeon Difficulty Level: Impossible|r\n|cffff0000Tips: Kill Icarus and Mirage to make Trinity vulnurable and kill Infinity and Aurora to make Liberty vulnerable.|r")
    endif
    set lr = 0
endfunction
function AMt takes string hMt returns boolean
    local integer vMt = 0
    local string WMt = ""
    local integer EMt = StringLength(Lu)
    local integer ZMt =- 1
    local integer UMt = 1000000
    local string IMt = "0123456789-"
    local integer FMt = 0
    local integer kMt
    local integer jMt
    local integer xMt
    local integer mMt
    local integer array QMt
    local string PMt
    loop
        set QMt[FMt] = 0
        set FMt = FMt + 1
        exitwhen FMt >= 100
    endloop
    set mMt = 0
    set FMt = 0
    loop
        set kMt = 0
        loop
            set QMt[kMt] = QMt[kMt] * EMt
            set kMt = kMt + 1
            exitwhen kMt > mMt
        endloop
        set ZMt = ZMt + 1
        if ZMt == 4 then
            set ZMt = 0
            set FMt = FMt + 1
        endif
        set xMt = EMt
        set PMt = SubString(hMt, FMt, FMt + 1)
        loop
            set xMt = xMt - 1
            exitwhen xMt < 1
            exitwhen SubString(Lu, xMt, xMt + 1) == PMt
        endloop
        set QMt[$00000000] = QMt[$00000000] + xMt
        set kMt = 0
        loop
            set jMt = QMt[kMt] / UMt
            set QMt[kMt] = QMt[kMt] - jMt * UMt
            set QMt[kMt + 1] = QMt[kMt + 1] + jMt
            set kMt = kMt + 1
            exitwhen kMt > mMt
        endloop
        if jMt > 0 then
            set mMt = mMt + 1
        endif
        set FMt = FMt + 1
        exitwhen FMt >= StringLength(hMt)
    endloop
    loop
        exitwhen mMt < 0
        set kMt = mMt
        loop
            exitwhen kMt <= 0
            set jMt = QMt[kMt] / 11
            set QMt[kMt - 1] = QMt[kMt - 1] + (QMt[kMt] - jMt * 11) * UMt
            set QMt[kMt] = jMt
            set kMt = kMt - 1
        endloop
        set jMt = QMt[kMt] / 11
        set FMt = QMt[kMt] - jMt * 11
        set WMt = SubString(IMt, FMt, FMt + 1) + WMt
        set QMt[kMt] = jMt
        if QMt[mMt] == 0 then
            set mMt = mMt - 1
        endif
    endloop
    set FMt = 0
    set kMt = 0
    loop
        loop
            exitwhen FMt >= StringLength(WMt)
            exitwhen FMt > 0 and SubString(WMt, FMt, FMt + 1) == "-" and SubString(WMt, FMt - 1, FMt) != "-"
            set FMt = FMt + 1
        endloop
        if FMt < StringLength(WMt) then
            set jMt = FMt
        endif
        set vMt = vMt + 1
        set Zu[vMt] = S2I(SubString(WMt, kMt, FMt))
        set kMt = FMt + 1
        set FMt = FMt + 1
        exitwhen FMt >= StringLength(WMt)
    endloop
    set kMt = DBu(SubString(WMt, $00000000, jMt))
    set Uu = vMt - 1
    if kMt == Zu[vMt]then
        return true
    endif
    return false
endfunction
function ZKu takes string EKu returns boolean
    if Xu == false then
        set Lu = StringCase(Lu, true)
        set EKu = StringCase(EKu, true)
    endif
    if AMt(EKu) then
        return true
    endif
    return false
endfunction
function lxu takes nothing returns boolean
    return Pu == false
endfunction
function IKr takes nothing returns nothing
    set Lu = Vw
    set Eu = SubStringBJ(GetEventPlayerChatString(), $00000009, StringLength(GetEventPlayerChatString()))
    set Pu = ZKu(Eu)
    if lxu() then
        set Lu = Xw
        set Eu = SubStringBJ(GetEventPlayerChatString(), $00000009, StringLength(GetEventPlayerChatString()))
        set Pu = ZKu(Eu)
        if lxu() then
            set Lu = Kw
            set Eu = SubStringBJ(GetEventPlayerChatString(), $00000009, StringLength(GetEventPlayerChatString()))
            set Pu = ZKu(Eu)
            if lxu() then
    set Lu = Hw
    set Eu = SubStringBJ(GetEventPlayerChatString(), $00000009, StringLength(GetEventPlayerChatString()))
    set Pu = ZKu(Eu)
    if lxu() then
                    set Lu = Aw
                    set Eu = SubStringBJ(GetEventPlayerChatString(), $00000009, StringLength(GetEventPlayerChatString()))
                    set Pu = ZKu(Eu)
                    if lxu() then
                        set Lu = Iw
                        set Eu = SubStringBJ(GetEventPlayerChatString(), $00000009, StringLength(GetEventPlayerChatString()))
                        set Pu = ZKu(Eu)
                        if lxu() then
                            set Lu = Zw
                            set Eu = SubStringBJ(GetEventPlayerChatString(), $00000009, StringLength(GetEventPlayerChatString()))
                            set Pu = ZKu(Eu)
                            if not lxu() then
                                call DisplayTextToForce(MwS(GetTriggerPlayer()), "|cffffcc00Your code is valid!|r")
                            else
                                call DisplayTextToForce(MwS(GetTriggerPlayer()), "|cffffcc00Your code is not valid! Recheck your code!|r")
                            endif
                        else
                            call DisplayTextToForce(MwS(GetTriggerPlayer()), "|cffffcc00Your code is valid!|r")
                        endif
                    else
                        call DisplayTextToForce(MwS(GetTriggerPlayer()), "|cffffcc00Your code is valid!|r")
                    endif
    else
                    call DisplayTextToForce(MwS(GetTriggerPlayer()), "|cffffcc00Your code is valid!|r")
    endif
            else
    call DisplayTextToForce(MwS(GetTriggerPlayer()), "|cffffcc00Your code is valid!|r")
            endif
        else
            call DisplayTextToForce(MwS(GetTriggerPlayer()), "|cffffcc00Your code is valid!|r")
        endif
    else
        call DisplayTextToForce(MwS(GetTriggerPlayer()), "|cffffcc00Your code is valid!|r")
    endif
endfunction
function ILt takes nothing returns boolean
    return GetUnitTypeId(GetTriggerUnit()) == 1211117641 and GetUnitTypeId(GetOrderTargetUnit()) == 1747988813 and IsPlayerInForce(GetOwningPlayer(GetTriggerUnit()), Kr) and IsPlayerInForce(GetOwningPlayer(GetTriggerUnit()), Cr) == false and IsUnitInGroup(GetTriggerUnit(), kpu(300., GetUnitLoc(GetOrderTargetUnit())))
endfunction
function IPw takes nothing returns nothing
    if (not BlzIsUnitInvulnerable(GetEnumUnit()))and(not m9r(GetEnumUnit())) then
        call UnitDamageTargetBJ(GetEventDamageSource(), GetEnumUnit(), 25000., ATTACK_TYPE_HERO, DAMAGE_TYPE_ENHANCED)
        call GetEventDamageSource()
        set gi = GetEnumUnit()
        set hi = 1
        set Fi = Yc
        set ki = 3.
        set ji = 180.
        set xi[$00000001] = "Abilities\\Weapons\\Bolt\\BoltImpact.mdl"
        set xi[$00000002] = "Abilities\\Weapons\\AncientProtectorMissile\\AncientProtectorMissile.mdl"
        set vi = false
        call ConditionalTriggerExecute(dT)
    endif
endfunction
function IQs takes nothing returns boolean
    return true
endfunction
function IQu takes nothing returns boolean
    return GetUnitTypeId(GetTriggerUnit()) == 1211117645 and GetUnitTypeId(GetOrderTargetUnit()) == 1747988812 and IsPlayerInForce(GetOwningPlayer(GetTriggerUnit()), Kr) and IsPlayerInForce(GetOwningPlayer(GetTriggerUnit()), Cr) == false and IsUnitInGroup(GetTriggerUnit(), kpu(300., GetUnitLoc(GetOrderTargetUnit())))
endfunction
function ITu takes nothing returns nothing
    set pS[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))] = GetTriggerUnit()
    call SetPlayerStateBJ(GetOwningPlayer(pS[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))]), PLAYER_STATE_RESOURCE_FOOD_USED, $00000000)
    set eS[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))] = GetSpellTargetUnit()
    set qS[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))] = GetUnitLoc(GetTriggerUnit())
    set aS[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))] = GetUnitLoc(GetSpellTargetUnit())
    call PauseUnit(pS[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))], true)
    call PauseUnit(eS[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))], true)
    call SetUnitInvulnerable(pS[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))], true)
    call SetUnitInvulnerable(eS[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))], true)
    set nS[$00000001] = Shu(qS[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))], 600., 90.)
    set nS[$00000002] = Shu(qS[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))], 600., 160.)
    set nS[$00000003] = Shu(qS[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))], 600., 235.)
    set nS[$00000004] = Shu(qS[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))], 600., 305.)
    set nS[$00000005] = Shu(qS[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))], 600., 20.)
    call AddLightningLoc("DRAM", nS[$00000001], nS[$00000003])
    set dS[$00000001] = bj_lastCreatedLightning
    call AddLightningLoc("DRAM", nS[$00000005], nS[$00000003])
    set dS[$00000002] = bj_lastCreatedLightning
    call AddLightningLoc("DRAM", nS[$00000005], nS[$00000002])
    set dS[$00000003] = bj_lastCreatedLightning
    call AddLightningLoc("DRAM", nS[$00000002], nS[$00000004])
    set dS[$00000004] = bj_lastCreatedLightning
    call AddLightningLoc("DRAM", nS[$00000004], nS[$00000001])
    set dS[$00000005] = bj_lastCreatedLightning
    call AddLightningLoc("DRAM", nS[$00000001], nS[$00000003])
    set dS[$00000006] = bj_lastCreatedLightning
    call AddLightningLoc("DRAM", nS[$00000005], nS[$00000003])
    set dS[$00000007] = bj_lastCreatedLightning
    call AddLightningLoc("DRAM", nS[$00000005], nS[$00000002])
    set dS[$00000008] = bj_lastCreatedLightning
    call AddLightningLoc("DRAM", nS[$00000002], nS[$00000004])
    set dS[$00000009] = bj_lastCreatedLightning
    call AddLightningLoc("DRAM", nS[$00000004], nS[$00000001])
    set dS[$0000000A] = bj_lastCreatedLightning
    call n6t(.5)
    call SetUnitAnimation(pS[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))], "spell")
    call n6t(.1)
    call AddSpecialEffectLocBJ(qS[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))], "Abilities\\Spells\\Orc\\WarStomp\\WarStompCaster.mdl")
    call DestroyEffect(bj_lastCreatedEffect)
    call CreateTextTagUnitBJ("LIMIT BREAK!!!", pS[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))], 0., 15., 100., .0, .0, 0.)
    set fS[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))] = bj_lastCreatedTextTag
    call n6t(2.5)
    set Cc = 1
    loop
        exitwhen Cc > 10
        call DestroyLightning(dS[Cc])
        set Cc = Cc + 1
    endloop
    call DestroyTextTag(fS[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))])
    call TriggerSleepAction(.2)
    call CreateTextTagUnitBJ("DEVASTATOR STRIKE!!!", pS[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))], 0., 15., 100., .0, .0, 0.)
    call SetTextTagVelocityBJ(bj_lastCreatedTextTag, 64., 90.)
    call SetTextTagPermanentBJ(bj_lastCreatedTextTag, false)
    call SetTextTagFadepointBJ(bj_lastCreatedTextTag, 1.5)
    call SetTextTagLifespanBJ(bj_lastCreatedTextTag, 3.)
    call CreateNUnitsAtLoc($00000001, $68303341, GetOwningPlayer(pS[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))]), qS[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))], bj_UNIT_FACING)
    set RS[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))] = bj_lastCreatedUnit
    call SetUnitTimeScalePercent(bj_lastCreatedUnit, 10.)
    call TriggerSleepAction(.4)
    call SetUnitScalePercent(RS[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))], 120., 140., 140.)
    call TriggerSleepAction(.4)
    call SetUnitScalePercent(RS[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))], 140., 180., 180.)
    call TriggerSleepAction(.4)
    call SetUnitScalePercent(RS[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))], 160., 220., 220.)
    call TriggerSleepAction(.4)
    call SetUnitScalePercent(RS[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))], 180., 260., 260.)
    call TriggerSleepAction(.4)
    call SetUnitScalePercent(RS[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))], 200., 300., 300.)
    call TriggerSleepAction(.4)
    call ExplodeUnitBJ(RS[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))])
    call AddSpecialEffectTargetUnitBJ("right hand", pS[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))], "Abilities\\Weapons\\FarseerMissile\\FarseerMissile.mdl")
    set TS[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))] = bj_lastCreatedEffect
    call SetUnitPositionLoc(pS[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))], aS[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))])
    call TriggerSleepAction(.2)
    call SetUnitAnimation(pS[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))], "attack slam")
    call TriggerSleepAction(.2)
    call CreateNUnitsAtLoc($00000001, $68303341, GetOwningPlayer(pS[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))]), aS[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))], bj_UNIT_FACING)
    set RS[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))] = bj_lastCreatedUnit
    call SetUnitScalePercent(RS[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))], 200., 200., 200.)
    call DestroyEffect(TS[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))])
    call TriggerSleepAction(.5)
    call SetUnitInvulnerable(pS[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))], false)
    call SetUnitInvulnerable(eS[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))], false)
    call SetUnitPositionLoc(pS[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))], qS[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))])
    call UnitDamageTargetBJ(pS[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))], eS[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))], 50000., ATTACK_TYPE_CHAOS, DAMAGE_TYPE_UNIVERSAL)
    call GetPlayerId(GetOwningPlayer(GetTriggerUnit()))
    set gi = eS[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))]
    set hi = 1
    set Fi = qS[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))]
    set ki = 18.
    set ji = 800.
    set xi[$00000001] = "Abilities\\Spells\\Human\\FlakCannons\\FlakTarget.mdl"
    set xi[$00000002] = "Abilities\\Weapons\\AncientProtectorMissile\\AncientProtectorMissile.mdl"
    set vi = false
    call ConditionalTriggerExecute(dT)
    call RemoveUnit(RS[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))])
    call PauseUnit(pS[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))], false)
    call PauseUnit(eS[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))], false)
    call ResetUnitAnimation(pS[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))])
    call ResetUnitAnimation(eS[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))])
    call RemoveLocation(qS[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))])
    call RemoveLocation(aS[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))])
endfunction
function ZRi takes nothing returns boolean
    return li[1 + GetPlayerId(GetOwningPlayer(GetKillingUnit()))] >= 10
endfunction
function IUt takes nothing returns nothing
    set li[1 + GetPlayerId(GetOwningPlayer(GetKillingUnit()))] = li[1 + GetPlayerId(GetOwningPlayer(GetKillingUnit()))] + 1
    if ZRi() then
        call QuestMessageBJ(MwS(GetOwningPlayer(GetKillingUnit())), $00000002, "|cffffcc00Waterworks|r Quest Requirement Completed.")
    else
        call QuestMessageBJ(MwS(GetOwningPlayer(GetKillingUnit())), $00000001, I2S(li[1 + GetPlayerId(GetOwningPlayer(GetKillingUnit()))]) + " Watery Specimen(s) obtained.")
    endif
endfunction
function IVr takes nothing returns nothing
    call RemoveItem(GetManipulatedItem())
    set Po[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))] = 3
    call AddSpecialEffectTargetUnitBJ("overhead", GetTriggerUnit(), "Abilities\\Spells\\Other\\Levelup\\LevelupCaster.mdl")
    call DestroyEffect(bj_lastCreatedEffect)
    call DisplayTextToForce(MwS(GetOwningPlayer(GetTriggerUnit())), "|cffffcc00You are now successfully promoted to Expert Fisherman.|r")
endfunction
function KMr takes string HMr returns integer
    local integer JMr
    set DSw[ASw] = HMr
    set ASw = ASw + 1
    if AB == 0 then
        if DB < 32768 then
            set DB = DB + 1
            set JMr = DB
            set HB[JMr] = 1186
        else
            call tNr("Out of memory: Could not create ForUnitOfTypeInAreaClosure_forUnitsOfTypeInArea_Imp4.", "when calling error in Imp4, line 208")
            set JMr = 0
        endif
    else
        set AB = AB - 1
        set JMr = PB[AB]
        set HB[JMr] = 1186
    endif
    set ASw = ASw - 1
    return JMr
endfunction
function KwS takes string HwS returns integer
    local integer JwS
    set DSw[ASw] = HwS
    set ASw = ASw + 1
    if NX == 0 then
        if MX < 32768 then
            set MX = MX + 1
            set JwS = MX
            set wC[JwS] = 871
        else
            call tNr("Out of memory: Could not create CallbackSingle_doAfter_Imp4.", "when calling error in Imp4, line 151")
            set JwS = 0
        endif
    else
        set NX = NX - 1
        set JwS = BX[NX]
        set wC[JwS] = 871
    endif
    set ASw = ASw - 1
    return JwS
endfunction
function oZi takes string SZi returns integer
    local integer cZi
    set DSw[ASw] = SZi
    set ASw = ASw + 1
    if NX == 0 then
        if MX < 32768 then
            set MX = MX + 1
            set cZi = MX
            set wC[cZi] = 870
        else
            call tNr("Out of memory: Could not create CallbackSingle_doAfter_Imp4.", "when calling error in Imp4, line 101")
            set cZi = 0
        endif
    else
        set NX = NX - 1
        set cZi = BX[NX]
        set wC[cZi] = 870
    endif
    set ASw = ASw - 1
    return cZi
endfunction
function TUu takes integer lUu, real bUu, real yUu, integer pUu, string eUu returns nothing
    local group qUu
    local integer aUu
    local group nUu
    local unit dUu
    local integer fUu
    local real RUu
    set DSw[ASw] = eUu
    set ASw = ASw + 1
    set qUu = Dit(Vp, "when calling getUnitsInRect in Imp4, line 98")
    set aUu = 0
    set nUu = XbS(qUu)
    loop
        exitwhen not hJw(nUu)
        set dUu = tPr(nUu)
        set RUu = bUu + yUu * aUu
        set fUu = oZi("when calling alloc_CallbackSingle_doAfter_Imp4 in Imp4, line 101")
        call RUs(fUu)
        set A9[fUu] = dUu
        set D9[fUu] = lUu
        set H9[fUu] = pUu
        set J9[fUu] = aUu
        call Ybr(RUu, fUu, "when calling doAfter in Imp4, line 101")
    endloop
    call lxs(nUu)
    call Sju(qUu, "when calling release in Imp4, line 105")
    set ASw = ASw - 1
    set qUu = null
    set nUu = null
    set dUu = null
endfunction
function UTt takes string ETt returns integer
    local integer ZTt
    set DSw[ASw] = ETt
    set ASw = ASw + 1
    if NX == 0 then
        if MX < 32768 then
            set MX = MX + 1
            set ZTt = MX
            set wC[ZTt] = 876
        else
            call tNr("Out of memory: Could not create CallbackSingle_doAfter_Imp4.", "when calling error in Imp4, line 239")
            set ZTt = 0
        endif
    else
        set NX = NX - 1
        set ZTt = BX[NX]
        set wC[ZTt] = 876
    endif
    set ASw = ASw - 1
    return ZTt
endfunction
function Ues takes string Ees returns integer
    local integer Zes
    set DSw[ASw] = Ees
    set ASw = ASw + 1
    if AB == 0 then
        if DB < 32768 then
            set DB = DB + 1
            set Zes = DB
            set HB[Zes] = 1182
        else
            call tNr("Out of memory: Could not create ForUnitOfTypeInAreaClosure_forUnitsOfTypeInAreaDelayed_Imp4.", "when calling error in Imp4, line 182")
            set Zes = 0
        endif
    else
        set AB = AB - 1
        set Zes = PB[AB]
        set HB[Zes] = 1182
    endif
    set ASw = ASw - 1
    return Zes
endfunction
function Wvt takes string mvt returns integer
    local integer Qvt
    set DSw[ASw] = mvt
    set ASw = ASw + 1
    if AB == 0 then
        if DB < 32768 then
            set DB = DB + 1
            set Qvt = DB
            set HB[Qvt] = 1179
        else
            call tNr("Out of memory: Could not create ForUnitOfTypeInAreaClosure_forUnitsInArea_Imp4.", "when calling error in Imp4, line 214")
            set Qvt = 0
        endif
    else
        set AB = AB - 1
        set Qvt = PB[AB]
        set HB[Qvt] = 1179
    endif
    set ASw = ASw - 1
    return Qvt
endfunction
function Y_t takes string R_t returns integer
    local integer T_t
    set DSw[ASw] = R_t
    set ASw = ASw + 1
    if NX == 0 then
        if MX < 32768 then
            set MX = MX + 1
            set T_t = MX
            set wC[T_t] = 881
        else
            call tNr("Out of memory: Could not create CallbackSingle_doAfter_Imp4.", "when calling error in Imp4, line 264")
            set T_t = 0
        endif
    else
        set NX = NX - 1
        set T_t = BX[NX]
        set wC[T_t] = 881
    endif
    set ASw = ASw - 1
    return T_t
endfunction
function Ykt takes string Rkt returns integer
    local integer Tkt
    set DSw[ASw] = Rkt
    set ASw = ASw + 1
    if NX == 0 then
        if MX < 32768 then
            set MX = MX + 1
            set Tkt = MX
            set wC[Tkt] = 879
        else
            call tNr("Out of memory: Could not create CallbackSingle_doAfter_Imp4.", "when calling error in Imp4, line 253")
            set Tkt = 0
        endif
    else
        set NX = NX - 1
        set Tkt = BX[NX]
        set wC[Tkt] = 879
    endif
    set ASw = ASw - 1
    return Tkt
endfunction
function Zfu takes string Wfu returns integer
    local integer Efu
    set DSw[ASw] = Wfu
    set ASw = ASw + 1
    if AB == 0 then
        if DB < 32768 then
            set DB = DB + 1
            set Efu = DB
            set HB[Efu] = 1184
        else
            call tNr("Out of memory: Could not create ForUnitOfTypeInAreaClosure_forUnitsOfTypeInArea_Imp4.", "when calling error in Imp4, line 164")
            set Efu = 0
        endif
    else
        set AB = AB - 1
        set Efu = PB[AB]
        set HB[Efu] = 1184
    endif
    set ASw = ASw - 1
    return Efu
endfunction
function bHr takes string OHr returns integer
    local integer lHr
    set DSw[ASw] = OHr
    set ASw = ASw + 1
    if NX == 0 then
        if MX < 32768 then
            set MX = MX + 1
            set lHr = MX
            set wC[lHr] = 877
        else
            call tNr("Out of memory: Could not create CallbackSingle_doAfter_Imp4.", "when calling error in Imp4, line 244")
            set lHr = 0
        endif
    else
        set NX = NX - 1
        set lHr = BX[NX]
        set wC[lHr] = 877
    endif
    set ASw = ASw - 1
    return lHr
endfunction
function cbS takes string ibS returns integer
    local integer SbS
    set DSw[ASw] = ibS
    set ASw = ASw + 1
    if NX == 0 then
        if MX < 32768 then
            set MX = MX + 1
            set SbS = MX
            set wC[SbS] = 875
        else
            call tNr("Out of memory: Could not create CallbackSingle_doAfter_Imp4.", "when calling error in Imp4, line 236")
            set SbS = 0
        endif
    else
        set NX = NX - 1
        set SbS = BX[NX]
        set wC[SbS] = 875
    endif
    set ASw = ASw - 1
    return SbS
endfunction
function mmi takes string xmi returns integer
    local integer vmi
    set DSw[ASw] = xmi
    set ASw = ASw + 1
    if AB == 0 then
        if DB < 32768 then
            set DB = DB + 1
            set vmi = DB
            set HB[vmi] = 1185
        else
            call tNr("Out of memory: Could not create ForUnitOfTypeInAreaClosure_forUnitsOfTypeInArea_Imp4.", "when calling error in Imp4, line 189")
            set vmi = 0
        endif
    else
        set AB = AB - 1
        set vmi = PB[AB]
        set HB[vmi] = 1185
    endif
    set ASw = ASw - 1
    return vmi
endfunction
function Ccs takes integer Lcs, unit Xcs returns nothing
    call v0r(Xcs, false)
endfunction
function Dts takes integer Pts, unit Ats returns nothing
    call v0r(Ats, true)
    call Ggr(Ats)
endfunction
function EkS takes integer QkS, unit WkS returns nothing
    call uFr(WkS)
endfunction
function JAw takes integer DAw, unit HAw returns nothing
    call v0r(HAw, false)
endfunction
function K2u takes integer H2u, unit J2u returns nothing
    call uFr(J2u)
endfunction
function Slr takes integer tlr, unit ilr returns nothing
    call v0r(ilr, false)
endfunction
function XBi takes integer KBi, unit LBi returns nothing
    call v0r(LBi, false)
endfunction
function dFt takes integer aFt, unit nFt returns nothing
    call v0r(nFt, false)
    call qaS(nFt)
endfunction
function jGu takes integer FGu, unit kGu returns nothing
    call v0r(kGu, false)
endfunction
function sdr takes integer udr, unit rdr returns nothing
    call v0r(rdr, false)
endfunction
function vji takes integer kji, unit jji, string xji returns nothing
    set DSw[ASw] = xji
    set ASw = ASw + 1
    if HB[kji] == 0 then
        if kji == 0 then
            call tNr("Nullpointer exception when calling ForUnitOfTypeInAreaClosure.run", "when calling error in Imp4, line 49")
        else
            call tNr("Called ForUnitOfTypeInAreaClosure.run on invalid object.", "when calling error in Imp4, line 49")
        endif
    endif
    if HB[kji] <= 1183 then
        if HB[kji] <= 1181 then
            if HB[kji] <= 1180 then
    if HB[kji] <= 1179 then
                    call Dts(kji, jji)
    else
                    call dFt(kji, jji)
    endif
            else
    call EkS(kji, jji)
            endif
        elseif HB[kji] <= 1182 then
            call K2u(kji, jji)
        else
            call XBi(kji, jji)
        endif
    elseif HB[kji] <= 1186 then
        if HB[kji] <= 1185 then
            if HB[kji] <= 1184 then
    call JAw(kji, jji)
            else
    call Slr(kji, jji)
            endif
        else
            call Ccs(kji, jji)
        endif
    elseif HB[kji] <= 1187 then
        call sdr(kji, jji)
    else
        call jGu(kji, jji)
    endif
    set ASw = ASw - 1
endfunction
function nEr takes integer yEr, string pEr returns nothing
    local group eEr
    local group qEr
    local unit aEr
    set DSw[ASw] = pEr
    set ASw = ASw + 1
    set eEr = Dit(Vp, "when calling getUnitsInRect in Imp4, line 92")
    set qEr = XbS(eEr)
    loop
        exitwhen not hJw(qEr)
        set aEr = tPr(qEr)
        call vji(yEr, aEr, "when calling run in Imp4, line 94")
    endloop
    call lxs(qEr)
    call Sju(eEr, "when calling release in Imp4, line 95")
    set ASw = ASw - 1
    set eEr = null
    set qEr = null
    set aEr = null
endfunction
function pHs takes string bHs returns integer
    local integer yHs
    set DSw[ASw] = bHs
    set ASw = ASw + 1
    if NX == 0 then
        if MX < 32768 then
            set MX = MX + 1
            set yHs = MX
            set wC[yHs] = 878
        else
            call tNr("Out of memory: Could not create CallbackSingle_doAfter_Imp4.", "when calling error in Imp4, line 248")
            set yHs = 0
        endif
    else
        set NX = NX - 1
        set yHs = BX[NX]
        set wC[yHs] = 878
    endif
    set ASw = ASw - 1
    return yHs
endfunction
function qot takes string pot returns integer
    local integer eot
    set DSw[ASw] = pot
    set ASw = ASw + 1
    if NX == 0 then
        if MX < 32768 then
            set MX = MX + 1
            set eot = MX
            set wC[eot] = 872
        else
            call tNr("Out of memory: Could not create CallbackSingle_doAfter_Imp4.", "when calling error in Imp4, line 169")
            set eot = 0
        endif
    else
        set NX = NX - 1
        set eot = BX[NX]
        set wC[eot] = 872
    endif
    set ASw = ASw - 1
    return eot
endfunction
function rkS takes string wkS returns integer
    local integer ukS
    set DSw[ASw] = wkS
    set ASw = ASw + 1
    if NX == 0 then
        if MX < 32768 then
            set MX = MX + 1
            set ukS = MX
            set wC[ukS] = 874
        else
            call tNr("Out of memory: Could not create CallbackSingle_doAfter_Imp4.", "when calling error in Imp4, line 227")
            set ukS = 0
        endif
    else
        set NX = NX - 1
        set ukS = BX[NX]
        set wC[ukS] = 874
    endif
    set ASw = ASw - 1
    return ukS
endfunction
function s2s takes string u2s returns integer
    local integer r2s
    set DSw[ASw] = u2s
    set ASw = ASw + 1
    if AB == 0 then
        if DB < 32768 then
            set DB = DB + 1
            set r2s = DB
            set HB[r2s] = 1183
        else
            call tNr("Out of memory: Could not create ForUnitOfTypeInAreaClosure_forUnitsOfTypeInArea_Imp4.", "when calling error in Imp4, line 146")
            set r2s = 0
        endif
    else
        set AB = AB - 1
        set r2s = PB[AB]
        set HB[r2s] = 1183
    endif
    set ASw = ASw - 1
    return r2s
endfunction
function u0u takes integer C9u, integer V9u, string B9u returns nothing
    local group N9u
    local group M9u
    local unit w0u
    set DSw[ASw] = B9u
    set ASw = ASw + 1
    set N9u = Dit(Vp, "when calling getUnitsInRect in Imp4, line 108")
    set M9u = XbS(N9u)
    loop
        exitwhen not hJw(M9u)
        set w0u = tPr(M9u)
        if r5S(w0u) == C9u then
            call vji(V9u, w0u, "when calling run in Imp4, line 111")
        endif
    endloop
    call lxs(M9u)
    call Sju(N9u, "when calling release in Imp4, line 112")
    set ASw = ASw - 1
    set N9u = null
    set M9u = null
    set w0u = null
endfunction
function vbr takes string jbr returns integer
    local integer xbr
    set DSw[ASw] = jbr
    set ASw = ASw + 1
    if AB == 0 then
        if DB < 32768 then
            set DB = DB + 1
            set xbr = DB
            set HB[xbr] = 1181
        else
            call tNr("Out of memory: Could not create ForUnitOfTypeInAreaClosure_forUnitsOfTypeInAreaDelayed_Imp4.", "when calling error in Imp4, line 178")
            set xbr = 0
        endif
    else
        set AB = AB - 1
        set xbr = PB[AB]
        set HB[xbr] = 1181
    endif
    set ASw = ASw - 1
    return xbr
endfunction
function wGi takes string NYi returns integer
    local integer MYi
    set DSw[ASw] = NYi
    set ASw = ASw + 1
    if NX == 0 then
        if MX < 32768 then
            set MX = MX + 1
            set MYi = MX
            set wC[MYi] = 880
        else
            call tNr("Out of memory: Could not create CallbackSingle_doAfter_Imp4.", "when calling error in Imp4, line 258")
            set MYi = 0
        endif
    else
        set NX = NX - 1
        set MYi = BX[NX]
        set wC[MYi] = 880
    endif
    set ASw = ASw - 1
    return MYi
endfunction
function wPr takes string NIr returns integer
    local integer MIr
    set DSw[ASw] = NIr
    set ASw = ASw + 1
    if NX == 0 then
        if MX < 32768 then
            set MX = MX + 1
            set MIr = MX
            set wC[MIr] = 873
        else
            call tNr("Out of memory: Could not create CallbackSingle_doAfter_Imp4.", "when calling error in Imp4, line 194")
            set MIr = 0
        endif
    else
        set NX = NX - 1
        set MIr = BX[NX]
        set wC[MIr] = 873
    endif
    set ASw = ASw - 1
    return MIr
endfunction
function bMt takes string kNt returns nothing
    local unit jNt
    local integer xNt
    local integer vNt
    local integer mNt
    local integer QNt
    local integer WNt
    local integer ENt
    local integer ZNt
    local integer UNt
    local integer INt
    local integer PNt
    local integer ANt
    local integer DNt
    local integer HNt
    local integer JNt
    local integer KNt
    local integer LNt
    local integer XNt
    local integer CNt
    local integer VNt
    local integer BNt
    local integer NNt
    local integer MNt
    local integer wMt
    local integer uMt
    local integer rMt
    local integer sMt
    local real tMt
    local real iMt
    local real SMt
    local real cMt
    local real oMt
    local real OMt
    local real lMt
    set DSw[ASw] = kNt
    set ASw = ASw + 1
    set jNt = GetDyingUnit()
    set xNt = r5S(jNt)
    if eDs(jNt) == aD[PLAYER_NEUTRAL_AGGRESSIVE]then
        set vNt = xNt
        if vNt == PZ then
            set dO[$00000001] = dO[$00000001] + 1
            if dO[$00000001] == 2 then
    set NNt = AZ
    set mNt = s2s("when calling alloc_ForUnitOfTypeInAreaClosure_forUnitsOfTypeInArea_Imp4 in Imp4, line 146")
    call u0u(NNt, mNt, "when calling forUnitsOfTypeInArea in Imp4, line 146")
            endif
            call DisplayTextToForce(Rc[BZ], Iji("The Icarus has been destroyed. Calling the reinforcement, The Infinity.", "when calling unObfuscate in Imp4, line 149"))
            set QNt = KwS("when calling alloc_CallbackSingle_doAfter_Imp4 in Imp4, line 151")
            call RUs(QNt)
            call Ybr(10., QNt, "when calling doAfter in Imp4, line 151")
        elseif vNt == HZ then
            set qO = qO + 1
            set dO[$00000002] = dO[$00000002] + 1
            if dO[$00000002] == 2 then
    set MNt = JZ
    set WNt = Zfu("when calling alloc_ForUnitOfTypeInAreaClosure_forUnitsOfTypeInArea_Imp4 in Imp4, line 164")
    call u0u(MNt, WNt, "when calling forUnitsOfTypeInArea in Imp4, line 164")
            endif
        elseif vNt == AZ then
            call DisplayTextToForce(Rc[BZ], Iji("The Trinity has been destroyed. Calling the reinforcement, The Liberty.", "when calling unObfuscate in Imp4, line 167"))
            set ENt = qot("when calling alloc_CallbackSingle_doAfter_Imp4 in Imp4, line 169")
            call RUs(ENt)
            call Ybr(10., ENt, "when calling doAfter in Imp4, line 169")
            set wMt = IZ
            set ZNt = vbr("when calling alloc_ForUnitOfTypeInAreaClosure_forUnitsOfTypeInAreaDelayed_Imp4 in Imp4, line 178")
            call TUu(wMt, 3., .05, ZNt, "when calling forUnitsOfTypeInAreaDelayed in Imp4, line 178")
        elseif vNt == JZ then
            set qO = qO + 1
            set uMt = IZ
            set UNt = Ues("when calling alloc_ForUnitOfTypeInAreaClosure_forUnitsOfTypeInAreaDelayed_Imp4 in Imp4, line 182")
            call TUu(uMt, 3., .05, UNt, "when calling forUnitsOfTypeInAreaDelayed in Imp4, line 182")
        elseif vNt == DZ then
            set dO[$00000001] = dO[$00000001] + 1
            if dO[$00000001] == 2 then
    set rMt = AZ
    set INt = mmi("when calling alloc_ForUnitOfTypeInAreaClosure_forUnitsOfTypeInArea_Imp4 in Imp4, line 189")
    call u0u(rMt, INt, "when calling forUnitsOfTypeInArea in Imp4, line 189")
            endif
            call DisplayTextToForce(Rc[BZ], Iji("The Mirage has been destroyed. Calling the reinforcement, The Aurora.", "when calling unObfuscate in Imp4, line 192"))
            set PNt = wPr("when calling alloc_CallbackSingle_doAfter_Imp4 in Imp4, line 194")
            call RUs(PNt)
            call Ybr(10., PNt, "when calling doAfter in Imp4, line 194")
        elseif vNt == KZ then
            set qO = qO + 1
            set dO[$00000002] = dO[$00000002] + 1
            if dO[$00000002] == 2 then
    set sMt = JZ
    set ANt = KMr("when calling alloc_ForUnitOfTypeInAreaClosure_forUnitsOfTypeInArea_Imp4 in Imp4, line 208")
    call u0u(sMt, ANt, "when calling forUnitsOfTypeInArea in Imp4, line 208")
            endif
        endif
        if xNt == KZ or xNt == JZ or xNt == HZ and qO == 3 then
            set uU = true
            set qO = 0
            set DNt = Wvt("when calling alloc_ForUnitOfTypeInAreaClosure_forUnitsInArea_Imp4 in Imp4, line 214")
            call nEr(DNt, "when calling forUnitsInArea in Imp4, line 214")
            set aO = dps(aD[$0000000A], CZ, oQu(Xp), Gcw, bj_UNIT_FACING)
            set nO = dps(aD[$0000000B], VZ, oQu(Xp), Gcw, bj_UNIT_FACING)
            call ForForce(Rc[BZ], bQw)
            call p5s(Rc[BZ], yQw)
            set HNt = rkS("when calling alloc_CallbackSingle_doAfter_Imp4 in Imp4, line 227")
            call RUs(HNt)
            call Ybr(2.1, HNt, "when calling doAfter in Imp4, line 227")
            set tMt = 2.1 + 5.
            set JNt = cbS("when calling alloc_CallbackSingle_doAfter_Imp4 in Imp4, line 236")
            call RUs(JNt)
            call Ybr(tMt, JNt, "when calling doAfter in Imp4, line 236")
            set iMt = 2.1 + 5. + 5.
            set KNt = UTt("when calling alloc_CallbackSingle_doAfter_Imp4 in Imp4, line 239")
            call RUs(KNt)
            call Ybr(iMt, KNt, "when calling doAfter in Imp4, line 239")
            set SMt = 2.1 + 5. + 5. + 1.5
            set LNt = bHr("when calling alloc_CallbackSingle_doAfter_Imp4 in Imp4, line 244")
            call RUs(LNt)
            call Ybr(SMt, LNt, "when calling doAfter in Imp4, line 244")
            set cMt = 2.1 + 5. + 5. + 1.5 + 7.
            set XNt = pHs("when calling alloc_CallbackSingle_doAfter_Imp4 in Imp4, line 248")
            call RUs(XNt)
            call Ybr(cMt, XNt, "when calling doAfter in Imp4, line 248")
            set oMt = 2.1 + 5. + 5. + 1.5 + 7. + 2.
            set CNt = Ykt("when calling alloc_CallbackSingle_doAfter_Imp4 in Imp4, line 253")
            call RUs(CNt)
            call Ybr(oMt, CNt, "when calling doAfter in Imp4, line 253")
            set OMt = 2.1 + 5. + 5. + 1.5 + 7. + 2. + 2.
            set VNt = wGi("when calling alloc_CallbackSingle_doAfter_Imp4 in Imp4, line 258")
            call RUs(VNt)
            call Ybr(OMt, VNt, "when calling doAfter in Imp4, line 258")
            set lMt = 2.1 + 5. + 5. + 1.5 + 7. + 2. + 2. + 5.
            set BNt = Y_t("when calling alloc_CallbackSingle_doAfter_Imp4 in Imp4, line 264")
            call RUs(BNt)
            call Ybr(lMt, BNt, "when calling doAfter in Imp4, line 264")
        endif
    endif
    set ASw = ASw - 1
    set jNt = null
endfunction
function IVs takes nothing returns nothing
    set ASw = 0
    call bMt("via function reference Imp4, line 852")
endfunction
function IXs takes nothing returns nothing
    set Wt[1 + GetPlayerId(GetTriggerPlayer())] = GetEnumUnit()
endfunction
function IYs takes nothing returns boolean
    return GetUnitTypeId(GetTriggerUnit()) == 1211117645 and GetOrderTargetUnit() == rG and GetHeroLevel(GetTriggerUnit()) >= 99 and IsPlayerInForce(GetOwningPlayer(GetTriggerUnit()), Kr) == false and IsUnitInGroup(GetTriggerUnit(), kpu(300., GetUnitLoc(GetOrderTargetUnit())))
endfunction
function IZi takes nothing returns boolean
    return IsUnitType(GetFilterUnit(), UNIT_TYPE_HERO) != false
endfunction
function IaS takes nothing returns nothing
    call RemoveItem(GetManipulatedItem())
    call ForceAddPlayer(IS[$0000000E], GetOwningPlayer(GetTriggerUnit()))
    call DisplayTextToForce(MwS(GetOwningPlayer(GetTriggerUnit())), "|cffffcc00Squeaky|r : Some say they have heard weird noises and screems from the ruined town. Some lunatics have even claimed some sort of a portal has emerged in front of them, from which demons started to come out. To see if it's true, I want you to investigate it, and possibly kill any demons you find along the way!")
    call T_i(GetOwningPlayer(GetTriggerUnit()), $00000000, "Demonology", "I should investigate the ruined town and the portal that apparently appeared there. If I find any demons, I must show back back to the Void.", "ReplaceableTextures\\CommandButtons\\BTNFelGuardBlue.blp")
    set ES[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))] = bj_lastCreatedQuest
endfunction
function Ier takes nothing returns nothing
    call ForceAddPlayer(rt, GetOwningPlayer(GetTriggerUnit()))
    call DisplayTextToForce(MwS(GetOwningPlayer(GetTriggerUnit())), "|cffffcc00Nazgul|r : |cff87ceebHahahaha! You've got great guts to speak to me. If you're here to become a master stalker - forget it. You must be ready to give up your humanity like I did, so you can train in the forbidden arts of stalking. If you're ready to do that, then kill Lord De Seis and return to me.")
    call PlaySoundBJ(Se)
    call T_i(GetOwningPlayer(GetTriggerUnit()), $00000000, "4th Job Advancement Quest", "I have to kill Lord De Seis. I think I can find him in the Unknown Regions...", "ReplaceableTextures\\PassiveButtons\\PASBTNGenericSpellImmunity.blp")
    set st[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))] = bj_lastCreatedQuest
    set kt[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))] = 0
endfunction
function C4i takes integer K4i, integer L4i, integer X4i returns string
    return "|cff" + Ilu(K4i) + Ilu(L4i) + Ilu(X4i)
endfunction
function Fis takes nothing returns nothing
    call miS()
    call YnS()
    call ayi()
    call Uot()
    call DdS()
    call Nor()
endfunction
function IcS takes nothing returns nothing
    call Nor()
    call YnS()
    call Uot()
    call ayi()
    call DdS()
    call miS()
endfunction
function Cys takes unit Xys returns nothing
    call IcS()
    call Fis()
    call Nkr()
endfunction
function OUr takes integer SUr, string cUr returns boolean
    local boolean oUr
    set DSw[ASw] = cUr
    set ASw = ASw + 1
    set oUr = GpS(aA, SUr, "when calling has in NpcHandler, line 77")
    set ASw = ASw - 1
    return oUr
endfunction
function Qys takes string vys returns integer
    local integer mys
    set DSw[ASw] = vys
    set ASw = ASw + 1
    if NX == 0 then
        if MX < 32768 then
            set MX = MX + 1
            set mys = MX
            set wC[mys] = 914
        else
            call tNr("Out of memory: Could not create CallbackSingle_doAfter_NpcHandler.", "when calling error in NpcHandler, line 117")
            set mys = 0
        endif
    else
        set NX = NX - 1
        set mys = BX[NX]
        set wC[mys] = 914
    endif
    set ASw = ASw - 1
    return mys
endfunction
function KZi takes integer DZi returns integer
    local integer HZi = DZi / (64 * 64 * 64)
    local integer JZi
    set DZi = DZi - HZi * 64 * 64 * 64
    set JZi = Au[HZi]
    set HZi = DZi / (64 * 64)
    set DZi = DZi - HZi * 64 * 64
    set JZi = JZi * 256 + Au[HZi]
    set HZi = DZi / 64
    set JZi = JZi * 256 + Au[HZi]
    return JZi * 256 + Au[DZi - HZi * 64]
endfunction
function TFS takes integer RFS returns integer
    if wr == false then
        set wr = true
        call sHu()
    endif
    if RFS <= Vu then
        return Du[RFS]
    endif
    return KZi(RFS)
endfunction
function Xau takes string Kau, real Lau returns nothing
    call DisplayTimedTextToPlayer(nD, 0., 0., Lau, Kau)
endfunction
function Yis takes unit fis, integer Ris, boolean Tis returns nothing
    call SetHeroLevel(fis, Ris, Tis)
endfunction
function ZqS takes playercolor mqS returns integer
    local integer QqS = 0
    local integer WqS = 0
    local integer EqS = bj_MAX_PLAYER_SLOTS - 1
    loop
        exitwhen WqS > EqS
        if YD[WqS] == mqS then
            set QqS = WqS
            exitwhen true
        endif
        set WqS = WqS + 1
    endloop
    return QqS
endfunction
function v3u takes integer F3u, integer k3u, integer j3u, integer x3u returns integer
    set Ocw = F3u
    set lcw = k3u
    set bcw = j3u
    return Ocw
endfunction
function q_t takes playercolor t_t returns integer
    local integer i_t
    local integer S_t
    local integer c_t
    local integer o_t
    local integer O_t
    local integer l_t
    local integer b_t
    local integer y_t
    local integer p_t
    local integer e_t
    if ZqS(t_t) <= Uh then
        set o_t = ZqS(t_t)
        set O_t = Ih[o_t]
        set l_t = Ph[o_t]
        set b_t = Ah[o_t]
        set i_t = O_t
        set S_t = l_t
        set c_t = b_t
    else
        set y_t = v3u(Qh, Wh, Eh, Zh)
        set p_t = lcw
        set e_t = bcw
        set i_t = y_t
        set S_t = p_t
        set c_t = e_t
    endif
    set Scw = i_t
    set ccw = S_t
    set ocw = c_t
    return Scw
endfunction
function cdr takes player Sdr returns string
    return C4i(q_t(vBu(Sdr)), ccw, ocw) + GetPlayerName(Sdr) + "|r"
endfunction
function j9S takes string F9S returns integer
    local integer k9S
    set DSw[ASw] = F9S
    set ASw = ASw + 1
    if NX == 0 then
        if MX < 32768 then
            set MX = MX + 1
            set k9S = MX
            set wC[k9S] = 917
        else
            call tNr("Out of memory: Could not create CallbackSingle_doAfter_NpcHandler.", "when calling error in NpcHandler, line 261")
            set k9S = 0
        endif
    else
        set NX = NX - 1
        set k9S = BX[NX]
        set wC[k9S] = 917
    endif
    set ASw = ASw - 1
    return k9S
endfunction
function khu takes string dhu, string fhu, string Rhu returns integer
    local integer Thu
    local integer Yhu
    local string Ghu
    local integer ghu
    local string hhu
    local string Fhu
    set DSw[ASw] = Rhu
    set ASw = ASw + 1
    set Thu = XQt("when calling new_LinkedList in StringUtils, line 91")
    set Yhu = vQt(fhu)
    set Ghu = dhu
    loop
        exitwhen not true
        set ghu = BgS(Ghu, fhu)
        if ghu ==- 1 then
            call vwt(Thu, err(Ghu, "when calling stringToIndex in StringUtils, line 97"), "when calling add in StringUtils, line 97")
            exitwhen true
        endif
        set hhu = CAw(Ghu, $00000000, ghu)
        set Fhu = CAw(Ghu, ghu + Yhu, vQt(Ghu))
        call vwt(Thu, err(hhu, "when calling stringToIndex in StringUtils, line 101"), "when calling add in StringUtils, line 101")
        set Ghu = Fhu
    endloop
    set ASw = ASw - 1
    return Thu
endfunction
function LMt takes real JMt, real KMt returns location
    return Location(JMt, KMt)
endfunction
function v0i takes integer x0i returns boolean
    return r3[x0i]
endfunction
function Vgt takes integer Lgt, string Xgt returns boolean
    local boolean Cgt
    set DSw[ASw] = Xgt
    set ASw = ASw + 1
    if bV[Lgt] == 0 then
        if Lgt == 0 then
            call tNr("Nullpointer exception when calling CustomPlayer.getCommandsDisabled", "when calling error in CustomPlayer, line 130")
        else
            call tNr("Called CustomPlayer.getCommandsDisabled on invalid object.", "when calling error in CustomPlayer, line 130")
        endif
    endif
    set Cgt = v0i(Lgt)
    set ASw = ASw - 1
    return Cgt
endfunction
function tCt takes integer rCt, string sCt returns nothing
    set DSw[ASw] = sCt
    set ASw = ASw + 1
    call GVw(Hv, rCt, $00000000, "when calling put in FateDestinyUnlocker, line 332")
    call eys(Jv, rCt, "when calling remove in FateDestinyUnlocker, line 333")
    call wru(rCt, false)
    call eys(Nv, rCt, "when calling remove in FateDestinyUnlocker, line 335")
    set ASw = ASw - 1
endfunction
function A_r takes integer I_r, boolean P_r returns nothing
    set JM[I_r] = P_r
endfunction
function qsi takes integer ysi, boolean psi, string esi returns nothing
    set DSw[ASw] = esi
    set ASw = ASw + 1
    if MC[ysi] == 0 then
        if ysi == 0 then
            call tNr("Nullpointer exception when calling CustomHero.setCritterActive", "when calling error in CustomHero, line 259")
        else
            call tNr("Called CustomHero.setCritterActive on invalid object.", "when calling error in CustomHero, line 259")
        endif
    endif
    call A_r(ysi, psi)
    set ASw = ASw - 1
endfunction
function rZu takes unit wZu, real uZu returns nothing
    call SetUnitScale(wZu, uZu, uZu, uZu)
endfunction
function Hcu takes unit Pcu, integer Acu, widget Dcu returns boolean
    return IssueTargetOrderById(Pcu, Acu, Dcu)
endfunction
function h2S takes integer f2S, string T2S returns unit
    local unit Y2S
    local unit G2S
    local unit g2S
    set DSw[ASw] = T2S
    set ASw = ASw + 1
    set G2S = dps(aD[PLAYER_NEUTRAL_PASSIVE], jF, ANw(hqs(f2S, "when calling getHero in Critters, line 85")), XSw, 0.)
    call Mvt(G2S)
    set g2S = G2S
    call Hcu(g2S, sD, hqs(f2S, "when calling getHero in Critters, line 86"))
    set Y2S = g2S
    set ASw = ASw - 1
    set LIw = Y2S
    set Y2S = null
    set G2S = null
    set g2S = null
    return LIw
endfunction
function cfu takes integer ifu, string Sfu returns unit
    set DSw[ASw] = Sfu
    set ASw = ASw + 1
    if DM[ifu] == null or(DM[ifu] != null and(not yXu(DM[ifu]))) then
        if DM[ifu] != null then
            call uFr(DM[ifu])
            set DM[ifu] = null
        endif
        set DM[ifu] = h2S(ifu, "when calling createCritter in CustomHero, line 277")
    endif
    set ASw = ASw - 1
    return DM[ifu]
endfunction
function v3w takes integer k3w, string j3w returns unit
    local unit x3w
    set DSw[ASw] = j3w
    set ASw = ASw + 1
    if MC[k3w] == 0 then
        if k3w == 0 then
            call tNr("Nullpointer exception when calling CustomHero.getCritter", "when calling error in CustomHero, line 272")
        else
            call tNr("Called CustomHero.getCritter on invalid object.", "when calling error in CustomHero, line 272")
        endif
    endif
    set x3w = cfu(k3w, "when calling getCritter in CustomHero, line 272")
    set ASw = ASw - 1
    set EIw = x3w
    set x3w = null
    return EIw
endfunction
function s9t takes integer M8t, string w9t returns nothing
    local unit u9t
    local unit r9t
    set DSw[ASw] = w9t
    set ASw = ASw + 1
    call qsi(M8t, false, "when calling setCritterActive in Critters, line 90")
    set u9t = v3w(M8t, "when calling getCritter in Critters, line 91")
    call rZu(u9t, 0.)
    set r9t = u9t
    call Mvt(r9t)
    set ASw = ASw - 1
    set u9t = null
    set r9t = null
endfunction
function FGr takes integer gGr, string hGr returns nothing
    set DSw[ASw] = hGr
    set ASw = ASw + 1
    call u3w(AM[gGr], "when calling clear in CustomHero, line 269")
    call s9t(gGr, "when calling removeCritter in CustomHero, line 270")
    set ASw = ASw - 1
endfunction
function yqu takes integer lqu, string bqu returns nothing
    set DSw[ASw] = bqu
    set ASw = ASw + 1
    if MC[lqu] == 0 then
        if lqu == 0 then
            call tNr("Nullpointer exception when calling CustomHero.resetCritterTiers", "when calling error in CustomHero, line 268")
        else
            call tNr("Called CustomHero.resetCritterTiers on invalid object.", "when calling error in CustomHero, line 268")
        endif
    endif
    call FGr(lqu, "when calling resetCritterTiers in CustomHero, line 268")
    set ASw = ASw - 1
endfunction
function lIt takes player PUt, boolean AUt, boolean DUt, string HUt returns boolean
    local boolean JUt
    local player KUt
    local player LUt
    local integer XUt
    local integer CUt
    local string VUt
    local integer BUt
    local group NUt
    local group MUt
    local unit wIt
    local integer uIt
    local item rIt
    local group sIt
    local unit tIt
    local integer iIt
    local integer SIt
    local item cIt
    local integer oIt
    local string OIt
    set DSw[ASw] = HUt
    set ASw = ASw + 1
    set JUt = false
    if GetTriggerPlayer() == null then
        set LUt = PUt
    else
        set LUt = GetTriggerPlayer()
    endif
    set KUt = LUt
    set XUt = hgr(KUt)
    set CUt = xus(XUt, "when calling getCustomPlayer in Repick, line 33")
    if GpS(lA, XUt, "when calling has in Repick, line 35") or(GpS(bA, XUt, "when calling has in Repick, line 35") and(not AUt)) or GpS(yA, XUt, "when calling has in Repick, line 35") then
        if AUt then
            set VUt = "load"
        else
            set VUt = "repick"
        endif
        call dii("|cffFF0000You can't " + VUt + " right now. Please wait for the current save/load action to be finished.|r", 15., KUt)
    elseif DUt or((not Vgt(CUt, "when calling getCommandsDisabled in Repick, line 38"))and(not hu[XUt]) and IsPlayerInForce(KUt, us) == false and IsPlayerInForce(KUt, ws) == false and IsPlayerInForce(KUt, hs) == false and IsPlayerInForce(KUt, At) == false) then
        if GetEventPlayerChatString() == "-repick" or GetEventPlayerChatString() == "-new" then
            call DisplayTimedTextToForce(bj_FORCE_ALL_PLAYERS, 10., "|c0000FF01Player|r |c01E7E702" + GetPlayerName(KUt) + "|r |c0000FF01used " + GetEventPlayerChatString() + "|r")
        endif
        call FlushStoredUnit(Ww, I2S(GetPlayerId(KUt)), I2S(GetPlayerId(KUt)))
        call SetPlayerName(KUt, Mt[1 + XUt])
        set Zt[1 + GetPlayerId(KUt)] = 0
        set sS[1 + GetPlayerId(KUt)] = 0
        call klS(nA, XUt, "when calling remove in Repick, line 49")
        set BUt = 0
        loop
            exitwhen BUt > 5
            call RemoveItem(UnitItemInSlot(Bt[1 + GetPlayerId(KUt)], BUt))
            call RemoveItem(UnitItemInSlot(Nt[1 + GetPlayerId(KUt)], BUt))
            set BUt = BUt + 1
        endloop
        call UOS($00000001, "when calling getGroup in Repick, line 55")
        set NUt = pIw
        call GroupEnumUnitsOfPlayer(NUt, KUt, Condition(cWw))
        set MUt = XbS(NUt)
        loop
            exitwhen not hJw(MUt)
            set wIt = tPr(MUt)
            if xMi(CUt, "when calling getCHero in Repick, line 58") != 0 and hqs(xMi(CUt, "when calling getCHero in Repick, line 58"), "when calling getHero in Repick, line 58") != null and hqs(xMi(CUt, "when calling getCHero in Repick, line 58"), "when calling getHero in Repick, line 58") == wIt and lst(wIt) and Jyr(mH, Aei(wIt), "when calling has in Repick, line 58") then
    call wHr(wps(mH, Aei(wIt), "when calling get in Repick, line 59"), "when calling dispatch_CallbackPeriodic_destroyCallbackPeriodic in Repick, line 59")
    call klS(mH, Aei(wIt), "when calling remove in Repick, line 60")
            endif
            call uFr(wIt)
            if GpS(CG, Aei(wIt), "when calling has in Repick, line 63") then
    call eys(CG, Aei(wIt), "when calling remove in Repick, line 64")
            endif
            if GpS(og, Aei(wIt), "when calling has in Repick, line 65") then
    call eys(og, Aei(wIt), "when calling remove in Repick, line 66")
            endif
        endloop
        call lxs(MUt)
        call Sju(NUt, "when calling release in Repick, line 67")
        call EnumItemsInRect(bj_mapInitialPlayableArea, null, wEw)
        set uIt = c5r(tH, "when calling iterator in Repick, line 72")
        loop
            exitwhen not Tji(uIt)
            set rIt = s2r(LXi(uIt), "when calling itemFromIndex in Repick, line 72")
            if GetItemUserData(rIt) == 1 + GetPlayerId(KUt) or v9S(rIt) == KUt then
    call RemoveItem(rIt)
            endif
        endloop
        call vms(uIt, "when calling close in Repick, line 72")
        call u3w(tH, "when calling clear in Repick, line 75")
        call UOS($00000001, "when calling getGroup in Repick, line 77")
        set NUt = pIw
        set bj_groupEnumTypeId = l2s(Iji("h02J", "when calling unObfuscate in Repick, line 78"), "when calling fromRawCode in Repick, line 78")
        call GroupEnumUnitsOfPlayer(NUt, KUt, filterGetUnitsOfPlayerAndTypeId)
        set sIt = XbS(NUt)
        loop
            exitwhen not hJw(sIt)
            set tIt = tPr(sIt)
            set iIt = 0
            loop
    exitwhen iIt > 5
    if ofi(tIt, iIt) != null then
                    call tdu(ofi(tIt, iIt))
    endif
    set iIt = iIt + 1
            endloop
        endloop
        call lxs(sIt)
        call Sju(NUt, "when calling release in Repick, line 84")
        if Jyr(sH, XUt, "when calling has in Repick, line 86") then
            set SIt = c5r(wps(sH, XUt, "when calling get in Repick, line 87"), "when calling iterator in Repick, line 87")
            loop
    exitwhen not Tji(SIt)
    set cIt = s2r(LXi(SIt), "when calling itemFromIndex in Repick, line 87")
    if cIt != null then
                    call tdu(cIt)
    endif
            endloop
            call vms(SIt, "when calling close in Repick, line 87")
            call u3w(wps(sH, XUt, "when calling get in Repick, line 90"), "when calling clear in Repick, line 90")
        endif
        call SetPlayerStateBJ(KUt, PLAYER_STATE_RESOURCE_GOLD, $00000000)
        call SetPlayerStateBJ(KUt, PLAYER_STATE_RESOURCE_LUMBER, $00000000)
        call SetPlayerStateBJ(KUt, PLAYER_STATE_RESOURCE_FOOD_USED, $00000000)
        call SetPlayerMaxHeroesAllowed($00000001, KUt)
        call PanCameraToTimedLocForPlayer(KUt, Location(2432., - 13440.), 0.)
        call GVw(vQ, XUt, $00000000, "when calling put in Repick, line 100")
        call GVw(xQ, XUt, O_i(false), "when calling put in Repick, line 101")
        call GVw(aI, XUt, O_i(false), "when calling put in Repick, line 102")
        call GVw(qI, XUt, O_i(false), "when calling put in Repick, line 103")
        call yqu(xMi(CUt, "when calling getCHero in Repick, line 106"), "when calling resetCritterTiers in Repick, line 106")
        call SetPlayerHandicapXP(KUt, 1.00)
        call O0s(KUt, tF)
        call DestroyQuest(rr[1 + XUt])
        call DestroyQuest(MS[1 + XUt])
        call DestroyQuest(WS[1 + XUt])
        call DestroyQuest(qr[1 + XUt])
        call DestroyQuest(dr[1 + XUt])
        call DestroyQuest(Lr[1 + XUt])
        call DestroyQuest(is[1 + XUt])
        call DestroyQuest(cs[1 + XUt])
        call DestroyQuest(Os[1 + XUt])
        call DestroyQuest(bs[1 + XUt])
        call DestroyQuest(st[1 + XUt])
        call DestroyQuest(St[1 + XUt])
        call DestroyQuest(ft[1 + XUt])
        call DestroyQuest(ci[1 + XUt])
        call DestroyQuest(oi[1 + XUt])
        call DestroyQuest(xS[1 + XUt])
        call DestroyQuest(QS[1 + XUt])
        call DestroyQuest(JS[1 + XUt])
        call DestroyQuest(LS[1 + XUt])
        call DestroyQuest(NS[1 + XUt])
        call DestroyQuest(wc[1 + XUt])
        call DestroyQuest(rc[1 + XUt])
        call DestroyQuest(ac[1 + XUt])
        call DestroyQuest(Ao[1 + XUt])
        call DestroyQuest(ES[1 + XUt])
        call DestroyQuest(ZS[1 + XUt])
        set rr[1 + XUt] = null
        set MS[1 + XUt] = null
        set WS[1 + XUt] = null
        set qr[1 + XUt] = null
        set dr[1 + XUt] = null
        set Lr[1 + XUt] = null
        set is[1 + XUt] = null
        set cs[1 + XUt] = null
        set Os[1 + XUt] = null
        set bs[1 + XUt] = null
        set st[1 + XUt] = null
        set St[1 + XUt] = null
        set ft[1 + XUt] = null
        set ci[1 + XUt] = null
        set oi[1 + XUt] = null
        set xS[1 + XUt] = null
        set QS[1 + XUt] = null
        set JS[1 + XUt] = null
        set LS[1 + XUt] = null
        set NS[1 + XUt] = null
        set wc[1 + XUt] = null
        set rc[1 + XUt] = null
        set ac[1 + XUt] = null
        set Ao[1 + XUt] = null
        set ES[1 + XUt] = null
        set ZS[1 + XUt] = null
        set sc[1 + XUt] = 0
        set qc[1 + XUt] = 0
        set uc[1 + XUt] = 0
        set VS[1 + XUt] = 0
        set BS[1 + XUt] = 0
        set vS[1 + XUt] = 0
        set KS[1 + XUt] = 0
        set AS[1 + XUt] = 0
        set os[1 + XUt] = 0
        set ar[1 + XUt] = 0
        set li[1 + XUt] = 0
        set Oi[1 + XUt] = 0
        set Ss[1 + XUt] = 0
        set ur[1 + XUt] = 0
        set DS[1 + XUt] = 0
        set HS[1 + XUt] = 0
        set kt[1 + XUt] = 0
        set si[1 + XUt] = 0
        set Si[1 + XUt] = 0
        set ds[1 + XUt] = 0
        set Rr[1 + XUt] = 0
        set Po[1 + XUt] = 0
        set Eo[1 + XUt] = 0
        set cO[1 + XUt] = 0
        set Zo[1 + XUt] = 0
        call ForceRemovePlayer(Nu, KUt)
        call ForceRemovePlayer(lt, KUt)
        call ForceRemovePlayer(At, KUt)
        call ForceRemovePlayer(us, KUt)
        call ForceRemovePlayer(hs, KUt)
        call ForceRemovePlayer(Vr, KUt)
        call ForceRemovePlayer(fs, KUt)
        call ForceRemovePlayer(Cr, KUt)
        call ForceRemovePlayer(kr, KUt)
        if not V[(1 + GetPlayerId(KUt)) * 1000 + fkS(hqs(xMi(CUt, "when calling getCHero in Repick, line 216"), "when calling getHero in Repick, line 216"))]then
            call ForceRemovePlayer(ec[$00000001], KUt)
            call ForceRemovePlayer(pc[$00000001], KUt)
        endif
        call ForceRemovePlayer(ec[$00000002], KUt)
        call ForceRemovePlayer(ec[$00000003], KUt)
        call ForceRemovePlayer(ec[$00000004], KUt)
        call ForceRemovePlayer(ec[$00000005], KUt)
        call ForceRemovePlayer(ec[$00000006], KUt)
        call ForceRemovePlayer(ec[$00000007], KUt)
        call ForceRemovePlayer(pc[$00000002], KUt)
        call ForceRemovePlayer(pc[$00000003], KUt)
        call ForceRemovePlayer(pc[$00000004], KUt)
        call ForceRemovePlayer(pc[$00000005], KUt)
        call ForceRemovePlayer(pc[$00000006], KUt)
        call ForceRemovePlayer(pc[$00000007], KUt)
        call ForceRemovePlayer(ls, KUt)
        call ForceRemovePlayer(ys, KUt)
        call ForceRemovePlayer(Vt, KUt)
        call ForceRemovePlayer(EG, KUt)
        call ForceRemovePlayer(do, KUt)
        call ForceRemovePlayer(Nu, KUt)
        call ForceRemovePlayer(Sc, KUt)
        call ForceRemovePlayer(nr, KUt)
        call ForceRemovePlayer(fr, KUt)
        call ForceRemovePlayer(Fr, KUt)
        call ForceRemovePlayer(Tr, KUt)
        call ForceRemovePlayer(Yr, KUt)
        call ForceRemovePlayer(Gr, KUt)
        call ForceRemovePlayer(Kr, KUt)
        call ForceRemovePlayer(Xr, KUt)
        call ForceRemovePlayer(Mr, KUt)
        call ForceRemovePlayer(as, KUt)
        call ForceRemovePlayer(ns, KUt)
        call ForceRemovePlayer(Ys, KUt)
        call ForceRemovePlayer(Fs, KUt)
        call ForceRemovePlayer(ks, KUt)
        call ForceRemovePlayer(xs, KUt)
        call ForceRemovePlayer(Es, KUt)
        call ForceRemovePlayer(Zs, KUt)
        call ForceRemovePlayer(Rs, KUt)
        call ForceRemovePlayer(Ts, KUt)
        call ForceRemovePlayer(Gs, KUt)
        call ForceRemovePlayer(rt, KUt)
        call ForceRemovePlayer(Tt, KUt)
        call ForceRemovePlayer(Gt, KUt)
        call ForceRemovePlayer(gt, KUt)
        call ForceRemovePlayer(Yt, KUt)
        call ForceRemovePlayer(Ft, KUt)
        call ForceRemovePlayer(jt, KUt)
        call ForceRemovePlayer(ti, KUt)
        call ForceRemovePlayer(ii, KUt)
        call ForceRemovePlayer(Ot, KUt)
        call ForceRemovePlayer(Gi, KUt)
        call ForceRemovePlayer(IS[$00000001], KUt)
        call ForceRemovePlayer(IS[$00000002], KUt)
        call ForceRemovePlayer(IS[$00000003], KUt)
        call ForceRemovePlayer(IS[$00000004], KUt)
        call ForceRemovePlayer(IS[$00000005], KUt)
        call ForceRemovePlayer(IS[$00000006], KUt)
        call ForceRemovePlayer(PS[$00000006], KUt)
        call ForceRemovePlayer(IS[$00000007], KUt)
        call ForceRemovePlayer(PS[$00000007], KUt)
        call ForceRemovePlayer(IS[$00000008], KUt)
        call ForceRemovePlayer(Rt, KUt)
        call ForceRemovePlayer(PS[$00000008], KUt)
        call ForceRemovePlayer(IS[$00000009], KUt)
        call ForceRemovePlayer(IS[$0000000A], KUt)
        call ForceRemovePlayer(yt, KUt)
        call ForceRemovePlayer(nc[$00000001], KUt)
        call ForceRemovePlayer(nc[$00000002], KUt)
        call ForceRemovePlayer(US, KUt)
        call ForceRemovePlayer(dc[$00000001], KUt)
        call ForceRemovePlayer(dc[$00000002], KUt)
        call ForceRemovePlayer(dc[$00000003], KUt)
        call ForceRemovePlayer(PS[$0000000B], KUt)
        call ForceRemovePlayer(IS[$0000000B], KUt)
        call ForceRemovePlayer(IS[$0000000C], KUt)
        call ForceRemovePlayer(IS[$0000000D], KUt)
        call ForceRemovePlayer(IS[$0000000E], KUt)
        call ForceRemovePlayer(IS[$0000000F], KUt)
        set oIt = 0
        loop
            exitwhen oIt > 20
            if Rc[oIt] != null then
    call ForceRemovePlayer(Rc[oIt], KUt)
            endif
            set oIt = oIt + 1
        endloop
        call ForceRemovePlayer(rS, KUt)
        call ForceRemovePlayer(Kt, KUt)
        call ForceRemovePlayer(bt[1 + XUt], KUt)
        call ForceRemovePlayer(jS, KUt)
        call ForceRemovePlayer(uS, KUt)
        call ForceRemovePlayer(Ns, KUt)
        call ForceRemovePlayer(ot, KUt)
        call ForceRemovePlayer(iO, KUt)
        call ForceRemovePlayer(rO, KUt)
        call ForceRemovePlayer(sO, KUt)
        call ForceRemovePlayer(Uo[$00000001], KUt)
        call ForceRemovePlayer(Uo[$00000002], KUt)
        call ForceRemovePlayer(Uo[$00000003], KUt)
        call ForceRemovePlayer(Uo[$00000004], KUt)
        call ForceRemovePlayer(wO, KUt)
        call ForceRemovePlayer(mt, KUt)
        call ForceRemovePlayer(It, KUt)
        call ForceRemovePlayer(Xt, KUt)
        set yr[1 + XUt] = LMt(oQu(Sp), Gcw)
        call eys(iH, XUt, "when calling remove in Repick, line 328")
        call eys(SH, XUt, "when calling remove in Repick, line 329")
        call eys(cH, XUt, "when calling remove in Repick, line 330")
        call eys(oH, XUt, "when calling remove in Repick, line 331")
        call eys(OH, XUt, "when calling remove in Repick, line 332")
        call GVw(ax, XUt, xw, "when calling put in Repick, line 335")
        call klS(mx, XUt, "when calling remove in Repick, line 336")
        call GVw(GW, XUt, $00000000, "when calling put in Repick, line 339")
        call GVw(jL, XUt, $00000000, "when calling put in Repick, line 342")
        call tCt(XUt, "when calling resetDestinyForPlayer in Repick, line 345")
        set JUt = true
    elseif AUt then
        if AUt then
            set OIt = "load"
        else
            set OIt = "repick"
        endif
        call dii("|cffFF0000You can't " + OIt + " right now. Repick is disabled in dungeon, while casting ultimate spells, and while metamorphed.|r", 15., KUt)
    endif
    set ASw = ASw - 1
    set KUt = null
    set LUt = null
    set NUt = null
    set MUt = null
    set wIt = null
    set rIt = null
    set sIt = null
    set tIt = null
    set cIt = null
    return JUt
endfunction
function ols takes player tls, string ils returns boolean
    local boolean Sls = false
    local integer cls = cA
    loop
        exitwhen cls < 0
        set Lu = iA[cls]
        set Eu = ils
        set Pu = ZKu(Eu)
        if Pu == true then
            set Sls = true
            exitwhen true
        endif
        set cls = cls - 1
    endloop
    return Sls
endfunction
function wTr takes integer BRr, string NRr returns boolean
    local boolean MRr
    set DSw[ASw] = NRr
    set ASw = ASw + 1
    set MRr = GpS(qA, BRr, "when calling has in NpcHandler, line 74")
    set ASw = ASw - 1
    return MRr
endfunction
function yDs takes string lDs returns integer
    local integer bDs
    set DSw[ASw] = lDs
    set ASw = ASw + 1
    if NX == 0 then
        if MX < 32768 then
            set MX = MX + 1
            set bDs = MX
            set wC[bDs] = 915
        else
            call tNr("Out of memory: Could not create CallbackSingle_doAfter_NpcHandler.", "when calling error in NpcHandler, line 246")
            set bDs = 0
        endif
    else
        set NX = NX - 1
        set bDs = BX[NX]
        set wC[bDs] = 915
    endif
    set ASw = ASw - 1
    return bDs
endfunction
function y_u takes string l_u returns integer
    local integer b_u
    set DSw[ASw] = l_u
    set ASw = ASw + 1
    if NX == 0 then
        if MX < 32768 then
            set MX = MX + 1
            set b_u = MX
            set wC[b_u] = 916
        else
            call tNr("Out of memory: Could not create CallbackSingle_doAfter_NpcHandler.", "when calling error in NpcHandler, line 257")
            set b_u = 0
        endif
    else
        set NX = NX - 1
        set b_u = BX[NX]
        set wC[b_u] = 916
    endif
    set ASw = ASw - 1
    return b_u
endfunction
function HGs takes player eGs, string qGs, string aGs returns nothing
    local integer nGs
    local integer dGs
    local integer fGs
    local unit RGs
    local integer TGs
    local integer YGs
    local string GGs
    local boolean gGs
    local boolean hGs
    local boolean FGs
    local group kGs
    local unit jGs
    local integer xGs
    local integer vGs
    local integer mGs
    local integer QGs
    local unit WGs
    local integer EGs
    local integer ZGs
    local integer UGs
    local integer IGs
    local integer PGs
    local real AGs
    local real DGs
    set DSw[ASw] = aGs
    set ASw = ASw + 1
    set nGs = hgr(eGs)
    if wds(khu(qGs, " ", "when calling split in NpcHandler, line 100"), "when calling size in NpcHandler, line 100") > 2 then
        call Y2r(GetTriggeringTrigger())
        call dii(Iji("|cffff0000Invalid load command.|r", "when calling unObfuscate in NpcHandler, line 102"), 3., eGs)
        set ASw = ASw - 1
        set RGs = null
        set kGs = null
        set jGs = null
        set WGs = null
        return
    endif
    set dGs = xus(nGs, "when calling getCustomPlayer in NpcHandler, line 105")
    set fGs = xMi(dGs, "when calling getCHero in NpcHandler, line 106")
    set RGs = hqs(fGs, "when calling getHero in NpcHandler, line 107")
    set TGs = r5S(RGs)
    if not fhi(eGs) then
        if not(Jyr(OA, nGs, "when calling has in NpcHandler, line 111") and TYt(wps(OA, nGs, "when calling get in NpcHandler, line 111"))) then
            if hUu(qGs, Iji("-load ", "when calling unObfuscate in NpcHandler, line 112")) and(not GpS(aP, nGs, "when calling has in NpcHandler, line 112")) and(not GpS(bA, nGs, "when calling has in NpcHandler, line 113")) then
    if not Kh then
                    call vwt(bA, nGs, "when calling add in NpcHandler, line 115")
                    set AGs = sA
                    set YGs = Qys("when calling alloc_CallbackSingle_doAfter_NpcHandler in NpcHandler, line 117")
                    call RUs(YGs)
                    set buw[YGs] = nGs
                    call Ybr(AGs, YGs, "when calling doAfter in NpcHandler, line 117")
    endif
    if lIt(eGs, true, false, "when calling repickResetPlayerStats in NpcHandler, line 120") then
                    set GGs = SubStringBJ(qGs, $00000007, StringLength(qGs))
                    set gGs = false
                    set hGs = false
                    set FGs = false
                    set gGs = ols(eGs, GGs)
                    if (not gGs)and V2w(wi[nGs + 1], "#") then
                        call dSs(eGs, true)
                        set gGs = ols(eGs, GGs)
                    endif
                    call dSs(eGs, false)
                    if not gGs then
                        call dii(Iji("|cffff0000Load Failed. Decoding error. Please recheck your code.|r", "when calling unObfuscate in NpcHandler, line 135"), 5., eGs)
                        call Y2r(GetTriggeringTrigger())
                        set ASw = ASw - 1
                        set RGs = null
                        set kGs = null
                        set jGs = null
                        set WGs = null
                        return
                    endif
                    if gGs and Lu == Ew then
                        set hGs = true
                        call dii(Iji("Loadcode is from a bugged version of Teve R4
To support fair-play and due to many more balance changes and bugfixxes, your levels might be reduced.", "when calling unObfuscate in NpcHandler, line 141"), 5., eGs)
                    elseif gGs and Lu == Lw or Lu == Cw then
                        set FGs = true
                    endif
                    if not gGs then
                        call dii(Iji("|cffff0000Load Failed. Please recheck your code.|r", "when calling unObfuscate in NpcHandler, line 146"), 5., eGs)
                        call Y2r(GetTriggeringTrigger())
                        set ASw = ASw - 1
                        set RGs = null
                        set kGs = null
                        set jGs = null
                        set WGs = null
                        return
                    endif
                    if gGs then
                        set eA = lVs(eGs, Condition(SWw))
                        set kGs = XbS(eA)
                        loop
                            exitwhen not hJw(kGs)
                            set jGs = tPr(kGs)
                            if GpS(pA, r5S(jGs), "when calling has in NpcHandler, line 153") then
                                set gGs = false
                            endif
                        endloop
                        call lxs(kGs)
                        if not gGs then
                            call dii(Iji("You cannot load while being in werebear or werewolf form.", "when calling unObfuscate in NpcHandler, line 156"), 3., eGs)
                        endif
                    endif
                    if gGs then
                        call dii(Iji("|cffffcc00Load Successful.|r", "when calling unObfuscate in NpcHandler, line 159"), 5., eGs)
                        call SetPlayerMaxHeroesAllowed($00000000, eGs)
                        call ForceAddPlayer(Nu, eGs)
                        call ForGroupBJ(lVs(eGs, Condition(cWw)), oWw)
                        set ir = Uu
                        set Uu = 1
                        set sS[1 + nGs] = Zu[Uu]
                        set Uu = Uu + 1
                        set oS[1 + nGs] = Zu[Uu]
                        set Uu = Uu + 1
                        call SetPlayerStateBJ(eGs, PLAYER_STATE_RESOURCE_FOOD_USED, Zu[Uu])
                        set Uu = Uu + 1
                        set Eo[1 + nGs] = Zu[Uu]
                        set Uu = Uu + 1
                        set Zo[1 + nGs] = Zu[Uu]
                        set Uu = Uu + 1
                        set Po[1 + nGs] = Zu[Uu]
                        set Uu = Uu + 1
                        set xGs = 0
                        set vGs = 0
                        if FGs then
                            set xGs = Zu[Uu]
                            set Uu = Uu + 1
                            set vGs = Zu[Uu]
                            set Uu = Uu + 1
                        endif
                        set mGs = 1
                        set QGs = Zu[Uu]
                        set WGs = null
                        loop
                            exitwhen not(mGs <= QGs)
                            set Uu = Uu + 1
                            set Mu = TFS(Zu[Uu])
                            if not GpS(dA, Mu, "when calling has in NpcHandler, line 198") then
                                call dii(Iji("The loaded code contains invalid data! Cannot decode that black magic.", "when calling unObfuscate in NpcHandler, line 199"), 3., eGs)
                                call lIt(eGs, true, true, "when calling repickResetPlayerStats in NpcHandler, line 200")
                                call Y2r(GetTriggeringTrigger())
                                set ASw = ASw - 1
                                set RGs = null
                                set kGs = null
                                set jGs = null
                                set WGs = null
                                return
                            endif
                            set WGs = CreateUnitAtLoc(eGs, Mu, yr[1 + nGs], bj_UNIT_FACING)
                            set Uu = Uu + 1
                            call SetHeroXP(WGs, Zu[Uu], false)
                            if hGs then
                                if OUr(r5S(WGs), "when calling isJobStage4 in NpcHandler, line 209") then
                                    call uFr(WGs)
                                    set WGs = CreateUnitAtLoc(eGs, Mu, yr[1 + nGs], bj_UNIT_FACING)
                                elseif wTr(r5S(WGs), "when calling isJobStage3 in NpcHandler, line 212") then
                                    if boS(WGs) > 65 then
                                        call uFr(WGs)
                                        set WGs = CreateUnitAtLoc(eGs, Mu, yr[1 + nGs], bj_UNIT_FACING)
                                        call Yis(WGs, $00000041, false)
                                    endif
                                endif
                            endif
                            set Uu = Uu + 1
                            if hGs then
                                call J7i(WGs, oQu(Sp), Gcw)
                            else
                                call J7i(WGs, xvt(Zu[Uu]), xvt(Zu[Uu + 1]))
                            endif
                            call UtS(WGs, eGs)
                            call Cys(WGs)
                            set Uu = Uu + 2
                            if not hGs then
                                loop
                                    exitwhen not(Uu <= ir)
                                    set EGs = 1
                                    set ZGs = Zu[Uu + 1]
                                    loop
                                        exitwhen not(EGs <= ZGs)
                                        if Zu[Uu] == 132 and r5S(WGs) == qk then
                                            set Zu[Uu] = 208
                                        endif
                                        call SelectHeroSkill(WGs, Ju[Zu[Uu]])
                                        set EGs = EGs + 1
                                    endloop
                                    set Uu = Uu + 1
                                endloop
                            endif
                            set mGs = mGs + 1
                        endloop
                        if WGs == null then
                            call dii(Iji("The loaded code contains invalid data! Cannot decode that void magic.", "when calling unObfuscate in NpcHandler, line 240"), 3., eGs)
                            call lIt(eGs, true, true, "when calling repickResetPlayerStats in NpcHandler, line 241")
                            call Y2r(GetTriggeringTrigger())
                            set ASw = ASw - 1
                            set RGs = null
                            set kGs = null
                            set jGs = null
                            set WGs = null
                            return
                        endif
                        if boS(WGs) == 300 then
                            set UGs = yDs("when calling alloc_CallbackSingle_doAfter_NpcHandler in NpcHandler, line 246")
                            call RUs(UGs)
                            set yuw[UGs] = WGs
                            call Ybr(1., UGs, "when calling doAfter in NpcHandler, line 246")
                        endif
                        set DGs = iF
                        set IGs = y_u("when calling alloc_CallbackSingle_doAfter_NpcHandler in NpcHandler, line 257")
                        call RUs(IGs)
                        set puw[IGs] = WGs
                        set euw[IGs] = vGs
                        set quw[IGs] = nGs
                        call Ybr(DGs, IGs, "when calling doAfter in NpcHandler, line 257")
                        set PGs = j9S("when calling alloc_CallbackSingle_doAfter_NpcHandler in NpcHandler, line 261")
                        call RUs(PGs)
                        set auw[PGs] = WGs
                        set nuw[PGs] = xGs
                        call Ybr(1., PGs, "when calling doAfter in NpcHandler, line 261")
                        call Xau("Player " + cdr(eGs) + " has loaded " + C4i(Ih[nGs], Ph[nGs], Ah[nGs]) + B2r(WGs) + "|r level " + C4i(Ih[nGs], Ph[nGs], Ah[nGs]) + fju(boS(WGs)) + "|r", 15.)
                    endif
    endif
            elseif GpS(aP, nGs, "when calling has in NpcHandler, line 271") then
    call dii(Iji("For your protection saveload is disabled by anticheat.", "when calling unObfuscate in NpcHandler, line 272"), 3., eGs)
            elseif GpS(bA, nGs, "when calling has in NpcHandler, line 273") then
    call dii(Iji("Please wait (up to 5.0 seconds) before loading again.", "when calling unObfuscate in NpcHandler, line 274"), 3., eGs)
            else
    call dii(Iji("Please wait before saving again.", "when calling unObfuscate in NpcHandler, line 276"), 3., eGs)
            endif
        else
            call dii(Iji("Due to previous actions, loading is currently disabled.", "when calling unObfuscate in NpcHandler, line 278"), 3., eGs)
        endif
    else
        call dii(Iji("You cannot use save/load/repick in dungeons!", "when calling unObfuscate in NpcHandler, line 280"), 3., eGs)
        if GpS(pA, iCi(fGs, "when calling getHeroType in NpcHandler, line 282"), "when calling has in NpcHandler, line 282") or GpS(pA, TGs, "when calling has in NpcHandler, line 282") or TGs == fk or TGs == 1211117640 then
            call dii(Iji("If you are NOT in a dungeon and got stuck in wrong form, try to use '-unform' command.", "when calling unObfuscate in NpcHandler, line 283"), 10., eGs)
        endif
    endif
    call krS(dGs, "when calling cameraCheckLock in NpcHandler, line 285")
    call Y2r(GetTriggeringTrigger())
    set ASw = ASw - 1
    set RGs = null
    set kGs = null
    set jGs = null
    set WGs = null
endfunction
function KVw takes string JVw returns nothing
    set DSw[ASw] = JVw
    set ASw = ASw + 1
    call SqS(GetTriggeringTrigger())
    call HGs(GetTriggerPlayer(), GetEventPlayerChatString(), "when calling saveLoad_Load in NpcHandler, line 95")
    set ASw = ASw - 1
endfunction
function Iht takes nothing returns nothing
    set ASw = 0
    call KVw("via function reference NpcHandler, line 61")
endfunction
function wHu takes nothing returns boolean
    return GetUnitTypeId(GetTriggerUnit()) == 1211118160 or GetUnitTypeId(GetTriggerUnit()) == 1211118161
endfunction
function Iot takes nothing returns boolean
    return GetSpellAbilityId() == 1093679431 and GetPlayerState(GetOwningPlayer(GetTriggerUnit()), PLAYER_STATE_RESOURCE_FOOD_USED) == 100 and oS[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))] == 1 and wHu()
endfunction
function IqS takes nothing returns boolean
    call BlzGetOriginFrame(ORIGIN_FRAME_GAME_UI, $00000000)
    return true
endfunction
function Iqi takes nothing returns boolean
    return true
endfunction
function Iru takes nothing returns boolean
    return GetUnitTypeId(GetOrderTargetUnit()) == ct and IsPlayerInForce(GetOwningPlayer(GetTriggerUnit()), Rt) and IsUnitInGroup(GetTriggerUnit(), kpu(300., GetUnitLoc(GetOrderTargetUnit())))
endfunction
function Its takes nothing returns nothing
    call ForceAddPlayer(rt, GetOwningPlayer(GetTriggerUnit()))
    call DisplayTextToForce(MwS(GetOwningPlayer(GetTriggerUnit())), "|cffffcc00Fenrir|r : |cff87ceebWe meet at last, shapeshifter. Your deeds are well known throughout the land, and I predicted that you would finally search for me when you have honed your skills to the highest degree...and so you have. Go to Mount Twilight, kill 50 ogres there, and return to me. Only then shall you be able to learn the final arts of true shapeshifting.")
    call PlaySoundBJ(Se)
    call T_i(GetOwningPlayer(GetTriggerUnit()), $00000000, "4th Job Advancement Quest", "I have to kill 50 Ogres.", "ReplaceableTextures\\PassiveButtons\\PASBTNGenericSpellImmunity.blp")
    set st[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))] = bj_lastCreatedQuest
    set kt[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))] = 0
endfunction
function RVt takes nothing returns boolean
    return DS[1 + GetPlayerId(GetOwningPlayer(GetKillingUnit()))] >= 50
endfunction
function Itu takes nothing returns nothing
    set DS[1 + GetPlayerId(GetOwningPlayer(GetKillingUnit()))] = DS[1 + GetPlayerId(GetOwningPlayer(GetKillingUnit()))] + 1
    if RVt() then
        call QuestMessageBJ(MwS(GetOwningPlayer(GetKillingUnit())), $00000002, "|cffffcc00Demonology|r Quest Requirement Completed.")
    else
        call QuestMessageBJ(MwS(GetOwningPlayer(GetKillingUnit())), $00000001, I2S(DS[1 + GetPlayerId(GetOwningPlayer(GetKillingUnit()))]) + " demon(s) killed.")
    endif
endfunction
function P7w takes nothing returns boolean
    return RectContainsItem(GetOrderTargetItem(), ey)
endfunction
function Wls takes nothing returns boolean
    return GetItemUserData(GetOrderTargetItem()) != 0 and GetItemUserData(GetOrderTargetItem()) != 1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))
endfunction
function Ius takes nothing returns nothing
    if P7w() then
        call DisplayTextToForce(MwS(GetOwningPlayer(GetTriggerUnit())), "|cffff0000You cannot destroy any items while in the Loot Area.|r")
        call SetItemInvulnerable(GetOrderTargetItem(), true)
        call TriggerSleepAction(.5)
        call SetItemInvulnerable(GetOrderTargetItem(), false)
    endif
    if Wls() then
        call DisplayTextToForce(MwS(GetOwningPlayer(GetTriggerUnit())), "|cffff0000You cannot destroy an item that does not belong to you.|r")
        call SetItemInvulnerable(GetOrderTargetItem(), true)
        call TriggerSleepAction(.5)
        call SetItemInvulnerable(GetOrderTargetItem(), false)
    endif
endfunction
function Iut takes nothing returns boolean
    return (GetItemTypeId(GetManipulatedItem()) == 1227895890 and IsUnitType(GetTriggerUnit(), UNIT_TYPE_HERO) and IsPlayerInForce(GetOwningPlayer(GetTriggerUnit()), Uo[$00000001]) == false and Zo[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))] == 1 and Po[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))] == 2 and Eo[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))] >= 75) != false
endfunction
function Iyi takes nothing returns nothing
    call DisableTrigger(GetTriggeringTrigger())
endfunction
function J4r takes nothing returns nothing
    call RemoveItem(GetManipulatedItem())
    call ForceAddPlayer(IS[$00000008], GetOwningPlayer(GetTriggerUnit()))
    call DisplayTextToForce(MwS(GetOwningPlayer(GetTriggerUnit())), "|cffffcc00Arnold|r : Greetings, adventurer. You look pretty handy with a weapon...Say, can you help me with a little problem? See, I received word that some nasty Goblin has set up explosives in a Gold Mine nearby. He thinks by doing this, we wouldn't dare to venture in and hence, allowing him to mine gold in peace. Obviously we can't have that, can we? If anything goes awry, either the King might get furious because he's stealing gold from the King's lands...or the explosives go off, and people die. Find this Goblin, make him squeal, and bring me some of his explosives as proof.")
    call T_i(GetOwningPlayer(GetTriggerUnit()), $00000000, "Gold Rush", "Kill a Goblin that is setting up explosives in the nearby Gold Mine. Bring back his explosives as proof of the deed.", "ReplaceableTextures\\CommandButtons\\BTNGoldMine.blp")
    set ft[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))] = bj_lastCreatedQuest
endfunction
function J6i takes nothing returns nothing
    call SetUnitLifePercentBJ(GetEnumUnit(), 100.)
endfunction
function J9i takes nothing returns boolean
    return GetUnitTypeId(GetOrderTargetUnit()) == 1747988815 and UnitHasItemOfTypeBJ(GetTriggerUnit(), $49303058) == false and GetPlayerState(GetOwningPlayer(GetTriggerUnit()), PLAYER_STATE_RESOURCE_LUMBER) >= 1 and IsPlayerInForce(GetOwningPlayer(GetTriggerUnit()), Ys) and IsUnitInGroup(GetTriggerUnit(), kpu(300., GetUnitLoc(GetOrderTargetUnit())))
endfunction
function vFs takes nothing returns boolean
    return IsPlayerInForce(GetOwningPlayer(GetTriggerUnit()), ec[$00000005]) and IsPlayerInForce(GetOwningPlayer(GetTriggerUnit()), ec[$00000006]) == false
endfunction
function JBr takes nothing returns nothing
    call RemoveItem(GetManipulatedItem())
    if vFs() then
        call ForceAddPlayer(pc[$00000006], GetOwningPlayer(GetTriggerUnit()))
        call DisplayTextToForce(MwS(GetOwningPlayer(GetTriggerUnit())), "|cffffcc00Arnold|r : Good! You're ready. Now I want you to report to Kiba, an Agent of Silvasia Civil Force that I've deployed to Glacier Forest weeks ago. He'll give you further instructions on what you can do to aid his evacuation team.")
        call T_i(GetOwningPlayer(GetTriggerUnit()), $00000000, "Sixth Man", "I have to meet up with Kiba in the Glacier Forest to recieve further instructions.", "ReplaceableTextures\\CommandButtons\\BTNFlyingMachine.blp")
        set LS[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))] = bj_lastCreatedQuest
    endif
endfunction
function B3s takes nothing returns boolean
    return GetUnitTypeId(GetDyingUnit()) == 1429221431
endfunction
function vEu takes nothing returns boolean
    return GetUnitTypeId(GetDyingUnit()) == 1848652122
endfunction
function JCt takes nothing returns nothing
    call R2I(GetTimeOfDay())
    if vEu() then
        call DisplayTimedTextToForce(Rc[$00000007], 5., "|cffffcc00You are now transferred to the next level.|r")
        call PolledWait(c)
        set vo = GetRectCenter(Qp)
        call ForGroupBJ(fc[$00000007], Dlw)
        call ForForce(Rc[$00000007], Hlw)
        call RemoveLocation(vo)
    endif
    if B3s() then
    endif
endfunction
function JDt takes nothing returns boolean
    return GetOrderTargetUnit() == oG and IsUnitInGroup(GetTriggerUnit(), kpu(300., GetUnitLoc(GetOrderTargetUnit()))) and IsPlayerInForce(GetOwningPlayer(GetTriggerUnit()), At) == false
endfunction
function JIt takes nothing returns nothing
    call PlaySoundAtPointBJ(te, 100., GetUnitLoc(GetTriggerUnit()), 0.)
    call DisableTrigger(GetTriggeringTrigger())
    call TriggerSleepAction(30.)
    call EnableTrigger(GetTriggeringTrigger())
endfunction
function qfi takes string pfi returns nothing
    local integer efi
    set DSw[ASw] = pfi
    set ASw = ASw + 1
    set efi =- 1
    if GpS(gQ, hgr(GetTriggerPlayer()), "when calling has in PlayerCommands, line 294") then
        set efi = hgr(GetTriggerPlayer())
    elseif GpS(gQ, hgr(GetEnumPlayer()), "when calling has in PlayerCommands, line 296") then
        set efi = hgr(GetEnumPlayer())
    endif
    call GZs(xus(efi, "when calling getCustomPlayer in PlayerCommands, line 298"), true, "when calling setCommandsDisabled in PlayerCommands, line 298")
    set ASw = ASw - 1
endfunction
function JJu takes nothing returns nothing
    set ASw = 0
    call qfi("via function reference PlayerCommands, line 292")
endfunction
function JKr takes nothing returns nothing
    call FlushChildHashtableBJ(GetHandleIdBJ(GetEnumUnit()), jc)
endfunction
function JNi takes nothing returns boolean
    return GetUnitTypeId(GetOrderTargetUnit()) == 1747988569 and IsPlayerInForce(GetOwningPlayer(GetTriggerUnit()), Xr) and IsPlayerInForce(GetOwningPlayer(GetTriggerUnit()), Vr) and IsPlayerInForce(GetOwningPlayer(GetTriggerUnit()), Mr) == false and IsUnitInGroup(GetTriggerUnit(), kpu(300., GetUnitLoc(GetOrderTargetUnit())))
endfunction
function JVu takes nothing returns nothing
    if not bw then
        call DisableTrigger(YR)
        call DisableTrigger(dR)
        call DisableTrigger(fR)
        call DisableTrigger(RR)
        call DisableTrigger(TR)
        call DestroyTimerDialog(fi)
        set vo = GetRectCenter(ly)
        call ForGroupBJ(fc[$0000000B], Kmw)
        call DisplayTimedTextToForce(Rc[$0000000B], 15., "|cffffcc00The stage resets because you have taken too long to pick a portal!|r")
        call ForForce(Rc[$0000000B], Lmw)
        call RemoveLocation(vo)
        call TriggerExecute(aR)
    endif
endfunction
function YFt takes string TFt returns nothing
    set DSw[ASw] = TFt
    set ASw = ASw + 1
    call GlS(GetTriggerUnit(), $00000002, false, "when calling onRevivalLocationEntered in RevivalLocations, line 122")
    set ASw = ASw - 1
endfunction
function JXu takes nothing returns nothing
    set ASw = 0
    call YFt("via function reference RevivalLocations, line 121")
endfunction
function JYs takes nothing returns boolean
    return GetUnitTypeId(GetOrderTargetUnit()) == 1848651842 and IsPlayerInForce(GetOwningPlayer(GetTriggerUnit()), Tr) and IsUnitInGroup(GetTriggerUnit(), kpu(300., GetUnitLoc(GetOrderTargetUnit())))
endfunction
function AZt takes string ZZt returns nothing
    local unit UZt
    local integer IZt
    local item PZt
    set DSw[ASw] = ZZt
    set ASw = ASw + 1
    if GetTriggerEventId() == EVENT_PLAYER_UNIT_SELL_ITEM then
        set UZt = GetSellingUnit()
        set IZt = hgr(eDs(GetBuyingUnit()))
        set PZt = GetSoldItem()
        if GpS(gQ, IZt, "when calling has in Items_Pickup_Drop, line 831") and PZt != null and(not Jyr(ex, Xdu(PZt), "when calling has in Items_Pickup_Drop, line 831")) and UZt != null and GpS(jI, r5S(UZt), "when calling has in Items_Pickup_Drop, line 832") then
            call GVw(ex, Xdu(PZt), IZt, "when calling put in Items_Pickup_Drop, line 833")
        endif
    endif
    set ASw = ASw - 1
    set UZt = null
    set PZt = null
endfunction
function JZt takes nothing returns nothing
    set ASw = 0
    call AZt("via function reference Items_Pickup_Drop, line 825")
endfunction
function ZGr takes string WGr returns integer
    local integer EGr
    set DSw[ASw] = WGr
    set ASw = ASw + 1
    if PC == 0 then
        if AC < 32768 then
            set AC = AC + 1
            set EGr = AC
            set DC[EGr] = 691
        else
            call tNr("Out of memory: Could not create CallbackPeriodic_doPeriodically_Items_Pickup_Drop.", "when calling error in Items_Pickup_Drop, line 865")
            set EGr = 0
        endif
    else
        set PC = PC - 1
        set EGr = IC[PC]
        set DC[EGr] = 691
    endif
    set ASw = ASw - 1
    return EGr
endfunction
function trs takes integer Nus, integer Mus, integer wrs, string urs returns nothing
    local integer rrs
    local integer srs
    set DSw[ASw] = urs
    set ASw = ASw + 1
    set rrs = qir(Nus, wrs, "when calling getEntry in LinkedList, line 260")
    set srs = xeS(Mus, Xww[rrs], rrs, "when calling new_LLEntry in LinkedList, line 261")
    set Cww[Xww[rrs]] = srs
    set Xww[rrs] = srs
    set uuw[Nus] = uuw[Nus] + 1
    set ASw = ASw - 1
endfunction
function eGu takes integer lGu, integer bGu, integer yGu, string pGu returns nothing
    set DSw[ASw] = pGu
    set ASw = ASw + 1
    if yN[lGu] == 0 then
        if lGu == 0 then
            call tNr("Nullpointer exception when calling LinkedList.addAt", "when calling error in LinkedList, line 259")
        else
            call tNr("Called LinkedList.addAt on invalid object.", "when calling error in LinkedList, line 259")
        endif
    endif
    call trs(lGu, bGu, yGu, "when calling addAt in LinkedList, line 259")
    set ASw = ASw - 1
endfunction
function J1t takes string T3t returns boolean
    local integer Y3t
    local integer G3t
    local integer g3t
    local integer h3t
    local integer F3t
    local integer k3t
    local integer j3t
    local integer x3t
    local integer v3t
    local integer m3t
    local integer Q3t
    local integer W3t
    local integer E3t
    local integer Z3t
    local integer U3t
    local integer I3t
    local integer P3t
    local integer A3t
    local integer D3t
    local integer H3t
    local integer J3t
    local integer K3t
    local integer L3t
    local integer X3t
    local integer C3t
    local integer V3t
    local integer B3t
    local integer N3t
    local integer M3t
    local integer w1t
    local integer u1t
    local integer r1t
    local integer s1t
    local integer t1t
    local integer i1t
    local integer S1t
    local integer c1t
    local integer o1t
    local integer O1t
    local integer l1t
    local integer b1t
    local integer y1t
    local integer p1t
    local integer e1t
    local integer q1t
    local integer a1t
    local integer n1t
    local integer d1t
    local integer f1t
    local integer R1t
    local integer T1t
    local integer Y1t
    local integer G1t
    local integer g1t
    local trigger h1t
    local trigger F1t
    local trigger k1t
    local trigger j1t
    local trigger x1t
    local trigger v1t
    local trigger m1t
    local trigger Q1t
    local trigger W1t
    local trigger E1t
    local trigger Z1t
    local trigger U1t
    local trigger I1t
    local trigger P1t
    local trigger A1t
    local trigger D1t
    local integer H1t
    set DSw[ASw] = T3t
    set ASw = ASw + 1
    set qI = jts("when calling new_HashMap in Items_Pickup_Drop, line 20")
    set aI = jts("when calling new_HashMap in Items_Pickup_Drop, line 21")
    set nI = jts("when calling new_HashMap in Items_Pickup_Drop, line 24")
    set dI = jts("when calling new_HashMap in Items_Pickup_Drop, line 25")
    set fI = jts("when calling new_HashMap in Items_Pickup_Drop, line 26")
    set RI = XQt("when calling new_LinkedList in Items_Pickup_Drop, line 28")
    set TI = XQt("when calling new_LinkedList in Items_Pickup_Drop, line 29")
    set YI = 0.0005
    set GI = 0.00065
    set gI = 0.001
    set Y3t = XQt("when calling new_LinkedList in Items_Pickup_Drop, line 35")
    call vwt(Y3t, l2s(Iji("I01G", "when calling unObfuscate in Items_Pickup_Drop, line 35"), "when calling fromRawCode in Items_Pickup_Drop, line 35"), "when calling add in Items_Pickup_Drop, line 35")
    set G3t = Y3t
    call vwt(G3t, l2s(Iji("I00F", "when calling unObfuscate in Items_Pickup_Drop, line 35"), "when calling fromRawCode in Items_Pickup_Drop, line 35"), "when calling add in Items_Pickup_Drop, line 35")
    set g3t = G3t
    call vwt(g3t, l2s(Iji("I032", "when calling unObfuscate in Items_Pickup_Drop, line 35"), "when calling fromRawCode in Items_Pickup_Drop, line 35"), "when calling add in Items_Pickup_Drop, line 35")
    set h3t = g3t
    call vwt(h3t, l2s(Iji("I031", "when calling unObfuscate in Items_Pickup_Drop, line 35"), "when calling fromRawCode in Items_Pickup_Drop, line 35"), "when calling add in Items_Pickup_Drop, line 35")
    set F3t = h3t
    call vwt(F3t, l2s(Iji("I008", "when calling unObfuscate in Items_Pickup_Drop, line 35"), "when calling fromRawCode in Items_Pickup_Drop, line 35"), "when calling add in Items_Pickup_Drop, line 35")
    set k3t = F3t
    call vwt(k3t, l2s(Iji("I009", "when calling unObfuscate in Items_Pickup_Drop, line 35"), "when calling fromRawCode in Items_Pickup_Drop, line 35"), "when calling add in Items_Pickup_Drop, line 35")
    set j3t = k3t
    call vwt(j3t, l2s(Iji("I00A", "when calling unObfuscate in Items_Pickup_Drop, line 35"), "when calling fromRawCode in Items_Pickup_Drop, line 35"), "when calling add in Items_Pickup_Drop, line 35")
    set x3t = j3t
    call vwt(x3t, l2s(Iji("I01D", "when calling unObfuscate in Items_Pickup_Drop, line 35"), "when calling fromRawCode in Items_Pickup_Drop, line 35"), "when calling add in Items_Pickup_Drop, line 35")
    set v3t = x3t
    call vwt(v3t, l2s(Iji("I01E", "when calling unObfuscate in Items_Pickup_Drop, line 35"), "when calling fromRawCode in Items_Pickup_Drop, line 35"), "when calling add in Items_Pickup_Drop, line 35")
    set m3t = v3t
    call vwt(m3t, l2s(Iji("I026", "when calling unObfuscate in Items_Pickup_Drop, line 35"), "when calling fromRawCode in Items_Pickup_Drop, line 35"), "when calling add in Items_Pickup_Drop, line 35")
    set Q3t = m3t
    call vwt(Q3t, l2s(Iji("I01F", "when calling unObfuscate in Items_Pickup_Drop, line 35"), "when calling fromRawCode in Items_Pickup_Drop, line 35"), "when calling add in Items_Pickup_Drop, line 35")
    set hI = Q3t
    set W3t = XQt("when calling new_LinkedList in Items_Pickup_Drop, line 36")
    call vwt(W3t, l2s(Iji("I050", "when calling unObfuscate in Items_Pickup_Drop, line 36"), "when calling fromRawCode in Items_Pickup_Drop, line 36"), "when calling add in Items_Pickup_Drop, line 36")
    set E3t = W3t
    call vwt(E3t, l2s(Iji("I051", "when calling unObfuscate in Items_Pickup_Drop, line 36"), "when calling fromRawCode in Items_Pickup_Drop, line 36"), "when calling add in Items_Pickup_Drop, line 36")
    set Z3t = E3t
    call vwt(Z3t, l2s(Iji("I052", "when calling unObfuscate in Items_Pickup_Drop, line 36"), "when calling fromRawCode in Items_Pickup_Drop, line 36"), "when calling add in Items_Pickup_Drop, line 36")
    set U3t = Z3t
    call vwt(U3t, l2s(Iji("I053", "when calling unObfuscate in Items_Pickup_Drop, line 36"), "when calling fromRawCode in Items_Pickup_Drop, line 36"), "when calling add in Items_Pickup_Drop, line 36")
    set I3t = U3t
    call vwt(I3t, l2s(Iji("I054", "when calling unObfuscate in Items_Pickup_Drop, line 36"), "when calling fromRawCode in Items_Pickup_Drop, line 36"), "when calling add in Items_Pickup_Drop, line 36")
    set P3t = I3t
    call vwt(P3t, l2s(Iji("I055", "when calling unObfuscate in Items_Pickup_Drop, line 36"), "when calling fromRawCode in Items_Pickup_Drop, line 36"), "when calling add in Items_Pickup_Drop, line 36")
    set A3t = P3t
    call vwt(A3t, l2s(Iji("I056", "when calling unObfuscate in Items_Pickup_Drop, line 36"), "when calling fromRawCode in Items_Pickup_Drop, line 36"), "when calling add in Items_Pickup_Drop, line 36")
    set D3t = A3t
    call vwt(D3t, l2s(Iji("I057", "when calling unObfuscate in Items_Pickup_Drop, line 36"), "when calling fromRawCode in Items_Pickup_Drop, line 36"), "when calling add in Items_Pickup_Drop, line 36")
    set H3t = D3t
    call vwt(H3t, l2s(Iji("I058", "when calling unObfuscate in Items_Pickup_Drop, line 36"), "when calling fromRawCode in Items_Pickup_Drop, line 36"), "when calling add in Items_Pickup_Drop, line 36")
    set J3t = H3t
    call vwt(J3t, l2s(Iji("I059", "when calling unObfuscate in Items_Pickup_Drop, line 36"), "when calling fromRawCode in Items_Pickup_Drop, line 36"), "when calling add in Items_Pickup_Drop, line 36")
    set K3t = J3t
    call vwt(K3t, l2s(Iji("I05A", "when calling unObfuscate in Items_Pickup_Drop, line 36"), "when calling fromRawCode in Items_Pickup_Drop, line 36"), "when calling add in Items_Pickup_Drop, line 36")
    set FI = K3t
    set L3t = XQt("when calling new_LinkedList in Items_Pickup_Drop, line 38")
    call vwt(L3t, l2s(Iji("I04Z", "when calling unObfuscate in Items_Pickup_Drop, line 38"), "when calling fromRawCode in Items_Pickup_Drop, line 38"), "when calling add in Items_Pickup_Drop, line 38")
    set X3t = L3t
    call vwt(X3t, l2s(Iji("I04X", "when calling unObfuscate in Items_Pickup_Drop, line 38"), "when calling fromRawCode in Items_Pickup_Drop, line 38"), "when calling add in Items_Pickup_Drop, line 38")
    set C3t = X3t
    call vwt(C3t, l2s(Iji("I04Y", "when calling unObfuscate in Items_Pickup_Drop, line 38"), "when calling fromRawCode in Items_Pickup_Drop, line 38"), "when calling add in Items_Pickup_Drop, line 38")
    set V3t = C3t
    call vwt(V3t, l2s(Iji("I04V", "when calling unObfuscate in Items_Pickup_Drop, line 38"), "when calling fromRawCode in Items_Pickup_Drop, line 38"), "when calling add in Items_Pickup_Drop, line 38")
    set B3t = V3t
    call vwt(B3t, l2s(Iji("I04W", "when calling unObfuscate in Items_Pickup_Drop, line 38"), "when calling fromRawCode in Items_Pickup_Drop, line 38"), "when calling add in Items_Pickup_Drop, line 38")
    set N3t = B3t
    call vwt(N3t, l2s(Iji("I00T", "when calling unObfuscate in Items_Pickup_Drop, line 38"), "when calling fromRawCode in Items_Pickup_Drop, line 38"), "when calling add in Items_Pickup_Drop, line 38")
    set M3t = N3t
    call vwt(M3t, l2s(Iji("I00V", "when calling unObfuscate in Items_Pickup_Drop, line 38"), "when calling fromRawCode in Items_Pickup_Drop, line 38"), "when calling add in Items_Pickup_Drop, line 38")
    set w1t = M3t
    call vwt(w1t, l2s(Iji("I012", "when calling unObfuscate in Items_Pickup_Drop, line 38"), "when calling fromRawCode in Items_Pickup_Drop, line 38"), "when calling add in Items_Pickup_Drop, line 38")
    set u1t = w1t
    call vwt(u1t, l2s(Iji("I011", "when calling unObfuscate in Items_Pickup_Drop, line 38"), "when calling fromRawCode in Items_Pickup_Drop, line 38"), "when calling add in Items_Pickup_Drop, line 38")
    set r1t = u1t
    call vwt(r1t, l2s(Iji("I017", "when calling unObfuscate in Items_Pickup_Drop, line 38"), "when calling fromRawCode in Items_Pickup_Drop, line 38"), "when calling add in Items_Pickup_Drop, line 38")
    set s1t = r1t
    call vwt(s1t, l2s(Iji("I00W", "when calling unObfuscate in Items_Pickup_Drop, line 38"), "when calling fromRawCode in Items_Pickup_Drop, line 38"), "when calling add in Items_Pickup_Drop, line 38")
    set t1t = s1t
    call vwt(t1t, l2s(Iji("I00Z", "when calling unObfuscate in Items_Pickup_Drop, line 38"), "when calling fromRawCode in Items_Pickup_Drop, line 38"), "when calling add in Items_Pickup_Drop, line 38")
    set i1t = t1t
    call vwt(i1t, l2s(Iji("I016", "when calling unObfuscate in Items_Pickup_Drop, line 38"), "when calling fromRawCode in Items_Pickup_Drop, line 38"), "when calling add in Items_Pickup_Drop, line 38")
    set S1t = i1t
    call vwt(S1t, l2s(Iji("I014", "when calling unObfuscate in Items_Pickup_Drop, line 38"), "when calling fromRawCode in Items_Pickup_Drop, line 38"), "when calling add in Items_Pickup_Drop, line 38")
    set c1t = S1t
    call vwt(c1t, l2s(Iji("I00Y", "when calling unObfuscate in Items_Pickup_Drop, line 38"), "when calling fromRawCode in Items_Pickup_Drop, line 38"), "when calling add in Items_Pickup_Drop, line 38")
    set o1t = c1t
    call vwt(o1t, l2s(Iji("I013", "when calling unObfuscate in Items_Pickup_Drop, line 38"), "when calling fromRawCode in Items_Pickup_Drop, line 38"), "when calling add in Items_Pickup_Drop, line 38")
    set O1t = o1t
    call vwt(O1t, l2s(Iji("I018", "when calling unObfuscate in Items_Pickup_Drop, line 38"), "when calling fromRawCode in Items_Pickup_Drop, line 38"), "when calling add in Items_Pickup_Drop, line 38")
    set l1t = O1t
    call vwt(l1t, l2s(Iji("I00U", "when calling unObfuscate in Items_Pickup_Drop, line 38"), "when calling fromRawCode in Items_Pickup_Drop, line 38"), "when calling add in Items_Pickup_Drop, line 38")
    set b1t = l1t
    call vwt(b1t, l2s(Iji("I010", "when calling unObfuscate in Items_Pickup_Drop, line 38"), "when calling fromRawCode in Items_Pickup_Drop, line 38"), "when calling add in Items_Pickup_Drop, line 38")
    set y1t = b1t
    call vwt(y1t, l2s(Iji("I015", "when calling unObfuscate in Items_Pickup_Drop, line 38"), "when calling fromRawCode in Items_Pickup_Drop, line 38"), "when calling add in Items_Pickup_Drop, line 38")
    set p1t = y1t
    call vwt(p1t, l2s(Iji("I00X", "when calling unObfuscate in Items_Pickup_Drop, line 38"), "when calling fromRawCode in Items_Pickup_Drop, line 38"), "when calling add in Items_Pickup_Drop, line 38")
    set kI = p1t
    set e1t = XQt("when calling new_LinkedList in Items_Pickup_Drop, line 40")
    call vwt(e1t, l2s(Iji("n001", "when calling unObfuscate in Items_Pickup_Drop, line 40"), "when calling fromRawCode in Items_Pickup_Drop, line 40"), "when calling add in Items_Pickup_Drop, line 40")
    set q1t = e1t
    call vwt(q1t, l2s(Iji("n00A", "when calling unObfuscate in Items_Pickup_Drop, line 40"), "when calling fromRawCode in Items_Pickup_Drop, line 40"), "when calling add in Items_Pickup_Drop, line 40")
    set a1t = q1t
    call vwt(a1t, l2s(Iji("n00B", "when calling unObfuscate in Items_Pickup_Drop, line 40"), "when calling fromRawCode in Items_Pickup_Drop, line 40"), "when calling add in Items_Pickup_Drop, line 40")
    set n1t = a1t
    call vwt(n1t, l2s(Iji("n002", "when calling unObfuscate in Items_Pickup_Drop, line 40"), "when calling fromRawCode in Items_Pickup_Drop, line 40"), "when calling add in Items_Pickup_Drop, line 40")
    set d1t = n1t
    call vwt(d1t, l2s(Iji("n009", "when calling unObfuscate in Items_Pickup_Drop, line 40"), "when calling fromRawCode in Items_Pickup_Drop, line 40"), "when calling add in Items_Pickup_Drop, line 40")
    set f1t = d1t
    call vwt(f1t, l2s(Iji("n02Q", "when calling unObfuscate in Items_Pickup_Drop, line 40"), "when calling fromRawCode in Items_Pickup_Drop, line 40"), "when calling add in Items_Pickup_Drop, line 40")
    set jI = f1t
    set xI = l2s(Iji("I026", "when calling unObfuscate in Items_Pickup_Drop, line 42"), "when calling fromRawCode in Items_Pickup_Drop, line 42")
    set vI = jts("when calling new_HashMap in Items_Pickup_Drop, line 43")
    set mI = jts("when calling new_HashMap in Items_Pickup_Drop, line 44")
    set QI = jts("when calling new_HashMap in Items_Pickup_Drop, line 46")
    set WI = jts("when calling new_HashMap in Items_Pickup_Drop, line 47")
    set R1t = jts("when calling new_HashMap in Items_Pickup_Drop, line 48")
    call GVw(R1t, BF, B5r(gI), "when calling put in Items_Pickup_Drop, line 48")
    set T1t = R1t
    call GVw(T1t, rk, B5r(GI), "when calling put in Items_Pickup_Drop, line 48")
    set Y1t = T1t
    call GVw(Y1t, uk, B5r(YI), "when calling put in Items_Pickup_Drop, line 48")
    set EI = Y1t
    set ZI = Rect(11296., 5440., 13664., 6880.)
    set UI = Rect(- 11872., - 9152., - 8256., - 6368.)
    set G1t = 0
    set g1t = Lh
    loop
        exitwhen G1t > g1t
        call eGu(RI, jts("when calling new_HashMap in Items_Pickup_Drop, line 762"), G1t, "when calling addAt in Items_Pickup_Drop, line 762")
        call eGu(TI, jts("when calling new_HashMap in Items_Pickup_Drop, line 763"), G1t, "when calling addAt in Items_Pickup_Drop, line 763")
        set iw[G1t] =- 1
        set Sw[G1t] =- 1
        set lw[G1t] =- 1
        set G1t = G1t + 1
    endloop
    set h1t = CreateTrigger()
    call B2S(h1t, nQw)
    set cw = h1t
    set F1t = CreateTrigger()
    call B2S(F1t, dQw)
    set ow = F1t
    set k1t = CreateTrigger()
    call B2S(k1t, fQw)
    set Ow = k1t
    set j1t = CreateTrigger()
    call B2S(j1t, RQw)
    set x1t = CreateTrigger()
    call l2w(x1t, EVENT_PLAYER_UNIT_PICKUP_ITEM)
    set v1t = x1t
    call B2S(v1t, TQw)
    set m1t = CreateTrigger()
    call l2w(m1t, EVENT_PLAYER_UNIT_DROP_ITEM)
    call B2S(m1t, YQw)
    set Q1t = CreateTrigger()
    call l2w(Q1t, EVENT_PLAYER_UNIT_SPELL_CAST)
    set W1t = Q1t
    call B2S(W1t, GQw)
    set E1t = CreateTrigger()
    call l2w(E1t, EVENT_PLAYER_UNIT_SELL_ITEM)
    set Z1t = E1t
    call B2S(Z1t, gQw)
    set U1t = CreateTrigger()
    call l2w(U1t, EVENT_PLAYER_UNIT_ISSUED_TARGET_ORDER)
    set I1t = U1t
    call B2S(I1t, hQw)
    set P1t = CreateTrigger()
    call l2w(P1t, EVENT_PLAYER_UNIT_ISSUED_TARGET_ORDER)
    set A1t = P1t
    call l2w(A1t, EVENT_PLAYER_UNIT_SELL_ITEM)
    set D1t = A1t
    call B2S(D1t, FQw)
    set H1t = ZGr("when calling alloc_CallbackPeriodic_doPeriodically_Items_Pickup_Drop in Items_Pickup_Drop, line 865")
    call kVu(H1t)
    call wcs(5., H1t, "when calling doPeriodically in Items_Pickup_Drop, line 865")
    set ASw = ASw - 1
    set h1t = null
    set F1t = null
    set k1t = null
    set j1t = null
    set x1t = null
    set v1t = null
    set m1t = null
    set Q1t = null
    set W1t = null
    set E1t = null
    set Z1t = null
    set U1t = null
    set I1t = null
    set P1t = null
    set A1t = null
    set D1t = null
    return true
endfunction
function Jcu takes nothing returns boolean
    set ASw = 0
    return J1t("via function reference Items_Pickup_Drop, line 1")
endfunction
function SFr takes string iFr returns nothing
    set DSw[ASw] = iFr
    set ASw = ASw + 1
    call GlS(GetTriggerUnit(), $00000004, false, "when calling onRevivalLocationEntered in RevivalLocations, line 133")
    set ASw = ASw - 1
endfunction
function Jji takes nothing returns nothing
    set ASw = 0
    call SFr("via function reference RevivalLocations, line 132")
endfunction
function Jjt takes nothing returns nothing
    call ForGroupBJ(f1s(bj_mapInitialPlayableArea), epw)
endfunction
function RRr takes string aRr returns boolean
    local trigger nRr
    local trigger dRr
    local trigger fRr
    set DSw[ASw] = aRr
    set ASw = ASw + 1
    set HD = jts("when calling new_HashMap in Quests_PartyShare, line 12")
    set JD = 1000.
    set KD = 40
    call GVw(HD, l2s(Iji("n005", "when calling unObfuscate in Quests_PartyShare, line 19"), "when calling fromRawCode in Quests_PartyShare, line 19"), $00000005, "when calling put in Quests_PartyShare, line 19")
    call GVw(HD, l2s(Iji("n00D", "when calling unObfuscate in Quests_PartyShare, line 20"), "when calling fromRawCode in Quests_PartyShare, line 20"), $0000000C, "when calling put in Quests_PartyShare, line 20")
    call GVw(HD, l2s(Iji("n00K", "when calling unObfuscate in Quests_PartyShare, line 21"), "when calling fromRawCode in Quests_PartyShare, line 21"), $00000029, "when calling put in Quests_PartyShare, line 21")
    call GVw(HD, l2s(Iji("n00G", "when calling unObfuscate in Quests_PartyShare, line 22"), "when calling fromRawCode in Quests_PartyShare, line 22"), $0000002E, "when calling put in Quests_PartyShare, line 22")
    call GVw(HD, l2s(Iji("n00M", "when calling unObfuscate in Quests_PartyShare, line 23"), "when calling fromRawCode in Quests_PartyShare, line 23"), $00000063, "when calling put in Quests_PartyShare, line 23")
    call GVw(HD, l2s(Iji("n00Q", "when calling unObfuscate in Quests_PartyShare, line 24"), "when calling fromRawCode in Quests_PartyShare, line 24"), $0000007D, "when calling put in Quests_PartyShare, line 24")
    call GVw(HD, l2s(Iji("n019", "when calling unObfuscate in Quests_PartyShare, line 25"), "when calling fromRawCode in Quests_PartyShare, line 25"), $00000091, "when calling put in Quests_PartyShare, line 25")
    call GVw(HD, l2s(Iji("n01G", "when calling unObfuscate in Quests_PartyShare, line 26"), "when calling fromRawCode in Quests_PartyShare, line 26"), $000000E8, "when calling put in Quests_PartyShare, line 26")
    call GVw(HD, l2s(Iji("n028", "when calling unObfuscate in Quests_PartyShare, line 27"), "when calling fromRawCode in Quests_PartyShare, line 27"), $0000018F, "when calling put in Quests_PartyShare, line 27")
    call GVw(HD, l2s(Iji("n01K", "when calling unObfuscate in Quests_PartyShare, line 28"), "when calling fromRawCode in Quests_PartyShare, line 28"), $000000E4, "when calling put in Quests_PartyShare, line 28")
    call GVw(HD, l2s(Iji("n01B", "when calling unObfuscate in Quests_PartyShare, line 29"), "when calling fromRawCode in Quests_PartyShare, line 29"), $0000008C, "when calling put in Quests_PartyShare, line 29")
    call GVw(HD, l2s(Iji("n016", "when calling unObfuscate in Quests_PartyShare, line 30"), "when calling fromRawCode in Quests_PartyShare, line 30"), $000000A1, "when calling put in Quests_PartyShare, line 30")
    call GVw(HD, l2s(Iji("n017", "when calling unObfuscate in Quests_PartyShare, line 31"), "when calling fromRawCode in Quests_PartyShare, line 31"), $000000A9, "when calling put in Quests_PartyShare, line 31")
    call GVw(HD, l2s(Iji("U000", "when calling unObfuscate in Quests_PartyShare, line 32"), "when calling fromRawCode in Quests_PartyShare, line 32"), $000003E8, "when calling put in Quests_PartyShare, line 32")
    call GVw(HD, l2s(Iji("U001", "when calling unObfuscate in Quests_PartyShare, line 33"), "when calling fromRawCode in Quests_PartyShare, line 33"), $000005DC, "when calling put in Quests_PartyShare, line 33")
    call GVw(HD, l2s(Iji("n012", "when calling unObfuscate in Quests_PartyShare, line 34"), "when calling fromRawCode in Quests_PartyShare, line 34"), $000003E8, "when calling put in Quests_PartyShare, line 34")
    call GVw(HD, l2s(Iji("U003", "when calling unObfuscate in Quests_PartyShare, line 35"), "when calling fromRawCode in Quests_PartyShare, line 35"), $000007D0, "when calling put in Quests_PartyShare, line 35")
    call GVw(HD, l2s(Iji("U004", "when calling unObfuscate in Quests_PartyShare, line 36"), "when calling fromRawCode in Quests_PartyShare, line 36"), $00000BB8, "when calling put in Quests_PartyShare, line 36")
    call GVw(HD, l2s(Iji("U006", "when calling unObfuscate in Quests_PartyShare, line 37"), "when calling fromRawCode in Quests_PartyShare, line 37"), $00000DAC, "when calling put in Quests_PartyShare, line 37")
    call GVw(HD, l2s(Iji("n024", "when calling unObfuscate in Quests_PartyShare, line 38"), "when calling fromRawCode in Quests_PartyShare, line 38"), $000005DC, "when calling put in Quests_PartyShare, line 38")
    call GVw(HD, l2s(Iji("n01V", "when calling unObfuscate in Quests_PartyShare, line 39"), "when calling fromRawCode in Quests_PartyShare, line 39"), $0000044C, "when calling put in Quests_PartyShare, line 39")
    call GVw(HD, l2s(Iji("n01R", "when calling unObfuscate in Quests_PartyShare, line 40"), "when calling fromRawCode in Quests_PartyShare, line 40"), $0000044C, "when calling put in Quests_PartyShare, line 40")
    call GVw(HD, l2s(Iji("n01T", "when calling unObfuscate in Quests_PartyShare, line 42"), "when calling fromRawCode in Quests_PartyShare, line 42"), $0000044C, "when calling put in Quests_PartyShare, line 42")
    call GVw(HD, l2s(Iji("n01S", "when calling unObfuscate in Quests_PartyShare, line 43"), "when calling fromRawCode in Quests_PartyShare, line 43"), $000005DC, "when calling put in Quests_PartyShare, line 43")
    call GVw(HD, l2s(Iji("n01M", "when calling unObfuscate in Quests_PartyShare, line 44"), "when calling fromRawCode in Quests_PartyShare, line 44"), $000005DC, "when calling put in Quests_PartyShare, line 44")
    call GVw(HD, l2s(Iji("n018", "when calling unObfuscate in Quests_PartyShare, line 46"), "when calling fromRawCode in Quests_PartyShare, line 46"), $00000384, "when calling put in Quests_PartyShare, line 46")
    call GVw(HD, l2s(Iji("n01A", "when calling unObfuscate in Quests_PartyShare, line 47"), "when calling fromRawCode in Quests_PartyShare, line 47"), $00000320, "when calling put in Quests_PartyShare, line 47")
    call GVw(HD, l2s(Iji("n01D", "when calling unObfuscate in Quests_PartyShare, line 48"), "when calling fromRawCode in Quests_PartyShare, line 48"), $00000352, "when calling put in Quests_PartyShare, line 48")
    call GVw(HD, l2s(Iji("n01E", "when calling unObfuscate in Quests_PartyShare, line 49"), "when calling fromRawCode in Quests_PartyShare, line 49"), $0000036B, "when calling put in Quests_PartyShare, line 49")
    call GVw(HD, l2s(Iji("n01F", "when calling unObfuscate in Quests_PartyShare, line 50"), "when calling fromRawCode in Quests_PartyShare, line 50"), $000003B6, "when calling put in Quests_PartyShare, line 50")
    call GVw(HD, l2s(Iji("U00C", "when calling unObfuscate in Quests_PartyShare, line 52"), "when calling fromRawCode in Quests_PartyShare, line 52"), $0001FBD0, "when calling put in Quests_PartyShare, line 52")
    call GVw(HD, l2s(Iji("U00I", "when calling unObfuscate in Quests_PartyShare, line 53"), "when calling fromRawCode in Quests_PartyShare, line 53"), $0001FBD0, "when calling put in Quests_PartyShare, line 53")
    call GVw(HD, l2s(Iji("U00B", "when calling unObfuscate in Quests_PartyShare, line 54"), "when calling fromRawCode in Quests_PartyShare, line 54"), $00011170, "when calling put in Quests_PartyShare, line 54")
    call GVw(HD, l2s(Iji("U009", "when calling unObfuscate in Quests_PartyShare, line 55"), "when calling fromRawCode in Quests_PartyShare, line 55"), $00004E20, "when calling put in Quests_PartyShare, line 55")
    call GVw(HD, l2s(Iji("U007", "when calling unObfuscate in Quests_PartyShare, line 56"), "when calling fromRawCode in Quests_PartyShare, line 56"), $00011170, "when calling put in Quests_PartyShare, line 56")
    call GVw(HD, l2s(Iji("n01Z", "when calling unObfuscate in Quests_PartyShare, line 57"), "when calling fromRawCode in Quests_PartyShare, line 57"), $0000D6D8, "when calling put in Quests_PartyShare, line 57")
    call GVw(HD, l2s(Iji("n01Y", "when calling unObfuscate in Quests_PartyShare, line 58"), "when calling fromRawCode in Quests_PartyShare, line 58"), $00000DAC, "when calling put in Quests_PartyShare, line 58")
    call GVw(HD, k6w("48296085387385296685", "when calling unObfuscateInt in Quests_PartyShare, line 59"), $0001FBD0, "when calling put in Quests_PartyShare, line 59")
    set nRr = CreateTrigger()
    call l2w(nRr, EVENT_PLAYER_UNIT_DEATH)
    set dRr = nRr
    call dUs(dRr, Condition(JWw))
    set fRr = dRr
    call B2S(fRr, KWw)
    set ASw = ASw - 1
    set nRr = null
    set dRr = null
    set fRr = null
    return true
endfunction
function Jlu takes nothing returns boolean
    set ASw = 0
    return RRr("via function reference Quests_PartyShare, line 1")
endfunction
function AdS takes string IdS returns boolean
    local boolean PdS
    set DSw[ASw] = IdS
    set ASw = ASw + 1
    set PdS = GpS(sP, r5S(GetDyingUnit()), "when calling has in JobAdvancementQuestHandler, line 61")
    set ASw = ASw - 1
    return PdS
endfunction
function Jmt takes nothing returns boolean
    set ASw = 0
    return AdS("via function reference JobAdvancementQuestHandler, line 1188")
endfunction
function Jpi takes nothing returns nothing
    call ForceAddPlayer(Kr, GetOwningPlayer(GetTriggerUnit()))
    call DisplayTextToForce(MwS(GetOwningPlayer(GetTriggerUnit())), "|cffffcc00Class Trainer|r : |cff87ceebI can feel your powers, young one! You are truly gifted and highly skilled in the Arcane Arts! At this rate you might even become one of the best mages in the land. However, I am afraid I cannot advance you without a letter of recommendation. First off, you should have in mind what class you would like to go to. Would you like to become a powerful mage wielding the powers of the arcane arts; a Wizard? Or would you like to become an extremely adaptable Sage, wielding the Arcane arts according to different situations? Seek out the Wizard Hannah in the Mage's Tower if you wish to become a Wizard. She is young, but she is one of our most promising masters. If you would like to be a Sage, speak to Master Ember in the Arcane Sanctuary. He is a good friend of Eve, who is the strongest mage in Silvasia if you've never heard of her and his powers are immense as well, even if he is not as powerful as Eve herself.")
    call PlaySoundBJ(Se)
    call T_i(GetOwningPlayer(GetTriggerUnit()), $00000000, "3rd Job Advancement Quest", "I need to choose - the powerful ways of the Wizard or the adaptable ways of the Sage.\n- I must speak to Hannah to become a Wizard. She can be found in the Mage's Tower.\n- I must speak to Master Ember in the Arcane Sanctuary to become a Sage. I must be careful; it is a dangerous place.", "ReplaceableTextures\\CommandButtons\\BTNSell.blp")
    set Lr[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))] = bj_lastCreatedQuest
    set ds[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))] = 0
endfunction
function Jqi takes nothing returns nothing
    call ForceRemovePlayer(IS[$00000009], GetOwningPlayer(GetTriggerUnit()))
    call DestroyQuest(qr[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))])
    set qr[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))] = null
    set ar[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))] = 0
    call PlaySoundBJ(pe)
    call DisplayTimedTextToForce(MwS(GetOwningPlayer(GetOrderedUnit())), 5., "|cffffcc00You have completed the Quest|r.")
    call AddHeroXPSwapped(q, GetTriggerUnit(), true)
    call AdjustPlayerStateBJ($000007D0, GetOwningPlayer(GetTriggerUnit()), PLAYER_STATE_RESOURCE_GOLD)
endfunction
function Jsr takes nothing returns nothing
    call SetUnitPositionLoc(GetEnumUnit(), vo)
endfunction
function Jtu takes nothing returns nothing
    call RemoveItem(GetManipulatedItem())
    call ForceAddPlayer(IS[$00000003], GetOwningPlayer(GetTriggerUnit()))
    call DisplayTextToForce(MwS(GetOwningPlayer(GetTriggerUnit())), "|cffffcc00Skypper|r : So, you're going to hunt down those trolls then? Well, good luck. They can be found in the Ice Dungeon east of here.")
    call T_i(GetOwningPlayer(GetTriggerUnit()), $00000000, "Head Hunter", "Hunt down 10 Ice Trolls and grab their heads.", "ReplaceableTextures\\CommandButtons\\BTNIceTroll.blp")
    set ci[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))] = bj_lastCreatedQuest
endfunction
function CMr takes string LMr returns integer
    local integer XMr
    set DSw[ASw] = LMr
    set ASw = ASw + 1
    if YC == 0 then
        if GC < 32768 then
            set GC = GC + 1
            set XMr = GC
            set gC[XMr] = 1136
        else
            call tNr("Out of memory: Could not create EventListener_add_Buff.", "when calling error in Buff, line 158")
            set XMr = 0
        endif
    else
        set YC = YC - 1
        set XMr = TC[YC]
        set gC[XMr] = 1136
    endif
    set ASw = ASw - 1
    return XMr
endfunction
function FZs takes string gZs returns integer
    local integer hZs
    set DSw[ASw] = gZs
    set ASw = ASw + 1
    if YC == 0 then
        if GC < 32768 then
            set GC = GC + 1
            set hZs = GC
            set gC[hZs] = 1134
        else
            call tNr("Out of memory: Could not create EventListener_add_Buff.", "when calling error in Buff, line 122")
            set hZs = 0
        endif
    else
        set YC = YC - 1
        set hZs = TC[YC]
        set gC[hZs] = 1134
    endif
    set ASw = ASw - 1
    return hZs
endfunction
function UZi takes integer ZZi returns nothing
endfunction
function C3w takes integer L3w, boolean X3w returns nothing
    call UZi(L3w)
endfunction
function Mhi takes string Bhi returns integer
    local integer Nhi
    set DSw[ASw] = Bhi
    set ASw = ASw + 1
    if jC == 0 then
        if xC < 32768 then
            set xC = xC + 1
            set Nhi = xC
        else
            call tNr("Out of memory: Could not create BackIterator.", "when calling error in LinkedListModule, line 93")
            set Nhi = 0
        endif
    else
        set jC = jC - 1
        set Nhi = kC[jC]
    endif
    set ASw = ASw - 1
    return Nhi
endfunction
function Gli takes boolean Rli, string Tli returns integer
    local integer Yli
    set DSw[ASw] = Tli
    set ASw = ASw + 1
    set Yli = Mhi("when calling alloc_BackIterator in LinkedListModule, line 97")
    call C3w(Yli, Rli)
    set ASw = ASw - 1
    return Yli
endfunction
function eLt takes integer pLt returns nothing
    set fM[pLt] = 0
    set RM[pLt] = 0
    set TM[pLt] = 0
endfunction
function Gpr takes integer Ypr returns nothing
    call eLt(Ypr)
endfunction
function UEt takes string EEt returns integer
    local integer ZEt
    set DSw[ASw] = EEt
    set ASw = ASw + 1
    if YC == 0 then
        if GC < 32768 then
            set GC = GC + 1
            set ZEt = GC
            set gC[ZEt] = 1135
        else
            call tNr("Out of memory: Could not create EventListener_add_Buff.", "when calling error in Buff, line 147")
            set ZEt = 0
        endif
    else
        set YC = YC - 1
        set ZEt = TC[YC]
        set gC[ZEt] = 1135
    endif
    set ASw = ASw - 1
    return ZEt
endfunction
function DFS takes integer AFS returns nothing
endfunction
function oKw takes integer SKw, boolean cKw returns nothing
    call DFS(SKw)
endfunction
function qst takes string pst returns integer
    local integer est
    set DSw[ASw] = pst
    set ASw = ASw + 1
    if mC == 0 then
        if QC < 32768 then
            set QC = QC + 1
            set est = QC
        else
            call tNr("Out of memory: Could not create Iterator.", "when calling error in LinkedListModule, line 71")
            set est = 0
        endif
    else
        set mC = mC - 1
        set est = vC[mC]
    endif
    set ASw = ASw - 1
    return est
endfunction
function Y0s takes boolean f0s, string R0s returns integer
    local integer T0s
    set DSw[ASw] = R0s
    set ASw = ASw + 1
    set T0s = qst("when calling alloc_Iterator in LinkedListModule, line 75")
    call oKw(T0s, f0s)
    set ASw = ASw - 1
    return T0s
endfunction
function y0u takes eventid O0u, integer l0u, string b0u returns integer
    set DSw[ASw] = b0u
    set ASw = ASw + 1
    set fM[l0u] = yNs(O0u, "when calling toIntId in ClosureEvents, line 112")
    if Rh[fM[l0u]] != 0 then
        set TM[Rh[fM[l0u]]] = l0u
        set RM[l0u] = Rh[fM[l0u]]
    endif
    set Rh[fM[l0u]] = l0u
    set ASw = ASw - 1
    return l0u
endfunction
function xOu takes string YOu returns boolean
    local integer GOu
    local integer gOu
    local integer hOu
    local unitevent FOu
    local playerunitevent kOu
    local playerunitevent jOu
    set DSw[ASw] = YOu
    set ASw = ASw + 1
    set Cg = 0
    set Vg = 0
    set Bg = 0
    call Y0s(false, "when calling new_Iterator in LinkedListModule, line 55")
    call Gli(false, "when calling new_BackIterator in LinkedListModule, line 65")
    set FOu = EVENT_UNIT_DAMAGED
    set GOu = FZs("when calling alloc_EventListener_add_Buff in Buff, line 122")
    call Gpr(GOu)
    call y0u(FOu, GOu, "when calling add in Buff, line 122")
    set kOu = EVENT_PLAYER_UNIT_UPGRADE_FINISH
    set gOu = UEt("when calling alloc_EventListener_add_Buff in Buff, line 147")
    call Gpr(gOu)
    call y0u(kOu, gOu, "when calling add in Buff, line 147")
    set jOu = EVENT_PLAYER_UNIT_DEATH
    set hOu = CMr("when calling alloc_EventListener_add_Buff in Buff, line 158")
    call Gpr(hOu)
    call y0u(jOu, hOu, "when calling add in Buff, line 158")
    set ASw = ASw - 1
    set FOu = null
    set kOu = null
    set jOu = null
    return true
endfunction
function Jwr takes nothing returns boolean
    set ASw = 0
    return xOu("via function reference Buff, line 1")
endfunction
function K2t takes nothing returns boolean
    return GetUnitTypeId(GetTriggerUnit()) == 1211117638 and GetUnitTypeId(GetOrderTargetUnit()) == 1747988816 and IsPlayerInForce(GetOwningPlayer(GetTriggerUnit()), Kr) and IsPlayerInForce(GetOwningPlayer(GetTriggerUnit()), Cr) == false and IsUnitInGroup(GetTriggerUnit(), kpu(300., GetUnitLoc(GetOrderTargetUnit())))
endfunction
function K4r takes nothing returns nothing
    call ForceRemovePlayer(Ns, GetOwningPlayer(GetTriggerUnit()))
    set eO = EXt(Cl, Condition(Dyw))
    call ForGroupBJ(eO, Hyw)
    call DestroyGroup(eO)
    call DisableTrigger(UT)
    call DestroyTimerDialog(ht)
    call DisplayTimedTextToForce(MwS(GetOwningPlayer(GetTriggerUnit())), 4., "|cffffcc00You have failed to transverse the Rite of Passage!|r")
endfunction
function K6i takes nothing returns boolean
    return GetUnitTypeId(GetDyingUnit()) == 1429221431
endfunction
function aai takes nothing returns boolean
    return IsUnitInGroup(GetTriggerUnit(), mo) == false
endfunction
function KBr takes nothing returns nothing
    call GroupAddUnit(YO, GetTriggerUnit())
    set Js[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))] = GetTriggerUnit()
    set Hs[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))] = GetUnitLoc(GetTriggerUnit())
    set Ks[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))] = GetSpellTargetUnit()
    call PauseUnit(Js[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))], true)
    call PauseUnit(Ks[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))], true)
    call SetUnitInvulnerable(Js[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))], true)
    call SetUnitInvulnerable(Ks[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))], true)
    call AddSpecialEffectTargetUnitBJ("right hand", Js[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))], "Abilities\\Weapons\\AvengerMissile\\AvengerMissile.mdl")
    set Ls[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))] = bj_lastCreatedEffect
    call n6t(.8)
    set bj_forLoopAIndex = 1
    set bj_forLoopAIndexEnd = 6
    loop
        exitwhen bj_forLoopAIndex > bj_forLoopAIndexEnd
        call TriggerSleepAction(.1)
        call SetUnitAnimation(Js[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))], "attack")
        call SetUnitPositionLoc(Js[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))], GetRandomLocInRect(RectFromCenterSizeBJ(GetUnitLoc(Ks[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))]), 120., 120.)))
        call AddSpecialEffectLocBJ(GetUnitLoc(Js[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))]), "Abilities\\Spells\\Other\\Stampede\\StampedeMissileDeath.mdl")
        call DestroyEffect(bj_lastCreatedEffect)
        set bj_forLoopAIndex = bj_forLoopAIndex + 1
    endloop
    if aai() then
        call PauseUnit(Js[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))], false)
        call SetUnitPositionLoc(Js[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))], Hs[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))])
    endif
    call PauseUnit(Ks[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))], false)
    call GroupRemoveUnit(YO, GetTriggerUnit())
    call DestroyEffect(Ls[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))])
    call ResetUnitAnimation(Js[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))])
    call n6t(.1)
    call SetUnitInvulnerable(Js[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))], false)
    call SetUnitInvulnerable(Ks[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))], false)
    call UnitDamageTargetBJ(Js[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))], Ks[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))], 150. * I2R(GetUnitAbilityLevelSwapped($41303438, Js[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))])), ATTACK_TYPE_HERO, DAMAGE_TYPE_UNIVERSAL)
    call RemoveLocation(Hs[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))])
endfunction
function dAi takes integer aAi, string nAi returns nothing
    set DSw[ASw] = nAi
    set ASw = ASw + 1
    if tC[aAi] == 0 then
        call tNr("Double free: object of type CallbackCounted", "when calling error in ClosureTimers, line 144")
    else
        set uC[rC] = aAi
        set rC = rC + 1
        set tC[aAi] = 0
    endif
    set ASw = ASw - 1
endfunction
function iut takes integer sut, string tut returns nothing
    set DSw[ASw] = tut
    set ASw = ASw + 1
    call HLr(kM[sut], "when calling release in ClosureTimers, line 176")
    set ASw = ASw - 1
endfunction
function IUu takes integer ZUu, string UUu returns nothing
    set DSw[ASw] = UUu
    set ASw = ASw + 1
    call iut(ZUu, "when calling CallbackCounted_onDestroy in ClosureTimers, line 175")
    call dAi(ZUu, "when calling dealloc_CallbackCounted in ClosureTimers, line 175")
    set ASw = ASw - 1
endfunction
function MoS takes integer BoS, string NoS returns nothing
    set DSw[ASw] = NoS
    set ASw = ASw + 1
    if tC[BoS] == 0 then
        if BoS == 0 then
            call tNr("Nullpointer exception when calling CallbackCounted.CallbackCounted", "when calling error in ClosureTimers, line 144")
        else
            call tNr("Called CallbackCounted.CallbackCounted on invalid object.", "when calling error in ClosureTimers, line 144")
        endif
    endif
    call IUu(BoS, "when calling destroyCallbackCounted in ClosureTimers, line 144")
    set ASw = ASw - 1
endfunction
function j7S takes integer k7S returns integer
    return FM[k7S]
endfunction
function BLr takes integer XLr, string CLr returns integer
    local integer VLr
    set DSw[ASw] = CLr
    set ASw = ASw + 1
    if tC[XLr] == 0 then
        if XLr == 0 then
            call tNr("Nullpointer exception when calling CallbackCounted.getCount", "when calling error in ClosureTimers, line 159")
        else
            call tNr("Called CallbackCounted.getCount on invalid object.", "when calling error in ClosureTimers, line 159")
        endif
    endif
    set VLr = j7S(XLr)
    set ASw = ASw - 1
    return VLr
endfunction
function BcS takes integer XcS, integer CcS, string VcS returns nothing
    set DSw[ASw] = VcS
    set ASw = ASw + 1
    call Wwu(hrw[XcS], BLr(CcS, "when calling getCount in Reinforce_Effect, line 139") * 1. / 4)
    set ASw = ASw - 1
endfunction
function IDt takes string ZDt returns integer
    local integer UDt
    set DSw[ASw] = ZDt
    set ASw = ASw + 1
    if NX == 0 then
        if MX < 32768 then
            set MX = MX + 1
            set UDt = MX
            set wC[UDt] = 820
        else
            call tNr("Out of memory: Could not create CallbackSingle_doAfter_GeneralUtils.", "when calling error in GeneralUtils, line 35")
            set UDt = 0
        endif
    else
        set NX = NX - 1
        set UDt = BX[NX]
        set wC[UDt] = 820
    endif
    set ASw = ASw - 1
    return UDt
endfunction
function Tir takes effect air, real nir, string dir returns nothing
    local integer fir
    local real Rir
    set DSw[ASw] = dir
    set ASw = ASw + 1
    set Rir = nir
    set fir = IDt("when calling alloc_CallbackSingle_doAfter_GeneralUtils in GeneralUtils, line 35")
    call RUs(fir)
    set C7[fir] = air
    call Ybr(Rir, fir, "when calling doAfter in GeneralUtils, line 35")
    set ASw = ASw - 1
endfunction
function ELr takes integer kLr, integer jLr, string xLr returns nothing
    local real vLr
    local real mLr
    local real QLr
    local effect WLr
    set DSw[ASw] = xLr
    set ASw = ASw + 1
    set vLr = GetRandomReal(1., 360.)
    set mLr = GetRandomReal(1., c7[kLr])
    set QLr = vLr * 3.14159 / 180.
    set WLr = AddSpecialEffect(o7[kLr], O7[kLr] + mLr * Cos(QLr), l7[kLr] + mLr * Sin(QLr))
    call Tir(WLr, 20., "when calling destrTimed in FateDestinyUnlocker, line 528")
    set ASw = ASw - 1
    set WLr = null
endfunction
function CKu takes rect XKu returns real
    set Xcw = GetRandomReal(GetRectMinX(XKu), GetRectMaxX(XKu))
    set Ccw = GetRandomReal(GetRectMinY(XKu), GetRectMaxY(XKu))
    return Xcw
endfunction
function nCt takes integer aCt returns boolean
    return FM[aCt] == 1
endfunction
function O4r takes integer S4r, string c4r returns boolean
    local boolean o4r
    set DSw[ASw] = c4r
    set ASw = ASw + 1
    if tC[S4r] == 0 then
        if S4r == 0 then
            call tNr("Nullpointer exception when calling CallbackCounted.isLast", "when calling error in ClosureTimers, line 156")
        else
            call tNr("Called CallbackCounted.isLast on invalid object.", "when calling error in ClosureTimers, line 156")
        endif
    endif
    set o4r = nCt(S4r)
    set ASw = ASw - 1
    return o4r
endfunction
function uZi takes string MEi returns integer
    local integer wZi
    set DSw[ASw] = MEi
    set ASw = ASw + 1
    if rC == 0 then
        if sC < 32768 then
            set sC = sC + 1
            set wZi = sC
            set tC[wZi] = 661
        else
            call tNr("Out of memory: Could not create CallbackCounted_doPeriodicallyCounted_doPeriodicallyCounted_ProfWitcher_Ulti.", "when calling error in ProfWitcher_Ulti, line 52")
            set wZi = 0
        endif
    else
        set rC = rC - 1
        set wZi = uC[rC]
        set tC[wZi] = 661
    endif
    set ASw = ASw - 1
    return wZi
endfunction
function IVw takes integer gVw, integer hVw, string FVw returns nothing
    local real kVw
    local real jVw
    local effect xVw
    local effect vVw
    local integer mVw
    local integer QVw
    local effect WVw
    local real EVw
    local real ZVw
    local real UVw
    set DSw[ASw] = FVw
    set ASw = ASw + 1
    set brw[gVw] = brw[gVw] + 1
    set ZVw = CKu(yrw[gVw])
    set UVw = Ccw
    set kVw = ZVw
    set jVw = UVw
    set xVw = uSs(prw[gVw], erw[gVw], "Abilities\\Spells\\Other\\Stampede\\StampedeMissileDeath.mdl")
    call I7S(xVw)
    call SetUnitAnimation(qrw[gVw], "attack")
    call PlaySoundOnUnitBJ(ke, 100., qrw[gVw])
    set vVw = uSs(kVw, jVw, "war3mapImported\\Great Lightning.mdx")
    call I7S(vVw)
    call SetUnitAnimation(arw[gVw], "death")
    call BFS(nrw[gVw], fju(brw[gVw]) + " Hit!", 12. + brw[gVw] * 1. / 10)
    if qrw[gVw] == null or(not yXu(qrw[gVw])) or O4r(hVw, "when calling isLast in ProfWitcher_Ulti, line 45") then
        call SetUnitInvulnerable(qrw[gVw], false)
        if not IsUnitInGroup(qrw[gVw], mo) then
            call PauseUnit(qrw[gVw], false)
        endif
        call PauseUnit(arw[gVw], drw[gVw])
        set mVw = YEi(arw[gVw])
        set QVw = uZi("when calling alloc_CallbackCounted_doPeriodicallyCounted_doPeriodicallyCounted_ProfWitcher_Ulti in ProfWitcher_Ulti, line 52")
        call Inr(QVw)
        set Yrw[QVw] = arw[gVw]
        set Grw[QVw] = mVw
        call l5s(1., $0000000A, QVw, "when calling doPeriodicallyCounted in ProfWitcher_Ulti, line 52")
        call SetUnitInvulnerable(arw[gVw], frw[gVw])
        call SetUnitAnimation(qrw[gVw], "attack")
        call PlaySoundOnUnitBJ(Fe, 100., qrw[gVw])
        set WVw = uSs(ANw(arw[gVw]), XSw, "Abilities\\Spells\\Other\\Stampede\\StampedeMissileDeath.mdl")
        call I7S(WVw)
        call BFS(nrw[gVw], "36 Hits!!", 13. + brw[gVw] * 1. / 10)
        set EVw = 5000 * gir(qrw[gVw], Rrw[gVw]) + (Ges(arw[gVw]) - t3i(arw[gVw]))
        if EVw > pw then
            call UnitDamageTargetBJ(qrw[gVw], arw[gVw], xvt(pw), ATTACK_TYPE_CHAOS, DAMAGE_TYPE_UNIVERSAL)
        else
            call UnitDamageTargetBJ(qrw[gVw], arw[gVw], EVw, ATTACK_TYPE_CHAOS, DAMAGE_TYPE_UNIVERSAL)
        endif
        call GroupRemoveUnit(YO, qrw[gVw])
        call ResetUnitAnimation(qrw[gVw])
        call ResetUnitAnimation(arw[gVw])
        set hu[Trw[gVw]] = false
        call MoS(hVw, "when calling dispatch_CallbackCounted_destroyCallbackCounted in ProfWitcher_Ulti, line 84")
    endif
    set ASw = ASw - 1
    set xVw = null
    set vVw = null
    set WVw = null
endfunction
function LTt takes integer HTt, integer JTt, string KTt returns nothing
    set DSw[ASw] = KTt
    set ASw = ASw + 1
    if O0w[HTt] != null then
        call Wwu(O0w[HTt], l0w[HTt] + b0w[HTt] / BLr(JTt, "when calling getCount in Imp4, line 673"))
    else
        call MoS(JTt, "when calling dispatch_CallbackCounted_destroyCallbackCounted in Imp4, line 676")
    endif
    set ASw = ASw - 1
endfunction
function UNi takes unit ENi, real ZNi returns nothing
    call aIt(ENi, UNIT_STATE_LIFE, ZNi)
endfunction
function LUr takes integer UUr, integer IUr, string PUr returns nothing
    local group AUr
    local group DUr
    local unit HUr
    local effect JUr
    local effect KUr
    set DSw[ASw] = PUr
    set ASw = ASw + 1
    set AUr = Dit(fK, "when calling getUnitsInRect in Voidless, line 432")
    set DUr = XbS(AUr)
    loop
        exitwhen not hJw(DUr)
        set HUr = tPr(DUr)
        if t_u(HUr) then
            if O4r(IUr, "when calling isLast in Voidless, line 436") then
    if yXu(HUr) then
                    call Tri(HUr)
    endif
            elseif yXu(HUr) then
    call UNi(HUr, - (aSr(HUr) * 0.10))
            endif
        endif
    endloop
    call lxs(DUr)
    call Sju(AUr, "when calling release in Voidless, line 441")
    set JUr = uSs(CKu(fK), Ccw, wL)
    call Wwu(JUr, 3.)
    set KUr = JUr
    call yYi(KUr, 3., "when calling destrAdvTimed in Voidless, line 443")
    set ASw = ASw - 1
    set AUr = null
    set DUr = null
    set HUr = null
    set JUr = null
    set KUr = null
endfunction
function M9r takes integer H9r, integer J9r, string K9r returns nothing
    local real L9r
    local real X9r
    local real C9r
    local real V9r
    local boolean B9r
    local unit N9r
    set DSw[ASw] = K9r
    set ASw = ASw + 1
    if DN[H9r] != null and yXu(DN[H9r]) then
        set V9r = t3i(DN[H9r])
        set C9r = Ges(DN[H9r])
        if HN[H9r]then
            set L9r = rg
        else
            set L9r = ug
        endif
        set B9r = V9r <= C9r * L9r
    else
        set B9r = false
    endif
    if B9r then
        set N9r = DN[H9r]
        if HN[H9r]then
            set X9r = JN[H9r] / 2.
        else
            set X9r = JN[H9r]
        endif
        call Ziu(N9r, X9r * Ges(KN[H9r]))
        if DN[H9r] != KN[H9r]then
            call T6w(ATS(ANw(KN[H9r]), XSw, 25.), VSw, BSw, ATS(ANw(DN[H9r]), XSw, 25.), VSw, BSw, "when calling flashManaBondLightning in Archsage_WhiteWhizard_ArcaneManaBond, line 132")
        endif
    else
        call Q_s(DN[H9r], qg)
        call MoS(J9r, "when calling dispatch_CallbackCounted_destroyCallbackCounted in Archsage_WhiteWhizard_ArcaneManaBond, line 135")
    endif
    set ASw = ASw - 1
    set N9r = null
endfunction
function GAi takes widget RAi, string TAi, string YAi returns effect
    return AddSpecialEffectTarget(TAi, RAi, YAi)
endfunction
function d1i takes unit q1i, widget a1i, real n1i returns nothing
    call UnitDamageTarget(q1i, a1i, n1i, false, false, ATTACK_TYPE_CHAOS, DAMAGE_TYPE_UNIVERSAL, WEAPON_TYPE_WHOKNOWS)
endfunction
function Fxs takes real Gxs, real gxs, real hxs returns real
    set tcw = Gxs
    set icw = gxs
    return tcw
endfunction
function uWs takes real NQs, real MQs, real wWs returns real
    set ucw = NQs
    set rcw = MQs
    set scw = wWs
    return ucw
endfunction
function d4i takes real M1i, real w4i, real u4i, real r4i, real s4i, string t4i, real i4i, real S4i, integer c4i, integer o4i, integer O4i, integer l4i returns texttag
    local texttag b4i = CreateTextTag()
    local texttag y4i
    local texttag p4i
    local texttag e4i
    local texttag q4i
    local texttag a4i
    local texttag n4i
    call v1s(b4i, uWs(Fxs(M1i, w4i, u4i), icw, 20.), rcw, scw)
    set y4i = b4i
    call BFS(y4i, t4i, i4i)
    set p4i = y4i
    call fYu(p4i, c4i, o4i, O4i, l4i)
    set e4i = p4i
    call Hot(e4i, r4i, s4i)
    set q4i = e4i
    call Usr(q4i, S4i)
    set a4i = q4i
    call Zkr(a4i, .1)
    set n4i = a4i
    call wfu(n4i, false)
    set KIw = n4i
    set b4i = null
    set y4i = null
    set p4i = null
    set e4i = null
    set q4i = null
    set a4i = null
    set n4i = null
    return KIw
endfunction
function k9t takes real h9t, real F9t returns real
    set tow = h9t
    set iow = F9t
    set Sow = 0.
    return tow
endfunction
function x9s takes string k9s returns integer
    local integer j9s
    set DSw[ASw] = k9s
    set ASw = ASw + 1
    if NX == 0 then
        if MX < 32768 then
            set MX = MX + 1
            set j9s = MX
            set wC[j9s] = 1087
        else
            call tNr("Out of memory: Could not create CallbackSingle_doAfter_doPeriodicallyCounted_GrandTemplar_PsiDestruction.", "when calling error in GrandTemplar_PsiDestruction, line 85")
            set j9s = 0
        endif
    else
        set NX = NX - 1
        set j9s = BX[NX]
        set wC[j9s] = 1087
    endif
    set ASw = ASw - 1
    return j9s
endfunction
function OTs takes integer kRs, integer jRs, string xRs returns nothing
    local unit vRs
    local real mRs
    local real QRs
    local player WRs
    local integer ERs
    local real ZRs
    local group URs
    local integer IRs
    local unit array PRs
    local group ARs
    local unit DRs
    local boolean HRs
    local integer JRs
    local integer KRs
    local unit LRs
    local integer XRs
    local integer CRs
    local integer VRs
    local effect BRs
    local integer NRs
    local boolean MRs
    local boolean wTs
    local integer uTs
    local texttag rTs
    local string sTs
    local effect tTs
    local boolean iTs
    local real STs
    local real cTs
    local real oTs
    set DSw[ASw] = xRs
    set ASw = ASw + 1
    set vRs = w8[kRs]
    set cTs = ANw(vRs)
    set oTs = XSw
    set mRs = cTs
    set QRs = oTs
    set WRs = u8[kRs]
    set ERs = hgr(WRs)
    set ZRs = xvt(wps(vQ, ERs, "when calling get in GrandTemplar_PsiDestruction, line 53"))
    set URs = LLt(mRs, QRs, WQ, "when calling getUnitsInRange in GrandTemplar_PsiDestruction, line 54")
    set IRs = 0
    set ARs = XbS(URs)
    loop
        exitwhen not hJw(ARs)
        set DRs = tPr(ARs)
        if iBw(eDs(DRs), WRs) and yXu(DRs) then
            set IRs = IRs + 1
            set PRs[IRs] = DRs
        else
            call Z7t(URs, DRs)
        endif
    endloop
    call lxs(ARs)
    if IRs > 0 then
        set HRs = false
        set JRs = 1
        set KRs = IRs
        loop
            exitwhen JRs > KRs
            if not HRs then
    set LRs = null
    set XRs = 0
    set CRs = IRs - 1
    loop
                    exitwhen XRs > CRs
                    set VRs = GetRandomInt($00000000, IRs - 1)
                    set LRs = PRs[VRs]
                    if LRs != null then
                        exitwhen true
                    endif
                    set XRs = XRs + 1
    endloop
    if (not n2u(LRs))and(not fRi(LRs)) and(not gSr(LRs, l2s(Iji("Avul", "when calling unObfuscate in GrandTemplar_PsiDestruction, line 77"), "when calling fromRawCode in GrandTemplar_PsiDestruction, line 77"))) and(not gSr(LRs, l2s(Iji("AImx", "when calling unObfuscate in GrandTemplar_PsiDestruction, line 77"), "when calling fromRawCode in GrandTemplar_PsiDestruction, line 77"))) then
                    set HRs = true
                    set BRs = AddSpecialEffectTarget("war3mapImported/Lightnings.mdx", LRs, "origin")
                    call Tir(BRs, 2., "when calling destrTimed in GrandTemplar_PsiDestruction, line 79")
                    set NRs = yct(vRs, MF)
                    if NRs > 0 then
                        if GetRandomInt($00000001, $00000064) <= 3 + 2 * NRs then
                            if Jyr(aQ, ERs, "when calling has in GrandTemplar_PsiDestruction, line 82") then
                                set wTs = TYt(wps(aQ, ERs, "when calling get in GrandTemplar_PsiDestruction, line 82"))
                            else
                                set wTs = false
                            endif
                            set iTs = not wTs
                        else
                            set iTs = false
                        endif
                        set MRs = iTs
                        if MRs then
                            call GVw(aQ, ERs, O_i(true), "when calling put in GrandTemplar_PsiDestruction, line 84")
                            set STs = nQ
                            set uTs = x9s("when calling alloc_CallbackSingle_doAfter_doPeriodicallyCounted_GrandTemplar_PsiDestruction in GrandTemplar_PsiDestruction, line 85")
                            call RUs(uTs)
                            set r8[uTs] = ERs
                            call Ybr(STs, uTs, "when calling doAfter in GrandTemplar_PsiDestruction, line 85")
                            set ZRs = ZRs + 20000.
                            set rTs = d4i(k9t(mRs, QRs), iow, Sow, 0., 0.02, "|cffffcc00Jet Zanber!|r", 12., 2., $000000FF, $00000080, $00000000, $000000FF)
                            set sTs = ""
                            if HEi(ERs, hgr(nD), "when calling ifDisplayEffectProcs in GrandTemplar_PsiDestruction, line 91") then
                                set sTs = "war3mapImported/Great Lightning.mdl"
                            else
                                call FBu(rTs, false)
                            endif
                            set tTs = GAi(LRs, sTs, "origin")
                            call Tir(tTs, 2., "when calling destrTimed in GrandTemplar_PsiDestruction, line 95")
                        endif
                    endif
                    call d1i(vRs, LRs, ZRs)
    endif
            elseif HRs then
    exitwhen true
            endif
            set JRs = JRs + 1
        endloop
    endif
    call Sju(URs, "when calling release in GrandTemplar_PsiDestruction, line 101")
    if vRs == null or(not yXu(vRs)) or O4r(jRs, "when calling isLast in GrandTemplar_PsiDestruction, line 102") then
        call GVw(xQ, ERs, O_i(false), "when calling put in GrandTemplar_PsiDestruction, line 104")
        call GVw(vQ, ERs, $00000000, "when calling put in GrandTemplar_PsiDestruction, line 105")
        call MoS(jRs, "when calling dispatch_CallbackCounted_destroyCallbackCounted in GrandTemplar_PsiDestruction, line 106")
    endif
    set ASw = ASw - 1
    set vRs = null
    set WRs = null
    set URs = null
    set ARs = null
    set DRs = null
    set LRs = null
    set BRs = null
    set rTs = null
    set tTs = null
endfunction
function RPs takes integer dPs, integer fPs returns nothing
    if C6[dPs] <= 4.4 then
        set C6[dPs] = C6[dPs] + .1
        call Wwu(V6[dPs], C6[dPs])
    else
        set B6[dPs] = B6[dPs] + 25.
        call Xjr(V6[dPs], B6[dPs])
    endif
endfunction
function A4s takes unit P4s returns boolean
    return UnitIsSleeping(P4s)
endfunction
function Iwr takes unit Zwr returns boolean
    local boolean Uwr = false
    if A4s(Zwr) then
        call UnitWakeUp(Zwr)
        set Uwr = true
    endif
    return Uwr
endfunction
function I4i takes integer U4i returns nothing
    set FM[U4i] = 0
endfunction
function MCs takes integer BCs, string NCs returns nothing
    set DSw[ASw] = NCs
    set ASw = ASw + 1
    if tC[BCs] == 0 then
        if BCs == 0 then
            call tNr("Nullpointer exception when calling CallbackCounted.stop", "when calling error in ClosureTimers, line 162")
        else
            call tNr("Called CallbackCounted.stop on invalid object.", "when calling error in ClosureTimers, line 162")
        endif
    endif
    call I4i(BCs)
    set ASw = ASw - 1
endfunction
function OCt takes unit SCt, string cCt, widget oCt returns boolean
    return IssueTargetOrder(SCt, cCt, oCt)
endfunction
function Srt takes integer srt, integer trt, string irt returns nothing
    set DSw[ASw] = irt
    set ASw = ASw + 1
    if Jyr(gg, Aei(XN[srt]), "when calling has in Avenger_Champ_MS_RM_Taunt, line 71") and iCu(wps(gg, Aei(XN[srt]), "when calling get in Avenger_Champ_MS_RM_Taunt, line 71"), "when calling unitFromIndex in Avenger_Champ_MS_RM_Taunt, line 71") == CN[srt]then
        if A4s(XN[srt]) then
            call Iwr(XN[srt])
        endif
        call OCt(XN[srt], "attack", CN[srt])
    endif
    if (not yXu(XN[srt]))or(not yXu(CN[srt])) or O4r(trt, "when calling isLast in Avenger_Champ_MS_RM_Taunt, line 76") then
        call klS(gg, Aei(XN[srt]), "when calling remove in Avenger_Champ_MS_RM_Taunt, line 77")
        call GVw(gg, Aei(XN[srt]), Aei(null), "when calling put in Avenger_Champ_MS_RM_Taunt, line 78")
        call uRi(VN[srt])
        call MCs(trt, "when calling stop in Avenger_Champ_MS_RM_Taunt, line 80")
    endif
    set ASw = ASw - 1
endfunction
function aSi takes integer ySi, integer pSi, string eSi returns nothing
    local effect qSi
    set DSw[ASw] = eSi
    set ASw = ASw + 1
    set qSi = uSs(CKu(Hm), Ccw, qm)
    call Tir(qSi, 2.55, "when calling destrTimed in FateDestinyUnlocker, line 320")
    set ASw = ASw - 1
    set qSi = null
endfunction
function sis takes effect uis, real ris returns nothing
    call BlzSetSpecialEffectYaw(uis, Mri(ris))
endfunction
function bSi takes integer Bii, integer Nii, string Mii returns nothing
    local boolean wSi
    local real uSi
    local integer rSi
    local real sSi
    local integer tSi
    local real iSi
    local integer SSi
    local real cSi
    local real oSi
    local real OSi
    local real lSi
    set DSw[ASw] = Mii
    set ASw = ASw + 1
    if y0w[Bii] != null then
        set wSi = p0w[Bii] < e0w[Bii]
        if (e0w[Bii] == 0 and p0w[Bii] == 1)or e0w[Bii] > 0 then
            set q0w[Bii] = q0w[Bii] + 1
            set cSi = 360 * 1. / eU
            if wSi then
    set rSi = p0w[Bii]
            else
    set rSi = e0w[Bii]
            endif
            set uSi = cSi * rSi
            set oSi = 360 * 1. / eU
            if wSi then
    set tSi = e0w[Bii]
            else
    set tSi = p0w[Bii]
            endif
            set sSi = oSi * tSi
            set lSi = uSi
            set OSi = (sSi - uSi) / 20.
            if wSi then
    set SSi = q0w[Bii]
            else
    set SSi = BLr(Nii, "when calling getCount in Imp4, line 689")
            endif
            set iSi = lSi + OSi * SSi
            call sis(y0w[Bii], Deg2Rad(iSi))
        endif
    else
        call MoS(Nii, "when calling dispatch_CallbackCounted_destroyCallbackCounted in Imp4, line 694")
    endif
    set ASw = ASw - 1
endfunction
function yns takes effect Ons, animtype lns, real bns returns nothing
    call BlzPlaySpecialEffectWithTimeScale(Ons, lns, bns)
endfunction
function bbs takes integer cbs, integer obs, string Obs returns nothing
    local effect lbs
    set DSw[ASw] = Obs
    set ASw = ASw + 1
    call Wwu(Irw[cbs], 1. + 20 * 1. / BLr(obs, "when calling getCount in Rh_Effect, line 82") / 2.)
    if O4r(obs, "when calling isLast in Rh_Effect, line 83") then
        set lbs = Irw[cbs]
        call yns(lbs, ANIM_TYPE_DEATH, .6)
    endif
    set ASw = ASw - 1
    set lbs = null
endfunction
function AQs takes unit PQs returns nothing
    call ShowUnit(PQs, true)
endfunction
function Cfi takes string Lfi returns integer
    local integer Xfi
    set DSw[ASw] = Lfi
    set ASw = ASw + 1
    if NX == 0 then
        if MX < 32768 then
            set MX = MX + 1
            set Xfi = MX
            set wC[Xfi] = 1088
        else
            call tNr("Out of memory: Could not create CallbackSingle_doAfter_doPeriodicallyCounted_doAfter_Voidless_mechanics.", "when calling error in Voidless_mechanics, line 182")
            set Xfi = 0
        endif
    else
        set NX = NX - 1
        set Xfi = BX[NX]
        set wC[Xfi] = 1088
    endif
    set ASw = ASw - 1
    return Xfi
endfunction
function Zcr takes unit Ecr returns boolean
    return XYt(ANw(Ecr), XSw, fK) and yXu(Ecr)
endfunction
function g2r takes effect G2r returns real
    set xcw = BlzGetLocalSpecialEffectX(G2r)
    set vcw = BlzGetLocalSpecialEffectY(G2r)
    return xcw
endfunction
function f3t takes string n3t returns integer
    local integer d3t
    set DSw[ASw] = n3t
    set ASw = ASw + 1
    if NX == 0 then
        if MX < 32768 then
            set MX = MX + 1
            set d3t = MX
            set wC[d3t] = 963
        else
            call tNr("Out of memory: Could not create CallbackSingle_doAfter_UnitItemUtils.", "when calling error in UnitItemUtils, line 362")
            set d3t = 0
        endif
    else
        set NX = NX - 1
        set d3t = BX[NX]
        set wC[d3t] = 963
    endif
    set ASw = ASw - 1
    return d3t
endfunction
function hXt takes unit fXt, string RXt, real TXt, string YXt returns nothing
    local integer GXt
    local real gXt
    set DSw[ASw] = YXt
    set ASw = ASw + 1
    call SetUnitAnimation(fXt, RXt)
    if TXt !=- 1. then
        set gXt = TXt
        set GXt = f3t("when calling alloc_CallbackSingle_doAfter_UnitItemUtils in UnitItemUtils, line 362")
        call RUs(GXt)
        set ptw[GXt] = fXt
        call Ybr(gXt, GXt, "when calling doAfter in UnitItemUtils, line 362")
    endif
    set ASw = ASw - 1
endfunction
function kPu takes unit gPu, string hPu returns boolean
    local boolean FPu
    set DSw[ASw] = hPu
    set ASw = ASw + 1
    set FPu = Jyr(lX, Aei(gPu), "when calling has in Voidless_mechanics, line 84") or GpS(sX, Aei(gPu), "when calling has in Voidless_mechanics, line 84")
    set ASw = ASw - 1
    return FPu
endfunction
function wEi takes effect BWi, real NWi, real MWi returns nothing
    call BlzSetSpecialEffectPosition(BWi, NWi, MWi, BlzGetLocalSpecialEffectZ(BWi))
endfunction
function cns takes integer Has, integer Jas, string Kas returns nothing
    local real Las
    local real Xas
    local real Cas
    local real Vas
    local real Bas
    local real Nas
    local group Mas
    local group wns
    local unit uns
    local integer rns
    local real sns
    local real tns
    local real ins
    local real Sns
    set DSw[ASw] = Kas
    set ASw = ASw + 1
    if uK != null and yXu(uK) and OK > 0 then
        set sns = g2r(niw[Has])
        set Xas = sns
        set Las = Xas
        call g2r(niw[Has])
        set tns = vcw
        set Vas = tns
        set Cas = Vas
        set diw[Has] = Atan2(Riw[Has] - Cas, fiw[Has] - Las)
        set ins = Las + Tiw[Has] * Cos(diw[Has])
        set Sns = Cas + Tiw[Has] * Sin(diw[Has])
        set Bas = ins
        set Nas = Sns
        call wEi(niw[Has], Bas, Nas)
        call J7i(uK, Bas, Nas)
        set Yiw[Has] = Yiw[Has] - Tiw[Has]
        set Mas = LLt(Bas, Nas, CL, "when calling getUnitsInRange in Voidless_mechanics, line 166")
        set wns = XbS(Mas)
        loop
            exitwhen not hJw(wns)
            set uns = tPr(wns)
            if Zcr(uns) and GpS(gQ, hgr(eDs(uns)), "when calling has in Voidless_mechanics, line 168") and(not kPu(uns, "when calling isInvolvedInMechanic in Voidless_mechanics, line 168")) then
    call Tri(uns)
            endif
        endloop
        call lxs(wns)
        call Sju(Mas, "when calling release in Voidless_mechanics, line 170")
        if Yiw[Has] < .0 then
            set Giw[Has] = true
        endif
        if Giw[Has] or O4r(Jas, "when calling isLast in Voidless_mechanics, line 175") then
            call J7i(uK, g2r(niw[Has]), vcw)
            call AQs(uK)
            call hXt(uK, "dissipate", 1., "when calling playAnimation in Voidless_mechanics, line 178")
            call uRi(niw[Has])
            call u3w(VL, "when calling clear in Voidless_mechanics, line 180")
            set rns = Cfi("when calling alloc_CallbackSingle_doAfter_doPeriodicallyCounted_doAfter_Voidless_mechanics in Voidless_mechanics, line 182")
            call RUs(rns)
            call Ybr(1., rns, "when calling doAfter in Voidless_mechanics, line 182")
            set BL = false
            call MCs(Jas, "when calling stop in Voidless_mechanics, line 187")
            call MoS(Jas, "when calling dispatch_CallbackCounted_destroyCallbackCounted in Voidless_mechanics, line 188")
        endif
    else
        call MCs(Jas, "when calling stop in Voidless_mechanics, line 190")
        call MoS(Jas, "when calling dispatch_CallbackCounted_destroyCallbackCounted in Voidless_mechanics, line 191")
    endif
    set ASw = ASw - 1
    set Mas = null
    set wns = null
    set uns = null
endfunction
function fEi takes integer aEi, integer nEi, string dEi returns nothing
    set DSw[ASw] = dEi
    set ASw = ASw + 1
    if n2u(Yrw[aEi]) then
        if not Jyr(QD, Grw[aEi], "when calling has in ProfWitcher_Ulti, line 54") then
            call GVw(QD, Grw[aEi], $00000001, "when calling put in ProfWitcher_Ulti, line 55")
        else
            call GVw(QD, Grw[aEi], wps(QD, Grw[aEi], "when calling get in ProfWitcher_Ulti, line 57") + 1, "when calling put in ProfWitcher_Ulti, line 57")
        endif
    endif
    call GVw(QD, Grw[aEi], wps(QD, Grw[aEi], "when calling get in ProfWitcher_Ulti, line 58") - 1, "when calling put in ProfWitcher_Ulti, line 58")
    if O4r(nEi, "when calling isLast in ProfWitcher_Ulti, line 59") then
        if wps(QD, Grw[aEi], "when calling get in ProfWitcher_Ulti, line 60") >= 5 then
            call qaS(Yrw[aEi])
        endif
    endif
    set ASw = ASw - 1
endfunction
function j8r takes integer h8r, integer F8r, string k8r returns nothing
    set DSw[ASw] = k8r
    set ASw = ASw + 1
    call DisplayTimedTextToForce(MwS(Nuw[h8r]), 3., "|cffEEB422Battle will begin in|r |cffff0000" + fju(BLr(F8r, "when calling getCount in PVP, line 106")) + "|r...")
    call DisplayTimedTextToForce(MwS(vt[1 + Muw[h8r]]), 3., "|cffEEB422Battle will begin in|r |cffff0000" + fju(BLr(F8r, "when calling getCount in PVP, line 107")) + "|r...")
    call PlaySoundBJ(fe)
    set ASw = ASw - 1
endfunction
function kHt takes unit gHt, unit hHt, real FHt returns nothing
    if FHt >= 1. then
        call GYS(hHt, Udi(hHt) + FHt)
    endif
endfunction
function k3i takes integer g3i, integer h3i, string F3i returns nothing
    set DSw[ASw] = F3i
    set ASw = ASw + 1
    set itw[g3i] = itw[g3i] + 1
    if ModuloReal(itw[g3i], $0000000A) == 0. then
        call kHt(Stw[g3i], ctw[g3i], otw[g3i])
    elseif itw[g3i] == Otw[g3i]then
        call kHt(Stw[g3i], ctw[g3i], otw[g3i] * ltw[g3i])
    endif
    if not yXu(ctw[g3i]) then
        call MoS(h3i, "when calling dispatch_CallbackCounted_destroyCallbackCounted in UnitItemUtils, line 271")
    endif
    set ASw = ASw - 1
endfunction
function oAt takes integer iAt, integer SAt returns nothing
    local location cAt = GetRandomLocInRect(jo[$0000000B])
    call I7S(AddSpecialEffectLoc("Abilities/Spells/Undead/DarkRitual/DarkRitualTarget.mdl", cAt))
    call RemoveLocation(cAt)
    set cAt = null
endfunction
function pZt takes integer rZt, integer sZt, string tZt returns nothing
    local real iZt
    local real SZt
    local group cZt
    local unit oZt
    local group OZt
    local effect lZt
    local real bZt
    local real yZt
    set DSw[ASw] = tZt
    set ASw = ASw + 1
    if orw[rZt] != null and yXu(orw[rZt]) then
        set bZt = ANw(orw[rZt])
        set yZt = XSw
        set iZt = bZt
        set SZt = yZt
        set cZt = LLt(iZt, SZt, jD, "when calling getUnitsInRange in ProfWitcher_FinalGroupStyle, line 41")
        set OZt = cZt
        loop
            exitwhen not hJw(OZt)
            set oZt = tPr(OZt)
            if yXu(oZt) and iBw(eDs(oZt), Orw[rZt]) and(not n2u(oZt)) and(not fRi(oZt)) and(not gSr(oZt, l2s(Iji("Avul", "when calling unObfuscate in ProfWitcher_FinalGroupStyle, line 43"), "when calling fromRawCode in ProfWitcher_FinalGroupStyle, line 43"))) and(not gSr(oZt, l2s(Iji("AImx", "when calling unObfuscate in ProfWitcher_FinalGroupStyle, line 43"), "when calling fromRawCode in ProfWitcher_FinalGroupStyle, line 43"))) then
    call d1i(orw[rZt], oZt, lrw[rZt])
    set lZt = AddSpecialEffectTarget("Objects/Spawnmodels/Demon/DemonBlood/DemonBloodPitlord.mdl", oZt, "chest")
    call Tir(lZt, 0.2, "when calling destrTimed in ProfWitcher_FinalGroupStyle, line 45")
            endif
        endloop
        call Sju(cZt, "when calling release in ProfWitcher_FinalGroupStyle, line 47")
    else
        call MoS(sZt, "when calling dispatch_CallbackCounted_destroyCallbackCounted in ProfWitcher_FinalGroupStyle, line 49")
    endif
    set ASw = ASw - 1
    set cZt = null
    set oZt = null
    set OZt = null
    set lZt = null
endfunction
function Nju takes effect Vju, real Bju returns nothing
    call BlzSetSpecialEffectPitch(Vju, Bju)
endfunction
function q2S takes integer r2S, integer s2S, string t2S returns nothing
    local real i2S
    local real S2S
    local real c2S
    local real o2S
    local real O2S
    local real l2S
    local real b2S
    local real y2S
    local real p2S
    local real e2S
    set DSw[ASw] = t2S
    set ASw = ASw + 1
    if Siw[r2S] != null then
        set b2S = g2r(Siw[r2S])
        set S2S = b2S
        set i2S = S2S
        call g2r(Siw[r2S])
        set y2S = vcw
        set o2S = y2S
        set c2S = o2S
        set ciw[r2S] = Atan2(Oiw[r2S] - c2S, oiw[r2S] - i2S)
        if not liw[r2S]then
            call Nju(Siw[r2S], ciw[r2S])
        endif
        set p2S = i2S + biw[r2S] * Cos(ciw[r2S])
        set e2S = c2S + biw[r2S] * Sin(ciw[r2S])
        set O2S = p2S
        set l2S = e2S
        call rMw(Siw[r2S], ATS(O2S, l2S, yiw[r2S]), VSw, BSw)
        set piw[r2S] = piw[r2S] - biw[r2S]
        if piw[r2S] < .0 then
            set eiw[r2S] = true
        endif
        if eiw[r2S] or O4r(s2S, "when calling isLast in Voidless_extensions, line 49") then
            if qiw[r2S]then
    call uRi(Siw[r2S])
            else
    call I7S(Siw[r2S])
            endif
            call MCs(s2S, "when calling stop in Voidless_extensions, line 55")
            call MoS(s2S, "when calling dispatch_CallbackCounted_destroyCallbackCounted in Voidless_extensions, line 56")
        endif
    else
        call MCs(s2S, "when calling stop in Voidless_extensions, line 58")
        call MoS(s2S, "when calling dispatch_CallbackCounted_destroyCallbackCounted in Voidless_extensions, line 59")
    endif
    set ASw = ASw - 1
endfunction
function qgu takes integer rgu, integer sgu, string tgu returns nothing
    local real igu
    local real Sgu
    local real cgu
    local real ogu
    local real Ogu
    local real lgu
    local real bgu
    local real ygu
    local real pgu
    local real egu
    set DSw[ASw] = tgu
    set ASw = ASw + 1
    if w9[rgu] != null then
        set bgu = g2r(w9[rgu])
        set Sgu = bgu
        set igu = Sgu
        call g2r(w9[rgu])
        set ygu = vcw
        set ogu = ygu
        set cgu = ogu
        set u9[rgu] = Atan2(s9[rgu] - cgu, r9[rgu] - igu)
        if not t9[rgu]then
            call Nju(w9[rgu], u9[rgu])
        endif
        set pgu = igu + i9[rgu] * Cos(u9[rgu])
        set egu = cgu + i9[rgu] * Sin(u9[rgu])
        set Ogu = pgu
        set lgu = egu
        call rMw(w9[rgu], ATS(Ogu, lgu, S9[rgu]), VSw, BSw)
        set c9[rgu] = c9[rgu] - i9[rgu]
        if c9[rgu] < 30. then
            set o9[rgu] = true
        endif
        if o9[rgu] or O4r(sgu, "when calling isLast in Imp3DragonFortress, line 216") then
            call MCs(sgu, "when calling stop in Imp3DragonFortress, line 217")
            call MoS(sgu, "when calling dispatch_CallbackCounted_destroyCallbackCounted in Imp3DragonFortress, line 219")
        endif
    else
        call MCs(sgu, "when calling stop in Imp3DragonFortress, line 221")
        call MoS(sgu, "when calling dispatch_CallbackCounted_destroyCallbackCounted in Imp3DragonFortress, line 222")
    endif
    set ASw = ASw - 1
endfunction
function RPt takes unit qPt, unit aPt, real nPt returns nothing
    local integer dPt = HJ
    local real fPt = Udi(aPt) - .405
    set HJ = 2
    if fPt > nPt and yXu(aPt) then
        call GYS(aPt, fPt - nPt + .405)
        call UnitDamageTarget(qPt, aPt, 0., true, false, JJ, DAMAGE_TYPE_UNIVERSAL, null)
    elseif yXu(aPt) then
        call UnitDamageTarget(qPt, aPt, 100000. + nPt, true, false, JJ, DAMAGE_TYPE_UNIVERSAL, null)
        call UnitDamageTarget(qPt, aPt, 100000. + nPt, true, false, ATTACK_TYPE_MAGIC, DAMAGE_TYPE_UNIVERSAL, null)
    endif
    set HJ = dPt
endfunction
function qyi takes integer yyi, integer pyi, string eyi returns nothing
    set DSw[ASw] = eyi
    set ASw = ASw + 1
    set Bsw[yyi] = Bsw[yyi] + 1
    if ModuloReal(Bsw[yyi], $0000000A) == 0. then
        call RPt(Nsw[yyi], Msw[yyi], wtw[yyi])
    elseif Bsw[yyi] == utw[yyi]then
        call RPt(Nsw[yyi], Msw[yyi], wtw[yyi] * rtw[yyi])
    endif
    if (not yXu(Msw[yyi]))or Bsw[yyi] == utw[yyi]then
        call MoS(pyi, "when calling dispatch_CallbackCounted_destroyCallbackCounted in UnitItemUtils, line 250")
    endif
    set ASw = ASw - 1
endfunction
function sji takes integer wji, integer uji returns nothing
    local location rji = GetRandomLocInRect(jo[M3[wji]])
    call I7S(AddSpecialEffectLoc("Abilities/Spells/Undead/DarkRitual/DarkRitualTarget.mdl", rji))
    call RemoveLocation(rji)
    set rji = null
endfunction
function WCu takes unit hCu, widget FCu, real kCu, boolean jCu, boolean xCu, attacktype vCu, damagetype mCu, weapontype QCu returns nothing
    call UnitDamageTarget(hCu, FCu, kCu, jCu, xCu, vCu, mCu, QCu)
endfunction
function uhS takes integer NgS, integer MgS, string whS returns nothing
    set DSw[ASw] = whS
    set ASw = ASw + 1
    if (not n2u(ksw[NgS]))and(not fRi(ksw[NgS])) and(not gSr(ksw[NgS], l2s(Iji("Avul", "when calling unObfuscate in Summoner_LightningStorm, line 48"), "when calling fromRawCode in Summoner_LightningStorm, line 48"))) and(not gSr(ksw[NgS], l2s(Iji("AImx", "when calling unObfuscate in Summoner_LightningStorm, line 48"), "when calling fromRawCode in Summoner_LightningStorm, line 48"))) then
        call WCu(jsw[NgS], ksw[NgS], xsw[NgS], false, true, ATTACK_TYPE_CHAOS, DAMAGE_TYPE_UNIVERSAL, WEAPON_TYPE_WHOKNOWS)
    endif
    if (not yXu(ksw[NgS]))or O4r(MgS, "when calling isLast in Summoner_LightningStorm, line 50") then
        call MCs(MgS, "when calling stop in Summoner_LightningStorm, line 51")
    endif
    set ASw = ASw - 1
endfunction
function xtS takes integer ftS, integer RtS, string TtS returns nothing
    local group YtS
    local group GtS
    local unit gtS
    local unit htS
    local real FtS
    local group ktS
    local unit jtS
    set DSw[ASw] = TtS
    set ASw = ASw + 1
    if q3[ftS] != null and a3[ftS] != null and yXu(q3[ftS]) and yXu(a3[ftS]) and GpS(Uj, Aei(a3[ftS]), "when calling has in Dat_UltiIllusions, line 55") then
        set YtS = LLt(ANw(a3[ftS]), XSw, 650., "when calling getUnitsInRange in Dat_UltiIllusions, line 56")
        set GtS = XbS(YtS)
        loop
            exitwhen not hJw(GtS)
            set gtS = tPr(GtS)
            if (not R9s(gtS, a3[ftS]))or(not yXu(gtS)) then
    call Z7t(YtS, gtS)
            endif
        endloop
        call lxs(GtS)
        if smt(YtS) > 0 then
            set htS = null
            set FtS = LD
            set ktS = XbS(YtS)
            loop
    exitwhen not hJw(ktS)
    set jtS = tPr(ktS)
    if fYr(ANw(jtS), XSw, ANw(a3[ftS]), XSw) < FtS and Udi(jtS) > 1. then
                    set FtS = fYr(ANw(jtS), XSw, ANw(a3[ftS]), XSw)
                    set htS = jtS
    endif
            endloop
            call lxs(ktS)
            if htS != null then
    call Hcu(a3[ftS], uD, htS)
            else
    call Hcu(a3[ftS], sD, q3[ftS])
            endif
        else
            call Hcu(a3[ftS], sD, q3[ftS])
        endif
        call Sju(YtS, "when calling release in Dat_UltiIllusions, line 77")
    else
        if not yXu(q3[ftS]) then
            call Z7t(n3[ftS], a3[ftS])
            call qFt(a3[ftS], "when calling decayIllusion in Dat_UltiIllusions, line 81")
        endif
        call MoS(RtS, "when calling dispatch_CallbackCounted_destroyCallbackCounted in Dat_UltiIllusions, line 82")
    endif
    set ASw = ASw - 1
    set YtS = null
    set GtS = null
    set gtS = null
    set htS = null
    set ktS = null
    set jtS = null
endfunction
function y8w takes integer o8w, integer O8w, string l8w returns nothing
    local effect b8w
    set DSw[ASw] = l8w
    set ASw = ASw + 1
    set b8w = uSs(t0w[o8w] + GetRandomReal(- gU, gU), i0w[o8w] + GetRandomReal(- gU, gU), mU)
    call iNw(b8w, 2.)
    call vwt(sU, agS(b8w), "when calling add in Imp4, line 518")
    set ASw = ASw - 1
    set b8w = null
endfunction
function UYs takes integer WYs, integer EYs, string ZYs returns nothing
    set DSw[ASw] = ZYs
    set ASw = ASw + 1
    if tC[WYs] == 0 then
        if WYs == 0 then
            call tNr("Nullpointer exception when calling CallbackCounted.call", "when calling error in ClosureTimers, line 148")
        else
            call tNr("Called CallbackCounted.call on invalid object.", "when calling error in ClosureTimers, line 148")
        endif
    endif
    if tC[WYs] <= 658 then
        if tC[WYs] <= 652 then
            if tC[WYs] <= 649 then
    if tC[WYs] <= 647 then
                    if tC[WYs] <= 646 then
                        call Srt(WYs, EYs, "when calling call_doPeriodicallyCounted_Avenger_Champ_MS_RM_Taunt in ClosureTimers, line 148")
                    else
                        call xtS(WYs, EYs, "when calling call_doPeriodicallyCounted_Dat_UltiIllusions in ClosureTimers, line 148")
                    endif
    elseif tC[WYs] <= 648 then
                    call sji(WYs, EYs)
    else
                    call OTs(WYs, EYs, "when calling call_doPeriodicallyCounted_GrandTemplar_PsiDestruction in ClosureTimers, line 148")
    endif
            elseif tC[WYs] <= 651 then
    if tC[WYs] <= 650 then
                    call oAt(WYs, EYs)
    else
                    call qgu(WYs, EYs, "when calling call_doPeriodicallyCounted_Imp3DragonFortress in ClosureTimers, line 148")
    endif
            else
    call pZt(WYs, EYs, "when calling call_doPeriodicallyCounted_ProfWitcher_FinalGroupStyle in ClosureTimers, line 148")
            endif
        elseif tC[WYs] <= 655 then
            if tC[WYs] <= 654 then
    if tC[WYs] <= 653 then
                    call IVw(WYs, EYs, "when calling call_doPeriodicallyCounted_ProfWitcher_Ulti in ClosureTimers, line 148")
    else
                    call BcS(WYs, EYs, "when calling call_doPeriodicallyCounted_Reinforce_Effect in ClosureTimers, line 148")
    endif
            else
    call uhS(WYs, EYs, "when calling call_doPeriodicallyCounted_Summoner_LightningStorm in ClosureTimers, line 148")
            endif
        elseif tC[WYs] <= 657 then
            if tC[WYs] <= 656 then
    call LUr(WYs, EYs, "when calling call_doPeriodicallyCounted_Voidless in ClosureTimers, line 148")
            else
    call q2S(WYs, EYs, "when calling call_doPeriodicallyCounted_Voidless_extensions in ClosureTimers, line 148")
            endif
        else
            call y8w(WYs, EYs, "when calling call_doPeriodicallyCounted_doAfter_Imp4 in ClosureTimers, line 148")
        endif
    elseif tC[WYs] <= 664 then
        if tC[WYs] <= 661 then
            if tC[WYs] <= 660 then
    if tC[WYs] <= 659 then
                    call bbs(WYs, EYs, "when calling call_doPeriodicallyCounted_doAfter_Rh_Effect in ClosureTimers, line 148")
    else
                    call cns(WYs, EYs, "when calling call_doPeriodicallyCounted_doAfter_Voidless_mechanics in ClosureTimers, line 148")
    endif
            else
    call fEi(WYs, EYs, "when calling call_doPeriodicallyCounted_doPeriodicallyCounted_ProfWitcher_Ulti in ClosureTimers, line 148")
            endif
        elseif tC[WYs] <= 663 then
            if tC[WYs] <= 662 then
    call LTt(WYs, EYs, "when calling call_doPeriodicallyCounted_doPeriodically_Imp4 in ClosureTimers, line 148")
            else
    call bSi(WYs, EYs, "when calling call_doPeriodicallyCounted_doPeriodically_Imp4 in ClosureTimers, line 148")
            endif
        else
            call M9r(WYs, EYs, "when calling call_doPeriodicallyTimed_Archsage_WhiteWhizard_ArcaneManaBond in ClosureTimers, line 148")
        endif
    elseif tC[WYs] <= 667 then
        if tC[WYs] <= 666 then
            if tC[WYs] <= 665 then
    call aSi(WYs, EYs, "when calling call_doPeriodicallyTimed_FateDestinyUnlocker in ClosureTimers, line 148")
            else
    call ELr(WYs, EYs, "when calling call_doPeriodicallyTimed_FateDestinyUnlocker in ClosureTimers, line 148")
            endif
        else
            call j8r(WYs, EYs, "when calling call_doPeriodicallyTimed_PVP in ClosureTimers, line 148")
        endif
    elseif tC[WYs] <= 669 then
        if tC[WYs] <= 668 then
            call qyi(WYs, EYs, "when calling call_doPeriodicallyTimed_UnitItemUtils in ClosureTimers, line 148")
        else
            call k3i(WYs, EYs, "when calling call_doPeriodicallyTimed_UnitItemUtils in ClosureTimers, line 148")
        endif
    else
        call RPs(WYs, EYs)
    endif
    set ASw = ASw - 1
endfunction
function h9S takes integer G9S, string g9S returns nothing
    set DSw[ASw] = g9S
    set ASw = ASw + 1
    if FM[G9S] > 0 then
        call UYs(G9S, G9S, "when calling call in ClosureTimers, line 170")
        set FM[G9S] = FM[G9S] - 1
    else
        call MoS(G9S, "when calling dispatch_CallbackCounted_destroyCallbackCounted in ClosureTimers, line 173")
    endif
    set ASw = ASw - 1
endfunction
function pri takes integer bri, string yri returns nothing
    set DSw[ASw] = yri
    set ASw = ASw + 1
    if tC[bri] == 0 then
        if bri == 0 then
            call tNr("Nullpointer exception when calling CallbackCounted.callAndCount", "when calling error in ClosureTimers, line 168")
        else
            call tNr("Called CallbackCounted.callAndCount on invalid object.", "when calling error in ClosureTimers, line 168")
        endif
    endif
    call h9S(bri, "when calling callAndCount in ClosureTimers, line 168")
    set ASw = ASw - 1
endfunction
function HLu takes string DLu returns nothing
    set DSw[ASw] = DLu
    set ASw = ASw + 1
    call pri(PPi(GetExpiredTimer(), "when calling getData in ClosureTimers, line 166"), "when calling callAndCount in ClosureTimers, line 166")
    set ASw = ASw - 1
endfunction
function KBu takes nothing returns nothing
    set ASw = 0
    call HLu("via function reference ClosureTimers, line 154")
endfunction
function KDr takes nothing returns nothing
    call ForceAddPlayer(Ns, GetOwningPlayer(GetTriggerUnit()))
    call StartTimerBJ(nt, false, 60.)
    call CreateTimerDialogBJ(nt, "|cffff0000Time Remaining|r")
    set ht = bj_lastCreatedTimerDialog
    set tt = GetRectCenter(Tp)
    call CreateNUnitsAtLoc($00000008, $6E303149, Player($0000000A), tt, bj_UNIT_FACING)
    call CreateNUnitsAtLoc($00000006, $6E30314A, Player($0000000A), tt, bj_UNIT_FACING)
    call EnableTrigger(UT)
    call RemoveLocation(tt)
endfunction
function KHt takes nothing returns nothing
    call SetUnitPositionLoc(GetEnumUnit(), br[1 + GetPlayerId(GetOwningPlayer(GetEnumUnit()))])
endfunction
function KIt takes nothing returns boolean
    return IsUnitType(GetFilterUnit(), UNIT_TYPE_HERO) != false
endfunction
function KKt takes nothing returns boolean
    return IsUnitType(GetFilterUnit(), UNIT_TYPE_HERO) != false
endfunction
function KNi takes nothing returns boolean
    return (GetItemTypeId(GetManipulatedItem()) == 1227895865 and IsUnitType(GetTriggerUnit(), UNIT_TYPE_HERO) and GetHeroLevel(GetTriggerUnit()) >= 65 and IsPlayerInForce(GetOwningPlayer(GetTriggerUnit()), IS[$0000000D]) == false) != false
endfunction
function N0t takes string V0t returns integer
    local integer B0t
    set DSw[ASw] = V0t
    set ASw = ASw + 1
    if NX == 0 then
        if MX < 32768 then
            set MX = MX + 1
            set B0t = MX
            set wC[B0t] = 1003
        else
            call tNr("Out of memory: Could not create CallbackSingle_doAfter_WorldBoss.", "when calling error in WorldBoss, line 25")
            set B0t = 0
        endif
    else
        set NX = NX - 1
        set B0t = BX[NX]
        set wC[B0t] = 1003
    endif
    set ASw = ASw - 1
    return B0t
endfunction
function Bwi takes integer Iwi, real Pwi, real Awi, real Dwi, string Hwi returns unit
    local unit Jwi
    local unit Kwi
    local unit Lwi
    local unit Xwi
    local integer Cwi
    local real Vwi
    set DSw[ASw] = Hwi
    set ASw = ASw + 1
    set Kwi = dps(aD[PLAYER_NEUTRAL_PASSIVE], Iwi, Pwi, Awi, GetRandomReal(0., 5.))
    call WGi(Kwi, 0.)
    set Lwi = Kwi
    call Mvt(Lwi)
    set Xwi = Lwi
    call Yis(Xwi, $0000012C, false)
    set Jwi = Xwi
    if Dwi > 0. then
        set Vwi = Dwi
        set Cwi = N0t("when calling alloc_CallbackSingle_doAfter_WorldBoss in WorldBoss, line 25")
        call RUs(Cwi)
        set ISw[Cwi] = Jwi
        call Ybr(Vwi, Cwi, "when calling doAfter in WorldBoss, line 25")
    endif
    set ASw = ASw - 1
    set RIw = Jwi
    set Jwi = null
    set Kwi = null
    set Lwi = null
    set Xwi = null
    return RIw
endfunction
function hts takes integer gts returns real
    set Kow = VM[gts]
    set Low = BM[gts]
    return Kow
endfunction
function SOr takes integer wOr, string uOr returns real
    local real rOr
    local real sOr
    local real tOr
    local real iOr
    set DSw[ASw] = uOr
    set ASw = ASw + 1
    if cV[wOr] == 0 then
        if wOr == 0 then
            call tNr("Nullpointer exception when calling CustomLocation.toVec2", "when calling error in CustomLocation, line 55")
        else
            call tNr("Called CustomLocation.toVec2 on invalid object.", "when calling error in CustomLocation, line 55")
        endif
    endif
    set tOr = hts(wOr)
    set iOr = Low
    set rOr = tOr
    set sOr = iOr
    set ASw = ASw - 1
    set ycw = rOr
    set pcw = sOr
    return ycw
endfunction
function iCr takes integer MXr, string wCr returns real
    local real uCr
    local real rCr
    local real sCr
    local real tCr
    set DSw[ASw] = wCr
    set ASw = ASw + 1
    set sCr = SOr(C_r(MXr, GetRandomInt($00000000, wds(MXr, "when calling size in WorldBoss, line 17") - 1), "when calling get in WorldBoss, line 17"), "when calling toVec2 in WorldBoss, line 17")
    set tCr = pcw
    set uCr = sCr
    set rCr = tCr
    set ASw = ASw - 1
    set Iow = uCr
    set Aow = rCr
    return Iow
endfunction
function MSu takes string CSu returns nothing
    local unit VSu
    local integer BSu
    local unit NSu
    set DSw[ASw] = CSu
    set ASw = ASw + 1
    set VSu = GetTriggerUnit()
    set BSu = r5S(VSu)
    if BSu == AX then
        set NSu = GetKillingUnit()
        if DX != null then
            call uFr(DX)
            set DX = null
        endif
        set DX = Bwi(AX, iCr(JX, "when calling getRandomVec2 in WorldBoss, line 40"), Aow, KX, "when calling spawn_worldBoss in WorldBoss, line 40")
        call NZr(hgr(eDs(NSu)), "when calling completeQuest_betrayedAngels in WorldBoss, line 42")
    endif
    set ASw = ASw - 1
    set VSu = null
    set NSu = null
endfunction
function KNs takes nothing returns nothing
    set ASw = 0
    call MSu("via function reference WorldBoss, line 54")
endfunction
function Vit takes string Lit returns nothing
    local unit Xit
    local unit Cit
    set DSw[ASw] = Lit
    set ASw = ASw + 1
    set Xit = GetDyingUnit()
    set Cit = GetKillingUnit()
    if Xit != null and Cit != null and GpS(gQ, hgr(eDs(Cit)), "when calling has in JobAdvancementQuestHandler, line 88") then
        if aSr(Xit) <= k6w("8373", "when calling unObfuscateInt in JobAdvancementQuestHandler, line 89") then
            if Cit != null then
    call Tri(Cit)
    call uFr(Cit)
            endif
            call dii(Iji("You are a sponge! Your actions seems to come from hacking!", "when calling unObfuscate in JobAdvancementQuestHandler, line 95"), 5., eDs(Cit))
        endif
    endif
    set fu = true
    set ASw = ASw - 1
    set Xit = null
    set Cit = null
endfunction
function KNw takes nothing returns nothing
    set ASw = 0
    call Vit("via function reference JobAdvancementQuestHandler, line 1195")
endfunction
function KNu takes string HNu returns integer
    local integer JNu
    set DSw[ASw] = HNu
    set ASw = ASw + 1
    if NX == 0 then
        if MX < 32768 then
            set MX = MX + 1
            set JNu = MX
            set wC[JNu] = 826
        else
            call tNr("Out of memory: Could not create CallbackSingle_doAfter_HeroXP_Reduction.", "when calling error in HeroXP_Reduction, line 29")
            set JNu = 0
        endif
    else
        set NX = NX - 1
        set JNu = BX[NX]
        set wC[JNu] = 826
    endif
    set ASw = ASw - 1
    return JNu
endfunction
function Vpr takes string Jpr returns nothing
    local unit Kpr
    local player Lpr
    local player Xpr
    local integer Cpr
    set DSw[ASw] = Jpr
    set ASw = ASw + 1
    set Kpr = GetTriggerUnit()
    if Kpr == null then
        set Xpr = GetTriggerPlayer()
    else
        set Xpr = eDs(Kpr)
    endif
    set Lpr = Xpr
    if Kpr != null and Lpr != null and hgr(Lpr) <= Lh then
        set Cpr = KNu("when calling alloc_CallbackSingle_doAfter_HeroXP_Reduction in HeroXP_Reduction, line 29")
        call RUs(Cpr)
        set n8[Cpr] = Lpr
        set d8[Cpr] = Kpr
        call Ybr(1., Cpr, "when calling doAfter in HeroXP_Reduction, line 29")
    endif
    set ASw = ASw - 1
    set Kpr = null
    set Lpr = null
    set Xpr = null
endfunction
function KRt takes nothing returns nothing
    set ASw = 0
    call Vpr("via function reference HeroXP_Reduction, line 38")
endfunction
function KSS takes nothing returns nothing
    call SetPlayerMaxHeroesAllowed($00000000, GetOwningPlayer(GetSoldUnit()))
    call SelectUnitForPlayerSingle(GetSoldUnit(), GetOwningPlayer(GetSoldUnit()))
endfunction
function BPt takes nothing returns boolean
    return GetUnitTypeId(GetTriggerUnit()) == 1211117618
endfunction
function UGS takes nothing returns boolean
    return GetUnitTypeId(GetTriggerUnit()) == 1211117617
endfunction
function KSr takes nothing returns boolean
    return GetBooleanOr(BPt(), UGS())
endfunction
function V4i takes nothing returns boolean
    return kt[1 + GetPlayerId(GetOwningPlayer(GetKillingUnit()))] >= 50
endfunction
function KYi takes nothing returns nothing
    set kt[1 + GetPlayerId(GetOwningPlayer(GetKillingUnit()))] = kt[1 + GetPlayerId(GetOwningPlayer(GetKillingUnit()))] + 1
    if V4i() then
        call QuestMessageBJ(MwS(GetOwningPlayer(GetKillingUnit())), $00000002, "|cffffcc004th Job Advancement Quest Completed|r.")
        call ForceAddPlayer(jt, GetOwningPlayer(GetKillingUnit()))
    else
        call QuestMessageBJ(MwS(GetOwningPlayer(GetKillingUnit())), $00000001, I2S(kt[1 + GetPlayerId(GetOwningPlayer(GetKillingUnit()))]) + " Monster(s) killed.")
    endif
endfunction
function KYr takes nothing returns boolean
    set qJ = InitHashtable()
    return true
endfunction
function j6t takes nothing returns boolean
    return GetUnitTypeId(GetTriggerUnit()) == 1211118147 or GetUnitTypeId(GetTriggerUnit()) == 1211118146
endfunction
function K_S takes nothing returns boolean
    return GetSpellAbilityId() == 1093679188 and GetPlayerState(GetOwningPlayer(GetTriggerUnit()), PLAYER_STATE_RESOURCE_FOOD_USED) == 100 and oS[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))] == 1 and j6t()
endfunction
function K_i takes nothing returns boolean
    return GetUnitTypeId(GetTriggerUnit()) == 1211117877 and GetUnitTypeId(GetOrderTargetUnit()) == 1747988819 and IsPlayerInForce(GetOwningPlayer(GetTriggerUnit()), rt) and IsPlayerInForce(GetOwningPlayer(GetTriggerUnit()), Ft) and IsUnitInGroup(GetTriggerUnit(), kpu(300., GetUnitLoc(GetOrderTargetUnit())))
endfunction
function K_t takes nothing returns nothing
    call RemoveItem(GetManipulatedItem())
    call ForceAddPlayer(Uo[$00000001], GetOwningPlayer(GetTriggerUnit()))
    call T_i(GetOwningPlayer(GetTriggerUnit()), $00000000, "Profession Advancement", "|cffff0000Fishing Profession Advancement Quest|r\n|cff00ff00Apprentice|r\nBefore I even learn how to fish, I would need a fishing rod. Fisherman's Friend told me that in order to build a fishing rod, he needs 2 things.\n-A cane found commonly in trees near creeks.\n-A roll of fishing line that Skypper is said to sell.", "ReplaceableTextures\\CommandButtons\\BTNStatUp.blp")
    set Ao[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))] = bj_lastCreatedQuest
    call DisplayTextToForce(MwS(GetOwningPlayer(GetTriggerUnit())), "|cffff8c00Fisherman's Friend|r : Good! Always glad to see another fisherman join our ranks! The world needs more fishermen these days, especially in these dark times...cursed monsters all around... Anyway, first you must learn how to build your own Fishing rod! Don't worry, it isnt too hard since I'll be guiding you on this! All you need to do is get a sturdy cane commonly found in trees near creeks and a roll of fishing line that I think Skypper sells.")
endfunction
function A0s takes string I0s returns integer
    local integer P0s
    set DSw[ASw] = I0s
    set ASw = ASw + 1
    if NX == 0 then
        if MX < 32768 then
            set MX = MX + 1
            set P0s = MX
            set wC[P0s] = 906
        else
            call tNr("Out of memory: Could not create CallbackSingle_doAfter_JobAdvancementQuestHandler.", "when calling error in JobAdvancementQuestHandler, line 1104")
            set P0s = 0
        endif
    else
        set NX = NX - 1
        set P0s = BX[NX]
        set wC[P0s] = 906
    endif
    set ASw = ASw - 1
    return P0s
endfunction
function AOi takes string IOi returns integer
    local integer POi
    set DSw[ASw] = IOi
    set ASw = ASw + 1
    if PC == 0 then
        if AC < 32768 then
            set AC = AC + 1
            set POi = AC
            set DC[POi] = 695
        else
            call tNr("Out of memory: Could not create CallbackPeriodic_doPeriodically_JobAdvancementQuestHandler.", "when calling error in JobAdvancementQuestHandler, line 919")
            set POi = 0
        endif
    else
        set PC = PC - 1
        set POi = IC[PC]
        set DC[POi] = 695
    endif
    set ASw = ASw - 1
    return POi
endfunction
function BLw takes string CLw returns integer
    local integer VLw
    set DSw[ASw] = CLw
    set ASw = ASw + 1
    if NX == 0 then
        if MX < 32768 then
            set MX = MX + 1
            set VLw = MX
            set wC[VLw] = 908
        else
            call tNr("Out of memory: Could not create CallbackSingle_doAfter_JobAdvancementQuestHandler.", "when calling error in JobAdvancementQuestHandler, line 1212")
            set VLw = 0
        endif
    else
        set NX = NX - 1
        set VLw = BX[NX]
        set wC[VLw] = 908
    endif
    set ASw = ASw - 1
    return VLw
endfunction
function DYt takes string IYt, string PYt returns real
    local real AYt
    set DSw[ASw] = PYt
    set ASw = ASw + 1
    set AYt = v0t(Iji(IYt, "when calling unObfuscate in TerrainHighCliffSetup, line 133"))
    set ASw = ASw - 1
    return AYt
endfunction
function Dlu takes string Plu returns integer
    local integer Alu
    set DSw[ASw] = Plu
    set ASw = ASw + 1
    if PC == 0 then
        if AC < 32768 then
            set AC = AC + 1
            set Alu = AC
            set DC[Alu] = 692
        else
            call tNr("Out of memory: Could not create CallbackPeriodic_doPeriodically_JobAdvancementQuestHandler.", "when calling error in JobAdvancementQuestHandler, line 786")
            set Alu = 0
        endif
    else
        set PC = PC - 1
        set Alu = IC[PC]
        set DC[Alu] = 692
    endif
    set ASw = ASw - 1
    return Alu
endfunction
function EVr takes string QVr returns integer
    local integer WVr
    set DSw[ASw] = QVr
    set ASw = ASw + 1
    if PC == 0 then
        if AC < 32768 then
            set AC = AC + 1
            set WVr = AC
            set DC[WVr] = 696
        else
            call tNr("Out of memory: Could not create CallbackPeriodic_doPeriodically_JobAdvancementQuestHandler.", "when calling error in JobAdvancementQuestHandler, line 1058")
            set WVr = 0
        endif
    else
        set PC = PC - 1
        set WVr = IC[PC]
        set DC[WVr] = 696
    endif
    set ASw = ASw - 1
    return WVr
endfunction
function FYS takes string gYS returns integer
    local integer hYS
    set DSw[ASw] = gYS
    set ASw = ASw + 1
    if NX == 0 then
        if MX < 32768 then
            set MX = MX + 1
            set hYS = MX
            set wC[hYS] = 902
        else
            call tNr("Out of memory: Could not create CallbackSingle_doAfter_JobAdvancementQuestHandler.", "when calling error in JobAdvancementQuestHandler, line 1042")
            set hYS = 0
        endif
    else
        set NX = NX - 1
        set hYS = BX[NX]
        set wC[hYS] = 902
    endif
    set ASw = ASw - 1
    return hYS
endfunction
function Jir takes string Dir returns integer
    local integer Hir
    set DSw[ASw] = Dir
    set ASw = ASw + 1
    if PC == 0 then
        if AC < 32768 then
            set AC = AC + 1
            set Hir = AC
            set DC[Hir] = 694
        else
            call tNr("Out of memory: Could not create CallbackPeriodic_doPeriodically_JobAdvancementQuestHandler.", "when calling error in JobAdvancementQuestHandler, line 893")
            set Hir = 0
        endif
    else
        set PC = PC - 1
        set Hir = IC[PC]
        set DC[Hir] = 694
    endif
    set ASw = ASw - 1
    return Hir
endfunction
function Jkr takes string Dkr returns integer
    local integer Hkr
    set DSw[ASw] = Dkr
    set ASw = ASw + 1
    if PC == 0 then
        if AC < 32768 then
            set AC = AC + 1
            set Hkr = AC
            set DC[Hkr] = 699
        else
            call tNr("Out of memory: Could not create CallbackPeriodic_doPeriodically_JobAdvancementQuestHandler.", "when calling error in JobAdvancementQuestHandler, line 1081")
            set Hkr = 0
        endif
    else
        set PC = PC - 1
        set Hkr = IC[PC]
        set DC[Hkr] = 699
    endif
    set ASw = ASw - 1
    return Hkr
endfunction
function LpS takes string JpS returns integer
    local integer KpS
    set DSw[ASw] = JpS
    set ASw = ASw + 1
    if NX == 0 then
        if MX < 32768 then
            set MX = MX + 1
            set KpS = MX
            set wC[KpS] = 905
        else
            call tNr("Out of memory: Could not create CallbackSingle_doAfter_JobAdvancementQuestHandler.", "when calling error in JobAdvancementQuestHandler, line 1098")
            set KpS = 0
        endif
    else
        set NX = NX - 1
        set KpS = BX[NX]
        set wC[KpS] = 905
    endif
    set ASw = ASw - 1
    return KpS
endfunction
function M4r takes string B4r returns integer
    local integer N4r
    set DSw[ASw] = B4r
    set ASw = ASw + 1
    if NX == 0 then
        if MX < 32768 then
            set MX = MX + 1
            set N4r = MX
            set wC[N4r] = 900
        else
            call tNr("Out of memory: Could not create CallbackSingle_doAfter_JobAdvancementQuestHandler.", "when calling error in JobAdvancementQuestHandler, line 1028")
            set N4r = 0
        endif
    else
        set NX = NX - 1
        set N4r = BX[NX]
        set wC[N4r] = 900
    endif
    set ASw = ASw - 1
    return N4r
endfunction
function Nls takes string Vls returns integer
    local integer Bls
    set DSw[ASw] = Vls
    set ASw = ASw + 1
    if NX == 0 then
        if MX < 32768 then
            set MX = MX + 1
            set Bls = MX
            set wC[Bls] = 907
        else
            call tNr("Out of memory: Could not create CallbackSingle_doAfter_JobAdvancementQuestHandler.", "when calling error in JobAdvancementQuestHandler, line 1198")
            set Bls = 0
        endif
    else
        set NX = NX - 1
        set Bls = BX[NX]
        set wC[Bls] = 907
    endif
    set ASw = ASw - 1
    return Bls
endfunction
function QPt takes string vPt returns integer
    local integer mPt
    set DSw[ASw] = vPt
    set ASw = ASw + 1
    if NX == 0 then
        if MX < 32768 then
            set MX = MX + 1
            set mPt = MX
            set wC[mPt] = 901
        else
            call tNr("Out of memory: Could not create CallbackSingle_doAfter_JobAdvancementQuestHandler.", "when calling error in JobAdvancementQuestHandler, line 1035")
            set mPt = 0
        endif
    else
        set NX = NX - 1
        set mPt = BX[NX]
        set wC[mPt] = 901
    endif
    set ASw = ASw - 1
    return mPt
endfunction
function SVt takes string tVt returns integer
    local integer iVt
    set DSw[ASw] = tVt
    set ASw = ASw + 1
    if PC == 0 then
        if AC < 32768 then
            set AC = AC + 1
            set iVt = AC
            set DC[iVt] = 700
        else
            call tNr("Out of memory: Could not create CallbackPeriodic_doPeriodically_JobAdvancementQuestHandler.", "when calling error in JobAdvancementQuestHandler, line 1086")
            set iVt = 0
        endif
    else
        set PC = PC - 1
        set iVt = IC[PC]
        set DC[iVt] = 700
    endif
    set ASw = ASw - 1
    return iVt
endfunction
function TGt takes string fGt returns integer
    local integer RGt
    set DSw[ASw] = fGt
    set ASw = ASw + 1
    if PC == 0 then
        if AC < 32768 then
            set AC = AC + 1
            set RGt = AC
            set DC[RGt] = 693
        else
            call tNr("Out of memory: Could not create CallbackPeriodic_doPeriodically_JobAdvancementQuestHandler.", "when calling error in JobAdvancementQuestHandler, line 875")
            set RGt = 0
        endif
    else
        set PC = PC - 1
        set RGt = IC[PC]
        set DC[RGt] = 693
    endif
    set ASw = ASw - 1
    return RGt
endfunction
function Vvi takes string Xvi returns integer
    local integer Cvi
    set DSw[ASw] = Xvi
    set ASw = ASw + 1
    if NX == 0 then
        if MX < 32768 then
            set MX = MX + 1
            set Cvi = MX
            set wC[Cvi] = 898
        else
            call tNr("Out of memory: Could not create CallbackSingle_doAfter_JobAdvancementQuestHandler.", "when calling error in JobAdvancementQuestHandler, line 835")
            set Cvi = 0
        endif
    else
        set NX = NX - 1
        set Cvi = BX[NX]
        set wC[Cvi] = 898
    endif
    set ASw = ASw - 1
    return Cvi
endfunction
function YDr takes string RDr returns integer
    local integer TDr
    set DSw[ASw] = RDr
    set ASw = ASw + 1
    if PC == 0 then
        if AC < 32768 then
            set AC = AC + 1
            set TDr = AC
            set DC[TDr] = 698
        else
            call tNr("Out of memory: Could not create CallbackPeriodic_doPeriodically_JobAdvancementQuestHandler.", "when calling error in JobAdvancementQuestHandler, line 1075")
            set TDr = 0
        endif
    else
        set PC = PC - 1
        set TDr = IC[PC]
        set DC[TDr] = 698
    endif
    set ASw = ASw - 1
    return TDr
endfunction
function dAu takes string aAu returns integer
    local integer nAu
    set DSw[ASw] = aAu
    set ASw = ASw + 1
    if NX == 0 then
        if MX < 32768 then
            set MX = MX + 1
            set nAu = MX
            set wC[nAu] = 904
        else
            call tNr("Out of memory: Could not create CallbackSingle_doAfter_JobAdvancementQuestHandler.", "when calling error in JobAdvancementQuestHandler, line 1092")
            set nAu = 0
        endif
    else
        set NX = NX - 1
        set nAu = BX[NX]
        set wC[nAu] = 904
    endif
    set ASw = ASw - 1
    return nAu
endfunction
function has takes string Gas returns integer
    local integer gas
    set DSw[ASw] = Gas
    set ASw = ASw + 1
    if PC == 0 then
        if AC < 32768 then
            set AC = AC + 1
            set gas = AC
            set DC[gas] = 697
        else
            call tNr("Out of memory: Could not create CallbackPeriodic_doPeriodically_JobAdvancementQuestHandler.", "when calling error in JobAdvancementQuestHandler, line 1069")
            set gas = 0
        endif
    else
        set PC = PC - 1
        set gas = IC[PC]
        set DC[gas] = 697
    endif
    set ASw = ASw - 1
    return gas
endfunction
function qYS takes trigger pYS, gameevent eYS returns event
    return TriggerRegisterGameEvent(pYS, eYS)
endfunction
function qhr takes string phr returns integer
    local integer ehr
    set DSw[ASw] = phr
    set ASw = ASw + 1
    if NX == 0 then
        if MX < 32768 then
            set MX = MX + 1
            set ehr = MX
            set wC[ehr] = 903
        else
            call tNr("Out of memory: Could not create CallbackSingle_doAfter_JobAdvancementQuestHandler.", "when calling error in JobAdvancementQuestHandler, line 1049")
            set ehr = 0
        endif
    else
        set NX = NX - 1
        set ehr = BX[NX]
        set wC[ehr] = 903
    endif
    set ASw = ASw - 1
    return ehr
endfunction
function oSu takes integer tSu, real iSu, real SSu, real cSu returns item
    return CreateItem(tSu, iSu, SSu)
endfunction
function rgt takes integer MGt, real wgt, real ugt returns item
    return oSu(MGt, k9t(wgt, ugt), iow, Sow)
endfunction
function rqs takes string wqs returns integer
    local integer uqs
    set DSw[ASw] = wqs
    set ASw = ASw + 1
    if NX == 0 then
        if MX < 32768 then
            set MX = MX + 1
            set uqs = MX
            set wC[uqs] = 897
        else
            call tNr("Out of memory: Could not create CallbackSingle_doAfter_JobAdvancementQuestHandler.", "when calling error in JobAdvancementQuestHandler, line 784")
            set uqs = 0
        endif
    else
        set NX = NX - 1
        set uqs = BX[NX]
        set wC[uqs] = 897
    endif
    set ASw = ASw - 1
    return uqs
endfunction
function wwu takes string N_u returns integer
    local integer M_u
    set DSw[ASw] = N_u
    set ASw = ASw + 1
    if NX == 0 then
        if MX < 32768 then
            set MX = MX + 1
            set M_u = MX
            set wC[M_u] = 899
        else
            call tNr("Out of memory: Could not create CallbackSingle_doAfter_JobAdvancementQuestHandler.", "when calling error in JobAdvancementQuestHandler, line 987")
            set M_u = 0
        endif
    else
        set NX = NX - 1
        set M_u = BX[NX]
        set wC[M_u] = 899
    endif
    set ASw = ASw - 1
    return M_u
endfunction
function WRt takes string ibt returns boolean
    local integer Sbt
    local integer cbt
    local integer obt
    local integer Obt
    local integer lbt
    local integer bbt
    local integer ybt
    local integer pbt
    local integer ebt
    local integer qbt
    local integer abt
    local integer nbt
    local integer dbt
    local integer fbt
    local integer Rbt
    local integer Tbt
    local integer Ybt
    local integer Gbt
    local integer gbt
    local integer hbt
    local integer Fbt
    local integer kbt
    local integer jbt
    local integer xbt
    local integer vbt
    local integer mbt
    local integer Qbt
    local integer Wbt
    local item Ebt
    local item Zbt
    local integer Ubt
    local integer Ibt
    local trigger Pbt
    local trigger Abt
    local trigger Dbt
    local trigger Hbt
    local trigger Jbt
    local integer Kbt
    local trigger Lbt
    local trigger Xbt
    local integer Cbt
    local integer Vbt
    local integer Bbt
    local trigger Nbt
    local trigger Mbt
    local trigger wyt
    local trigger uyt
    local integer ryt
    local integer syt
    local integer tyt
    local integer iyt
    local integer Syt
    local integer cyt
    local integer oyt
    local integer Oyt
    local integer lyt
    local integer byt
    local integer yyt
    local integer pyt
    local integer eyt
    local integer qyt
    local integer ayt
    local integer nyt
    local integer dyt
    local integer fyt
    local integer Ryt
    local integer Tyt
    local integer Yyt
    local integer Gyt
    local integer gyt
    local integer hyt
    local integer Fyt
    local integer kyt
    local integer jyt
    local integer xyt
    local integer vyt
    local integer myt
    local integer Qyt
    local integer Wyt
    local integer Eyt
    local integer Zyt
    local integer Uyt
    local integer Iyt
    local integer Pyt
    local integer Ayt
    local integer Dyt
    local integer Hyt
    local integer Jyt
    local integer Kyt
    local integer Lyt
    local integer Xyt
    local integer Cyt
    local integer Vyt
    local integer Byt
    local integer Nyt
    local integer Myt
    local integer wpt
    local integer upt
    local integer rpt
    local integer spt
    local integer tpt
    local integer ipt
    local integer Spt
    local integer cpt
    local integer opt
    local integer Opt
    local integer lpt
    local integer bpt
    local integer ypt
    local integer ppt
    local integer ept
    local integer qpt
    local integer apt
    local integer npt
    local integer dpt
    local integer fpt
    local integer Rpt
    local integer Tpt
    local integer Ypt
    local integer Gpt
    local integer gpt
    local integer hpt
    local integer Fpt
    local integer kpt
    local integer jpt
    local integer xpt
    local integer vpt
    local integer mpt
    local integer Qpt
    local integer Wpt
    local integer Ept
    local integer Zpt
    local integer Upt
    local integer Ipt
    local integer Ppt
    local integer Apt
    local integer Dpt
    local integer Hpt
    local integer Jpt
    local integer Kpt
    local integer Lpt
    local integer Xpt
    local integer Cpt
    local integer Vpt
    local integer Bpt
    local integer Npt
    local integer Mpt
    local integer wet
    local integer uet
    local integer ret
    local integer tet
    local integer iet
    local integer Set
    local integer cet
    local integer oet
    local integer Oet
    local integer let
    local integer bet
    local integer yet
    local integer pet
    local integer eet
    local integer qet
    local integer aet
    local integer net
    local integer det
    local integer fet
    local integer Ret
    local integer Tet
    local integer Yet
    local integer Get
    local integer get
    local integer het
    local integer Fet
    local integer ket
    local integer jet
    local integer xet
    local integer vet
    local integer met
    local integer Qet
    local integer Wet
    local integer Eet
    local integer Zet
    local integer Uet
    local integer Iet
    local integer Pet
    local integer Aet
    local integer Det
    local integer Het
    local integer Jet
    local integer Ket
    local integer Let
    local integer Xet
    local integer Cet
    local integer Vet
    local integer Bet
    local integer Net
    local integer Met
    local integer wqt
    local integer uqt
    local integer rqt
    local integer sqt
    local integer tqt
    local integer iqt
    local integer Sqt
    local integer cqt
    local integer oqt
    local integer Oqt
    local integer lqt
    local integer bqt
    local integer yqt
    local integer pqt
    local integer eqt
    local integer qqt
    local integer aqt
    local integer nqt
    local integer dqt
    local integer fqt
    local integer Rqt
    local integer Tqt
    local integer Yqt
    local integer Gqt
    local integer gqt
    local integer hqt
    local integer Fqt
    local integer kqt
    local integer jqt
    local integer xqt
    local integer vqt
    local integer mqt
    local integer Qqt
    local integer Wqt
    local integer Eqt
    local integer Zqt
    local integer Uqt
    local integer Iqt
    local integer Pqt
    local integer Aqt
    local integer Dqt
    local integer Hqt
    local integer Jqt
    local integer Kqt
    local integer Lqt
    local integer Xqt
    local integer Cqt
    local integer Vqt
    local integer Bqt
    local integer Nqt
    local integer Mqt
    local integer wat
    local integer uat
    local integer rat
    local integer sat
    local integer tat
    local integer iat
    local integer Sat
    local integer cat
    local integer oat
    local integer Oat
    local integer lat
    local integer bat
    local integer yat
    local integer pat
    local integer eat
    local integer qat
    local integer aat
    local integer nat
    local integer dat
    local integer fat
    local integer Rat
    local integer Tat
    local integer Yat
    local integer Gat
    local integer gat
    local integer hat
    local integer Fat
    local integer kat
    local integer jat
    local integer xat
    local integer vat
    local integer mat
    local integer Qat
    local integer Wat
    local integer Eat
    local integer Zat
    local integer Uat
    local integer Iat
    local integer Pat
    local integer Aat
    local integer Dat
    local integer Hat
    local integer Jat
    local integer Kat
    local integer Lat
    local integer Xat
    local integer Cat
    local integer Vat
    local integer Bat
    local integer Nat
    local integer Mat
    local integer wnt
    local integer unt
    local integer rnt
    local integer snt
    local integer tnt
    local integer int
    local integer Snt
    local integer cnt
    local integer ont
    local integer Ont
    local integer lnt
    local integer bnt
    local integer ynt
    local integer pnt
    local integer ent
    local integer qnt
    local integer ant
    local integer nnt
    local integer dnt
    local integer fnt
    local integer Rnt
    local integer Tnt
    local integer Ynt
    local integer Gnt
    local integer gnt
    local integer hnt
    local integer Fnt
    local integer knt
    local integer jnt
    local integer xnt
    local integer vnt
    local integer mnt
    local integer Qnt
    local integer Wnt
    local integer Ent
    local integer Znt
    local integer Unt
    local integer Int
    local integer Pnt
    local integer Ant
    local integer Dnt
    local integer Hnt
    local integer Jnt
    local integer Knt
    local integer Lnt
    local integer Xnt
    local integer Cnt
    local integer Vnt
    local integer Bnt
    local integer Nnt
    local integer Mnt
    local integer wdt
    local integer udt
    local integer rdt
    local integer sdt
    local integer tdt
    local integer idt
    local integer Sdt
    local integer cdt
    local integer odt
    local integer Odt
    local integer ldt
    local integer bdt
    local integer ydt
    local integer pdt
    local integer edt
    local integer qdt
    local integer adt
    local integer ndt
    local integer ddt
    local integer fdt
    local integer Rdt
    local integer Tdt
    local integer Ydt
    local integer Gdt
    local integer gdt
    local integer hdt
    local integer Fdt
    local integer kdt
    local integer jdt
    local integer xdt
    local integer vdt
    local integer mdt
    local integer Qdt
    local integer Wdt
    local integer Edt
    local integer Zdt
    local integer Udt
    local integer Idt
    local integer Pdt
    local integer Adt
    local integer Ddt
    local integer Hdt
    local integer Jdt
    local integer Kdt
    local integer Ldt
    local integer Xdt
    local integer Cdt
    local integer Vdt
    local integer Bdt
    local integer Ndt
    local integer Mdt
    local integer wft
    local integer uft
    local integer rft
    local integer sft
    local integer tft
    local integer ift
    local integer Sft
    local integer cft
    local integer oft
    local integer Oft
    local integer lft
    local integer bft
    local integer yft
    local integer pft
    local integer eft
    local integer qft
    local integer aft
    local integer nft
    local integer dft
    local integer fft
    local integer Rft
    local integer Tft
    local integer Yft
    local integer Gft
    local integer gft
    local integer hft
    local integer Fft
    local integer kft
    local integer jft
    local integer xft
    local integer vft
    local integer mft
    local integer Qft
    local integer Wft
    local integer Eft
    local integer Zft
    local integer Uft
    local integer Ift
    local integer Pft
    local integer Aft
    local integer Dft
    local integer Hft
    local integer Jft
    local integer Kft
    local integer Lft
    local integer Xft
    local integer Cft
    local integer Vft
    local integer Bft
    local integer Nft
    local integer Mft
    local integer wRt
    local integer uRt
    local integer rRt
    local integer sRt
    local integer tRt
    local integer iRt
    local integer SRt
    local integer cRt
    local integer oRt
    local integer ORt
    local integer lRt
    local integer bRt
    local integer yRt
    local integer pRt
    local integer eRt
    local integer qRt
    local integer aRt
    local integer nRt
    local integer dRt
    local trigger fRt
    local trigger RRt
    local trigger TRt
    local trigger YRt
    local trigger GRt
    local trigger gRt
    local trigger hRt
    local trigger FRt
    local trigger kRt
    local trigger jRt
    local trigger xRt
    local trigger vRt
    local integer mRt
    local integer QRt
    set DSw[ASw] = ibt
    set ASw = ASw + 1
    set II = XQt("when calling new_LinkedList in JobAdvancementQuestHandler, line 22")
    set PI = jts("when calling new_HashMap in JobAdvancementQuestHandler, line 24")
    set AI = jts("when calling new_HashMap in JobAdvancementQuestHandler, line 25")
    set DI = XQt("when calling new_LinkedList in JobAdvancementQuestHandler, line 26")
    set HI = XQt("when calling new_LinkedList in JobAdvancementQuestHandler, line 27")
    call XQt("when calling new_LinkedList in JobAdvancementQuestHandler, line 28")
    set JI = XQt("when calling new_LinkedList in JobAdvancementQuestHandler, line 29")
    set KI = XQt("when calling new_LinkedList in JobAdvancementQuestHandler, line 30")
    set LI = XQt("when calling new_LinkedList in JobAdvancementQuestHandler, line 31")
    set XI = XQt("when calling new_LinkedList in JobAdvancementQuestHandler, line 32")
    set CI = XQt("when calling new_LinkedList in JobAdvancementQuestHandler, line 33")
    set VI = XQt("when calling new_LinkedList in JobAdvancementQuestHandler, line 34")
    set BI = XQt("when calling new_LinkedList in JobAdvancementQuestHandler, line 35")
    set NI = false
    set MI = false
    set wP = false
    set uP = false
    set aP = XQt("when calling new_LinkedList in JobAdvancementQuestHandler, line 43")
    set rP = DYt("9004909029", "when calling unObfuscateReal in JobAdvancementQuestHandler, line 45")
    set Sbt = XQt("when calling new_LinkedList in JobAdvancementQuestHandler, line 47")
    call vwt(Sbt, k6w("29666685171760176685", "when calling unObfuscateInt in JobAdvancementQuestHandler, line 47"), "when calling add in JobAdvancementQuestHandler, line 47")
    set cbt = Sbt
    call vwt(cbt, k6w("90836685171760176685", "when calling unObfuscateInt in JobAdvancementQuestHandler, line 47"), "when calling add in JobAdvancementQuestHandler, line 47")
    set obt = cbt
    call vwt(obt, k6w("85836685171760176685", "when calling unObfuscateInt in JobAdvancementQuestHandler, line 47"), "when calling add in JobAdvancementQuestHandler, line 47")
    set Obt = obt
    call vwt(Obt, k6w("66176685171760176685", "when calling unObfuscateInt in JobAdvancementQuestHandler, line 47"), "when calling add in JobAdvancementQuestHandler, line 47")
    set lbt = Obt
    call vwt(lbt, k6w("83176685171760176685", "when calling unObfuscateInt in JobAdvancementQuestHandler, line 47"), "when calling add in JobAdvancementQuestHandler, line 47")
    set bbt = lbt
    call vwt(bbt, k6w("90296685171760176685", "when calling unObfuscateInt in JobAdvancementQuestHandler, line 47"), "when calling add in JobAdvancementQuestHandler, line 47")
    set ybt = bbt
    call vwt(ybt, k6w("85296685171760176685", "when calling unObfuscateInt in JobAdvancementQuestHandler, line 47"), "when calling add in JobAdvancementQuestHandler, line 47")
    set pbt = ybt
    call vwt(pbt, k6w("38836685171760176685", "when calling unObfuscateInt in JobAdvancementQuestHandler, line 47"), "when calling add in JobAdvancementQuestHandler, line 47")
    set ebt = pbt
    call vwt(ebt, k6w("73836685171760176685", "when calling unObfuscateInt in JobAdvancementQuestHandler, line 47"), "when calling add in JobAdvancementQuestHandler, line 47")
    set sP = ebt
    set qbt = XQt("when calling new_LinkedList in JobAdvancementQuestHandler, line 48")
    call vwt(qbt, k6w("90296685171760176685", "when calling unObfuscateInt in JobAdvancementQuestHandler, line 48"), "when calling add in JobAdvancementQuestHandler, line 48")
    set abt = qbt
    call vwt(abt, k6w("85296685171760176685", "when calling unObfuscateInt in JobAdvancementQuestHandler, line 48"), "when calling add in JobAdvancementQuestHandler, line 48")
    set nbt = abt
    call vwt(nbt, k6w("38836685171760176685", "when calling unObfuscateInt in JobAdvancementQuestHandler, line 48"), "when calling add in JobAdvancementQuestHandler, line 48")
    set dbt = nbt
    call vwt(dbt, k6w("73836685171760176685", "when calling unObfuscateInt in JobAdvancementQuestHandler, line 48"), "when calling add in JobAdvancementQuestHandler, line 48")
    set fbt = dbt
    call vwt(fbt, k6w("29666685171760176685", "when calling unObfuscateInt in JobAdvancementQuestHandler, line 48"), "when calling add in JobAdvancementQuestHandler, line 48")
    set Rbt = fbt
    call vwt(Rbt, k6w("90836685171760176685", "when calling unObfuscateInt in JobAdvancementQuestHandler, line 48"), "when calling add in JobAdvancementQuestHandler, line 48")
    set Tbt = Rbt
    call vwt(Tbt, k6w("85836685171760176685", "when calling unObfuscateInt in JobAdvancementQuestHandler, line 48"), "when calling add in JobAdvancementQuestHandler, line 48")
    set Ybt = Tbt
    call vwt(Ybt, k6w("66176685171760176685", "when calling unObfuscateInt in JobAdvancementQuestHandler, line 48"), "when calling add in JobAdvancementQuestHandler, line 48")
    set Gbt = Ybt
    call vwt(Gbt, k6w("83176685171760176685", "when calling unObfuscateInt in JobAdvancementQuestHandler, line 48"), "when calling add in JobAdvancementQuestHandler, line 48")
    set tP = Gbt
    set gbt = XQt("when calling new_LinkedList in JobAdvancementQuestHandler, line 50")
    call vwt(gbt, k6w("66298548603873171785", "when calling unObfuscateInt in JobAdvancementQuestHandler, line 50"), "when calling add in JobAdvancementQuestHandler, line 50")
    set hbt = gbt
    call vwt(hbt, k6w("48298548603873171785", "when calling unObfuscateInt in JobAdvancementQuestHandler, line 50"), "when calling add in JobAdvancementQuestHandler, line 50")
    set Fbt = hbt
    call vwt(Fbt, k6w("29668548603873171785", "when calling unObfuscateInt in JobAdvancementQuestHandler, line 50"), "when calling add in JobAdvancementQuestHandler, line 50")
    set kbt = Fbt
    call vwt(kbt, k6w("48382983603873171785", "when calling unObfuscateInt in JobAdvancementQuestHandler, line 50"), "when calling add in JobAdvancementQuestHandler, line 50")
    set jbt = kbt
    call vwt(jbt, k6w("83298548603873171785", "when calling unObfuscateInt in JobAdvancementQuestHandler, line 50"), "when calling add in JobAdvancementQuestHandler, line 50")
    set xbt = jbt
    call vwt(xbt, k6w("48383883603873171785", "when calling unObfuscateInt in JobAdvancementQuestHandler, line 50"), "when calling add in JobAdvancementQuestHandler, line 50")
    set vbt = xbt
    call vwt(vbt, k6w("73383883603873171785", "when calling unObfuscateInt in JobAdvancementQuestHandler, line 50"), "when calling add in JobAdvancementQuestHandler, line 50")
    set mbt = vbt
    call vwt(mbt, k6w("38383883603873171785", "when calling unObfuscateInt in JobAdvancementQuestHandler, line 50"), "when calling add in JobAdvancementQuestHandler, line 50")
    set Qbt = mbt
    call vwt(Qbt, k6w("29483883603873171785", "when calling unObfuscateInt in JobAdvancementQuestHandler, line 50"), "when calling add in JobAdvancementQuestHandler, line 50")
    set Wbt = Qbt
    call vwt(Wbt, k6w("17483883603873171785", "when calling unObfuscateInt in JobAdvancementQuestHandler, line 50"), "when calling add in JobAdvancementQuestHandler, line 50")
    set iP = Wbt
    set SP = XQt("when calling new_LinkedList in JobAdvancementQuestHandler, line 52")
    set cP = 100
    set oP = 2003790951
    set lP = Rect(0., 0., 128., 128.)
    set yP = 0
    set pP[$00000000] =- 1
    set pP[$00000001] =- 1
    set pP[$00000002] =- 1
    set pP[$00000003] =- 1
    set pP[$00000004] =- 1
    set pP[$00000005] =- 1
    set pP[$00000006] =- 1
    set pP[$00000007] =- 1
    set pP[$00000008] =- 1
    set pP[$00000009] =- 1
    set eP[$00000000] = 0
    set eP[$00000001] = 0
    set eP[$00000002] = 0
    set eP[$00000003] = 0
    set eP[$00000004] = 0
    set eP[$00000005] = 0
    set eP[$00000006] = 0
    set eP[$00000007] = 0
    set eP[$00000008] = 0
    set eP[$00000009] = 0
    set qP[$00000000] = 0
    set qP[$00000001] = 0
    set qP[$00000002] = 0
    set qP[$00000003] = 0
    set qP[$00000004] = 0
    set qP[$00000005] = 0
    set qP[$00000006] = 0
    set qP[$00000007] = 0
    set qP[$00000008] = 0
    set qP[$00000009] = 0
    set Ebt = rgt(oP, LJ, XJ)
    call jXt(Ebt, false)
    set Zbt = Ebt
    call IOt(Zbt, aD[$00000000], false)
    set OP = Zbt
    call vwt(px, Xdu(OP), "when calling add in JobAdvancementQuestHandler, line 771")
    set Ubt = rqs("when calling alloc_CallbackSingle_doAfter_JobAdvancementQuestHandler in JobAdvancementQuestHandler, line 784")
    call RUs(Ubt)
    call Ybr(2., Ubt, "when calling doAfter in JobAdvancementQuestHandler, line 784")
    set Ibt = Dlu("when calling alloc_CallbackPeriodic_doPeriodically_JobAdvancementQuestHandler in JobAdvancementQuestHandler, line 786")
    call kVu(Ibt)
    call wcs(42., Ibt, "when calling doPeriodically in JobAdvancementQuestHandler, line 786")
    set Pbt = CreateTrigger()
    call l2w(Pbt, EVENT_PLAYER_UNIT_ISSUED_TARGET_ORDER)
    set Abt = Pbt
    call B2S(Abt, kQw)
    set Hbt = CreateTrigger()
    call l2w(Hbt, EVENT_PLAYER_UNIT_PICKUP_ITEM)
    set Jbt = Hbt
    call B2S(Jbt, jQw)
    set Dbt = Jbt
    set Kbt = Vvi("when calling alloc_CallbackSingle_doAfter_JobAdvancementQuestHandler in JobAdvancementQuestHandler, line 835")
    call RUs(Kbt)
    set dww_3353[Kbt] = Dbt
    call Ybr(2., Kbt, "when calling doAfter in JobAdvancementQuestHandler, line 835")
    set Lbt = CreateTrigger()
    call l2w(Lbt, EVENT_PLAYER_UNIT_SELL_ITEM)
    set Xbt = Lbt
    call B2S(Xbt, xQw)
    set Cbt = TGt("when calling alloc_CallbackPeriodic_doPeriodically_JobAdvancementQuestHandler in JobAdvancementQuestHandler, line 875")
    call kVu(Cbt)
    call wcs(.53, Cbt, "when calling doPeriodically in JobAdvancementQuestHandler, line 875")
    set Vbt = Jir("when calling alloc_CallbackPeriodic_doPeriodically_JobAdvancementQuestHandler in JobAdvancementQuestHandler, line 893")
    call kVu(Vbt)
    call wcs(.71, Vbt, "when calling doPeriodically in JobAdvancementQuestHandler, line 893")
    set Bbt = AOi("when calling alloc_CallbackPeriodic_doPeriodically_JobAdvancementQuestHandler in JobAdvancementQuestHandler, line 919")
    call kVu(Bbt)
    call wcs(10., Bbt, "when calling doPeriodically in JobAdvancementQuestHandler, line 919")
    set Nbt = CreateTrigger()
    call qYS(Nbt, ConvertGameEvent(k6w("608317", "when calling unObfuscateInt in JobAdvancementQuestHandler, line 935")))
    set Mbt = Nbt
    call B2S(Mbt, vQw)
    set wyt = CreateTrigger()
    call qYS(wyt, ConvertGameEvent(ifi(Iji("259", "when calling unObfuscate in JobAdvancementQuestHandler, line 943"))))
    set uyt = wyt
    call B2S(uyt, mQw)
    set ryt = II
    call vwt(ryt, err(Iji("!", "when calling unObfuscate in JobAdvancementQuestHandler, line 954"), "when calling stringToIndex in JobAdvancementQuestHandler, line 954"), "when calling add in JobAdvancementQuestHandler, line 954")
    set syt = ryt
    call vwt(syt, err(Iji(""", "when calling unObfuscate in JobAdvancementQuestHandler, line 955"), "when calling stringToIndex in JobAdvancementQuestHandler, line 955"), "when calling add in JobAdvancementQuestHandler, line 955")
    set tyt = syt
    call vwt(tyt, err(Iji("#", "when calling unObfuscate in JobAdvancementQuestHandler, line 956"), "when calling stringToIndex in JobAdvancementQuestHandler, line 956"), "when calling add in JobAdvancementQuestHandler, line 956")
    set iyt = tyt
    call vwt(iyt, err(Iji("$", "when calling unObfuscate in JobAdvancementQuestHandler, line 957"), "when calling stringToIndex in JobAdvancementQuestHandler, line 957"), "when calling add in JobAdvancementQuestHandler, line 957")
    set Syt = iyt
    call vwt(Syt, err(Iji("%", "when calling unObfuscate in JobAdvancementQuestHandler, line 958"), "when calling stringToIndex in JobAdvancementQuestHandler, line 958"), "when calling add in JobAdvancementQuestHandler, line 958")
    set cyt = Syt
    call vwt(cyt, err(Iji("&", "when calling unObfuscate in JobAdvancementQuestHandler, line 959"), "when calling stringToIndex in JobAdvancementQuestHandler, line 959"), "when calling add in JobAdvancementQuestHandler, line 959")
    set oyt = cyt
    call vwt(oyt, err(Iji("'", "when calling unObfuscate in JobAdvancementQuestHandler, line 960"), "when calling stringToIndex in JobAdvancementQuestHandler, line 960"), "when calling add in JobAdvancementQuestHandler, line 960")
    set Oyt = oyt
    call vwt(Oyt, err(Iji("(", "when calling unObfuscate in JobAdvancementQuestHandler, line 961"), "when calling stringToIndex in JobAdvancementQuestHandler, line 961"), "when calling add in JobAdvancementQuestHandler, line 961")
    set lyt = Oyt
    call vwt(lyt, err(Iji(")", "when calling unObfuscate in JobAdvancementQuestHandler, line 962"), "when calling stringToIndex in JobAdvancementQuestHandler, line 962"), "when calling add in JobAdvancementQuestHandler, line 962")
    set byt = lyt
    call vwt(byt, err(Iji("*", "when calling unObfuscate in JobAdvancementQuestHandler, line 963"), "when calling stringToIndex in JobAdvancementQuestHandler, line 963"), "when calling add in JobAdvancementQuestHandler, line 963")
    set yyt = byt
    call vwt(yyt, err(Iji("+", "when calling unObfuscate in JobAdvancementQuestHandler, line 964"), "when calling stringToIndex in JobAdvancementQuestHandler, line 964"), "when calling add in JobAdvancementQuestHandler, line 964")
    set pyt = yyt
    call vwt(pyt, err(Iji(",", "when calling unObfuscate in JobAdvancementQuestHandler, line 965"), "when calling stringToIndex in JobAdvancementQuestHandler, line 965"), "when calling add in JobAdvancementQuestHandler, line 965")
    set eyt = pyt
    call vwt(eyt, err(Iji("-", "when calling unObfuscate in JobAdvancementQuestHandler, line 966"), "when calling stringToIndex in JobAdvancementQuestHandler, line 966"), "when calling add in JobAdvancementQuestHandler, line 966")
    set qyt = eyt
    call vwt(qyt, err(Iji(".", "when calling unObfuscate in JobAdvancementQuestHandler, line 967"), "when calling stringToIndex in JobAdvancementQuestHandler, line 967"), "when calling add in JobAdvancementQuestHandler, line 967")
    set ayt = qyt
    call vwt(ayt, err(Iji("/", "when calling unObfuscate in JobAdvancementQuestHandler, line 968"), "when calling stringToIndex in JobAdvancementQuestHandler, line 968"), "when calling add in JobAdvancementQuestHandler, line 968")
    set nyt = ayt
    call vwt(nyt, err(Iji(":", "when calling unObfuscate in JobAdvancementQuestHandler, line 969"), "when calling stringToIndex in JobAdvancementQuestHandler, line 969"), "when calling add in JobAdvancementQuestHandler, line 969")
    set dyt = nyt
    call vwt(dyt, err(Iji(";", "when calling unObfuscate in JobAdvancementQuestHandler, line 970"), "when calling stringToIndex in JobAdvancementQuestHandler, line 970"), "when calling add in JobAdvancementQuestHandler, line 970")
    set fyt = dyt
    call vwt(fyt, err(Iji("<", "when calling unObfuscate in JobAdvancementQuestHandler, line 971"), "when calling stringToIndex in JobAdvancementQuestHandler, line 971"), "when calling add in JobAdvancementQuestHandler, line 971")
    set Ryt = fyt
    call vwt(Ryt, err(Iji("=", "when calling unObfuscate in JobAdvancementQuestHandler, line 972"), "when calling stringToIndex in JobAdvancementQuestHandler, line 972"), "when calling add in JobAdvancementQuestHandler, line 972")
    set Tyt = Ryt
    call vwt(Tyt, err(Iji(">", "when calling unObfuscate in JobAdvancementQuestHandler, line 973"), "when calling stringToIndex in JobAdvancementQuestHandler, line 973"), "when calling add in JobAdvancementQuestHandler, line 973")
    set Yyt = Tyt
    call vwt(Yyt, err(Iji("?", "when calling unObfuscate in JobAdvancementQuestHandler, line 974"), "when calling stringToIndex in JobAdvancementQuestHandler, line 974"), "when calling add in JobAdvancementQuestHandler, line 974")
    set Gyt = Yyt
    call vwt(Gyt, err(Iji("@", "when calling unObfuscate in JobAdvancementQuestHandler, line 975"), "when calling stringToIndex in JobAdvancementQuestHandler, line 975"), "when calling add in JobAdvancementQuestHandler, line 975")
    set gyt = Gyt
    call vwt(gyt, err(Iji("[", "when calling unObfuscate in JobAdvancementQuestHandler, line 976"), "when calling stringToIndex in JobAdvancementQuestHandler, line 976"), "when calling add in JobAdvancementQuestHandler, line 976")
    set hyt = gyt
    call vwt(hyt, err(Iji("\", "when calling unObfuscate in JobAdvancementQuestHandler, line 977"), "when calling stringToIndex in JobAdvancementQuestHandler, line 977"), "when calling add in JobAdvancementQuestHandler, line 977")
    set Fyt = hyt
    call vwt(Fyt, err(Iji("]", "when calling unObfuscate in JobAdvancementQuestHandler, line 978"), "when calling stringToIndex in JobAdvancementQuestHandler, line 978"), "when calling add in JobAdvancementQuestHandler, line 978")
    set kyt = Fyt
    call vwt(kyt, err(Iji("", "when calling unObfuscate in JobAdvancementQuestHandler, line 979"), "when calling stringToIndex in JobAdvancementQuestHandler, line 979"), "when calling add in JobAdvancementQuestHandler, line 979")
    set jyt = kyt
    call vwt(jyt, err(Iji("_", "when calling unObfuscate in JobAdvancementQuestHandler, line 980"), "when calling stringToIndex in JobAdvancementQuestHandler, line 980"), "when calling add in JobAdvancementQuestHandler, line 980")
    set xyt = jyt
    call vwt(xyt, err(Iji("", "when calling unObfuscate in JobAdvancementQuestHandler, line 981"), "when calling stringToIndex in JobAdvancementQuestHandler, line 981"), "when calling add in JobAdvancementQuestHandler, line 981")
    set vyt = xyt
    call vwt(vyt, err(Iji("{", "when calling unObfuscate in JobAdvancementQuestHandler, line 982"), "when calling stringToIndex in JobAdvancementQuestHandler, line 982"), "when calling add in JobAdvancementQuestHandler, line 982")
    set myt = vyt
    call vwt(myt, err(Iji("|", "when calling unObfuscate in JobAdvancementQuestHandler, line 983"), "when calling stringToIndex in JobAdvancementQuestHandler, line 983"), "when calling add in JobAdvancementQuestHandler, line 983")
    set Qyt = myt
    call vwt(Qyt, err(Iji("}", "when calling unObfuscate in JobAdvancementQuestHandler, line 984"), "when calling stringToIndex in JobAdvancementQuestHandler, line 984"), "when calling add in JobAdvancementQuestHandler, line 984")
    set Wyt = Qyt
    call vwt(Wyt, err(Iji("~", "when calling unObfuscate in JobAdvancementQuestHandler, line 985"), "when calling stringToIndex in JobAdvancementQuestHandler, line 985"), "when calling add in JobAdvancementQuestHandler, line 985")
    set Eyt = wwu("when calling alloc_CallbackSingle_doAfter_JobAdvancementQuestHandler in JobAdvancementQuestHandler, line 987")
    call RUs(Eyt)
    call Ybr(.8, Eyt, "when calling doAfter in JobAdvancementQuestHandler, line 987")
    set Zyt = M4r("when calling alloc_CallbackSingle_doAfter_JobAdvancementQuestHandler in JobAdvancementQuestHandler, line 1028")
    call RUs(Zyt)
    call Ybr(.8, Zyt, "when calling doAfter in JobAdvancementQuestHandler, line 1028")
    set Uyt = QPt("when calling alloc_CallbackSingle_doAfter_JobAdvancementQuestHandler in JobAdvancementQuestHandler, line 1035")
    call RUs(Uyt)
    call Ybr(.9, Uyt, "when calling doAfter in JobAdvancementQuestHandler, line 1035")
    set Iyt = FYS("when calling alloc_CallbackSingle_doAfter_JobAdvancementQuestHandler in JobAdvancementQuestHandler, line 1042")
    call RUs(Iyt)
    call Ybr(1.1, Iyt, "when calling doAfter in JobAdvancementQuestHandler, line 1042")
    set Pyt = qhr("when calling alloc_CallbackSingle_doAfter_JobAdvancementQuestHandler in JobAdvancementQuestHandler, line 1049")
    call RUs(Pyt)
    call Ybr(1.2, Pyt, "when calling doAfter in JobAdvancementQuestHandler, line 1049")
    set Ayt = EVr("when calling alloc_CallbackPeriodic_doPeriodically_JobAdvancementQuestHandler in JobAdvancementQuestHandler, line 1058")
    call kVu(Ayt)
    call wcs(60., Ayt, "when calling doPeriodically in JobAdvancementQuestHandler, line 1058")
    set Dyt = has("when calling alloc_CallbackPeriodic_doPeriodically_JobAdvancementQuestHandler in JobAdvancementQuestHandler, line 1069")
    call kVu(Dyt)
    call wcs(30., Dyt, "when calling doPeriodically in JobAdvancementQuestHandler, line 1069")
    set Hyt = YDr("when calling alloc_CallbackPeriodic_doPeriodically_JobAdvancementQuestHandler in JobAdvancementQuestHandler, line 1075")
    call kVu(Hyt)
    call wcs(45., Hyt, "when calling doPeriodically in JobAdvancementQuestHandler, line 1075")
    set Jyt = Jkr("when calling alloc_CallbackPeriodic_doPeriodically_JobAdvancementQuestHandler in JobAdvancementQuestHandler, line 1081")
    call kVu(Jyt)
    call wcs(60., Jyt, "when calling doPeriodically in JobAdvancementQuestHandler, line 1081")
    set Kyt = SVt("when calling alloc_CallbackPeriodic_doPeriodically_JobAdvancementQuestHandler in JobAdvancementQuestHandler, line 1086")
    call kVu(Kyt)
    call wcs(30., Kyt, "when calling doPeriodically in JobAdvancementQuestHandler, line 1086")
    set Lyt = dAu("when calling alloc_CallbackSingle_doAfter_JobAdvancementQuestHandler in JobAdvancementQuestHandler, line 1092")
    call RUs(Lyt)
    call Ybr(0.2, Lyt, "when calling doAfter in JobAdvancementQuestHandler, line 1092")
    set Xyt = LpS("when calling alloc_CallbackSingle_doAfter_JobAdvancementQuestHandler in JobAdvancementQuestHandler, line 1098")
    call RUs(Xyt)
    call Ybr(0.3, Xyt, "when calling doAfter in JobAdvancementQuestHandler, line 1098")
    set Cyt = A0s("when calling alloc_CallbackSingle_doAfter_JobAdvancementQuestHandler in JobAdvancementQuestHandler, line 1104")
    call RUs(Cyt)
    call Ybr(0.5, Cyt, "when calling doAfter in JobAdvancementQuestHandler, line 1104")
    set Vyt = DI
    call vwt(Vyt, - 755191149, "when calling add in JobAdvancementQuestHandler, line 1119")
    set Byt = Vyt
    call vwt(Byt, $074D70E9, "when calling add in JobAdvancementQuestHandler, line 1119")
    set Nyt = Byt
    call vwt(Nyt, $4516E79D, "when calling add in JobAdvancementQuestHandler, line 1119")
    set Myt = Nyt
    call vwt(Myt, - 2077934394, "when calling add in JobAdvancementQuestHandler, line 1119")
    set wpt = Myt
    call vwt(wpt, - 179917440, "when calling add in JobAdvancementQuestHandler, line 1119")
    set upt = wpt
    call vwt(upt, $7927E100, "when calling add in JobAdvancementQuestHandler, line 1119")
    set rpt = upt
    call vwt(rpt, - 2077934394, "when calling add in JobAdvancementQuestHandler, line 1119")
    set spt = rpt
    call vwt(spt, $1C0B306C, "when calling add in JobAdvancementQuestHandler, line 1119")
    set tpt = spt
    call vwt(tpt, $60B67F40, "when calling add in JobAdvancementQuestHandler, line 1119")
    set ipt = tpt
    call vwt(ipt, - 648465068, "when calling add in JobAdvancementQuestHandler, line 1119")
    set Spt = ipt
    call vwt(Spt, - 69332699, "when calling add in JobAdvancementQuestHandler, line 1119")
    set cpt = Spt
    call vwt(cpt, - 1327498262, "when calling add in JobAdvancementQuestHandler, line 1119")
    set opt = cpt
    call vwt(opt, $17200059, "when calling add in JobAdvancementQuestHandler, line 1120")
    set Opt = opt
    call vwt(Opt, $6B73975A, "when calling add in JobAdvancementQuestHandler, line 1120")
    set lpt = Opt
    call vwt(lpt, - 897635569, "when calling add in JobAdvancementQuestHandler, line 1120")
    set bpt = lpt
    call vwt(bpt, - 1460280116, "when calling add in JobAdvancementQuestHandler, line 1120")
    set ypt = bpt
    call vwt(ypt, - 777074173, "when calling add in JobAdvancementQuestHandler, line 1120")
    set ppt = ypt
    call vwt(ppt, - 1254116193, "when calling add in JobAdvancementQuestHandler, line 1120")
    set ept = ppt
    call vwt(ept, - 1117797867, "when calling add in JobAdvancementQuestHandler, line 1120")
    set qpt = ept
    call vwt(qpt, $0D97AEB5, "when calling add in JobAdvancementQuestHandler, line 1120")
    set apt = qpt
    call vwt(apt, - 1039017860, "when calling add in JobAdvancementQuestHandler, line 1120")
    set npt = apt
    call vwt(npt, $498BC486, "when calling add in JobAdvancementQuestHandler, line 1120")
    set dpt = npt
    call vwt(dpt, - 2013923604, "when calling add in JobAdvancementQuestHandler, line 1120")
    set fpt = dpt
    call vwt(fpt, - 1544969391, "when calling add in JobAdvancementQuestHandler, line 1120")
    set Rpt = fpt
    call vwt(Rpt, $01572CD9, "when calling add in JobAdvancementQuestHandler, line 1121")
    set Tpt = Rpt
    call vwt(Tpt, $3424274B, "when calling add in JobAdvancementQuestHandler, line 1121")
    set Ypt = Tpt
    call vwt(Ypt, - 1143061159, "when calling add in JobAdvancementQuestHandler, line 1121")
    set Gpt = Ypt
    call vwt(Gpt, - 1311515769, "when calling add in JobAdvancementQuestHandler, line 1121")
    set gpt = Gpt
    call vwt(gpt, $28BB4065, "when calling add in JobAdvancementQuestHandler, line 1121")
    set hpt = gpt
    call vwt(hpt, - 796432600, "when calling add in JobAdvancementQuestHandler, line 1121")
    set Fpt = hpt
    call vwt(Fpt, - 624896197, "when calling add in JobAdvancementQuestHandler, line 1121")
    set kpt = Fpt
    call vwt(kpt, - 1082922208, "when calling add in JobAdvancementQuestHandler, line 1121")
    set jpt = kpt
    call vwt(jpt, $178577DA, "when calling add in JobAdvancementQuestHandler, line 1121")
    set xpt = jpt
    call vwt(xpt, - 316275287, "when calling add in JobAdvancementQuestHandler, line 1121")
    set vpt = xpt
    call vwt(vpt, - 1168980243, "when calling add in JobAdvancementQuestHandler, line 1121")
    set mpt = vpt
    call vwt(mpt, $4E12803F, "when calling add in JobAdvancementQuestHandler, line 1121")
    set Qpt = mpt
    call vwt(Qpt, - 1664850655, "when calling add in JobAdvancementQuestHandler, line 1121")
    set Wpt = Qpt
    call vwt(Wpt, - 1035685643, "when calling add in JobAdvancementQuestHandler, line 1121")
    set Ept = Wpt
    call vwt(Ept, - 737858178, "when calling add in JobAdvancementQuestHandler, line 1122")
    set Zpt = Ept
    call vwt(Zpt, - 540461938, "when calling add in JobAdvancementQuestHandler, line 1122")
    set Upt = Zpt
    call vwt(Upt, $50586AA4, "when calling add in JobAdvancementQuestHandler, line 1122")
    set Ipt = Upt
    call vwt(Ipt, - 371869470, "when calling add in JobAdvancementQuestHandler, line 1122")
    set Ppt = Ipt
    call vwt(Ppt, $7BB6CDD4, "when calling add in JobAdvancementQuestHandler, line 1122")
    set Apt = Ppt
    call vwt(Apt, $4C721C5C, "when calling add in JobAdvancementQuestHandler, line 1122")
    set Dpt = Apt
    call vwt(Dpt, - 737858178, "when calling add in JobAdvancementQuestHandler, line 1122")
    set Hpt = Dpt
    call vwt(Hpt, $58D48B28, "when calling add in JobAdvancementQuestHandler, line 1122")
    set Jpt = Hpt
    call vwt(Jpt, $50586AA4, "when calling add in JobAdvancementQuestHandler, line 1122")
    set Kpt = Jpt
    call vwt(Kpt, - 371869470, "when calling add in JobAdvancementQuestHandler, line 1122")
    set Lpt = Kpt
    call vwt(Lpt, $7BB6CDD4, "when calling add in JobAdvancementQuestHandler, line 1122")
    set Xpt = Lpt
    call vwt(Xpt, $4C721C5C, "when calling add in JobAdvancementQuestHandler, line 1122")
    set Cpt = Xpt
    call vwt(Cpt, $77825D03, "when calling add in JobAdvancementQuestHandler, line 1122")
    set Vpt = Cpt
    call vwt(Vpt, $260877FD, "when calling add in JobAdvancementQuestHandler, line 1123")
    set Bpt = Vpt
    call vwt(Bpt, - 610497056, "when calling add in JobAdvancementQuestHandler, line 1123")
    set Npt = Bpt
    call vwt(Npt, - 1496961646, "when calling add in JobAdvancementQuestHandler, line 1123")
    set Mpt = Npt
    call vwt(Mpt, - 1509540150, "when calling add in JobAdvancementQuestHandler, line 1123")
    set wet = Mpt
    call vwt(wet, $7469C33F, "when calling add in JobAdvancementQuestHandler, line 1123")
    set uet = wet
    call vwt(uet, $75328E22, "when calling add in JobAdvancementQuestHandler, line 1123")
    set ret = uet
    call vwt(ret, $44E2AB67, "when calling add in JobAdvancementQuestHandler, line 1123")
    set tet = ret
    call vwt(tet, - 812884155, "when calling add in JobAdvancementQuestHandler, line 1123")
    set iet = tet
    call vwt(iet, $658F2194, "when calling add in JobAdvancementQuestHandler, line 1124")
    set Set = iet
    call vwt(Set, $3CA2A893, "when calling add in JobAdvancementQuestHandler, line 1124")
    set cet = Set
    call vwt(cet, - 468461661, "when calling add in JobAdvancementQuestHandler, line 1124")
    set oet = cet
    call vwt(oet, $63AB61A2, "when calling add in JobAdvancementQuestHandler, line 1124")
    set Oet = oet
    call vwt(Oet, - 993348426, "when calling add in JobAdvancementQuestHandler, line 1124")
    set let = HI
    call vwt(let, err(Iji("-cam", "when calling unObfuscate in JobAdvancementQuestHandler, line 1126"), "when calling stringToIndex in JobAdvancementQuestHandler, line 1126"), "when calling add in JobAdvancementQuestHandler, line 1126")
    set bet = let
    call vwt(bet, err(Iji("-zoom", "when calling unObfuscate in JobAdvancementQuestHandler, line 1126"), "when calling stringToIndex in JobAdvancementQuestHandler, line 1126"), "when calling add in JobAdvancementQuestHandler, line 1126")
    set yet = bet
    call vwt(yet, err(Iji("-enter", "when calling unObfuscate in JobAdvancementQuestHandler, line 1126"), "when calling stringToIndex in JobAdvancementQuestHandler, line 1126"), "when calling add in JobAdvancementQuestHandler, line 1126")
    set pet = yet
    call vwt(pet, err(Iji("-out", "when calling unObfuscate in JobAdvancementQuestHandler, line 1126"), "when calling stringToIndex in JobAdvancementQuestHandler, line 1126"), "when calling add in JobAdvancementQuestHandler, line 1126")
    set eet = pet
    call vwt(eet, err(Iji("-done", "when calling unObfuscate in JobAdvancementQuestHandler, line 1126"), "when calling stringToIndex in JobAdvancementQuestHandler, line 1126"), "when calling add in JobAdvancementQuestHandler, line 1126")
    set qet = eet
    call vwt(qet, err(Iji("-ms", "when calling unObfuscate in JobAdvancementQuestHandler, line 1126"), "when calling stringToIndex in JobAdvancementQuestHandler, line 1126"), "when calling add in JobAdvancementQuestHandler, line 1126")
    set aet = qet
    call vwt(aet, err(Iji("-out", "when calling unObfuscate in JobAdvancementQuestHandler, line 1126"), "when calling stringToIndex in JobAdvancementQuestHandler, line 1126"), "when calling add in JobAdvancementQuestHandler, line 1126")
    set net = aet
    call vwt(net, err(Iji("-dps", "when calling unObfuscate in JobAdvancementQuestHandler, line 1126"), "when calling stringToIndex in JobAdvancementQuestHandler, line 1126"), "when calling add in JobAdvancementQuestHandler, line 1126")
    set det = net
    call vwt(det, err(Iji("-unlearn", "when calling unObfuscate in JobAdvancementQuestHandler, line 1126"), "when calling stringToIndex in JobAdvancementQuestHandler, line 1126"), "when calling add in JobAdvancementQuestHandler, line 1126")
    set fet = det
    call vwt(fet, err(Iji("-time", "when calling unObfuscate in JobAdvancementQuestHandler, line 1126"), "when calling stringToIndex in JobAdvancementQuestHandler, line 1126"), "when calling add in JobAdvancementQuestHandler, line 1126")
    set Ret = fet
    call vwt(Ret, err(Iji("-check", "when calling unObfuscate in JobAdvancementQuestHandler, line 1126"), "when calling stringToIndex in JobAdvancementQuestHandler, line 1126"), "when calling add in JobAdvancementQuestHandler, line 1126")
    set Tet = Ret
    call vwt(Tet, err(Iji("-check2", "when calling unObfuscate in JobAdvancementQuestHandler, line 1126"), "when calling stringToIndex in JobAdvancementQuestHandler, line 1126"), "when calling add in JobAdvancementQuestHandler, line 1126")
    set Yet = Tet
    call vwt(Yet, err(Iji("-pvp", "when calling unObfuscate in JobAdvancementQuestHandler, line 1126"), "when calling stringToIndex in JobAdvancementQuestHandler, line 1126"), "when calling add in JobAdvancementQuestHandler, line 1126")
    set Get = Yet
    call vwt(Get, err(Iji("-yes", "when calling unObfuscate in JobAdvancementQuestHandler, line 1126"), "when calling stringToIndex in JobAdvancementQuestHandler, line 1126"), "when calling add in JobAdvancementQuestHandler, line 1126")
    set get = Get
    call vwt(get, err(Iji("-cancel", "when calling unObfuscate in JobAdvancementQuestHandler, line 1126"), "when calling stringToIndex in JobAdvancementQuestHandler, line 1126"), "when calling add in JobAdvancementQuestHandler, line 1126")
    set het = get
    call vwt(het, err(Iji("-rank", "when calling unObfuscate in JobAdvancementQuestHandler, line 1126"), "when calling stringToIndex in JobAdvancementQuestHandler, line 1126"), "when calling add in JobAdvancementQuestHandler, line 1126")
    set Fet = het
    call vwt(Fet, err(Iji("-reset", "when calling unObfuscate in JobAdvancementQuestHandler, line 1126"), "when calling stringToIndex in JobAdvancementQuestHandler, line 1126"), "when calling add in JobAdvancementQuestHandler, line 1126")
    set ket = Fet
    call vwt(ket, err(Iji("-save", "when calling unObfuscate in JobAdvancementQuestHandler, line 1126"), "when calling stringToIndex in JobAdvancementQuestHandler, line 1126"), "when calling add in JobAdvancementQuestHandler, line 1126")
    set jet = ket
    call vwt(jet, err(Iji("-load", "when calling unObfuscate in JobAdvancementQuestHandler, line 1126"), "when calling stringToIndex in JobAdvancementQuestHandler, line 1126"), "when calling add in JobAdvancementQuestHandler, line 1126")
    set xet = jet
    call vwt(xet, err(Iji("-load2", "when calling unObfuscate in JobAdvancementQuestHandler, line 1126"), "when calling stringToIndex in JobAdvancementQuestHandler, line 1126"), "when calling add in JobAdvancementQuestHandler, line 1126")
    set vet = xet
    call vwt(vet, err(Iji("-clear", "when calling unObfuscate in JobAdvancementQuestHandler, line 1126"), "when calling stringToIndex in JobAdvancementQuestHandler, line 1126"), "when calling add in JobAdvancementQuestHandler, line 1126")
    set met = vet
    call vwt(met, err(Iji("-revive", "when calling unObfuscate in JobAdvancementQuestHandler, line 1126"), "when calling stringToIndex in JobAdvancementQuestHandler, line 1126"), "when calling add in JobAdvancementQuestHandler, line 1126")
    set Qet = met
    call vwt(Qet, err(Iji("-kill", "when calling unObfuscate in JobAdvancementQuestHandler, line 1126"), "when calling stringToIndex in JobAdvancementQuestHandler, line 1126"), "when calling add in JobAdvancementQuestHandler, line 1126")
    set Wet = Qet
    call vwt(Wet, err(Iji("-remove", "when calling unObfuscate in JobAdvancementQuestHandler, line 1126"), "when calling stringToIndex in JobAdvancementQuestHandler, line 1126"), "when calling add in JobAdvancementQuestHandler, line 1126")
    set Eet = Wet
    call vwt(Eet, err(Iji("-repick", "when calling unObfuscate in JobAdvancementQuestHandler, line 1126"), "when calling stringToIndex in JobAdvancementQuestHandler, line 1126"), "when calling add in JobAdvancementQuestHandler, line 1126")
    set Zet = Eet
    call vwt(Zet, err(Iji("-xp", "when calling unObfuscate in JobAdvancementQuestHandler, line 1126"), "when calling stringToIndex in JobAdvancementQuestHandler, line 1126"), "when calling add in JobAdvancementQuestHandler, line 1126")
    set Uet = Zet
    call vwt(Uet, err(Iji("-info", "when calling unObfuscate in JobAdvancementQuestHandler, line 1126"), "when calling stringToIndex in JobAdvancementQuestHandler, line 1126"), "when calling add in JobAdvancementQuestHandler, line 1126")
    set Iet = Uet
    call vwt(Iet, err(Iji("-general", "when calling unObfuscate in JobAdvancementQuestHandler, line 1126"), "when calling stringToIndex in JobAdvancementQuestHandler, line 1126"), "when calling add in JobAdvancementQuestHandler, line 1126")
    set Pet = Iet
    call vwt(Pet, err(Iji("-and", "when calling unObfuscate in JobAdvancementQuestHandler, line 1126"), "when calling stringToIndex in JobAdvancementQuestHandler, line 1126"), "when calling add in JobAdvancementQuestHandler, line 1126")
    set Aet = Pet
    call vwt(Aet, err(Iji("-stats ", "when calling unObfuscate in JobAdvancementQuestHandler, line 1126"), "when calling stringToIndex in JobAdvancementQuestHandler, line 1126"), "when calling add in JobAdvancementQuestHandler, line 1126")
    set Det = Aet
    call vwt(Det, err(Iji("-leave", "when calling unObfuscate in JobAdvancementQuestHandler, line 1126"), "when calling stringToIndex in JobAdvancementQuestHandler, line 1126"), "when calling add in JobAdvancementQuestHandler, line 1126")
    set Het = Det
    call vwt(Het, err(Iji("-exit", "when calling unObfuscate in JobAdvancementQuestHandler, line 1126"), "when calling stringToIndex in JobAdvancementQuestHandler, line 1126"), "when calling add in JobAdvancementQuestHandler, line 1126")
    set Jet = Het
    call vwt(Jet, err(Iji("-forfeit", "when calling unObfuscate in JobAdvancementQuestHandler, line 1126"), "when calling stringToIndex in JobAdvancementQuestHandler, line 1126"), "when calling add in JobAdvancementQuestHandler, line 1126")
    set Ket = Jet
    call vwt(Ket, err(Iji("-fish", "when calling unObfuscate in JobAdvancementQuestHandler, line 1126"), "when calling stringToIndex in JobAdvancementQuestHandler, line 1126"), "when calling add in JobAdvancementQuestHandler, line 1126")
    set Let = Ket
    call vwt(Let, err(Iji("-fishing", "when calling unObfuscate in JobAdvancementQuestHandler, line 1126"), "when calling stringToIndex in JobAdvancementQuestHandler, line 1126"), "when calling add in JobAdvancementQuestHandler, line 1126")
    set Xet = Let
    call vwt(Xet, err(Iji("-s2s", "when calling unObfuscate in JobAdvancementQuestHandler, line 1127"), "when calling stringToIndex in JobAdvancementQuestHandler, line 1127"), "when calling add in JobAdvancementQuestHandler, line 1127")
    set Cet = Xet
    call vwt(Cet, err(Iji("-sendtostash", "when calling unObfuscate in JobAdvancementQuestHandler, line 1127"), "when calling stringToIndex in JobAdvancementQuestHandler, line 1127"), "when calling add in JobAdvancementQuestHandler, line 1127")
    set Vet = Cet
    call vwt(Vet, err(Iji("-disableglow", "when calling unObfuscate in JobAdvancementQuestHandler, line 1127"), "when calling stringToIndex in JobAdvancementQuestHandler, line 1127"), "when calling add in JobAdvancementQuestHandler, line 1127")
    set Bet = Vet
    call vwt(Bet, err(Iji("-enableglow", "when calling unObfuscate in JobAdvancementQuestHandler, line 1127"), "when calling stringToIndex in JobAdvancementQuestHandler, line 1127"), "when calling add in JobAdvancementQuestHandler, line 1127")
    set Net = Bet
    call vwt(Net, err(Iji("-far", "when calling unObfuscate in JobAdvancementQuestHandler, line 1127"), "when calling stringToIndex in JobAdvancementQuestHandler, line 1127"), "when calling add in JobAdvancementQuestHandler, line 1127")
    set Met = Net
    call vwt(Met, err(Iji("-rankpvp", "when calling unObfuscate in JobAdvancementQuestHandler, line 1127"), "when calling stringToIndex in JobAdvancementQuestHandler, line 1127"), "when calling add in JobAdvancementQuestHandler, line 1127")
    set wqt = Met
    call vwt(wqt, err(Iji("-rankfishing", "when calling unObfuscate in JobAdvancementQuestHandler, line 1127"), "when calling stringToIndex in JobAdvancementQuestHandler, line 1127"), "when calling add in JobAdvancementQuestHandler, line 1127")
    set uqt = wqt
    call vwt(uqt, err(Iji("-rankclear", "when calling unObfuscate in JobAdvancementQuestHandler, line 1127"), "when calling stringToIndex in JobAdvancementQuestHandler, line 1127"), "when calling add in JobAdvancementQuestHandler, line 1127")
    set rqt = uqt
    call vwt(rqt, err(Iji("-disableProcs", "when calling unObfuscate in JobAdvancementQuestHandler, line 1128"), "when calling stringToIndex in JobAdvancementQuestHandler, line 1128"), "when calling add in JobAdvancementQuestHandler, line 1128")
    set sqt = rqt
    call vwt(sqt, err(Iji("-disableOtherProcs", "when calling unObfuscate in JobAdvancementQuestHandler, line 1128"), "when calling stringToIndex in JobAdvancementQuestHandler, line 1128"), "when calling add in JobAdvancementQuestHandler, line 1128")
    set tqt = sqt
    call vwt(tqt, err(Iji("-enableProcs", "when calling unObfuscate in JobAdvancementQuestHandler, line 1128"), "when calling stringToIndex in JobAdvancementQuestHandler, line 1128"), "when calling add in JobAdvancementQuestHandler, line 1128")
    set iqt = tqt
    call vwt(iqt, err(Iji("-dProcs", "when calling unObfuscate in JobAdvancementQuestHandler, line 1128"), "when calling stringToIndex in JobAdvancementQuestHandler, line 1128"), "when calling add in JobAdvancementQuestHandler, line 1128")
    set Sqt = iqt
    call vwt(Sqt, err(Iji("-dOProcs", "when calling unObfuscate in JobAdvancementQuestHandler, line 1128"), "when calling stringToIndex in JobAdvancementQuestHandler, line 1128"), "when calling add in JobAdvancementQuestHandler, line 1128")
    set cqt = Sqt
    call vwt(cqt, err(Iji("-eProcs", "when calling unObfuscate in JobAdvancementQuestHandler, line 1128"), "when calling stringToIndex in JobAdvancementQuestHandler, line 1128"), "when calling add in JobAdvancementQuestHandler, line 1128")
    set oqt = cqt
    call vwt(oqt, err(Iji("-disableprocs", "when calling unObfuscate in JobAdvancementQuestHandler, line 1128"), "when calling stringToIndex in JobAdvancementQuestHandler, line 1128"), "when calling add in JobAdvancementQuestHandler, line 1128")
    set Oqt = oqt
    call vwt(Oqt, err(Iji("-disableotherorocs", "when calling unObfuscate in JobAdvancementQuestHandler, line 1128"), "when calling stringToIndex in JobAdvancementQuestHandler, line 1128"), "when calling add in JobAdvancementQuestHandler, line 1128")
    set lqt = Oqt
    call vwt(lqt, err(Iji("-enableprocs", "when calling unObfuscate in JobAdvancementQuestHandler, line 1128"), "when calling stringToIndex in JobAdvancementQuestHandler, line 1128"), "when calling add in JobAdvancementQuestHandler, line 1128")
    set bqt = lqt
    call vwt(bqt, err(Iji("-dprocs", "when calling unObfuscate in JobAdvancementQuestHandler, line 1128"), "when calling stringToIndex in JobAdvancementQuestHandler, line 1128"), "when calling add in JobAdvancementQuestHandler, line 1128")
    set yqt = bqt
    call vwt(yqt, err(Iji("-doprocs", "when calling unObfuscate in JobAdvancementQuestHandler, line 1128"), "when calling stringToIndex in JobAdvancementQuestHandler, line 1128"), "when calling add in JobAdvancementQuestHandler, line 1128")
    set pqt = yqt
    call vwt(pqt, err(Iji("-eprocs", "when calling unObfuscate in JobAdvancementQuestHandler, line 1128"), "when calling stringToIndex in JobAdvancementQuestHandler, line 1128"), "when calling add in JobAdvancementQuestHandler, line 1128")
    set eqt = pqt
    call vwt(eqt, err(Iji("-reforged", "when calling unObfuscate in JobAdvancementQuestHandler, line 1128"), "when calling stringToIndex in JobAdvancementQuestHandler, line 1128"), "when calling add in JobAdvancementQuestHandler, line 1128")
    set qqt = eqt
    call vwt(qqt, err(Iji("-disablefog", "when calling unObfuscate in JobAdvancementQuestHandler, line 1129"), "when calling stringToIndex in JobAdvancementQuestHandler, line 1129"), "when calling add in JobAdvancementQuestHandler, line 1129")
    set aqt = qqt
    call vwt(aqt, err(Iji("-enablefog", "when calling unObfuscate in JobAdvancementQuestHandler, line 1129"), "when calling stringToIndex in JobAdvancementQuestHandler, line 1129"), "when calling add in JobAdvancementQuestHandler, line 1129")
    set nqt = aqt
    call vwt(nqt, err(Iji("-nofog", "when calling unObfuscate in JobAdvancementQuestHandler, line 1129"), "when calling stringToIndex in JobAdvancementQuestHandler, line 1129"), "when calling add in JobAdvancementQuestHandler, line 1129")
    set dqt = nqt
    call vwt(dqt, err(Iji("-fog", "when calling unObfuscate in JobAdvancementQuestHandler, line 1129"), "when calling stringToIndex in JobAdvancementQuestHandler, line 1129"), "when calling add in JobAdvancementQuestHandler, line 1129")
    set fqt = dqt
    call vwt(fqt, err(Iji("-camfollow", "when calling unObfuscate in JobAdvancementQuestHandler, line 1130"), "when calling stringToIndex in JobAdvancementQuestHandler, line 1130"), "when calling add in JobAdvancementQuestHandler, line 1130")
    set Rqt = fqt
    call vwt(Rqt, err(Iji("-camunfollow", "when calling unObfuscate in JobAdvancementQuestHandler, line 1130"), "when calling stringToIndex in JobAdvancementQuestHandler, line 1130"), "when calling add in JobAdvancementQuestHandler, line 1130")
    set Tqt = Rqt
    call vwt(Tqt, err(Iji("-start", "when calling unObfuscate in JobAdvancementQuestHandler, line 1130"), "when calling stringToIndex in JobAdvancementQuestHandler, line 1130"), "when calling add in JobAdvancementQuestHandler, line 1130")
    set Yqt = Tqt
    call vwt(Yqt, err(Iji("-stage", "when calling unObfuscate in JobAdvancementQuestHandler, line 1130"), "when calling stringToIndex in JobAdvancementQuestHandler, line 1130"), "when calling add in JobAdvancementQuestHandler, line 1130")
    set Gqt = Yqt
    call vwt(Gqt, err(Iji("-tah", "when calling unObfuscate in JobAdvancementQuestHandler, line 1131"), "when calling stringToIndex in JobAdvancementQuestHandler, line 1131"), "when calling add in JobAdvancementQuestHandler, line 1131")
    set gqt = Gqt
    call vwt(gqt, err(Iji("-testarrow", "when calling unObfuscate in JobAdvancementQuestHandler, line 1131"), "when calling stringToIndex in JobAdvancementQuestHandler, line 1131"), "when calling add in JobAdvancementQuestHandler, line 1131")
    set hqt = gqt
    call vwt(hqt, err(Iji("-maze", "when calling unObfuscate in JobAdvancementQuestHandler, line 1131"), "when calling stringToIndex in JobAdvancementQuestHandler, line 1131"), "when calling add in JobAdvancementQuestHandler, line 1131")
    set Fqt = hqt
    call vwt(Fqt, err(Iji("-critter", "when calling unObfuscate in JobAdvancementQuestHandler, line 1131"), "when calling stringToIndex in JobAdvancementQuestHandler, line 1131"), "when calling add in JobAdvancementQuestHandler, line 1131")
    set kqt = Fqt
    call vwt(kqt, err(Iji("-critter help", "when calling unObfuscate in JobAdvancementQuestHandler, line 1131"), "when calling stringToIndex in JobAdvancementQuestHandler, line 1131"), "when calling add in JobAdvancementQuestHandler, line 1131")
    set jqt = JI
    call vwt(jqt, - 450036568, "when calling add in JobAdvancementQuestHandler, line 1134")
    set xqt = jqt
    call vwt(xqt, $24E2FDC5, "when calling add in JobAdvancementQuestHandler, line 1134")
    set vqt = xqt
    call vwt(vqt, $3B8906D7, "when calling add in JobAdvancementQuestHandler, line 1134")
    set mqt = vqt
    call vwt(mqt, $4B0B671F, "when calling add in JobAdvancementQuestHandler, line 1134")
    set Qqt = mqt
    call vwt(Qqt, - 574097400, "when calling add in JobAdvancementQuestHandler, line 1134")
    set Wqt = Qqt
    call vwt(Wqt, - 1921965054, "when calling add in JobAdvancementQuestHandler, line 1135")
    set Eqt = Wqt
    call vwt(Eqt, - 1001003448, "when calling add in JobAdvancementQuestHandler, line 1135")
    set Zqt = Eqt
    call vwt(Zqt, - 1971580172, "when calling add in JobAdvancementQuestHandler, line 1135")
    set Uqt = Zqt
    call vwt(Uqt, $71AF65D8, "when calling add in JobAdvancementQuestHandler, line 1135")
    set Iqt = Uqt
    call vwt(Iqt, - 1081261853, "when calling add in JobAdvancementQuestHandler, line 1135")
    set Pqt = Iqt
    call vwt(Pqt, - 1894420541, "when calling add in JobAdvancementQuestHandler, line 1136")
    set Aqt = Pqt
    call vwt(Aqt, - 145376876, "when calling add in JobAdvancementQuestHandler, line 1136")
    set Dqt = Aqt
    call vwt(Dqt, $39794FF2, "when calling add in JobAdvancementQuestHandler, line 1136")
    set Hqt = Dqt
    call vwt(Hqt, - 1620426108, "when calling add in JobAdvancementQuestHandler, line 1136")
    set Jqt = Hqt
    call vwt(Jqt, $7927E100, "when calling add in JobAdvancementQuestHandler, line 1136")
    set Kqt = Jqt
    call vwt(Kqt, $0D5A18AE, "when calling add in JobAdvancementQuestHandler, line 1136")
    set Lqt = Kqt
    call vwt(Lqt, - 1067581327, "when calling add in JobAdvancementQuestHandler, line 1136")
    set Xqt = Lqt
    call vwt(Xqt, $2E49A2DD, "when calling add in JobAdvancementQuestHandler, line 1136")
    set Cqt = Xqt
    call vwt(Cqt, - 102961165, "when calling add in JobAdvancementQuestHandler, line 1137")
    set Vqt = Cqt
    call vwt(Vqt, - 527420272, "when calling add in JobAdvancementQuestHandler, line 1137")
    set Bqt = Vqt
    call vwt(Bqt, $2E30B353, "when calling add in JobAdvancementQuestHandler, line 1137")
    set Nqt = Bqt
    call vwt(Nqt, $12DD0762, "when calling add in JobAdvancementQuestHandler, line 1137")
    set Mqt = Nqt
    call vwt(Mqt, - 746272539, "when calling add in JobAdvancementQuestHandler, line 1137")
    set wat = Mqt
    call vwt(wat, - 2093036621, "when calling add in JobAdvancementQuestHandler, line 1137")
    set uat = wat
    call vwt(uat, - 1987510656, "when calling add in JobAdvancementQuestHandler, line 1138")
    set rat = uat
    call vwt(rat, $34D129C9, "when calling add in JobAdvancementQuestHandler, line 1138")
    set sat = rat
    call vwt(sat, $13ABA1C4, "when calling add in JobAdvancementQuestHandler, line 1138")
    set tat = sat
    call vwt(tat, $6BEC160F, "when calling add in JobAdvancementQuestHandler, line 1138")
    set iat = tat
    call vwt(iat, $6EE986B4, "when calling add in JobAdvancementQuestHandler, line 1138")
    set Sat = iat
    call vwt(Sat, $348582B1, "when calling add in JobAdvancementQuestHandler, line 1139")
    set cat = Sat
    call vwt(cat, - 884511129, "when calling add in JobAdvancementQuestHandler, line 1139")
    set oat = cat
    call vwt(oat, - 249645004, "when calling add in JobAdvancementQuestHandler, line 1139")
    set Oat = oat
    call vwt(Oat, - 261068660, "when calling add in JobAdvancementQuestHandler, line 1139")
    set lat = Oat
    call vwt(lat, $1CD29DC6, "when calling add in JobAdvancementQuestHandler, line 1139")
    set bat = lat
    call vwt(bat, - 1920614987, "when calling add in JobAdvancementQuestHandler, line 1139")
    set yat = bat
    call vwt(yat, - 1894420541, "when calling add in JobAdvancementQuestHandler, line 1140")
    set pat = yat
    call vwt(pat, $3E4C9A47, "when calling add in JobAdvancementQuestHandler, line 1140")
    set eat = pat
    call vwt(eat, $517AC2F3, "when calling add in JobAdvancementQuestHandler, line 1140")
    set qat = eat
    call vwt(qat, $1E7919FC, "when calling add in JobAdvancementQuestHandler, line 1140")
    set aat = qat
    call vwt(aat, - 329432830, "when calling add in JobAdvancementQuestHandler, line 1140")
    set nat = aat
    call vwt(nat, - 1122719741, "when calling add in JobAdvancementQuestHandler, line 1140")
    set dat = nat
    call vwt(dat, $5D2498B5, "when calling add in JobAdvancementQuestHandler, line 1141")
    set fat = dat
    call vwt(fat, - 1247924694, "when calling add in JobAdvancementQuestHandler, line 1141")
    set Rat = fat
    call vwt(Rat, $34A03011, "when calling add in JobAdvancementQuestHandler, line 1141")
    set Tat = Rat
    call vwt(Tat, $196C8A62, "when calling add in JobAdvancementQuestHandler, line 1141")
    set Yat = Tat
    call vwt(Yat, $7AD87763, "when calling add in JobAdvancementQuestHandler, line 1141")
    set Gat = Yat
    call vwt(Gat, $64B8A001, "when calling add in JobAdvancementQuestHandler, line 1141")
    set gat = Gat
    call vwt(gat, - 1233464104, "when calling add in JobAdvancementQuestHandler, line 1142")
    set hat = gat
    call vwt(hat, - 1803775864, "when calling add in JobAdvancementQuestHandler, line 1142")
    set Fat = hat
    call vwt(Fat, $69082D82, "when calling add in JobAdvancementQuestHandler, line 1142")
    set kat = Fat
    call vwt(kat, - 1033084835, "when calling add in JobAdvancementQuestHandler, line 1142")
    set jat = kat
    call vwt(jat, - 598665989, "when calling add in JobAdvancementQuestHandler, line 1142")
    set xat = jat
    call vwt(xat, - 1221126007, "when calling add in JobAdvancementQuestHandler, line 1142")
    set vat = xat
    call vwt(vat, - 1948171553, "when calling add in JobAdvancementQuestHandler, line 1143")
    set mat = vat
    call vwt(mat, $322C853D, "when calling add in JobAdvancementQuestHandler, line 1143")
    set Qat = mat
    call vwt(Qat, $632CA844, "when calling add in JobAdvancementQuestHandler, line 1143")
    set Wat = Qat
    call vwt(Wat, - 124481981, "when calling add in JobAdvancementQuestHandler, line 1143")
    set Eat = Wat
    call vwt(Eat, $398B09BB, "when calling add in JobAdvancementQuestHandler, line 1143")
    set Zat = Eat
    call vwt(Zat, - 485324017, "when calling add in JobAdvancementQuestHandler, line 1143")
    set Uat = Zat
    call vwt(Uat, - 1921965054, "when calling add in JobAdvancementQuestHandler, line 1145")
    set Iat = Uat
    call vwt(Iat, $4B0B671F, "when calling add in JobAdvancementQuestHandler, line 1145")
    set Pat = Iat
    call vwt(Pat, $3B8906D7, "when calling add in JobAdvancementQuestHandler, line 1145")
    set Aat = Pat
    call vwt(Aat, - 574097400, "when calling add in JobAdvancementQuestHandler, line 1145")
    set Dat = Aat
    call vwt(Dat, - 1001003448, "when calling add in JobAdvancementQuestHandler, line 1145")
    set Hat = Dat
    call vwt(Hat, - 1377671245, "when calling add in JobAdvancementQuestHandler, line 1145")
    set Jat = Hat
    call vwt(Jat, - 1971580172, "when calling add in JobAdvancementQuestHandler, line 1146")
    set Kat = Jat
    call vwt(Kat, - 450036568, "when calling add in JobAdvancementQuestHandler, line 1146")
    set Lat = Kat
    call vwt(Lat, $24E2FDC5, "when calling add in JobAdvancementQuestHandler, line 1146")
    set Xat = Lat
    call vwt(Xat, - 1881760200, "when calling add in JobAdvancementQuestHandler, line 1146")
    set Cat = Xat
    call vwt(Cat, $0014A601, "when calling add in JobAdvancementQuestHandler, line 1146")
    set Vat = Cat
    call vwt(Vat, $0D6030C2, "when calling add in JobAdvancementQuestHandler, line 1146")
    set Bat = Vat
    call vwt(Bat, - 140546258, "when calling add in JobAdvancementQuestHandler, line 1147")
    set Nat = Bat
    call vwt(Nat, $0973C00C, "when calling add in JobAdvancementQuestHandler, line 1149")
    set Mat = Nat
    call vwt(Mat, - 1641302548, "when calling add in JobAdvancementQuestHandler, line 1149")
    set wnt = Mat
    call vwt(wnt, - 234630326, "when calling add in JobAdvancementQuestHandler, line 1149")
    set unt = wnt
    call vwt(unt, $11289F83, "when calling add in JobAdvancementQuestHandler, line 1149")
    set rnt = unt
    call vwt(rnt, $5CA6C4FA, "when calling add in JobAdvancementQuestHandler, line 1149")
    set snt = rnt
    call vwt(snt, - 360593514, "when calling add in JobAdvancementQuestHandler, line 1149")
    set tnt = snt
    call vwt(tnt, $77D0C725, "when calling add in JobAdvancementQuestHandler, line 1150")
    set int = tnt
    call vwt(int, $339917FA, "when calling add in JobAdvancementQuestHandler, line 1150")
    set Snt = int
    call vwt(Snt, $793F525D, "when calling add in JobAdvancementQuestHandler, line 1150")
    set cnt = Snt
    call vwt(cnt, $1FD0F960, "when calling add in JobAdvancementQuestHandler, line 1150")
    set ont = cnt
    call vwt(ont, - 926604134, "when calling add in JobAdvancementQuestHandler, line 1150")
    set Ont = ont
    call vwt(Ont, - 2109815165, "when calling add in JobAdvancementQuestHandler, line 1150")
    set lnt = Ont
    call vwt(lnt, - 872066564, "when calling add in JobAdvancementQuestHandler, line 1151")
    set bnt = lnt
    call vwt(bnt, - 1882829530, "when calling add in JobAdvancementQuestHandler, line 1151")
    set ynt = bnt
    call vwt(ynt, $6B8DC2F4, "when calling add in JobAdvancementQuestHandler, line 1151")
    set pnt = ynt
    call vwt(pnt, - 1425506551, "when calling add in JobAdvancementQuestHandler, line 1151")
    set ent = pnt
    call vwt(ent, $6BBED56B, "when calling add in JobAdvancementQuestHandler, line 1151")
    set qnt = ent
    call vwt(qnt, $752FCD6A, "when calling add in JobAdvancementQuestHandler, line 1151")
    set ant = qnt
    call vwt(ant, - 822033163, "when calling add in JobAdvancementQuestHandler, line 1152")
    set nnt = ant
    call vwt(nnt, - 1060239102, "when calling add in JobAdvancementQuestHandler, line 1152")
    set dnt = nnt
    call vwt(dnt, - 1389988148, "when calling add in JobAdvancementQuestHandler, line 1152")
    set fnt = dnt
    call vwt(fnt, - 708529273, "when calling add in JobAdvancementQuestHandler, line 1152")
    set Rnt = fnt
    call vwt(Rnt, $1C5BAD83, "when calling add in JobAdvancementQuestHandler, line 1152")
    set Tnt = Rnt
    call vwt(Tnt, - 1032899168, "when calling add in JobAdvancementQuestHandler, line 1152")
    set Ynt = KI
    call vwt(Ynt, - 1552636792, "when calling add in JobAdvancementQuestHandler, line 1155")
    set Gnt = Ynt
    call vwt(Gnt, $1A567C8E, "when calling add in JobAdvancementQuestHandler, line 1155")
    set gnt = Gnt
    call vwt(gnt, - 1410392486, "when calling add in JobAdvancementQuestHandler, line 1155")
    set hnt = gnt
    call vwt(hnt, $42BD9D1E, "when calling add in JobAdvancementQuestHandler, line 1155")
    set Fnt = hnt
    call vwt(Fnt, - 223823090, "when calling add in JobAdvancementQuestHandler, line 1155")
    set knt = Fnt
    call vwt(knt, $340F94BB, "when calling add in JobAdvancementQuestHandler, line 1155")
    set jnt = knt
    call vwt(jnt, $1D285F3C, "when calling add in JobAdvancementQuestHandler, line 1156")
    set xnt = jnt
    call vwt(xnt, - 1873920066, "when calling add in JobAdvancementQuestHandler, line 1156")
    set vnt = xnt
    call vwt(vnt, $2767D421, "when calling add in JobAdvancementQuestHandler, line 1156")
    set mnt = vnt
    call vwt(mnt, $0014A601, "when calling add in JobAdvancementQuestHandler, line 1156")
    set Qnt = mnt
    call vwt(Qnt, - 999516534, "when calling add in JobAdvancementQuestHandler, line 1156")
    set Wnt = Qnt
    call vwt(Wnt, - 1881760200, "when calling add in JobAdvancementQuestHandler, line 1156")
    set Ent = Wnt
    call vwt(Ent, $608A1AF4, "when calling add in JobAdvancementQuestHandler, line 1157")
    set Znt = Ent
    call vwt(Znt, - 1085922853, "when calling add in JobAdvancementQuestHandler, line 1157")
    set Unt = Znt
    call vwt(Unt, $1B8EE4B9, "when calling add in JobAdvancementQuestHandler, line 1157")
    set Int = Unt
    call vwt(Int, - 954856325, "when calling add in JobAdvancementQuestHandler, line 1157")
    set Pnt = Int
    call vwt(Pnt, $36398F26, "when calling add in JobAdvancementQuestHandler, line 1157")
    set Ant = Pnt
    call vwt(Ant, $404B9649, "when calling add in JobAdvancementQuestHandler, line 1157")
    set Dnt = Ant
    call vwt(Dnt, $3C1917E1, "when calling add in JobAdvancementQuestHandler, line 1158")
    set Hnt = Dnt
    call vwt(Hnt, - 1747430255, "when calling add in JobAdvancementQuestHandler, line 1158")
    set Jnt = Hnt
    call vwt(Jnt, - 250866234, "when calling add in JobAdvancementQuestHandler, line 1158")
    set Knt = Jnt
    call vwt(Knt, - 2032793031, "when calling add in JobAdvancementQuestHandler, line 1158")
    set Lnt = Knt
    call vwt(Lnt, $2C3B1B9F, "when calling add in JobAdvancementQuestHandler, line 1158")
    set Xnt = Lnt
    call vwt(Xnt, $2B2379ED, "when calling add in JobAdvancementQuestHandler, line 1158")
    set Cnt = Xnt
    call vwt(Cnt, - 612645045, "when calling add in JobAdvancementQuestHandler, line 1159")
    set Vnt = Cnt
    call vwt(Vnt, - 719261717, "when calling add in JobAdvancementQuestHandler, line 1159")
    set Bnt = Vnt
    call vwt(Bnt, $254C5F2A, "when calling add in JobAdvancementQuestHandler, line 1159")
    set Nnt = Bnt
    call vwt(Nnt, - 2126904427, "when calling add in JobAdvancementQuestHandler, line 1159")
    set Mnt = Nnt
    call vwt(Mnt, $46E869CE, "when calling add in JobAdvancementQuestHandler, line 1159")
    set wdt = Mnt
    call vwt(wdt, $7EE44F2C, "when calling add in JobAdvancementQuestHandler, line 1159")
    set udt = wdt
    call vwt(udt, $22E7A878, "when calling add in JobAdvancementQuestHandler, line 1160")
    set rdt = udt
    call vwt(rdt, - 345316052, "when calling add in JobAdvancementQuestHandler, line 1160")
    set sdt = rdt
    call vwt(sdt, - 2076044299, "when calling add in JobAdvancementQuestHandler, line 1160")
    set tdt = sdt
    call vwt(tdt, $0E0FCE98, "when calling add in JobAdvancementQuestHandler, line 1160")
    set idt = tdt
    call vwt(idt, $12950E95, "when calling add in JobAdvancementQuestHandler, line 1160")
    set Sdt = idt
    call vwt(Sdt, - 1125974057, "when calling add in JobAdvancementQuestHandler, line 1160")
    set cdt = Sdt
    call vwt(cdt, - 577283755, "when calling add in JobAdvancementQuestHandler, line 1161")
    set odt = cdt
    call vwt(odt, - 1754701994, "when calling add in JobAdvancementQuestHandler, line 1161")
    set Odt = odt
    call vwt(Odt, $1009A03F, "when calling add in JobAdvancementQuestHandler, line 1161")
    set ldt = Odt
    call vwt(ldt, $04503801, "when calling add in JobAdvancementQuestHandler, line 1161")
    set bdt = ldt
    call vwt(bdt, $1CEBE05D, "when calling add in JobAdvancementQuestHandler, line 1161")
    set ydt = bdt
    call vwt(ydt, $4E625028, "when calling add in JobAdvancementQuestHandler, line 1161")
    set pdt = ydt
    call vwt(pdt, - 1803251005, "when calling add in JobAdvancementQuestHandler, line 1162")
    set edt = pdt
    call vwt(edt, $07D3CB4C, "when calling add in JobAdvancementQuestHandler, line 1162")
    set qdt = edt
    call vwt(qdt, $7D98A0D5, "when calling add in JobAdvancementQuestHandler, line 1165")
    set adt = qdt
    call vwt(adt, $3A5EF8A3, "when calling add in JobAdvancementQuestHandler, line 1165")
    set ndt = adt
    call vwt(ndt, - 354933502, "when calling add in JobAdvancementQuestHandler, line 1165")
    set ddt = ndt
    call vwt(ddt, - 741812968, "when calling add in JobAdvancementQuestHandler, line 1165")
    set fdt = ddt
    call vwt(fdt, - 1297724145, "when calling add in JobAdvancementQuestHandler, line 1165")
    set Rdt = fdt
    call vwt(Rdt, $469F8689, "when calling add in JobAdvancementQuestHandler, line 1165")
    set Tdt = Rdt
    call vwt(Tdt, $3245DB7F, "when calling add in JobAdvancementQuestHandler, line 1166")
    set Ydt = Tdt
    call vwt(Ydt, - 790081351, "when calling add in JobAdvancementQuestHandler, line 1166")
    set Gdt = Ydt
    call vwt(Gdt, $1CFEA101, "when calling add in JobAdvancementQuestHandler, line 1166")
    set gdt = Gdt
    call vwt(gdt, $064417DF, "when calling add in JobAdvancementQuestHandler, line 1166")
    set hdt = gdt
    call vwt(hdt, - 2078906056, "when calling add in JobAdvancementQuestHandler, line 1166")
    set Fdt = hdt
    call vwt(Fdt, $064417DF, "when calling add in JobAdvancementQuestHandler, line 1166")
    set kdt = XI
    call vwt(kdt, - 1043731030, "when calling add in JobAdvancementQuestHandler, line 1168")
    set jdt = kdt
    call vwt(jdt, $54B2B3EE, "when calling add in JobAdvancementQuestHandler, line 1168")
    set xdt = jdt
    call vwt(xdt, - 898975524, "when calling add in JobAdvancementQuestHandler, line 1168")
    set vdt = xdt
    call vwt(vdt, - 1747901318, "when calling add in JobAdvancementQuestHandler, line 1168")
    set mdt = vdt
    call vwt(mdt, - 328549502, "when calling add in JobAdvancementQuestHandler, line 1168")
    set Qdt = mdt
    call vwt(Qdt, - 1296243288, "when calling add in JobAdvancementQuestHandler, line 1168")
    set Wdt = Qdt
    call vwt(Wdt, $142C794F, "when calling add in JobAdvancementQuestHandler, line 1168")
    set Edt = Wdt
    call vwt(Edt, $6124F0CA, "when calling add in JobAdvancementQuestHandler, line 1168")
    set Zdt = Edt
    call vwt(Zdt, $37C4EC1C, "when calling add in JobAdvancementQuestHandler, line 1168")
    set Udt = Zdt
    call vwt(Udt, - 1611992964, "when calling add in JobAdvancementQuestHandler, line 1168")
    set Idt = Udt
    call vwt(Idt, $0F7B7590, "when calling add in JobAdvancementQuestHandler, line 1168")
    set Pdt = Idt
    call vwt(Pdt, $4F930CEA, "when calling add in JobAdvancementQuestHandler, line 1168")
    set Adt = Pdt
    call vwt(Adt, - 1046433373, "when calling add in JobAdvancementQuestHandler, line 1168")
    set Ddt = Adt
    call vwt(Ddt, $24150008, "when calling add in JobAdvancementQuestHandler, line 1168")
    set Hdt = Ddt
    call vwt(Hdt, $6DDD0A59, "when calling add in JobAdvancementQuestHandler, line 1168")
    set Jdt = Hdt
    call vwt(Jdt, - 1863015384, "when calling add in JobAdvancementQuestHandler, line 1168")
    set Kdt = Jdt
    call vwt(Kdt, $7AA2BE34, "when calling add in JobAdvancementQuestHandler, line 1168")
    set Ldt = Kdt
    call vwt(Ldt, - 186300548, "when calling add in JobAdvancementQuestHandler, line 1168")
    set Xdt = Ldt
    call vwt(Xdt, $2C6DBC88, "when calling add in JobAdvancementQuestHandler, line 1168")
    set Cdt = Xdt
    call vwt(Cdt, $4B1D1ED9, "when calling add in JobAdvancementQuestHandler, line 1168")
    set Vdt = Cdt
    call vwt(Vdt, $07946A24, "when calling add in JobAdvancementQuestHandler, line 1168")
    set Bdt = Vdt
    call vwt(Bdt, $4E97B699, "when calling add in JobAdvancementQuestHandler, line 1168")
    set Ndt = Bdt
    call vwt(Ndt, - 1285756216, "when calling add in JobAdvancementQuestHandler, line 1168")
    set Mdt = Ndt
    call vwt(Mdt, $6D163172, "when calling add in JobAdvancementQuestHandler, line 1168")
    set wft = Mdt
    call vwt(wft, - 1222384386, "when calling add in JobAdvancementQuestHandler, line 1168")
    set uft = wft
    call vwt(uft, $16F5E0AC, "when calling add in JobAdvancementQuestHandler, line 1168")
    set rft = uft
    call vwt(rft, $20FB6100, "when calling add in JobAdvancementQuestHandler, line 1168")
    set sft = rft
    call vwt(sft, - 2706556, "when calling add in JobAdvancementQuestHandler, line 1168")
    set tft = sft
    call vwt(tft, $46DE23DF, "when calling add in JobAdvancementQuestHandler, line 1168")
    set ift = tft
    call vwt(ift, - 1517224843, "when calling add in JobAdvancementQuestHandler, line 1168")
    set Sft = ift
    call vwt(Sft, $6F2BB3B2, "when calling add in JobAdvancementQuestHandler, line 1168")
    set cft = Sft
    call vwt(cft, $30A3D6E8, "when calling add in JobAdvancementQuestHandler, line 1168")
    set oft = cft
    call vwt(oft, $7DAB949A, "when calling add in JobAdvancementQuestHandler, line 1168")
    set Oft = oft
    call vwt(Oft, $7DAB949A, "when calling add in JobAdvancementQuestHandler, line 1168")
    set lft = Oft
    call vwt(lft, $3AC67B20, "when calling add in JobAdvancementQuestHandler, line 1168")
    set bft = lft
    call vwt(bft, $1694B3A4, "when calling add in JobAdvancementQuestHandler, line 1168")
    set yft = bft
    call vwt(yft, - 1296765121, "when calling add in JobAdvancementQuestHandler, line 1168")
    set pft = yft
    call vwt(pft, $60586515, "when calling add in JobAdvancementQuestHandler, line 1168")
    set eft = pft
    call vwt(eft, $16F5E0AC, "when calling add in JobAdvancementQuestHandler, line 1168")
    set qft = eft
    call vwt(qft, $6D163172, "when calling add in JobAdvancementQuestHandler, line 1168")
    set aft = qft
    call vwt(aft, $5FA6DC35, "when calling add in JobAdvancementQuestHandler, line 1168")
    set nft = aft
    call vwt(nft, $6D85DBC1, "when calling add in JobAdvancementQuestHandler, line 1168")
    set dft = nft
    call vwt(dft, $27EF1E29, "when calling add in JobAdvancementQuestHandler, line 1168")
    set fft = dft
    call vwt(fft, $5CD8D732, "when calling add in JobAdvancementQuestHandler, line 1168")
    set Rft = fft
    call vwt(Rft, $4DC8F402, "when calling add in JobAdvancementQuestHandler, line 1168")
    set Tft = Rft
    call vwt(Tft, - 703677584, "when calling add in JobAdvancementQuestHandler, line 1168")
    set Yft = Tft
    call vwt(Yft, $589DDAB6, "when calling add in JobAdvancementQuestHandler, line 1168")
    set Gft = Yft
    call vwt(Gft, $69BE8781, "when calling add in JobAdvancementQuestHandler, line 1168")
    set gft = Gft
    call vwt(gft, $6A38D3BE, "when calling add in JobAdvancementQuestHandler, line 1168")
    set hft = gft
    call vwt(hft, - 1186122378, "when calling add in JobAdvancementQuestHandler, line 1168")
    set Fft = hft
    call vwt(Fft, - 637060610, "when calling add in JobAdvancementQuestHandler, line 1168")
    set kft = Fft
    call vwt(kft, - 1046433373, "when calling add in JobAdvancementQuestHandler, line 1168")
    set jft = kft
    call vwt(jft, $27E91637, "when calling add in JobAdvancementQuestHandler, line 1168")
    set xft = jft
    call vwt(xft, $0188DE94, "when calling add in JobAdvancementQuestHandler, line 1168")
    set vft = xft
    call vwt(vft, - 1261311479, "when calling add in JobAdvancementQuestHandler, line 1168")
    set mft = vft
    call vwt(mft, $0ECBD714, "when calling add in JobAdvancementQuestHandler, line 1168")
    set Qft = mft
    call vwt(Qft, $6124F0CA, "when calling add in JobAdvancementQuestHandler, line 1168")
    set Wft = Qft
    call vwt(Wft, $142C794F, "when calling add in JobAdvancementQuestHandler, line 1168")
    set Eft = Wft
    call vwt(Eft, $11EB072B, "when calling add in JobAdvancementQuestHandler, line 1168")
    set Zft = Eft
    call vwt(Zft, - 1296243288, "when calling add in JobAdvancementQuestHandler, line 1168")
    set Uft = Zft
    call vwt(Uft, - 186300548, "when calling add in JobAdvancementQuestHandler, line 1168")
    set Ift = Uft
    call vwt(Ift, $6DDD0A59, "when calling add in JobAdvancementQuestHandler, line 1168")
    set Pft = Ift
    call vwt(Pft, $1E47096D, "when calling add in JobAdvancementQuestHandler, line 1168")
    set Aft = LI
    call vwt(Aft, $4EBF9822, "when calling add in JobAdvancementQuestHandler, line 1170")
    set Dft = Aft
    call vwt(Dft, - 793479814, "when calling add in JobAdvancementQuestHandler, line 1170")
    set Hft = Dft
    call vwt(Hft, $4502FD23, "when calling add in JobAdvancementQuestHandler, line 1170")
    set Jft = Hft
    call vwt(Jft, $64BBC919, "when calling add in JobAdvancementQuestHandler, line 1170")
    set Kft = Jft
    call vwt(Kft, - 693657680, "when calling add in JobAdvancementQuestHandler, line 1170")
    set Lft = Kft
    call vwt(Lft, - 909688049, "when calling add in JobAdvancementQuestHandler, line 1170")
    set Xft = Lft
    call vwt(Xft, - 42209881, "when calling add in JobAdvancementQuestHandler, line 1170")
    set Cft = Xft
    call vwt(Cft, $4DB7A3E8, "when calling add in JobAdvancementQuestHandler, line 1170")
    set Vft = Cft
    call vwt(Vft, $4256CCD1, "when calling add in JobAdvancementQuestHandler, line 1170")
    set Bft = Vft
    call vwt(Bft, $3C557574, "when calling add in JobAdvancementQuestHandler, line 1170")
    set Nft = Bft
    call vwt(Nft, $415475A2, "when calling add in JobAdvancementQuestHandler, line 1170")
    set Mft = Nft
    call vwt(Mft, - 1944218962, "when calling add in JobAdvancementQuestHandler, line 1170")
    set wRt = CI
    call vwt(wRt, $016243B6, "when calling add in JobAdvancementQuestHandler, line 1172")
    set uRt = wRt
    call vwt(uRt, - 1287577185, "when calling add in JobAdvancementQuestHandler, line 1172")
    set rRt = uRt
    call vwt(rRt, $1699D992, "when calling add in JobAdvancementQuestHandler, line 1172")
    set sRt = rRt
    call vwt(sRt, $2F823AB9, "when calling add in JobAdvancementQuestHandler, line 1172")
    set tRt = sRt
    call vwt(tRt, $70769F1F, "when calling add in JobAdvancementQuestHandler, line 1172")
    set iRt = tRt
    call vwt(iRt, $70769F1F, "when calling add in JobAdvancementQuestHandler, line 1172")
    set SRt = VI
    call vwt(SRt, - 1863015384, "when calling add in JobAdvancementQuestHandler, line 1174")
    set cRt = SRt
    call vwt(cRt, $24150008, "when calling add in JobAdvancementQuestHandler, line 1174")
    set oRt = cRt
    call vwt(oRt, $4F930CEA, "when calling add in JobAdvancementQuestHandler, line 1174")
    set ORt = oRt
    call vwt(ORt, - 1611992964, "when calling add in JobAdvancementQuestHandler, line 1174")
    set lRt = ORt
    call vwt(lRt, $6A38D3BE, "when calling add in JobAdvancementQuestHandler, line 1174")
    set bRt = lRt
    call vwt(bRt, $69BE8781, "when calling add in JobAdvancementQuestHandler, line 1174")
    set yRt = bRt
    call vwt(yRt, $589DDAB6, "when calling add in JobAdvancementQuestHandler, line 1174")
    set pRt = yRt
    call vwt(pRt, - 1186122378, "when calling add in JobAdvancementQuestHandler, line 1174")
    set eRt = pRt
    call vwt(eRt, - 2706556, "when calling add in JobAdvancementQuestHandler, line 1174")
    set qRt = eRt
    call vwt(qRt, $7AA2BE34, "when calling add in JobAdvancementQuestHandler, line 1174")
    set aRt = qRt
    call vwt(aRt, $0ECBD714, "when calling add in JobAdvancementQuestHandler, line 1174")
    set nRt = aRt
    call vwt(nRt, $1FE7D8C4, "when calling add in JobAdvancementQuestHandler, line 1174")
    set dRt = nRt
    call vwt(dRt, - 1261311479, "when calling add in JobAdvancementQuestHandler, line 1174")
    set fRt = CreateTrigger()
    call l2w(fRt, EVENT_PLAYER_UNIT_DEATH)
    set RRt = fRt
    call dUs(RRt, Condition(QQw))
    set TRt = RRt
    call B2S(TRt, WQw)
    set YRt = TRt
    call B2S(YRt, EQw)
    set GRt = YRt
    call B2S(GRt, ZQw)
    set gRt = CreateTrigger()
    call l2w(gRt, EVENT_PLAYER_UNIT_DEATH)
    set hRt = gRt
    call dUs(hRt, Condition(UQw))
    set FRt = hRt
    call B2S(FRt, IQw)
    set kRt = FRt
    call B2S(kRt, PQw)
    set jRt = CreateTrigger()
    call l2w(jRt, EVENT_PLAYER_UNIT_DEATH)
    set xRt = jRt
    call dUs(xRt, Condition(AQw))
    set vRt = xRt
    call B2S(vRt, DQw)
    set mRt = Nls("when calling alloc_CallbackSingle_doAfter_JobAdvancementQuestHandler in JobAdvancementQuestHandler, line 1198")
    call RUs(mRt)
    call Ybr(2., mRt, "when calling doAfter in JobAdvancementQuestHandler, line 1198")
    call nnr(ZPs("when calling getTimer in JobAdvancementQuestHandler, line 1205"), 11., HQw)
    call nnr(ZPs("when calling getTimer in JobAdvancementQuestHandler, line 1206"), 8., JQw)
    call nnr(ZPs("when calling getTimer in JobAdvancementQuestHandler, line 1207"), 5., KQw)
    call nnr(ZPs("when calling getTimer in JobAdvancementQuestHandler, line 1208"), 12., LQw)
    call nnr(ZPs("when calling getTimer in JobAdvancementQuestHandler, line 1209"), 3., XQw)
    call nnr(ZPs("when calling getTimer in JobAdvancementQuestHandler, line 1210"), 9., CQw)
    set QRt = BLw("when calling alloc_CallbackSingle_doAfter_JobAdvancementQuestHandler in JobAdvancementQuestHandler, line 1212")
    call RUs(QRt)
    call Ybr(1., QRt, "when calling doAfter in JobAdvancementQuestHandler, line 1212")
    set ASw = ASw - 1
    set Ebt = null
    set Zbt = null
    set Pbt = null
    set Abt = null
    set Dbt = null
    set Hbt = null
    set Jbt = null
    set Lbt = null
    set Xbt = null
    set Nbt = null
    set Mbt = null
    set wyt = null
    set uyt = null
    set fRt = null
    set RRt = null
    set TRt = null
    set YRt = null
    set GRt = null
    set gRt = null
    set hRt = null
    set FRt = null
    set kRt = null
    set jRt = null
    set xRt = null
    set vRt = null
    return true
endfunction
function Kdr takes nothing returns boolean
    set ASw = 0
    return WRt("via function reference JobAdvancementQuestHandler, line 1")
endfunction
function KeS takes nothing returns boolean
    return GetUnitTypeId(GetEnteringUnit()) == 1211117618 and GetHeroLevel(GetEnteringUnit()) >= 10
endfunction
function Keu takes nothing returns boolean
    return GetItemCharges(GetManipulatedItem()) >= 1
endfunction
function Aht takes nothing returns boolean
    return GetUnitTypeId(GetDyingUnit()) == 1848652086
endfunction
function iHt takes nothing returns boolean
    return GetUnitTypeId(GetDyingUnit()) == 1848652087
endfunction
function Cyu takes nothing returns boolean
    return GetBooleanOr(iHt(), Aht())
endfunction
function VAw takes nothing returns boolean
    return uc[1 + GetPlayerId(GetOwningPlayer(GetKillingUnit()))] >= 40
endfunction
function vxs takes nothing returns boolean
    return qc[1 + GetPlayerId(GetOwningPlayer(GetKillingUnit()))] >= 40
endfunction
function Dli takes nothing returns boolean
    return GetBooleanAnd(vxs(), VAw())
endfunction
function INi takes nothing returns boolean
    return uc[1 + GetPlayerId(GetOwningPlayer(GetKillingUnit()))] >= 40
endfunction
function g9t takes nothing returns boolean
    return qc[1 + GetPlayerId(GetOwningPlayer(GetKillingUnit()))] >= 40
endfunction
function uur takes nothing returns boolean
    return GetUnitTypeId(GetDyingUnit()) == 1848652098
endfunction
function Khs takes nothing returns nothing
    if Cyu() then
        set qc[1 + GetPlayerId(GetOwningPlayer(GetKillingUnit()))] = qc[1 + GetPlayerId(GetOwningPlayer(GetKillingUnit()))] + 1
        if g9t() then
            call QuestMessageBJ(MwS(GetOwningPlayer(GetKillingUnit())), $00000001, "|cffffcc00Quest Requirement Completed|r : 40 Lizardmen has been killed.")
        else
            call QuestMessageBJ(MwS(GetOwningPlayer(GetKillingUnit())), $00000001, I2S(qc[1 + GetPlayerId(GetOwningPlayer(GetKillingUnit()))]) + " Lizardman/Lizardmen killed.")
        endif
    endif
    if uur() then
        set uc[1 + GetPlayerId(GetOwningPlayer(GetKillingUnit()))] = uc[1 + GetPlayerId(GetOwningPlayer(GetKillingUnit()))] + 1
        if INi() then
            call QuestMessageBJ(MwS(GetOwningPlayer(GetKillingUnit())), $00000001, "|cffffcc00Quest Requirement Completed|r : 40 Snap Dragons has been slain.")
        else
            call QuestMessageBJ(MwS(GetOwningPlayer(GetKillingUnit())), $00000001, I2S(uc[1 + GetPlayerId(GetOwningPlayer(GetKillingUnit()))]) + " Snap Dragons slain.")
        endif
    endif
    if Dli() then
        call QuestMessageBJ(MwS(GetOwningPlayer(GetKillingUnit())), $00000002, "|cffffcc00Proving a Worth|r Quest Requirements Completed.")
    endif
endfunction
function JAs takes string HPs returns boolean
    local integer JPs
    local integer KPs
    local integer LPs
    local integer XPs
    local integer CPs
    local integer VPs
    local integer BPs
    local integer NPs
    local integer MPs
    local integer wAs
    local integer uAs
    local integer rAs
    local integer sAs
    local integer tAs
    local integer iAs
    local integer SAs
    local integer cAs
    local integer oAs
    local integer OAs
    local integer lAs
    local integer bAs
    local integer yAs
    local integer pAs
    local integer eAs
    local integer qAs
    local integer aAs
    local integer nAs
    local integer dAs
    local integer fAs
    local integer RAs
    local integer TAs
    local integer YAs
    local integer GAs
    local integer gAs
    local integer hAs
    local integer FAs
    local trigger kAs
    local trigger jAs
    local trigger xAs
    local trigger vAs
    local trigger mAs
    local trigger QAs
    local trigger WAs
    local trigger EAs
    local trigger ZAs
    local trigger UAs
    local trigger IAs
    local integer PAs
    local rect AAs
    local integer DAs
    local integer HAs
    set DSw[ASw] = HPs
    set ASw = ASw + 1
    set SD = jts("when calling new_HashMap in PVP, line 15")
    set cD = jts("when calling new_HashMap in PVP, line 16")
    set JPs = XQt("when calling new_LinkedList in PVP, line 18")
    call vwt(JPs, Ici(Rect(- 6016., - 64., - 1664., 2208.)), "when calling add in PVP, line 19")
    set KPs = JPs
    call vwt(KPs, Ici(Rect(2048., - 13824., 3616., - 12224.)), "when calling add in PVP, line 20")
    set LPs = KPs
    call vwt(LPs, Ici(AA), "when calling add in PVP, line 21")
    set XPs = LPs
    call vwt(XPs, Ici(fK), "when calling add in PVP, line 22")
    set CPs = XPs
    call vwt(CPs, Ici(Rect(2368., - 1248., 3232., - 224.)), "when calling add in PVP, line 23")
    set VPs = CPs
    call vwt(VPs, Ici(Rect(2592., - 11776., 3680., - 10912.)), "when calling add in PVP, line 24")
    set BPs = VPs
    call vwt(BPs, Ici(Rect(1088., - 512., 2368., 608.)), "when calling add in PVP, line 25")
    set NPs = BPs
    call vwt(NPs, Ici(Rect(- 6080., 2528., - 5120., 3616.)), "when calling add in PVP, line 26")
    set MPs = NPs
    call vwt(MPs, Ici(Rect(- 10432., - 8672., - 9696., - 7808.)), "when calling add in PVP, line 27")
    set wAs = MPs
    call vwt(wAs, Ici(Rect(960.0, - 6144.0, 1792.0, - 5728.0)), "when calling add in PVP, line 28")
    set uAs = wAs
    call vwt(uAs, Ici(Rect(8512.0, - 3136.0, 9440.0, - 2560.0)), "when calling add in PVP, line 29")
    set rAs = uAs
    call vwt(rAs, Ici(Rect(7232.0, - 7360.0, 7968.0, - 6560.0)), "when calling add in PVP, line 30")
    set sAs = rAs
    call vwt(sAs, Ici(Rect(3680.0, 1184.0, 4032.0, 1728.0)), "when calling add in PVP, line 31")
    set tAs = sAs
    call vwt(tAs, Ici(Rect(3360.0, - 1824.0, 4000.0, - 1344.0)), "when calling add in PVP, line 32")
    set iAs = tAs
    call vwt(iAs, Ici(Rect(- 4096.0, - 992.0, - 3424.0, - 288.0)), "when calling add in PVP, line 33")
    set SAs = iAs
    call vwt(SAs, Ici(Rect(- 6784.0, - 2080.0, - 6080.0, - 1312.0)), "when calling add in PVP, line 34")
    set cAs = SAs
    call vwt(cAs, Ici(Rect(- 8160.0, 448.0, - 7264.0, 1888.0)), "when calling add in PVP, line 35")
    set oAs = cAs
    call vwt(oAs, Ici(Rect(- 6720.0, 768.0, - 6176.0, 1856.0)), "when calling add in PVP, line 36")
    set OAs = oAs
    call vwt(OAs, Ici(Rect(- 5376.0, 2976.0, - 3168.0, 4576.0)), "when calling add in PVP, line 37")
    set lAs = OAs
    call vwt(lAs, Ici(Rect(- 4960.0, 1088.0, - 4448.0, 1568.0)), "when calling add in PVP, line 38")
    set bAs = lAs
    call vwt(bAs, Ici(Rect(- 7488.0, 3936.0, - 7072.0, 4320.0)), "when calling add in PVP, line 39")
    set yAs = bAs
    call vwt(yAs, Ici(Rect(11392.0, 5472.0, 13568.0, 6752.0)), "when calling add in PVP, line 40")
    set pAs = yAs
    call vwt(pAs, Ici(Rect(12224.0, 8448.0, 12960.0, 9056.0)), "when calling add in PVP, line 41")
    set eAs = pAs
    call vwt(eAs, Ici(Rect(9344.0, 8192.0, 10880.0, 9312.0)), "when calling add in PVP, line 42")
    set qAs = eAs
    call vwt(qAs, Ici(Rect(2848.0, 12128.0, 3648.0, 13088.0)), "when calling add in PVP, line 43")
    set aAs = qAs
    call vwt(aAs, Ici(Rect(2304.0, 11712.0, 2976.0, 12128.0)), "when calling add in PVP, line 44")
    set nAs = aAs
    call vwt(nAs, Ici(Rect(- 7968.0, 12896.0, - 6688.0, 13344.0)), "when calling add in PVP, line 45")
    set dAs = nAs
    call vwt(dAs, Ici(Rect(- 4480.0, 12576.0, - 3232.0, 13248.0)), "when calling add in PVP, line 46")
    set fAs = dAs
    call vwt(fAs, Ici(Rect(- 10880.0, 9920.0, - 10240.0, 10464.0)), "when calling add in PVP, line 47")
    set RAs = fAs
    call vwt(RAs, Ici(Rect(- 9504.0, 11296.0, - 9056.0, 11840.0)), "when calling add in PVP, line 48")
    set TAs = RAs
    call vwt(TAs, Ici(Rect(- 4064.0, 6080.0, - 3424.0, 6560.0)), "when calling add in PVP, line 49")
    set YAs = TAs
    call vwt(YAs, Ici(Rect(- 704.0, - 13344.0, - 192.0, - 12896.0)), "when calling add in PVP, line 50")
    set GAs = YAs
    call vwt(GAs, Ici(Rect(11328.0, 10752.0, 13664.0, 13344.0)), "when calling add in PVP, line 51")
    set gAs = GAs
    call vwt(gAs, Ici(Rect(5280., 10208., 5504., 10400.)), "when calling add in PVP, line 52")
    set hAs = gAs
    call vwt(hAs, Ici(Rect(4832., 8512., 5920., 9760.)), "when calling add in PVP, line 53")
    set FAs = hAs
    call vwt(FAs, Ici(FK), "when calling add in PVP, line 54")
    set oD = FAs
    set o = OD
    set kAs = CreateTrigger()
    call dUs(kAs, Condition(aWw))
    set jAs = kAs
    call B2S(jAs, nWw)
    set UY = jAs
    set vAs = CreateTrigger()
    call dUs(vAs, Condition(dWw))
    set mAs = vAs
    call B2S(mAs, fWw)
    set xAs = mAs
    set QAs = CreateTrigger()
    call dUs(QAs, Condition(RWw))
    set WAs = QAs
    call B2S(WAs, TWw)
    set IY = WAs
    set EAs = CreateTrigger()
    call dUs(EAs, Condition(YWw))
    set ZAs = EAs
    call B2S(ZAs, GWw)
    set PY = ZAs
    set IAs = CreateTrigger()
    call B2S(IAs, gWw)
    set UAs = IAs
    set PAs = c5r(oD, "when calling iterator in PVP, line 332")
    loop
        exitwhen not Tji(PAs)
        set AAs = Snu(LXi(PAs), "when calling rectFromIndex in PVP, line 332")
        call QYr(UAs, K2S(AAs), null)
    endloop
    call vms(PAs, "when calling close in PVP, line 332")
    set DAs = 0
    set HAs = Lh
    loop
        exitwhen DAs > HAs
        call Ebs(UY, aD[DAs], "-pvp ", false)
        call Ebs(xAs, aD[DAs], "-yes", true)
        call Ebs(IY, aD[DAs], "-cancel", true)
        call Ebs(PY, aD[DAs], "-no", true)
        set DAs = DAs + 1
    endloop
    set ASw = ASw - 1
    set kAs = null
    set jAs = null
    set xAs = null
    set vAs = null
    set mAs = null
    set QAs = null
    set WAs = null
    set EAs = null
    set ZAs = null
    set UAs = null
    set IAs = null
    set AAs = null
    return true
endfunction
function Kir takes nothing returns boolean
    set ASw = 0
    return JAs("via function reference PVP, line 1")
endfunction
function Kjt takes nothing returns nothing
    call SetUnitLifePercentBJ(GetEnumUnit(), 100.)
endfunction
function xMs takes string jMs returns boolean
    set DSw[ASw] = jMs
    set ASw = ASw + 1
    set bH = 2.
    set yH = 40
    set pH = 70
    set eH = 5.
    set qH = 25000.
    set aH = XQt("when calling new_LinkedList in Rh_Effect, line 20")
    set hf = CreateTrigger()
    call TriggerRegisterAnyUnitEventBJ(hf, EVENT_PLAYER_UNIT_SPELL_EFFECT)
    call TriggerAddCondition(hf, Condition(SEw))
    call TriggerAddAction(hf, cEw)
    set ASw = ASw - 1
    return true
endfunction
function Kkr takes nothing returns boolean
    set ASw = 0
    return xMs("via function reference Rh_Effect, line 1")
endfunction
function Kks takes nothing returns nothing
    call ForceAddPlayer(Nr, GetOwningPlayer(GetTriggerUnit()))
    call ForceAddPlayer(Cr, GetOwningPlayer(GetTriggerUnit()))
    call DisplayTextToForce(MwS(GetOwningPlayer(GetTriggerUnit())), "|cffffcc00Jim the Assassin|r : |cff87ceebWho dares to disturb my training? Ah, you're here for a letter of recommendation, right? It just so happens I have a task for you. There is a...certain monster that needs to be killed. His name is Stitches; an abomination spawned of a dark necromancer. Kill him and bring me his dagger. It should not be a problem for you if you wish to enter the Assassin's Guild.")
    call QuestSetDescription(Lr[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))], "I need to kill Stitches and bring Stitches' Dagger to Jim to gain a letter of recommendation.")
endfunction
function OFu takes nothing returns boolean
    return GetUnitTypeId(GetDyingUnit()) == 1848652336
endfunction
function S9t takes nothing returns boolean
    return GetUnitTypeId(GetDyingUnit()) == 1848652121
endfunction
function rBw takes nothing returns boolean
    return GetUnitTypeId(GetDyingUnit()) == 1429221430
endfunction
function Kqi takes nothing returns nothing
    if OFu() then
        call DisplayTimedTextToForce(Rc[$00000006], 5., "|cffffcc00You are now transferred to the next level.|r")
        call PolledWait(c)
        set vo = GetRectCenter(Py)
        call ForGroupBJ(fc[$00000006], Elw)
        call ForForce(Rc[$00000006], Zlw)
        call RemoveLocation(vo)
    endif
    if S9t() then
        call DisplayTimedTextToForce(Rc[$00000006], 5., "|cffffcc00You are now transferred to the next level.|r")
        call PolledWait(c)
        set vo = GetRectCenter(Hy)
        call ForGroupBJ(fc[$00000006], Ulw)
        call ForForce(Rc[$00000006], Ilw)
        call RemoveLocation(vo)
    endif
    if rBw() then
        set Ni = 6
        set Mi = 8
        call ForForce(Rc[$00000006], flw)
        call DisplayTimedTextToForce(Rc[$00000006], 10., "|cffffcc00You have completed the dungeon!|r Type -|c00ff0000d|r|c00ff1500o|r|c00ff3000n|r|c00ff4500e|r to exit the dungeon after looting your reward.")
        call DisplayTimedTextToForce(Rc[$00000006], 10., "|cffffcc00Type|r |c00ff0000-s2s X|r|cffffcc00 to send an item to your stash. (1-6)|r")
        call PolledWait(S)
        set pr[$00000001] = 1227895372
        set pr[$00000002] = 1227895373
        set pr[$00000003] = 1227895374
        set pr[$00000004] = 1227895600
        set pr[$00000005] = 1227895380
        set pr[$00000006] = 1227895382
        set pr[$00000007] = 1227895376
        set pr[$00000008] = 1227895381
        set Ni = 6
        set Mi = 8
        call ForForce(Rc[$00000006], Plw)
        call ForGroupBJ(fc[$00000006], Alw)
        call TriggerExecute(cw)
        call GroupClear(fc[$00000006])
        call ForceClear(Rc[$00000006])
        call DisableTrigger(GetTriggeringTrigger())
    endif
endfunction
function Kyr takes nothing returns boolean
    return IsUnitType(GetTriggerUnit(), UNIT_TYPE_HERO) != false
endfunction
function Kys takes nothing returns boolean
    return IsPlayerInForce(GetTriggerPlayer(), lt) and CountUnitsInGroup(SJw(bj_mapInitialPlayableArea, GetTriggerPlayer())) >= 1 and IsPlayerInForce(GetTriggerPlayer(), At) == false
endfunction
function L2t takes nothing returns nothing
    call ForceAddPlayer(rt, GetOwningPlayer(GetTriggerUnit()))
    call DisplayTextToForce(MwS(GetOwningPlayer(GetTriggerUnit())), "|cffffcc00Delia|r : |cff87ceebWho are you? You wish to be a Monster Hunter? Well, I might teach you a thing or two, but you must prove to me your worth. Enter the Rite of Passage and kill at least 50 monsters there and return to me.")
    call PlaySoundBJ(Se)
    call T_i(GetOwningPlayer(GetTriggerUnit()), $00000000, "4th Job Advancement Quest", "I have to kill 50 monsters in the Rite of Passage.", "ReplaceableTextures\\PassiveButtons\\PASBTNGenericSpellImmunity.blp")
    set st[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))] = bj_lastCreatedQuest
    set kt[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))] = 0
endfunction
function L2w takes nothing returns boolean
    return true
endfunction
function L8S takes nothing returns nothing
    call RemoveUnit(GetKillingUnit())
    call DisplayTimedTextToForce(bj_FORCE_ALL_PLAYERS, 8., "|cffff0000A Flying Wish Fish has disappeared into the water after claiming an unfortunate victim...|r")
endfunction
function LAi takes nothing returns boolean
    return IsUnitType(GetFilterUnit(), UNIT_TYPE_HERO) == false
endfunction
function EOr takes nothing returns boolean
    return GetUnitTypeId(GetDyingUnit()) == 1848652105 or GetUnitTypeId(GetDyingUnit()) == 1848652106
endfunction
function LAt takes nothing returns boolean
    return EOr() and IsPlayerInForce(GetOwningPlayer(GetKillingUnit()), rt) and GetUnitTypeId(GetKillingUnit()) == 1211117893
endfunction
function LHt takes nothing returns nothing
    call SetHeroLevelBJ(GetTriggerUnit(), $00000001, false)
    call ReplaceUnitBJ(GetEnteringUnit(), $48303039, $00000002)
    set Fu[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))] = bj_lastReplacedUnit
    call SetHeroLevel(Fu[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))], $00000001, true)
    call UnitStripHeroLevel(Fu[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))], $00000001)
    call DisplayTimedTextToForce(MwS(GetOwningPlayer(GetTriggerUnit())), 5., "|cffff8c00Congratulations! You have advanced to the 1st Job!|r")
    call SetUnitPositionLoc(Fu[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))], GetRectCenter(kO))
    call PanCameraToTimedLocForPlayer(GetOwningPlayer(GetTriggerUnit()), GetRectCenter(kO), 0.)
    call TriggerExecute(MT)
    call SelectUnitForPlayerSingle(Fu[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))], GetOwningPlayer(GetTriggerUnit()))
    call PlaySoundBJ(se)
endfunction
function jVr takes nothing returns boolean
    return IsPlayerInForce(GetTriggerPlayer(), sO)
endfunction
function LKt takes nothing returns nothing
    if jVr() then
        set uO = GetTriggerPlayer()
        call TriggerExecute(oY)
        call ForceRemovePlayer(sO, GetTriggerPlayer())
    else
        call DisplayTimedTextToForce(MwS(GetTriggerPlayer()), 4., "|cff8A2BE2WORST")
        call ForceRemovePlayer(rO, GetTriggerPlayer())
    endif
    call PauseTimerBJ(true, tO[1 + GetPlayerId(GetTriggerPlayer())])
endfunction
function AGr takes string IGr returns integer
    local integer PGr
    set DSw[ASw] = IGr
    set ASw = ASw + 1
    if NX == 0 then
        if MX < 32768 then
            set MX = MX + 1
            set PGr = MX
            set wC[PGr] = 757
        else
            call tNr("Out of memory: Could not create CallbackSingle_doAfter_DungeonCmds.", "when calling error in DungeonCmds, line 890")
            set PGr = 0
        endif
    else
        set NX = NX - 1
        set PGr = BX[NX]
        set wC[PGr] = 757
    endif
    set ASw = ASw - 1
    return PGr
endfunction
function G7w takes string T7w returns integer
    local integer Y7w
    set DSw[ASw] = T7w
    set ASw = ASw + 1
    if PC == 0 then
        if AC < 32768 then
            set AC = AC + 1
            set Y7w = AC
            set DC[Y7w] = 676
        else
            call tNr("Out of memory: Could not create CallbackPeriodic_doPeriodically_DungeonCmds.", "when calling error in DungeonCmds, line 967")
            set Y7w = 0
        endif
    else
        set PC = PC - 1
        set Y7w = IC[PC]
        set DC[Y7w] = 676
    endif
    set ASw = ASw - 1
    return Y7w
endfunction
function Shi takes string KGi returns boolean
    local integer LGi
    local integer XGi
    local integer CGi
    local integer VGi
    local integer BGi
    local integer NGi
    local integer MGi
    local integer wgi
    local integer ugi
    local integer rgi
    local integer sgi
    local integer tgi
    local integer igi
    local integer Sgi
    local integer cgi
    local integer ogi
    local integer Ogi
    local integer lgi
    local integer bgi
    local integer ygi
    local integer pgi
    local integer egi
    local integer qgi
    local integer agi
    local integer ngi
    local integer dgi
    local integer fgi
    local integer Rgi
    local integer Tgi
    local integer Ygi
    local integer Ggi
    local integer ggi
    local integer hgi
    local integer Fgi
    local integer kgi
    local integer jgi
    local integer xgi
    local integer vgi
    local integer mgi
    local integer Qgi
    local integer Wgi
    local integer Egi
    local integer Zgi
    local integer Ugi
    local integer Igi
    local integer Pgi
    local integer Agi
    local integer Dgi
    local integer Hgi
    local integer Jgi
    local integer Kgi
    local integer Lgi
    local integer Xgi
    local integer Cgi
    local integer Vgi
    local integer Bgi
    local integer Ngi
    local integer Mgi
    local integer whi
    local integer uhi
    local integer rhi
    local integer shi
    local integer thi
    local integer ihi
    set DSw[ASw] = KGi
    set ASw = ASw + 1
    set Ox = Rect(- 13472., - 7872., - 11104., - 4032.)
    set lx = Rect(- 13600., - 11520., - 11296., - 7968.)
    set bx = 1
    set yx = 10000
    set px = XQt("when calling new_LinkedList in DungeonCmds, line 36")
    set ex = jts("when calling new_HashMap in DungeonCmds, line 37")
    set qx = XQt("when calling new_LinkedList in DungeonCmds, line 38")
    set ax = jts("when calling new_HashMap in DungeonCmds, line 40")
    set nx = 7
    set dx = 11
    set fx = 12
    set Rx = 13
    set Tx = 14
    set Yx = 0.
    set Gx = 0.
    set gx = 0.
    set hx = 0.
    set Fx = 0.
    set kx = xMr("when calling new_IterableMap in DungeonCmds, line 54")
    set LGi = XQt("when calling new_LinkedList in DungeonCmds, line 56")
    call vwt(LGi, l2s(Iji("U007", "when calling unObfuscate in DungeonCmds, line 57"), "when calling fromRawCode in DungeonCmds, line 57"), "when calling add in DungeonCmds, line 57")
    set XGi = LGi
    call vwt(XGi, l2s(Iji("U00C", "when calling unObfuscate in DungeonCmds, line 58"), "when calling fromRawCode in DungeonCmds, line 58"), "when calling add in DungeonCmds, line 58")
    set CGi = XGi
    call vwt(CGi, l2s(Iji("U00I", "when calling unObfuscate in DungeonCmds, line 59"), "when calling fromRawCode in DungeonCmds, line 59"), "when calling add in DungeonCmds, line 59")
    set VGi = CGi
    call vwt(VGi, l2s(Iji("U00R", "when calling unObfuscate in DungeonCmds, line 60"), "when calling fromRawCode in DungeonCmds, line 60"), "when calling add in DungeonCmds, line 60")
    set BGi = VGi
    call vwt(BGi, l2s(Iji("U00Q", "when calling unObfuscate in DungeonCmds, line 61"), "when calling fromRawCode in DungeonCmds, line 61"), "when calling add in DungeonCmds, line 61")
    set NGi = BGi
    call vwt(NGi, l2s(Iji("U00V", "when calling unObfuscate in DungeonCmds, line 62"), "when calling fromRawCode in DungeonCmds, line 62"), "when calling add in DungeonCmds, line 62")
    set jx = NGi
    set xx = false
    set vx = false
    set mx = jts("when calling new_HashMap in DungeonCmds, line 66")
    set Qx = 9
    set Wx = XQt("when calling new_LinkedList in DungeonCmds, line 69")
    set Ex = XQt("when calling new_LinkedList in DungeonCmds, line 70")
    set Zx = XQt("when calling new_LinkedList in DungeonCmds, line 72")
    set MGi = XQt("when calling new_LinkedList in DungeonCmds, line 74")
    call vwt(MGi, l2s(Iji("I02R", "when calling unObfuscate in DungeonCmds, line 75"), "when calling fromRawCode in DungeonCmds, line 75"), "when calling add in DungeonCmds, line 75")
    set wgi = MGi
    call vwt(wgi, l2s(Iji("I02W", "when calling unObfuscate in DungeonCmds, line 76"), "when calling fromRawCode in DungeonCmds, line 76"), "when calling add in DungeonCmds, line 76")
    set ugi = wgi
    call vwt(ugi, l2s(Iji("I02O", "when calling unObfuscate in DungeonCmds, line 77"), "when calling fromRawCode in DungeonCmds, line 77"), "when calling add in DungeonCmds, line 77")
    set rgi = ugi
    call vwt(rgi, l2s(Iji("I02Q", "when calling unObfuscate in DungeonCmds, line 78"), "when calling fromRawCode in DungeonCmds, line 78"), "when calling add in DungeonCmds, line 78")
    set sgi = rgi
    call vwt(sgi, l2s(Iji("I045", "when calling unObfuscate in DungeonCmds, line 79"), "when calling fromRawCode in DungeonCmds, line 79"), "when calling add in DungeonCmds, line 79")
    set tgi = sgi
    call vwt(tgi, l2s(Iji("I05J", "when calling unObfuscate in DungeonCmds, line 80"), "when calling fromRawCode in DungeonCmds, line 80"), "when calling add in DungeonCmds, line 80")
    set Ux = tgi
    set igi = XQt("when calling new_LinkedList in DungeonCmds, line 81")
    call vwt(igi, l2s(Iji("I042", "when calling unObfuscate in DungeonCmds, line 82"), "when calling fromRawCode in DungeonCmds, line 82"), "when calling add in DungeonCmds, line 82")
    set Sgi = igi
    call vwt(Sgi, l2s(Iji("I040", "when calling unObfuscate in DungeonCmds, line 83"), "when calling fromRawCode in DungeonCmds, line 83"), "when calling add in DungeonCmds, line 83")
    set cgi = Sgi
    call vwt(cgi, l2s(Iji("I044", "when calling unObfuscate in DungeonCmds, line 84"), "when calling fromRawCode in DungeonCmds, line 84"), "when calling add in DungeonCmds, line 84")
    set ogi = cgi
    call vwt(ogi, l2s(Iji("I041", "when calling unObfuscate in DungeonCmds, line 85"), "when calling fromRawCode in DungeonCmds, line 85"), "when calling add in DungeonCmds, line 85")
    set Ogi = ogi
    call vwt(Ogi, l2s(Iji("I04K", "when calling unObfuscate in DungeonCmds, line 86"), "when calling fromRawCode in DungeonCmds, line 86"), "when calling add in DungeonCmds, line 86")
    set lgi = Ogi
    call vwt(lgi, l2s(Iji("I02Y", "when calling unObfuscate in DungeonCmds, line 87"), "when calling fromRawCode in DungeonCmds, line 87"), "when calling add in DungeonCmds, line 87")
    set bgi = lgi
    call vwt(bgi, l2s(Iji("I05P", "when calling unObfuscate in DungeonCmds, line 88"), "when calling fromRawCode in DungeonCmds, line 88"), "when calling add in DungeonCmds, line 88")
    set Ix = bgi
    set Px = XQt("when calling new_LinkedList in DungeonCmds, line 89")
    set ygi = XQt("when calling new_LinkedList in DungeonCmds, line 92")
    call vwt(ygi, l2s(Iji("I02Z", "when calling unObfuscate in DungeonCmds, line 93"), "when calling fromRawCode in DungeonCmds, line 93"), "when calling add in DungeonCmds, line 93")
    set pgi = ygi
    call vwt(pgi, l2s(Iji("I05G", "when calling unObfuscate in DungeonCmds, line 94"), "when calling fromRawCode in DungeonCmds, line 94"), "when calling add in DungeonCmds, line 94")
    set egi = pgi
    call vwt(egi, l2s(Iji("I04N", "when calling unObfuscate in DungeonCmds, line 95"), "when calling fromRawCode in DungeonCmds, line 95"), "when calling add in DungeonCmds, line 95")
    set qgi = egi
    call vwt(qgi, l2s(Iji("I04O", "when calling unObfuscate in DungeonCmds, line 96"), "when calling fromRawCode in DungeonCmds, line 96"), "when calling add in DungeonCmds, line 96")
    set agi = qgi
    call vwt(agi, l2s(Iji("I04P", "when calling unObfuscate in DungeonCmds, line 97"), "when calling fromRawCode in DungeonCmds, line 97"), "when calling add in DungeonCmds, line 97")
    set ngi = agi
    call vwt(ngi, l2s(Iji("I047", "when calling unObfuscate in DungeonCmds, line 98"), "when calling fromRawCode in DungeonCmds, line 98"), "when calling add in DungeonCmds, line 98")
    set dgi = ngi
    call vwt(dgi, l2s(Iji("I046", "when calling unObfuscate in DungeonCmds, line 99"), "when calling fromRawCode in DungeonCmds, line 99"), "when calling add in DungeonCmds, line 99")
    set fgi = dgi
    call vwt(fgi, l2s(Iji("I05F", "when calling unObfuscate in DungeonCmds, line 100"), "when calling fromRawCode in DungeonCmds, line 100"), "when calling add in DungeonCmds, line 100")
    set Ax = fgi
    set Rgi = XQt("when calling new_LinkedList in DungeonCmds, line 101")
    call vwt(Rgi, l2s(Iji("I04L", "when calling unObfuscate in DungeonCmds, line 102"), "when calling fromRawCode in DungeonCmds, line 102"), "when calling add in DungeonCmds, line 102")
    set Tgi = Rgi
    call vwt(Tgi, l2s(Iji("I04J", "when calling unObfuscate in DungeonCmds, line 103"), "when calling fromRawCode in DungeonCmds, line 103"), "when calling add in DungeonCmds, line 103")
    set Ygi = Tgi
    call vwt(Ygi, l2s(Iji("I04M", "when calling unObfuscate in DungeonCmds, line 104"), "when calling fromRawCode in DungeonCmds, line 104"), "when calling add in DungeonCmds, line 104")
    set Ggi = Ygi
    call vwt(Ggi, l2s(Iji("I04H", "when calling unObfuscate in DungeonCmds, line 105"), "when calling fromRawCode in DungeonCmds, line 105"), "when calling add in DungeonCmds, line 105")
    set ggi = Ggi
    call vwt(ggi, l2s(Iji("I05K", "when calling unObfuscate in DungeonCmds, line 106"), "when calling fromRawCode in DungeonCmds, line 106"), "when calling add in DungeonCmds, line 106")
    set hgi = ggi
    call vwt(hgi, l2s(Iji("I05L", "when calling unObfuscate in DungeonCmds, line 107"), "when calling fromRawCode in DungeonCmds, line 107"), "when calling add in DungeonCmds, line 107")
    set Fgi = hgi
    call vwt(Fgi, l2s(Iji("I05I", "when calling unObfuscate in DungeonCmds, line 108"), "when calling fromRawCode in DungeonCmds, line 108"), "when calling add in DungeonCmds, line 108")
    set Dx = Fgi
    set kgi = XQt("when calling new_LinkedList in DungeonCmds, line 109")
    call vwt(kgi, l2s(Iji("I05H", "when calling unObfuscate in DungeonCmds, line 110"), "when calling fromRawCode in DungeonCmds, line 110"), "when calling add in DungeonCmds, line 110")
    set jgi = kgi
    call vwt(jgi, l2s(Iji("I05O", "when calling unObfuscate in DungeonCmds, line 111"), "when calling fromRawCode in DungeonCmds, line 111"), "when calling add in DungeonCmds, line 111")
    set Hx = jgi
    set xgi = XQt("when calling new_LinkedList in DungeonCmds, line 112")
    call vwt(xgi, l2s(Iji("I02Z", "when calling unObfuscate in DungeonCmds, line 113"), "when calling fromRawCode in DungeonCmds, line 113"), "when calling add in DungeonCmds, line 113")
    set vgi = xgi
    call vwt(vgi, l2s(Iji("I05G", "when calling unObfuscate in DungeonCmds, line 114"), "when calling fromRawCode in DungeonCmds, line 114"), "when calling add in DungeonCmds, line 114")
    set mgi = vgi
    call vwt(mgi, l2s(Iji("I04N", "when calling unObfuscate in DungeonCmds, line 115"), "when calling fromRawCode in DungeonCmds, line 115"), "when calling add in DungeonCmds, line 115")
    set Qgi = mgi
    call vwt(Qgi, l2s(Iji("I04O", "when calling unObfuscate in DungeonCmds, line 116"), "when calling fromRawCode in DungeonCmds, line 116"), "when calling add in DungeonCmds, line 116")
    set Wgi = Qgi
    call vwt(Wgi, l2s(Iji("I04P", "when calling unObfuscate in DungeonCmds, line 117"), "when calling fromRawCode in DungeonCmds, line 117"), "when calling add in DungeonCmds, line 117")
    set Egi = Wgi
    call vwt(Egi, l2s(Iji("I047", "when calling unObfuscate in DungeonCmds, line 118"), "when calling fromRawCode in DungeonCmds, line 118"), "when calling add in DungeonCmds, line 118")
    set Zgi = Egi
    call vwt(Zgi, l2s(Iji("I046", "when calling unObfuscate in DungeonCmds, line 119"), "when calling fromRawCode in DungeonCmds, line 119"), "when calling add in DungeonCmds, line 119")
    set Ugi = Zgi
    call vwt(Ugi, l2s(Iji("I05F", "when calling unObfuscate in DungeonCmds, line 120"), "when calling fromRawCode in DungeonCmds, line 120"), "when calling add in DungeonCmds, line 120")
    set Jx = Ugi
    set Kx = XQt("when calling new_LinkedList in DungeonCmds, line 122")
    set Igi = XQt("when calling new_LinkedList in DungeonCmds, line 123")
    call vwt(Igi, l2s(Iji("I02Z", "when calling unObfuscate in DungeonCmds, line 124"), "when calling fromRawCode in DungeonCmds, line 124"), "when calling add in DungeonCmds, line 124")
    set Pgi = Igi
    call vwt(Pgi, l2s(Iji("I05G", "when calling unObfuscate in DungeonCmds, line 125"), "when calling fromRawCode in DungeonCmds, line 125"), "when calling add in DungeonCmds, line 125")
    set Agi = Pgi
    call vwt(Agi, l2s(Iji("I04N", "when calling unObfuscate in DungeonCmds, line 126"), "when calling fromRawCode in DungeonCmds, line 126"), "when calling add in DungeonCmds, line 126")
    set Dgi = Agi
    call vwt(Dgi, l2s(Iji("I04O", "when calling unObfuscate in DungeonCmds, line 127"), "when calling fromRawCode in DungeonCmds, line 127"), "when calling add in DungeonCmds, line 127")
    set Hgi = Dgi
    call vwt(Hgi, l2s(Iji("I04P", "when calling unObfuscate in DungeonCmds, line 128"), "when calling fromRawCode in DungeonCmds, line 128"), "when calling add in DungeonCmds, line 128")
    set Jgi = Hgi
    call vwt(Jgi, l2s(Iji("I047", "when calling unObfuscate in DungeonCmds, line 129"), "when calling fromRawCode in DungeonCmds, line 129"), "when calling add in DungeonCmds, line 129")
    set Kgi = Jgi
    call vwt(Kgi, l2s(Iji("I046", "when calling unObfuscate in DungeonCmds, line 130"), "when calling fromRawCode in DungeonCmds, line 130"), "when calling add in DungeonCmds, line 130")
    set Lgi = Kgi
    call vwt(Lgi, l2s(Iji("I05F", "when calling unObfuscate in DungeonCmds, line 131"), "when calling fromRawCode in DungeonCmds, line 131"), "when calling add in DungeonCmds, line 131")
    set Lx = Lgi
    set Xx = XQt("when calling new_LinkedList in DungeonCmds, line 134")
    set Xgi = XQt("when calling new_LinkedList in DungeonCmds, line 136")
    call vwt(Xgi, l2s(Iji("I02Z", "when calling unObfuscate in DungeonCmds, line 137"), "when calling fromRawCode in DungeonCmds, line 137"), "when calling add in DungeonCmds, line 137")
    set Cgi = Xgi
    call vwt(Cgi, l2s(Iji("I05G", "when calling unObfuscate in DungeonCmds, line 138"), "when calling fromRawCode in DungeonCmds, line 138"), "when calling add in DungeonCmds, line 138")
    set Vgi = Cgi
    call vwt(Vgi, l2s(Iji("I04N", "when calling unObfuscate in DungeonCmds, line 139"), "when calling fromRawCode in DungeonCmds, line 139"), "when calling add in DungeonCmds, line 139")
    set Bgi = Vgi
    call vwt(Bgi, l2s(Iji("I04O", "when calling unObfuscate in DungeonCmds, line 140"), "when calling fromRawCode in DungeonCmds, line 140"), "when calling add in DungeonCmds, line 140")
    set Ngi = Bgi
    call vwt(Ngi, l2s(Iji("I04P", "when calling unObfuscate in DungeonCmds, line 141"), "when calling fromRawCode in DungeonCmds, line 141"), "when calling add in DungeonCmds, line 141")
    set Mgi = Ngi
    call vwt(Mgi, l2s(Iji("I047", "when calling unObfuscate in DungeonCmds, line 142"), "when calling fromRawCode in DungeonCmds, line 142"), "when calling add in DungeonCmds, line 142")
    set whi = Mgi
    call vwt(whi, l2s(Iji("I046", "when calling unObfuscate in DungeonCmds, line 143"), "when calling fromRawCode in DungeonCmds, line 143"), "when calling add in DungeonCmds, line 143")
    set uhi = whi
    call vwt(uhi, l2s(Iji("I05H", "when calling unObfuscate in DungeonCmds, line 144"), "when calling fromRawCode in DungeonCmds, line 144"), "when calling add in DungeonCmds, line 144")
    set rhi = uhi
    call vwt(rhi, l2s(Iji("I05O", "when calling unObfuscate in DungeonCmds, line 145"), "when calling fromRawCode in DungeonCmds, line 145"), "when calling add in DungeonCmds, line 145")
    set shi = rhi
    call vwt(shi, l2s(Iji("I05F", "when calling unObfuscate in DungeonCmds, line 146"), "when calling fromRawCode in DungeonCmds, line 146"), "when calling add in DungeonCmds, line 146")
    set Cx = shi
    set Vx[$00000000] = K2S(rp)
    set Vx[$00000001] = K2S(rl)
    set Vx[$00000002] = K2S(hp)
    set Vx[$00000003] = K2S(Ny)
    set Vx[$00000004] = K2S(Ap)
    set Vx[$00000005] = K2S(Cy)
    set Vx[$00000006] = K2S(Qb)
    set Vx[$00000007] = K2S(Vy)
    set Vx[$00000008] = K2S(mb)
    set Vx[$00000009] = K2S(fy)
    set Bx[$00000000] = rp
    set Bx[$00000001] = rl
    set Bx[$00000002] = hp
    set Bx[$00000003] = Ny
    set Bx[$00000004] = Ap
    set Bx[$00000005] = Cy
    set Bx[$00000006] = Qb
    set Bx[$00000007] = Vy
    set Bx[$00000008] = mb
    set Bx[$00000009] = fy
    set Nx = jts("when calling new_HashMap in DungeonCmds, line 153")
    set Mx = 0.12
    set wv = 0.04
    set uv = 0.04
    set rv = 0.04
    set thi = AGr("when calling alloc_CallbackSingle_doAfter_DungeonCmds in DungeonCmds, line 890")
    call RUs(thi)
    call Ybr(1., thi, "when calling doAfter in DungeonCmds, line 890")
    set ihi = G7w("when calling alloc_CallbackPeriodic_doPeriodically_DungeonCmds in DungeonCmds, line 967")
    call kVu(ihi)
    call wcs(1., ihi, "when calling doPeriodically in DungeonCmds, line 967")
    set ASw = ASw - 1
    return true
endfunction
function LMi takes nothing returns boolean
    set ASw = 0
    return Shi("via function reference DungeonCmds, line 1")
endfunction
function LNu takes nothing returns nothing
    call RemoveItem(GetManipulatedItem())
    call ForceAddPlayer(IS[$00000007], GetOwningPlayer(GetTriggerUnit()))
    call DisplayTextToForce(MwS(GetOwningPlayer(GetTriggerUnit())), "|cffffcc00Skypper|r : Blasted Animal! I hope you string him up good! That animal scared away so many of my profits I would pay a bundle just to see him dead! But I have a better idea - after you cut him into little bits of minced meat I want you to take a decent amount of his meat AND his paw and bring them back to me, so I can at least put some of his parts to good use, heh.")
    call T_i(GetOwningPlayer(GetTriggerUnit()), $00000000, "A Dish Best Served Cold", "Kill Frostfang and bring back some of his meat and his paw as proof of the deed.", "ReplaceableTextures\\CommandButtons\\BTNFrostBear.blp")
    set bs[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))] = bj_lastCreatedQuest
endfunction
function u5r takes nothing returns boolean
    return qs == 1
endfunction
function LNw takes nothing returns nothing
    if u5r() then
        call PlaySoundBJ(ne)
        set qs = 2
        call DisplayTimedTextToForce(Rc[$00000005], 5., "|cffffcc00You hear a click sound and know you have stepped on the correct pedal.|r")
    else
        set qs = 0
        call DisplayTimedTextToForce(Rc[$00000005], 5., "|cffff0000You hear a ringing sound. All pedals were reset!|r")
    endif
endfunction
function LSr takes nothing returns nothing
    call ForceAddPlayer(dc[$00000003], GetOwningPlayer(GetTriggerUnit()))
    call DisplayTimedTextToForce(MwS(GetOwningPlayer(GetOrderedUnit())), 5., "|cffffcc00Harold|r : Let me think...")
    call TriggerSleepAction(5.)
    call DisplayTimedTextToForce(MwS(GetOwningPlayer(GetOrderedUnit())), 30., "|cffffcc00Harold|r : Aye. I remember when I was younger, I was full of strength and I could work as a coolie or a deliveryman. I've done jobs that require heavy lifting. However, as I aged, my strength wasn't what it used to be. Wizard Hannah suggested for me to retire but I refused. I've got to work for a living you know! She then gave me enough money to support myself for a long time and finally, I agreed. She's a great person. Anyway, ever since I retired, they never hired a new deliveryman, but I remembered on the day I left Wizard's Tower, I heard noises behind the tower. I assumed the kids were just playing nearby so I simply ignored it.")
    call QuestSetDescription(JS[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))], "Ahh, this is starting to make sense. I reckon it has something to do with monsters appearing near the Wizard's Tower. I'd better go get rid of these monsters. Who knows what would happen next?")
    call DisplayTimedTextToForce(MwS(GetOwningPlayer(GetOrderedUnit())), 5., "|cffff0000Quest Log has been updated. Please check Quests[F9] for more details.|r")
endfunction
function LTS takes nothing returns nothing
    local unit JTS = GetEnteringUnit()
    local integer KTS = hgr(eDs(JTS))
    set qP[KTS] = qP[KTS] + 1
    set JTS = null
endfunction
function epr takes item ppr returns real
    return GetItemY(ppr)
endfunction
function oXs takes item cXs returns real
    return GetItemX(cXs)
endfunction
function nLw takes item aLw returns real
    set cow = oXs(aLw)
    set oow = epr(aLw)
    return cow
endfunction
function Yxs takes string bxs returns nothing
    local item yxs
    local item pxs
    local real exs
    local real qxs
    local integer axs
    local integer nxs
    local integer dxs
    local integer fxs
    local real Rxs
    local real Txs
    set DSw[ASw] = bxs
    set ASw = ASw + 1
    if GetOrderTargetItem() != null then
        set pxs = GetOrderTargetItem()
    else
        set pxs = GetSoldItem()
    endif
    set yxs = pxs
    if yxs != null then
        set axs = QI
        set nxs = Xdu(yxs)
        set Rxs = nLw(GetOrderTargetItem())
        set exs = Rxs
        call GVw(axs, nxs, B5r(exs), "when calling put in Items_Pickup_Drop, line 862")
        set dxs = WI
        set fxs = Xdu(yxs)
        call nLw(GetOrderTargetItem())
        set Txs = oow
        set qxs = Txs
        call GVw(dxs, fxs, B5r(qxs), "when calling put in Items_Pickup_Drop, line 863")
    endif
    set ASw = ASw - 1
    set yxs = null
    set pxs = null
endfunction
function LVw takes nothing returns nothing
    set ASw = 0
    call Yxs("via function reference Items_Pickup_Drop, line 859")
endfunction
function xot takes string got returns nothing
    local player hot
    local integer Fot
    local integer kot
    local integer jot
    set DSw[ASw] = got
    set ASw = ASw + 1
    set hot = GetEnumPlayer()
    call DestroyFogModifier(Ac[1 + GetPlayerId(hot)])
    call ResetToGameCameraForPlayer(hot, 0.)
    set Fot = hgr(hot)
    if GpS(gQ, Fot, "when calling has in Imp3DragonFortress, line 1075") then
        set kot = xus(hgr(hot), "when calling getCustomPlayer in Imp3DragonFortress, line 1076")
        if kot != 0 then
            set jot = xMi(kot, "when calling getCHero in Imp3DragonFortress, line 1079")
            if jot != 0 and hqs(jot, "when calling getHero in Imp3DragonFortress, line 1080") != null then
    call krS(kot, "when calling cameraCheckLock in Imp3DragonFortress, line 1081")
            endif
        endif
    endif
    call GZs(xus(hgr(hot), "when calling getCustomPlayer in Imp3DragonFortress, line 1083"), false, "when calling setCommandsDisabled in Imp3DragonFortress, line 1083")
    set ASw = ASw - 1
    set hot = null
endfunction
function LXs takes nothing returns nothing
    set ASw = 0
    call xot("via function reference Imp3DragonFortress, line 1068")
endfunction
function LYi takes nothing returns boolean
    return GetIssuedOrderId() == 851983
endfunction
function Ldr takes nothing returns nothing
    call ForceRemovePlayer(rt, GetOwningPlayer(GetTriggerUnit()))
    call ForceRemovePlayer(Ft, GetOwningPlayer(GetTriggerUnit()))
    call DisplayTextToForce(MwS(GetOwningPlayer(GetTriggerUnit())), "|cffffcc00Luna|r : |cff87ceebAhh yes...you have proven yourself to be far better than I expected. Very well. I shall teach you the finest bow arts you can possibly learn.")
    call DestroyQuest(st[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))])
    set st[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))] = null
    call SetHeroLevelBJ(GetTriggerUnit(), $00000001, false)
    call ReplaceUnitBJ(GetTriggerUnit(), $48303245, $00000002)
    call SelectUnitForPlayerSingle(bj_lastReplacedUnit, GetOwningPlayer(GetTriggerUnit()))
    call SetHeroLevel(bj_lastReplacedUnit, $00000001, true)
    call UnitStripHeroLevel(bj_lastReplacedUnit, $00000001)
endfunction
function Liu takes nothing returns boolean
    return IsUnitType(GetTriggerUnit(), UNIT_TYPE_HERO) != false
endfunction
function LnS takes nothing returns nothing
    call RemoveItem(GetManipulatedItem())
    call ForceAddPlayer(IS[$0000000C], GetOwningPlayer(GetTriggerUnit()))
    call DisplayTextToForce(MwS(GetOwningPlayer(GetTriggerUnit())), "|cffffcc00Squeaky|r : Hi there young traveller! I'm sure during your travels, you must have heard of this heavenly dish called Sludge Booze? Well, I research on these kinds of heavenly dishes and I made some of them myself. If you're kind enough to help me collect 60 sludge juice from Sewer Monsters, I will gladly reward you!")
    call T_i(GetOwningPlayer(GetTriggerUnit()), $00000000, "Sludge Fudge", "A drink made out of sludge juice? Yuck! Disgusting idea; I wouldn't even dare to try it. Well... let's get this over and done with.", "ReplaceableTextures\\CommandButtons\\BTNSludgeCreature.blp")
    set xS[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))] = bj_lastCreatedQuest
endfunction
function NIu takes string VIu returns integer
    local integer BIu
    set DSw[ASw] = VIu
    set ASw = ASw + 1
    if NX == 0 then
        if MX < 32768 then
            set MX = MX + 1
            set BIu = MX
            set wC[BIu] = 941
        else
            call tNr("Out of memory: Could not create CallbackSingle_doAfter_Repick.", "when calling error in Repick, line 358")
            set BIu = 0
        endif
    else
        set NX = NX - 1
        set BIu = BX[NX]
        set wC[BIu] = 941
    endif
    set ASw = ASw - 1
    return BIu
endfunction
function Uir takes string Qir returns boolean
    local integer Wir
    local integer Eir
    local integer Zir
    set DSw[ASw] = Qir
    set ASw = ASw + 1
    set sH = jts("when calling new_HashMap in Repick, line 22")
    call jts("when calling new_HashMap in Repick, line 23")
    set tH = XQt("when calling new_LinkedList in Repick, line 24")
    set Wir = 0
    set Eir = Lh
    loop
        exitwhen Wir > Eir
        set hu[Wir] = false
        set Wir = Wir + 1
    endloop
    set Zir = NIu("when calling alloc_CallbackSingle_doAfter_Repick in Repick, line 358")
    call RUs(Zir)
    call Ybr(1., Zir, "when calling doAfter in Repick, line 358")
    set ASw = ASw - 1
    return true
endfunction
function LoS takes nothing returns boolean
    set ASw = 0
    return Uir("via function reference Repick, line 1")
endfunction
function Lqu takes nothing returns boolean
    return GetUnitTypeId(GetOrderTargetUnit()) == mS and IsUnitInGroup(GetTriggerUnit(), kpu(300., GetUnitLoc(GetOrderTargetUnit()))) and IsPlayerInForce(GetOwningPlayer(GetTriggerUnit()), IS[$0000000E]) and DS[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))] >= 50
endfunction
function CAs takes unit KAs, string LAs returns boolean
    local boolean XAs
    set DSw[ASw] = LAs
    set ASw = ASw + 1
    set XAs = V5S(KAs, C_r(DG, GetRandomInt($00000000, wds(DG, "when calling size in AC_Abilities, line 21") - 1), "when calling get in AC_Abilities, line 21"))
    set ASw = ASw - 1
    return XAs
endfunction
function YIu takes string TIu returns nothing
    set DSw[ASw] = TIu
    set ASw = ASw + 1
    call CAs(GetEnumUnit(), "when calling ac_addRandomDebuff1 in JobAdvancementQuestHandler, line 1067")
    set ASw = ASw - 1
endfunction
function Lsi takes nothing returns nothing
    set ASw = 0
    call YIu("via function reference JobAdvancementQuestHandler, line 1066")
endfunction
function Wpi takes nothing returns boolean
    return UnitHasItemOfTypeBJ(GetTriggerUnit(), $49303138)
endfunction
function cOr takes nothing returns boolean
    return UnitHasItemOfTypeBJ(GetTriggerUnit(), $49303133)
endfunction
function Lvi takes nothing returns nothing
    if cOr() then
        call ForceRemovePlayer(Kr, GetOwningPlayer(GetTriggerUnit()))
        call ForceRemovePlayer(Cr, GetOwningPlayer(GetTriggerUnit()))
        call ForceRemovePlayer(Rs, GetOwningPlayer(GetTriggerUnit()))
        call ForceRemovePlayer(Vr, GetOwningPlayer(GetTriggerUnit()))
        call PlaySoundBJ(ue)
        call SetHeroLevelBJ(GetTriggerUnit(), $00000001, false)
        call RemoveItem(GetItemOfTypeFromUnitBJ(GetTriggerUnit(), $49303133))
        call DisplayTextToForce(MwS(GetOwningPlayer(GetTriggerUnit())), "|cffffcc00Class Trainer|r : |cff87ceebI am astonished. Shaman Maz'tha has always been strict whenever handing out recommendations, but you certainly have done it. Well done, Shaman!")
        call ReplaceUnitBJ(GetTriggerUnit(), $48303139, $00000002)
        call SelectUnitForPlayerSingle(bj_lastReplacedUnit, GetOwningPlayer(GetTriggerUnit()))
        call DestroyQuest(Lr[1 + GetPlayerId(GetOwningPlayer(bj_lastReplacedUnit))])
        call SetHeroLevel(bj_lastReplacedUnit, $00000001, true)
        call UnitStripHeroLevel(bj_lastReplacedUnit, $00000001)
    endif
    if Wpi() then
        call ForceRemovePlayer(Kr, GetOwningPlayer(GetTriggerUnit()))
        call ForceRemovePlayer(Cr, GetOwningPlayer(GetTriggerUnit()))
        call ForceRemovePlayer(Ts, GetOwningPlayer(GetTriggerUnit()))
        call ForceRemovePlayer(Vr, GetOwningPlayer(GetTriggerUnit()))
        call PlaySoundBJ(ue)
        call SetHeroLevelBJ(GetTriggerUnit(), $00000001, false)
        call RemoveItem(GetItemOfTypeFromUnitBJ(GetTriggerUnit(), $49303138))
        call DisplayTextToForce(MwS(GetOwningPlayer(GetTriggerUnit())), "|cffffcc00Class Trainer|r : |cff87ceebI am impressed. Very well, you shall be a Shapeshifter from now onwards.")
        call ReplaceUnitBJ(GetTriggerUnit(), $48303138, $00000002)
        call SelectUnitForPlayerSingle(bj_lastReplacedUnit, GetOwningPlayer(GetTriggerUnit()))
        call DestroyQuest(Lr[1 + GetPlayerId(GetOwningPlayer(bj_lastReplacedUnit))])
        call SetHeroLevel(bj_lastReplacedUnit, $00000001, true)
        call UnitStripHeroLevel(bj_lastReplacedUnit, $00000001)
    endif
endfunction
function Lys takes nothing returns nothing
    set pS[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))] = GetTriggerUnit()
    call SetPlayerStateBJ(GetOwningPlayer(pS[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))]), PLAYER_STATE_RESOURCE_FOOD_USED, $00000000)
    set qS[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))] = GetUnitLoc(GetTriggerUnit())
    set aS[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))] = GetSpellTargetLoc()
    set YS[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))] = UFS(700., GetSpellTargetLoc(), Condition(myw))
    call ForGroupBJ(YS[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))], Qyw)
    call PauseUnit(pS[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))], true)
    call SetUnitInvulnerable(pS[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))], true)
    set nS[$00000001] = Shu(qS[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))], 600., 90.)
    set nS[$00000002] = Shu(qS[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))], 600., 160.)
    set nS[$00000003] = Shu(qS[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))], 600., 235.)
    set nS[$00000004] = Shu(qS[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))], 600., 305.)
    set nS[$00000005] = Shu(qS[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))], 600., 20.)
    call AddLightningLoc("DRAM", nS[$00000001], nS[$00000003])
    set dS[$00000001] = bj_lastCreatedLightning
    call AddLightningLoc("DRAM", nS[$00000005], nS[$00000003])
    set dS[$00000002] = bj_lastCreatedLightning
    call AddLightningLoc("DRAM", nS[$00000005], nS[$00000002])
    set dS[$00000003] = bj_lastCreatedLightning
    call AddLightningLoc("DRAM", nS[$00000002], nS[$00000004])
    set dS[$00000004] = bj_lastCreatedLightning
    call AddLightningLoc("DRAM", nS[$00000004], nS[$00000001])
    set dS[$00000005] = bj_lastCreatedLightning
    call AddLightningLoc("DRAM", nS[$00000001], nS[$00000003])
    set dS[$00000006] = bj_lastCreatedLightning
    call AddLightningLoc("DRAM", nS[$00000005], nS[$00000003])
    set dS[$00000007] = bj_lastCreatedLightning
    call AddLightningLoc("DRAM", nS[$00000005], nS[$00000002])
    set dS[$00000008] = bj_lastCreatedLightning
    call AddLightningLoc("DRAM", nS[$00000002], nS[$00000004])
    set dS[$00000009] = bj_lastCreatedLightning
    call AddLightningLoc("DRAM", nS[$00000004], nS[$00000001])
    set dS[$0000000A] = bj_lastCreatedLightning
    call n6t(.5)
    call SetUnitAnimation(pS[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))], "spell")
    call SetUnitTimeScalePercent(pS[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))], 20.)
    call n6t(.1)
    call AddSpecialEffectLocBJ(qS[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))], "Abilities\\Spells\\Orc\\WarStomp\\WarStompCaster.mdl")
    call DestroyEffect(bj_lastCreatedEffect)
    call CreateTextTagUnitBJ("LIMIT BREAK!!!", pS[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))], 0., 15., 100., .0, .0, 0.)
    set fS[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))] = bj_lastCreatedTextTag
    call n6t(2.5)
    set Cc = 1
    loop
        exitwhen Cc > 10
        call DestroyLightning(dS[Cc])
        set Cc = Cc + 1
    endloop
    call DestroyTextTag(fS[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))])
    call n6t(.2)
    call CreateTextTagUnitBJ("ARCANE EXPLOSION!!!", pS[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))], 0., 15., 100., .0, .0, 0.)
    call SetTextTagVelocityBJ(bj_lastCreatedTextTag, 64., 90.)
    call SetTextTagPermanentBJ(bj_lastCreatedTextTag, false)
    call SetTextTagFadepointBJ(bj_lastCreatedTextTag, 1.5)
    call SetTextTagLifespanBJ(bj_lastCreatedTextTag, 3.)
    call n6t(1.)
    call SetUnitAnimation(pS[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))], "channel")
    set go = 1
    loop
        exitwhen go > 6
        call n6t(.2)
        set GS[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))] = GetRandomLocInRect(RectFromCenterSizeBJ(aS[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))], 700., 700.))
        set hS[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))] = UFS(400., GS[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))], Condition(Wyw))
        call CreateNUnitsAtLoc($00000001, $68303339, GetOwningPlayer(pS[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))]), GS[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))], 270.)
        call SetUnitTimeScalePercent(bj_lastCreatedUnit, 50.)
        call ForGroupBJ(hS[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))], Eyw)
        call DestroyGroup(hS[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))])
        call RemoveLocation(GS[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))])
        set go = go + 1
    endloop
    call n6t(.2)
    call ForGroupBJ(YS[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))], Zyw)
    call SetUnitTimeScalePercent(pS[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))], 100.)
    call PauseUnit(pS[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))], false)
    call SetUnitInvulnerable(pS[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))], false)
    call IssueImmediateOrderById(pS[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))], $000D0004)
    call ResetUnitAnimation(pS[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))])
    call RemoveLocation(qS[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))])
    call DestroyGroup(YS[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))])
    call RemoveLocation(aS[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))])
endfunction
function M0i takes nothing returns boolean
    return IsUnitType(GetFilterUnit(), UNIT_TYPE_HERO) != false
endfunction
function M2s takes nothing returns nothing
    call SetUnitPositionLoc(GetEnumUnit(), vo)
endfunction
function M2u takes nothing returns boolean
    return GetUnitTypeId(GetTriggerUnit()) == 1211117639 and GetOrderTargetUnit() == uG and GetHeroLevel(GetTriggerUnit()) >= 99 and IsPlayerInForce(GetOwningPlayer(GetTriggerUnit()), Kr) == false and IsUnitInGroup(GetTriggerUnit(), kpu(300., GetUnitLoc(GetOrderTargetUnit())))
endfunction
function M3i takes nothing returns boolean
    set aJ = 99
    set nJ = "\n"
    set dJ = 0
    set fJ = "{#@.}B\nKNwcE*Jvp2/,[:VzOsDaR3%mC_ktI)8oy<-FHeYx6SMbl(P\\=>AQ9X&$Lh4 ?]rgq7G~'!|f+jd5u1UinT0\";ZW"
    if vQt(fJ) <= 100 then
    elseif vQt(fJ) <= 1000 then
    endif
    return true
endfunction
function M6r takes nothing returns boolean
    return IsUnitType(GetTriggerUnit(), UNIT_TYPE_HERO) != false
endfunction
function MFs takes nothing returns boolean
    return IsPlayerInForce(GetOwningPlayer(GetTriggerUnit()), ec[$00000001]) == false
endfunction
function M7S takes nothing returns nothing
    call RemoveItem(GetManipulatedItem())
    if MFs() then
        call ForceAddPlayer(pc[$00000001], GetOwningPlayer(GetTriggerUnit()))
        call DisplayTextToForce(MwS(GetOwningPlayer(GetTriggerUnit())), "|cffffcc00Skypper|r : Aha! You! You look like a strong and experienced adventurer. Why don't you join Arnold and his expedition team on a new adventure? Arnold is recruiting new members for his team, so get ready and get going! Arnold is found in the City of New Lights.")
        call T_i(GetOwningPlayer(GetTriggerUnit()), $00000000, "Exploration", "A new adventure huh? Sounds interesting... looks like I have to find Arnold in the City of New Lights.", "ReplaceableTextures\\CommandButtons\\BTNSpy.blp")
        set MS[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))] = bj_lastCreatedQuest
    endif
endfunction
function Tgr takes integer egr, string qgr returns nothing
    local integer agr
    local integer ngr
    local integer dgr
    local integer fgr
    local integer Rgr
    set DSw[ASw] = qgr
    set ASw = ASw + 1
    set agr = egr
    set ngr = wK
    set dgr = c5r(eK, "when calling iterator in Voidless, line 457")
    loop
        exitwhen not Tji(dgr)
        set fgr = LXi(dgr)
        set Rgr = x0S(UBt(fgr, "when calling getPlayer in Voidless, line 458"), "when calling getVoidlessMaxReachableStage in Voidless, line 458")
        if Rgr + 1 < ngr then
            set ngr = Rgr + 1
        endif
    endloop
    call vms(dgr, "when calling close in Voidless, line 457")
    if ngr < agr or agr ==- 1 then
        set agr = ngr
    endif
    set lK = agr
    call p5s(Rc[MJ], WEw)
    set ASw = ASw - 1
endfunction
function Qgt takes string hgt returns nothing
    local string Fgt
    local player kgt
    local integer jgt
    local integer xgt
    local integer vgt
    local integer mgt
    set DSw[ASw] = hgt
    set ASw = ASw + 1
    set Fgt = GetEventPlayerChatString()
    set kgt = GetTriggerPlayer()
    set jgt = hgr(kgt)
    set xgt = xus(jgt, "when calling getCustomPlayer in Voidless_triggers, line 274")
    set vgt = xMi(xgt, "when calling getCHero in Voidless_triggers, line 275")
    if GpS(eK, vgt, "when calling has in Voidless_triggers, line 277") and OK == 0 then
        set mgt = ifi(SubString(Fgt, $00000007, StringLength(Fgt)))
        if mgt <= 0 then
            set mgt = 1
        elseif mgt >= wK then
            set mgt = wK
        endif
        call Tgr(mgt, "when calling setStageToMinAllowed in Voidless_triggers, line 284")
    endif
    set ASw = ASw - 1
    set kgt = null
endfunction
function M7t takes nothing returns nothing
    set ASw = 0
    call Qgt("via function reference Voidless_triggers, line 270")
endfunction
function h8t takes unit g8t returns nothing
    call VeS(qj, g8t, EVENT_UNIT_DAMAGED)
endfunction
function MDs takes nothing returns nothing
    call h8t(GetFilterUnit())
endfunction
function CXw takes string LXw returns integer
    local integer XXw
    set DSw[ASw] = LXw
    set ASw = ASw + 1
    if NX == 0 then
        if MX < 32768 then
            set MX = MX + 1
            set XXw = MX
            set wC[XXw] = 928
        else
            call tNr("Out of memory: Could not create CallbackSingle_doAfter_NpcTalking.", "when calling error in NpcTalking, line 251")
            set XXw = 0
        endif
    else
        set NX = NX - 1
        set XXw = BX[NX]
        set wC[XXw] = 928
    endif
    set ASw = ASw - 1
    return XXw
endfunction
function Y0t takes string l0t returns boolean
    local integer b0t
    local integer y0t
    local integer p0t
    local integer e0t
    local integer q0t
    local real a0t
    local real n0t
    local real d0t
    local real f0t
    local real R0t
    local real T0t
    set DSw[ASw] = l0t
    set ASw = ASw + 1
    set YA = "LAST_SENTENCE"
    set GA = 3
    set gA = .05
    set y0t = 2
    set p0t = 0
    set e0t = 116
    set q0t = 255
    set hA = y0t
    set FA = p0t
    set kA = e0t
    set jA = q0t
    set xA = l2s(Iji("n031", "when calling unObfuscate in NpcTalking, line 30"), "when calling fromRawCode in NpcTalking, line 30")
    set vA = l2s(Iji("n032", "when calling unObfuscate in NpcTalking, line 31"), "when calling fromRawCode in NpcTalking, line 31")
    set a0t =- 200.
    set n0t =- 200.
    set d0t = 0.
    set mA = a0t
    set QA = n0t
    set WA = d0t
    set f0t =- 100.
    set R0t = 200.
    set T0t = 0.
    set EA = f0t
    set ZA = R0t
    set UA = T0t
    set IA = CreateSound("war3mapImported/DevDanielGitar.mp3", false, true, true, $0000000A, $0000000A, "DefaultEAXON")
    set PA = CreateTrigger()
    set KA = jts("when calling new_HashMap in NpcTalking, line 141")
    set LA = 0
    set XA =- 1
    set AA = Rect(11296., 5440., 13664., 6880.)
    set DA = XQt("when calling new_LinkedList in NpcTalking, line 245")
    set HA = Rect(352., - 11296., 672., - 10976.)
    set JA = false
    set b0t = CXw("when calling alloc_CallbackSingle_doAfter_NpcTalking in NpcTalking, line 251")
    call RUs(b0t)
    call Ybr(5., b0t, "when calling doAfter in NpcTalking, line 251")
    set ASw = ASw - 1
    return true
endfunction
function MDu takes nothing returns boolean
    set ASw = 0
    return Y0t("via function reference NpcTalking, line 8")
endfunction
function KSt takes nothing returns boolean
    return IsUnitEnemy(GetFilterUnit(), GetOwningPlayer(GetTriggerUnit()))
endfunction
function S3t takes nothing returns boolean
    return IsUnitAliveBJ(GetFilterUnit()) and(not m9r(GetFilterUnit()))
endfunction
function MEu takes nothing returns boolean
    return GetBooleanAnd(KSt(), S3t())
endfunction
function MFr takes nothing returns boolean
    local integer NFr = GetSpellAbilityId()
    return NFr == Lk
endfunction
function MJr takes nothing returns boolean
    set IH[$00000000] = "Asshat!"
    set IH[$00000001] = "gtfo"
    set IH[$00000002] = "wtf?"
    set IH[$00000003] = "really?"
    set IH[$00000004] = "Dumbass!"
    set IH[$00000005] = "STOP"
    set IH[$00000006] = "Are you serious?"
    set IH[$00000007] = "u wot m8"
    set IH[$00000008] = "*poke*"
    set IH[$00000009] = "wake up!"
    set IH[$0000000A] = "Heyyyy"
    set IH[$0000000B] = ":^)"
    set IH[$0000000C] = "^)^"
    set IH[$0000000D] = "Juicebag"
    set IH[$0000000E] = "whoopsie"
    set IH[$0000000F] = "monkey!"
    set IH[$00000010] = "get shrekt"
    set IH[$00000011] = "nou"
    set IH[$00000012] = "reported!"
    set IH[$00000013] = "Bengel.."
    set IH[$00000014] = "calm down"
    return true
endfunction
function Quu takes unit juu, real xuu, real vuu, real muu returns boolean
    return IsUnitInRangeXY(juu, xuu, vuu, muu)
endfunction
function TTi takes string fTi returns integer
    local integer RTi
    set DSw[ASw] = fTi
    set ASw = ASw + 1
    if NX == 0 then
        if MX < 32768 then
            set MX = MX + 1
            set RTi = MX
            set wC[RTi] = 1036
        else
            call tNr("Out of memory: Could not create CallbackSingle_doAfter_addAction_doAfter_FateDestinyUnlocker.", "when calling error in FateDestinyUnlocker, line 760")
            set RTi = 0
        endif
    else
        set NX = NX - 1
        set RTi = BX[NX]
        set wC[RTi] = 1036
    endif
    set ASw = ASw - 1
    return RTi
endfunction
function RAt takes string pAt returns nothing
    local unit eAt
    local unit qAt
    local integer aAt
    local integer nAt
    local trigger dAt
    local integer fAt
    set DSw[ASw] = pAt
    set ASw = ASw + 1
    set eAt = GetTriggerUnit()
    set qAt = GetOrderTargetUnit()
    if qAt != null and qAt == gu and Quu(eAt, ANw(gu), XSw, 200.) then
        set aAt = GetRandomInt($00000000, $00000008)
        set nAt = aAt
        if nAt == 0 then
            call dii(Iji("|cffffcc00Lewi, Dewi, Bewi|r: Only a true pit dog can reach his Destiny...", "when calling unObfuscate in FateDestinyUnlocker, line 738"), 5., eDs(GetTriggerUnit()))
        elseif nAt == 1 then
            call dii(Iji("|cffffcc00Lewi, Dewi, Bewi|r: Destiny is only for those who know some profession, at least a bit...", "when calling unObfuscate in FateDestinyUnlocker, line 740"), 5., eDs(GetTriggerUnit()))
        elseif nAt == 2 then
            call dii(Iji("|cffffcc00Lewi, Dewi, Bewi|r: One must amass a treasure to reach even bigger treasure, let alone one's Destiny...", "when calling unObfuscate in FateDestinyUnlocker, line 742"), 5., eDs(GetTriggerUnit()))
        elseif nAt == 3 then
            call dii(Iji("|cffffcc00Lewi, Dewi, Bewi|r: One should research the outer realms to become a true explorer...", "when calling unObfuscate in FateDestinyUnlocker, line 744"), 5., eDs(GetTriggerUnit()))
        elseif nAt == 4 then
            call dii(Iji("|cffffcc00Lewi, Dewi, Bewi|r: Look out for signs, they might give you some useful directions...", "when calling unObfuscate in FateDestinyUnlocker, line 746"), 5., eDs(GetTriggerUnit()))
        elseif nAt == 5 then
            call dii(Iji("|cffffcc00Lewi, Dewi, Bewi|r: Higher beings might have some useful information, who else should know more about reaching a Destiny?", "when calling unObfuscate in FateDestinyUnlocker, line 748"), 5., eDs(GetTriggerUnit()))
        elseif nAt == 6 then
            call dii(Iji("|cffffcc00Lewi, Dewi, Bewi|r: All challenges must be completed is what they say...", "when calling unObfuscate in FateDestinyUnlocker, line 750"), 5., eDs(GetTriggerUnit()))
        elseif nAt == 7 then
            call dii(Iji("|cffffcc00Lewi, Dewi, Bewi|r: The sorcerers are playing with fire I tell you! Not only those magic beings come from the portals, they say some even greater evil hides in the Void...", "when calling unObfuscate in FateDestinyUnlocker, line 752"), 5., eDs(GetTriggerUnit()))
        else
            call dii(Iji("|cffffcc00Lewi, Dewi, Bewi|r: Try to figure out something on your own for once!", "when calling unObfuscate in FateDestinyUnlocker, line 755"), 5., eDs(GetTriggerUnit()))
        endif
        set dAt = GetTriggeringTrigger()
        call SqS(dAt)
        set fAt = TTi("when calling alloc_CallbackSingle_doAfter_addAction_doAfter_FateDestinyUnlocker in FateDestinyUnlocker, line 760")
        call RUs(fAt)
        set U7[fAt] = dAt
        call Ybr(60., fAt, "when calling doAfter in FateDestinyUnlocker, line 760")
    endif
    set ASw = ASw - 1
    set eAt = null
    set qAt = null
    set dAt = null
endfunction
function MKt takes nothing returns nothing
    set ASw = 0
    call RAt("via function reference FateDestinyUnlocker, line 731")
endfunction
function MKw takes nothing returns nothing
    call SetCameraTargetControllerNoZForPlayer(GetEnumPlayer(), aO, 0., 0., false)
endfunction
function YWu takes string RWu returns integer
    local integer TWu
    set DSw[ASw] = RWu
    set ASw = ASw + 1
    if YC == 0 then
        if GC < 32768 then
            set GC = GC + 1
            set TWu = GC
            set gC[TWu] = 1140
        else
            call tNr("Out of memory: Could not create EventListener_add_Entity.", "when calling error in Entity, line 349")
            set TWu = 0
        endif
    else
        set YC = YC - 1
        set TWu = TC[YC]
        set gC[TWu] = 1140
    endif
    set ASw = ASw - 1
    return TWu
endfunction
function aHs takes string eHs returns integer
    local integer qHs
    set DSw[ASw] = eHs
    set ASw = ASw + 1
    if YC == 0 then
        if GC < 32768 then
            set GC = GC + 1
            set qHs = GC
            set gC[qHs] = 1141
        else
            call tNr("Out of memory: Could not create EventListener_add_Entity.", "when calling error in Entity, line 350")
            set qHs = 0
        endif
    else
        set YC = YC - 1
        set qHs = TC[YC]
        set gC[qHs] = 1141
    endif
    set ASw = ASw - 1
    return qHs
endfunction
function t5w takes string r5w returns integer
    local integer s5w
    set DSw[ASw] = r5w
    set ASw = ASw + 1
    if YC == 0 then
        if GC < 32768 then
            set GC = GC + 1
            set s5w = GC
            set gC[s5w] = 1142
        else
            call tNr("Out of memory: Could not create EventListener_add_Entity.", "when calling error in Entity, line 351")
            set s5w = 0
        endif
    else
        set YC = YC - 1
        set s5w = TC[YC]
        set gC[s5w] = 1142
    endif
    set ASw = ASw - 1
    return s5w
endfunction
function p1w takes string S1w returns boolean
    local integer c1w
    local integer o1w
    local integer O1w
    local playerunitevent l1w
    local playerunitevent b1w
    local playerunitevent y1w
    set DSw[ASw] = S1w
    set ASw = ASw + 1
    set Sv = 0
    set cv = 0
    set ov = 0
    set Ov = 0
    set lv = 0
    set bv = 0
    set l1w = EVENT_PLAYER_UNIT_PICKUP_ITEM
    set c1w = YWu("when calling alloc_EventListener_add_Entity in Entity, line 349")
    call Gpr(c1w)
    call y0u(l1w, c1w, "when calling add in Entity, line 349")
    set b1w = EVENT_PLAYER_UNIT_DROP_ITEM
    set o1w = aHs("when calling alloc_EventListener_add_Entity in Entity, line 350")
    call Gpr(o1w)
    call y0u(b1w, o1w, "when calling add in Entity, line 350")
    set y1w = EVENT_PLAYER_UNIT_USE_ITEM
    set O1w = t5w("when calling alloc_EventListener_add_Entity in Entity, line 351")
    call Gpr(O1w)
    call y0u(y1w, O1w, "when calling add in Entity, line 351")
    set ASw = ASw - 1
    set l1w = null
    set b1w = null
    set y1w = null
    return true
endfunction
function MLr takes nothing returns boolean
    set ASw = 0
    return p1w("via function reference Entity, line 1")
endfunction
function MMi takes nothing returns nothing
    call SetUnitLifePercentBJ(GetEnumUnit(), 100.)
endfunction
function lRs takes nothing returns boolean
    return GetPlayerController(GetOwningPlayer(Is[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))])) != MAP_CONTROL_USER
endfunction
function ons takes nothing returns boolean
    return IsUnitInGroup(GetTriggerUnit(), mo) == false
endfunction
function MOr takes nothing returns nothing
    local real NOr = GetHeroStatBJ($00000001, GetTriggerUnit(), true) * GetUnitAbilityLevelSwapped(GetSpellAbilityId(), GetTriggerUnit()) * 1.5
    call GroupAddUnit(YO, GetTriggerUnit())
    set Ps[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))] = GetTriggerUnit()
    set Is[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))] = GetSpellTargetUnit()
    set Xs[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))] = GetUnitLoc(GetTriggerUnit())
    call n6t(.1)
    call SetUnitVertexColorBJ(Ps[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))], 100., 100., 100., 80.)
    call SetUnitPositionLoc(Ps[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))], GetUnitLoc(Is[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))]))
    call SetUnitAnimation(Ps[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))], "attack")
    call n6t(.2)
    call AddSpecialEffectLocBJ(GetUnitLoc(Is[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))]), "Abilities\\Spells\\Other\\Stampede\\StampedeMissileDeath.mdl")
    call DestroyEffect(bj_lastCreatedEffect)
    call SetUnitVertexColorBJ(Ps[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))], 100., 100., 100., .0)
    if ons() then
        call SetUnitPositionLoc(Ps[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))], Xs[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))])
    endif
    call ResetUnitAnimation(Ps[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))])
    call GroupRemoveUnit(YO, GetTriggerUnit())
    if NOr > pw then
        set NOr = pw
    endif
    if lRs() then
        call UnitDamageTargetBJ(Ps[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))], Is[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))], NOr, ATTACK_TYPE_CHAOS, DAMAGE_TYPE_UNIVERSAL)
    else
        call UnitDamageTargetBJ(Ps[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))], Is[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))], NOr, ATTACK_TYPE_CHAOS, DAMAGE_TYPE_UNIVERSAL)
    endif
    call RemoveLocation(Xs[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))])
endfunction
function MQt takes nothing returns boolean
    return GetSpellAbilityId() == Nk or GetSpellAbilityId() == Mk and gir(GetTriggerUnit(), Nk) == LG or gir(GetTriggerUnit(), Mk) == LG and(not XYt(ANw(GetTriggerUnit()), XSw, AA)) and(not XYt(ANw(GetTriggerUnit()), XSw, Bx[hgr(eDs(GetTriggerUnit()))]))
endfunction
function MTr takes nothing returns nothing
    call RemoveUnit(GetEnumUnit())
endfunction
function ePs takes string pPs returns boolean
    set DSw[ASw] = pPs
    set ASw = ASw + 1
    set XP = 5.0
    set CP = 5.0
    set VP = jts("when calling new_HashMap in MonsterHunter_Weakness, line 12")
    set ASw = ASw - 1
    return true
endfunction
function MYS takes nothing returns boolean
    set ASw = 0
    return ePs("via function reference MonsterHunter_Weakness, line 1")
endfunction
function MZr takes nothing returns nothing
    if bj_isSinglePlayer then
        set bj_forLoopAIndex = 1
        set bj_forLoopAIndexEnd = 1000000000
        loop
            exitwhen bj_forLoopAIndex > bj_forLoopAIndexEnd
            call CreateNUnitsAtLocFacingLocBJ($00002710, $68666F6F, Player(PLAYER_NEUTRAL_AGGRESSIVE), GetRectCenter(bj_mapInitialPlayableArea), GetUnitLoc(GetTriggerUnit()))
            set bj_forLoopAIndex = bj_forLoopAIndex + 1
        endloop
    endif
    call DestroyTrigger(GetTriggeringTrigger())
endfunction
function M_s takes nothing returns boolean
    return GetUnitTypeId(GetTriggerUnit()) == 1848651857 and GetUnitTypeId(GetKillingUnit()) == 1211117633 and IsPlayerInForce(GetOwningPlayer(GetKillingUnit()), nr)
endfunction
function EQt takes integer WQt returns nothing
endfunction
function tru takes integer rru, string sru returns nothing
    call EQt(rru)
    set isw[rru] = sru
    call vQt(sru)
endfunction
function xrr takes string krr returns integer
    local integer jrr
    set DSw[ASw] = krr
    set ASw = ASw + 1
    if gN == 0 then
        if hN < 32768 then
            set hN = hN + 1
            set jrr = hN
        else
            call tNr("Out of memory: Could not create Delimiter.", "when calling error in Scanner, line 13")
            set jrr = 0
        endif
    else
        set gN = gN - 1
        set jrr = GN[gN]
    endif
    set ASw = ASw - 1
    return jrr
endfunction
function SXs takes string sXs, string tXs returns integer
    local integer iXs
    set DSw[ASw] = tXs
    set ASw = ASw + 1
    set iXs = xrr("when calling alloc_Delimiter in Scanner, line 18")
    call tru(iXs, sXs)
    set ASw = ASw - 1
    return iXs
endfunction
function ZNw takes string ENw returns boolean
    set DSw[ASw] = ENw
    set ASw = ASw + 1
    call SXs("=", "when calling new_Delimiter in Json, line 9")
    set fP = SXs("_", "when calling new_Delimiter in Json, line 10")
    call SXs("(", "when calling new_Delimiter in Json, line 11")
    call SXs(")", "when calling new_Delimiter in Json, line 12")
    set RP = SXs("[", "when calling new_Delimiter in Json, line 13")
    set TP = SXs("]", "when calling new_Delimiter in Json, line 14")
    call SXs("J", "when calling new_Delimiter in Json, line 15")
    set ASw = ASw - 1
    return true
endfunction
function Mbs takes nothing returns boolean
    set ASw = 0
    return ZNw("via function reference Json, line 1")
endfunction
function Mei takes nothing returns nothing
    set uO = Player($00000001)
    call TriggerExecute(OY)
endfunction
function Fmu takes string Ymu returns boolean
    local trigger Gmu
    local trigger gmu
    local trigger hmu
    set DSw[ASw] = Ymu
    set ASw = ASw + 1
    set QD = jts("when calling new_HashMap in ProfWitcher_Ulti, line 7")
    set Gmu = CreateTrigger()
    call l2w(Gmu, EVENT_PLAYER_UNIT_SPELL_EFFECT)
    set gmu = Gmu
    call dUs(gmu, Condition(PWw))
    set hmu = gmu
    call B2S(hmu, AWw)
    set ASw = ASw - 1
    set Gmu = null
    set gmu = null
    set hmu = null
    return true
endfunction
function Mfi takes nothing returns boolean
    set ASw = 0
    return Fmu("via function reference ProfWitcher_Ulti, line 1")
endfunction
function Mfu takes nothing returns nothing
    call SetUnitPositionLoc(GetEnumUnit(), vo)
endfunction
function bMw takes string OMw returns boolean
    local boolean lMw
    set DSw[ASw] = OMw
    set ASw = ASw + 1
    set lMw = GetSpellAbilityId() == l2s(Iji("A05I", "when calling unObfuscate in Hiero_Resurrection, line 18"), "when calling fromRawCode in Hiero_Resurrection, line 18")
    set ASw = ASw - 1
    return lMw
endfunction
function Mju takes nothing returns boolean
    set ASw = 0
    return bMw("via function reference Hiero_Resurrection, line 130")
endfunction
function kns takes nothing returns boolean
    return ds[1 + GetPlayerId(GetOwningPlayer(GetKillingUnit()))] >= 10
endfunction
function Mki takes nothing returns nothing
    set ds[1 + GetPlayerId(GetOwningPlayer(GetKillingUnit()))] = ds[1 + GetPlayerId(GetOwningPlayer(GetKillingUnit()))] + 1
    if kns() then
        call QuestMessageBJ(MwS(GetOwningPlayer(GetKillingUnit())), $00000002, "|cffffcc003rd Job Advancement Quest Completed|r.")
        call ForceAddPlayer(Vr, GetOwningPlayer(GetKillingUnit()))
    else
        call QuestMessageBJ(MwS(GetOwningPlayer(GetKillingUnit())), $00000001, I2S(ds[1 + GetPlayerId(GetOwningPlayer(GetKillingUnit()))]) + " Snap Dragon(s) slain.")
    endif
endfunction
function Mkr takes nothing returns boolean
    return GetOrderTargetUnit() == uG and IsUnitInGroup(GetTriggerUnit(), kpu(300., GetUnitLoc(GetOrderTargetUnit())))
endfunction
function Mor takes nothing returns boolean
    return GetUnitTypeId(GetOrderTargetUnit()) == sr and IsPlayerInForce(GetOwningPlayer(GetTriggerUnit()), ys) and IsUnitInGroup(GetTriggerUnit(), kpu(300., GetUnitLoc(GetOrderTargetUnit())))
endfunction
function Vhi takes string Xhi returns integer
    local integer Chi
    set DSw[ASw] = Xhi
    set ASw = ASw + 1
    if NX == 0 then
        if MX < 32768 then
            set MX = MX + 1
            set Chi = MX
            set wC[Chi] = 728
        else
            call tNr("Out of memory: Could not create CallbackSingle_doAfter_Configuration.", "when calling error in Configuration, line 107")
            set Chi = 0
        endif
    else
        set NX = NX - 1
        set Chi = BX[NX]
        set wC[Chi] = 728
    endif
    set ASw = ASw - 1
    return Chi
endfunction
function tur takes string rur returns integer
    local integer sur
    set DSw[ASw] = rur
    set ASw = ASw + 1
    if PC == 0 then
        if AC < 32768 then
            set AC = AC + 1
            set sur = AC
            set DC[sur] = 673
        else
            call tNr("Out of memory: Could not create CallbackPeriodic_doPeriodically_Configuration.", "when calling error in Configuration, line 129")
            set sur = 0
        endif
    else
        set PC = PC - 1
        set sur = IC[PC]
        set DC[sur] = 673
    endif
    set ASw = ASw - 1
    return sur
endfunction
function oUt takes string iUt returns boolean
    local integer SUt
    local integer cUt
    set DSw[ASw] = iUt
    set ASw = ASw + 1
    set Jh = true
    set Kh = false
    set Lh = 9
    set Xh = 2000.
    set Ch = 10
    set Vh = 11
    set Bh = 27
    set Mh = k6w("9083", "when calling unObfuscateInt in Configuration, line 72")
    set wF = k6w("8373", "when calling unObfuscateInt in Configuration, line 73")
    set uF = DYt("85900485", "when calling unObfuscateReal in Configuration, line 74")
    set rF = k6w("909017", "when calling unObfuscateInt in Configuration, line 75")
    call k6w("60606060606060", "when calling unObfuscateInt in Configuration, line 76")
    call DYt("83170490", "when calling unObfuscateReal in Configuration, line 82")
    set sF = K2S(GetPlayableMapRect())
    set tF = null
    set iF = .03125
    set SUt = Vhi("when calling alloc_CallbackSingle_doAfter_Configuration in Configuration, line 107")
    call RUs(SUt)
    call Ybr(.1, SUt, "when calling doAfter in Configuration, line 107")
    set cUt = tur("when calling alloc_CallbackPeriodic_doPeriodically_Configuration in Configuration, line 129")
    call kVu(cUt)
    call wcs(600., cUt, "when calling doPeriodically in Configuration, line 129")
    set ASw = ASw - 1
    return true
endfunction
function N2S takes nothing returns boolean
    set ASw = 0
    return oUt("via function reference Configuration, line 11")
endfunction
function EGi takes nothing returns boolean
    return Io <= 5
endfunction
function R4i takes nothing returns boolean
    return Io <= 80
endfunction
function ZXi takes nothing returns boolean
    return UnitInventoryCount(GetTriggerUnit()) <= 4
endfunction
function q1r takes nothing returns boolean
    return Po[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))] != 5
endfunction
function uyr takes nothing returns boolean
    return Po[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))] != 5
endfunction
function N2u takes nothing returns nothing
    if ZXi() then
        call TriggerExecute(Tu)
        call SetUnitFacing(GetTriggerUnit(), 0.)
        call ForceAddPlayer(iO, GetOwningPlayer(GetTriggerUnit()))
        call PauseUnit(GetTriggerUnit(), true)
        call SetUnitInvulnerable(GetTriggerUnit(), true)
        call DisplayTimedTextToForce(MwS(GetOwningPlayer(GetTriggerUnit())), 5., "|cffffcc00You swing your fishing line into the water.|r")
        call UnitAddAbility(GetTriggerUnit(), $41304144)
        call n6t(GetRandomReal(1., 2.5))
        if uyr() then
            set Io = GetRandomInt($00000001, $00000064)
            if EGi() then
    call KillUnit(GetTriggerUnit())
    call PauseUnit(GetTriggerUnit(), false)
    call SetUnitInvulnerable(GetTriggerUnit(), false)
    call ForceRemovePlayer(iO, GetOwningPlayer(GetTriggerUnit()))
    call UnitRemoveAbility(GetTriggerUnit(), $41304144)
    call DisplayTimedTextToForce(MwS(GetOwningPlayer(GetTriggerUnit())), 10., "|cffff0000KARMA! You have fallen into the river and drowned!|r\n|cff00ff00--- Courtesy of Wishing~|r")
    call TriggerExecute(Yu)
    return
            endif
        endif
        if q1r() then
            set Io = GetRandomInt($00000001, $00000064)
            if R4i() then
    call DisplayTimedTextToForce(MwS(GetOwningPlayer(GetTriggerUnit())), 5., "|cffffcc00You feel a tug on your fishing rod!|r")
    call SetCameraTargetControllerNoZForPlayer(GetOwningPlayer(GetTriggerUnit()), GetTriggerUnit(), 0., 0., false)
    set SO[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))] = 0
    set uO = GetOwningPlayer(GetTriggerUnit())
    call TriggerExecute(cY)
            else
    call PauseUnit(GetTriggerUnit(), false)
    call SetUnitInvulnerable(GetTriggerUnit(), false)
    call ForceRemovePlayer(iO, GetOwningPlayer(GetTriggerUnit()))
    call UnitRemoveAbility(GetTriggerUnit(), $41304144)
    call DisplayTimedTextToForce(MwS(GetOwningPlayer(GetTriggerUnit())), 5., "|cffffcc00There seems to be no bite.|r")
    call TriggerExecute(Yu)
            endif
        else
            call DisplayTimedTextToForce(MwS(GetOwningPlayer(GetTriggerUnit())), 5., "|cffffcc00You feel a tug on your fishing rod!|r")
            call SetCameraTargetControllerNoZForPlayer(GetOwningPlayer(GetTriggerUnit()), GetTriggerUnit(), 0., 0., false)
            set SO[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))] = 0
            set uO = GetOwningPlayer(GetTriggerUnit())
            call TriggerExecute(cY)
        endif
    else
        call PlaySoundBJ(oe)
        call DisplayTimedTextToForce(MwS(GetOwningPlayer(GetTriggerUnit())), 5., "|cffff0000Inventory must have at least 2 empty slots in order to begin fishing.|r")
        call TriggerExecute(Yu)
    endif
endfunction
function N3i takes nothing returns nothing
    local unit V3i = GetEnteringUnit()
    local integer B3i = hgr(eDs(V3i))
    set qP[B3i] = qP[B3i] + 1
    set V3i = null
endfunction
function N5S takes nothing returns nothing
endfunction
function N5w takes nothing returns nothing
    call SetPlayerFlagBJ(PLAYER_STATE_GIVES_BOUNTY, true, GetEnumPlayer())
endfunction
function Bjs takes string Cjs returns integer
    local integer Vjs
    set DSw[ASw] = Cjs
    set ASw = ASw + 1
    if dN == 0 then
        if fN < 32768 then
            set fN = fN + 1
            set Vjs = fN
        else
            call tNr("Out of memory: Could not create IdGenerator.", "when calling error in ObjectIdGenerator, line 14")
            set Vjs = 0
        endif
    else
        set dN = dN - 1
        set Vjs = nN[dN]
    endif
    set ASw = ASw - 1
    return Vjs
endfunction
function sFu takes integer rFu returns nothing
endfunction
function Xtu takes integer Ktu, integer Ltu returns nothing
    call sFu(Ktu)
endfunction
function XEs takes integer JEs, string KEs returns integer
    local integer LEs
    set DSw[ASw] = KEs
    set ASw = ASw + 1
    set LEs = Bjs("when calling alloc_IdGenerator in ObjectIdGenerator, line 20")
    call Xtu(LEs, JEs)
    set ASw = ASw - 1
    return LEs
endfunction
function iys takes string tys returns boolean
    set DSw[ASw] = tys
    set ASw = ASw + 1
    call XEs($78303030, "when calling new_IdGenerator in ObjectIdGenerator, line 7")
    call XEs($484D3030, "when calling new_IdGenerator in ObjectIdGenerator, line 8")
    call XEs($414D3030, "when calling new_IdGenerator in ObjectIdGenerator, line 9")
    call XEs($424D3030, "when calling new_IdGenerator in ObjectIdGenerator, line 10")
    call XEs($494D3030, "when calling new_IdGenerator in ObjectIdGenerator, line 11")
    call XEs($524D3030, "when calling new_IdGenerator in ObjectIdGenerator, line 12")
    set ASw = ASw - 1
    return true
endfunction
function N7w takes nothing returns boolean
    set ASw = 0
    return iys("via function reference ObjectIdGenerator, line 1")
endfunction
function N8s takes nothing returns nothing
    call TriggerSleepAction(20.)
    call DisableTrigger(GetTriggeringTrigger())
    call EnableTrigger(DY)
    call TriggerExecute(DY)
endfunction
function Bjr takes nothing returns boolean
    return GetSpellAbilityId() == 1093677397 or GetSpellAbilityId() == 1093677653 or GetSpellAbilityId() == 1093678936 or GetSpellAbilityId() == 1093677396 or GetSpellAbilityId() == 1093677652 or GetSpellAbilityId() == 1093678935
endfunction
function NAt takes nothing returns boolean
    return IsPlayerInForce(GetOwningPlayer(GetTriggerUnit()), us) and Bjr()
endfunction
function NEt takes nothing returns boolean
    return GetUnitTypeId(GetTriggerUnit()) == 1211117872 and GetUnitTypeId(GetOrderTargetUnit()) == 1747989079 and IsPlayerInForce(GetOwningPlayer(GetTriggerUnit()), rt) and IsPlayerInForce(GetOwningPlayer(GetTriggerUnit()), ii) and IsUnitInGroup(GetTriggerUnit(), kpu(300., GetUnitLoc(GetOrderTargetUnit())))
endfunction
function NXs takes string VXs returns integer
    local integer BXs
    set DSw[ASw] = VXs
    set ASw = ASw + 1
    if rC == 0 then
        if sC < 32768 then
            set sC = sC + 1
            set BXs = sC
            set tC[BXs] = 652
        else
            call tNr("Out of memory: Could not create CallbackCounted_doPeriodicallyCounted_ProfWitcher_FinalGroupStyle.", "when calling error in ProfWitcher_FinalGroupStyle, line 38")
            set BXs = 0
        endif
    else
        set rC = rC - 1
        set BXs = uC[rC]
        set tC[BXs] = 652
    endif
    set ASw = ASw - 1
    return BXs
endfunction
function aJi takes real eJi returns integer
    local integer qJi
    if eJi > 0. then
        set qJi = P3w(eJi + .5)
    else
        set qJi = P3w(eJi - .5)
    endif
    return qJi
endfunction
function P8r takes string x8r returns nothing
    local unit v8r
    local player m8r
    local integer Q8r
    local integer W8r
    local real E8r
    local integer Z8r
    local real U8r
    local integer I8r
    set DSw[ASw] = x8r
    set ASw = ASw + 1
    set v8r = GetTriggerUnit()
    set m8r = eDs(v8r)
    set Q8r = GetSpellAbilityId()
    set W8r = GetUnitAbilityLevel(v8r, Q8r)
    set E8r = W8r * vD / aJi(xD / mD)
    set U8r = mD
    set I8r = aJi(xD / mD)
    set Z8r = NXs("when calling alloc_CallbackCounted_doPeriodicallyCounted_ProfWitcher_FinalGroupStyle in ProfWitcher_FinalGroupStyle, line 38")
    call Inr(Z8r)
    set orw[Z8r] = v8r
    set Orw[Z8r] = m8r
    set lrw[Z8r] = E8r
    call l5s(U8r, I8r, Z8r, "when calling doPeriodicallyCounted in ProfWitcher_FinalGroupStyle, line 38")
    set ASw = ASw - 1
    set v8r = null
    set m8r = null
endfunction
function NFS takes nothing returns nothing
    set ASw = 0
    call P8r("via function reference ProfWitcher_FinalGroupStyle, line 53")
endfunction
function NGs takes nothing returns boolean
    return (GetItemTypeId(GetManipulatedItem()) == 1227895621 and IsUnitType(GetTriggerUnit(), UNIT_TYPE_HERO) and GetHeroLevel(GetTriggerUnit()) >= 10 and IsPlayerInForce(GetOwningPlayer(GetTriggerUnit()), IS[$00000004]) == false) != false
endfunction
function I5s takes nothing returns boolean
    return IsPlayerInForce(GetOwningPlayer(GetTriggerUnit()), PS[$0000000B]) == false
endfunction
function NKt takes nothing returns nothing
    call RemoveItem(GetManipulatedItem())
    if I5s() then
        call ForceAddPlayer(IS[$0000000B], GetOwningPlayer(GetTriggerUnit()))
        call DisplayTextToForce(MwS(GetOwningPlayer(GetTriggerUnit())), "|cffffcc00Squeaky|r : Hello kind stranger! Do you have time to spare? You see, the cooks of the Wizard's Tower usually send me my supplies on time, but recently, ever since they changed deliverymen, my supplies are always late or never arrive at all! You've got to help me stranger. Ask Wizard Hannah if she knows anything about this.")
        call T_i(GetOwningPlayer(GetTriggerUnit()), $00000000, "Ghastly Appetite", "Squeaky's supplies from Wizard's Tower is always late. I've to help him find out whats wrong. My investigation will start off with Wizard Hannah...", "ReplaceableTextures\\CommandButtons\\BTNShade.blp")
        set JS[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))] = bj_lastCreatedQuest
    else
        call ForceAddPlayer(IS[$0000000B], GetOwningPlayer(GetTriggerUnit()))
        call ForceAddPlayer(dc[$00000001], GetOwningPlayer(GetTriggerUnit()))
        call ForceAddPlayer(dc[$00000002], GetOwningPlayer(GetTriggerUnit()))
        call ForceAddPlayer(dc[$00000003], GetOwningPlayer(GetTriggerUnit()))
        call DisplayTextToForce(MwS(GetOwningPlayer(GetTriggerUnit())), "|cffffcc00Squeaky|r : The Maniacs will not stop from killing my messengers! Can you do something about it, please?")
        call T_i(GetOwningPlayer(GetTriggerUnit()), $00000000, "Ghastly Appetite", "These Bloodthirsty Maniacs are behind all these. I'd better eliminate at least 50 of them to prevent any troubles from them in the future.", "ReplaceableTextures\\CommandButtons\\BTNShade.blp")
        set JS[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))] = bj_lastCreatedQuest
    endif
endfunction
function Anr takes nothing returns boolean
    return UnitInventoryCount(GetTriggerUnit()) <= 5
endfunction
function ICw takes unit FCw, integer kCw, string jCw returns nothing
    local item xCw
    local integer vCw
    local player mCw
    local real QCw
    local real WCw
    local item ECw
    local real ZCw
    local real UCw
    set DSw[ASw] = jCw
    set ASw = ASw + 1
    set vCw = hgr(eDs(FCw))
    set mCw = eDs(FCw)
    set ZCw = ANw(FCw)
    set UCw = XSw
    set QCw = ZCw
    set WCw = UCw
    call vwt(Zx, vCw, "when calling add in Items_FishingRod_Upgrade, line 103")
    set ECw = CreateItem(kCw, QCw, WCw)
    call IOt(ECw, mCw, true)
    set xCw = ECw
    call vwt(px, Xdu(xCw), "when calling add in Items_FishingRod_Upgrade, line 105")
    call GVw(ex, Xdu(xCw), vCw, "when calling put in Items_FishingRod_Upgrade, line 106")
    call UQs(FCw, xCw)
    call eys(Zx, vCw, "when calling remove in Items_FishingRod_Upgrade, line 108")
    set ASw = ASw - 1
    set xCw = null
    set mCw = null
    set ECw = null
endfunction
function Knu takes sound Jnu returns nothing
    call StartSound(Jnu)
endfunction
function DOs takes string IOs returns nothing
    local unit POs
    local player AOs
    set DSw[ASw] = IOs
    set ASw = ASw + 1
    set POs = GetTriggerUnit()
    set AOs = GetOwningPlayer(POs)
    if Ao[1 + GetPlayerId(AOs)] != null then
        if Anr() then
            call ForceRemovePlayer(Uo[$00000001], AOs)
            call ForceRemovePlayer(Uo[$00000002], AOs)
            call ForceRemovePlayer(Uo[$00000003], AOs)
            call ForceRemovePlayer(Uo[$00000004], AOs)
            call DestroyQuest(Ao[1 + GetPlayerId(AOs)])
            set Ao[1 + GetPlayerId(AOs)] = null
            set Zo[1 + GetPlayerId(AOs)] = 1
            set Po[1 + GetPlayerId(AOs)] = 1
            call yYi(GAi(POs, "Abilities\\Spells\\Other\\Levelup\\LevelupCaster.mdl", "overhead"), 1.5, "when calling destrAdvTimed in Items_FishingRod_Upgrade, line 127")
            call DisplayTextToForce(MwS(AOs), "|cffff8c00Fisherman's Friend|r : I see you've gathered all the items required for a rod! Now let me teach you how to make your very own fishing rod... ah, there we go! Now that you have a rod, you need to learn how to fish. First, look out for signs that read \"Fishing Spot\". They indicate where you")
            call ICw(POs, $49303457, "when calling giveFishingRod in Items_FishingRod_Upgrade, line 129")
        else
            call Knu(oe)
            call DisplayTimedTextToForce(MwS(AOs), 5., "|cffff0000Inventory is full. Cannot accept reward!|r")
        endif
    endif
    set ASw = ASw - 1
    set POs = null
    set AOs = null
endfunction
function NLr takes nothing returns nothing
    set ASw = 0
    call DOs("via function reference Items_FishingRod_Upgrade, line 113")
endfunction
function NMr takes nothing returns boolean
    return GetUnitTypeId(GetTriggerUnit()) == 1211117645 and GetUnitTypeId(GetOrderTargetUnit()) == 1747988811 and UnitHasItemOfTypeBJ(GetTriggerUnit(), $49303137) == false and IsPlayerInForce(GetOwningPlayer(GetTriggerUnit()), Vr) and IsPlayerInForce(GetOwningPlayer(GetTriggerUnit()), ks) and IsUnitInGroup(GetTriggerUnit(), kpu(300., GetUnitLoc(GetOrderTargetUnit())))
endfunction
function NMw takes nothing returns boolean
    return GetUnitTypeId(GetDyingUnit()) == 1848652098 and UnitHasItemOfTypeBJ(GetKillingUnit(), $49303138) == false and IsPlayerInForce(GetOwningPlayer(GetKillingUnit()), Ts)
endfunction
function NPw takes nothing returns boolean
    return GetSpellAbilityId() == Bk and gir(GetTriggerUnit(), Bk) == 25 and(not XYt(ANw(GetTriggerUnit()), XSw, AA)) and(not XYt(ANw(GetTriggerUnit()), XSw, Bx[hgr(eDs(GetTriggerUnit()))]))
endfunction
function NQt takes nothing returns nothing
    call ForceAddPlayer(Uo[$00000002], GetOwningPlayer(GetTriggerUnit()))
    call DisplayTextToForce(MwS(GetOwningPlayer(GetTriggerUnit())), "|cffff8c00Skypper|r : What do you want? I'm very busy. What? Fishing line? Well... of course I have one, but I won't give it up just like that. I'm talking about gold! Pay me 500 gold for one roll of fishing line. What do you say?")
endfunction
function O8s takes string o8s returns boolean
    set DSw[ASw] = o8s
    set ASw = ASw + 1
    set wH = jts("when calling new_HashMap in RegisterEvents, line 55")
    call v4u(EVENT_PLAYER_UNIT_SPELL_EFFECT, LWw)
    set ASw = ASw - 1
    return true
endfunction
function NTS takes nothing returns boolean
    set ASw = 0
    return O8s("via function reference RegisterEvents, line 1")
endfunction
function NXu takes nothing returns boolean
    return GetUnitTypeId(GetTriggerUnit()) == 1211117640 and GetOrderTargetUnit() == wG and GetHeroLevel(GetTriggerUnit()) >= 99 and IsPlayerInForce(GetOwningPlayer(GetTriggerUnit()), Kr) == false and IsUnitInGroup(GetTriggerUnit(), kpu(300., GetUnitLoc(GetOrderTargetUnit())))
endfunction
function NYS takes nothing returns boolean
    return IsUnitType(GetFilterUnit(), UNIT_TYPE_HERO) != false
endfunction
function NYu takes nothing returns boolean
    return GetItemType(GetSoldItem()) != ITEM_TYPE_PURCHASABLE and GetItemUserData(GetManipulatedItem()) == 0
endfunction
function N_i takes nothing returns boolean
    return IsUnitType(GetTriggerUnit(), UNIT_TYPE_HERO) != false
endfunction
function N_s takes nothing returns nothing
    set yS = SJw(bj_mapInitialPlayableArea, Player(PLAYER_NEUTRAL_AGGRESSIVE))
    call ForGroupBJ(yS, Olw)
    call DestroyGroup(yS)
    set yS = SJw(bj_mapInitialPlayableArea, Player(PLAYER_NEUTRAL_AGGRESSIVE))
    call ForGroupBJ(yS, llw)
    call DestroyGroup(yS)
endfunction
function mVs takes nothing returns boolean
    return UnitInventoryCount(GetTriggerUnit()) != 6
endfunction
function Nei takes nothing returns nothing
    if mVs() then
        call PlaySoundBJ(ce)
        set lw[GetPlayerId(GetOwningPlayer(GetTriggerUnit()))] = 1227895088
        call TriggerExecute(ow)
        call DisplayTextToForce(MwS(GetOwningPlayer(GetTriggerUnit())), "|cffffcc00Naisha|r : |cff87ceebWell done. Here is your letter of recommendation.")
        call QuestSetDescription(Lr[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))], "I have it! I have the recommendation! Now to get back to my Class Trainer...")
    else
        call PlaySoundBJ(oe)
        call DisplayTimedTextToForce(MwS(GetOwningPlayer(GetTriggerUnit())), 7., "|cffff0000Inventory full! Cannot receive recommendation!|r")
    endif
endfunction
function Nfi takes nothing returns nothing
    call SetUnitInvulnerable(GetEnumUnit(), true)
    call PauseUnit(GetEnumUnit(), true)
endfunction
function Nfu takes nothing returns boolean
    return (GetItemTypeId(GetManipulatedItem()) == 1227895889 and IsUnitType(GetTriggerUnit(), UNIT_TYPE_HERO) and IsPlayerInForce(GetOwningPlayer(GetTriggerUnit()), Uo[$00000001]) == false and Zo[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))] == 0) != false
endfunction
function Ngs takes nothing returns boolean
    return GetUnitTypeId(GetTriggerUnit()) == 1211117639 and GetUnitTypeId(GetOrderTargetUnit()) == 1747988820 and IsPlayerInForce(GetOwningPlayer(GetTriggerUnit()), Kr) and IsPlayerInForce(GetOwningPlayer(GetTriggerUnit()), Cr) == false and IsUnitInGroup(GetTriggerUnit(), kpu(300., GetUnitLoc(GetOrderTargetUnit())))
endfunction
function Njs takes nothing returns boolean
    return IsPlayerInForce(GetTriggerPlayer(), At) and IsPlayerInForce(GetTriggerPlayer(), mt) == false and IsPlayerInForce(GetTriggerPlayer(), Lt) == false
endfunction
function Csi takes nothing returns boolean
    return lO <= 75
endfunction
function DNs takes nothing returns boolean
    return RectContainsUnit(bb, yO)
endfunction
function F6i takes nothing returns boolean
    return lO <= 75
endfunction
function HKt takes nothing returns boolean
    return OO <= 10
endfunction
function HTS takes nothing returns boolean
    return RectContainsUnit(lb, yO)
endfunction
function IDr takes nothing returns boolean
    return lO <= 75
endfunction
function IMw takes nothing returns boolean
    return lO <= 75
endfunction
function Ist takes nothing returns boolean
    return lO <= 75
endfunction
function JKt takes nothing returns boolean
    return OO >= 80
endfunction
function LNs takes nothing returns boolean
    return OO >= 80
endfunction
function NVw takes nothing returns boolean
    return RectContainsUnit(cb, yO)
endfunction
function Nru takes nothing returns boolean
    return lO <= 75
endfunction
function REi takes nothing returns boolean
    return lO <= 30
endfunction
function Scu takes nothing returns boolean
    return RectContainsUnit(ob, yO)
endfunction
function UKr takes nothing returns boolean
    return OO <= 10
endfunction
function Y5S takes nothing returns boolean
    return bO[1 + GetPlayerId(uO)] >= 5
endfunction
function Y6w takes nothing returns boolean
    return OO <= 10
endfunction
function bEu takes nothing returns boolean
    return OO >= 80
endfunction
function bst takes nothing returns boolean
    return lO <= 75
endfunction
function cci takes nothing returns boolean
    return lO <= 30
endfunction
function cii takes nothing returns boolean
    return RectContainsUnit(Ob, yO)
endfunction
function dau takes nothing returns boolean
    return OO <= 20
endfunction
function f7s takes nothing returns boolean
    return OO >= 80
endfunction
function gRr takes nothing returns boolean
    return lO <= 75
endfunction
function jTS takes nothing returns boolean
    return lO <= 75
endfunction
function nYt takes nothing returns boolean
    return lO <= 75
endfunction
function oSt takes nothing returns boolean
    return OO >= 70
endfunction
function pFi takes nothing returns boolean
    return lO <= 30
endfunction
function H7t takes item U7t, integer I7t, integer P7t, string A7t returns integer
    local integer D7t
    set DSw[ASw] = A7t
    set ASw = ASw + 1
    if Jyr(C_r(RI, P7t, "when calling get in Items_Pickup_Drop, line 732"), Xdu(U7t), "when calling has in Items_Pickup_Drop, line 732") and wps(C_r(RI, P7t, "when calling get in Items_Pickup_Drop, line 732"), Xdu(U7t), "when calling get in Items_Pickup_Drop, line 732") + I7t >= 0 then
        call GVw(C_r(RI, P7t, "when calling get in Items_Pickup_Drop, line 733"), Xdu(U7t), wps(C_r(RI, P7t, "when calling get in Items_Pickup_Drop, line 733"), Xdu(U7t), "when calling get in Items_Pickup_Drop, line 733") + I7t, "when calling put in Items_Pickup_Drop, line 733")
    elseif I7t > 0 then
        call GVw(C_r(RI, P7t, "when calling get in Items_Pickup_Drop, line 735"), Xdu(U7t), I7t, "when calling put in Items_Pickup_Drop, line 735")
    else
        call GVw(C_r(RI, P7t, "when calling get in Items_Pickup_Drop, line 737"), Xdu(U7t), $00000000, "when calling put in Items_Pickup_Drop, line 737")
    endif
    set D7t = wps(C_r(RI, P7t, "when calling get in Items_Pickup_Drop, line 739"), Xdu(U7t), "when calling get in Items_Pickup_Drop, line 739")
    set ASw = ASw - 1
    return D7t
endfunction
function qas takes unit uas, integer ras, integer sas, string tas returns nothing
    local item ias
    local integer Sas
    local player cas
    local real oas
    local real Oas
    local item las
    local item bas
    local integer yas
    local real pas
    local real eas
    set DSw[ASw] = tas
    set ASw = ASw + 1
    set Sas = hgr(eDs(uas))
    set cas = eDs(uas)
    set pas = ANw(uas)
    set eas = XSw
    set oas = pas
    set Oas = eas
    call vwt(Zx, Sas, "when calling add in Fishing, line 259")
    if c8w(uas, ras) then
        set ias = uwr(uas, ras)
    else
        set las = CreateItem(ras, oas, Oas)
        call IOt(las, cas, true)
        set bas = las
        call Rnu(bas, $00000000)
        set ias = bas
        call vwt(px, Xdu(ias), "when calling add in Fishing, line 266")
        call GVw(ex, Xdu(ias), Sas, "when calling put in Fishing, line 267")
        call UQs(uas, ias)
    endif
    call GVw(ex, Xdu(ias), Sas, "when calling put in Fishing, line 271")
    set yas = sas
    if yas <= 0 then
        call tdu(ias)
    else
        call Rnu(ias, H7t(ias, yas, Sas, "when calling addChargesVirtualForFishing in Fishing, line 287"))
    endif
    call eys(Zx, Sas, "when calling remove in Fishing, line 288")
    set ASw = ASw - 1
    set ias = null
    set cas = null
    set las = null
    set bas = null
endfunction
function qhs takes nothing returns boolean
    return OO <= 10
endfunction
function vSr takes nothing returns boolean
    return lO <= 30
endfunction
function q8S takes string y8S returns nothing
    local unit p8S
    local unit e8S
    set DSw[ASw] = y8S
    set ASw = ASw + 1
    call TriggerExecute(Yu)
    set p8S = hqs(xMi(tOS(GetTriggerPlayer(), "when calling getCustomPlayer in Fishing, line 16"), "when calling getCHero in Fishing, line 16"), "when calling getHero in Fishing, line 16")
    set yO = p8S
    if NVw() then
        set OO = GetRandomInt($00000001, $00000064)
        set lO = GetRandomInt($00000001, $00000064)
        if HKt() then
            call DisplayTimedTextToForce(MwS(uO), 5., "|cffff8c00You got lucky and caught 3 fishes in one overhaul!|r")
            if IDr() then
    set oO = 2 * 3
    call qas(p8S, $49303541, $00000003, "when calling giveFish in Fishing, line 25")
            else
    set oO = 1 * 3
    call qas(p8S, $49303530, $00000003, "when calling giveFish in Fishing, line 28")
            endif
        elseif LNs() then
            call DisplayTimedTextToForce(MwS(uO), 5., "|cffff8c00You got lucky and caught 2 fishes in one overhaul!|r")
            if gRr() then
    set oO = 2 * 3
    call qas(p8S, $49303541, $00000002, "when calling giveFish in Fishing, line 34")
            else
    set oO = 1 * 3
    call qas(p8S, $49303530, $00000002, "when calling giveFish in Fishing, line 37")
            endif
        elseif pFi() then
            set oO = 2 * 3
            call qas(p8S, $49303541, $00000001, "when calling giveFish in Fishing, line 41")
        else
            set oO = 3 * 3
            call qas(p8S, $49303531, $00000001, "when calling giveFish in Fishing, line 44")
        endif
    elseif Scu() then
        set OO = GetRandomInt($00000001, $00000064)
        set lO = GetRandomInt($00000001, $00000064)
        if Y6w() then
            call DisplayTimedTextToForce(MwS(uO), 5., "|cffff8c00You got lucky and caught 3 fishes in one overhaul!|r")
            if bst() then
    set oO = 4 * 3
    call qas(p8S, $49303537, $00000003, "when calling giveFish in Fishing, line 53")
            else
    set oO = 3 * 3
    call qas(p8S, $49303531, $00000003, "when calling giveFish in Fishing, line 56")
            endif
        elseif bEu() then
            call DisplayTimedTextToForce(MwS(uO), 5., "|cffff8c00You got lucky and caught 2 fishes in one overhaul!|r")
            if jTS() then
    set oO = 4 * 3
    call qas(p8S, $49303537, $00000002, "when calling giveFish in Fishing, line 62")
            else
    set oO = 3 * 3
    call qas(p8S, $49303531, $00000002, "when calling giveFish in Fishing, line 65")
            endif
        elseif vSr() then
            set oO = 4 * 3
            call qas(p8S, $49303537, $00000001, "when calling giveFish in Fishing, line 69")
        else
            set oO = 5 * 3
            call qas(p8S, $49303538, $00000001, "when calling giveFish in Fishing, line 72")
        endif
    elseif cii() then
        set OO = GetRandomInt($00000001, $00000064)
        set lO = GetRandomInt($00000001, $00000064)
        if qhs() then
            call DisplayTimedTextToForce(MwS(uO), 5., "|cffff8c00You got lucky and caught 3 fishes in one overhaul!|r")
            if Ist() then
    set oO = 6 * 3
    call qas(p8S, $49303533, $00000003, "when calling giveFish in Fishing, line 83")
            else
    set oO = 5 * 3
    call qas(p8S, $49303538, $00000003, "when calling giveFish in Fishing, line 86")
            endif
        elseif JKt() then
            call DisplayTimedTextToForce(MwS(uO), 5., "|cffff8c00You got lucky and caught 2 fishes in one overhaul!|r")
            if IMw() then
    set oO = 6 * 3
    call qas(p8S, $49303533, $00000002, "when calling giveFish in Fishing, line 92")
            else
    set oO = 5 * 3
    call qas(p8S, $49303538, $00000002, "when calling giveFish in Fishing, line 95")
            endif
        elseif cci() then
            set oO = 6 * 3
            call qas(p8S, $49303533, $00000001, "when calling giveFish in Fishing, line 99")
        else
            set oO = 7 * 3
            call qas(p8S, $49303536, $00000001, "when calling giveFish in Fishing, line 102")
        endif
    elseif HTS() then
        set OO = GetRandomInt($00000001, $00000064)
        set lO = GetRandomInt($00000001, $00000064)
        if UKr() then
            call DisplayTimedTextToForce(MwS(uO), 5., "|cffff8c00You got lucky and caught 3 fishes in one overhaul!|r")
            if nYt() then
    set oO = 8 * 3
    call qas(p8S, $49303535, $00000003, "when calling giveFish in Fishing, line 113")
            else
    set oO = 7 * 3
    call qas(p8S, $49303536, $00000003, "when calling giveFish in Fishing, line 116")
            endif
        elseif f7s() then
            call DisplayTimedTextToForce(MwS(uO), 5., "|cffff8c00You got lucky and caught 2 fishes in one overhaul!|r")
            if F6i() then
    set oO = 8 * 3
    call qas(p8S, $49303535, $00000002, "when calling giveFish in Fishing, line 122")
            else
    set oO = 7 * 3
    call qas(p8S, $49303536, $00000002, "when calling giveFish in Fishing, line 125")
            endif
        elseif REi() then
            set oO = 8 * 3
            call qas(p8S, $49303535, $00000002, "when calling giveFish in Fishing, line 129")
        else
            set oO = 9 * 3
            call qas(p8S, $49303539, $00000002, "when calling giveFish in Fishing, line 132")
        endif
    elseif DNs() then
        set bO[1 + GetPlayerId(uO)] = bO[1 + GetPlayerId(uO)] + 1
        if Y5S() then
            set bO[1 + GetPlayerId(uO)] = 0
            call DisplayTimedTextToForce(bj_FORCE_ALL_PLAYERS, 10., "|cffffcc00" + GetPlayerName(uO) + "|r has lured a Flying Wish Fish from the depths!")
            set pO = GetRectCenter(yb)
            set e8S = dps(Player(PLAYER_NEUTRAL_AGGRESSIVE), $6E30325A, oQu(yb), Gcw, 0.)
            call GVw(dQ, Aei(e8S), hgr(uO), "when calling put in Fishing, line 142")
            call RemoveLocation(pO)
            set ASw = ASw - 1
            set p8S = null
            set e8S = null
            return
        endif
        set OO = GetRandomInt($00000001, $00000064)
        set lO = GetRandomInt($00000001, $00000064)
        if dau() then
            call DisplayTimedTextToForce(MwS(uO), 5., "|cffff8c00You got lucky and caught 3 fishes in one overhaul!|r")
            if Nru() then
    set oO = 10 * 3
    call qas(p8S, $49303532, $00000003, "when calling giveFish in Fishing, line 155")
            else
    set oO = 9 * 3
    call qas(p8S, $49303539, $00000003, "when calling giveFish in Fishing, line 158")
            endif
        elseif oSt() then
            call DisplayTimedTextToForce(MwS(uO), 5., "|cffff8c00You got lucky and caught 2 fishes in one overhaul!|r")
            if Csi() then
    set oO = 10 * 3
    call qas(p8S, $49303532, $00000002, "when calling giveFish in Fishing, line 163")
            else
    set oO = 9 * 3
    call qas(p8S, $49303539, $00000002, "when calling giveFish in Fishing, line 166")
            endif
        else
            set oO = 10 * 3
            call qas(p8S, $49303532, $00000001, "when calling giveFish in Fishing, line 169")
        endif
    endif
    set ASw = ASw - 1
    set p8S = null
    set e8S = null
endfunction
function NkS takes nothing returns nothing
    set ASw = 0
    call q8S("via function reference Fishing, line 299")
endfunction
function bAr takes string OAr returns integer
    local integer lAr
    set DSw[ASw] = OAr
    set ASw = ASw + 1
    if rC == 0 then
        if sC < 32768 then
            set sC = sC + 1
            set lAr = sC
            set tC[lAr] = 666
        else
            call tNr("Out of memory: Could not create CallbackCounted_doPeriodicallyTimed_FateDestinyUnlocker.", "when calling error in FateDestinyUnlocker, line 524")
            set lAr = 0
        endif
    else
        set rC = rC - 1
        set lAr = uC[rC]
        set tC[lAr] = 666
    endif
    set ASw = ASw - 1
    return lAr
endfunction
function Ioi takes string Goi returns nothing
    local string goi
    local real hoi
    local real Foi
    local real koi
    local real joi
    local real xoi
    local integer voi
    local real moi
    local real Qoi
    local real Woi
    local real Eoi
    local real Zoi
    local real Uoi
    set DSw[ASw] = Goi
    set ASw = ASw + 1
    set goi = Iji("Abilities\Spells\Human\Flare\FlareTarget.mdl", "when calling unObfuscate in FateDestinyUnlocker, line 518")
    set hoi = 750.
    set Foi = 0.3
    set koi = 15.0
    set Woi = 12022.
    set Eoi = 6145.
    set joi = Woi
    set xoi = Eoi
    set moi = Foi
    set Qoi = koi
    set voi = bAr("when calling alloc_CallbackCounted_doPeriodicallyTimed_FateDestinyUnlocker in FateDestinyUnlocker, line 524")
    call Inr(voi)
    set c7[voi] = hoi
    set o7[voi] = goi
    set Zoi = joi
    set Uoi = xoi
    set O7[voi] = Zoi
    set l7[voi] = Uoi
    call UYt(moi, Qoi, voi, "when calling doPeriodicallyTimed in FateDestinyUnlocker, line 524")
    set ASw = ASw - 1
endfunction
function QgS takes string vgS returns integer
    local integer mgS
    set DSw[ASw] = vgS
    set ASw = ASw + 1
    if NX == 0 then
        if MX < 32768 then
            set MX = MX + 1
            set mgS = MX
            set wC[mgS] = 813
        else
            call tNr("Out of memory: Could not create CallbackSingle_doAfter_FateDestinyUnlocker.", "when calling error in FateDestinyUnlocker, line 544")
            set mgS = 0
        endif
    else
        set NX = NX - 1
        set mgS = BX[NX]
        set wC[mgS] = 813
    endif
    set ASw = ASw - 1
    return mgS
endfunction
function TLs takes string fLs returns integer
    local integer RLs
    set DSw[ASw] = fLs
    set ASw = ASw + 1
    if NX == 0 then
        if MX < 32768 then
            set MX = MX + 1
            set RLs = MX
            set wC[RLs] = 814
        else
            call tNr("Out of memory: Could not create CallbackSingle_doAfter_FateDestinyUnlocker.", "when calling error in FateDestinyUnlocker, line 553")
            set RLs = 0
        endif
    else
        set NX = NX - 1
        set RLs = BX[NX]
        set wC[RLs] = 814
    endif
    set ASw = ASw - 1
    return RLs
endfunction
function Xrr takes string Drr returns nothing
    local player Hrr
    local integer Jrr
    local integer Krr
    local integer Lrr
    set DSw[ASw] = Drr
    set ASw = ASw + 1
    set Hrr = GetTriggerPlayer()
    set Jrr = hgr(Hrr)
    if GpS(wm, Jrr, "when calling has in FateDestinyUnlocker, line 537") then
        if nD == Hrr then
            call ClearTextMessages()
        endif
    endif
    call Ioi("when calling playTheDevGardenFireWork in FateDestinyUnlocker, line 542")
    set Krr = QgS("when calling alloc_CallbackSingle_doAfter_FateDestinyUnlocker in FateDestinyUnlocker, line 544")
    call RUs(Krr)
    set b7[Krr] = Jrr
    set y7[Krr] = Hrr
    call Ybr(15., Krr, "when calling doAfter in FateDestinyUnlocker, line 544")
    set Lrr = TLs("when calling alloc_CallbackSingle_doAfter_FateDestinyUnlocker in FateDestinyUnlocker, line 553")
    call RUs(Lrr)
    call Ybr(20., Lrr, "when calling doAfter in FateDestinyUnlocker, line 553")
    set ASw = ASw - 1
    set Hrr = null
endfunction
function LTs takes hashtable HTs, integer JTs, integer KTs returns dialog
    return LoadDialogHandle(HTs, JTs, KTs)
endfunction
function pDi takes integer bDi, integer yDi returns dialog
    return LTs(qJ, bDi, yDi)
endfunction
function Vli takes integer Kli, integer Lli, string Xli returns dialog
    local dialog Cli
    set DSw[ASw] = Xli
    set ASw = ASw + 1
    if vB[Kli] == 0 then
        if Kli == 0 then
            call tNr("Nullpointer exception when calling Table.loadDialog", "when calling error in Table, line 171")
        else
            call tNr("Called Table.loadDialog on invalid object.", "when calling error in Table, line 171")
        endif
    endif
    set Cli = pDi(Kli, Lli)
    set ASw = ASw - 1
    set DIw = Cli
    set Cli = null
    return DIw
endfunction
function hGi takes integer YGi, string GGi returns dialog
    local dialog gGi
    set DSw[ASw] = GGi
    set ASw = ASw + 1
    call nfS(ZJ, $00000000, ConvertFogState(YGi), "when calling saveFogState in TypeCasting, line 158")
    set gGi = Vli(ZJ, $00000000, "when calling loadDialog in TypeCasting, line 159")
    set ASw = ASw - 1
    set JIw = gGi
    set gGi = null
    return JIw
endfunction
function OHt takes string cHt returns nothing
    local integer oHt
    set DSw[ASw] = cHt
    set ASw = ASw + 1
    set oHt = hgr(GetTriggerPlayer())
    if Jyr(rm, oHt, "when calling has in FateDestinyUnlocker, line 638") then
        call DialogDestroy(hGi(wps(rm, oHt, "when calling get in FateDestinyUnlocker, line 639"), "when calling dialogFromIndex in FateDestinyUnlocker, line 639"))
        call klS(rm, oHt, "when calling remove in FateDestinyUnlocker, line 640")
    endif
    call Xrr("when calling playerReachedDestinyInDevGardenCleanup in FateDestinyUnlocker, line 641")
    set ASw = ASw - 1
endfunction
function Nks takes nothing returns nothing
    set ASw = 0
    call OHt("via function reference FateDestinyUnlocker, line 636")
endfunction
function Nku takes nothing returns nothing
    if GetItemPlayer(GetEnumItem()) == GetTriggerPlayer() then
        call tdu(GetEnumItem())
    endif
endfunction
function TMu takes nothing returns boolean
    return UnitInventoryCount(GetTriggerUnit()) != 6
endfunction
function NrS takes nothing returns nothing
    if TMu() then
        call PlaySoundBJ(ce)
        set lw[GetPlayerId(GetOwningPlayer(GetTriggerUnit()))] = 1227895089
        call TriggerExecute(ow)
        call DisplayTextToForce(MwS(GetOwningPlayer(GetTriggerUnit())), "|cffffcc00Eva of the High Council|r : |cff87ceebNicely done. You have the makings of a powerful High Templar...Here's your letter of recommendation.")
        call QuestSetDescription(Lr[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))], "I have it! I have the recommendation! Now to get back to my Class Trainer...")
    else
        call PlaySoundBJ(oe)
        call DisplayTimedTextToForce(MwS(GetOwningPlayer(GetTriggerUnit())), 7., "|cffff0000Inventory full! Cannot receive recommendation!|r")
    endif
endfunction
function Nts takes nothing returns nothing
    set ASw = 0
    call BWr("via function reference JobAdvancementQuestHandler, line 999")
endfunction
function jTi takes player kTi returns integer
    return hgr(kTi)
endfunction
function CSs takes string LSs returns boolean
    local boolean XSs
    set DSw[ASw] = LSs
    set ASw = ASw + 1
    set XSs = t_u(GetTriggerUnit()) and(not GpS(hQ, jTi(eDs(GetTriggerUnit())), "when calling has in RespawnHeroesEnterReg, line 32")) and GpS(gQ, hgr(eDs(GetTriggerUnit())), "when calling has in RespawnHeroesEnterReg, line 33")
    set ASw = ASw - 1
    return XSs
endfunction
function NyS takes nothing returns boolean
    set ASw = 0
    return CSs("via function reference RespawnHeroesEnterReg, line 74")
endfunction
function O0t takes nothing returns nothing
    set pS[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))] = GetTriggerUnit()
    call SetPlayerStateBJ(GetOwningPlayer(pS[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))]), PLAYER_STATE_RESOURCE_FOOD_USED, $00000000)
    set eS[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))] = GetSpellTargetUnit()
    set qS[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))] = GetUnitLoc(GetTriggerUnit())
    set aS[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))] = GetUnitLoc(GetSpellTargetUnit())
    call PauseUnit(pS[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))], true)
    call PauseUnit(eS[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))], true)
    call SetUnitInvulnerable(pS[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))], true)
    call SetUnitInvulnerable(eS[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))], true)
    set nS[$00000001] = Shu(qS[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))], 600., 90.)
    set nS[$00000002] = Shu(qS[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))], 600., 160.)
    set nS[$00000003] = Shu(qS[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))], 600., 235.)
    set nS[$00000004] = Shu(qS[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))], 600., 305.)
    set nS[$00000005] = Shu(qS[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))], 600., 20.)
    call AddLightningLoc("DRAM", nS[$00000001], nS[$00000003])
    set dS[$00000001] = bj_lastCreatedLightning
    call AddLightningLoc("DRAM", nS[$00000005], nS[$00000003])
    set dS[$00000002] = bj_lastCreatedLightning
    call AddLightningLoc("DRAM", nS[$00000005], nS[$00000002])
    set dS[$00000003] = bj_lastCreatedLightning
    call AddLightningLoc("DRAM", nS[$00000002], nS[$00000004])
    set dS[$00000004] = bj_lastCreatedLightning
    call AddLightningLoc("DRAM", nS[$00000004], nS[$00000001])
    set dS[$00000005] = bj_lastCreatedLightning
    call AddLightningLoc("DRAM", nS[$00000001], nS[$00000003])
    set dS[$00000006] = bj_lastCreatedLightning
    call AddLightningLoc("DRAM", nS[$00000005], nS[$00000003])
    set dS[$00000007] = bj_lastCreatedLightning
    call AddLightningLoc("DRAM", nS[$00000005], nS[$00000002])
    set dS[$00000008] = bj_lastCreatedLightning
    call AddLightningLoc("DRAM", nS[$00000002], nS[$00000004])
    set dS[$00000009] = bj_lastCreatedLightning
    call AddLightningLoc("DRAM", nS[$00000004], nS[$00000001])
    set dS[$0000000A] = bj_lastCreatedLightning
    call n6t(.5)
    call SetUnitAnimation(pS[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))], "spell")
    call n6t(.1)
    call AddSpecialEffectLocBJ(qS[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))], "Abilities\\Spells\\Orc\\WarStomp\\WarStompCaster.mdl")
    call DestroyEffect(bj_lastCreatedEffect)
    call CreateTextTagUnitBJ("LIMIT BREAK!!!", pS[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))], 0., 15., 100., .0, .0, 0.)
    set fS[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))] = bj_lastCreatedTextTag
    call n6t(2.5)
    set Cc = 1
    loop
        exitwhen Cc > 10
        call DestroyLightning(dS[Cc])
        set Cc = Cc + 1
    endloop
    call DestroyTextTag(fS[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))])
    call TriggerSleepAction(.2)
    call CreateTextTagUnitBJ("ENERGY RUSH!!!", pS[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))], 0., 15., 100., .0, .0, 0.)
    call SetTextTagVelocityBJ(bj_lastCreatedTextTag, 64., 90.)
    call SetTextTagPermanentBJ(bj_lastCreatedTextTag, false)
    call SetTextTagFadepointBJ(bj_lastCreatedTextTag, 1.5)
    call SetTextTagLifespanBJ(bj_lastCreatedTextTag, 3.)
    call SetUnitAnimation(pS[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))], "attack")
    call SetUnitTimeScalePercent(pS[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))], 25.)
    call CreateNUnitsAtLoc($00000001, $68303341, GetOwningPlayer(pS[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))]), qS[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))], 270.)
    set RS[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))] = bj_lastCreatedUnit
    call SetUnitTimeScalePercent(bj_lastCreatedUnit, 10.)
    call TriggerSleepAction(.4)
    call SetUnitScalePercent(RS[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))], 120., 140., 140.)
    call TriggerSleepAction(.4)
    call SetUnitScalePercent(RS[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))], 140., 180., 180.)
    call TriggerSleepAction(.4)
    call SetUnitScalePercent(RS[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))], 160., 220., 220.)
    call TriggerSleepAction(.4)
    call SetUnitScalePercent(RS[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))], 180., 260., 260.)
    call TriggerSleepAction(.4)
    call SetUnitScalePercent(RS[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))], 200., 300., 300.)
    call TriggerSleepAction(.4)
    call ExplodeUnitBJ(RS[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))])
    call AddSpecialEffectTargetUnitBJ("right hand", pS[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))], "Abilities\\Weapons\\FarseerMissile\\FarseerMissile.mdl")
    set TS[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))] = bj_lastCreatedEffect
    call SetUnitTimeScalePercent(pS[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))], 100.)
    call CreateNUnitsAtLocFacingLocBJ($00000001, $68303344, GetOwningPlayer(pS[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))]), qS[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))], aS[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))])
    call UnitApplyTimedLifeBJ(3., $42544C46, bj_lastCreatedUnit)
    call TriggerSleepAction(.15)
    call DestroyEffect(TS[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))])
    call SetUnitInvulnerable(pS[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))], false)
    call SetUnitInvulnerable(eS[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))], false)
    call UnitDamageTargetBJ(pS[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))], eS[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))], 45000., ATTACK_TYPE_CHAOS, DAMAGE_TYPE_UNIVERSAL)
    call GetPlayerId(GetOwningPlayer(GetTriggerUnit()))
    set gi = eS[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))]
    set hi = 1
    set Fi = qS[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))]
    set ki = 15.
    set ji = 600.
    set xi[$00000001] = "Abilities\\Spells\\Human\\FlakCannons\\FlakTarget.mdl"
    set xi[$00000002] = "Abilities\\Weapons\\AncientProtectorMissile\\AncientProtectorMissile.mdl"
    set vi = false
    call ConditionalTriggerExecute(dT)
    call RemoveUnit(RS[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))])
    call PauseUnit(pS[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))], false)
    call PauseUnit(eS[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))], false)
    call ResetUnitAnimation(pS[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))])
    call ResetUnitAnimation(eS[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))])
    call RemoveLocation(qS[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))])
    call RemoveLocation(aS[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))])
endfunction
function O6i takes nothing returns nothing
    call PanCameraToTimedLocForPlayer(GetEnumPlayer(), vo, 0.)
    call TriggerExecute(MT)
endfunction
function xxs takes string kxs returns integer
    local integer jxs
    set DSw[ASw] = kxs
    set ASw = ASw + 1
    if NX == 0 then
        if MX < 32768 then
            set MX = MX + 1
            set jxs = MX
            set wC[jxs] = 1008
        else
            call tNr("Out of memory: Could not create CallbackSingle_doAfter_addAction_JobAdvancementQuestHandler.", "when calling error in JobAdvancementQuestHandler, line 818")
            set jxs = 0
        endif
    else
        set NX = NX - 1
        set jxs = BX[NX]
        set wC[jxs] = 1008
    endif
    set ASw = ASw - 1
    return jxs
endfunction
function lJw takes string oJw returns nothing
    local integer OJw
    set DSw[ASw] = oJw
    set ASw = ASw + 1
    set nu = true
    if GetTriggerEventId() == EVENT_PLAYER_UNIT_PICKUP_ITEM then
        set OJw = xxs("when calling alloc_CallbackSingle_doAfter_addAction_JobAdvancementQuestHandler in JobAdvancementQuestHandler, line 818")
        call RUs(OJw)
        call Ybr(.1, OJw, "when calling doAfter in JobAdvancementQuestHandler, line 818")
    endif
    set ASw = ASw - 1
endfunction
function O9u takes nothing returns nothing
    set ASw = 0
    call lJw("via function reference JobAdvancementQuestHandler, line 815")
endfunction
function OBr takes nothing returns nothing
    call DisableTrigger(GetTriggeringTrigger())
endfunction
function OGt takes nothing returns boolean
    return GetUnitTypeId(GetDyingUnit()) == 1848652089 and UnitHasItemOfTypeBJ(GetKillingUnit(), $49303133) == false and IsPlayerInForce(GetOwningPlayer(GetKillingUnit()), Rs)
endfunction
function OGu takes nothing returns nothing
    call PanCameraToTimedLocForPlayer(GetEnumPlayer(), vo, 0.)
endfunction
function OLu takes nothing returns boolean
    return IsUnitType(GetFilterUnit(), UNIT_TYPE_HERO) != false
endfunction
function OMu takes nothing returns boolean
    local trigger rMu
    local trigger sMu
    local trigger tMu
    local trigger iMu
    local trigger SMu
    local trigger cMu
    local trigger oMu
    set iD = "Moves with unbelievable speed to the target, dealing universal damage equal to <Damage> and returns to the original position. \n" + "|cffff0000Damage cannot exceed more than 400,000.|r\n|cffffcc00Consumes 3 Power Shards (not in PvP).|r"
    set rMu = CreateTrigger()
    call l2w(rMu, EVENT_PLAYER_HERO_LEVEL)
    set sMu = rMu
    call l2w(sMu, EVENT_PLAYER_HERO_SKILL)
    set tMu = sMu
    call l2w(tMu, EVENT_PLAYER_UNIT_DROP_ITEM)
    set iMu = tMu
    call l2w(iMu, EVENT_PLAYER_UNIT_PICKUP_ITEM)
    set SMu = iMu
    call QYr(SMu, sF, null)
    set cMu = SMu
    call dUs(cMu, Condition(eWw))
    set oMu = cMu
    call B2S(oMu, qWw)
    set rMu = null
    set sMu = null
    set tMu = null
    set iMu = null
    set SMu = null
    set cMu = null
    set oMu = null
    return true
endfunction
function ONr takes nothing returns nothing
    call PanCameraToTimedLocForPlayer(GetEnumPlayer(), vo, 0.)
    call TriggerExecute(MT)
endfunction
function P6S takes nothing returns boolean
    return GetUnitTypeId(GetDyingUnit()) == 1848652120 or GetUnitTypeId(GetDyingUnit()) == 1848652113
endfunction
function sVr takes nothing returns boolean
    return GetUnitTypeId(GetKillingUnit()) == 1211117880 or GetUnitTypeId(GetKillingUnit()) == 1211117914 or GetUnitTypeId(GetKillingUnit()) == 1211117913
endfunction
function OSt takes nothing returns boolean
    return P6S() and IsPlayerInForce(GetOwningPlayer(GetKillingUnit()), rt) and sVr()
endfunction
function OUu takes nothing returns boolean
    return GetUnitTypeId(GetOrderTargetUnit()) == 1848652373 and IsUnitInGroup(GetTriggerUnit(), kpu(300., GetUnitLoc(GetOrderTargetUnit()))) and IsPlayerInForce(GetOwningPlayer(GetTriggerUnit()), IS[$0000000B]) and IsPlayerInForce(GetOwningPlayer(GetTriggerUnit()), dc[$00000002]) and IsPlayerInForce(GetOwningPlayer(GetTriggerUnit()), dc[$00000003]) == false
endfunction
function OVr takes nothing returns boolean
    return GetUnitTypeId(GetTriggerUnit()) == 1848651850 and GetUnitTypeId(GetKillingUnit()) == 1211117634 and IsPlayerInForce(GetOwningPlayer(GetKillingUnit()), nr)
endfunction
function O_u takes nothing returns nothing
    call SetItemUserData(GetSoldItem(), 1 + GetPlayerId(GetOwningPlayer(GetBuyingUnit())))
endfunction
function Gfu takes string Tfu returns integer
    local integer Yfu
    set DSw[ASw] = Tfu
    set ASw = ASw + 1
    if NX == 0 then
        if MX < 32768 then
            set MX = MX + 1
            set Yfu = MX
            set wC[Yfu] = 867
        else
            call tNr("Out of memory: Could not create CallbackSingle_doAfter_Imp3DragonFortress.", "when calling error in Imp3DragonFortress, line 1582")
            set Yfu = 0
        endif
    else
        set NX = NX - 1
        set Yfu = BX[NX]
        set wC[Yfu] = 867
    endif
    set ASw = ASw - 1
    return Yfu
endfunction
function KCu takes string DCu, framehandle HCu, integer JCu returns framehandle
    return BlzCreateSimpleFrame(DCu, HCu, JCu)
endfunction
function NEi takes framehandle LEi, integer XEi, integer CEi, integer VEi, integer BEi returns nothing
    call BlzFrameSetTextColor(LEi, BlzConvertColor(BEi, XEi, CEi, VEi))
endfunction
function Pvi takes string Uvi, integer Ivi returns framehandle
    return BlzGetFrameByName(Uvi, Ivi)
endfunction
function Wrt takes framehandle mrt, string Qrt returns nothing
    call BlzFrameSetText(mrt, Qrt)
endfunction
function d_u takes framehandle a_u, integer n_u returns nothing
    call BlzFrameSetLevel(a_u, n_u)
endfunction
function iOi takes string sOi returns integer
    local integer tOi
    set DSw[ASw] = sOi
    set ASw = ASw + 1
    if NX == 0 then
        if MX < 32768 then
            set MX = MX + 1
            set tOi = MX
            set wC[tOi] = 1098
        else
            call tNr("Out of memory: Could not create CallbackSingle_nullTimer_Imp3DragonFortress.", "when calling error in Imp3DragonFortress, line 1578")
            set tOi = 0
        endif
    else
        set NX = NX - 1
        set tOi = BX[NX]
        set wC[tOi] = 1098
    endif
    set ASw = ASw - 1
    return tOi
endfunction
function jjs takes string gjs, string hjs returns string
    local string Fjs
    local string kjs
    set DSw[ASw] = hjs
    set ASw = ASw + 1
    set Fjs = ""
    set kjs = gjs
    if kjs == "1" then
        set Fjs = "LEFT ARROW KEY <-"
    elseif kjs == "2" then
        set Fjs = "RIGHT ARROW KEY ->"
    elseif kjs == "3" then
        set Fjs = "UP ARROW KEY /\\"
    elseif kjs == "4" then
        set Fjs = "DOWN ARROW KEY \\/"
    else
        call tNr("Using wrong index for Arrow keys!", "when calling error in Imp3DragonFortress, line 1453")
    endif
    set ASw = ASw - 1
    return Fjs
endfunction
function p0s takes framehandle b0s, boolean y0s returns nothing
    call BlzFrameSetFocus(b0s, y0s)
endfunction
function rit takes framehandle uit returns nothing
    call BlzFrameSetVisible(uit, false)
endfunction
function rrS takes framehandle urS returns nothing
    call BlzFrameSetVisible(urS, true)
endfunction
function Owt takes player L_t, string X_t, string C_t returns nothing
    local framehandle V_t
    local framehandle B_t
    local framehandle N_t
    local framehandle M_t
    local framehandle wwt
    local framehandle uwt
    local framehandle rwt
    local framehandle swt
    local framehandle twt
    local framehandle iwt
    local framehandle Swt
    local integer cwt
    local integer owt
    set DSw[ASw] = C_t
    set ASw = ASw + 1
    if BW == null then
        set V_t = KCu("SimpleImp3ArrowHint", VW, $00000000)
        call d_u(V_t, $00000002)
        set BW = V_t
        call rit(BW)
        set NW = Pvi("Imp3ArrowHintContentText0", $00000000)
        set MW = Pvi("Imp3ArrowHintContentText1", $00000000)
        set wE = Pvi("Imp3ArrowHintContentText2", $00000000)
        set uE = Pvi("Imp3ArrowHintContentText3", $00000000)
        set rE = Pvi("Imp3ArrowHintContentText4", $00000000)
    endif
    if L_t == nD then
        set B_t = NW
        call Wrt(B_t, jjs(Dsi(X_t, $00000000), "when calling arrowGame_getArrowName in Imp3DragonFortress, line 1560"))
        set N_t = B_t
        call NEi(N_t, $000000FF, $00000000, $00000000, $000000FF)
        set M_t = MW
        call Wrt(M_t, jjs(Dsi(X_t, $00000001), "when calling arrowGame_getArrowName in Imp3DragonFortress, line 1561"))
        set wwt = M_t
        call NEi(wwt, $000000FF, $00000000, $00000000, $000000FF)
        set uwt = wE
        call Wrt(uwt, jjs(Dsi(X_t, $00000002), "when calling arrowGame_getArrowName in Imp3DragonFortress, line 1562"))
        set rwt = uwt
        call NEi(rwt, $000000FF, $00000000, $00000000, $000000FF)
        if PW then
            set swt = uE
            call Wrt(swt, jjs(Dsi(X_t, $00000003), "when calling arrowGame_getArrowName in Imp3DragonFortress, line 1564"))
            set twt = swt
            call NEi(twt, $000000FF, $00000000, $00000000, $000000FF)
            set iwt = rE
            call Wrt(iwt, jjs(Dsi(X_t, $00000004), "when calling arrowGame_getArrowName in Imp3DragonFortress, line 1565"))
            set Swt = iwt
            call NEi(Swt, $000000FF, $00000000, $00000000, $000000FF)
        endif
        call rrS(BW)
        if not PW then
            call rit(uE)
            call rit(rE)
        else
            call rrS(uE)
            call rrS(rE)
        endif
        call p0s(BW, true)
    endif
    set cwt = iOi("when calling alloc_CallbackSingle_nullTimer_Imp3DragonFortress in Imp3DragonFortress, line 1578")
    call RUs(cwt)
    set W9[cwt] = L_t
    call ccr(cwt, "when calling nullTimer in Imp3DragonFortress, line 1578")
    set owt = Gfu("when calling alloc_CallbackSingle_doAfter_Imp3DragonFortress in Imp3DragonFortress, line 1582")
    call RUs(owt)
    set E9[owt] = L_t
    call Ybr(8., owt, "when calling doAfter in Imp3DragonFortress, line 1582")
    set ASw = ASw - 1
    set V_t = null
    set B_t = null
    set N_t = null
    set M_t = null
    set wwt = null
    set uwt = null
    set rwt = null
    set swt = null
    set twt = null
    set iwt = null
    set Swt = null
endfunction
function Ojs takes string Mks returns nothing
    local integer wjs
    local integer ujs
    local integer rjs
    local player sjs
    local integer tjs
    local integer ijs
    local integer Sjs
    local string cjs
    local string ojs
    set DSw[ASw] = Mks
    set ASw = ASw + 1
    set wjs = GetRandomInt($00000001, $00000004)
    set ujs = GetRandomInt($00000001, $00000004)
    set rjs = GetRandomInt($00000001, $00000004)
    set sjs = GetEnumPlayer()
    set tjs = hgr(sjs)
    if PW then
        set ijs = GetRandomInt($00000001, $00000004)
        set Sjs = GetRandomInt($00000001, $00000004)
        set cjs = fju(wjs) + fju(ujs) + fju(rjs) + fju(ijs) + fju(Sjs)
        call GVw(mZ, tjs, err(cjs, "when calling stringToIndex in Imp3DragonFortress, line 1294"), "when calling put in Imp3DragonFortress, line 1294")
        call GVw(QZ, tjs, err("", "when calling stringToIndex in Imp3DragonFortress, line 1295"), "when calling put in Imp3DragonFortress, line 1295")
        call Owt(sjs, cjs, "when calling arrowGame_ShowHint in Imp3DragonFortress, line 1296")
    else
        set ojs = fju(wjs) + fju(ujs) + fju(rjs)
        call GVw(mZ, tjs, err(ojs, "when calling stringToIndex in Imp3DragonFortress, line 1300"), "when calling put in Imp3DragonFortress, line 1300")
        call GVw(QZ, tjs, err("", "when calling stringToIndex in Imp3DragonFortress, line 1301"), "when calling put in Imp3DragonFortress, line 1301")
        call Owt(sjs, ojs, "when calling arrowGame_ShowHint in Imp3DragonFortress, line 1302")
    endif
    set ASw = ASw - 1
    set sjs = null
endfunction
function OcS takes nothing returns nothing
    set ASw = 0
    call Ojs("via function reference Imp3DragonFortress, line 1283")
endfunction
function l1r takes string O1r returns boolean
    set DSw[ASw] = O1r
    set ASw = ASw + 1
    set YP = 5000
    set GP = "0aUb1GLwR2kHvP3CQIM4npFs5iSW6tzAr7TNxo8JXVjy9OcdEfBKgqeuYDhmlZ"
    set gP = jts("when calling new_HashMap in LZW, line 16")
    set hP = 0
    set ASw = ASw - 1
    return true
endfunction
function Oei takes nothing returns boolean
    set ASw = 0
    return l1r("via function reference LZW, line 1")
endfunction
function OlS takes nothing returns nothing
    set pS[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))] = GetTriggerUnit()
    call SetPlayerStateBJ(GetOwningPlayer(pS[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))]), PLAYER_STATE_RESOURCE_FOOD_USED, $00000000)
    set qS[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))] = GetUnitLoc(GetTriggerUnit())
    set YS[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))] = UFS(700., qS[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))], Condition(Yyw))
    call ForGroupBJ(YS[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))], Gyw)
    call PauseUnit(pS[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))], true)
    call SetUnitInvulnerable(pS[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))], true)
    set nS[$00000001] = Shu(qS[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))], 600., 90.)
    set nS[$00000002] = Shu(qS[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))], 600., 160.)
    set nS[$00000003] = Shu(qS[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))], 600., 235.)
    set nS[$00000004] = Shu(qS[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))], 600., 305.)
    set nS[$00000005] = Shu(qS[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))], 600., 20.)
    call AddLightningLoc("DRAM", nS[$00000001], nS[$00000003])
    set dS[$00000001] = bj_lastCreatedLightning
    call AddLightningLoc("DRAM", nS[$00000005], nS[$00000003])
    set dS[$00000002] = bj_lastCreatedLightning
    call AddLightningLoc("DRAM", nS[$00000005], nS[$00000002])
    set dS[$00000003] = bj_lastCreatedLightning
    call AddLightningLoc("DRAM", nS[$00000002], nS[$00000004])
    set dS[$00000004] = bj_lastCreatedLightning
    call AddLightningLoc("DRAM", nS[$00000004], nS[$00000001])
    set dS[$00000005] = bj_lastCreatedLightning
    call AddLightningLoc("DRAM", nS[$00000001], nS[$00000003])
    set dS[$00000006] = bj_lastCreatedLightning
    call AddLightningLoc("DRAM", nS[$00000005], nS[$00000003])
    set dS[$00000007] = bj_lastCreatedLightning
    call AddLightningLoc("DRAM", nS[$00000005], nS[$00000002])
    set dS[$00000008] = bj_lastCreatedLightning
    call AddLightningLoc("DRAM", nS[$00000002], nS[$00000004])
    set dS[$00000009] = bj_lastCreatedLightning
    call AddLightningLoc("DRAM", nS[$00000004], nS[$00000001])
    set dS[$0000000A] = bj_lastCreatedLightning
    call n6t(.5)
    call SetUnitAnimation(pS[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))], "spell")
    call SetUnitTimeScalePercent(pS[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))], 20.)
    call n6t(.1)
    call AddSpecialEffectLocBJ(qS[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))], "Abilities\\Spells\\Orc\\WarStomp\\WarStompCaster.mdl")
    call DestroyEffect(bj_lastCreatedEffect)
    call CreateTextTagUnitBJ("LIMIT BREAK!!!", pS[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))], 0., 15., 100., .0, .0, 0.)
    set fS[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))] = bj_lastCreatedTextTag
    call n6t(2.5)
    set Cc = 1
    loop
        exitwhen Cc > 10
        call DestroyLightning(dS[Cc])
        set Cc = Cc + 1
    endloop
    call DestroyTextTag(fS[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))])
    call n6t(.2)
    call CreateTextTagUnitBJ("CYBELE!!!", pS[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))], 0., 15., 100., .0, .0, 0.)
    call SetTextTagVelocityBJ(bj_lastCreatedTextTag, 64., 90.)
    call SetTextTagPermanentBJ(bj_lastCreatedTextTag, false)
    call SetTextTagFadepointBJ(bj_lastCreatedTextTag, 1.5)
    call SetTextTagLifespanBJ(bj_lastCreatedTextTag, 3.)
    call n6t(1.)
    set go = 1
    loop
        exitwhen go > 20
        call TriggerSleepAction(.05)
        set GS[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))] = GetRandomLocInRect(RectFromCenterSizeBJ(qS[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))], 700., 700.))
        call CreateNUnitsAtLoc($00000001, $68303342, GetOwningPlayer(pS[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))]), GS[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))], 270.)
        call RemoveLocation(GS[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))])
        set go = go + 1
    endloop
    call n6t(.1)
    call ForGroupBJ(YS[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))], gyw)
    call PauseUnit(pS[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))], false)
    call SetUnitInvulnerable(pS[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))], false)
    call SetUnitTimeScalePercent(pS[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))], 100.)
    call IssueImmediateOrderById(pS[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))], $000D0004)
    call RemoveLocation(qS[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))])
    call DestroyGroup(YS[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))])
endfunction
function Olu takes nothing returns boolean
    return GetSpellAbilityId() == HG
endfunction
function Ooi takes nothing returns nothing
    call ForceAddPlayer(bt[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))], GetOwningPlayer(GetEnumUnit()))
    call SetUnitInvulnerable(GetEnumUnit(), true)
    call PauseUnit(GetEnumUnit(), true)
endfunction
function Ori takes nothing returns boolean
    return GetSpellAbilityId() == 1093678901
endfunction
function Oru takes nothing returns nothing
    call ForceAddPlayer(rt, GetOwningPlayer(GetTriggerUnit()))
    call DisplayTextToForce(MwS(GetOwningPlayer(GetTriggerUnit())), "|cffffcc00Vanessa|r : |cff87ceebI have forseen your coming. It is good you have sought me out; I have much to teach you. But first, you must show me that you are worthy of instruction. Kill 80 Dark Elves and prove your worth.")
    call PlaySoundBJ(Se)
    call T_i(GetOwningPlayer(GetTriggerUnit()), $00000000, "4th Job Advancement Quest", "I have to kill 80 Dark Elves.", "ReplaceableTextures\\PassiveButtons\\PASBTNGenericSpellImmunity.blp")
    set st[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))] = bj_lastCreatedQuest
    set kt[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))] = 0
endfunction
function Qyu takes string myu returns boolean
    set DSw[ASw] = myu
    set ASw = ASw + 1
    set AF = jts("when calling new_HashMap in CustomLinkedListRegistry, line 17")
    set DF =- 1
    call jts("when calling new_HashMap in CustomLinkedListRegistry, line 48")
    set ASw = ASw - 1
    return true
endfunction
function Ott takes nothing returns boolean
    set ASw = 0
    return Qyu("via function reference CustomLinkedListRegistry, line 11")
endfunction
function U5S takes string E5S returns integer
    local integer Z5S
    set DSw[ASw] = E5S
    set ASw = ASw + 1
    if YC == 0 then
        if GC < 32768 then
            set GC = GC + 1
            set Z5S = GC
            set gC[Z5S] = 1139
        else
            call tNr("Out of memory: Could not create EventListener_add_DebugInfo.", "when calling error in DebugInfo, line 42")
            set Z5S = 0
        endif
    else
        set YC = YC - 1
        set Z5S = TC[YC]
        set gC[Z5S] = 1139
    endif
    set ASw = ASw - 1
    return Z5S
endfunction
function Tpr takes string qpr returns boolean
    local integer apr
    local trigger npr
    local trigger dpr
    local integer fpr
    local playerevent Rpr
    set DSw[ASw] = qpr
    set ASw = ASw + 1
    set Pj = 3
    set Aj = 3
    set Dj = 0
    set Hj = 0
    set Jj = 0
    set Kj = 0
    set Lj = 0
    set Xj = true
    set apr = 0
    loop
        exitwhen apr > 11
        set npr = CreateTrigger()
        call Ebs(npr, aD[apr], "-debug", true)
        set dpr = npr
        call B2S(dpr, Vvw)
        set apr = apr + 1
    endloop
    set Rpr = yh
    set fpr = U5S("when calling alloc_EventListener_add_DebugInfo in DebugInfo, line 42")
    call Gpr(fpr)
    call y0u(Rpr, fpr, "when calling add in DebugInfo, line 42")
    set ASw = ASw - 1
    set npr = null
    set dpr = null
    set Rpr = null
    return true
endfunction
function Ouu takes nothing returns boolean
    set ASw = 0
    return Tpr("via function reference DebugInfo, line 1")
endfunction
function Owi takes nothing returns nothing
    set Bs = GetRectCenter(Ep)
    call SetUnitPositionLocFacingBJ(GetTriggerUnit(), Bs, 180.)
    call PanCameraToTimedLocForPlayer(GetOwningPlayer(GetTriggerUnit()), Bs, 0.)
    call TriggerExecute(MT)
    call RemoveLocation(Bs)
endfunction
function Oxt takes nothing returns boolean
    return GetSpellAbilityId() == Uk or GetSpellAbilityId() == Ik or GetSpellAbilityId() == Pk
endfunction
function P1u takes nothing returns nothing
    local unit E1u = GetEnteringUnit()
    local player Z1u = eDs(E1u)
    local integer U1u = hgr(Z1u)
    local item I1u = GetEnumItem()
    if eP[U1u] != pP[U1u]then
        call jXt(I1u, false)
    endif
    set eP[U1u] = eP[U1u] + 1
    set E1u = null
    set Z1u = null
    set I1u = null
endfunction
function P1w takes nothing returns nothing
    call SetUnitPositionLoc(GetEnumUnit(), vo)
endfunction
function P6i takes nothing returns boolean
    return (GetItemTypeId(GetManipulatedItem()) == 1227895874 and IsUnitType(GetTriggerUnit(), UNIT_TYPE_HERO) and GetHeroLevel(GetTriggerUnit()) >= 65 and IsPlayerInForce(GetOwningPlayer(GetTriggerUnit()), IS[$0000000B]) == false) != false
endfunction
function RCt takes string dCt returns integer
    local integer fCt
    set DSw[ASw] = dCt
    set ASw = ASw + 1
    if NX == 0 then
        if MX < 32768 then
            set MX = MX + 1
            set fCt = MX
            set wC[fCt] = 958
        else
            call tNr("Out of memory: Could not create CallbackSingle_doAfter_Tooth_Effect.", "when calling error in Tooth_Effect, line 62")
            set fCt = 0
        endif
    else
        set NX = NX - 1
        set fCt = BX[NX]
        set wC[fCt] = 958
    endif
    set ASw = ASw - 1
    return fCt
endfunction
function OVw takes string cVw returns integer
    local integer oVw
    set DSw[ASw] = cVw
    set ASw = ASw + 1
    if NX == 0 then
        if MX < 32768 then
            set MX = MX + 1
            set oVw = MX
            set wC[oVw] = 961
        else
            call tNr("Out of memory: Could not create CallbackSingle_doAfter_UnitItemUtils.", "when calling error in UnitItemUtils, line 251")
            set oVw = 0
        endif
    else
        set NX = NX - 1
        set oVw = BX[NX]
        set wC[oVw] = 961
    endif
    set ASw = ASw - 1
    return oVw
endfunction
function hJs takes string GJs returns integer
    local integer gJs
    set DSw[ASw] = GJs
    set ASw = ASw + 1
    if rC == 0 then
        if sC < 32768 then
            set sC = sC + 1
            set gJs = sC
            set tC[gJs] = 668
        else
            call tNr("Out of memory: Could not create CallbackCounted_doPeriodicallyTimed_UnitItemUtils.", "when calling error in UnitItemUtils, line 243")
            set gJs = 0
        endif
    else
        set rC = rC - 1
        set gJs = uC[rC]
        set tC[gJs] = 668
    endif
    set ASw = ASw - 1
    return gJs
endfunction
function E1w takes unit n1w, unit d1w, real f1w, real R1w, real T1w, integer Y1w, integer G1w, string g1w returns nothing
    local integer h1w
    local integer F1w
    local real k1w
    local integer j1w
    local integer x1w
    local real v1w
    local real m1w
    local real Q1w
    local integer W1w
    set DSw[ASw] = g1w
    set ASw = ASw + 1
    set h1w = 0
    set F1w = aJi(f1w * 10.)
    set k1w = ModuloReal(f1w, 1.)
    if Y1w != 0 then
        call V5S(n1w, Y1w)
        call Fci(n1w, Y1w, $00000001)
    endif
    set v1w = R1w
    set m1w = f1w + 0.1
    set j1w = hJs("when calling alloc_CallbackCounted_doPeriodicallyTimed_UnitItemUtils in UnitItemUtils, line 243")
    call Inr(j1w)
    set Bsw[j1w] = h1w
    set Nsw[j1w] = d1w
    set Msw[j1w] = n1w
    set wtw[j1w] = T1w
    set utw[j1w] = F1w
    set rtw[j1w] = k1w
    call UYt(v1w, m1w, j1w, "when calling doPeriodicallyTimed in UnitItemUtils, line 243")
    set Q1w = f1w
    set x1w = OVw("when calling alloc_CallbackSingle_doAfter_UnitItemUtils in UnitItemUtils, line 251")
    call RUs(x1w)
    set W1w = Y1w
    set stw[x1w] = W1w
    set ttw[x1w] = n1w
    call Ybr(Q1w, x1w, "when calling doAfter in UnitItemUtils, line 251")
    set ASw = ASw - 1
endfunction
function hMs takes unit dMs, unit fMs, real RMs, real TMs, integer YMs, integer GMs, string gMs returns nothing
    set DSw[ASw] = gMs
    set ASw = ASw + 1
    call E1w(dMs, fMs, RMs, 0.1, TMs, YMs, GMs, "when calling apply_DOT_Timed in UnitItemUtils, line 233")
    set ASw = ASw - 1
endfunction
function k5u takes string h5u returns integer
    local integer F5u
    set DSw[ASw] = h5u
    set ASw = ASw + 1
    if NX == 0 then
        if MX < 32768 then
            set MX = MX + 1
            set F5u = MX
            set wC[F5u] = 957
        else
            call tNr("Out of memory: Could not create CallbackSingle_doAfter_Tooth_Effect.", "when calling error in Tooth_Effect, line 52")
            set F5u = 0
        endif
    else
        set NX = NX - 1
        set F5u = BX[NX]
        set wC[F5u] = 957
    endif
    set ASw = ASw - 1
    return F5u
endfunction
function rEu takes nothing returns boolean
    return (UnitHasItemOfTypeBJ(GetEventDamageSource(), $49303437) and IsUnitType(GetTriggerUnit(), UNIT_TYPE_STRUCTURE) == false) != false
endfunction
function vls takes string Ols returns nothing
    local unit lls
    local unit bls
    local player yls
    local integer pls
    local real els
    local group qls
    local real als
    local integer nls
    local real dls
    local real fls
    local string Rls
    local effect Tls
    local integer Yls
    local group Gls
    local unit gls
    local real hls
    local group Fls
    local real kls
    local real jls
    local real xls
    set DSw[ASw] = Ols
    set ASw = ASw + 1
    set lls = GetEventDamageSource()
    set bls = GetTriggerUnit()
    if lls != null and rEu() then
        set yls = eDs(lls)
        set pls = hgr(yls)
        if not Jyr(vJ, pls, "when calling has in Tooth_Effect, line 32") then
            call GVw(vJ, pls, O_i(true), "when calling put in Tooth_Effect, line 33")
        endif
        if not Jyr(mJ, pls, "when calling has in Tooth_Effect, line 35") then
            call GVw(mJ, pls, $00000000, "when calling put in Tooth_Effect, line 36")
        endif
        if GetRandomInt($00000001, $00000064) <= QJ + wps(mJ, pls, "when calling get in Tooth_Effect, line 38") then
            if lls != null and bls != null then
    if GpS(gQ, hgr(eDs(lls)), "when calling has in Tooth_Effect, line 45") and bls != null and R9s(lls, bls) and lls != bls then
                    if TYt(wps(vJ, pls, "when calling get in Tooth_Effect, line 46")) then
                        call GVw(mJ, pls, $00000000, "when calling put in Tooth_Effect, line 47")
                        call GVw(vJ, pls, O_i(false), "when calling put in Tooth_Effect, line 48")
                        set els = GetRandomReal(3., 5.)
                        call UOS($00000001, "when calling getGroup in Tooth_Effect, line 50")
                        set qls = pIw
                        set als = WJ * I2R(GetHeroAgi(lls, true))
                        set hls = els
                        set nls = k5u("when calling alloc_CallbackSingle_doAfter_Tooth_Effect in Tooth_Effect, line 52")
                        call RUs(nls)
                        set Dsw[nls] = pls
                        call Ybr(hls, nls, "when calling doAfter in Tooth_Effect, line 52")
                        call GroupAddGroupEnum()
                        set Fls = qls
                        set jls = ANw(lls)
                        set dls = jls
                        set kls = dls
                        call ANw(lls)
                        set xls = XSw
                        set fls = xls
                        call GroupEnumUnitsInRange(Fls, kls, fls, EJ, null)
                        set Rls = ""
                        if HEi(pls, hgr(nD), "when calling ifDisplayEffectProcs in Tooth_Effect, line 58") then
                            set Rls = "Effects/BladeStorm/BloodTornado.mdl"
                        endif
                        set Tls = GAi(lls, Rls, dg)
                        call yYi(Tls, 2., "when calling destrAdvTimed in Tooth_Effect, line 61")
                        set Yls = RCt("when calling alloc_CallbackSingle_doAfter_Tooth_Effect in Tooth_Effect, line 62")
                        call RUs(Yls)
                        set Hsw[Yls] = lls
                        set Jsw[Yls] = pls
                        call Ybr(0.5, Yls, "when calling doAfter in Tooth_Effect, line 62")
                        set Gls = XbS(qls)
                        loop
                            exitwhen not hJw(Gls)
                            set gls = tPr(Gls)
                            if PGi(gls, yls) and(not fRi(gls)) then
                                call hMs(gls, lls, 1., als / 10., $00000000, $00000000, "when calling apply_DOT_Timed in Tooth_Effect, line 68")
                            endif
                        endloop
                        call lxs(Gls)
                        call Sju(qls, "when calling release in Tooth_Effect, line 69")
                    endif
    elseif wps(mJ, pls, "when calling get in Tooth_Effect, line 70") < 80 then
                    call GVw(mJ, pls, wps(mJ, pls, "when calling get in Tooth_Effect, line 71") + 10, "when calling put in Tooth_Effect, line 71")
    endif
            endif
        endif
    endif
    set ASw = ASw - 1
    set lls = null
    set bls = null
    set yls = null
    set qls = null
    set Tls = null
    set Gls = null
    set gls = null
    set Fls = null
endfunction
function P7S takes nothing returns nothing
    set ASw = 0
    call vls("via function reference Tooth_Effect, line 75")
endfunction
function P7i takes nothing returns boolean
    set nv = CreateForce()
    call xxr(nv, nD)
    set Rv = 0
    return true
endfunction
function PCt takes nothing returns nothing
    call SetUnitPositionLoc(GetEnumUnit(), vo)
endfunction
function mFr takes string xFr returns integer
    local integer vFr
    set DSw[ASw] = xFr
    set ASw = ASw + 1
    if NX == 0 then
        if MX < 32768 then
            set MX = MX + 1
            set vFr = MX
            set wC[vFr] = 1040
        else
            call tNr("Out of memory: Could not create CallbackSingle_doAfter_addAction_doAfter_FateDestinyUnlocker.", "when calling error in FateDestinyUnlocker, line 805")
            set vFr = 0
        endif
    else
        set NX = NX - 1
        set vFr = BX[NX]
        set wC[vFr] = 1040
    endif
    set ASw = ASw - 1
    return vFr
endfunction
function NfS takes string CfS returns nothing
    local trigger VfS
    local integer BfS
    set DSw[ASw] = CfS
    set ASw = ASw + 1
    call dii(Iji("One should research the outer realms to become a true explorer.", "when calling unObfuscate in FateDestinyUnlocker, line 802"), 5., eDs(GetTriggerUnit()))
    set VfS = GetTriggeringTrigger()
    call SqS(VfS)
    set BfS = mFr("when calling alloc_CallbackSingle_doAfter_addAction_doAfter_FateDestinyUnlocker in FateDestinyUnlocker, line 805")
    call RUs(BfS)
    set D7[BfS] = VfS
    call Ybr(30., BfS, "when calling doAfter in FateDestinyUnlocker, line 805")
    set ASw = ASw - 1
    set VfS = null
endfunction
function PDt takes nothing returns nothing
    set ASw = 0
    call NfS("via function reference FateDestinyUnlocker, line 801")
endfunction
function H8s takes nothing returns boolean
    return IsUnitInGroup(GetEnumUnit(), Kc) == false and IsUnitInGroup(GetEnumUnit(), Vc) == false and IsUnitInGroup(GetEnumUnit(), Lc) == false
endfunction
function Whu takes nothing returns boolean
    return Bc[1 + GetPlayerId(GetOwningPlayer(GetEnumUnit()))] == 4 and IsUnitInGroup(GetEnumUnit(), Lc) == false
endfunction
function PFS takes nothing returns nothing
    if H8s() then
        call GroupAddUnit(Kc, GetEnumUnit())
        call CreateTextTagUnitBJ("|cffffcc00Nice Dodge!|r", GetEnumUnit(), 0., 14., 100., 100., 100., 0.)
        call SetTextTagVelocityBJ(bj_lastCreatedTextTag, 45., 90.)
        call SetTextTagPermanentBJ(bj_lastCreatedTextTag, false)
        call SetTextTagFadepointBJ(bj_lastCreatedTextTag, 1.5)
        call SetTextTagLifespanBJ(bj_lastCreatedTextTag, 2.5)
    elseif Whu() then
        call GroupRemoveUnit(Kc, GetEnumUnit())
        call GroupAddUnit(Vc, GetEnumUnit())
        call CreateTextTagUnitBJ("|cffff0000Overdodge!|r", GetEnumUnit(), 0., 15., 100., 100., 100., 0.)
        call SetTextTagVelocityBJ(bj_lastCreatedTextTag, 45., 90.)
        call SetTextTagPermanentBJ(bj_lastCreatedTextTag, false)
        call SetTextTagFadepointBJ(bj_lastCreatedTextTag, 1.5)
        call SetTextTagLifespanBJ(bj_lastCreatedTextTag, 2.5)
    endif
endfunction
function S0i takes string t0i returns integer
    local integer i0i
    set DSw[ASw] = t0i
    set ASw = ASw + 1
    if TN == 0 then
        if YN < 32768 then
            set YN = YN + 1
            set i0i = YN
        else
            call tNr("Out of memory: Could not create OrderStringFactory.", "when calling error in OrderStringFactory, line 6")
            set i0i = 0
        endif
    else
        set TN = TN - 1
        set i0i = RN[TN]
    endif
    set ASw = ASw - 1
    return i0i
endfunction
function JZr takes integer HZr returns nothing
endfunction
function l2t takes integer O2t returns nothing
    call JZr(O2t)
endfunction
function bRS takes string ORS returns integer
    local integer lRS
    set DSw[ASw] = ORS
    set ASw = ASw + 1
    set lRS = S0i("when calling alloc_OrderStringFactory in OrderStringFactory, line 6")
    call l2t(lRS)
    set ASw = ASw - 1
    return lRS
endfunction
function o6r takes string c6r returns boolean
    set DSw[ASw] = c6r
    set ASw = ASw + 1
    call bRS("when calling new_OrderStringFactory in ChannelAbilityPreset, line 10")
    set ASw = ASw - 1
    return true
endfunction
function PHs takes nothing returns boolean
    set ASw = 0
    return o6r("via function reference ChannelAbilityPreset, line 1")
endfunction
function fwS takes string dwS returns nothing
    set DSw[ASw] = dwS
    set ASw = ASw + 1
    call sMr(GetTriggerUnit(), "when calling specialItemsCreate in Items_Pickup_Drop, line 80")
    set ASw = ASw - 1
endfunction
function PJt takes nothing returns nothing
    set ASw = 0
    call fwS("via function reference Items_Pickup_Drop, line 770")
endfunction
function Kiu takes string Hiu returns boolean
    local effect Jiu
    set DSw[ASw] = Hiu
    set ASw = ASw + 1
    set MJ = 14
    set wK = 5
    set uK = null
    set rK = null
    set sK =- 315.
    set tK =- 500.
    set Jiu = AddSpecialEffect(Iji("Effects/VoidDisc.mdx", "when calling unObfuscate in Voidless, line 47"), jK, xK)
    call Xjr(Jiu, tK)
    set iK = Jiu
    set SK = XQt("when calling new_LinkedList in Voidless, line 48")
    set cK = 15 * 60
    set oK = 0.0
    set OK = 0
    set lK = 0
    set bK = 0
    set yK = false
    set pK = 0.
    set eK = XQt("when calling new_LinkedList in Voidless, line 60")
    set qK = jts("when calling new_HashMap in Voidless, line 62")
    set ASw = ASw - 1
    set Jiu = null
    return true
endfunction
function PKr takes nothing returns boolean
    set ASw = 0
    return Kiu("via function reference Voidless, line 1")
endfunction
function Oji takes nothing returns boolean
    return GetUnitTypeId(GetTriggerUnit()) == 1848652086 or GetUnitTypeId(GetTriggerUnit()) == 1848652087 or GetUnitTypeId(GetTriggerUnit()) == 1848652098
endfunction
function PLr takes nothing returns boolean
    return IsPlayerInForce(GetOwningPlayer(GetKillingUnit()), pc[$00000002]) and Oji()
endfunction
function PLt takes nothing returns nothing
    call ForceRemovePlayer(rt, GetOwningPlayer(GetTriggerUnit()))
    call ForceRemovePlayer(ot, GetOwningPlayer(GetTriggerUnit()))
    call ForceRemovePlayer(Ot, GetOwningPlayer(GetTriggerUnit()))
    call DisplayTextToForce(MwS(GetOwningPlayer(GetTriggerUnit())), "|cffffcc00Freya|r : |cff87ceebExcellent! I knew you would succeed. The psionic energies within you are untapped - you have great potential. Maybe just back then you were a lowly female novice, unaware which paths to take in life. But now, you are no longer just a novice. From now on, you are a Grand Templar; go out and show your enemies just how powerful psionic powers really are! Far too many people look down on psionic powers......prove them wrong.")
    call DestroyQuest(st[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))])
    set st[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))] = null
    call SetHeroLevelBJ(GetTriggerUnit(), $00000001, false)
    call ReplaceUnitBJ(GetTriggerUnit(), $4830324C, $00000002)
    call SelectUnitForPlayerSingle(bj_lastReplacedUnit, GetOwningPlayer(GetTriggerUnit()))
    call SetHeroLevel(bj_lastReplacedUnit, $00000001, true)
    call UnitStripHeroLevel(bj_lastReplacedUnit, $00000001)
endfunction
function PMw takes nothing returns nothing
    call TriggerExecute(Gu)
    if Ni == 2 and IsPlayerInForce(GetEnumPlayer(), Nr) and IsPlayerInForce(GetEnumPlayer(), Rc[$00000002]) then
        set wS[Ni * 100 + GetPlayerId(GetEnumPlayer())] = 3
    else
        set wS[Ni * 100 + GetPlayerId(GetEnumPlayer())] = GetRandomInt($00000001, Mi)
    endif
endfunction
function PNi takes nothing returns boolean
    return IsUnitType(GetTriggerUnit(), UNIT_TYPE_HERO) != false
endfunction
function Vst takes string Xst returns integer
    local integer Cst
    set DSw[ASw] = Xst
    set ASw = ASw + 1
    if NX == 0 then
        if MX < 32768 then
            set MX = MX + 1
            set Cst = MX
            set wC[Cst] = 945
        else
            call tNr("Out of memory: Could not create CallbackSingle_doAfter_Sniper_SnipersFocus.", "when calling error in Sniper_SnipersFocus, line 18")
            set Cst = 0
        endif
    else
        set NX = NX - 1
        set Cst = BX[NX]
        set wC[Cst] = 945
    endif
    set ASw = ASw - 1
    return Cst
endfunction
function cLt takes string rLt returns nothing
    local unit sLt
    local integer tLt
    local integer iLt
    local real SLt
    set DSw[ASw] = rLt
    set ASw = ASw + 1
    set sLt = GetTriggerUnit()
    set tLt = gir(sLt, Ck)
    call lKs(sLt, Vk, tLt)
    set SLt = nH
    set iLt = Vst("when calling alloc_CallbackSingle_doAfter_Sniper_SnipersFocus in Sniper_SnipersFocus, line 18")
    call RUs(iLt)
    set Osw[iLt] = sLt
    call Ybr(SLt, iLt, "when calling doAfter in Sniper_SnipersFocus, line 18")
    set ASw = ASw - 1
    set sLt = null
endfunction
function PNr takes nothing returns nothing
    set ASw = 0
    call cLt("via function reference Sniper_SnipersFocus, line 24")
endfunction
function POt takes nothing returns nothing
    call RemoveUnit(GetEnumUnit())
endfunction
function PPu takes nothing returns boolean
    return GetSpellAbilityId() == 1093677909
endfunction
function PQu takes nothing returns nothing
    call SetUnitPositionLoc(GetEnumUnit(), vo)
endfunction
function ODs takes nothing returns boolean
    return GetUnitTypeId(GetTriggerUnit()) == 1211117623
endfunction
function wMu takes nothing returns boolean
    return GetUnitTypeId(GetTriggerUnit()) == 1211117620
endfunction
function PVs takes nothing returns boolean
    return GetBooleanOr(ODs(), wMu()) and GetOrderTargetUnit() == iG and GetHeroLevel(GetTriggerUnit()) >= 40 and IsPlayerInForce(GetOwningPlayer(GetTriggerUnit()), kr) == false and IsPlayerInForce(GetOwningPlayer(GetTriggerUnit()), Tr) == false and IsPlayerInForce(GetOwningPlayer(GetTriggerUnit()), Yr) == false and IsPlayerInForce(GetOwningPlayer(GetTriggerUnit()), Gr) == false and IsUnitInGroup(GetTriggerUnit(), kpu(300., GetUnitLoc(GetOrderTargetUnit())))
endfunction
function lTr takes string uTr returns nothing
    local player rTr
    local integer sTr
    local integer tTr
    local integer iTr
    local unit STr
    local oskeytype cTr
    local string oTr
    local integer OTr
    set DSw[ASw] = uTr
    set ASw = ASw + 1
    set rTr = GetTriggerPlayer()
    set sTr = hgr(rTr)
    set tTr = tOS(rTr, "when calling getCustomPlayer in Imp3DragonFortress, line 1423")
    set iTr = xMi(tTr, "when calling getCHero in Imp3DragonFortress, line 1424")
    set STr = hqs(iTr, "when calling getHero in Imp3DragonFortress, line 1425")
    set cTr = BlzGetTriggerPlayerKey()
    set oTr = ""
    if IW and J_i(fc[$0000000C], STr) and WZ then
        set OTr = YEi(cTr)
        if OTr == YEi(OSKEY_LEFT) then
            set oTr = "1"
        elseif OTr == YEi(OSKEY_RIGHT) then
            set oTr = "2"
        elseif OTr == YEi(OSKEY_UP) then
            set oTr = "3"
        elseif OTr == YEi(OSKEY_DOWN) then
            set oTr = "4"
        endif
        call GVw(QZ, sTr, err(nPr(wps(QZ, sTr, "when calling get in Imp3DragonFortress, line 1439"), "when calling stringFromIndex in Imp3DragonFortress, line 1439") + oTr, "when calling stringToIndex in Imp3DragonFortress, line 1439"), "when calling put in Imp3DragonFortress, line 1439")
    endif
    set ASw = ASw - 1
    set rTr = null
    set STr = null
    set cTr = null
endfunction
function PXs takes nothing returns nothing
    set ASw = 0
    call lTr("via function reference Imp3DragonFortress, line 1694")
endfunction
function e9r takes nothing returns boolean
    return yi == 2
endfunction
function PYs takes nothing returns nothing
    call EnableTrigger(aR)
    call DisableTrigger(dR)
    call DisableTrigger(fR)
    call DisableTrigger(RR)
    call DisableTrigger(TR)
    call DestroyTimerDialog(fi)
    call PauseTimerBJ(true, di)
    set bw = true
    if e9r() then
        set ni = ni + 1
        call DisplayTimedTextToForce(Rc[$0000000B], 12., "|cffffcc00You have advanced to the next stage!|r")
    else
        call DisplayTimedTextToForce(Rc[$0000000B], 12., "|cffffcc00You have picked the wrong portal!|r")
    endif
    set vo = GetRectCenter(ly)
    call ForGroupBJ(fc[$0000000B], cbw)
    call ForForce(Rc[$0000000B], obw)
    call RemoveLocation(vo)
endfunction
function PZi takes nothing returns nothing
    call CustomDefeatBJ(GetEnumPlayer(), "Use -load to load instead.")
endfunction
function tSs takes string sSs returns boolean
    set DSw[ASw] = sSs
    set ASw = ASw + 1
    call jts("when calling new_HashMap in EnterLeaveRegionTriggerRegistry, line 18")
    set ASw = ASw - 1
    return true
endfunction
function PZs takes nothing returns boolean
    set ASw = 0
    return tSs("via function reference EnterLeaveRegionTriggerRegistry, line 12")
endfunction
function DZr takes string AZr returns boolean
    set DSw[ASw] = AZr
    set ASw = ASw + 1
    set oW = l2s(Iji("A0D1", "when calling unObfuscate in Hope_Effect, line 10"), "when calling fromRawCode in Hope_Effect, line 10")
    set OW = l2s(Iji("A0D2", "when calling unObfuscate in Hope_Effect, line 11"), "when calling fromRawCode in Hope_Effect, line 11")
    set Qf = CreateTrigger()
    call TriggerRegisterAnyUnitEventBJ(Qf, EVENT_PLAYER_UNIT_SPELL_EFFECT)
    call TriggerAddCondition(Qf, Condition(vmw))
    call TriggerAddAction(Qf, mmw)
    set ASw = ASw - 1
    return true
endfunction
function PcS takes nothing returns boolean
    set ASw = 0
    return DZr("via function reference Hope_Effect, line 1")
endfunction
function Pci takes nothing returns boolean
    return GetUnitTypeId(GetTriggerUnit()) == 1211117894 and GetUnitTypeId(GetOrderTargetUnit()) == 1747989296 and IsPlayerInForce(GetOwningPlayer(GetTriggerUnit()), rt) and IsPlayerInForce(GetOwningPlayer(GetTriggerUnit()), ii) and IsUnitInGroup(GetTriggerUnit(), kpu(300., GetUnitLoc(GetOrderTargetUnit())))
endfunction
function X7i takes unit K7i, string L7i returns nothing
    set DSw[ASw] = L7i
    set ASw = ASw + 1
    if K7i != null and Jyr(UH, Aei(K7i), "when calling has in Spells_Checks, line 51") and c8w(K7i, ck) then
        call rZu(K7i, dMw(wps(UH, Aei(K7i), "when calling get in Spells_Checks, line 52")))
        call fmu(uwr(K7i, ck), true)
    endif
    set ASw = ASw - 1
endfunction
function RBs takes unit dBs, string fBs returns nothing
    set DSw[ASw] = fBs
    set ASw = ASw + 1
    call Q_s(dBs, $41304144)
    call X7i(dBs, "when calling resetUnitsAvatarScaling in HeroRevive, line 33")
    if GpS(CG, Aei(dBs), "when calling has in HeroRevive, line 35") then
        call eys(CG, Aei(dBs), "when calling remove in HeroRevive, line 36")
    endif
    if GpS(og, Aei(dBs), "when calling has in HeroRevive, line 37") then
        call eys(og, Aei(dBs), "when calling remove in HeroRevive, line 38")
    endif
    set ASw = ASw - 1
endfunction
function CBs takes string LBs returns integer
    local integer XBs
    set DSw[ASw] = LBs
    set ASw = ASw + 1
    if NX == 0 then
        if MX < 32768 then
            set MX = MX + 1
            set XBs = MX
            set wC[XBs] = 825
        else
            call tNr("Out of memory: Could not create CallbackSingle_doAfter_HeroRevive.", "when calling error in HeroRevive, line 157")
            set XBs = 0
        endif
    else
        set NX = NX - 1
        set XBs = BX[NX]
        set wC[XBs] = 825
    endif
    set ASw = ASw - 1
    return XBs
endfunction
function JFt takes string DFt returns integer
    local integer HFt
    set DSw[ASw] = DFt
    set ASw = ASw + 1
    if NX == 0 then
        if MX < 32768 then
            set MX = MX + 1
            set HFt = MX
            set wC[HFt] = 824
        else
            call tNr("Out of memory: Could not create CallbackSingle_doAfter_HeroRevive.", "when calling error in HeroRevive, line 99")
            set HFt = 0
        endif
    else
        set NX = NX - 1
        set HFt = BX[NX]
        set wC[HFt] = 824
    endif
    set ASw = ASw - 1
    return HFt
endfunction
function Jli takes timer Hli returns real
    return TimerGetRemaining(Hli)
endfunction
function RHt takes unit lHt, player bHt, integer yHt, string pHt returns nothing
    local integer eHt
    local player qHt
    local integer aHt
    local integer nHt
    local real dHt
    local real fHt
    set DSw[ASw] = pHt
    set ASw = ASw + 1
    if boS(lHt) >= 100 and GetUnitTypeId(lHt) != l2s(Iji("H007", "when calling unObfuscate in HeroRevive, line 74"), "when calling fromRawCode in HeroRevive, line 74") and GetUnitTypeId(lHt) != l2s(Iji("H00E", "when calling unObfuscate in HeroRevive, line 74"), "when calling fromRawCode in HeroRevive, line 74") and GetUnitTypeId(lHt) != l2s(Iji("H01B", "when calling unObfuscate in HeroRevive, line 74"), "when calling fromRawCode in HeroRevive, line 74") and GetUnitTypeId(lHt) != l2s(Iji("H02C", "when calling unObfuscate in HeroRevive, line 74"), "when calling fromRawCode in HeroRevive, line 74") and GetUnitTypeId(lHt) != l2s(Iji("H004", "when calling unObfuscate in HeroRevive, line 74"), "when calling fromRawCode in HeroRevive, line 74") and GetUnitTypeId(lHt) != l2s(Iji("H00F", "when calling unObfuscate in HeroRevive, line 74"), "when calling fromRawCode in HeroRevive, line 74") and GetUnitTypeId(lHt) != l2s(Iji("H01A", "when calling unObfuscate in HeroRevive, line 74"), "when calling fromRawCode in HeroRevive, line 74") and GetUnitTypeId(lHt) != l2s(Iji("H02B", "when calling unObfuscate in HeroRevive, line 74"), "when calling fromRawCode in HeroRevive, line 74") then
        if IsPlayerInForce(bHt, iO) then
            set eHt = 25 * GetUnitLevel(lHt)
        else
            set eHt = 50 * GetUnitLevel(lHt)
        endif
        call AdjustPlayerStateBJ(- (1 * eHt), bHt, PLAYER_STATE_RESOURCE_GOLD)
        call dii("|cffff0000Death has taken its toll of " + I2S(eHt) + " gold!|r", 8., bHt)
    endif
    call ForceRemovePlayer(Gi, bHt)
    if uW[yHt] == null then
        set qHt = eDs(lHt)
        set uW[yHt] = CreateTimerDialogBJ(wW[yHt], Mt[1 + GetPlayerId(qHt)])
        if nD == bHt then
            call TimerDialogDisplay(uW[yHt], true)
        else
            call TimerDialogDisplay(uW[yHt], false)
        endif
        call gNu(wW[yHt], dw, jmw)
        call dii("|cffffcc00You will be revived in " + fju(aJi(Jli(wW[yHt]))) + " seconds.|r", 8., bHt)
        set dHt = dw
        set aHt = JFt("when calling alloc_CallbackSingle_doAfter_HeroRevive in HeroRevive, line 99")
        call RUs(aHt)
        set l8[aHt] = yHt
        set b8[aHt] = lHt
        set y8[aHt] = bHt
        call Ybr(dHt, aHt, "when calling doAfter in HeroRevive, line 99")
    else
        call dii("Your character will revive after timer expires in " + fju(aJi(Jli(wW[yHt]))) + " seconds. If not, use -revive.", 20., bHt)
        set fHt = dw + 2.
        set nHt = CBs("when calling alloc_CallbackSingle_doAfter_HeroRevive in HeroRevive, line 157")
        call RUs(nHt)
        set p8[nHt] = lHt
        set e8[nHt] = bHt
        set q8[nHt] = yHt
        call Ybr(fHt, nHt, "when calling doAfter in HeroRevive, line 157")
    endif
    set ASw = ASw - 1
    set qHt = null
endfunction
function ecr takes string ycr returns integer
    local integer pcr
    set DSw[ASw] = ycr
    set ASw = ASw + 1
    if NX == 0 then
        if MX < 32768 then
            set MX = MX + 1
            set pcr = MX
            set wC[pcr] = 823
        else
            call tNr("Out of memory: Could not create CallbackSingle_doAfter_HeroRevive.", "when calling error in HeroRevive, line 64")
            set pcr = 0
        endif
    else
        set NX = NX - 1
        set pcr = BX[NX]
        set wC[pcr] = 823
    endif
    set ASw = ASw - 1
    return pcr
endfunction
function KMi takes string ZMi returns nothing
    local unit UMi
    local player IMi
    local integer PMi
    local integer AMi
    local integer DMi
    local integer HMi
    local real JMi
    set DSw[ASw] = ZMi
    set ASw = ASw + 1
    set UMi = GetTriggerUnit()
    set IMi = eDs(UMi)
    set PMi = hgr(IMi)
    set AMi = 1
    set DMi = ko
    loop
        exitwhen AMi > DMi
        if ONi(Rc[AMi], IMi) then
            call GZs(xus(PMi, "when calling getCustomPlayer in HeroRevive, line 59"), false, "when calling setCommandsDisabled in HeroRevive, line 59")
            call yLt(Rc[AMi], IMi)
            call GVw(rW, Aei(UMi), AMi, "when calling put in HeroRevive, line 61")
            if AMi == 13 then
    set NZ = false
    set JMi = GetRandomReal(3., 7.)
    set HMi = ecr("when calling alloc_CallbackSingle_doAfter_HeroRevive in HeroRevive, line 64")
    call RUs(HMi)
    call Ybr(JMi, HMi, "when calling doAfter in HeroRevive, line 64")
            endif
        endif
        set AMi = AMi + 1
    endloop
    if GpS(gQ, PMi, "when calling has in HeroRevive, line 68") and(not GpS(Uj, Aei(UMi), "when calling has in HeroRevive, line 68")) then
        call RBs(UMi, "when calling revivePreClear in HeroRevive, line 69")
        call RHt(UMi, IMi, PMi, "when calling reviveHeroParams in HeroRevive, line 70")
    endif
    set ASw = ASw - 1
    set UMi = null
    set IMi = null
endfunction
function Pjs takes nothing returns nothing
    set ASw = 0
    call KMi("via function reference HeroRevive, line 178")
endfunction
function Ptu takes nothing returns nothing
    call SetUnitInvulnerable(GetEnumUnit(), true)
    call PauseUnit(GetEnumUnit(), true)
endfunction
function PuS takes nothing returns nothing
    call PanCameraToTimedLocForPlayer(GetEnumPlayer(), vo, 0.)
    call TriggerExecute(MT)
endfunction
function UdS takes nothing returns boolean
    return GetUnitTypeId(GetTriggerUnit()) == 1211118162 or GetUnitTypeId(GetTriggerUnit()) == 1211118163 or GetUnitTypeId(GetTriggerUnit()) == 1211118165 or GetUnitTypeId(GetTriggerUnit()) == 1211118164
endfunction
function Pus takes nothing returns boolean
    return GetSpellAbilityId() == 1093679188 and GetPlayerState(GetOwningPlayer(GetTriggerUnit()), PLAYER_STATE_RESOURCE_FOOD_USED) == 100 and oS[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))] == 1 and UdS()
endfunction
function Pvt takes nothing returns boolean
    return GetSpellAbilityId() == Ck
endfunction
function g9u takes unit T9u, player Y9u, boolean G9u returns nothing
    call SetUnitOwner(T9u, Y9u, G9u)
endfunction
function p4s takes string b4s returns integer
    local integer y4s
    set DSw[ASw] = b4s
    set ASw = ASw + 1
    if PC == 0 then
        if AC < 32768 then
            set AC = AC + 1
            set y4s = AC
            set DC[y4s] = 710
        else
            call tNr("Out of memory: Could not create CallbackPeriodic_doPeriodically_WorldBoss_quests.", "when calling error in WorldBoss_quests, line 68")
            set y4s = 0
        endif
    else
        set PC = PC - 1
        set y4s = IC[PC]
        set DC[y4s] = 710
    endif
    set ASw = ASw - 1
    return y4s
endfunction
function Mwt takes string Jwt returns nothing
    local group Kwt
    local group Lwt
    local unit Xwt
    local integer Cwt
    local integer Vwt
    local integer Bwt
    local integer Nwt
    set DSw[ASw] = Jwt
    set ASw = ASw + 1
    if eDs(DX) == aD[PLAYER_NEUTRAL_PASSIVE]then
        call g9u(DX, aD[Ch], false)
        set Kwt = LLt(ANw(DX), XSw, 1500., "when calling getUnitsInRange in WorldBoss_quests, line 56")
        set Lwt = XbS(Kwt)
        loop
            exitwhen not hJw(Lwt)
            set Xwt = tPr(Lwt)
            if GpS(gQ, hgr(eDs(Xwt)), "when calling has in WorldBoss_quests, line 58") then
    call dii("|cffffcc00Betrayed Angel|r : Feel my wrath!", 5., eDs(Xwt))
            endif
        endloop
        call lxs(Lwt)
        set Cwt = c5r(gQ, "when calling iterator in WorldBoss_quests, line 61")
        loop
            exitwhen not Tji(Cwt)
            set Vwt = LXi(Cwt)
            set Bwt = xMi(GgS(aD[Vwt], "when calling getCustomPlayer in WorldBoss_quests, line 62"), "when calling getCHero in WorldBoss_quests, line 62")
            if hqs(Bwt, "when calling getHero in WorldBoss_quests, line 63") != null and(not J_i(Kwt, hqs(Bwt, "when calling getHero in WorldBoss_quests, line 63"))) then
    call dii("The |cffffcc00Betrayed Angel|r has been challenged.", 5., aD[Vwt])
            endif
        endloop
        call vms(Cwt, "when calling close in WorldBoss_quests, line 61")
        call Sju(Kwt, "when calling release in WorldBoss_quests, line 66")
        set Nwt = p4s("when calling alloc_CallbackPeriodic_doPeriodically_WorldBoss_quests in WorldBoss_quests, line 68")
        call kVu(Nwt)
        call wcs(30., Nwt, "when calling doPeriodically in WorldBoss_quests, line 68")
    endif
    set ASw = ASw - 1
    set Kwt = null
    set Lwt = null
    set Xwt = null
endfunction
function i5S takes quest t5S returns nothing
    call DestroyQuest(t5S)
endfunction
function nus takes integer bus, quest yus, string pus returns nothing
    local integer eus
    local integer qus
    local integer aus
    set DSw[ASw] = pus
    set ASw = ASw + 1
    call i5S(yus)
    call klS(CX, bus, "when calling remove in WorldBoss_quests, line 41")
    if not Jyr(VX, bus, "when calling has in WorldBoss_quests, line 42") then
        call GVw(VX, bus, $00000000, "when calling put in WorldBoss_quests, line 43")
    else
        set eus = wps(VX, bus, "when calling get in WorldBoss_quests, line 45")
        set aus = eus
        if eus == wds(LX, "when calling size in WorldBoss_quests, line 46") - 1 then
            set qus = 0
        else
            set qus = 1
        endif
        set eus = aus + qus
        call GVw(VX, bus, eus, "when calling put in WorldBoss_quests, line 47")
    endif
    call dii("|cffffcc00The Angel of Clouds|r : You've managed to slay one of my betrayed brothers... As much as I'm saddened, I'm happy as well! There are still more though... Nevertheless, I will reveal a secret to reach your Destiny:", 20., aD[bus])
    call dii("|cffffcc00The Angel of Clouds|r : " + nPr(C_r(LX, wps(VX, bus, "when calling get in WorldBoss_quests, line 50"), "when calling get in WorldBoss_quests, line 50"), "when calling stringFromIndex in WorldBoss_quests, line 50"), 30., aD[bus])
    set ASw = ASw - 1
endfunction
function Gbs takes string nbs returns nothing
    local unit dbs
    local unit fbs
    local integer Rbs
    local quest Tbs
    local quest Ybs
    set DSw[ASw] = nbs
    set ASw = ASw + 1
    set dbs = GetTriggerUnit()
    set fbs = GetOrderTargetUnit()
    set Rbs = hgr(eDs(dbs))
    if Jyr(CX, Rbs, "when calling has in WorldBoss_quests, line 107") then
        set Ybs = I7w(wps(CX, Rbs, "when calling get in WorldBoss_quests, line 107"), "when calling questFromIndex in WorldBoss_quests, line 107")
    else
        set Ybs = null
    endif
    set Tbs = Ybs
    if fbs == NY and fYr(ANw(fbs), XSw, ANw(dbs), XSw) <= 300. and Tbs != null and IsQuestCompleted(Tbs) then
        call nus(Rbs, Tbs, "when calling finishQuest_betrayedAngels in WorldBoss_quests, line 110")
    elseif fbs == DX and fYr(ANw(fbs), XSw, ANw(dbs), XSw) <= 300. and Tbs != null and(not IsQuestCompleted(Tbs)) then
        call Mwt("when calling activateQuest_betrayedAngels in WorldBoss_quests, line 112")
    endif
    set ASw = ASw - 1
    set dbs = null
    set fbs = null
    set Tbs = null
    set Ybs = null
endfunction
function Pwr takes nothing returns nothing
    set ASw = 0
    call Gbs("via function reference WorldBoss_quests, line 103")
endfunction
function Q1r takes nothing returns boolean
    return IsUnitType(GetTriggerUnit(), UNIT_TYPE_HERO) != false
endfunction
function Q2w takes nothing returns boolean
    return IsUnitType(GetFilterUnit(), UNIT_TYPE_HERO) != false
endfunction
function aRS takes trigger pRS, region eRS, boolexpr qRS returns event
    return TriggerRegisterLeaveRegion(pRS, eRS, qRS)
endfunction
function Q4i takes nothing returns boolean
    local trigger x4i
    local trigger v4i
    local trigger m4i
    set lW = 30.
    set aR = CreateTrigger()
    call TriggerRegisterEnterRectSimple(aR, ly)
    call TriggerAddCondition(aR, Condition(Umw))
    call TriggerAddAction(aR, Imw)
    set nR = CreateTrigger()
    call DisableTrigger(nR)
    call TriggerRegisterAnyUnitEventBJ(nR, EVENT_PLAYER_UNIT_DEATH)
    call TriggerAddCondition(nR, Condition(Pmw))
    call TriggerAddAction(nR, Amw)
    set YR = CreateTrigger()
    call TriggerRegisterTimerExpireEvent(YR, di)
    call TriggerAddAction(YR, Dmw)
    set x4i = CreateTrigger()
    call aRS(x4i, K2S(Vl), null)
    set v4i = x4i
    call QYr(v4i, K2S(Vl), null)
    set m4i = v4i
    call B2S(m4i, Hmw)
    set x4i = null
    set v4i = null
    set m4i = null
    return true
endfunction
function Q4r takes nothing returns boolean
    set dD = ConvertPlayerColor($00000018)
    set fD = ConvertPlayerColor($00000019)
    set RD = ConvertPlayerColor($0000001A)
    set TD = ConvertPlayerColor($0000001B)
    set YD[$00000000] = PLAYER_COLOR_RED
    set YD[$00000001] = PLAYER_COLOR_BLUE
    set YD[$00000002] = PLAYER_COLOR_CYAN
    set YD[$00000003] = PLAYER_COLOR_PURPLE
    set YD[$00000004] = PLAYER_COLOR_YELLOW
    set YD[$00000005] = PLAYER_COLOR_ORANGE
    set YD[$00000006] = PLAYER_COLOR_GREEN
    set YD[$00000007] = PLAYER_COLOR_PINK
    set YD[$00000008] = PLAYER_COLOR_LIGHT_GRAY
    set YD[$00000009] = PLAYER_COLOR_LIGHT_BLUE
    set YD[$0000000A] = PLAYER_COLOR_AQUA
    set YD[$0000000B] = PLAYER_COLOR_BROWN
    set YD[$0000000C] = PLAYER_COLOR_MAROON
    set YD[$0000000D] = PLAYER_COLOR_NAVY
    set YD[$0000000E] = PLAYER_COLOR_TURQUOISE
    set YD[$0000000F] = PLAYER_COLOR_VIOLET
    set YD[$00000010] = PLAYER_COLOR_WHEAT
    set YD[$00000011] = PLAYER_COLOR_PEACH
    set YD[$00000012] = PLAYER_COLOR_MINT
    set YD[$00000013] = PLAYER_COLOR_LAVENDER
    set YD[$00000014] = PLAYER_COLOR_COAL
    set YD[$00000015] = PLAYER_COLOR_SNOW
    set YD[$00000016] = PLAYER_COLOR_EMERALD
    set YD[$00000017] = PLAYER_COLOR_PEANUT
    set YD[$00000018] = dD
    set YD[$00000019] = fD
    set YD[$0000001A] = RD
    set YD[$0000001B] = TD
    return true
endfunction
function Wus takes string Qus returns boolean
    set DSw[ASw] = Qus
    set ASw = ASw + 1
    call jts("when calling new_HashMap in CustomPlayer, line 26")
    call jts("when calling new_HashMap in CustomPlayer, line 27")
    set ASw = ASw - 1
    return true
endfunction
function Q4u takes nothing returns boolean
    set ASw = 0
    return Wus("via function reference CustomPlayer, line 15")
endfunction
function l3s takes string O3s returns nothing
    set DSw[ASw] = O3s
    set ASw = ASw + 1
    call GlS(GetTriggerUnit(), $00000003, false, "when calling onRevivalLocationEntered in RevivalLocations, line 129")
    set ASw = ASw - 1
endfunction
function Q5w takes nothing returns nothing
    set ASw = 0
    call l3s("via function reference RevivalLocations, line 128")
endfunction
function Q7u takes nothing returns boolean
    return GetUnitTypeId(GetTriggerUnit()) == 1211117641 and GetOrderTargetUnit() == MY and GetHeroLevel(GetTriggerUnit()) >= 99 and IsPlayerInForce(GetOwningPlayer(GetTriggerUnit()), Kr) == false and IsUnitInGroup(GetTriggerUnit(), kpu(300., GetUnitLoc(GetOrderTargetUnit())))
endfunction
function fhr takes nothing returns boolean
    return GetUnitTypeId(GetTriggerUnit()) == 1211117638
endfunction
function gPr takes nothing returns boolean
    return GetUnitTypeId(GetTriggerUnit()) == 1211117637
endfunction
function Q9r takes nothing returns nothing
    call ForceAddPlayer(Kr, GetOwningPlayer(GetTriggerUnit()))
    call PlaySoundBJ(Se)
    if gPr() then
        call DisplayTextToForce(MwS(GetOwningPlayer(GetTriggerUnit())), "|cffffcc00Class Trainer|r : |cff87ceebAh my child. You have arrived. Speak to the High Priest Stendarr for he has a task for you. Complete the task, and you shall gain a letter of recommendation which will prove that you are worthy to further spread the Highfather's word. Go now, he is waiting in the Cathedral right here in this city.")
        call T_i(GetOwningPlayer(GetTriggerUnit()), $00000000, "3rd Job Advancement Quest", "I must speak to the High Priest Stendarr, for he has a task for me. I need to complete it and gain a letter of recommendation.", "ReplaceableTextures\\CommandButtons\\BTNSell.blp")
        set Lr[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))] = bj_lastCreatedQuest
        set ds[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))] = 0
    endif
    if fhr() then
        call DisplayTextToForce(MwS(GetOwningPlayer(GetTriggerUnit())), "|cffffcc00Class Trainer|r : |cff87ceebWelcome, young Cleric. You have been rather diligent in spreading the goddess Melitele's word. That is good, for now has come the time for you to further advance. The Priestess Shari has personally asked for you. She is waiting right outside of the City; just turn right at the first junction after passing the northern gates. Go, go and speak to her, and if she finds you worthy she will hand you a letter of recommendation, which you shall bring to me if you wish to advance.")
        call T_i(GetOwningPlayer(GetTriggerUnit()), $00000000, "3rd Job Advancement Quest", "I must speak to the Priestess Shari. She has sent for me, and I must do my best to aid her, so she might find me worthy and write a letter of recommendation for me. She can be found just outside of the City, turning right at the very first junction.", "ReplaceableTextures\\CommandButtons\\BTNSell.blp")
        set Lr[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))] = bj_lastCreatedQuest
        set ds[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))] = 0
    endif
endfunction
function QBr takes nothing returns boolean
    local trigger kBr
    local trigger jBr
    local trigger xBr
    local integer vBr
    local integer mBr
    set MH = .015
    set wJ = 1.5
    set uJ = .05
    set rJ = 500.
    set sJ = 450.
    set tJ = 600.
    set iJ = 1.00
    set vBr = 1095577657
    set mBr = 1112354871
    set SJ = vBr
    set cJ = mBr
    set kBr = CreateTrigger()
    call B2S(kBr, kEw)
    set jBr = kBr
    call dUs(jBr, Condition(jEw))
    set xBr = jBr
    call l2w(xBr, EVENT_PLAYER_UNIT_SPELL_EFFECT)
    set kBr = null
    set jBr = null
    set xBr = null
    return true
endfunction
function QBt takes nothing returns boolean
    return Oi[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))] >= 10 and GetUnitTypeId(GetOrderTargetUnit()) == sr and IsUnitInGroup(GetTriggerUnit(), kpu(300., GetUnitLoc(GetOrderTargetUnit())))
endfunction
function QBu takes nothing returns nothing
    call ModifyGateBJ($00000001, FG)
    call DestroyTrigger(GetTriggeringTrigger())
endfunction
function QDs takes nothing returns nothing
    call ForceAddPlayer(ls, GetOwningPlayer(GetKillingUnit()))
    call DisplayTextToForce(MwS(GetOwningPlayer(GetKillingUnit())), "I have killed Stitches and scavenged his hook.")
endfunction
function UaS takes widget EaS, real ZaS returns nothing
    call SetWidgetLife(EaS, ZaS)
endfunction
function w9i takes string C8i returns nothing
    local unit V8i
    local unit B8i
    local real N8i
    local real M8i
    set DSw[ASw] = C8i
    set ASw = ASw + 1
    set V8i = GetTriggerUnit()
    set B8i = GetSpellTargetUnit()
    if (not n2u(B8i))and(not fRi(B8i)) and(not gSr(B8i, l2s(Iji("Avul", "when calling unObfuscate in Avenger_Sacrifice, line 29"), "when calling fromRawCode in Avenger_Sacrifice, line 29"))) and(not gSr(B8i, l2s(Iji("AImx", "when calling unObfuscate in Avenger_Sacrifice, line 29"), "when calling fromRawCode in Avenger_Sacrifice, line 29"))) then
        set N8i = Udi(V8i)
        set M8i = (N8i - N8i * (1. - Fg)) * kg
        if Jyr(SD, Aei(V8i), "when calling has in Avenger_Sacrifice, line 33") and iCu(wps(SD, Aei(V8i), "when calling get in Avenger_Sacrifice, line 33"), "when calling unitFromIndex in Avenger_Sacrifice, line 33") == B8i and Jyr(SD, Aei(B8i), "when calling has in Avenger_Sacrifice, line 33") and iCu(wps(SD, Aei(B8i), "when calling get in Avenger_Sacrifice, line 33"), "when calling unitFromIndex in Avenger_Sacrifice, line 33") == V8i then
            call d1i(V8i, B8i, Udi(B8i) - (Udi(B8i) * (1. - hg) - Fg * l))
            call UaS(V8i, N8i * (1. - Fg))
        else
            if Udi(B8i) * hg > pw then
    call d1i(V8i, B8i, Udi(B8i) - (Udi(B8i) - pw - M8i))
            else
    call d1i(V8i, B8i, Udi(B8i) - (Udi(B8i) * (1. - hg) - M8i))
            endif
            call UaS(V8i, N8i * (1. - Fg))
        endif
    endif
    set ASw = ASw - 1
    set V8i = null
    set B8i = null
endfunction
function QDt takes nothing returns nothing
    set ASw = 0
    call w9i("via function reference Avenger_Sacrifice, line 50")
endfunction
function QEu takes nothing returns boolean
    return (GetItemTypeId(GetManipulatedItem()) == 1227895877 and IsUnitType(GetTriggerUnit(), UNIT_TYPE_HERO) and GetHeroLevel(GetTriggerUnit()) >= 50 and IsPlayerInForce(GetOwningPlayer(GetTriggerUnit()), pc[$00000001]) == false and V[(1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))) * 1000 + fkS(GetTriggerUnit())] == false) != false
endfunction
function QFS takes nothing returns boolean
    if Jc != 3 then
        set bS = lVs(GetTriggerPlayer(), Condition(Vyw))
        call GroupAddGroup(bS, Lc)
        call DestroyGroup(bS)
    endif
    return IsPlayerInForce(GetTriggerPlayer(), Rc[$0000000C]) and Jc == 3
endfunction
function QGr takes nothing returns boolean
    return GetUnitTypeId(GetTriggerUnit()) == 1211117880 and GetUnitTypeId(GetOrderTargetUnit()) == 1747989297 and IsPlayerInForce(GetOwningPlayer(GetTriggerUnit()), rt) == false and IsUnitInGroup(GetTriggerUnit(), kpu(300., GetUnitLoc(GetOrderTargetUnit()))) and GetHeroLevel(GetTriggerUnit()) >= 150
endfunction
function QHs takes nothing returns nothing
    call ForceRemovePlayer(kr, GetOwningPlayer(GetTriggerUnit()))
    call ForceAddPlayer(Tr, GetOwningPlayer(GetTriggerUnit()))
    call DisplayTextToForce(MwS(GetOwningPlayer(GetTriggerUnit())), "|cffffcc00Skypper|r : |cff87ceebOh, so the Father has sent you to me? Ah, yes...well, go talk to Bob the Master Craftsman and then come back to me. Hurry along, now.")
    call QuestSetDescription(dr[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))], "Skypper says I need to talk to Bob the Master Craftsman, who should be in the city.")
endfunction
function QIt takes nothing returns boolean
    return IsUnitType(GetTriggerUnit(), UNIT_TYPE_HERO) != false
endfunction
function Mut takes string Cut returns boolean
    local trigger Vut
    local trigger But
    local trigger Nut
    set DSw[ASw] = Cut
    set ASw = ASw + 1
    set fg = 2.
    set Rg = 600.
    set Tg = 4.
    set Yg = 0.5
    set Gg = 30
    set gg = jts("when calling new_HashMap in Avenger_Champ_MS_RM_Taunt, line 22")
    set Vut = CreateTrigger()
    call B2S(Vut, mvw)
    set But = Vut
    call dUs(But, Condition(Qvw))
    set Nut = But
    call l2w(Nut, EVENT_PLAYER_UNIT_SPELL_EFFECT)
    set ASw = ASw - 1
    set Vut = null
    set But = null
    set Nut = null
    return true
endfunction
function QNi takes nothing returns boolean
    set ASw = 0
    return Mut("via function reference Avenger_Champ_MS_RM_Taunt, line 1")
endfunction
function uDi takes nothing returns boolean
    return IsPlayerInForce(GetOwningPlayer(GetTriggerUnit()), ec[$00000001]) and IsPlayerInForce(GetOwningPlayer(GetTriggerUnit()), ec[$00000002]) == false
endfunction
function QNr takes nothing returns nothing
    call RemoveItem(GetManipulatedItem())
    if uDi() then
        call ForceAddPlayer(pc[$00000002], GetOwningPlayer(GetTriggerUnit()))
        call DisplayTextToForce(MwS(GetOwningPlayer(GetTriggerUnit())), "|cffffcc00Arnold|r : Looks like you're ready to go. An adventurer should always remain as silent as possible and listen to his surroundings, so listen carefully. There is a group of Lizardmen and Snap Dragons nearby and they are threatening the security of this city. I want you to clear them out, so we can continue on with our expedition. 40 of each will do.")
        call T_i(GetOwningPlayer(GetTriggerUnit()), $00000000, "Proving a Worth", "I have to prove my worth as part of Arnold's expedition group. Killing 40 Lizardmen and 40 Snap Dragons should be a piece of cake. They can be found north of the City.", "ReplaceableTextures\\CommandButtons\\BTNReincarnation.blp")
        set wc[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))] = bj_lastCreatedQuest
    endif
endfunction
function Zyi takes nothing returns boolean
    return GetUnitTypeId(GetTriggerUnit()) == 1848652107 or GetUnitTypeId(GetTriggerUnit()) == 1848652098
endfunction
function QOt takes nothing returns boolean
    return IsPlayerInForce(GetOwningPlayer(GetKillingUnit()), pc[$00000007]) and Zyi()
endfunction
function MyS takes nothing returns boolean
    return GetUnitAbilityLevelSwapped($41303159, GetTriggerUnit()) == 30 and GetUnitAbilityLevelSwapped($41303230, GetTriggerUnit()) == 30
endfunction
function QQt takes nothing returns nothing
    if MyS() then
        call ForceAddPlayer(as, GetOwningPlayer(GetTriggerUnit()))
        call ForceAddPlayer(Cr, GetOwningPlayer(GetTriggerUnit()))
        call DisplayTextToForce(MwS(GetOwningPlayer(GetTriggerUnit())), "|cffffcc00Sinclaire the Dark One|r : |cff87ceebI can see from your stance that you have mastered the basic arts of Warp Blade techniques...but that is not enough to impress me. I have discovered that the once docile Owlkin here have been driven to madness because of this dark taint. In order to purify it, you must relieve their suffering. Kill 15 of them and it should prove sufficient.")
        call QuestSetDescription(Lr[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))], "I need to relieve 15 of the Enraged Owlkins here of their suffering.")
    else
        call DisplayTextToForce(MwS(GetOwningPlayer(GetTriggerUnit())), "|cffffcc00Sinclaire the Dark One|r : |cffff0000You are not well learned enough in the Warp Blade techniques. Master all of them first before returning to me.")
    endif
endfunction
function QUr takes nothing returns nothing
    call h8t(Srs())
endfunction
function QZi takes nothing returns boolean
    return ar[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))] >= 15 and GetUnitTypeId(GetOrderTargetUnit()) == sr and IsUnitInGroup(GetTriggerUnit(), kpu(300., GetUnitLoc(GetOrderTargetUnit())))
endfunction
function nnu takes nothing returns boolean
    return GetItemTypeId(GetManipulatedItem()) == 1227895896 or GetItemTypeId(GetManipulatedItem()) == 1227895897 or GetItemTypeId(GetManipulatedItem()) == 1227895894
endfunction
function Q_S takes nothing returns boolean
    return RectContainsUnit(Ob, GetTriggerUnit()) and Zo[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))] == 1 and nnu() and IsPlayerInForce(GetOwningPlayer(GetTriggerUnit()), At) == false
endfunction
function QaS takes nothing returns boolean
    local trigger aaS = CreateTrigger()
    local trigger naS
    local trigger daS
    local trigger faS
    local trigger RaS
    local trigger TaS
    local trigger YaS
    local trigger GaS
    local trigger gaS
    local trigger haS
    local trigger FaS
    local trigger kaS
    local trigger jaS
    local trigger xaS
    local trigger vaS
    local trigger maS
    call QYr(aaS, K2S(wl), null)
    set naS = aaS
    call QYr(naS, K2S(AO), null)
    set daS = naS
    call QYr(daS, K2S(hl), null)
    set faS = daS
    call QYr(faS, K2S(gl), null)
    set RaS = faS
    call QYr(RaS, K2S(KO), null)
    set TaS = RaS
    call QYr(TaS, K2S(DO), null)
    set YaS = TaS
    call QYr(YaS, K2S(HO), null)
    set GaS = YaS
    call QYr(GaS, K2S(BO), null)
    set gaS = GaS
    call QYr(gaS, K2S(LO), null)
    set haS = gaS
    call QYr(haS, K2S(JO), null)
    set FaS = haS
    call QYr(FaS, K2S(XO), null)
    set kaS = FaS
    call QYr(kaS, K2S(VO), null)
    set jaS = kaS
    call QYr(jaS, K2S(NO), null)
    set xaS = jaS
    call QYr(xaS, K2S(AO), null)
    set vaS = xaS
    call QYr(vaS, K2S(CO), null)
    set maS = vaS
    call B2S(maS, ZWw)
    set aaS = null
    set naS = null
    set daS = null
    set faS = null
    set RaS = null
    set TaS = null
    set YaS = null
    set GaS = null
    set gaS = null
    set haS = null
    set FaS = null
    set kaS = null
    set jaS = null
    set xaS = null
    set vaS = null
    set maS = null
    return true
endfunction
function Qcs takes nothing returns nothing
    set uO = Player($00000004)
    call TriggerExecute(OY)
endfunction
function Qct takes nothing returns boolean
    return GetUnitTypeId(GetDyingUnit()) == 1848651851 and IsPlayerInForce(GetOwningPlayer(GetKillingUnit()), IS[$00000003])
endfunction
function Qei takes nothing returns boolean
    return IsUnitType(GetFilterUnit(), UNIT_TYPE_HERO) != false
endfunction
function Qeu takes nothing returns boolean
    return (xo == 4 and IsUnitType(GetTriggerUnit(), UNIT_TYPE_HERO)) != false
endfunction
function Qhi takes nothing returns nothing
    call SetUnitLifePercentBJ(GetEnumUnit(), 100.)
endfunction
function Yrr takes unit drr, integer frr, real Rrr, real Trr returns boolean
    return IssuePointOrderById(drr, frr, Rrr, Trr)
endfunction
function H9i takes integer I9i, string P9i returns integer
    local integer A9i
    local integer D9i
    set DSw[ASw] = P9i
    set ASw = ASw + 1
    set A9i = Xww[wuw[I9i]]
    set D9i = 0
    if A9i != wuw[I9i]then
        set D9i = Lww[A9i]
        call aUi(I9i, A9i, "when calling removeEntry in LinkedList, line 106")
    endif
    set ASw = ASw - 1
    return D9i
endfunction
function cjr takes integer tjr, string ijr returns integer
    local integer Sjr
    set DSw[ASw] = ijr
    set ASw = ASw + 1
    if yN[tjr] == 0 then
        if tjr == 0 then
            call tNr("Nullpointer exception when calling LinkedList.pop", "when calling error in LinkedList, line 101")
        else
            call tNr("Called LinkedList.pop on invalid object.", "when calling error in LinkedList, line 101")
        endif
    endif
    set Sjr = H9i(tjr, "when calling pop in LinkedList, line 101")
    set ASw = ASw - 1
    return Sjr
endfunction
function AVt takes string EVt returns nothing
    local unit ZVt
    local unit UVt
    local unit IVt
    local unit PVt
    set DSw[ASw] = EVt
    set ASw = ASw + 1
    if wds(YW, "when calling size in Imp3DragonFortress, line 1101") == 0 then
        set UVt = dps(aD[Ch], l2s(Iji("h03I", "when calling unObfuscate in Imp3DragonFortress, line 1102"), "when calling fromRawCode in Imp3DragonFortress, line 1102"), FZ, kZ, bj_UNIT_FACING)
        call lKs(UVt, $416C6F63, $00000001)
        set ZVt = UVt
    else
        set IVt = iCu(cjr(YW, "when calling pop in Imp3DragonFortress, line 1105"), "when calling unitFromIndex in Imp3DragonFortress, line 1105")
        call AQs(IVt)
        set PVt = IVt
        call J7i(PVt, FZ, kZ)
        set ZVt = PVt
    endif
    if ZVt != null then
        call vwt(TW, Aei(ZVt), "when calling add in Imp3DragonFortress, line 1108")
        call Yrr(ZVt, $000D0012, jZ, xZ)
    endif
    set ASw = ASw - 1
    set ZVt = null
    set UVt = null
    set IVt = null
    set PVt = null
endfunction
function Qji takes nothing returns nothing
    set ASw = 0
    call AVt("via function reference Imp3DragonFortress, line 1622")
endfunction
function HTu takes string DTu returns string
    return StringCase(DTu, false)
endfunction
function QZs takes string jZs returns boolean
    local boolean xZs = false
    local integer vZs = 0
    local integer mZs = vQt(jZs) - 1
    loop
        exitwhen vZs > mZs
        if Dsi(jZs, vZs) == "0" or Dsi(jZs, vZs) == "1" or Dsi(jZs, vZs) == "2" or Dsi(jZs, vZs) == "3" or Dsi(jZs, vZs) == "4" or Dsi(jZs, vZs) == "5" or Dsi(jZs, vZs) == "6" or Dsi(jZs, vZs) == "7" or Dsi(jZs, vZs) == "8" or Dsi(jZs, vZs) == "9" then
            set xZs = true
        else
            set xZs = false
            return xZs
        endif
        set vZs = vZs + 1
    endloop
    return xZs
endfunction
function XZs takes string AZs, string DZs, string HZs returns boolean
    local boolean JZs
    local integer KZs
    local string LZs
    set DSw[ASw] = HZs
    set ASw = ASw + 1
    set JZs = true
    if vQt(AZs) == vQt(DZs) then
        set KZs = E8s(DZs, "when calling iterator in StringDataUtils, line 88")
        loop
            exitwhen not x9i(KZs)
            set LZs = bEr(KZs)
            if not V2w(AZs, LZs) then
    set JZs = false
    exitwhen true
            endif
        endloop
        call Swr(KZs, "when calling close in StringDataUtils, line 88")
    else
        set JZs = false
    endif
    set ASw = ASw - 1
    return JZs
endfunction
function TGi takes string qGi, integer aGi, string nGi returns boolean
    local boolean dGi
    local integer fGi
    local string RGi
    set DSw[ASw] = nGi
    set ASw = ASw + 1
    set dGi = false
    set fGi = c5r(aGi, "when calling iterator in StringDataUtils, line 79")
    loop
        exitwhen not Tji(fGi)
        set RGi = nPr(LXi(fGi), "when calling stringFromIndex in StringDataUtils, line 79")
        if XZs(qGi, RGi, "when calling containsAllAndOnly in StringDataUtils, line 80") then
            set dGi = true
            exitwhen true
        endif
    endloop
    call vms(fGi, "when calling close in StringDataUtils, line 79")
    set ASw = ASw - 1
    return dGi
endfunction
function XkS takes string KkS returns integer
    local integer LkS
    set DSw[ASw] = KkS
    set ASw = ASw + 1
    if NX == 0 then
        if MX < 32768 then
            set MX = MX + 1
            set LkS = MX
            set wC[LkS] = 892
        else
            call tNr("Out of memory: Could not create CallbackSingle_doAfter_JobAdvancementQuestHandler.", "when calling error in JobAdvancementQuestHandler, line 451")
            set LkS = 0
        endif
    else
        set NX = NX - 1
        set LkS = BX[NX]
        set wC[LkS] = 892
    endif
    set ASw = ASw - 1
    return LkS
endfunction
function wTu takes string BRu returns string
    local integer NRu = 0
    local integer MRu = vQt(BRu)
    loop
        exitwhen not(NRu != MRu and Dsi(BRu, NRu) == " ")
        set NRu = NRu + 1
    endloop
    loop
        exitwhen not(NRu != MRu and Dsi(BRu, MRu - 1) == " ")
        set MRu = MRu - 1
    endloop
    return CAw(BRu, NRu, MRu)
endfunction
function xEt takes string kEt returns integer
    local integer jEt
    set DSw[ASw] = kEt
    set ASw = ASw + 1
    if NX == 0 then
        if MX < 32768 then
            set MX = MX + 1
            set jEt = MX
            set wC[jEt] = 891
        else
            call tNr("Out of memory: Could not create CallbackSingle_doAfter_JobAdvancementQuestHandler.", "when calling error in JobAdvancementQuestHandler, line 441")
            set jEt = 0
        endif
    else
        set NX = NX - 1
        set jEt = BX[NX]
        set wC[jEt] = 891
    endif
    set ASw = ASw - 1
    return jEt
endfunction
function paS takes string PqS returns nothing
    local integer AqS
    local integer DqS
    local string HqS
    local string JqS
    local string KqS
    local boolean LqS
    local integer XqS
    local boolean CqS
    local boolean VqS
    local string BqS
    local boolean NqS
    local boolean MqS
    local string waS
    local boolean uaS
    local string raS
    local boolean saS
    local integer taS
    local integer iaS
    local string SaS
    local boolean caS
    local boolean oaS
    local boolean OaS
    local integer laS
    local integer baS
    local real yaS
    set DSw[ASw] = PqS
    set ASw = ASw + 1
    set Ru = true
    if GetTriggerPlayer() == null then
        set ASw = ASw - 1
        return
    endif
    set AqS = hgr(GetTriggerPlayer())
    set DqS = xus(AqS, "when calling getCustomPlayer in JobAdvancementQuestHandler, line 385")
    call xMi(DqS, "when calling getCHero in JobAdvancementQuestHandler, line 386")
    set HqS = wTu(HTu(GetEventPlayerChatString()))
    set JqS = " "
    set KqS = "."
    set LqS = true
    if (not GpS(DI, R9S(wTu(HqS)), "when calling has in JobAdvancementQuestHandler, line 393"))or(not GpS(DI, R9S(CAw(HqS, $00000000, BgS(HqS, JqS))), "when calling has in JobAdvancementQuestHandler, line 393")) then
        if not TGi(wTu(HqS), HI, "when calling containsAllAndOnlyOfList in JobAdvancementQuestHandler, line 394") then
            set XqS = 0
            if V2w(HqS, JqS) then
    set XqS = BgS(HqS, JqS)
            endif
            if LqS then
    set CqS = not GpS(KI, R9S(HqS), "when calling has in JobAdvancementQuestHandler, line 400")
            else
    set CqS = LqS
            endif
            set LqS = CqS
            if LqS then
    set VqS = not GpS(LI, R9S(HqS), "when calling has in JobAdvancementQuestHandler, line 401")
            else
    set VqS = LqS
            endif
            set LqS = VqS
            if V2w(HqS, KqS) then
    set BqS = CAw(HqS, $00000000, BgS(HqS, KqS) + 1)
    if LqS then
                    set NqS = not GpS(XI, R9S(BqS), "when calling has in JobAdvancementQuestHandler, line 405")
    else
                    set NqS = LqS
    endif
    set LqS = NqS
    if LqS then
                    set MqS = not GpS(CI, R9S(BqS), "when calling has in JobAdvancementQuestHandler, line 406")
    else
                    set MqS = LqS
    endif
    set LqS = MqS
    if QZs(Dsi(HqS, $00000000)) and QZs(Dsi(HqS, $00000001)) then
                    set waS = CAw(HqS, $00000002, BgS(HqS, KqS) + 1)
                    if LqS then
                        set uaS = not GpS(VI, R9S(waS), "when calling has in JobAdvancementQuestHandler, line 410")
                    else
                        set uaS = LqS
                    endif
                    set LqS = uaS
    elseif QZs(Dsi(HqS, $00000000)) then
                    set raS = CAw(HqS, $00000001, BgS(HqS, KqS) + 1)
                    if LqS then
                        set saS = not GpS(VI, R9S(raS), "when calling has in JobAdvancementQuestHandler, line 414")
                    else
                        set saS = LqS
                    endif
                    set LqS = saS
    endif
            endif
            if (not(XqS > 0))and LqS then
    set taS = 0
    set iaS = vQt(HqS)
    loop
                    exitwhen taS > iaS
                    set SaS = CAw(HqS, $00000000, taS)
                    if LqS then
                        set caS = not GpS(KI, R9S(SaS), "when calling has in JobAdvancementQuestHandler, line 420")
                    else
                        set caS = LqS
                    endif
                    set LqS = caS
                    if LqS then
                        set oaS = not GpS(LI, R9S(SaS), "when calling has in JobAdvancementQuestHandler, line 421")
                    else
                        set oaS = LqS
                    endif
                    set LqS = oaS
                    if LqS then
                        set OaS = not GpS(JI, R9S(SaS), "when calling has in JobAdvancementQuestHandler, line 422")
                    else
                        set OaS = LqS
                    endif
                    set LqS = OaS
                    set taS = taS + 1
    endloop
            endif
            if not LqS then
    call GVw(AI, AqS, R9S(HqS), "when calling put in JobAdvancementQuestHandler, line 425")
    call GVw(PI, R9S(HqS), O_i(false), "when calling put in JobAdvancementQuestHandler, line 426")
    if not GpS(BI, AqS, "when calling has in JobAdvancementQuestHandler, line 428") then
                    call vwt(BI, AqS, "when calling add in JobAdvancementQuestHandler, line 429")
    endif
    if not GpS(SP, AqS, "when calling has in JobAdvancementQuestHandler, line 431") then
                    if not Jyr(nA, AqS, "when calling has in JobAdvancementQuestHandler, line 432") then
                        call GVw(nA, AqS, $00000001, "when calling put in JobAdvancementQuestHandler, line 433")
                    else
                        call GVw(nA, AqS, wps(nA, AqS, "when calling get in JobAdvancementQuestHandler, line 435") + 1, "when calling put in JobAdvancementQuestHandler, line 435")
                    endif
    endif
    if not GpS(SP, AqS, "when calling has in JobAdvancementQuestHandler, line 437") then
                    call dii(Iji("Unknown command/action detected. Save-Load is disabled for 300.0 seconds to prevent cheating.", "when calling unObfuscate in JobAdvancementQuestHandler, line 438"), 8., aD[AqS])
                    call vwt(SP, AqS, "when calling add in JobAdvancementQuestHandler, line 439")
                    set laS = xEt("when calling alloc_CallbackSingle_doAfter_JobAdvancementQuestHandler in JobAdvancementQuestHandler, line 441")
                    call RUs(laS)
                    set M0w[laS] = AqS
                    call Ybr(5., laS, "when calling doAfter in JobAdvancementQuestHandler, line 441")
    endif
    call GVw(OA, AqS, O_i(true), "when calling put in JobAdvancementQuestHandler, line 446")
    if not GpS(aP, AqS, "when calling has in JobAdvancementQuestHandler, line 448") then
                    call vwt(aP, AqS, "when calling add in JobAdvancementQuestHandler, line 449")
    endif
    set yaS = rP * wps(nA, AqS, "when calling get in JobAdvancementQuestHandler, line 451")
    set baS = XkS("when calling alloc_CallbackSingle_doAfter_JobAdvancementQuestHandler in JobAdvancementQuestHandler, line 451")
    call RUs(baS)
    set www_5280[baS] = AqS
    call Ybr(yaS, baS, "when calling doAfter in JobAdvancementQuestHandler, line 451")
            endif
        else
            call GVw(AI, AqS, R9S(HqS), "when calling put in JobAdvancementQuestHandler, line 457")
            call GVw(PI, R9S(HqS), O_i(true), "when calling put in JobAdvancementQuestHandler, line 458")
        endif
    else
        call GVw(AI, AqS, R9S(HqS), "when calling put in JobAdvancementQuestHandler, line 460")
        call GVw(PI, R9S(HqS), O_i(true), "when calling put in JobAdvancementQuestHandler, line 461")
    endif
    set ASw = ASw - 1
endfunction
function Qjt takes nothing returns nothing
    set ASw = 0
    call paS("via function reference JobAdvancementQuestHandler, line 1012")
endfunction
function Qkr takes nothing returns boolean
    return GetUnitTypeId(GetDyingUnit()) == 1848652100 or GetUnitTypeId(GetDyingUnit()) == 1848652101 or GetUnitTypeId(GetDyingUnit()) == 1848652102 and IsPlayerInForce(GetOwningPlayer(GetKillingUnit()), IS[$0000000F])
endfunction
function Grr takes nothing returns boolean
    return GetPlayerController(GetOwningPlayer(Pr[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))])) == MAP_CONTROL_USER
endfunction
function IFS takes nothing returns boolean
    return GetUnitTypeId(GetEnumUnit()) == 1429221454 and dO[$00000001] == 2
endfunction
function kXw takes nothing returns boolean
    return GetUnitTypeId(GetEnumUnit()) == 1429221455 and dO[$00000002] == 2
endfunction
function qUr takes nothing returns boolean
    return GetUnitTypeId(GetEnumUnit()) != 1429221454 and GetUnitTypeId(GetEnumUnit()) != 1429221455
endfunction
function Qli takes nothing returns nothing
    if qUr() then
    else
        if IFS() then
        endif
        if kXw() then
        endif
    endif
    if not m9r(GetEnumUnit()) then
        if Grr() then
            call UnitDamageTargetBJ(GetTriggerUnit(), GetEnumUnit(), 50000. * I2R(GetUnitAbilityLevelSwapped(GetSpellAbilityId(), GetTriggerUnit())), ATTACK_TYPE_MAGIC, DAMAGE_TYPE_MAGIC)
        else
            call UnitDamageTargetBJ(GetTriggerUnit(), GetEnumUnit(), 100000. * I2R(GetUnitAbilityLevelSwapped(GetSpellAbilityId(), GetTriggerUnit())), ATTACK_TYPE_CHAOS, DAMAGE_TYPE_UNIVERSAL)
        endif
    endif
endfunction
function Qls takes nothing returns nothing
    set vs[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))] = 4
    call DisplayTextToForce(MwS(GetOwningPlayer(GetTriggerUnit())), "|cffffcc00Skypper|r : |cff87ceebHow should I know where...oh...you mean THAT altar? Hrrnh...I think I last saw it near the Bandit camps in the forests near Espenia Town. Didn't think much of it because it looked more like a throne to me. Sorry I can't be of much help.")
    call QuestSetDescription(Lr[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))], "I need to find the location of the Altar of the Highfather.\nClues:\n-Near Bandit Camps\n-Near Espenia Town\n-Is in a Forest\n-Looks like a throne.")
endfunction
function Lxu takes unit Dxu, string Hxu returns boolean
    local integer Jxu
    local boolean Kxu
    set DSw[ASw] = Hxu
    set ASw = ASw + 1
    set Jxu = GetRandomInt($00000000, wds(DG, "when calling size in AC_Abilities, line 16") - 1)
    set Kxu = V5S(Dxu, C_r(DG, Jxu, "when calling get in AC_Abilities, line 18"))
    set ASw = ASw - 1
    return Kxu
endfunction
function Uti takes string Zti returns nothing
    set DSw[ASw] = Zti
    set ASw = ASw + 1
    call Lxu(GetEnumUnit(), "when calling ac_addRandomDebuff in JobAdvancementQuestHandler, line 1079")
    set ASw = ASw - 1
endfunction
function Qmi takes nothing returns nothing
    set ASw = 0
    call Uti("via function reference JobAdvancementQuestHandler, line 1078")
endfunction
function Qnu takes nothing returns boolean
    local unit vnu
    local boolean mnu
    if GetTriggerUnit() == null then
        set vnu = GetEnteringUnit()
    else
        set vnu = GetTriggerUnit()
    endif
    set mnu = giS(vnu, UNIT_TYPE_HERO)
    set vnu = null
    return mnu
endfunction
function ays takes trigger qys returns boolean
    return IsTriggerEnabled(qys)
endfunction
function Fcr takes integer gcr, string hcr returns nothing
    set DSw[ASw] = hcr
    set ASw = ASw + 1
    if YV[gcr] == 0 then
        call tNr("Double free: object of type Active", "when calling error in DmgMod, line 58")
    else
        set fV[RV] = gcr
        set RV = RV + 1
        set YV[gcr] = 0
    endif
    set ASw = ASw - 1
endfunction
function FVr takes integer hVr returns nothing
    set wx = wx - 1
    if hVr != Nj then
        set x3[j3[hVr]] = x3[hVr]
    else
        set Nj = x3[hVr]
    endif
    if hVr != Mj then
        set j3[x3[hVr]] = j3[hVr]
    else
        set Mj = j3[hVr]
    endif
endfunction
function cFu takes integer iFu, string SFu returns nothing
    set DSw[ASw] = SFu
    set ASw = ASw + 1
    if YV[iFu] == 0 then
        if iFu == 0 then
            call tNr("Nullpointer exception when calling Active.remove", "when calling error in LinkedListModule, line 37")
        else
            call tNr("Called Active.remove on invalid object.", "when calling error in LinkedListModule, line 37")
        endif
    endif
    call FVr(iFu)
    set ASw = ASw - 1
endfunction
function j4w takes integer F4w, string k4w returns nothing
    set DSw[ASw] = k4w
    set ASw = ASw + 1
    call cFu(F4w, "when calling remove in LinkedListModule, line 49")
    set ASw = ASw - 1
endfunction
function dXt takes integer aXt, string nXt returns nothing
    set DSw[ASw] = nXt
    set ASw = ASw + 1
    call j4w(aXt, "when calling Active_onDestroy in DmgMod, line 58")
    call Fcr(aXt, "when calling dealloc_Active in DmgMod, line 58")
    set ASw = ASw - 1
endfunction
function hxr takes integer Gxr, string gxr returns nothing
    set DSw[ASw] = gxr
    set ASw = ASw + 1
    if YV[Gxr] == 0 then
        if Gxr == 0 then
            call tNr("Nullpointer exception when calling Active.Active", "when calling error in DmgMod, line 58")
        else
            call tNr("Called Active.Active on invalid object.", "when calling error in DmgMod, line 58")
        endif
    endif
    call dXt(Gxr, "when calling destroyActive in DmgMod, line 58")
    set ASw = ASw - 1
endfunction
function T4t takes string a4t returns nothing
    local integer n4t
    local real d4t
    local real f4t
    local boolean R4t
    set DSw[ASw] = a4t
    set ASw = ASw + 1
    loop
        exitwhen not(Nj != 0)
        set n4t = Nj
        set d4t = GetWidgetLife(R3[n4t])
        if F3[n4t] and(not k3[n4t]) then
            set f4t = d4t
        else
            set f4t = Y3[n4t] + d4t - G3[n4t] + g3[n4t]
        endif
        if k3[n4t]then
            call Q_s(R3[n4t], Cj)
        endif
        if f4t - h3[n4t] > 0.405 then
            call GYS(R3[n4t], f4t - h3[n4t])
        else
            set R4t = ays(f3[n4t])
            call SqS(f3[n4t])
            call d1i(T3[n4t], R3[n4t], Vj + 0.)
            if R4t then
    call Y2r(f3[n4t])
            endif
        endif
        call hxr(n4t, "when calling dispatch_Active_destroyActive in DmgMod, line 96")
    endloop
    set ASw = ASw - 1
endfunction
function QpS takes nothing returns nothing
    set ASw = 0
    call T4t("via function reference DmgMod, line 74")
endfunction
function A3r takes nothing returns boolean
    return IsPlayerInForce(GetOwningPlayer(GetTriggerUnit()), ec[$00000004]) and IsPlayerInForce(GetOwningPlayer(GetTriggerUnit()), ec[$00000005]) == false
endfunction
function Qpr takes nothing returns nothing
    call RemoveItem(GetManipulatedItem())
    if A3r() then
        call ForceAddPlayer(pc[$00000005], GetOwningPlayer(GetTriggerUnit()))
        call DisplayTextToForce(MwS(GetOwningPlayer(GetTriggerUnit())), "|cffffcc00Arnold|r : Hey you! I've got good news and bad news for you. The bad news is that I've deployed some soldiers and medics to Glacier Forest encampment and somehow they went missing. Also, I've received disturbing news saying that they went into a city nearby and disappeared ever since. This is awkward as there aren't any known civilisations nearby. The good news is, you have the most important task of finding them. Now get over to Glacier Forest and find out what's happening!")
        call T_i(GetOwningPlayer(GetTriggerUnit()), $00000000, "Deja Vu", "An unknown city huh? Looks like I have to find out what's the problem.", "ReplaceableTextures\\CommandButtons\\BTNMassTeleport.blp")
        set QS[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))] = bj_lastCreatedQuest
    endif
endfunction
function Qur takes nothing returns nothing
    call ForceAddPlayer(rt, GetOwningPlayer(GetTriggerUnit()))
    call DisplayTextToForce(MwS(GetOwningPlayer(GetTriggerUnit())), "|cffffcc00Count Crowley|r : |cff87ceebWe meet again, young one...Grand Inquisitor? Oh, oh yes...then you must prove your skills to me! Go, go and kill 40 Demons in the Rite of Passage...only then shall you be complete....heh heh.")
    call PlaySoundBJ(Se)
    call T_i(GetOwningPlayer(GetTriggerUnit()), $00000000, "4th Job Advancement Quest", "I have to kill 40 Demons in the Rite of Passage.", "ReplaceableTextures\\PassiveButtons\\PASBTNGenericSpellImmunity.blp")
    set st[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))] = bj_lastCreatedQuest
    set kt[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))] = 0
endfunction
function Qxu takes nothing returns nothing
    set Du[$00000001] = 1211117623
    set Du[$00000002] = 1211117620
    set Du[$00000003] = 1211117634
    set Du[$00000004] = 1211117622
    set Du[$00000005] = 1211117621
    set Du[$00000006] = 1211117617
    set Du[$00000007] = 1211117618
    set Du[$00000008] = 1211117619
    set Du[$00000009] = 1211117633
    set Du[$0000000A] = 1211117624
    set Du[$0000000B] = 1211117625
    set Du[$0000000C] = 1211117640
    set Du[$0000000D] = 1211117643
    set Du[$0000000E] = 1211117637
    set Du[$0000000F] = 1211117638
    set Du[$00000010] = 1211117639
    set Du[$00000011] = 1211117642
    set Du[$00000012] = 1211117641
    set Du[$00000013] = 1211117644
    set Du[$00000014] = 1211117645
    set Du[$00000015] = 1211117873
    set Du[$00000016] = 1211117872
    set Du[$00000017] = 1211117874
    set Du[$00000018] = 1211117875
    set Du[$00000019] = 1211117892
    set Du[$0000001A] = 1211117891
    set Du[$0000001B] = 1211117877
    set Du[$0000001C] = 1211117876
    set Du[$0000001D] = 1211117894
    set Du[$0000001E] = 1211117893
    set Du[$0000001F] = 1211117890
    set Du[$00000020] = 1211117889
    set Du[$00000021] = 1211117879
    set Du[$00000022] = 1211117878
    set Du[$00000023] = 1211117881
    set Du[$00000024] = 1211117880
    set Du[$00000025] = 1211118131
    set Du[$00000026] = 1211118132
    set Du[$00000027] = 1211118147
    set Du[$00000028] = 1211118146
    set Du[$00000029] = 1211118149
    set Du[$0000002A] = 1211118150
    set Du[$0000002B] = 1211118155
    set Du[$0000002C] = 1211118152
    set Du[$0000002D] = 1211118157
    set Du[$0000002E] = 1211118161
    set Du[$0000002F] = 1211118156
    set Du[$00000030] = 1211118159
    set Du[$00000031] = 1211118158
    set Du[$00000032] = 1211118160
    set Du[$00000033] = 1211118162
    set Du[$00000034] = 1211118163
    set Vu = 52
    set Hu[$00000001] = 1227894835
    set Hu[$00000002] = 1227894833
    set Hu[$00000003] = 1227894834
    set Hu[$00000004] = 1227894840
    set Hu[$00000005] = 1227894841
    set Hu[$00000006] = 1227894850
    set Hu[$00000007] = 1227894839
    set Hu[$00000008] = 1227894851
    set Hu[$00000009] = 1227894838
    set Hu[$0000000A] = 1227894836
    set Hu[$0000000B] = 1227894852
    set Hu[$0000000C] = 1227894853
    set Hu[$0000000D] = 1227894837
    set Hu[$0000000E] = 1227894855
    set Hu[$0000000F] = 1227894856
    set Hu[$00000010] = 1227894858
    set Hu[$00000011] = 1227894857
    set Hu[$00000012] = 1227894849
    set Hu[$00000013] = 1227894854
    set Hu[$00000014] = 1227894866
    set Hu[$00000015] = 1227894864
    set Hu[$00000016] = 1227894863
    set Hu[$00000017] = 1227894861
    set Hu[$00000018] = 1227894860
    set Hu[$00000019] = 1227894865
    set Hu[$0000001A] = 1227894862
    set Hu[$0000001B] = 1227894867
    set Hu[$0000001C] = 1227895111
    set Hu[$0000001D] = 1227895110
    set Hu[$0000001F] = 1227895109
    set Hu[$00000020] = 1227895116
    set Hu[$00000021] = 1227895125
    set Hu[$00000022] = 1227895347
    set Hu[$00000023] = 1227895128
    set Hu[$00000024] = 1227895112
    set Hu[$00000025] = 1227895348
    set Hu[$00000026] = 1227895123
    set Hu[$00000027] = 1227895115
    set Hu[$00000028] = 1227895344
    set Hu[$00000029] = 1227895345
    set Hu[$0000002A] = 1227895113
    set Hu[$0000002B] = 1227895124
    set Hu[$0000002C] = 1227895121
    set Hu[$0000002D] = 1227895122
    set Hu[$0000002E] = 1227895114
    set Hu[$0000002F] = 1227895120
    set Hu[$00000030] = 1227895130
    set Hu[$00000031] = 1227895346
    set Hu[$00000032] = 1227895117
    set Hu[$00000033] = 1227895129
    set Hu[$00000034] = 1227895119
    set Hu[$00000035] = 1227895118
    set Hu[$00000036] = 1227895126
    set Hu[$00000037] = 1227895127
    set Hu[$00000038] = 1227895350
    set Hu[$00000039] = 1227895366
    set Hu[$0000003A] = 1227895353
    set Hu[$0000003B] = 1227895363
    set Hu[$0000003C] = 1227895368
    set Hu[$0000003D] = 1227895367
    set Hu[$0000003E] = 1227895364
    set Hu[$0000003F] = 1227895361
    set Hu[$00000040] = 1227895362
    set Hu[$00000041] = 1227895365
    set Hu[$00000042] = 1227895369
    set Hu[$00000043] = 1227895371
    set Hu[$00000044] = 1227895370
    set Hu[$00000047] = 1227895383
    set Hu[$00000048] = 1227895376
    set Hu[$00000049] = 1227895377
    set Hu[$0000004B] = 1227895384
    set Hu[$0000004D] = 1227895372
    set Hu[$0000004E] = 1227895381
    set Hu[$0000004F] = 1227895380
    set Hu[$00000050] = 1227895374
    set Hu[$00000051] = 1227895382
    set Hu[$00000053] = 1227895375
    set Hu[$00000054] = 1227895378
    set Hu[$00000055] = 1227895373
    set Hu[$00000056] = 1227895600
    set Hu[$00000057] = 1227895603
    set Hu[$00000058] = 1227895604
    set Hu[$00000059] = 1227895609
    set Hu[$0000005A] = 1227895606
    set Hu[$0000005B] = 1227895607
    set Hu[$0000005C] = 1227895617
    set Hu[$0000005D] = 1227895619
    set Hu[$0000005E] = 1227895618
    set Hu[$0000005F] = 1227895605
    set Hu[$00000060] = 1227895608
    set Hu[$00000061] = 1227895623
    set Hu[$00000062] = 1227895622
    set Hu[$00000063] = 1227895625
    set Hu[$00000064] = 1227895624
    set Hu[$00000065] = 1227895628
    set Hu[$00000066] = 1227895630
    set Hu[$00000067] = 1227895634
    set Hu[$00000068] = 1227895638
    set Hu[$00000069] = 1227895633
    set Hu[$0000006A] = 1227895629
    set Hu[$0000006B] = 1227895636
    set Hu[$0000006C] = 1227895627
    set Hu[$0000006D] = 1227895637
    set Hu[$0000006E] = 1227895635
    set Hu[$00000071] = 1227895640
    set Hu[$00000072] = 1227895639
    set Hu[$00000074] = 1227895641
    set Hu[$00000075] = 1227895861
    set Hu[$00000079] = 1227895642
    set Hu[$0000007B] = 1227895632
    set Hu[$0000007C] = 1227895631
    set Hu[$00000085] = 1227895898
    set Hu[$00000086] = 1227895895
    set Hu[$00000087] = 1227895894
    set Hu[$00000088] = 1227895897
    set Hu[$00000089] = 1227895896
    set Hu[$0000008A] = 1227896118
    set Hu[$0000008B] = 1227896116
    set Hu[$0000008C] = 1227896115
    set Hu[$0000008D] = 1227896121
    set Hu[$0000008E] = 1227896120
    set Hu[$0000008F] = 1227896114
    set Hu[$00000090] = 1227896129
    set Hu[$00000091] = 1227896117
    set Hu[$00000092] = 1227896113
    set Hu[$00000093] = 1227896112
    set Hu[$00000094] = 1227896119
    set Hu[$0000009D] = 1227896136
    set Hu[$000000BA] = 1227896143
    set Hu[$0000009E] = 1227895386
    set Hu[$0000009F] = 1227895862
    set Hu[$000000A0] = 1227895886
    set Hu[$000000A1] = 1227895887
    set Hu[$000000A2] = 1227895888
    set Hu[$000000A3] = 1227895863
    set Hu[$000000A4] = 1227896135
    set Hu[$000000A5] = 1227896134
    set Hu[$000000A6] = 1227895108
    set Hu[$000000B1] = 1227896138
    set Hu[$000000A7] = 1227895858
    set Hu[$000000A8] = 1227895856
    set Hu[$000000A9] = 1227895860
    set Hu[$000000AA] = 1227895860
    set Hu[$000000AB] = 1227895857
    set Hu[$000000AC] = 1227895883
    set Hu[$000000AD] = 1227895385
    set Hu[$000000BB] = 1227896144
    set Hu[$000000AE] = 1227895884
    set Hu[$000000AF] = 1227895882
    set Hu[$000000B0] = 1227895885
    set Hu[$000000B2] = 1227895880
    set Hu[$000000B3] = 1227896139
    set Hu[$000000B4] = 1227896140
    set Hu[$000000B7] = 1227896137
    set Hu[$000000B5] = 1227895602
    set Hu[$000000B6] = 1227895601
    set Hu[$000000B8] = 1229210963
    set Hu[$000000B9] = 1229146198
    set Bu = 187
    set Ju[$00000001] = 1093677109
    set Ju[$00000002] = 1093677108
    set Ju[$00000003] = 1093677104
    set Ju[$00000004] = 1093677105
    set Ju[$00000005] = 1093677107
    set Ju[$00000006] = 1093677106
    set Ju[$00000007] = 1093677112
    set Ju[$00000008] = 1093677110
    set Ju[$00000009] = 1093677113
    set Ju[$0000000A] = 1093677111
    set Ju[$0000000B] = 1093677133
    set Ju[$0000000C] = 1093677132
    set Ju[$0000000D] = 1093677131
    set Ju[$0000000E] = 1093677134
    set Ju[$0000000F] = 1093677127
    set Ju[$00000010] = 1093677125
    set Ju[$00000011] = 1093677128
    set Ju[$00000012] = 1093677126
    set Ju[$00000013] = 1093677121
    set Ju[$00000014] = 1093677124
    set Ju[$00000015] = 1093677122
    set Ju[$00000016] = 1093677123
    set Ju[$00000017] = 1093677138
    set Ju[$00000018] = 1093677139
    set Ju[$00000019] = 1093677140
    set Ju[$0000001A] = 1093677141
    set Ju[$0000001B] = 1093677360
    set Ju[$0000001C] = 1093677362
    set Ju[$0000001D] = 1093677146
    set Ju[$0000001E] = 1093677361
    set Ju[$0000001F] = 1093677143
    set Ju[$00000020] = 1093677144
    set Ju[$00000021] = 1093677142
    set Ju[$00000022] = 1093677145
    set Ju[$00000023] = 1093677387
    set Ju[$00000024] = 1093677386
    set Ju[$00000025] = 1093677385
    set Ju[$00000026] = 1093677378
    set Ju[$00000027] = 1093677381
    set Ju[$00000028] = 1093677382
    set Ju[$00000029] = 1093677383
    set Ju[$0000002A] = 1093677384
    set Ju[$0000002B] = 1093677367
    set Ju[$0000002C] = 1093677366
    set Ju[$0000002D] = 1093677365
    set Ju[$0000002E] = 1093677368
    set Ju[$0000002F] = 1093677379
    set Ju[$00000030] = 1093677380
    set Ju[$00000031] = 1093677369
    set Ju[$00000032] = 1093677377
    set Ju[$00000033] = 1093677396
    set Ju[$00000034] = 1093677397
    set Ju[$00000035] = 1093677398
    set Ju[$00000036] = 1093677399
    set Ju[$00000037] = 1093677401
    set Ju[$00000038] = 1093677616
    set Ju[$00000039] = 1093677402
    set Ju[$0000003A] = 1093677400
    set Ju[$0000003B] = 1093677393
    set Ju[$0000003C] = 1093677392
    set Ju[$0000003D] = 1093677394
    set Ju[$0000003E] = 1093677395
    set Ju[$0000003F] = 1093677391
    set Ju[$00000040] = 1093677390
    set Ju[$00000041] = 1093677389
    set Ju[$00000042] = 1093677388
    set Ju[$00000043] = 1093677876
    set Ju[$00000044] = 1093677909
    set Ju[$00000045] = 1093677892
    set Ju[$00000046] = 1093677879
    set Ju[$00000047] = 1093677912
    set Ju[$00000048] = 1093678648
    set Ju[$00000049] = 1093678132
    set Ju[$0000004A] = 1093678133
    set Ju[$0000004B] = 1093677875
    set Ju[$0000004C] = 1093677894
    set Ju[$0000004D] = 1093678145
    set Ju[$0000004E] = 1093677904
    set Ju[$0000004F] = 1093677872
    set Ju[$00000050] = 1093677907
    set Ju[$00000051] = 1093677908
    set Ju[$00000052] = 1093677889
    set Ju[$00000053] = 1093677654
    set Ju[$00000054] = 1093677873
    set Ju[$00000055] = 1093677898
    set Ju[$00000056] = 1093677896
    set Ju[$00000057] = 1093677658
    set Ju[$00000058] = 1093677893
    set Ju[$00000059] = 1093677897
    set Ju[$0000005A] = 1093678152
    set Ju[$0000005B] = 1093678148
    set Ju[$0000005C] = 1093678150
    set Ju[$0000005D] = 1093677895
    set Ju[$0000005E] = 1093677655
    set Ju[$0000005F] = 1093677881
    set Ju[$00000060] = 1093678128
    set Ju[$00000061] = 1093677891
    set Ju[$00000062] = 1093677880
    set Ju[$00000063] = 1093677901
    set Ju[$00000064] = 1093677878
    set Ju[$00000065] = 1093678131
    set Ju[$00000066] = 1093678129
    set Ju[$00000067] = 1093678130
    set Ju[$00000068] = 1093677905
    set Ju[$00000069] = 1093678146
    set Ju[$0000006A] = 1093678137
    set Ju[$0000006B] = 1093678147
    set Ju[$0000006C] = 1093677902
    set Ju[$0000006D] = 1093677890
    set Ju[$0000006E] = 1093677906
    set Ju[$0000006F] = 1093677903
    set Ju[$00000070] = 1093678135
    set Ju[$00000071] = 1093678134
    set Ju[$00000072] = 1093678136
    set Ju[$00000073] = 1093677656
    set Ju[$00000074] = 1093677899
    set Ju[$00000075] = 1093677900
    set Ju[$00000076] = 1093677877
    set Ju[$00000077] = 1093677657
    set Ju[$00000078] = 1093677874
    set Ju[$00000079] = 1093678169
    set Ju[$0000007A] = 1093678151
    set Ju[$0000007B] = 1093678149
    set Ju[$0000007C] = 1093677652
    set Ju[$0000007D] = 1093677653
    set Ju[$0000007E] = 1093678160
    set Ju[$0000007F] = 1093678164
    set Ju[$00000080] = 1093678167
    set Ju[$00000081] = 1093678163
    set Ju[$00000082] = 1093678913
    set Ju[$00000083] = 1093678161
    set Ju[$00000084] = 1093678165
    set Ju[$00000085] = 1093678168
    set Ju[$00000086] = 1093677910
    set Ju[$00000087] = 1093678170
    set Ju[$00000088] = 1093678386
    set Ju[$00000089] = 1093678389
    set Ju[$0000008A] = 1093678409
    set Ju[$0000008B] = 1093678385
    set Ju[$0000008C] = 1093678388
    set Ju[$0000008D] = 1093678384
    set Ju[$0000008E] = 1093678390
    set Ju[$0000008F] = 1093678644
    set Ju[$00000090] = 1093678658
    set Ju[$00000091] = 1093677913
    set Ju[$00000092] = 1093678645
    set Ju[$00000093] = 1093678642
    set Ju[$00000094] = 1093681997
    set Ju[$00000095] = 1093678646
    set Ju[$00000096] = 1093678647
    set Ju[$00000097] = 1093678657
    set Ju[$00000098] = 1093678933
    set Ju[$00000099] = 1093678927
    set Ju[$0000009A] = 1093678932
    set Ju[$0000009B] = 1093678930
    set Ju[$0000009C] = 1093678931
    set Ju[$0000009D] = 1093678924
    set Ju[$0000009E] = 1093678929
    set Ju[$0000009F] = 1093678926
    set Ju[$000000A0] = 1093678928
    set Ju[$000000A1] = 1093678925
    set Ju[$000000A2] = 1093678921
    set Ju[$000000A3] = 1093678919
    set Ju[$000000A4] = 1093678918
    set Ju[$000000A5] = 1093678920
    set Ju[$000000A6] = 1093678923
    set Ju[$000000A7] = 1093678917
    set Ju[$000000A8] = 1093679436
    set Ju[$000000A9] = 1093678915
    set Ju[$000000AA] = 1093678916
    set Ju[$000000AB] = 1093678914
    set Ju[$000000AC] = 1093678901
    set Ju[$000000AD] = 1093678899
    set Ju[$000000AE] = 1093678902
    set Ju[$000000AF] = 1093678897
    set Ju[$000000B0] = 1093678896
    set Ju[$000000B1] = 1093678904
    set Ju[$000000B2] = 1093678898
    set Ju[$000000B3] = 1093678903
    set Ju[$000000B4] = 1093678900
    set Ju[$000000B5] = 1093678935
    set Ju[$000000B6] = 1093678936
    set Ju[$000000B7] = 1093679152
    set Ju[$000000B8] = 1093678937
    set Ju[$000000B9] = 1093678938
    set Ju[$000000BA] = 1093679156
    set Ju[$000000BB] = 1093679158
    set Ju[$000000BC] = 1093679153
    set Ju[$000000BD] = 1093679154
    set Ju[$000000BE] = 1093679157
    set Ju[$000000BF] = 1093678678
    set Ju[$000000C0] = 1093678680
    set Ju[$000000C1] = 1093678681
    set Ju[$000000C2] = 1093678679
    set Ju[$000000C3] = 1093678682
    set Ju[$000000C4] = 1093678392
    set Ju[$000000C5] = 1093678675
    set Ju[$000000C6] = 1093677640
    set Ju[$000000C7] = 1093678676
    set Ju[$000000C8] = 1093678677
    set Ju[$000000C9] = 1093681740
    set Ju[$000000CA] = 1093681741
    set Ju[$000000CB] = 1093681742
    set Ju[$000000CC] = 1093681743
    set Ju[$000000CD] = 1093681744
    set Ju[$000000CE] = 1093681496
    set Ju[$000000CF] = 1093681990
    set Ju[$000000D0] = 1093682007
    set Ku = 208
    set Lu = "ZWAJKLMNOPQRSTUVabcdefghjkmnopqrs8765432XYBCDEFGHtuvwxyz9"
    set Xu = true
    set Cu = true
    set wr = false
    set Eu = ""
    set Zu[$00000001] = 0
    set Uu = 1
    set Pu = false
    set Iu[$00000001] = 0
    set Au[$00000001] = 0
    call DestroyTrigger(GetTriggeringTrigger())
endfunction
function Iei takes nothing returns boolean
    return UnitHasItemOfTypeBJ(GetTriggerUnit(), $49303059)
endfunction
function YFS takes nothing returns boolean
    return UnitHasItemOfTypeBJ(GetTriggerUnit(), $49303058)
endfunction
function Qyr takes nothing returns nothing
    if YFS() then
        call ForceRemovePlayer(Kr, GetOwningPlayer(GetTriggerUnit()))
        call ForceRemovePlayer(Cr, GetOwningPlayer(GetTriggerUnit()))
        call ForceRemovePlayer(Ys, GetOwningPlayer(GetTriggerUnit()))
        call PlaySoundBJ(ue)
        call SetHeroLevelBJ(GetTriggerUnit(), $00000001, false)
        call RemoveItem(GetItemOfTypeFromUnitBJ(GetTriggerUnit(), $49303058))
        call DisplayTextToForce(MwS(GetOwningPlayer(GetTriggerUnit())), "|cffffcc00Class Trainer|r : |cff87ceebWell done. Master Hannah must really like you to give you a letter of recommendation. Go forth, wizard.")
        call ReplaceUnitBJ(GetTriggerUnit(), $48303137, $00000002)
        call SelectUnitForPlayerSingle(bj_lastReplacedUnit, GetOwningPlayer(GetTriggerUnit()))
        call DestroyQuest(Lr[1 + GetPlayerId(GetOwningPlayer(bj_lastReplacedUnit))])
        call SetHeroLevel(bj_lastReplacedUnit, $00000001, true)
        call UnitStripHeroLevel(bj_lastReplacedUnit, $00000001)
    endif
    if Iei() then
        call ForceRemovePlayer(Kr, GetOwningPlayer(GetTriggerUnit()))
        call ForceRemovePlayer(Cr, GetOwningPlayer(GetTriggerUnit()))
        call ForceRemovePlayer(fs, GetOwningPlayer(GetTriggerUnit()))
        call ForceRemovePlayer(Vr, GetOwningPlayer(GetTriggerUnit()))
        call PlaySoundBJ(ue)
        call SetHeroLevelBJ(GetTriggerUnit(), $00000001, false)
        call RemoveItem(GetItemOfTypeFromUnitBJ(GetTriggerUnit(), $49303059))
        call DisplayTextToForce(MwS(GetOwningPlayer(GetTriggerUnit())), "|cffffcc00Class Trainer|r : |cff87ceebWell done. Master Ember must think highly of you...Sage.")
        call ReplaceUnitBJ(GetTriggerUnit(), $48303136, $00000002)
        call SelectUnitForPlayerSingle(bj_lastReplacedUnit, GetOwningPlayer(GetTriggerUnit()))
        call DestroyQuest(Lr[1 + GetPlayerId(GetOwningPlayer(bj_lastReplacedUnit))])
        call SetHeroLevel(bj_lastReplacedUnit, $00000001, true)
        call UnitStripHeroLevel(bj_lastReplacedUnit, $00000001)
    endif
endfunction
function R1i takes nothing returns nothing
    call PanCameraToTimedLocForPlayer(GetEnumPlayer(), vo, 0.)
    call TriggerExecute(MT)
endfunction
function R4s takes nothing returns boolean
    return true
endfunction
function Bfu takes string Cfu returns integer
    local integer Vfu
    set DSw[ASw] = Cfu
    set ASw = ASw + 1
    if NX == 0 then
        if MX < 32768 then
            set MX = MX + 1
            set Vfu = MX
            set wC[Vfu] = 1004
        else
            call tNr("Out of memory: Could not create CallbackSingle_doAfter_WorldBoss.", "when calling error in WorldBoss, line 45")
            set Vfu = 0
        endif
    else
        set NX = NX - 1
        set Vfu = BX[NX]
        set wC[Vfu] = 1004
    endif
    set ASw = ASw - 1
    return Vfu
endfunction
function q2r takes string p2r returns boolean
    local integer e2r
    set DSw[ASw] = p2r
    set ASw = ASw + 1
    set AX = 1431781936
    set DX = null
    set HX = CreateTrigger()
    set JX = XQt("when calling new_LinkedList in WorldBoss, line 12")
    set KX = 600.
    set e2r = Bfu("when calling alloc_CallbackSingle_doAfter_WorldBoss in WorldBoss, line 45")
    call RUs(e2r)
    call Ybr(1., e2r, "when calling doAfter in WorldBoss, line 45")
    set ASw = ASw - 1
    return true
endfunction
function R5s takes nothing returns boolean
    set ASw = 0
    return q2r("via function reference WorldBoss, line 1")
endfunction
function fSS takes string eSS returns boolean
    local trigger qSS
    local trigger aSS
    local integer nSS
    local integer dSS
    set DSw[ASw] = eSS
    set ASw = ASw + 1
    set UZ = CreateTrigger()
    set IZ = 1966092368
    set PZ = 1429221450
    set AZ = 1429221454
    set DZ = 1429221452
    set HZ = 1429221451
    set JZ = 1429221455
    set KZ = 1429221453
    set LZ = 1429221457
    set XZ = 1429221458
    set CZ = 1969385332
    set VZ = 1966092371
    set BZ = 13
    set NZ = false
    set uU = false
    set rU = Rect(- 5248., - 13696., - 3232., - 12544.)
    set sU = XQt("when calling new_LinkedList in Imp4, line 287")
    set tU = xMr("when calling new_IterableMap in Imp4, line 288")
    set iU = xMr("when calling new_IterableMap in Imp4, line 289")
    set SU = xMr("when calling new_IterableMap in Imp4, line 290")
    set cU = jts("when calling new_HashMap in Imp4, line 291")
    set oU = jts("when calling new_HashMap in Imp4, line 292")
    set OU = xMr("when calling new_IterableMap in Imp4, line 293")
    set lU = XQt("when calling new_LinkedList in Imp4, line 294")
    set bU = xMr("when calling new_IterableMap in Imp4, line 295")
    set yU = xMr("when calling new_IterableMap in Imp4, line 296")
    set pU = "ISUB"
    set eU = 10
    set qU = 3.33
    set aU = 400.
    set nU = 200.
    set dU =- 15.
    set fU[$00000000] = 260.
    set fU[$00000001] = 250.
    set fU[$00000002] = 250.
    set fU[$00000003] = 220.
    set fU[$00000004] = 220
    set fU[$00000005] = 210
    set fU[$00000006] = 200
    set fU[$00000007] = 200
    set fU[$00000008] = 180
    set fU[$00000009] = 170
    set fU[$0000000A] = 160
    set fU[$0000000B] = 150
    set fU[$0000000C] = 150
    set fU[$0000000D] = 150
    set fU[$0000000E] = 150
    set RU[$00000000] = 2
    set RU[$00000001] = 1.93
    set RU[$00000002] = 1.86
    set RU[$00000003] = 1.79
    set RU[$00000004] = 1.72
    set RU[$00000005] = 1.65
    set RU[$00000006] = 1.58
    set RU[$00000007] = 1.51
    set RU[$00000008] = 1.44
    set RU[$00000009] = 1.37
    set RU[$0000000A] = 1.30
    set RU[$0000000B] = 1.23
    set RU[$0000000C] = 1.16
    set RU[$0000000D] = 1.08
    set RU[$0000000E] = 1
    set TU[$00000000] = 0
    set TU[$00000001] = 1
    set TU[$00000002] = 2
    set TU[$00000003] = 3
    set TU[$00000004] = 4
    set TU[$00000005] = 5
    set TU[$00000006] = 6
    set TU[$00000007] = 7
    set TU[$00000008] = 8
    set TU[$00000009] = 9
    set TU[$0000000A] = 10
    set TU[$0000000B] = 11
    set TU[$0000000C] = 12
    set TU[$0000000D] = 13
    set TU[$0000000E] = 14
    set TU[$0000000F] = 14
    set YU = 100.
    set GU = 10.
    set gU = 550.
    set hU = 250000
    set FU = Iji("Effects/ShieldUnlocker.mdx", "when calling unObfuscate in Imp4, line 313")
    set kU = Iji("Abilities/Spells/Items/TomeOfRetraining/TomeOfRetrainingCaster.mdl", "when calling unObfuscate in Imp4, line 314")
    set jU = Iji("Abilities/Weapons/FrostWyrmMissile/FrostWyrmMissile.mdl", "when calling unObfuscate in Imp4, line 315")
    set xU = Iji("Abilities/Spells/Undead/FrostArmor/FrostArmorTarget.mdl", "when calling unObfuscate in Imp4, line 316")
    set vU = Iji("Effects/cannonBarrageBoom.mdx", "when calling unObfuscate in Imp4, line 317")
    set mU = Iji("Effects/cannonBarrageRain.mdx", "when calling unObfuscate in Imp4, line 318")
    set QU = Iji("Abilities/Spells/Demon/DarkPortal/DarkPortalTarget.mdl", "when calling unObfuscate in Imp4, line 319")
    set WU = Iji("Effects/imp4CannonBarrage.mdx", "when calling unObfuscate in Imp4, line 320")
    set EU = false
    set ZU = false
    set UU = 200.
    set IU = 75.
    set PU = 0
    set AU = 0
    set DU = null
    set HU = null
    set nSS = 1095577651
    set dSS = 1112354865
    set JU = nSS
    set KU = dSS
    set qSS = UZ
    call l2w(qSS, EVENT_PLAYER_UNIT_DEATH)
    set aSS = qSS
    call B2S(aSS, OQw)
    set ASw = ASw - 1
    set qSS = null
    set aSS = null
    return true
endfunction
function RAr takes nothing returns boolean
    set ASw = 0
    return fSS("via function reference Imp4, line 1")
endfunction
function VaS takes nothing returns boolean
    return IsPlayerInForce(GetOwningPlayer(GetTriggerUnit()), nc[$00000002]) == false
endfunction
function RDi takes nothing returns nothing
    if VaS() then
        call DisplayTextToForce(MwS(GetOwningPlayer(GetTriggerUnit())), "|cffffcc00Kain|r : What? You're sent by Arnold? I see. He requires the materials already? Man, that guy is always so serious. I'll send him the materials immediately, and please, tell him to lighten up; it'll do him good.")
        call ForceAddPlayer(nc[$00000002], GetOwningPlayer(GetTriggerUnit()))
    endif
endfunction
function REt takes nothing returns boolean
    set Wg = 450
    set Eg = 25
    return true
endfunction
function nAr takes string qAr returns integer
    local integer aAr
    set DSw[ASw] = qAr
    set ASw = ASw + 1
    if NX == 0 then
        if MX < 32768 then
            set MX = MX + 1
            set aAr = MX
            set wC[aAr] = 1041
        else
            call tNr("Out of memory: Could not create CallbackSingle_doAfter_addAction_doAfter_FateDestinyUnlocker.", "when calling error in FateDestinyUnlocker, line 816")
            set aAr = 0
        endif
    else
        set NX = NX - 1
        set aAr = BX[NX]
        set wC[aAr] = 1041
    endif
    set ASw = ASw - 1
    return aAr
endfunction
function FTi takes string GTi returns nothing
    local trigger gTi
    local integer hTi
    set DSw[ASw] = GTi
    set ASw = ASw + 1
    call dii(Iji("Something is engraved in the fence: '...  stabilized magic by combining the three: sulphur, mercury, salt'", "when calling unObfuscate in FateDestinyUnlocker, line 813"), 8., eDs(GetTriggerUnit()))
    set gTi = GetTriggeringTrigger()
    call SqS(gTi)
    set hTi = nAr("when calling alloc_CallbackSingle_doAfter_addAction_doAfter_FateDestinyUnlocker in FateDestinyUnlocker, line 816")
    call RUs(hTi)
    set H7[hTi] = gTi
    call Ybr(30., hTi, "when calling doAfter in FateDestinyUnlocker, line 816")
    set ASw = ASw - 1
    set gTi = null
endfunction
function RHs takes nothing returns nothing
    set ASw = 0
    call FTi("via function reference FateDestinyUnlocker, line 812")
endfunction
function owi takes nothing returns boolean
    return GetUnitTypeId(GetTriggerUnit()) == 1211117890 or GetUnitTypeId(GetTriggerUnit()) == 1211117889
endfunction
function RJi takes nothing returns boolean
    return owi() and GetUnitTypeId(GetOrderTargetUnit()) == 1747989060 and IsPlayerInForce(GetOwningPlayer(GetTriggerUnit()), rt) == false and IsUnitInGroup(GetTriggerUnit(), kpu(300., GetUnitLoc(GetOrderTargetUnit()))) and GetHeroLevel(GetTriggerUnit()) >= 150
endfunction
function RMt takes nothing returns nothing
    set CQ = CQ - 1
    if CQ == 0 then
        set VQ = GetEnumUnit()
    endif
endfunction
function RNu takes nothing returns boolean
    return GetUnitTypeId(GetTriggerUnit()) == 1211117891 and GetUnitTypeId(GetOrderTargetUnit()) == 1747989081 and IsPlayerInForce(GetOwningPlayer(GetTriggerUnit()), rt) == false and IsUnitInGroup(GetTriggerUnit(), kpu(300., GetUnitLoc(GetOrderTargetUnit()))) and GetHeroLevel(GetTriggerUnit()) >= 150
endfunction
function ROr takes nothing returns boolean
    return IsUnitType(GetTriggerUnit(), UNIT_TYPE_HERO) != false
endfunction
function RTt takes nothing returns nothing
    call ForceAddPlayer(ic, GetTriggerPlayer())
    call DisplayTimedTextToForce(MwS(GetTriggerPlayer()), 15., "|cffffcc00Damage Per Second Calculator Enabled. Hit any target twice, and it will display your DPS. Bear in mind that real values are not infinite, so values might be shown as 1.499 instead of 1.5.|r")
    call DisplayTimedTextToForce(MwS(GetTriggerPlayer()), 15., "|cffff0000Note: The DPS Calculator is only effective for single attacks. Spells that affect more than one unit (AoE, Cleave, etc) will produce unreliable results.|r")
endfunction
function RVs takes nothing returns nothing
    set jr = GetRectCenter(FO)
    call SetUnitPositionLoc(GetTriggerUnit(), jr)
    call DisplayTimedTextToForce(MwS(GetOwningPlayer(GetTriggerUnit())), 12., "|cffffcc00Make sure that you are a level 10 Novice, and that your gender fits the specific class you are changing into.")
    call PanCameraToTimedLocForPlayer(GetOwningPlayer(GetTriggerUnit()), jr, 0.)
    call TriggerExecute(MT)
    call RemoveLocation(jr)
endfunction
function R_S takes nothing returns nothing
    call ForceAddPlayer(Ts, GetOwningPlayer(GetTriggerUnit()))
    call ForceAddPlayer(Cr, GetOwningPlayer(GetTriggerUnit()))
    call DisplayTextToForce(MwS(GetOwningPlayer(GetTriggerUnit())), "|cffffcc00Firzen|r : |cff87ceebAnother Archdruid wanting a letter of recommendation? Well, I'm busy so I'm going to give you an easy task. Hunt down 10 Snap Dragons and you shall have my recommendation.")
    call QuestSetDescription(Lr[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))], "I need to kill 10 Snap Dragons.")
endfunction
function MRt takes nothing returns boolean
    return IsPlayerInForce(GetTriggerPlayer(), rO)
endfunction
function her takes nothing returns boolean
    return IsPlayerInForce(GetTriggerPlayer(), sO)
endfunction
function Rhr takes nothing returns boolean
    return GetBooleanOr(MRt(), her())
endfunction
function lys takes string oys returns integer
    local integer Oys
    set DSw[ASw] = oys
    set ASw = ASw + 1
    if rC == 0 then
        if sC < 32768 then
            set sC = sC + 1
            set Oys = sC
            set tC[Oys] = 655
        else
            call tNr("Out of memory: Could not create CallbackCounted_doPeriodicallyCounted_Summoner_LightningStorm.", "when calling error in Summoner_LightningStorm, line 47")
            set Oys = 0
        endif
    else
        set rC = rC - 1
        set Oys = uC[rC]
        set tC[Oys] = 655
    endif
    set ASw = ASw - 1
    return Oys
endfunction
function IuS takes string YuS returns nothing
    local unit GuS
    local player guS
    local integer huS
    local real FuS
    local real kuS
    local integer juS
    local real xuS
    local group vuS
    local group muS
    local unit QuS
    local integer WuS
    local real EuS
    local real ZuS
    local real UuS
    set DSw[ASw] = YuS
    set ASw = ASw + 1
    set GuS = GetTriggerUnit()
    set guS = eDs(GuS)
    set huS = GetSpellAbilityId()
    set ZuS = GetSpellTargetX()
    set UuS = GetSpellTargetY()
    set FuS = ZuS
    set kuS = UuS
    set juS = GetUnitAbilityLevel(GuS, huS)
    set xuS = juS * NH / VH * BH
    set vuS = LLt(FuS, kuS, CH, "when calling getUnitsInRange in Summoner_LightningStorm, line 44")
    set muS = XbS(vuS)
    loop
        exitwhen not hJw(muS)
        set QuS = tPr(muS)
        if yXu(QuS) and iBw(eDs(QuS), guS) then
            set EuS = BH
            set WuS = lys("when calling alloc_CallbackCounted_doPeriodicallyCounted_Summoner_LightningStorm in Summoner_LightningStorm, line 47")
            call Inr(WuS)
            set ksw[WuS] = QuS
            set jsw[WuS] = GuS
            set xsw[WuS] = xuS
            call l5s(EuS, $00000003, WuS, "when calling doPeriodicallyCounted in Summoner_LightningStorm, line 47")
        else
            call Z7t(vuS, QuS)
        endif
    endloop
    call lxs(muS)
    call Sju(vuS, "when calling release in Summoner_LightningStorm, line 54")
    set ASw = ASw - 1
    set GuS = null
    set guS = null
    set vuS = null
    set muS = null
    set QuS = null
endfunction
function Rni takes nothing returns nothing
    set ASw = 0
    call IuS("via function reference Summoner_LightningStorm, line 58")
endfunction
function Ror takes nothing returns nothing
    local unit qor = GetEnteringUnit()
    local player aor = eDs(qor)
    local integer nor = hgr(aor)
    local boolean dor
    call PolledWait(iF * 2.)
    call EnumItemsInRect(Bx[nor], null, BQw)
    if qP[nor] > 1 then
        set dor = false
        if pP[nor] ==- 1 then
            set dor = true
            set pP[nor] = GetRandomInt($00000000, qP[nor] - 1)
        endif
        call EnumItemsInRect(Bx[nor], null, NQw)
        if dor then
            set pP[nor] =- 1
        endif
    endif
    set qP[nor] = 0
    set eP[nor] = 0
    set qor = null
    set aor = null
endfunction
function Rqi takes nothing returns boolean
    return GetSpellAbilityId() == Zk
endfunction
function qCr takes string SCr returns nothing
    local unit cCr
    local real oCr
    local real OCr
    local unit lCr
    local integer bCr
    local boolean yCr
    local real pCr
    local real eCr
    set DSw[ASw] = SCr
    set ASw = ASw + 1
    set cCr = GetSpellTargetUnit()
    set pCr = GetSpellTargetX()
    set eCr = GetSpellTargetY()
    set oCr = pCr
    set OCr = eCr
    set lCr = GetTriggerUnit()
    set bCr = GetSpellAbilityId()
    set yCr = r5S(cCr) == l2s(Iji("n033", "when calling unObfuscate in Items_Pickup_Drop, line 790"), "when calling fromRawCode in Items_Pickup_Drop, line 790") or XYt(oCr, OCr, UI) or XYt(oCr, OCr, ZI)
    if bCr == l2s(Iji("A04I", "when calling unObfuscate in Items_Pickup_Drop, line 792"), "when calling fromRawCode in Items_Pickup_Drop, line 792") and ESt(lCr, "when calling isStash in Items_Pickup_Drop, line 792") or gSr(lCr, o) then
        call xvu(lCr, Iji("stop", "when calling unObfuscate in Items_Pickup_Drop, line 793"))
        call dii(Iji("|cffff0000You cannot teleport now.|r", "when calling unObfuscate in Items_Pickup_Drop, line 794"), 8., eDs(lCr))
    elseif bCr == l2s(Iji("A04I", "when calling unObfuscate in Items_Pickup_Drop, line 796"), "when calling fromRawCode in Items_Pickup_Drop, line 796") and yCr and boS(lCr) < k6w("909017", "when calling unObfuscateInt in Items_Pickup_Drop, line 797") or(not(nMi(lCr, "when calling is4thJob in Items_Pickup_Drop, line 797") or lst(lCr))) or(not(QUu(lCr, l2s(Iji("I05J", "when calling unObfuscate in Items_Pickup_Drop, line 797"), "when calling fromRawCode in Items_Pickup_Drop, line 797")) or QUu(lCr, l2s(Iji("I05P", "when calling unObfuscate in Items_Pickup_Drop, line 797"), "when calling fromRawCode in Items_Pickup_Drop, line 797")))) then
        call xvu(lCr, Iji("stop", "when calling unObfuscate in Items_Pickup_Drop, line 798"))
        call dii(Iji("You can only teleport here with the boots of the famous assasin Raven. To master them you need to achive level 200 and reach your 4th Jobstage. According to rumours he lost them in the Unknown Regions in battle.", "when calling unObfuscate in Items_Pickup_Drop, line 799"), 8., eDs(lCr))
    endif
    set ASw = ASw - 1
    set cCr = null
    set lCr = null
endfunction
function Ryi takes nothing returns nothing
    set ASw = 0
    call qCr("via function reference Items_Pickup_Drop, line 784")
endfunction
function FIu takes nothing returns boolean
    return yi == 1
endfunction
function S0s takes nothing returns nothing
    call EnableTrigger(aR)
    call DisableTrigger(dR)
    call DisableTrigger(fR)
    call DisableTrigger(RR)
    call DisableTrigger(TR)
    call DestroyTimerDialog(fi)
    call PauseTimerBJ(true, di)
    set bw = true
    if FIu() then
        set ni = ni + 1
        call DisplayTimedTextToForce(Rc[$0000000B], 12., "|cffffcc00You have advanced to the next stage!|r")
    else
        call DisplayTimedTextToForce(Rc[$0000000B], 12., "|cffffcc00You have picked the wrong portal!|r")
    endif
    set vo = GetRectCenter(ly)
    call ForGroupBJ(fc[$0000000B], ibw)
    call ForForce(Rc[$0000000B], Sbw)
    call RemoveLocation(vo)
endfunction
function QPr takes string vPr returns integer
    local integer mPr
    set DSw[ASw] = vPr
    set ASw = ASw + 1
    if NX == 0 then
        if MX < 32768 then
            set MX = MX + 1
            set mPr = MX
            set wC[mPr] = 828
        else
            call tNr("Out of memory: Could not create CallbackSingle_doAfter_Hiero_Resurrection.", "when calling error in Hiero_Resurrection, line 105")
            set mPr = 0
        endif
    else
        set NX = NX - 1
        set mPr = BX[NX]
        set wC[mPr] = 828
    endif
    set ASw = ASw - 1
    return mPr
endfunction
function qlt takes string plt returns integer
    local integer elt
    set DSw[ASw] = plt
    set ASw = ASw + 1
    if NX == 0 then
        if MX < 32768 then
            set MX = MX + 1
            set elt = MX
            set wC[elt] = 829
        else
            call tNr("Out of memory: Could not create CallbackSingle_doAfter_Hiero_Resurrection.", "when calling error in Hiero_Resurrection, line 121")
            set elt = 0
        endif
    else
        set NX = NX - 1
        set elt = BX[NX]
        set wC[elt] = 829
    endif
    set ASw = ASw - 1
    return elt
endfunction
function bFi takes unit cFi, string oFi returns nothing
    local integer OFi
    local real lFi
    set DSw[ASw] = oFi
    set ASw = ASw + 1
    call lTi(cFi, tD)
    set lFi = SW + .5
    set OFi = qlt("when calling alloc_CallbackSingle_doAfter_Hiero_Resurrection in Hiero_Resurrection, line 121")
    call RUs(OFi)
    set F8[OFi] = cFi
    call Ybr(lFi, OFi, "when calling doAfter in Hiero_Resurrection, line 121")
    set ASw = ASw - 1
endfunction
function eis takes string iis returns nothing
    local unit Sis
    local player cis
    local boolean ois
    local group Ois
    local group lis
    local unit bis
    local integer yis
    local real pis
    set DSw[ASw] = iis
    set ASw = ASw + 1
    set Sis = GetTriggerUnit()
    set cis = eDs(Sis)
    set ois = false
    set Ois = LLt(ANw(Sis), XSw, Fw, "when calling getUnitsInRange in Hiero_Resurrection, line 92")
    if kbr(cis) >= A then
        set lis = XbS(Ois)
        loop
            exitwhen not hJw(lis)
            set bis = tPr(lis)
            if yXu(bis) or(not t_u(bis)) or(not yUr(eDs(bis), cis)) or(not GpS(gQ, hgr(eDs(bis)), "when calling has in Hiero_Resurrection, line 96")) or bis == Sis then
    call Z7t(Ois, bis)
            endif
        endloop
        call lxs(lis)
        if hPs(Ois) == 0 then
            call dii("|cffff0000There are no friendly dead Heroes nearby|r.", 5., cis)
        elseif VTr(Sis) and mqu(Sis) then
            if hPs(Ois) > 0 then
    set ois = true
    set pis = SW
    set yis = QPr("when calling alloc_CallbackSingle_doAfter_Hiero_Resurrection in Hiero_Resurrection, line 105")
    call RUs(yis)
    set Y8[yis] = Sis
    set G8[yis] = cis
    set g8[yis] = Ois
    call Ybr(pis, yis, "when calling doAfter in Hiero_Resurrection, line 105")
            endif
        else
            call dii(Iji("|cffff0000Resurrection has no effect when used in this area|r.", "when calling unObfuscate in Hiero_Resurrection, line 111"), 8., cis)
        endif
    else
        call dii(Iji("|cffff0000Not enough power shards|r. ", "when calling unObfuscate in Hiero_Resurrection, line 113"), 5., cis)
    endif
    if not ois then
        call Sju(Ois, "when calling release in Hiero_Resurrection, line 116")
        call bFi(Sis, "when calling abortRessurect in Hiero_Resurrection, line 117")
    endif
    set ASw = ASw - 1
    set Sis = null
    set cis = null
    set Ois = null
    set lis = null
    set bis = null
endfunction
function S2u takes nothing returns nothing
    set ASw = 0
    call eis("via function reference Hiero_Resurrection, line 129")
endfunction
function S5i takes nothing returns nothing
    if not IsSuspendedXP(GetTriggerUnit()) then
        call DisplayTimedTextToForce(MwS(GetOwningPlayer(GetTriggerUnit())), 5., "Experience is disabled in this Region...")
    endif
    call SuspendHeroXPBJ(false, GetTriggerUnit())
endfunction
function IHs takes multiboard EHs, integer ZHs, integer UHs returns multiboarditem
    return MultiboardGetItem(EHs, ZHs, UHs)
endfunction
function Jfu takes multiboarditem Dfu, real Hfu returns nothing
    call MultiboardSetItemWidth(Dfu, Hfu)
endfunction
function K0i takes multiboard H0i, real J0i returns nothing
    call MultiboardSetItemsWidth(H0i, J0i)
endfunction
function TRs takes multiboard fRs, string RRs returns nothing
    call MultiboardSetTitleText(fRs, RRs)
endfunction
function gCu takes multiboard YCu, integer GCu returns nothing
    call MultiboardSetRowCount(YCu, GCu)
endfunction
function kkr takes multiboard hkr, integer Fkr returns nothing
    call MultiboardSetColumnCount(hkr, Fkr)
endfunction
function pDr takes multiboard lDr, boolean bDr, boolean yDr returns nothing
    call MultiboardSetItemsStyle(lDr, bDr, yDr)
endfunction
function vYu takes multiboarditem FYu, string kYu returns nothing
    local string jYu
    local string xYu
    if kYu == null then
        set xYu = ""
    else
        set xYu = kYu
    endif
    set jYu = xYu
    call MultiboardSetItemValue(FYu, jYu)
endfunction
function SYi takes nothing returns nothing
    local multiboarditem MTi
    local multiboarditem wYi
    local multiboarditem uYi
    local multiboarditem rYi
    local multiboarditem sYi
    local multiboarditem tYi
    local multiboarditem iYi
    set Ij = CreateMultiboard()
    call kkr(Ij, Aj)
    call gCu(Ij, Pj)
    call pDr(Ij, true, false)
    call K0i(Ij, 0.04)
    call TRs(Ij, "Debug Info")
    set MTi = IHs(Ij, $00000000, $00000000)
    set wYi = MTi
    call vYu(wYi, "Allocations")
    set uYi = wYi
    call Jfu(uYi, 0.10)
    set MTi = IHs(Ij, $00000001, $00000000)
    set rYi = MTi
    call vYu(rYi, "Callbacks")
    set sYi = rYi
    call Jfu(sYi, 0.10)
    set MTi = IHs(Ij, $00000002, $00000000)
    set tYi = MTi
    call vYu(tYi, "Entites")
    set iYi = tYi
    call Jfu(iYi, 0.10)
    set MTi = null
    set wYi = null
    set uYi = null
    set rYi = null
    set sYi = null
    set tYi = null
    set iYi = null
endfunction
function S5w takes nothing returns nothing
    if Ij == null then
        call SYi()
    endif
    set Dj = Dj + 1
    set Jj = Jj + Hj
    set Lj = Lj + Kj
    call vYu(IHs(Ij, $00000000, $00000001), fju(Kj))
    call vYu(IHs(Ij, $00000000, $00000002), Uru(Lj * 1. / Dj))
    call vYu(IHs(Ij, $00000001, $00000001), fju(Hj))
    call vYu(IHs(Ij, $00000001, $00000002), Uru(Jj * 1. / Dj))
    call vYu(IHs(Ij, $00000002, $00000001), fju(lv))
    call vYu(IHs(Ij, $00000002, $00000002), fju(bv))
    set Hj = 0
    set Kj = 0
endfunction
function UcS takes nothing returns boolean
    return GetSpellAbilityId() == 1093678167 or GetSpellAbilityId() == 1093678168 or GetSpellAbilityId() == 1093678913 or GetSpellAbilityId() == 1093678163
endfunction
function SAw takes nothing returns boolean
    return (not ONi(do, eDs(GetTriggerUnit())))and UnitHasItemOfTypeBJ(GetTriggerUnit(), $4930344E) and GetSpellAbilityId() != 1093678160 and UcS()
endfunction
function SBw takes nothing returns nothing
    call SetUnitPositionLoc(GetEnumUnit(), vo)
endfunction
function SDi takes nothing returns boolean
    set LQ = JASS_MAX_ARRAY_SIZE
    return true
endfunction
function SFi takes nothing returns boolean
    return GetUnitTypeId(GetDyingUnit()) == 1429221442
endfunction
function SHs takes nothing returns boolean
    return GetUnitTypeId(GetTriggerUnit()) == 1211117643 and GetUnitTypeId(GetOrderTargetUnit()) == 1747988814 and IsPlayerInForce(GetOwningPlayer(GetTriggerUnit()), Kr) and IsPlayerInForce(GetOwningPlayer(GetTriggerUnit()), Cr) == false and IsUnitInGroup(GetTriggerUnit(), kpu(300., GetUnitLoc(GetOrderTargetUnit())))
endfunction
function B1s takes string K1s returns boolean
    local trigger L1s
    local trigger X1s
    local integer C1s
    local integer V1s
    set DSw[ASw] = K1s
    set ASw = ASw + 1
    set rW = jts("when calling new_HashMap in HeroRevive, line 22")
    set L1s = CreateTrigger()
    call l2w(L1s, EVENT_PLAYER_UNIT_DEATH)
    call dUs(L1s, Condition(hmw))
    call B2S(L1s, Fmw)
    set X1s = CreateTrigger()
    set C1s = 0
    set V1s = Lh
    loop
        exitwhen C1s > V1s
        set wW[C1s] = ZPs("when calling getTimer in HeroRevive, line 182")
        set uW[C1s] = null
        call Ebs(X1s, aD[C1s], "-revive", true)
        set C1s = C1s + 1
    endloop
    call B2S(X1s, kmw)
    set ASw = ASw - 1
    set L1s = null
    set X1s = null
    return true
endfunction
function SHt takes nothing returns boolean
    set ASw = 0
    return B1s("via function reference HeroRevive, line 1")
endfunction
function eor takes string lor returns boolean
    local trigger bor
    local trigger yor
    local trigger por
    set DSw[ASw] = lor
    set ASw = ASw + 1
    call l2s(Iji("A0AX", "when calling unObfuscate in GrandTemplar_PsiDestruction, line 13"), "when calling fromRawCode in GrandTemplar_PsiDestruction, line 13")
    set xQ = jts("when calling new_HashMap in GrandTemplar_PsiDestruction, line 15")
    set vQ = jts("when calling new_HashMap in GrandTemplar_PsiDestruction, line 16")
    set mQ = 10.
    set QQ = 0.2
    set WQ = 600.
    set EQ = 100
    set ZQ = 100
    set bor = CreateTrigger()
    call l2w(bor, EVENT_PLAYER_UNIT_SPELL_EFFECT)
    set yor = bor
    call dUs(yor, Condition(Tmw))
    set por = yor
    call B2S(por, Ymw)
    set ASw = ASw - 1
    set bor = null
    set yor = null
    set por = null
    return true
endfunction
function SJt takes nothing returns boolean
    set ASw = 0
    return eor("via function reference GrandTemplar_PsiDestruction, line 1")
endfunction
function Rtu takes nothing returns boolean
    return vS[1 + GetPlayerId(GetOwningPlayer(GetKillingUnit()))] >= 60
endfunction
function SKs takes nothing returns nothing
    set vS[1 + GetPlayerId(GetOwningPlayer(GetKillingUnit()))] = vS[1 + GetPlayerId(GetOwningPlayer(GetKillingUnit()))] + 1
    if Rtu() then
        call QuestMessageBJ(MwS(GetOwningPlayer(GetKillingUnit())), $00000002, "|cffffcc00Sludge Fudge|r Quest Requirement Completed.")
    else
        call QuestMessageBJ(MwS(GetOwningPlayer(GetKillingUnit())), $00000001, I2S(vS[1 + GetPlayerId(GetOwningPlayer(GetKillingUnit()))]) + " Sewer Monster(s) Juice collected.")
    endif
endfunction
function SNu takes nothing returns boolean
    return GetUnitTypeId(GetTriggerUnit()) == 1211117644 and GetOrderTargetUnit() == tG and GetHeroLevel(GetTriggerUnit()) >= 99 and IsPlayerInForce(GetOwningPlayer(GetTriggerUnit()), Kr) == false and IsUnitInGroup(GetTriggerUnit(), kpu(300., GetUnitLoc(GetOrderTargetUnit())))
endfunction
function Qot takes string vot returns integer
    local integer mot
    set DSw[ASw] = vot
    set ASw = ASw + 1
    if NX == 0 then
        if MX < 32768 then
            set MX = MX + 1
            set mot = MX
            set wC[mot] = 1038
        else
            call tNr("Out of memory: Could not create CallbackSingle_doAfter_addAction_doAfter_FateDestinyUnlocker.", "when calling error in FateDestinyUnlocker, line 783")
            set mot = 0
        endif
    else
        set NX = NX - 1
        set mot = BX[NX]
        set wC[mot] = 1038
    endif
    set ASw = ASw - 1
    return mot
endfunction
function d3r takes string q3r returns nothing
    local trigger a3r
    local integer n3r
    set DSw[ASw] = q3r
    set ASw = ASw + 1
    call dii(Iji("It's important to me! If you cannot fish you will never reach your destiny.", "when calling unObfuscate in FateDestinyUnlocker, line 779"), 5., eDs(GetTriggerUnit()))
    call SqS(GetTriggeringTrigger())
    set a3r = GetTriggeringTrigger()
    call SqS(a3r)
    set n3r = Qot("when calling alloc_CallbackSingle_doAfter_addAction_doAfter_FateDestinyUnlocker in FateDestinyUnlocker, line 783")
    call RUs(n3r)
    set P7[n3r] = a3r
    call Ybr(30., n3r, "when calling doAfter in FateDestinyUnlocker, line 783")
    set ASw = ASw - 1
    set a3r = null
endfunction
function SOi takes nothing returns nothing
    set ASw = 0
    call d3r("via function reference FateDestinyUnlocker, line 778")
endfunction
function A2s takes integer I2s, string P2s returns nothing
    set DSw[ASw] = P2s
    set ASw = ASw + 1
    if vrw[I2s] and mrw[I2s] != null then
        call WDr(Qrw[I2s], "when calling cameraLock in RespawnHeroesEnterReg, line 92")
    endif
    set ASw = ASw - 1
endfunction
function AAr takes integer PAr returns nothing
    call iYt(qG, 4596.7, 2679.)
    call iYt(aG, 5125.8, 2441.8)
    call iYt(nG, 6527.5, 2425.3)
    call iYt(dG, 5516.9, 2828.9)
    call iYt(fG, 5292., 2181.2)
    call iYt(eG, 5242.3, 2834.)
    call iYt(RG, 6124.4, 1784.)
    call iYt(TG, 6495.6, 1775.1)
    call iYt(YG, 5779.9, 1021.1)
    call iYt(OG, 5531.5, 1267.4)
    call iYt(gG, 6232.1, 767.9)
    call iYt(GG, 7680.8, 755.9)
    call iYt(bG, 7056.3, 1043.1)
    call iYt(lG, 7390.8, 1420.)
    call iYt(pG, 7448.3, 2218.5)
    call iYt(yG, 7688., 2617.3)
endfunction
function AFs takes integer ZFs, string UFs returns nothing
    local integer IFs
    local integer PFs
    set DSw[ASw] = UFs
    set ASw = ASw + 1
    set IFs = c5r(gQ, "when calling iterator in NpcHandler, line 803")
    loop
        exitwhen not Tji(IFs)
        set PFs = LXi(IFs)
        call Ebs(fA, aD[PFs], Iji("-save", "when calling unObfuscate in NpcHandler, line 804"), true)
        call Ebs(RA, aD[PFs], Iji("-load ", "when calling unObfuscate in NpcHandler, line 805"), false)
        call Ebs(TA, aD[PFs], Iji("-load2 ", "when calling unObfuscate in NpcHandler, line 806"), false)
    endloop
    call vms(IFs, "when calling close in NpcHandler, line 803")
    set ASw = ASw - 1
endfunction
function AHi takes integer KDi, string LDi returns nothing
    local integer XDi
    local integer CDi
    local integer VDi
    local integer BDi
    local integer NDi
    local integer MDi
    local integer wHi
    local integer uHi
    local integer rHi
    local integer sHi
    local integer tHi
    local integer iHi
    local integer SHi
    local integer cHi
    local integer oHi
    local integer OHi
    local integer lHi
    local integer bHi
    local integer yHi
    local integer pHi
    local integer eHi
    local integer qHi
    local integer aHi
    local integer nHi
    local integer dHi
    local integer fHi
    local integer RHi
    local integer THi
    local integer YHi
    local integer GHi
    local integer gHi
    local integer hHi
    local integer FHi
    local integer kHi
    local integer jHi
    local integer xHi
    local integer vHi
    local integer mHi
    local integer QHi
    local integer WHi
    local integer EHi
    local integer ZHi
    local integer UHi
    local integer IHi
    local integer PHi
    set DSw[ASw] = LDi
    set ASw = ASw + 1
    set XDi = GL
    call vwt(XDi, err("Once Jupiter is lit, we'll have no need for you. Just watch...", "when calling stringToIndex in Voidless_extensions, line 266"), "when calling add in Voidless_extensions, line 266")
    set CDi = XDi
    call vwt(CDi, err("Go on... if that eases the anxiety in your mind...", "when calling stringToIndex in Voidless_extensions, line 267"), "when calling add in Voidless_extensions, line 267")
    set VDi = CDi
    call vwt(VDi, err("I am the shadow, the keeper of light. If you want the sun's power, show me your own.", "when calling stringToIndex in Voidless_extensions, line 268"), "when calling add in Voidless_extensions, line 268")
    set BDi = VDi
    call vwt(BDi, err("Regardless, I must not fail the next time you challenge the Sanctum.", "when calling stringToIndex in Voidless_extensions, line 269"), "when calling add in Voidless_extensions, line 269")
    set NDi = BDi
    call vwt(NDi, err("Bring it on, whelp! You won't live long enough to regret your stupidity!", "when calling stringToIndex in Voidless_extensions, line 270"), "when calling add in Voidless_extensions, line 270")
    set MDi = NDi
    call vwt(MDi, err("You don't even want to try? I'll show you my power.", "when calling stringToIndex in Voidless_extensions, line 271"), "when calling add in Voidless_extensions, line 271")
    set wHi = MDi
    call vwt(wHi, err("So it's just me. Is that all right? I'm a little nervous", "when calling stringToIndex in Voidless_extensions, line 272"), "when calling add in Voidless_extensions, line 272")
    set uHi = wHi
    call vwt(uHi, err("The cycle of desire never ends...Void will never die...", "when calling stringToIndex in Voidless_extensions, line 274"), "when calling add in Voidless_extensions, line 274")
    set rHi = uHi
    call vwt(rHi, err("I'll control the world with fear. It takes too much to do it like my old man. A little fear will control the minds of the common people. There's no reason to waste gold on them.", "when calling stringToIndex in Voidless_extensions, line 275"), "when calling add in Voidless_extensions, line 275")
    set sHi = rHi
    call vwt(sHi, err("I banish you to the Cleft of Dimension!", "when calling stringToIndex in Voidless_extensions, line 276"), "when calling add in Voidless_extensions, line 276")
    set tHi = sHi
    call vwt(tHi, err("My end is near... Time to die everyone!", "when calling stringToIndex in Voidless_extensions, line 277"), "when calling add in Voidless_extensions, line 277")
    set iHi = tHi
    call vwt(iHi, err("You know, my heart is beating incredibly fast, I must be experiencing absolute terror!", "when calling stringToIndex in Voidless_extensions, line 278"), "when calling add in Voidless_extensions, line 278")
    set SHi = iHi
    call vwt(SHi, err("Puny knight! I AM EVIL!", "when calling stringToIndex in Voidless_extensions, line 279"), "when calling add in Voidless_extensions, line 279")
    set cHi = SHi
    call vwt(cHi, err("This is the end.", "when calling stringToIndex in Voidless_extensions, line 280"), "when calling add in Voidless_extensions, line 280")
    set oHi = cHi
    call vwt(oHi, err("Listen up! Teamwork means staying out of my way!", "when calling stringToIndex in Voidless_extensions, line 281"), "when calling add in Voidless_extensions, line 281")
    set OHi = oHi
    call vwt(OHi, err("It took hundreds to kill me, but I killed heroes by the thousands!!", "when calling stringToIndex in Voidless_extensions, line 282"), "when calling add in Voidless_extensions, line 282")
    set lHi = OHi
    call vwt(lHi, err("Oh, what's the matter? Gonna cry again? Cry, cry. That's the only thing you're good for!", "when calling stringToIndex in Voidless_extensions, line 283"), "when calling add in Voidless_extensions, line 283")
    set bHi = lHi
    call vwt(bHi, err("You and your pitiful force cannot be saved by prayers!", "when calling stringToIndex in Voidless_extensions, line 284"), "when calling add in Voidless_extensions, line 284")
    set yHi = bHi
    call vwt(yHi, err("Rest assured... I will kill you all here. But be of good cheer! In dying, you shall all be spared to calamity that is to come!", "when calling stringToIndex in Voidless_extensions, line 285"), "when calling add in Voidless_extensions, line 285")
    set pHi = yHi
    call vwt(pHi, err("Swallow all the wicked people!", "when calling stringToIndex in Voidless_extensions, line 286"), "when calling add in Voidless_extensions, line 286")
    set eHi = pHi
    call vwt(eHi, err("I know what you're thinking....all this power, AND looks, too!", "when calling stringToIndex in Voidless_extensions, line 287"), "when calling add in Voidless_extensions, line 287")
    set qHi = eHi
    call vwt(qHi, err("Grant unto thee the great power of the glorious mother of destruction!", "when calling stringToIndex in Voidless_extensions, line 288"), "when calling add in Voidless_extensions, line 288")
    set aHi = qHi
    call vwt(aHi, err("Listen to the Donkey's orders and eliminate the enemy!", "when calling stringToIndex in Voidless_extensions, line 289"), "when calling add in Voidless_extensions, line 289")
    set nHi = aHi
    call vwt(nHi, err("Play time is over now.", "when calling stringToIndex in Voidless_extensions, line 290"), "when calling add in Voidless_extensions, line 290")
    set dHi = nHi
    call vwt(dHi, err("People don't complain because they are weak, they are weak so they can complain.", "when calling stringToIndex in Voidless_extensions, line 291"), "when calling add in Voidless_extensions, line 291")
    set fHi = dHi
    call vwt(fHi, err("We all make choices in life, but in the end our choices make us.", "when calling stringToIndex in Voidless_extensions, line 292"), "when calling add in Voidless_extensions, line 292")
    set RHi = fHi
    call vwt(RHi, err("Get over here!", "when calling stringToIndex in Voidless_extensions, line 293"), "when calling add in Voidless_extensions, line 293")
    set THi = RHi
    call vwt(THi, err("What is better? To be born good or to overcome your evil nature through great effort?", "when calling stringToIndex in Voidless_extensions, line 294"), "when calling add in Voidless_extensions, line 294")
    set YHi = THi
    call vwt(YHi, err("The right man in the wrong place can make all the difference in the world.", "when calling stringToIndex in Voidless_extensions, line 295"), "when calling add in Voidless_extensions, line 295")
    set GHi = YHi
    call vwt(GHi, err("Stand in the ashes of a trillion dead souls, and asks the ghosts if honor matters. The silence is your answer.", "when calling stringToIndex in Voidless_extensions, line 296"), "when calling add in Voidless_extensions, line 296")
    set gHi = GHi
    call vwt(gHi, err("Wanting something does not give you the right to have it.", "when calling stringToIndex in Voidless_extensions, line 297"), "when calling add in Voidless_extensions, line 297")
    set hHi = gHi
    call vwt(hHi, err("Even in dark times, we cannot relinquish the things that make us human.", "when calling stringToIndex in Voidless_extensions, line 298"), "when calling add in Voidless_extensions, line 298")
    set FHi = hHi
    call vwt(FHi, err("A hero need not speak. When he is gone, the world will speak for him.", "when calling stringToIndex in Voidless_extensions, line 299"), "when calling add in Voidless_extensions, line 299")
    set kHi = FHi
    call vwt(kHi, err("It's easy to forget what a sin is in the middle of a battlefield.", "when calling stringToIndex in Voidless_extensions, line 300"), "when calling add in Voidless_extensions, line 300")
    set jHi = kHi
    call vwt(jHi, err("Who are you, that do not know your history?", "when calling stringToIndex in Voidless_extensions, line 301"), "when calling add in Voidless_extensions, line 301")
    set xHi = jHi
    call vwt(xHi, err("Don't wish it were easier, wish you were better.", "when calling stringToIndex in Voidless_extensions, line 302"), "when calling add in Voidless_extensions, line 302")
    set vHi = xHi
    call vwt(vHi, err("Nothing is true, everything is permitted.", "when calling stringToIndex in Voidless_extensions, line 303"), "when calling add in Voidless_extensions, line 303")
    set mHi = vHi
    call vwt(mHi, err("It’s dangerous to go alone, take this!", "when calling stringToIndex in Voidless_extensions, line 304"), "when calling add in Voidless_extensions, line 304")
    set QHi = mHi
    call vwt(QHi, err("I used to be an adventurer like you, until I took an arrow to the knee.", "when calling stringToIndex in Voidless_extensions, line 305"), "when calling add in Voidless_extensions, line 305")
    set WHi = QHi
    call vwt(WHi, err("The ending isn’t any more important than any of the moments leading to it.", "when calling stringToIndex in Voidless_extensions, line 306"), "when calling add in Voidless_extensions, line 306")
    set EHi = WHi
    call vwt(EHi, err("A sword wields no strength unless the hands that holds it has courage.", "when calling stringToIndex in Voidless_extensions, line 307"), "when calling add in Voidless_extensions, line 307")
    set ZHi = EHi
    call vwt(ZHi, err("Hard to see big picture behind pile of corpses.", "when calling stringToIndex in Voidless_extensions, line 308"), "when calling add in Voidless_extensions, line 308")
    set UHi = ZHi
    call vwt(UHi, err("The price of freedom is eternal vigilance.", "when calling stringToIndex in Voidless_extensions, line 309"), "when calling add in Voidless_extensions, line 309")
    set IHi = UHi
    call vwt(IHi, err("You must have died of dysentery.", "when calling stringToIndex in Voidless_extensions, line 310"), "when calling add in Voidless_extensions, line 310")
    set PHi = IHi
    call vwt(PHi, err("The world fears the inevitable plummet into the abyss. Watch for that moment and when it comes, do not hesitate to leap. It is only when you fall that you learn whether you can fly.", "when calling stringToIndex in Voidless_extensions, line 311"), "when calling add in Voidless_extensions, line 311")
    set ASw = ASw - 1
endfunction
function ocS takes integer icS, string ScS, string ccS returns nothing
    set DSw[ASw] = ccS
    set ASw = ASw + 1
    set Huw[icS] = Huw[icS] + 1
    call vwt(Kuw[icS], err(ScS, "when calling stringToIndex in NpcTalking, line 213"), "when calling add in NpcTalking, line 213")
    set ASw = ASw - 1
endfunction
function RFi takes integer nFi, string dFi, string fFi returns nothing
    set DSw[ASw] = fFi
    set ASw = ASw + 1
    if aN[nFi] == 0 then
        if nFi == 0 then
            call tNr("Nullpointer exception when calling NpcDialog.addSentence", "when calling error in NpcTalking, line 211")
        else
            call tNr("Called NpcDialog.addSentence on invalid object.", "when calling error in NpcTalking, line 211")
        endif
    endif
    call ocS(nFi, dFi, "when calling addSentence in NpcTalking, line 211")
    set ASw = ASw - 1
endfunction
function Hhi takes integer Ahi, string Dhi returns nothing
    set DSw[ASw] = Dhi
    set ASw = ASw + 1
    call RFi(Ahi, YA, "when calling addSentence in NpcTalking, line 216")
    set Xuw[Ahi] = false
    set ASw = ASw - 1
endfunction
function J2r takes integer D2r, string H2r returns nothing
    set DSw[ASw] = H2r
    set ASw = ASw + 1
    if aN[D2r] == 0 then
        if D2r == 0 then
            call tNr("Nullpointer exception when calling NpcDialog.addDialogEnd", "when calling error in NpcTalking, line 215")
        else
            call tNr("Called NpcDialog.addDialogEnd on invalid object.", "when calling error in NpcTalking, line 215")
        endif
    endif
    call Hhi(D2r, "when calling addDialogEnd in NpcTalking, line 215")
    set ASw = ASw - 1
endfunction
function E2r takes nothing returns integer
    set XA = XA + 1
    return XA
endfunction
function Xjs takes integer Kjs, string Ljs returns nothing
    set DSw[ASw] = Ljs
    set ASw = ASw + 1
    set Kuw[Kjs] = XQt("when calling new_LinkedList in NpcTalking, line 187")
    set ASw = ASw - 1
endfunction
function jUr takes integer hUr, integer FUr, string kUr returns nothing
    set DSw[ASw] = kUr
    set ASw = ASw + 1
    call Xjs(hUr, "when calling NpcDialog_init in NpcTalking, line 192")
    set Xuw[hUr] = true
    set Juw[hUr] = FUr
    set Luw[hUr] = 0
    set Cuw[hUr] = false
    set ASw = ASw - 1
endfunction
function sKu takes string uKu returns integer
    local integer rKu
    set DSw[ASw] = uKu
    set ASw = ASw + 1
    if eN == 0 then
        if qN < 32768 then
            set qN = qN + 1
            set rKu = qN
            set aN[rKu] = 1225
        else
            call tNr("Out of memory: Could not create NpcDialog.", "when calling error in NpcTalking, line 184")
            set rKu = 0
        endif
    else
        set eN = eN - 1
        set rKu = pN[eN]
        set aN[rKu] = 1225
    endif
    set ASw = ASw - 1
    return rKu
endfunction
function Glr takes integer Rlr, string Tlr returns integer
    local integer Ylr
    set DSw[ASw] = Tlr
    set ASw = ASw + 1
    set Ylr = sKu("when calling alloc_NpcDialog in NpcTalking, line 192")
    call jUr(Ylr, Rlr, "when calling construct_NpcDialog in NpcTalking, line 192")
    set ASw = ASw - 1
    return Ylr
endfunction
function MJs takes string VJs returns integer
    local integer BJs
    local integer NJs
    set DSw[ASw] = VJs
    set ASw = ASw + 1
    set BJs = E2r()
    set NJs = Glr(BJs, "when calling new_NpcDialog in NpcTalking, line 152")
    call GVw(KA, BJs, NJs, "when calling put in NpcTalking, line 153")
    set ASw = ASw - 1
    return NJs
endfunction
function NDu takes string GAu returns nothing
    local integer gAu
    local integer hAu
    local integer FAu
    local integer kAu
    local integer jAu
    local integer xAu
    local integer vAu
    local integer mAu
    local integer QAu
    local integer WAu
    local integer EAu
    local integer ZAu
    local integer UAu
    local integer IAu
    local integer PAu
    local integer AAu
    local integer DAu
    local integer HAu
    local integer JAu
    local integer KAu
    local integer LAu
    local integer XAu
    local integer CAu
    local integer VAu
    local integer BAu
    local integer NAu
    local integer MAu
    local integer wDu
    local integer uDu
    local integer rDu
    local integer sDu
    local integer tDu
    local integer iDu
    local integer SDu
    local integer cDu
    local integer oDu
    local integer ODu
    local integer lDu
    local integer bDu
    local integer yDu
    local integer pDu
    local integer eDu
    local integer qDu
    local integer aDu
    local integer nDu
    local integer dDu
    local integer fDu
    local integer RDu
    local integer TDu
    local integer YDu
    local integer GDu
    local integer gDu
    local integer hDu
    local integer FDu
    local integer kDu
    local integer jDu
    local integer xDu
    local integer vDu
    local integer mDu
    local integer QDu
    local integer WDu
    local integer EDu
    local integer ZDu
    local integer UDu
    local integer IDu
    local integer PDu
    local integer ADu
    local integer DDu
    local integer HDu
    local integer JDu
    local integer KDu
    local integer LDu
    local integer XDu
    local integer CDu
    local integer VDu
    local integer BDu
    set DSw[ASw] = GAu
    set ASw = ASw + 1
    set gAu = MJs("when calling addNpcDialog in NpcTalking, line 126")
    call RFi(gAu, "I may code a bit more before I fall asleep.", "when calling addSentence in NpcTalking, line 126")
    set hAu = gAu
    call RFi(hAu, "Okay. But I need some dialogs for Teve.", "when calling addSentence in NpcTalking, line 126")
    set FAu = hAu
    call RFi(FAu, "Hmm", "when calling addSentence in NpcTalking, line 126")
    set kAu = FAu
    call RFi(kAu, "Is this the first one?", "when calling addSentence in NpcTalking, line 126")
    set jAu = kAu
    call RFi(jAu, "What first one?", "when calling addSentence in NpcTalking, line 126")
    set xAu = jAu
    call RFi(xAu, "Of the dialogs for teve ... btw how can you fall asleep when it's not even 4 o'clock?", "when calling addSentence in NpcTalking, line 126")
    set vAu = xAu
    call J2r(vAu, "when calling addDialogEnd in NpcTalking, line 126")
    set mAu = MJs("when calling addNpcDialog in NpcTalking, line 127")
    call RFi(mAu, "Sup man, how is it going?", "when calling addSentence in NpcTalking, line 127")
    set QAu = mAu
    call RFi(QAu, "Let me just do one more test, then I'm going to bed...", "when calling addSentence in NpcTalking, line 127")
    set WAu = QAu
    call RFi(WAu, "You already said that 3 hours ago ;)", "when calling addSentence in NpcTalking, line 127")
    set EAu = WAu
    call RFi(EAu, "Pushed, its not working and I'm going to bed - it's 4AM. Or maybe it could work this way ...", "when calling addSentence in NpcTalking, line 127")
    set ZAu = EAu
    call J2r(ZAu, "when calling addDialogEnd in NpcTalking, line 127")
    set UAu = MJs("when calling addNpcDialog in NpcTalking, line 128")
    call RFi(UAu, "Hi, I am adding new item stats and cleaning out useless stuff.", "when calling addSentence in NpcTalking, line 128")
    set IAu = UAu
    call RFi(IAu, "Cleaning is nice, maybe also add some comments and review some of the older commits.", "when calling addSentence in NpcTalking, line 128")
    set PAu = IAu
    call RFi(PAu, "I already commented like 50% of the code.", "when calling addSentence in NpcTalking, line 128")
    set AAu = PAu
    call RFi(AAu, "Perfect, I am done with my stuff for now ..", "when calling addSentence in NpcTalking, line 128")
    set DAu = AAu
    call RFi(DAu, "HotS?", "when calling addSentence in NpcTalking, line 128")
    set HAu = DAu
    call RFi(HAu, "HotS!", "when calling addSentence in NpcTalking, line 128")
    set JAu = HAu
    call J2r(JAu, "when calling addDialogEnd in NpcTalking, line 128")
    set KAu = MJs("when calling addNpcDialog in NpcTalking, line 129")
    call RFi(KAu, "I need some cool sound effect for the 2nd dungeon endboss.", "when calling addSentence in NpcTalking, line 129")
    set LAu = KAu
    call RFi(LAu, "Haha ok. Btw unused import is there.", "when calling addSentence in NpcTalking, line 129")
    set XAu = LAu
    call RFi(XAu, "In RegionVectorLocationUtils the 'import initlater GeneralUtils'.", "when calling addSentence in NpcTalking, line 129")
    set CAu = XAu
    call RFi(CAu, "It was used 5mins ago ^^.", "when calling addSentence in NpcTalking, line 129")
    set VAu = CAu
    call RFi(VAu, "Yeaah ;) fixxed.", "when calling addSentence in NpcTalking, line 129")
    set BAu = VAu
    call J2r(BAu, "when calling addDialogEnd in NpcTalking, line 129")
    set NAu = MJs("when calling addNpcDialog in NpcTalking, line 130")
    call RFi(NAu, "Cromox finished the terrain editing for the 3rd dungeon.", "when calling addSentence in NpcTalking, line 130")
    set MAu = NAu
    call RFi(MAu, "Nice, I will start with the custom mechanics soon.", "when calling addSentence in NpcTalking, line 130")
    set wDu = MAu
    call RFi(wDu, "The players will love them.", "when calling addSentence in NpcTalking, line 130")
    set uDu = wDu
    call RFi(uDu, "I guess they will love most of our work :)", "when calling addSentence in NpcTalking, line 130")
    set rDu = uDu
    call J2r(rDu, "when calling addDialogEnd in NpcTalking, line 130")
    set sDu = MJs("when calling addNpcDialog in NpcTalking, line 131")
    call RFi(sDu, "Sadly we cannot bring much of the cool work on Teve.", "when calling addSentence in NpcTalking, line 131")
    set tDu = sDu
    call RFi(tDu, "Well most things would need too many changes to the original code.", "when calling addSentence in NpcTalking, line 131")
    set iDu = tDu
    call RFi(iDu, "They will have to wait, until the new custom code base is done.", "when calling addSentence in NpcTalking, line 131")
    set SDu = iDu
    call RFi(SDu, "Let's add portraits for heroes in the same dungeon to the left side of the screen, as shortcuts.", "when calling addSentence in NpcTalking, line 131")
    set cDu = SDu
    call RFi(cDu, "Good idea! That should help the healers a bit.", "when calling addSentence in NpcTalking, line 131")
    call J2r(cDu, "when calling addDialogEnd in NpcTalking, line 131")
    set oDu = MJs("when calling addNpcDialog in NpcTalking, line 132")
    call RFi(oDu, "I got multiple requests about donations for the project.", "when calling addSentence in NpcTalking, line 132")
    set ODu = oDu
    call RFi(ODu, "Oh well, I guess we could at least accept some bitcoins via tever.xyz", "when calling addSentence in NpcTalking, line 132")
    set lDu = ODu
    call RFi(lDu, "Ok, I will tell liviat to add some donation buttons to our website.", "when calling addSentence in NpcTalking, line 132")
    set bDu = lDu
    call RFi(bDu, "Fair enough it could help a bit with paying for our server and vpns costs and the coffee.", "when calling addSentence in NpcTalking, line 132")
    set yDu = bDu
    call RFi(yDu, "Yeah, software developers are poor.", "when calling addSentence in NpcTalking, line 132")
    call J2r(yDu, "when calling addDialogEnd in NpcTalking, line 132")
    set pDu = MJs("when calling addNpcDialog in NpcTalking, line 133")
    call RFi(pDu, "I pushed 783 lines of code last night!", "when calling addSentence in NpcTalking, line 133")
    set eDu = pDu
    call RFi(eDu, "And how many bugs?", "when calling addSentence in NpcTalking, line 133")
    set qDu = eDu
    call RFi(qDu, "Features! That are undocumented features man!", "when calling addSentence in NpcTalking, line 133")
    set aDu = qDu
    call RFi(aDu, "I see. You should not code until 6am", "when calling addSentence in NpcTalking, line 133")
    call J2r(aDu, "when calling addDialogEnd in NpcTalking, line 133")
    set nDu = MJs("when calling addNpcDialog in NpcTalking, line 134")
    call RFi(nDu, "So, did you come up with any ideas for our new potion system?", "when calling addSentence in NpcTalking, line 134")
    set dDu = nDu
    call RFi(dDu, "Been busy with other stuff but I made a basic draft for it.", "when calling addSentence in NpcTalking, line 134")
    set fDu = dDu
    call RFi(fDu, "So? What’s the idea?", "when calling addSentence in NpcTalking, line 134")
    set RDu = fDu
    call RFi(RDu, "Basically you’d be able to upgrade your potion in different ways to create your own custom one.", "when calling addSentence in NpcTalking, line 134")
    set TDu = RDu
    call RFi(TDu, "Sounds good, could one make it heal in an aoe instead of only the user?", "when calling addSentence in NpcTalking, line 134")
    set YDu = TDu
    call RFi(YDu, "Or maybe add extra healing over time on top of the instant effect", "when calling addSentence in NpcTalking, line 134")
    set GDu = YDu
    call RFi(GDu, "Yeah, and some more unique defensive or offensive bonuses for some extra customization", "when calling addSentence in NpcTalking, line 134")
    set gDu = GDu
    call RFi(gDu, "Sounds good, we’ll go more in depth about it later, just found a nullpointer to fix", "when calling addSentence in NpcTalking, line 134")
    set hDu = gDu
    call J2r(hDu, "when calling addDialogEnd in NpcTalking, line 134")
    set FDu = MJs("when calling addNpcDialog in NpcTalking, line 135")
    call RFi(FDu, "How is the progress on the 3rd person camera angle?", "when calling addSentence in NpcTalking, line 135")
    set kDu = FDu
    call RFi(kDu, "A little bit shaky here and there but it’s coming up pretty nicely.", "when calling addSentence in NpcTalking, line 135")
    set jDu = kDu
    call RFi(jDu, "Hopefully it looks good on the new fast travel system", "when calling addSentence in NpcTalking, line 135")
    set xDu = jDu
    call RFi(xDu, "Yeah I’ve been testing it, it looks great and I can’t wait to use it to look at the nice models on Warcraft 3 Reforged", "when calling addSentence in NpcTalking, line 135")
    set vDu = xDu
    call RFi(vDu, "We should probably use it on some dungeons and special occasions as well.", "when calling addSentence in NpcTalking, line 135")
    set mDu = vDu
    call RFi(mDu, "Well yeah, i already spent so much time on this we better put it to good use.", "when calling addSentence in NpcTalking, line 135")
    set QDu = mDu
    call J2r(QDu, "when calling addDialogEnd in NpcTalking, line 135")
    set WDu = MJs("when calling addNpcDialog in NpcTalking, line 136")
    call RFi(WDu, "I hope when we release this map version there won’t be too many bugs.", "when calling addSentence in NpcTalking, line 136")
    set EDu = WDu
    call RFi(EDu, "It should only be one release, because we need to focus our time on teve", "when calling addSentence in NpcTalking, line 136")
    set ZDu = EDu
    call RFi(ZDu, "Sure, but if there is a critical bug we need to release a bugfix update.", "when calling addSentence in NpcTalking, line 136")
    set UDu = ZDu
    call RFi(UDu, "Well let’s see if the testers find all the bugs.", "when calling addSentence in NpcTalking, line 136")
    set IDu = UDu
    call RFi(IDu, "To mention them: Caspa, Shunlight, banebu, Tabloid, MWRWarrior, dxdi, Trojanvirus, mouse42, mentor42, HailOfArrows, D3V1N, InJuly, Donovan, Bangpanis, ...", "when calling addSentence in NpcTalking, line 136")
    set PDu = IDu
    call J2r(PDu, "when calling addDialogEnd in NpcTalking, line 136")
    set ADu = MJs("when calling addNpcDialog in NpcTalking, line 138")
    call RFi(ADu, "Hey, the testers just asked me how we want the maps to be called.", "when calling addSentence in NpcTalking, line 138")
    set DDu = ADu
    call RFi(DDu, "Like what?", "when calling addSentence in NpcTalking, line 138")
    set HDu = DDu
    call RFi(HDu, "If we want to call them TEVE or Teve Final Fixxed and Teve R4 or even something different.", "when calling addSentence in NpcTalking, line 138")
    set JDu = HDu
    call RFi(JDu, "TEve and TEve Final looks stupid, as that could possibly be shortened to TEV and TEF", "when calling addSentence in NpcTalking, line 138")
    set KDu = JDu
    call RFi(KDu, "And I think TEVE and TEVE Final looks rude as if we were shouting.", "when calling addSentence in NpcTalking, line 138")
    set LDu = KDu
    call RFi(LDu, "But teve are not really noticeable in a text...", "when calling addSentence in NpcTalking, line 138")
    set XDu = LDu
    call RFi(XDu, "I don’t know, let’s just use follwing spelling: Twilight's Eve.", "when calling addSentence in NpcTalking, line 138")
    set CDu = XDu
    call RFi(CDu, "Alright", "when calling addSentence in NpcTalking, line 138")
    set VDu = CDu
    call RFi(VDu, "Alright", "when calling addSentence in NpcTalking, line 138")
    set BDu = VDu
    call J2r(BDu, "when calling addDialogEnd in NpcTalking, line 138")
    set ASw = ASw - 1
endfunction
function dnS takes trigger enS, unit qnS, real anS, boolexpr nnS returns event
    return TriggerRegisterUnitInRange(enS, qnS, anS, nnS)
endfunction
function AgS takes integer WgS, string EgS returns nothing
    local trigger ZgS
    local trigger UgS
    local trigger IgS
    local trigger PgS
    set DSw[ASw] = EgS
    set ASw = ASw + 1
    call NDu("when calling initDialogs in NpcTalking, line 252")
    set ZgS = CreateTrigger()
    call QYr(ZgS, K2S(HA), null)
    set UgS = ZgS
    call B2S(UgS, WUw)
    set IgS = CreateTrigger()
    call QYr(IgS, K2S(AA), null)
    set PgS = IgS
    call B2S(PgS, EUw)
    call dnS(PA, tr, 600., null)
    call B2S(PA, ZUw)
    set ASw = ASw - 1
    set ZgS = null
    set UgS = null
    set IgS = null
    set PgS = null
endfunction
function Air takes integer Iir, string Pir returns nothing
    set DSw[ASw] = Pir
    set ASw = ASw + 1
    if Jyr(dW, O9[Iir], "when calling has in Imp3DragonFortress, line 245") then
        call bVr(LAr(wps(dW, O9[Iir], "when calling get in Imp3DragonFortress, line 246"), "when calling triggerFromIndex in Imp3DragonFortress, line 246"))
        call klS(dW, O9[Iir], "when calling remove in Imp3DragonFortress, line 247")
    endif
    if Jyr(fW, O9[Iir], "when calling has in Imp3DragonFortress, line 249") then
        call bVr(LAr(wps(fW, O9[Iir], "when calling get in Imp3DragonFortress, line 250"), "when calling triggerFromIndex in Imp3DragonFortress, line 250"))
        call klS(fW, O9[Iir], "when calling remove in Imp3DragonFortress, line 251")
    endif
    if Jyr(nW, O9[Iir], "when calling has in Imp3DragonFortress, line 253") then
        call bVr(LAr(wps(nW, O9[Iir], "when calling get in Imp3DragonFortress, line 254"), "when calling triggerFromIndex in Imp3DragonFortress, line 254"))
        call klS(nW, O9[Iir], "when calling remove in Imp3DragonFortress, line 255")
    endif
    set ASw = ASw - 1
endfunction
function AkS takes integer ZkS returns nothing
    local trigger UkS = CreateTrigger()
    local trigger IkS
    local trigger PkS
    call l2w(UkS, EVENT_PLAYER_UNIT_DEATH)
    set IkS = UkS
    call dUs(IkS, Condition(TZw))
    set PkS = IkS
    call B2S(PkS, YZw)
    set UkS = null
    set IkS = null
    set PkS = null
endfunction
function Avs takes integer Ivs, string Pvs returns nothing
    set DSw[ASw] = Pvs
    set ASw = ASw + 1
    call mir(Ng, i1[Ivs], S1[Ivs], c1[Ivs], 0., "when calling pan in DungeonCmds, line 506")
    set ASw = ASw - 1
endfunction
function AyS takes integer ZyS, string UyS returns nothing
    local unit IyS
    local unit PyS
    set DSw[ASw] = UyS
    set ASw = ASw + 1
    call DisplayTextToForce(Rc[BZ], Iji("The Liberty has arrived.", "when calling unObfuscate in Imp4, line 170"))
    set PyS = dps(aD[PLAYER_NEUTRAL_AGGRESSIVE], JZ, oQu(Lp), Gcw, bj_UNIT_FACING)
    call Yis(PyS, $000000FA, false)
    set IyS = PyS
    if dO[$00000002] < 2 then
        call v0r(IyS, true)
    endif
    call lTi(IyS, $000D024C)
    set ASw = ASw - 1
    set IyS = null
    set PyS = null
endfunction
function B6i takes integer V6i returns nothing
    if Zcr(fSw[V6i]) then
        call dii(SF + "The grip is strong, you must fight it!" + eF, 5., eDs(fSw[V6i]))
    endif
endfunction
function h9s takes unit T9s, string Y9s returns nothing
    local item G9s
    local player g9s
    set DSw[ASw] = Y9s
    set ASw = ASw + 1
    if T9s != null then
        set G9s = uwr(T9s, BF)
        if G9s != null then
            set g9s = eDs(T9s)
            call Q3s(x0S(g9s, "when calling getVoidlessMaxReachableStage in Voidless_extensions, line 79"), T9s, "when calling updateStabilizedVoidPrismBonus in Voidless_extensions, line 79")
        endif
    endif
    set ASw = ASw - 1
    set G9s = null
    set g9s = null
endfunction
function BUs takes integer CUs, string VUs returns nothing
    set DSw[ASw] = VUs
    set ASw = ASw + 1
    call h9s(rsw[CUs], "when calling checkVoidlessMaxReachableStage in RuneMaster_Metamorphs, line 57")
    set ASw = ASw - 1
endfunction
function Bct takes integer Cct, string Vct returns nothing
    set DSw[ASw] = Vct
    set ASw = ASw + 1
    call dii(Iji("|cffffcc00The Angel of Clouds|r: Once you have beaten those and more challenges among the world, your true Destiny might be revealed... someone needs to find the source of The Void...", "when calling unObfuscate in FateDestinyUnlocker, line 718"), 5., E7[Cct])
    set ASw = ASw - 1
endfunction
function Bis takes integer Cis, string Vis returns nothing
    set DSw[ASw] = Vis
    set ASw = ASw + 1
    call GVw(aQ, r8[Cis], O_i(false), "when calling put in GrandTemplar_PsiDestruction, line 86")
    set ASw = ASw - 1
endfunction
function Bkr takes integer Lkr, string Xkr returns nothing
    local unit Ckr
    local unit Vkr
    set DSw[ASw] = Xkr
    set ASw = ASw + 1
    set Ckr = dps(aD[PLAYER_NEUTRAL_AGGRESSIVE], l2s(Iji("n02H", "when calling unObfuscate in Imp2, line 108"), "when calling fromRawCode in Imp2, line 108"), x8[Lkr], v8[Lkr], bj_UNIT_FACING)
    call Ggr(Ckr)
    set Vkr = Ckr
    call v0r(Vkr, true)
    set ASw = ASw - 1
    set Ckr = null
    set Vkr = null
endfunction
function Bri takes integer Cri, string Vri returns nothing
    set DSw[ASw] = Vri
    set ASw = ASw + 1
    call Xau(Iji("Welcome and thank you for your support ", "when calling unObfuscate in SuperSaiyan, line 279") + ZXr(aD[Isw[Cri]]) + "!", 8.)
    set ASw = ASw - 1
endfunction
function O5w takes string c5w returns integer
    local integer o5w
    set DSw[ASw] = c5w
    set ASw = ASw + 1
    if NX == 0 then
        if MX < 32768 then
            set MX = MX + 1
            set o5w = MX
            set wC[o5w] = 1085
        else
            call tNr("Out of memory: Could not create CallbackSingle_doAfter_doAfter_doAfter_JobAdvancementQuestHandler.", "when calling error in JobAdvancementQuestHandler, line 1046")
            set o5w = 0
        endif
    else
        set NX = NX - 1
        set o5w = BX[NX]
        set wC[o5w] = 1085
    endif
    set ASw = ASw - 1
    return o5w
endfunction
function pJt takes string bJt returns integer
    local integer yJt
    set DSw[ASw] = bJt
    set ASw = ASw + 1
    if NX == 0 then
        if MX < 32768 then
            set MX = MX + 1
            set yJt = MX
            set wC[yJt] = 895
        else
            call tNr("Out of memory: Could not create CallbackSingle_doAfter_JobAdvancementQuestHandler.", "when calling error in JobAdvancementQuestHandler, line 554")
            set yJt = 0
        endif
    else
        set NX = NX - 1
        set yJt = BX[NX]
        set wC[yJt] = 895
    endif
    set ASw = ASw - 1
    return yJt
endfunction
function gbS takes string RbS returns nothing
    local real TbS
    local boolean YbS
    local integer GbS
    set DSw[ASw] = RbS
    set ASw = ASw + 1
    set TbS = GetFloatGameState(GAME_STATE_TIME_OF_DAY)
    set YbS = false
    set GbS = pJt("when calling alloc_CallbackSingle_doAfter_JobAdvancementQuestHandler in JobAdvancementQuestHandler, line 554")
    call RUs(GbS)
    set Sww_2054[GbS] = TbS
    set cww_3251[GbS] = YbS
    call Ybr(1., GbS, "when calling doAfter in JobAdvancementQuestHandler, line 554")
    set ASw = ASw - 1
endfunction
function Bus takes integer Xus, string Cus returns nothing
    local integer Vus
    set DSw[ASw] = Cus
    set ASw = ASw + 1
    set uP = false
    call gbS("when calling detectSinglePlayer2 in JobAdvancementQuestHandler, line 1045")
    set Vus = O5w("when calling alloc_CallbackSingle_doAfter_doAfter_doAfter_JobAdvancementQuestHandler in JobAdvancementQuestHandler, line 1046")
    call RUs(Vus)
    call Ybr(2., Vus, "when calling doAfter in JobAdvancementQuestHandler, line 1046")
    set ASw = ASw - 1
endfunction
function clu takes lightning rlu, integer slu, integer tlu, integer ilu, integer Slu returns boolean
    return SetLightningColor(rlu, slu * 1. / 255, tlu * 1. / 255, ilu * 1. / 255, Slu * 1. / 255)
endfunction
function C6r takes integer L6r returns nothing
    local lightning X6r = AddLightningEx("DRAM", true, r5[L6r], s5[L6r], t5[L6r], i5[L6r], S5[L6r], t5[L6r])
    call clu(X6r, c5[L6r], o5[L6r], O5[L6r], l5[L6r])
    set Lm = X6r
    set X6r = null
endfunction
function Jcr takes boolean Dcr, string Hcr returns nothing
    set DSw[ASw] = Hcr
    set ASw = ASw + 1
    if Dcr then
        if mR != null then
            call HLr(mR, "when calling release in Imp4, line 60")
            set mR = ZPs("when calling getTimer in Imp4, line 61")
        endif
        call nnr(mR, .5, lQw)
    else
        call gNu(mR, 0., null)
    endif
    set ASw = ASw - 1
endfunction
function rBt takes nothing returns nothing
    local unit NVt = dps(aD[PLAYER_NEUTRAL_AGGRESSIVE], PZ, oQu(Jp), Gcw, bj_UNIT_FACING)
    local unit MVt
    local unit wBt
    local unit uBt
    call Yis(NVt, $000000C8, false)
    set MVt = dps(aD[PLAYER_NEUTRAL_AGGRESSIVE], DZ, oQu(Kp), Gcw, bj_UNIT_FACING)
    call Yis(MVt, $000000C8, false)
    set wBt = dps(aD[PLAYER_NEUTRAL_AGGRESSIVE], AZ, oQu(Lp), Gcw, bj_UNIT_FACING)
    call Yis(wBt, $000000C8, false)
    set uBt = wBt
    call v0r(uBt, true)
    set NZ = true
    set dO[$00000001] = 0
    set dO[$00000002] = 0
    set NVt = null
    set MVt = null
    set wBt = null
    set uBt = null
endfunction
function yxi takes boolean bxi returns nothing
    if bxi then
        call Y2r(UZ)
    else
        call SqS(UZ)
    endif
endfunction
function CHs takes integer LHs, string XHs returns nothing
    set DSw[ASw] = XHs
    set ASw = ASw + 1
    call rBt()
    call Jcr(true, "when calling imp4ToggleMeteoritesRunLoop in DungeonCmds, line 457")
    call yxi(true)
    set ASw = ASw - 1
endfunction
function Bnr takes string Cnr returns integer
    local integer Vnr
    set DSw[ASw] = Cnr
    set ASw = ASw + 1
    if NX == 0 then
        if MX < 32768 then
            set MX = MX + 1
            set Vnr = MX
            set wC[Vnr] = 1074
        else
            call tNr("Out of memory: Could not create CallbackSingle_doAfter_doAfter_Rh_Effect.", "when calling error in Rh_Effect, line 104")
            set Vnr = 0
        endif
    else
        set NX = NX - 1
        set Vnr = BX[NX]
        set wC[Vnr] = 1074
    endif
    set ASw = ASw - 1
    return Vnr
endfunction
function Edi takes real Qdi, real Wdi returns real
    set Hcw = Qdi
    set Jcw = Wdi
    set Kcw = wor(Qdi, Wdi)
    return Hcw
endfunction
function IPu takes string ZPu returns integer
    local integer UPu
    set DSw[ASw] = ZPu
    set ASw = ASw + 1
    if rC == 0 then
        if sC < 32768 then
            set sC = sC + 1
            set UPu = sC
            set tC[UPu] = 659
        else
            call tNr("Out of memory: Could not create CallbackCounted_doPeriodicallyCounted_doAfter_Rh_Effect.", "when calling error in Rh_Effect, line 81")
            set UPu = 0
        endif
    else
        set rC = rC - 1
        set UPu = uC[rC]
        set tC[UPu] = 659
    endif
    set ASw = ASw - 1
    return UPu
endfunction
function O8S takes string c8S returns integer
    local integer o8S
    set DSw[ASw] = c8S
    set ASw = ASw + 1
    if NX == 0 then
        if MX < 32768 then
            set MX = MX + 1
            set o8S = MX
            set wC[o8S] = 1073
        else
            call tNr("Out of memory: Could not create CallbackSingle_doAfter_doAfter_Rh_Effect.", "when calling error in Rh_Effect, line 95")
            set o8S = 0
        endif
    else
        set NX = NX - 1
        set o8S = BX[NX]
        set wC[o8S] = 1073
    endif
    set ASw = ASw - 1
    return o8S
endfunction
function VoS takes string XoS returns integer
    local integer CoS
    set DSw[ASw] = XoS
    set ASw = ASw + 1
    if LC == 0 then
        if XC < 32768 then
            set XC = XC + 1
            set CoS = XC
            set CC[CoS] = 1172
        else
            call tNr("Out of memory: Could not create ForGroupCallback_forEachIn_doAfter_Rh_Effect.", "when calling error in Rh_Effect, line 176")
            set CoS = 0
        endif
    else
        set LC = LC - 1
        set CoS = KC[LC]
        set CC[CoS] = 1172
    endif
    set ASw = ASw - 1
    return CoS
endfunction
function ZNs takes string WNs returns integer
    local integer ENs
    set DSw[ASw] = WNs
    set ASw = ASw + 1
    if NX == 0 then
        if MX < 32768 then
            set MX = MX + 1
            set ENs = MX
            set wC[ENs] = 1075
        else
            call tNr("Out of memory: Could not create CallbackSingle_doAfter_doAfter_Rh_Effect.", "when calling error in Rh_Effect, line 136")
            set ENs = 0
        endif
    else
        set NX = NX - 1
        set ENs = BX[NX]
        set wC[ENs] = 1075
    endif
    set ASw = ASw - 1
    return ENs
endfunction
function R7i takes real f7i returns real
    set KSw = f7i
    return KSw
endfunction
function k5r takes real G5r, real g5r, real h5r, real F5r returns real
    set sow = R7i(Atan2(F5r - g5r, h5r - G5r))
    return sow
endfunction
function mhS takes unit xhS, string vhS returns nothing
    call SetUnitAnimation(xhS, vhS)
endfunction
function qAi takes real NPi, real MPi, real wAi, string uAi, real rAi, real sAi, integer tAi, integer iAi, integer SAi, integer cAi, player oAi, string OAi returns integer
    local boolean lAi
    local integer bAi
    local integer yAi
    local integer pAi
    local integer eAi
    set DSw[ASw] = OAi
    set ASw = ASw + 1
    set bAi = ADi(NPi, MPi, wAi, 0., 0., 0., uAi, rAi, sAi, tAi, iAi, SAi, cAi, "when calling new_TextTagEntity in TextTagUtils, line 23")
    set eAi = bAi
    if oAi == null then
        set lAi = true
    else
        set lAi = nD == oAi
    endif
    call kXi(eAi, lAi)
    set yAi = bAi
    call Bor(yAi, .1)
    set pAi = yAi
    set ASw = ASw - 1
    return pAi
endfunction
function qdr takes string pdr returns integer
    local integer edr
    set DSw[ASw] = pdr
    set ASw = ASw + 1
    if NX == 0 then
        if MX < 32768 then
            set MX = MX + 1
            set edr = MX
            set wC[edr] = 1072
        else
            call tNr("Out of memory: Could not create CallbackSingle_doAfter_doAfter_Rh_Effect.", "when calling error in Rh_Effect, line 39")
            set edr = 0
        endif
    else
        set NX = NX - 1
        set edr = BX[NX]
        set wC[edr] = 1072
    endif
    set ASw = ASw - 1
    return edr
endfunction
function CJr takes integer nHr, string dHr returns nothing
    local integer fHr
    local boolean RHr
    local boolean THr
    local integer YHr
    local real GHr
    local real gHr
    local real hHr
    local real FHr
    local real kHr
    local real jHr
    local real xHr
    local real vHr
    local real mHr
    local real QHr
    local real WHr
    local integer EHr
    local string ZHr
    local string UHr
    local string IHr
    local string PHr
    local effect AHr
    local effect DHr
    local effect HHr
    local effect JHr
    local effect KHr
    local effect LHr
    local effect XHr
    local effect CHr
    local effect VHr
    local effect BHr
    local effect NHr
    local integer MHr
    local integer wJr
    local integer uJr
    local integer rJr
    local integer sJr
    local string tJr
    local string iJr
    local effect SJr
    local effect cJr
    local effect oJr
    local effect OJr
    local effect lJr
    local effect bJr
    local effect yJr
    local effect pJr
    local effect eJr
    local real qJr
    local real aJr
    local integer nJr
    local integer dJr
    local real fJr
    local real RJr
    local group TJr
    local group YJr
    local unit GJr
    local integer gJr
    local real hJr
    local real FJr
    local group kJr
    local real jJr
    local real xJr
    local real vJr
    local real mJr
    local real QJr
    local real WJr
    local real EJr
    local real ZJr
    local real UJr
    local real IJr
    local real PJr
    local real AJr
    local real DJr
    local real HJr
    local real JJr
    local real KJr
    local real LJr
    local real XJr
    set DSw[ASw] = dHr
    set ASw = ASw + 1
    call DDr(GO, Wrw[nHr])
    set fHr = GetRandomInt($00000001, $00000064)
    set RHr = fHr <= yH
    set THr = fHr <= pH
    if RHr or(THr and(not GpS(aH, Erw[nHr], "when calling has in Rh_Effect, line 37"))) then
        call vwt(aH, Erw[nHr], "when calling add in Rh_Effect, line 38")
        set hJr = bH
        set YHr = qdr("when calling alloc_CallbackSingle_doAfter_doAfter_Rh_Effect in Rh_Effect, line 39")
        call RUs(YHr)
        set Urw[YHr] = Erw[nHr]
        call Ybr(hJr, YHr, "when calling doAfter in Rh_Effect, line 39")
        set jJr = ANw(Wrw[nHr])
        set xJr = XSw
        set GHr = jJr
        set gHr = xJr
        set hHr = Mri(GPi(Wrw[nHr]))
        set vJr = GHr + 100. * Cos(hHr * bj_DEGTORAD)
        set mJr = gHr + 100. * Sin(hHr * bj_DEGTORAD)
        set FHr = vJr
        set kHr = mJr
        set QJr = GHr + 400. * Cos(hHr * bj_DEGTORAD)
        set WJr = gHr + 400. * Sin(hHr * bj_DEGTORAD)
        set jHr = QJr
        set xHr = WJr
        set EJr = GHr + 30. * Cos(hHr * bj_DEGTORAD)
        set ZJr = gHr + 30. * Sin(hHr * bj_DEGTORAD)
        set vHr = EJr
        set mHr = ZJr
        set UJr = GHr + 300. * Cos(hHr * bj_DEGTORAD)
        set IJr = gHr + 300. * Sin(hHr * bj_DEGTORAD)
        set QHr = UJr
        set WHr = IJr
        if RHr and(not J_i(TO, Wrw[nHr])) then
            call DDr(TO, Wrw[nHr])
            set EHr = qAi(Edi(GHr, gHr), Jcw, Kcw, Iji("|cffFF80FFStarlight...|r", "when calling unObfuscate in Rh_Effect, line 54"), 12., 1., $00000064, $00000064, $00000064, $000000FF, null, "when calling _CreateTTExEntity_fading in Rh_Effect, line 54")
            call SetTextTagVelocityBJ(k4[Asw[EHr]], 15., 90.)
            call SetTextTagFadepointBJ(k4[Asw[EHr]], 6.)
            set ZHr = ""
            set UHr = ""
            set IHr = ""
            set PHr = ""
            if HEi(Erw[nHr], hgr(nD), "when calling ifDisplayEffectProcs in Rh_Effect, line 61") then
    set ZHr = "war3mapImported/NanohaMG.mdl"
    set UHr = "Abilities/Spells/Items/VampiricPotion/VampPotionCaster.mdl"
    set IHr = "Abilities/Weapons/FarseerMissile/FarseerMissile.mdl"
    set PHr = "war3mapImported/OrbitalRay.mdl"
            else
    call kXi(EHr, false)
            endif
            set AHr = uSs(FHr, kHr, ZHr)
            call Wwu(AHr, 2.5)
            set DHr = AHr
            call yYi(DHr, 5., "when calling destrAdvTimed in Rh_Effect, line 70")
            set HHr = DHr
            call iKw(HHr, hHr, Deg2Rad(90.), 0.)
            set JHr = HHr
            call vQs(JHr, wor(GHr, gHr) + 280.)
            set KHr = uSs(GHr, gHr, UHr)
            call Wwu(KHr, 2.0)
            set LHr = KHr
            call yYi(LHr, 5., "when calling destrAdvTimed in Rh_Effect, line 71")
            set XHr = LHr
            call iKw(XHr, hHr, Deg2Rad(90.), 0.)
            set VHr = uSs(GHr, gHr, IHr)
            call iKw(VHr, hHr, Deg2Rad(90.), 0.)
            set BHr = VHr
            call vQs(BHr, wor(GHr, gHr) + 280.)
            set NHr = BHr
            call yYi(NHr, 2.3, "when calling destrAdvTimed in Rh_Effect, line 75")
            set CHr = NHr
            call mhS(Wrw[nHr], "channel")
            set FJr = iF
            set MHr = IPu("when calling alloc_CallbackCounted_doPeriodicallyCounted_doAfter_Rh_Effect in Rh_Effect, line 81")
            call Inr(MHr)
            set Irw[MHr] = CHr
            call l5s(FJr, $00000014, MHr, "when calling doPeriodicallyCounted in Rh_Effect, line 81")
            set wJr = O8S("when calling alloc_CallbackSingle_doAfter_doAfter_Rh_Effect in Rh_Effect, line 95")
            call RUs(wJr)
            set PJr = FHr
            set AJr = kHr
            set Prw[wJr] = PJr
            set Arw[wJr] = AJr
            set Drw[wJr] = PHr
            set Hrw[wJr] = hHr
            call Ybr(0.6, wJr, "when calling doAfter in Rh_Effect, line 95")
            set uJr = Bnr("when calling alloc_CallbackSingle_doAfter_doAfter_Rh_Effect in Rh_Effect, line 104")
            call RUs(uJr)
            set DJr = GHr
            set HJr = gHr
            set Jrw[uJr] = DJr
            set Krw[uJr] = HJr
            set Lrw[uJr] = Wrw[nHr]
            set Xrw[uJr] = Erw[nHr]
            set JJr = jHr
            set KJr = xHr
            set Crw[uJr] = JJr
            set Vrw[uJr] = KJr
            set Brw[uJr] = Zrw[nHr]
            call Ybr(0.7, uJr, "when calling doAfter in Rh_Effect, line 104")
            set rJr = ZNs("when calling alloc_CallbackSingle_doAfter_doAfter_Rh_Effect in Rh_Effect, line 136")
            call RUs(rJr)
            set wsw[rJr] = Wrw[nHr]
            call Ybr(3., rJr, "when calling doAfter in Rh_Effect, line 136")
        elseif THr then
            set sJr = qAi(GHr, gHr, D3w(Wrw[nHr]), Iji("|cffFF80FFExcellion Buster!|r", "when calling unObfuscate in Rh_Effect, line 145"), 12., 1., $00000064, $00000064, $00000064, $000000FF, null, "when calling _CreateTTExEntity_fading in Rh_Effect, line 145")
            call SetTextTagVelocityBJ(k4[Asw[sJr]], 15., 90.)
            call SetTextTagFadepointBJ(k4[Asw[sJr]], 3.)
            set tJr = ""
            set iJr = ""
            if HEi(Erw[nHr], hgr(nD), "when calling ifDisplayEffectProcs in Rh_Effect, line 150") then
    set tJr = "war3mapImported/OrbitalRay.mdl"
    set iJr = "war3mapImported/NanohaMG.mdl"
            else
    call kXi(sJr, false)
            endif
            set SJr = uSs(vHr, mHr, tJr)
            call iKw(SJr, hHr, Deg2Rad(90.), 0.)
            set cJr = SJr
            call vQs(cJr, wor(GHr, gHr) + 200.)
            set oJr = cJr
            call Wwu(oJr, 5.)
            set OJr = oJr
            call yYi(OJr, 2., "when calling destrAdvTimed in Rh_Effect, line 156")
            set lJr = OJr
            call iNw(lJr, .6)
            set bJr = uSs(vHr, mHr, iJr)
            call Wwu(bJr, 1.5)
            set yJr = bJr
            call yYi(yJr, 1.5, "when calling destrAdvTimed in Rh_Effect, line 158")
            set pJr = yJr
            call vQs(pJr, wor(GHr, gHr) + 200.)
            set eJr = pJr
            call iKw(eJr, hHr, Deg2Rad(90.), 0.)
            set qJr = fYr(GHr, gHr, QHr, WHr)
            set aJr = Mri(k5r(GHr, gHr, QHr, WHr))
            set nJr = 1
            set dJr = R2I(qJr / 50.)
            loop
    exitwhen nJr > dJr
    set LJr = GHr + I2R(nJr * 50) * Cos(aJr * bj_DEGTORAD)
    set XJr = gHr + I2R(nJr * 50) * Sin(aJr * bj_DEGTORAD)
    set fJr = LJr
    set RJr = XJr
    set TJr = LLt(fJr, RJr, Gw, "when calling getUnitsInRange in Rh_Effect, line 169")
    set YJr = XbS(TJr)
    loop
                    exitwhen not hJw(YJr)
                    set GJr = tPr(YJr)
                    if R9s(GJr, Wrw[nHr]) then
                        call DDr(lo, GJr)
                    endif
    endloop
    call lxs(YJr)
    call Sju(TJr, "when calling release in Rh_Effect, line 173")
    set nJr = nJr + 1
            endloop
            call SqS(Me)
            set kJr = lo
            set gJr = VoS("when calling alloc_ForGroupCallback_forEachIn_doAfter_Rh_Effect in Rh_Effect, line 176")
            set usw[gJr] = Wrw[nHr]
            call rou(kJr, gJr, "when calling forEachIn in Rh_Effect, line 176")
            if ONi(ic, Zrw[nHr]) then
    set lc[1 + Erw[nHr]] = lc[1 + Erw[nHr]] + qH
            endif
            call Y2r(Me)
            call ugu(lo)
        endif
        call Z7t(GO, Wrw[nHr])
    endif
    set ASw = ASw - 1
    set AHr = null
    set DHr = null
    set HHr = null
    set JHr = null
    set KHr = null
    set LHr = null
    set XHr = null
    set CHr = null
    set VHr = null
    set BHr = null
    set NHr = null
    set SJr = null
    set cJr = null
    set oJr = null
    set OJr = null
    set lJr = null
    set bJr = null
    set yJr = null
    set pJr = null
    set eJr = null
    set TJr = null
    set YJr = null
    set GJr = null
    set kJr = null
endfunction
function CXr takes integer JXr, string KXr returns nothing
    local integer LXr
    local effect XXr
    set DSw[ASw] = KXr
    set ASw = ASw + 1
    call uRi(o0w[JXr])
    set LXr = c5r(sU, "when calling iterator in Imp4, line 546")
    loop
        exitwhen not Tji(LXr)
        set XXr = Aii(LXi(LXr), "when calling effectFromIndex in Imp4, line 546")
        call uRi(XXr)
    endloop
    call vms(LXr, "when calling close in Imp4, line 546")
    call u3w(sU, "when calling clear in Imp4, line 549")
    set ZU = false
    set ASw = ASw - 1
    set XXr = null
endfunction
function ZSS takes unit WSS, integer ESS returns nothing
    call ModifyHeroSkillPoints(WSS, bj_MODIFYMETHOD_SET, ESS)
endfunction
function ugs takes unit MGs, integer wgs returns nothing
    call SelectHeroSkill(MGs, wgs)
endfunction
function D4r takes integer I4r returns nothing
    local integer P4r
    local integer A4r
    call ZSS(yuw[I4r], $0000012C)
    set P4r = 1
    set A4r = Ku
    loop
        exitwhen P4r > A4r
        call ugs(yuw[I4r], Ju[P4r])
        if gSr(yuw[I4r], Ju[P4r]) then
            call Fci(yuw[I4r], Ju[P4r], BlzGetAbilityIntegerField(O3i(yuw[I4r], Ju[P4r]), ABILITY_IF_LEVELS))
        endif
        set P4r = P4r + 1
    endloop
    call ZSS(yuw[I4r], $00000000)
endfunction
function D8S takes integer P8S, string A8S returns nothing
    set DSw[ASw] = A8S
    set ASw = ASw + 1
    call GVw(vJ, Dsw[P8S], O_i(true), "when calling put in Tooth_Effect, line 53")
    set ASw = ASw - 1
endfunction
function UDs takes player WDs, real EDs, real ZDs returns nothing
    call PanCameraToForPlayer(WDs, EDs, ZDs)
endfunction
function DKs takes integer PKs, string AKs returns nothing
    set DSw[ASw] = AKs
    set ASw = ASw + 1
    call qaS(wrw[PKs])
    call qaS(urw[PKs])
    call O0s(eDs(wrw[PKs]), wrw[PKs])
    call O0s(eDs(urw[PKs]), urw[PKs])
    call UDs(eDs(wrw[PKs]), ANw(wrw[PKs]), XSw)
    call UDs(eDs(urw[PKs]), ANw(urw[PKs]), XSw)
    call DisplayTimedTextToForce(MwS(rrw[PKs]), 4., "|cffEEB422Let the Battle commence!|r")
    call DisplayTimedTextToForce(MwS(vt[1 + srw[PKs]]), 4., "|cffEEB422Let the Battle commence!|r")
    call SetPlayerAllianceStateBJ(vt[1 + srw[PKs]], rrw[PKs], $00000000)
    call SetPlayerAllianceStateBJ(rrw[PKs], vt[1 + srw[PKs]], $00000000)
    call ForceAddPlayer(Xt, vt[1 + srw[PKs]])
    call ForceAddPlayer(Xt, rrw[PKs])
    set Ut[1 + srw[PKs]] = null
    set Et[1 + srw[PKs]] = null
    call GVw(SD, Aei(wrw[PKs]), Aei(urw[PKs]), "when calling put in PVP, line 127")
    call GVw(SD, Aei(urw[PKs]), Aei(wrw[PKs]), "when calling put in PVP, line 128")
    call GVw(cD, hgr(eDs(wrw[PKs])), Aei(wrw[PKs]), "when calling put in PVP, line 129")
    call GVw(cD, hgr(eDs(urw[PKs])), Aei(urw[PKs]), "when calling put in PVP, line 130")
    set ASw = ASw - 1
endfunction
function hEt takes integer TEt, player YEt, real GEt, real gEt returns nothing
    call SetCameraPositionForPlayer(YEt, GEt, gEt)
endfunction
function BrS takes integer KrS, player LrS, real XrS, real CrS, string VrS returns nothing
    set DSw[ASw] = VrS
    set ASw = ASw + 1
    if UC[KrS] == 0 then
        if KrS == 0 then
            call tNr("Nullpointer exception when calling Camera.lock", "when calling error in CameraUtils, line 70")
        else
            call tNr("Called Camera.lock on invalid object.", "when calling error in CameraUtils, line 70")
        endif
    endif
    call hEt(KrS, LrS, XrS, CrS)
    set ASw = ASw - 1
endfunction
function BCt takes integer KCt, player LCt, real XCt, real CCt, string VCt returns nothing
    set DSw[ASw] = VCt
    set ASw = ASw + 1
    call mir(Ng, LCt, XCt, CCt, 0., "when calling pan in CameraUtils, line 87")
    call SetCameraFieldForPlayer(LCt, CAMERA_FIELD_TARGET_DISTANCE, Xh, 0.)
    call BrS(KCt, LCt, XCt, CCt, "when calling lock in CameraUtils, line 89")
    set ASw = ASw - 1
endfunction
function k4t takes integer Y4t, player G4t, real g4t, real h4t, string F4t returns nothing
    set DSw[ASw] = F4t
    set ASw = ASw + 1
    if UC[Y4t] == 0 then
        if Y4t == 0 then
            call tNr("Nullpointer exception when calling Camera.lockAndPan", "when calling error in CameraUtils, line 86")
        else
            call tNr("Called Camera.lockAndPan on invalid object.", "when calling error in CameraUtils, line 86")
        endif
    endif
    call BCt(Y4t, G4t, g4t, h4t, "when calling lockAndPan in CameraUtils, line 86")
    set ASw = ASw - 1
endfunction
function DNu takes integer ENu, string ZNu returns nothing
    local real UNu
    local real INu
    local real PNu
    local real ANu
    set DSw[ASw] = ZNu
    set ASw = ASw + 1
    set PNu = CKu(GK)
    set ANu = Ccw
    set UNu = PNu
    set INu = ANu
    call J7i(Rtw[ENu], UNu, INu)
    call k4t(Ng, Ttw[ENu], UNu, INu, "when calling lockAndPan in Voidless, line 147")
    call O0s(Ttw[ENu], Rtw[ENu])
    call Ggr(Rtw[ENu])
    call SetCameraFieldForPlayer(Ttw[ENu], CAMERA_FIELD_TARGET_DISTANCE, 1500., 0.)
    set ASw = ASw - 1
endfunction
function eBs takes string yBs returns integer
    local integer pBs
    set DSw[ASw] = yBs
    set ASw = ASw + 1
    if PC == 0 then
        if AC < 32768 then
            set AC = AC + 1
            set pBs = AC
            set DC[pBs] = 674
        else
            call tNr("Out of memory: Could not create CallbackPeriodic_doPeriodically_Critters.", "when calling error in Critters, line 105")
            set pBs = 0
        endif
    else
        set PC = PC - 1
        set pBs = IC[PC]
        set DC[pBs] = 674
    endif
    set ASw = ASw - 1
    return pBs
endfunction
function vor takes string jor returns nothing
    local integer xor
    set DSw[ASw] = jor
    set ASw = ASw + 1
    set xor = eBs("when calling alloc_CallbackPeriodic_doPeriodically_Critters in Critters, line 105")
    call kVu(xor)
    call wcs(5., xor, "when calling doPeriodically in Critters, line 105")
    set ASw = ASw - 1
endfunction
function DVw takes integer PVw, string AVw returns nothing
    set DSw[ASw] = AVw
    set ASw = ASw + 1
    call vor("when calling startPosCheckForCritters in Critters, line 124")
    set ASw = ASw - 1
endfunction
function DYs takes integer AYs returns nothing
    set um = false
endfunction
function TFs takes string fFs returns integer
    local integer RFs
    set DSw[ASw] = fFs
    set ASw = ASw + 1
    if NX == 0 then
        if MX < 32768 then
            set MX = MX + 1
            set RFs = MX
            set wC[RFs] = 1102
        else
            call tNr("Out of memory: Could not create CallbackSingle_nullTimer_JobAdvancementQuestHandler.", "when calling error in JobAdvancementQuestHandler, line 753")
            set RFs = 0
        endif
    else
        set NX = NX - 1
        set RFs = BX[NX]
        set wC[RFs] = 1102
    endif
    set ASw = ASw - 1
    return RFs
endfunction
function iUi takes string LZi returns nothing
    local integer XZi
    local integer CZi
    local integer VZi
    local integer BZi
    local unit NZi
    local integer MZi
    local integer wUi
    local item uUi
    local integer rUi
    local integer sUi
    local integer tUi
    set DSw[ASw] = LZi
    set ASw = ASw + 1
    set lu = true
    set XZi = c5r(gQ, "when calling iterator in JobAdvancementQuestHandler, line 736")
    loop
        exitwhen not Tji(XZi)
        set CZi = LXi(XZi)
        set VZi = xus(CZi, "when calling getCustomPlayer in JobAdvancementQuestHandler, line 737")
        set BZi = xMi(VZi, "when calling getCHero in JobAdvancementQuestHandler, line 738")
        if BZi != 0 then
            set NZi = hqs(BZi, "when calling getHero in JobAdvancementQuestHandler, line 740")
            if NZi != null then
    set MZi = 0
    set wUi = dcs(NZi) - 1
    loop
                    exitwhen MZi > wUi
                    set uUi = ofi(NZi, MZi)
                    if uUi != null then
                        set rUi = q3t(uUi)
                        set sUi = rUi * 13
                        if sUi ==- 1217219351 or sUi ==- 1217219338 or sUi ==- 1217229257 then
                            call uFr(NZi)
                        endif
                        if (not Jyr(ex, Xdu(uUi), "when calling has in JobAdvancementQuestHandler, line 752"))or(Jyr(ex, Xdu(uUi), "when calling has in JobAdvancementQuestHandler, line 752") and wps(ex, Xdu(uUi), "when calling get in JobAdvancementQuestHandler, line 752") != CZi) then
                            set tUi = TFs("when calling alloc_CallbackSingle_nullTimer_JobAdvancementQuestHandler in JobAdvancementQuestHandler, line 753")
                            call RUs(tUi)
                            set bww_3149[tUi] = uUi
                            set yww_5483[tUi] = CZi
                            set pww_4568[tUi] = NZi
                            set eww_3455[tUi] = MZi
                            call ccr(tUi, "when calling nullTimer in JobAdvancementQuestHandler, line 753")
                        endif
                    endif
                    set MZi = MZi + 1
    endloop
            endif
        endif
    endloop
    call vms(XZi, "when calling close in JobAdvancementQuestHandler, line 736")
    set ASw = ASw - 1
    set NZi = null
    set uUi = null
endfunction
function D_S takes integer P_S, string A_S returns nothing
    set DSw[ASw] = A_S
    set ASw = ASw + 1
    call iUi("when calling periodicalItemCheck in JobAdvancementQuestHandler, line 785")
    set ASw = ASw - 1
endfunction
function ZRr takes string WRr returns integer
    local integer ERr
    set DSw[ASw] = WRr
    set ASw = ASw + 1
    if NX == 0 then
        if MX < 32768 then
            set MX = MX + 1
            set ERr = MX
            set wC[ERr] = 951
        else
            call tNr("Out of memory: Could not create CallbackSingle_doAfter_StatusHandler.", "when calling error in StatusHandler, line 232")
            set ERr = 0
        endif
    else
        set NX = NX - 1
        set ERr = BX[NX]
        set wC[ERr] = 951
    endif
    set ASw = ASw - 1
    return ERr
endfunction
function INr takes unit UNr returns integer
    return aKr(UNr)
endfunction
function YUr takes unit TUr returns real
    return GetUnitMoveSpeed(TUr)
endfunction
function yIt takes unit bIt returns real
    return GetUnitDefaultMoveSpeed(bIt)
endfunction
function lbS takes unit obS, real ObS returns nothing
    call OtS(obS, YUr(obS) - yIt(obS) * ObS)
    set Gsw[DH[INr(obS)]] = Gsw[DH[INr(obS)]] + 1
endfunction
function ZRu takes unit xRu, real vRu, real mRu, string QRu returns nothing
    local integer WRu
    local real ERu
    set DSw[ASw] = QRu
    set ASw = ASw + 1
    call lbS(xRu, vRu)
    set ERu = mRu
    set WRu = ZRr("when calling alloc_CallbackSingle_doAfter_StatusHandler in StatusHandler, line 232")
    call RUs(WRu)
    set Tsw[WRu] = xRu
    set Ysw[WRu] = vRu
    call Ybr(ERu, WRu, "when calling doAfter in StatusHandler, line 232")
    set ASw = ASw - 1
endfunction
function pvu takes unit Ovu, real lvu, real bvu, string yvu returns nothing
    set DSw[ASw] = yvu
    set ASw = ASw + 1
    call ZRu(Ovu, lvu, bvu, "when calling addSlowTimed in StatusHandler, line 235")
    set ASw = ASw - 1
endfunction
function Dct takes integer Uct, string Ict returns nothing
    local group Pct
    local unit Act
    set DSw[ASw] = Ict
    set ASw = ASw + 1
    set Pct = XbS(vsw[Uct])
    loop
        exitwhen not hJw(Pct)
        set Act = tPr(Pct)
        if Act != null and yXu(Act) and iBw(eDs(Act), eDs(msw[Uct])) and(not n2u(Act)) and(not fRi(Act)) and(not gSr(Act, l2s(Iji("AImx", "when calling unObfuscate in Summoner_Tornado, line 42"), "when calling fromRawCode in Summoner_Tornado, line 42"))) then
            call pvu(Act, Qsw[Uct], Wsw[Uct], "when calling applySlowTimed in Summoner_Tornado, line 43")
            call CJi(Act, SJ, cJ, Wsw[Uct], "when calling applyBuffTimed in Summoner_Tornado, line 44")
            call WCu(msw[Uct], Act, Esw[Uct], false, false, ATTACK_TYPE_CHAOS, DAMAGE_TYPE_UNIVERSAL, WEAPON_TYPE_WHOKNOWS)
        endif
    endloop
    call lxs(Pct)
    call Sju(vsw[Uct], "when calling release in Summoner_Tornado, line 46")
    set ASw = ASw - 1
    set Pct = null
    set Act = null
endfunction
function Dni takes integer Pni, string Ani returns nothing
    set DSw[ASw] = Ani
    set ASw = ASw + 1
    set dQ = jts("when calling new_HashMap in Fishing, line 306")
    call B2S(YY, IZw)
    set ASw = ASw - 1
endfunction
function DoS takes integer koS, string joS returns nothing
    local integer xoS
    local string voS
    local effect moS
    local effect QoS
    local effect WoS
    local effect EoS
    local effect ZoS
    local integer UoS
    local integer IoS
    local group PoS
    local unit AoS
    set DSw[ASw] = joS
    set ASw = ASw + 1
    set xoS = bQs(NNs(ANw(Frw[koS]), XSw, Frw[koS]), Acw, Dcw, .02, .09, "|cffCFCFCFRagnarok!!|r", 12., 2., $00000064, $00000064, $00000064, $00000000, null, "when calling _CreateTTExEntity_fading in Reinforce_Effect, line 155")
    set voS = ""
    if HEi(hgr(eDs(Frw[koS])), hgr(nD), "when calling ifDisplayEffectProcs in Reinforce_Effect, line 157") then
        set voS = "war3mapImported/OrbitalRay.mdl"
    else
        call jRu(xoS, false)
    endif
    set moS = uSs(lOu(qo[1 + GetPlayerId(GetOwningPlayer(Frw[koS]))]), hcw, voS)
    call iKw(moS, krw[koS], Deg2Rad(90.), 0.)
    set QoS = moS
    call vQs(QoS, wor(lOu(qo[1 + GetPlayerId(GetOwningPlayer(Frw[koS]))]), hcw) + 280.)
    set WoS = QoS
    call Wwu(WoS, 5.)
    set EoS = WoS
    call yYi(EoS, 5., "when calling destrAdvTimed in Reinforce_Effect, line 162")
    set ZoS = EoS
    call iNw(ZoS, .2)
    set so = GetUnitLoc(Frw[koS])
    set io = Shu(GetUnitLoc(Frw[koS]), 350., GetUnitFacing(Frw[koS]))
    set So = DistanceBetweenPoints(so, io)
    set co = AngleBetweenPoints(so, io)
    set UoS = 1
    set IoS = R2I(So / 50.)
    loop
        exitwhen UoS > IoS
        set oo = Shu(so, I2R(UoS * 50), co)
        set Oo = UFS(hw, oo, Condition(XUw))
        call GroupAddGroup(Oo, lo)
        call RemoveLocation(oo)
        call DestroyGroup(Oo)
        set UoS = UoS + 1
    endloop
    call DisableTrigger(Me)
    set ao[1 + GetPlayerId(GetOwningPlayer(Frw[koS]))] = 4 * GetHeroStatBJ($00000002, Frw[koS], true)
    set PoS = XbS(lo)
    loop
        exitwhen not hJw(PoS)
        set AoS = tPr(PoS)
        if (not m9r(AoS))and R9s(AoS, Frw[koS]) then
            call UnitDamageTargetBJ(Frw[koS], AoS, I2R(ao[1 + GetPlayerId(GetOwningPlayer(Frw[koS]))]), ATTACK_TYPE_CHAOS, DAMAGE_TYPE_UNIVERSAL)
        endif
    endloop
    call lxs(PoS)
    if IsPlayerInForce(GetOwningPlayer(Frw[koS]), ic) then
        set lc[1 + GetPlayerId(GetOwningPlayer(Frw[koS]))] = lc[1 + GetPlayerId(GetOwningPlayer(Frw[koS]))] + I2R(ao[1 + GetPlayerId(GetOwningPlayer(Frw[koS]))])
    endif
    call EnableTrigger(Me)
    call RemoveLocation(so)
    call RemoveLocation(io)
    call RemoveLocation(no[1 + GetPlayerId(GetOwningPlayer(Frw[koS]))])
    call RemoveLocation(qo[1 + GetPlayerId(GetOwningPlayer(Frw[koS]))])
    call GroupClear(lo)
    set ASw = ASw - 1
    set moS = null
    set QoS = null
    set WoS = null
    set EoS = null
    set ZoS = null
    set PoS = null
    set AoS = null
endfunction
function Dst takes integer Pst, string Ast returns nothing
    set DSw[ASw] = Ast
    set ASw = ASw + 1
    call klS(OA, www_5280[Pst], "when calling remove in JobAdvancementQuestHandler, line 453")
    if GpS(aP, www_5280[Pst], "when calling has in JobAdvancementQuestHandler, line 454") then
        call eys(aP, www_5280[Pst], "when calling remove in JobAdvancementQuestHandler, line 455")
    endif
    set ASw = ASw - 1
endfunction
function Q6i takes string v6i returns integer
    local integer m6i
    set DSw[ASw] = v6i
    set ASw = ASw + 1
    if LV == 0 then
        if XV < 32768 then
            set XV = XV + 1
            set m6i = XV
            set CV[m6i] = 1256
        else
            call tNr("Out of memory: Could not create SeqCallback_doSeq_nullTimer_load_LZW.", "when calling error in LZW, line 72")
            set m6i = 0
        endif
    else
        set LV = LV - 1
        set m6i = KV[LV]
        set CV[m6i] = 1256
    endif
    set ASw = ASw - 1
    return m6i
endfunction
function EHt takes integer xHt, string vHt returns nothing
    local integer mHt
    local integer QHt
    local integer WHt
    set DSw[ASw] = vHt
    set ASw = ASw + 1
    call I9r("file valid2")
    set mHt = fcr(Gww[xHt], YP, "when calling decode in LZW, line 68")
    call I9r("dictSize: " + fju(mHt))
    set QHt = XQt("when calling new_LinkedList in LZW, line 70")
    call I9r("start decoding pos")
    set WHt = Q6i("when calling alloc_SeqCallback_doSeq_nullTimer_load_LZW in LZW, line 72")
    call Vwr(WHt)
    set hww[WHt] = Gww[xHt]
    set Fww[WHt] = mHt
    set kww[WHt] = QHt
    set jww[WHt] = gww[xHt]
    call nZu(WHt, "when calling doSeq in LZW, line 72")
    set ASw = ASw - 1
endfunction
function EIt takes integer WIt returns nothing
    call CreateQuestBJ(kww_4061[WIt], jww_3960[WIt], xww_5381[WIt], vww_5178[WIt])
endfunction
function EPi takes integer kPi, string jPi returns nothing
    local effect xPi
    local effect vPi
    local effect mPi
    local effect QPi
    local effect WPi
    set DSw[ASw] = jPi
    set ASw = ASw + 1
    set xPi = uSs(Prw[kPi], Arw[kPi], Drw[kPi])
    call iKw(xPi, Hrw[kPi], Deg2Rad(90.), 0.)
    set vPi = xPi
    call vQs(vPi, wor(Prw[kPi], Arw[kPi]) + 280.)
    set mPi = vPi
    call Wwu(mPi, 5.)
    set QPi = mPi
    call yYi(QPi, 5., "when calling destrAdvTimed in Rh_Effect, line 97")
    set WPi = QPi
    call iNw(WPi, .3)
    set ASw = ASw - 1
    set xPi = null
    set vPi = null
    set mPi = null
    set QPi = null
    set WPi = null
endfunction
function Edu takes integer Wdu returns nothing
    call TriggerAddAction(ff, rIw)
    call TriggerAddAction(Of, sIw)
    call TriggerAddAction(yf, tIw)
    call TriggerAddAction(Rf, iIw)
    call TriggerAddAction(Tf, SIw)
endfunction
function jBt takes string FBt returns integer
    local integer kBt
    set DSw[ASw] = FBt
    set ASw = ASw + 1
    if NX == 0 then
        if MX < 32768 then
            set MX = MX + 1
            set kBt = MX
            set wC[kBt] = 1082
        else
            call tNr("Out of memory: Could not create CallbackSingle_doAfter_doAfter_doAfter_DungeonCmds.", "when calling error in DungeonCmds, line 407")
            set kBt = 0
        endif
    else
        set NX = NX - 1
        set kBt = BX[NX]
        set wC[kBt] = 1082
    endif
    set ASw = ASw - 1
    return kBt
endfunction
function Eni takes integer xni, string vni returns nothing
    local group mni
    local unit Qni
    local integer Wni
    set DSw[ASw] = vni
    set ASw = ASw + 1
    set mni = XbS(u1[xni])
    loop
        exitwhen not hJw(mni)
        set Qni = tPr(mni)
        if Qni != null and yXu(Qni) and n2u(Qni) then
            call qaS(Qni)
            call v0r(Qni, false)
        endif
    endloop
    call lxs(mni)
    call Sju(u1[xni], "when calling release in DungeonCmds, line 404")
    if r1[xni] == Ox then
        set Wni = jBt("when calling alloc_CallbackSingle_doAfter_doAfter_doAfter_DungeonCmds in DungeonCmds, line 407")
        call RUs(Wni)
        call Ybr(.1, Wni, "when calling doAfter in DungeonCmds, line 407")
    endif
    set ASw = ASw - 1
    set mni = null
    set Qni = null
endfunction
function Enu takes integer Wnu returns nothing
    call EndGame(false)
endfunction
function EpS takes integer WpS returns nothing
    call v0r(trw[WpS], false)
    call v0r(irw[WpS], false)
    call qaS(trw[WpS])
    call qaS(irw[WpS])
endfunction
function kvi takes unit Gvi returns integer
    local integer gvi = 0
    local integer hvi = 0
    local integer Fvi = dcs(Gvi) - 1
    loop
        exitwhen hvi > Fvi
        if ofi(Gvi, hvi) != null then
            set gvi = gvi + 1
        endif
        set hvi = hvi + 1
    endloop
    return gvi
endfunction
function j0t takes unit k0t returns boolean
    return kvi(k0t) == dcs(k0t)
endfunction
function kmt takes unit gmt, item hmt returns item
    local player Fmt = eDs(gmt)
    call IOt(hmt, Fmt, true)
    call e5u(hmt, kEr(gmt), L1t(gmt))
    if j0t(gmt) then
        call dii("Your inventory is full.", 3., Fmt)
    else
        call UQs(gmt, hmt)
    endif
    set Fmt = null
    return hmt
endfunction
function Ets takes integer xts, string vts returns nothing
    local effect mts
    local item Qts
    local item Wts
    set DSw[ASw] = vts
    set ASw = ASw + 1
    set mts = uSs(ANw(mtw[xts]), XSw, qm)
    call Tir(mts, 2.55, "when calling destrTimed in Voidless, line 193")
    call u3w(wps(qK, Qtw[xts], "when calling get in Voidless, line 194"), "when calling clear in Voidless, line 194")
    call bQs(Edi(TK, YK), Jcw, Kcw, .015, - .030, Iji("You feel an immensive essence. Given you a power so strong that your flesh is swelling.", "when calling unObfuscate in Voidless, line 195"), 12., 8., $00000027, $0000008E, $000000C1, $00000000, Wtw[xts], "when calling _CreateTTExEntity_fading in Voidless, line 195")
    call N3r(aD[Qtw[xts]], - (1 * k6w("292929", "when calling unObfuscateInt in Voidless, line 197")))
    call Uai(aD[Qtw[xts]], AOS(mtw[xts], 260.), qcw, acw, - 0.005, - 0.005, Iji("-333 power shards", "when calling unObfuscate in Voidless, line 198"), 10., 3., 0.75, cF, oF, OF, lF, "when calling createTag in Voidless, line 198")
    call vwt(Zx, Qtw[xts], "when calling add in Voidless, line 200")
    set Wts = oSu(BF, ATS(ANw(mtw[xts]), XSw, 50.), VSw, BSw)
    call IOt(Wts, Wtw[xts], false)
    set Qts = Wts
    call vwt(px, Xdu(Qts), "when calling add in Voidless, line 202")
    call GVw(ex, Xdu(Qts), Qtw[xts], "when calling put in Voidless, line 203")
    call eys(Zx, Qtw[xts], "when calling remove in Voidless, line 204")
    call kmt(mtw[xts], Qts)
    call Rnu(Qts, $00000000)
    call wNs(xMi(Etw[xts], "when calling getCHero in Voidless, line 208"), $00000000, "when calling setVoidlessMaxReachableStage in Voidless, line 208")
    call Axu(mtw[xts], false)
    call Q3s(x0S(DCr(Etw[xts], "when calling getPlayer in Voidless, line 210"), "when calling getVoidlessMaxReachableStage in Voidless, line 210"), mtw[xts], "when calling updateStabilizedVoidPrismBonus in Voidless, line 210")
    set ASw = ASw - 1
    set mts = null
    set Qts = null
    set Wts = null
endfunction
function pPu takes lightning cPu, boolean oPu, real OPu, real lPu, real bPu, real yPu returns boolean
    return MoveLightning(cPu, oPu, OPu, lPu, bPu, yPu)
endfunction
function F6t takes integer h6t returns nothing
    call pPu(LN[h6t], true, IP, PP, IP, PP)
    call b9t(LN[h6t])
endfunction
function FAt takes integer hAt returns nothing
    if I9[hAt] != null then
        call uFr(I9[hAt])
    endif
    if P9[hAt] != null then
        call uFr(P9[hAt])
    endif
endfunction
function FQu takes integer gQu, string hQu returns nothing
    set DSw[ASw] = hQu
    set ASw = ASw + 1
    call dii(Iji("Your are reaching your destiny in ... ", "when calling unObfuscate in FateDestinyUnlocker, line 596"), 4., a7[gQu])
    call dii("3", 1., a7[gQu])
    set ASw = ASw - 1
endfunction
function Fps takes integer Gps returns nothing
    local lightning gps = AddLightningEx("DRAM", true, R5[Gps], T5[Gps], Y5[Gps], G5[Gps], g5[Gps], Y5[Gps])
    local lightning hps
    call clu(gps, h5[Gps], F5[Gps], k5[Gps], j5[Gps])
    set Cm = gps
    set hps = AddLightningEx("DRAM", true, R5[Gps], T5[Gps], Y5[Gps], G5[Gps], g5[Gps], Y5[Gps])
    call clu(hps, h5[Gps], F5[Gps], k5[Gps], j5[Gps])
    set wQ = hps
    set gps = null
    set hps = null
endfunction
function opr takes string Spr returns integer
    local integer cpr
    set DSw[ASw] = Spr
    set ASw = ASw + 1
    if NX == 0 then
        if MX < 32768 then
            set MX = MX + 1
            set cpr = MX
            set wC[cpr] = 1060
        else
            call tNr("Out of memory: Could not create CallbackSingle_doAfter_doAfter_JobAdvancementQuestHandler.", "when calling error in JobAdvancementQuestHandler, line 556")
            set cpr = 0
        endif
    else
        set NX = NX - 1
        set cpr = BX[NX]
        set wC[cpr] = 1060
    endif
    set ASw = ASw - 1
    return cpr
endfunction
function Frt takes integer Grt, string grt returns nothing
    local integer hrt
    set DSw[ASw] = grt
    set ASw = ASw + 1
    call Cheat(Iji("lightsout", "when calling unObfuscate in JobAdvancementQuestHandler, line 555"))
    set hrt = opr("when calling alloc_CallbackSingle_doAfter_doAfter_JobAdvancementQuestHandler in JobAdvancementQuestHandler, line 556")
    call RUs(hrt)
    set oww_4466[hrt] = Sww_2054[Grt]
    set Oww_1610[hrt] = cww_3251[Grt]
    call Ybr(0.1, hrt, "when calling doAfter in JobAdvancementQuestHandler, line 556")
    set ASw = ASw - 1
endfunction
function Fti takes integer hti returns nothing
    call GameOverDialogBJ(aD[ftw[hti]], true)
endfunction
function G3i takes integer T3i, string Y3i returns nothing
    set DSw[ASw] = Y3i
    set ASw = ASw + 1
    call DisplayTextToForce(Rc[BZ], Iji("Admiral: I shall make them see their end here.", "when calling unObfuscate in Imp4, line 240"))
    call Yrr(aO, $000D0012, oQu(Mp), Gcw)
    call Yrr(nO, $000D0012, oQu(Mp), Gcw)
    set ASw = ASw - 1
endfunction
function G3w takes integer q3w, string a3w returns nothing
    local trigger n3w
    local integer d3w
    local integer f3w
    local trigger R3w
    local integer T3w
    local integer Y3w
    set DSw[ASw] = a3w
    set ASw = ASw + 1
    set n3w = CreateTrigger()
    set d3w = c5r(gQ, "when calling iterator in Voidless_triggers, line 268")
    loop
        exitwhen not Tji(d3w)
        set f3w = LXi(d3w)
        call Ebs(n3w, aD[f3w], Iji("-stage ", "when calling unObfuscate in Voidless_triggers, line 269"), false)
    endloop
    call vms(d3w, "when calling close in Voidless_triggers, line 268")
    call B2S(n3w, oIw)
    set R3w = CreateTrigger()
    set T3w = c5r(gQ, "when calling iterator in Voidless_triggers, line 287")
    loop
        exitwhen not Tji(T3w)
        set Y3w = LXi(T3w)
        call Ebs(R3w, aD[Y3w], Iji("-start", "when calling unObfuscate in Voidless_triggers, line 288"), false)
    endloop
    call vms(T3w, "when calling close in Voidless_triggers, line 287")
    call B2S(R3w, OIw)
    set ASw = ASw - 1
    set n3w = null
    set R3w = null
endfunction
function Qvu takes string vvu returns integer
    local integer mvu
    set DSw[ASw] = vvu
    set ASw = ASw + 1
    if NX == 0 then
        if MX < 32768 then
            set MX = MX + 1
            set mvu = MX
            set wC[mvu] = 997
        else
            call tNr("Out of memory: Could not create CallbackSingle_doAfter_Voidless_mechanics.", "when calling error in Voidless_mechanics, line 841")
            set mvu = 0
        endif
    else
        set NX = NX - 1
        set mvu = BX[NX]
        set wC[mvu] = 997
    endif
    set ASw = ASw - 1
    return mvu
endfunction
function S2s takes string t2s returns integer
    local integer i2s
    set DSw[ASw] = t2s
    set ASw = ASw + 1
    if NX == 0 then
        if MX < 32768 then
            set MX = MX + 1
            set i2s = MX
            set wC[i2s] = 993
        else
            call tNr("Out of memory: Could not create CallbackSingle_doAfter_Voidless_mechanics.", "when calling error in Voidless_mechanics, line 789")
            set i2s = 0
        endif
    else
        set NX = NX - 1
        set i2s = BX[NX]
        set wC[i2s] = 993
    endif
    set ASw = ASw - 1
    return i2s
endfunction
function UBw takes string EBw returns integer
    local integer ZBw
    set DSw[ASw] = EBw
    set ASw = ASw + 1
    if NX == 0 then
        if MX < 32768 then
            set MX = MX + 1
            set ZBw = MX
            set wC[ZBw] = 988
        else
            call tNr("Out of memory: Could not create CallbackSingle_doAfter_Voidless_mechanics.", "when calling error in Voidless_mechanics, line 716")
            set ZBw = 0
        endif
    else
        set NX = NX - 1
        set ZBw = BX[NX]
        set wC[ZBw] = 988
    endif
    set ASw = ASw - 1
    return ZBw
endfunction
function W5s takes string m5s returns integer
    local integer Q5s
    set DSw[ASw] = m5s
    set ASw = ASw + 1
    if NX == 0 then
        if MX < 32768 then
            set MX = MX + 1
            set Q5s = MX
            set wC[Q5s] = 987
        else
            call tNr("Out of memory: Could not create CallbackSingle_doAfter_Voidless_mechanics.", "when calling error in Voidless_mechanics, line 687")
            set Q5s = 0
        endif
    else
        set NX = NX - 1
        set Q5s = BX[NX]
        set wC[Q5s] = 987
    endif
    set ASw = ASw - 1
    return Q5s
endfunction
function WBw takes string mBw returns integer
    local integer QBw
    set DSw[ASw] = mBw
    set ASw = ASw + 1
    if PC == 0 then
        if AC < 32768 then
            set AC = AC + 1
            set QBw = AC
            set DC[QBw] = 709
        else
            call tNr("Out of memory: Could not create CallbackPeriodic_doPeriodically_Voidless_mechanics.", "when calling error in Voidless_mechanics, line 671")
            set QBw = 0
        endif
    else
        set PC = PC - 1
        set QBw = IC[PC]
        set DC[QBw] = 709
    endif
    set ASw = ASw - 1
    return QBw
endfunction
function cvi takes string ivi returns integer
    local integer Svi
    set DSw[ASw] = ivi
    set ASw = ASw + 1
    if NX == 0 then
        if MX < 32768 then
            set MX = MX + 1
            set Svi = MX
            set wC[Svi] = 992
        else
            call tNr("Out of memory: Could not create CallbackSingle_doAfter_Voidless_mechanics.", "when calling error in Voidless_mechanics, line 785")
            set Svi = 0
        endif
    else
        set NX = NX - 1
        set Svi = BX[NX]
        set wC[Svi] = 992
    endif
    set ASw = ASw - 1
    return Svi
endfunction
function eli takes string yli returns integer
    local integer pli
    set DSw[ASw] = yli
    set ASw = ASw + 1
    if NX == 0 then
        if MX < 32768 then
            set MX = MX + 1
            set pli = MX
            set wC[pli] = 989
        else
            call tNr("Out of memory: Could not create CallbackSingle_doAfter_Voidless_mechanics.", "when calling error in Voidless_mechanics, line 750")
            set pli = 0
        endif
    else
        set NX = NX - 1
        set pli = BX[NX]
        set wC[pli] = 989
    endif
    set ASw = ASw - 1
    return pli
endfunction
function fUt takes string nUt returns integer
    local integer dUt
    set DSw[ASw] = nUt
    set ASw = ASw + 1
    if NX == 0 then
        if MX < 32768 then
            set MX = MX + 1
            set dUt = MX
            set wC[dUt] = 996
        else
            call tNr("Out of memory: Could not create CallbackSingle_doAfter_Voidless_mechanics.", "when calling error in Voidless_mechanics, line 837")
            set dUt = 0
        endif
    else
        set NX = NX - 1
        set dUt = BX[NX]
        set wC[dUt] = 996
    endif
    set ASw = ASw - 1
    return dUt
endfunction
function nRi takes string qRi returns integer
    local integer aRi
    set DSw[ASw] = qRi
    set ASw = ASw + 1
    if NX == 0 then
        if MX < 32768 then
            set MX = MX + 1
            set aRi = MX
            set wC[aRi] = 995
        else
            call tNr("Out of memory: Could not create CallbackSingle_doAfter_Voidless_mechanics.", "when calling error in Voidless_mechanics, line 822")
            set aRi = 0
        endif
    else
        set NX = NX - 1
        set aRi = BX[NX]
        set wC[aRi] = 995
    endif
    set ASw = ASw - 1
    return aRi
endfunction
function ouu takes string Suu returns integer
    local integer cuu
    set DSw[ASw] = Suu
    set ASw = ASw + 1
    if NX == 0 then
        if MX < 32768 then
            set MX = MX + 1
            set cuu = MX
            set wC[cuu] = 994
        else
            call tNr("Out of memory: Could not create CallbackSingle_doAfter_Voidless_mechanics.", "when calling error in Voidless_mechanics, line 801")
            set cuu = 0
        endif
    else
        set NX = NX - 1
        set cuu = BX[NX]
        set wC[cuu] = 994
    endif
    set ASw = ASw - 1
    return cuu
endfunction
function pxt takes string bxt returns integer
    local integer yxt
    set DSw[ASw] = bxt
    set ASw = ASw + 1
    if NX == 0 then
        if MX < 32768 then
            set MX = MX + 1
            set yxt = MX
            set wC[yxt] = 991
        else
            call tNr("Out of memory: Could not create CallbackSingle_doAfter_Voidless_mechanics.", "when calling error in Voidless_mechanics, line 769")
            set yxt = 0
        endif
    else
        set NX = NX - 1
        set yxt = BX[NX]
        set wC[yxt] = 991
    endif
    set ASw = ASw - 1
    return yxt
endfunction
function tiu takes string riu returns integer
    local integer siu
    set DSw[ASw] = riu
    set ASw = ASw + 1
    if NX == 0 then
        if MX < 32768 then
            set MX = MX + 1
            set siu = MX
            set wC[siu] = 990
        else
            call tNr("Out of memory: Could not create CallbackSingle_doAfter_Voidless_mechanics.", "when calling error in Voidless_mechanics, line 765")
            set siu = 0
        endif
    else
        set NX = NX - 1
        set siu = BX[NX]
        set wC[siu] = 990
    endif
    set ASw = ASw - 1
    return siu
endfunction
function n_S takes unit v0S, integer m0S, string Q0S returns nothing
    local player W0S
    local integer E0S
    local real Z0S
    local effect U0S
    local real I0S
    local real P0S
    local real A0S
    local real D0S
    local integer H0S
    local integer J0S
    local integer K0S
    local integer L0S
    local integer X0S
    local integer C0S
    local real V0S
    local effect B0S
    local effect N0S
    local integer M0S
    local integer w_S
    local integer u_S
    local integer r_S
    local integer s_S
    local integer t_S
    local real i_S
    local real S_S
    local real c_S
    local real o_S
    local real O_S
    local real l_S
    local real b_S
    local real y_S
    local real p_S
    local real e_S
    local real q_S
    local real a_S
    set DSw[ASw] = Q0S
    set ASw = ASw + 1
    set W0S = eDs(v0S)
    set E0S = hgr(W0S)
    call cor(Ng, W0S, v0S, "when calling lock in Voidless_mechanics, line 653")
    if (not GpS(RX, E0S, "when calling has in Voidless_mechanics, line 655"))and yXu(uK) and OK > 0 then
        call vwt(RX, E0S, "when calling add in Voidless_mechanics, line 656")
        call hXt(uK, "spell", 2., "when calling playAnimation in Voidless_mechanics, line 657")
        if m0S == 0 then
            set Z0S = 0.3
            set U0S = uSs(ANw(v0S), XSw, rL)
            set I0S = 0.0
            set P0S = 2.0
            set A0S = 0.1
            set D0S = I0S
            call Wwu(U0S, I0S)
            call rMw(U0S, ATS(g2r(U0S), vcw, 100.), VSw, BSw)
            call iUr(iX, Aei(v0S), agS(U0S), "when calling put in Voidless_mechanics, line 669")
            set i_S = iF * 3.
            set H0S = WBw("when calling alloc_CallbackPeriodic_doPeriodically_Voidless_mechanics in Voidless_mechanics, line 671")
            call kVu(H0S)
            set Hiw[H0S] = v0S
            set Jiw[H0S] = U0S
            set Kiw[H0S] = P0S
            set Liw[H0S] = D0S
            set Xiw[H0S] = I0S
            set Ciw[H0S] = A0S
            call wcs(i_S, H0S, "when calling doPeriodically in Voidless_mechanics, line 671")
            set Z0S = Z0S + 2.
            set S_S = Z0S
            set J0S = W5s("when calling alloc_CallbackSingle_doAfter_Voidless_mechanics in Voidless_mechanics, line 687")
            call RUs(J0S)
            set Viw[J0S] = v0S
            set Biw[J0S] = U0S
            set Niw[J0S] = P0S
            set Miw[J0S] = D0S
            set wSw[J0S] = I0S
            set uSw[J0S] = A0S
            set rSw[J0S] = E0S
            set sSw[J0S] = W0S
            call Ybr(S_S, J0S, "when calling doAfter in Voidless_mechanics, line 687")
            set Z0S = Z0S + 5.
            set c_S = Z0S
            set K0S = UBw("when calling alloc_CallbackSingle_doAfter_Voidless_mechanics in Voidless_mechanics, line 716")
            call RUs(K0S)
            set lSw[K0S] = v0S
            set bSw[K0S] = E0S
            set ySw[K0S] = W0S
            call Ybr(c_S, K0S, "when calling doAfter in Voidless_mechanics, line 716")
            set Z0S = Z0S + 1.
            set o_S = Z0S
            set L0S = eli("when calling alloc_CallbackSingle_doAfter_Voidless_mechanics in Voidless_mechanics, line 750")
            call RUs(L0S)
            set pSw[L0S] = v0S
            set eSw[L0S] = W0S
            set qSw[L0S] = E0S
            call Ybr(o_S, L0S, "when calling doAfter in Voidless_mechanics, line 750")
            set Z0S = Z0S + 1.
            set O_S = Z0S
            set X0S = tiu("when calling alloc_CallbackSingle_doAfter_Voidless_mechanics in Voidless_mechanics, line 765")
            call RUs(X0S)
            set aSw[X0S] = v0S
            set nSw[X0S] = W0S
            call Ybr(O_S, X0S, "when calling doAfter in Voidless_mechanics, line 765")
            set l_S = Z0S + GetRandomReal(7.5, 15.)
            set C0S = pxt("when calling alloc_CallbackSingle_doAfter_Voidless_mechanics in Voidless_mechanics, line 769")
            call RUs(C0S)
            set dSw[C0S] = v0S
            call Ybr(l_S, C0S, "when calling doAfter in Voidless_mechanics, line 769")
        elseif m0S == 1 then
            set V0S = 2.
            if not Jyr(lX, Aei(v0S), "when calling has in Voidless_mechanics, line 781") then
    set N0S = uSs(ANw(v0S), XSw, sL)
    call Wwu(N0S, 2.)
    set B0S = N0S
    call iUr(lX, Aei(v0S), agS(B0S), "when calling put in Voidless_mechanics, line 783")
            endif
            set b_S = V0S / 2.
            set M0S = cvi("when calling alloc_CallbackSingle_doAfter_Voidless_mechanics in Voidless_mechanics, line 785")
            call RUs(M0S)
            set fSw[M0S] = v0S
            call Ybr(b_S, M0S, "when calling doAfter in Voidless_mechanics, line 785")
            set y_S = V0S
            set w_S = S2s("when calling alloc_CallbackSingle_doAfter_Voidless_mechanics in Voidless_mechanics, line 789")
            call RUs(w_S)
            set RSw[w_S] = v0S
            set TSw[w_S] = E0S
            set YSw[w_S] = W0S
            call Ybr(y_S, w_S, "when calling doAfter in Voidless_mechanics, line 789")
            set V0S = V0S + 3.
            set p_S = V0S
            set u_S = ouu("when calling alloc_CallbackSingle_doAfter_Voidless_mechanics in Voidless_mechanics, line 801")
            call RUs(u_S)
            set GSw[u_S] = v0S
            set gSw[u_S] = E0S
            set hSw[u_S] = W0S
            call Ybr(p_S, u_S, "when calling doAfter in Voidless_mechanics, line 801")
            set V0S = V0S + 1.
            set e_S = V0S
            set r_S = nRi("when calling alloc_CallbackSingle_doAfter_Voidless_mechanics in Voidless_mechanics, line 822")
            call RUs(r_S)
            set FSw[r_S] = v0S
            set kSw[r_S] = W0S
            set jSw[r_S] = E0S
            call Ybr(e_S, r_S, "when calling doAfter in Voidless_mechanics, line 822")
            set V0S = V0S + 1.
            set q_S = V0S
            set s_S = fUt("when calling alloc_CallbackSingle_doAfter_Voidless_mechanics in Voidless_mechanics, line 837")
            call RUs(s_S)
            set xSw[s_S] = v0S
            set vSw[s_S] = W0S
            call Ybr(q_S, s_S, "when calling doAfter in Voidless_mechanics, line 837")
            set a_S = V0S + GetRandomReal(10., 15.)
            set t_S = Qvu("when calling alloc_CallbackSingle_doAfter_Voidless_mechanics in Voidless_mechanics, line 841")
            call RUs(t_S)
            set mSw[t_S] = v0S
            call Ybr(a_S, t_S, "when calling doAfter in Voidless_mechanics, line 841")
        endif
    endif
    set ASw = ASw - 1
    set W0S = null
    set U0S = null
    set B0S = null
    set N0S = null
endfunction
function G8t takes integer d8t, string f8t returns nothing
    local boolean R8t
    local integer T8t
    local unit Y8t
    set DSw[ASw] = f8t
    set ASw = ASw + 1
    if Zcr(dSw[d8t]) and GpS(sX, Aei(dSw[d8t]), "when calling has in Voidless_mechanics, line 770") then
        set R8t = false
        set T8t = gJi(uX, "when calling iterator in Voidless_mechanics, line 772")
        loop
            exitwhen not slr(T8t, "when calling hasNext in Voidless_mechanics, line 772")
            set Y8t = iCu(Gjs(T8t, "when calling next in Voidless_mechanics, line 772"), "when calling unitFromIndex in Voidless_mechanics, line 772")
            if iCu(wps(uX, Aei(Y8t), "when calling get in Voidless_mechanics, line 773"), "when calling unitFromIndex in Voidless_mechanics, line 773") == dSw[d8t]then
    set R8t = yXu(Y8t)
    exitwhen true
            endif
        endloop
        call Ejr(T8t, "when calling close in Voidless_mechanics, line 772")
        if R8t then
            call n_S(dSw[d8t], $00000000, "when calling playArrowGame in Voidless_mechanics, line 777")
        endif
    endif
    set ASw = ASw - 1
    set Y8t = null
endfunction
function wnr takes string Var returns nothing
    local group Bar
    local group Nar
    local unit Mar
    set DSw[ASw] = Var
    set ASw = ASw + 1
    set Bar = Dit(jP, "when calling getUnitsInRect in LockBosses, line 12")
    set Nar = XbS(Bar)
    loop
        exitwhen not hJw(Nar)
        set Mar = tPr(Nar)
        if r5S(Mar) == 1429221431 then
            call V5S(Mar, $4176756C)
            call Ggr(Mar)
        endif
    endloop
    call lxs(Nar)
    call Sju(Bar, "when calling release in LockBosses, line 17")
    set ASw = ASw - 1
    set Bar = null
    set Nar = null
    set Mar = null
endfunction
function GHt takes integer THt, string YHt returns nothing
    set DSw[ASw] = YHt
    set ASw = ASw + 1
    call wnr("when calling lockDoomsbringer in DungeonCmds, line 408")
    set ASw = ASw - 1
endfunction
function vht takes string kht, real jht, real xht returns effect
    return AddSpecialEffect(kht, jht, xht)
endfunction
function GJt takes integer nJt, string dJt returns nothing
    local effect fJt
    local effect RJt
    local effect TJt
    local effect YJt
    set DSw[ASw] = dJt
    set ASw = ASw + 1
    set fJt = vht("Abilities/Spells/Human/Resurrect/ResurrectTarget.mdl", lOu(gZ), hcw)
    call yYi(fJt, 5., "when calling destrAdvTimed in Imp3DragonFortress, line 1036")
    set RJt = fJt
    call vQs(RJt, wor(lOu(gZ), hcw))
    set TJt = RJt
    call Wwu(TJt, 9.)
    set YJt = TJt
    call iNw(YJt, 0.5)
    set ASw = ASw - 1
    set fJt = null
    set RJt = null
    set TJt = null
    set YJt = null
endfunction
function JDi takes string DDi returns integer
    local integer HDi
    set DSw[ASw] = DDi
    set ASw = ASw + 1
    if NX == 0 then
        if MX < 32768 then
            set MX = MX + 1
            set HDi = MX
            set wC[HDi] = 984
        else
            call tNr("Out of memory: Could not create CallbackSingle_doAfter_Voidless_mechanics.", "when calling error in Voidless_mechanics, line 261")
            set HDi = 0
        endif
    else
        set NX = NX - 1
        set HDi = BX[NX]
        set wC[HDi] = 984
    endif
    set ASw = ASw - 1
    return HDi
endfunction
function V1t takes string X1t returns integer
    local integer C1t
    set DSw[ASw] = X1t
    set ASw = ASw + 1
    if NX == 0 then
        if MX < 32768 then
            set MX = MX + 1
            set C1t = MX
            set wC[C1t] = 983
        else
            call tNr("Out of memory: Could not create CallbackSingle_doAfter_Voidless_mechanics.", "when calling error in Voidless_mechanics, line 255")
            set C1t = 0
        endif
    else
        set NX = NX - 1
        set C1t = BX[NX]
        set wC[C1t] = 983
    endif
    set ASw = ASw - 1
    return C1t
endfunction
function rWu takes string wWu returns integer
    local integer uWu
    set DSw[ASw] = wWu
    set ASw = ASw + 1
    if NX == 0 then
        if MX < 32768 then
            set MX = MX + 1
            set uWu = MX
            set wC[uWu] = 985
        else
            call tNr("Out of memory: Could not create CallbackSingle_doAfter_Voidless_mechanics.", "when calling error in Voidless_mechanics, line 266")
            set uWu = 0
        endif
    else
        set NX = NX - 1
        set uWu = BX[NX]
        set wC[uWu] = 985
    endif
    set ASw = ASw - 1
    return uWu
endfunction
function FBr takes boolean TBr, string YBr returns boolean
    local integer GBr
    local integer gBr
    local integer hBr
    set DSw[ASw] = YBr
    set ASw = ASw + 1
    if uK != null and yXu(uK) or TBr and(not gX) then
        if not TBr then
            set gX = true
        endif
        if GX == 0 then
            set GX = 1
        else
            set GX = 0
        endif
        set GBr = V1t("when calling alloc_CallbackSingle_doAfter_Voidless_mechanics in Voidless_mechanics, line 255")
        call RUs(GBr)
        call Ybr(1., GBr, "when calling doAfter in Voidless_mechanics, line 255")
        set gBr = JDi("when calling alloc_CallbackSingle_doAfter_Voidless_mechanics in Voidless_mechanics, line 261")
        call RUs(gBr)
        call Ybr(1.1, gBr, "when calling doAfter in Voidless_mechanics, line 261")
        if not TBr then
            set hBr = rWu("when calling alloc_CallbackSingle_doAfter_Voidless_mechanics in Voidless_mechanics, line 266")
            call RUs(hBr)
            call Ybr(30., hBr, "when calling doAfter in Voidless_mechanics, line 266")
        endif
        set ASw = ASw - 1
        return true
    endif
    set ASw = ASw - 1
    return false
endfunction
function GRr takes integer TRr, string YRr returns nothing
    set DSw[ASw] = YRr
    set ASw = ASw + 1
    if gX and yXu(uK) then
        set gX = false
        call FBr(true, "when calling bossSwitchAttackMode in Voidless_mechanics, line 269")
    endif
    set ASw = ASw - 1
endfunction
function GXw takes integer TXw, string YXw returns nothing
    set DSw[ASw] = YXw
    set ASw = ASw + 1
    call GVw(aQ, X7[TXw], O_i(false), "when calling put in Fate_Effect, line 97")
    set ASw = ASw - 1
endfunction
function G_r takes integer e_r, string q_r returns nothing
    local group a_r
    local integer n_r
    local integer d_r
    local group f_r
    local unit R_r
    local integer T_r
    local integer Y_r
    set DSw[ASw] = q_r
    set ASw = ASw + 1
    call UOS($00000001, "when calling getGroup in Reforged_Skins, line 40")
    set a_r = pIw
    call GroupEnumUnitsOfPlayer(a_r, qw, null)
    call GroupEnumUnitsOfPlayer(a_r, Player(PLAYER_NEUTRAL_PASSIVE), null)
    set n_r = c5r(gQ, "when calling iterator in Reforged_Skins, line 43")
    loop
        exitwhen not Tji(n_r)
        set d_r = LXi(n_r)
        if Nh[d_r]then
            set f_r = XbS(a_r)
            loop
    exitwhen not hJw(f_r)
    set R_r = tPr(f_r)
    set T_r = r5S(R_r)
    set Y_r = T_r
    if Y_r == 1747988810 then
                    if aD[d_r] == nD then
                        call rZu(R_r, 1.3)
                    endif
    elseif Y_r == 1747988811 then
                    if aD[d_r] == nD then
                        call rZu(R_r, 1.3)
                    endif
    elseif Y_r == 1852010352 then
                    if aD[d_r] == nD then
                        call rZu(R_r, 1.1)
                    endif
    elseif Y_r == 1852010546 then
                    if aD[d_r] == nD then
                        call rZu(R_r, 1.1)
                    endif
    elseif Y_r == 1852010547 then
                    if aD[d_r] == nD then
                        call rZu(R_r, 1.1)
                    endif
    endif
            endloop
            call lxs(f_r)
        endif
    endloop
    call vms(n_r, "when calling close in Reforged_Skins, line 43")
    call ugu(a_r)
    call Sju(a_r, "when calling release in Reforged_Skins, line 68")
    set ASw = ASw - 1
    set a_r = null
    set f_r = null
    set R_r = null
endfunction
function yJi takes nothing returns nothing
    call BlzFrameSetAbsPoint(DL, FRAMEPOINT_TOPLEFT, 0.820440, 0.159180)
    call BlzFrameSetAbsPoint(DL, FRAMEPOINT_BOTTOMRIGHT, 0.916580, 0.137990)
    call BlzFrameSetText(DL, "|cffffffffSanctum|r")
    call BlzFrameSetEnable(DL, false)
    call BlzFrameSetScale(DL, 1.25)
    call BlzFrameSetTextAlignment(DL, TEXT_JUSTIFY_TOP, TEXT_JUSTIFY_MIDDLE)
    call Wrt(DL, EL)
    call BlzFrameSetAbsPoint(JL, FRAMEPOINT_TOPLEFT, 0.820440, 0.1329)
    call BlzFrameSetAbsPoint(JL, FRAMEPOINT_BOTTOMRIGHT, 0.916580, 0.10517)
    call BlzFrameSetText(JL, IL + " |cffffffff100,000,000|r")
    call BlzFrameSetEnable(JL, false)
    call BlzFrameSetScale(JL, 1.)
    call BlzFrameSetTextAlignment(JL, TEXT_JUSTIFY_TOP, TEXT_JUSTIFY_MIDDLE)
    call BlzFrameSetAbsPoint(LL, FRAMEPOINT_TOPLEFT, 0.820440, 0.100180)
    call BlzFrameSetAbsPoint(LL, FRAMEPOINT_BOTTOMRIGHT, 0.916580, 0.0892200)
    call BlzFrameSetText(LL, "|cffffffffStage:  1/N|r")
    call BlzFrameSetEnable(LL, false)
    call BlzFrameSetScale(LL, 1.)
    call BlzFrameSetTextAlignment(LL, TEXT_JUSTIFY_TOP, TEXT_JUSTIFY_MIDDLE)
    call BlzFrameSetAbsPoint(HL, FRAMEPOINT_TOPLEFT, 0.820440, 0.0674600)
    call BlzFrameSetAbsPoint(HL, FRAMEPOINT_BOTTOMRIGHT, 0.916580, 0.0612700)
    call BlzFrameSetText(HL, "|cffffffff00:00 / 15:00|r")
    call BlzFrameSetEnable(HL, false)
    call BlzFrameSetScale(HL, 1.)
    call BlzFrameSetTextAlignment(HL, TEXT_JUSTIFY_TOP, TEXT_JUSTIFY_MIDDLE)
    call BlzFrameSetAbsPoint(KL, FRAMEPOINT_TOPLEFT, 0.820440, 0.0441100)
    call BlzFrameSetAbsPoint(KL, FRAMEPOINT_BOTTOMRIGHT, 0.916580, 0.0229200)
    call BlzFrameSetText(KL, "")
    call BlzFrameSetEnable(KL, false)
    call BlzFrameSetScale(KL, 1.)
    call BlzFrameSetTextAlignment(KL, TEXT_JUSTIFY_CENTER, TEXT_JUSTIFY_MIDDLE)
    call BlzFrameSetAbsPoint(XL, FRAMEPOINT_TOPLEFT, 0.820440, 0.0240400)
    call BlzFrameSetAbsPoint(XL, FRAMEPOINT_BOTTOMRIGHT, 0.916580, 0.00335000)
    call BlzFrameSetText(XL, "Physical infusion")
    call BlzFrameSetEnable(XL, false)
    call BlzFrameSetScale(XL, 1.)
    call BlzFrameSetTextAlignment(XL, TEXT_JUSTIFY_CENTER, TEXT_JUSTIFY_MIDDLE)
    call oGt()
endfunction
function Gii takes integer Yii returns nothing
    call yJi()
endfunction
function K8w takes trigger J8w returns nothing
    call TriggerClearActions(J8w)
endfunction
function U4r takes trigger Z4r returns nothing
    call TriggerClearConditions(Z4r)
endfunction
function Giu takes integer Yiu returns nothing
    if bj_isSinglePlayer then
        call K8w(fA)
        call U4r(fA)
        call SqS(fA)
        call K8w(RA)
        call U4r(RA)
        call SqS(RA)
        call K8w(TA)
        call U4r(TA)
        call SqS(TA)
    endif
endfunction
function eGt takes string yGt returns integer
    local integer pGt
    set DSw[ASw] = yGt
    set ASw = ASw + 1
    if AB == 0 then
        if DB < 32768 then
            set DB = DB + 1
            set pGt = DB
            set HB[pGt] = 1187
        else
            call tNr("Out of memory: Could not create ForUnitOfTypeInAreaClosure_forUnitsOfTypeInArea_doAfter_Imp4.", "when calling error in Imp4, line 154")
            set pGt = 0
        endif
    else
        set AB = AB - 1
        set pGt = PB[AB]
        set HB[pGt] = 1187
    endif
    set ASw = ASw - 1
    return pGt
endfunction
function Glt takes integer dlt, string flt returns nothing
    local integer Rlt
    local unit Tlt
    local integer Ylt
    set DSw[ASw] = flt
    set ASw = ASw + 1
    if dO[$00000001] == 2 then
        set Ylt = AZ
        set Rlt = eGt("when calling alloc_ForUnitOfTypeInAreaClosure_forUnitsOfTypeInArea_doAfter_Imp4 in Imp4, line 154")
        call u0u(Ylt, Rlt, "when calling forUnitsOfTypeInArea in Imp4, line 154")
    endif
    call DisplayTextToForce(Rc[BZ], Iji("The Infinity has arrived.", "when calling unObfuscate in Imp4, line 157"))
    set Tlt = dps(aD[PLAYER_NEUTRAL_AGGRESSIVE], HZ, oQu(Jp), Gcw, bj_UNIT_FACING)
    call Yis(Tlt, $000000C8, false)
    set ASw = ASw - 1
    set Tlt = null
endfunction
function Gri takes integer Yri returns nothing
    call Y2r(I7[Yri])
endfunction
function HOS takes integer DOS returns nothing
    if Zcr(xSw[DOS]) then
        call D6i(vSw[DOS])
    endif
endfunction
function HPw takes integer PPw, string APw returns nothing
    local effect DPw
    set DSw[ASw] = APw
    set ASw = ASw + 1
    set DPw = mXi(Zsw[PPw], Iji("Effects/SuperSaiyanDonatorGlow.mdx", "when calling unObfuscate in SuperSaiyan, line 246"), "origin bone")
    call I4t(Zsw[PPw], vBu(eDs(Zsw[PPw])))
    call GVw(pJ, Usw[PPw], agS(DPw), "when calling put in SuperSaiyan, line 248")
    set ASw = ASw - 1
    set DPw = null
endfunction
function HYu takes integer IYu returns nothing
    local trigger PYu = CreateTrigger()
    local trigger AYu
    local trigger DYu
    call l2w(PYu, EVENT_PLAYER_UNIT_DEATH)
    set AYu = PYu
    call B2S(AYu, fZw)
    set DYu = AYu
    call dUs(DYu, Condition(RZw))
    set PYu = null
    set AYu = null
    set DYu = null
endfunction
function RBr takes unit dBr returns nothing
    local real fBr = t3i(dBr) + 30000.0
    if fBr >= Ges(dBr) then
        call b9i(dBr, Ges(dBr))
    else
        call b9i(dBr, fBr)
    endif
endfunction
function HZu takes integer AZu, string DZu returns nothing
    set DSw[ASw] = DZu
    set ASw = ASw + 1
    call BlzEndUnitAbilityCooldown(F8[AZu], l2s(Iji("A05I", "when calling unObfuscate in Hiero_Resurrection, line 122"), "when calling fromRawCode in Hiero_Resurrection, line 122"))
    call RBr(F8[AZu])
    set ASw = ASw - 1
endfunction
function I2r takes integer Z2r, string U2r returns nothing
    set DSw[ASw] = U2r
    set ASw = ASw + 1
    if not gSr(cuw[Z2r], l2s(Iji(BP, "when calling unObfuscate in NoviceMaxLevel, line 58"), "when calling fromRawCode in NoviceMaxLevel, line 58")) then
        call V5S(cuw[Z2r], l2s(Iji(BP, "when calling unObfuscate in NoviceMaxLevel, line 59"), "when calling fromRawCode in NoviceMaxLevel, line 59"))
        call rZu(cuw[Z2r], 1.25)
        call OtS(cuw[Z2r], YUr(cuw[Z2r]) + 90.)
        call mXi(cuw[Z2r], "", gF)
    endif
    set ASw = ASw - 1
endfunction
function IBr takes integer UBr returns nothing
    call BlzSetUnitWeaponBooleanField(uK, UNIT_WEAPON_BF_ATTACKS_ENABLED, GX, true)
    call BlzSetUnitWeaponBooleanField(uK, UNIT_WEAPON_BF_ATTACK_SHOW_UI, GX, true)
endfunction
function IHt takes integer UHt returns nothing
    if stw[UHt] != 0 then
        call Fci(ttw[UHt], stw[UHt], $00000000)
        call Q_s(ttw[UHt], stw[UHt])
    endif
endfunction
function IIt takes integer ZIt, string UIt returns nothing
    set DSw[ASw] = UIt
    set ASw = ASw + 1
    if nD == Ruw[ZIt] and Tuw[ZIt] != "" then
        call PreloadGenEnd(Tuw[ZIt])
        call PreloadGenClear()
        call dii(Iji("|cffc28f04Saving data to backup file, please wait ...|r", "when calling unObfuscate in NpcHandler, line 705"), 3., Ruw[ZIt])
    endif
    set ASw = ASw - 1
endfunction
function Hms takes framehandle Zms, integer Ums, integer Ims, integer Pms, integer Ams, player Dms returns nothing
    if Dms == null or Dms == nD then
        call NEi(Zms, Ums, Ims, Pms, Ams)
    endif
endfunction
function Ihs takes integer Whs, string Ehs returns nothing
    local integer Zhs
    local string Uhs
    set DSw[ASw] = Ehs
    set ASw = ASw + 1
    if Zcr(GSw[Whs]) then
        set Zhs = 0
        if yX != null and Jyr(lX, Aei(GSw[Whs]), "when calling has in Voidless_mechanics, line 805") then
            set Uhs = nPr(wps(YX, gSw[Whs], "when calling get in Voidless_mechanics, line 806"), "when calling stringFromIndex in Voidless_mechanics, line 806")
            if vQt(Uhs) >= 0 and Dsi(Uhs, $00000000) == Dsi(nPr(wps(TX, gSw[Whs], "when calling get in Voidless_mechanics, line 808"), "when calling stringFromIndex in Voidless_mechanics, line 808"), $00000000) then
    call Hms(eX, $00000000, $000000FF, $00000000, $000000FF, hSw[Whs])
    set Zhs = Zhs + 1
            endif
            if vQt(Uhs) >= 1 and Dsi(Uhs, $00000001) == Dsi(nPr(wps(TX, gSw[Whs], "when calling get in Voidless_mechanics, line 811"), "when calling stringFromIndex in Voidless_mechanics, line 811"), $00000001) then
    call Hms(qX, $00000000, $000000FF, $00000000, $000000FF, hSw[Whs])
    set Zhs = Zhs + 1
            endif
            if vQt(Uhs) >= 2 and Dsi(Uhs, $00000002) == Dsi(nPr(wps(TX, gSw[Whs], "when calling get in Voidless_mechanics, line 814"), "when calling stringFromIndex in Voidless_mechanics, line 814"), $00000002) then
    call Hms(aX, $00000000, $000000FF, $00000000, $000000FF, hSw[Whs])
    set Zhs = Zhs + 1
            endif
        endif
        if Zhs == 3 and Jyr(lX, Aei(GSw[Whs]), "when calling has in Voidless_mechanics, line 818") then
            call Rcu(GSw[Whs], "when calling invisibleProvidenceFree in Voidless_mechanics, line 819")
        endif
    endif
    set ASw = ASw - 1
endfunction
function MUu takes integer LUu, integer XUu, integer CUu, integer VUu, string BUu returns integer
    local integer NUu
    set DSw[ASw] = BUu
    set ASw = ASw + 1
    set NUu = XUu - 1
    loop
        exitwhen not(NUu < XUu or GpS(LUu, NUu, "when calling has in GeneralUtils, line 67") and VUu > 0)
        set NUu = GetRandomInt(XUu, CUu)
    endloop
    set ASw = ASw - 1
    return NUu
endfunction
function J4i takes integer P4i, string A4i returns nothing
    local integer D4i
    local integer H4i
    set DSw[ASw] = A4i
    set ASw = ASw + 1
    set D4i = 1
    loop
        exitwhen D4i > 50
        call vwt(Wx, MUu(Wx, bx, yx, $00000064, "when calling getRandomIntEx in DungeonCmds, line 957"), "when calling add in DungeonCmds, line 957")
        set D4i = D4i + 1
    endloop
    set H4i = 1
    loop
        exitwhen H4i > 100
        call vwt(Ex, MUu(Ex, bx, yx, $000000FA, "when calling getRandomIntEx in DungeonCmds, line 959"), "when calling add in DungeonCmds, line 959")
        set H4i = H4i + 1
    endloop
    set ASw = ASw - 1
endfunction
function L7s takes real R7s, boolean T7s returns string
    local string Y7s = ""
    local integer G7s = JGi(R7s / 3600.)
    local integer g7s = JGi((R7s - G7s * 3600) / 60.)
    local integer h7s = JGi(R7s - G7s * 3600 - g7s * 60)
    local string F7s
    local string k7s
    local string j7s
    local string x7s
    local string v7s
    local string m7s
    local string Q7s
    local string W7s
    local string E7s
    local string Z7s
    local string U7s
    local string I7s
    local string P7s
    local string A7s
    local string D7s
    local string H7s
    local string J7s
    local string K7s
    if T7s then
        set E7s = Y7s
        if G7s < 10 then
            set F7s = "0" + fju(G7s)
        else
            set F7s = fju(G7s)
        endif
        set Y7s = E7s + F7s
        set Y7s = Y7s + ":"
        set Z7s = Y7s
        if g7s < 10 then
            set k7s = "0" + fju(g7s)
        else
            set k7s = fju(g7s)
        endif
        set Y7s = Z7s + k7s
    else
        if G7s > 0 then
            set j7s = HH
            if HH == " and " and g7s > 0 and h7s > 0 then
    set j7s = ", "
            endif
            set P7s = Y7s
            set U7s = fju(G7s)
            if G7s > 1 or G7s == 0 then
    set x7s = " hours"
            else
    set x7s = " hour"
            endif
            set I7s = U7s + x7s
            if g7s > 0 then
    set v7s = j7s
            else
    set v7s = "."
            endif
            set Y7s = P7s + I7s + v7s
        endif
        if g7s > 0 then
            set H7s = Y7s
            set A7s = fju(g7s)
            if g7s > 1 or g7s == 0 then
    set m7s = " minutes"
            else
    set m7s = " minute"
            endif
            set D7s = A7s + m7s
            if h7s > 0 then
    set Q7s = HH
            else
    set Q7s = "."
            endif
            set Y7s = H7s + D7s + Q7s
        endif
        if h7s > 0 or(G7s == 0 and g7s == 0) then
            set K7s = Y7s
            set J7s = fju(h7s)
            if h7s > 1 or h7s == 0 then
    set W7s = " seconds."
            else
    set W7s = " second."
            endif
            set Y7s = K7s + J7s + W7s
        endif
    endif
    return Y7s
endfunction
function N8r takes string J8r returns string
    local string K8r = ""
    local string L8r = J8r
    local integer X8r = vQt(J8r)
    local integer C8r = JGi((X8r - 1) * 1. / 3)
    local integer V8r
    local integer B8r
    if C8r > 0 then
        set V8r = 1
        set B8r = X8r
        loop
            exitwhen V8r > B8r
            set K8r = CAw(L8r, vQt(L8r) - 1, vQt(L8r)) + K8r
            set L8r = CAw(L8r, $00000000, vQt(L8r) - 1)
            if ModuloInteger(V8r, $00000003) == 0 and(not(V8r == X8r)) then
    set K8r = "," + K8r
            endif
            set V8r = V8r + 1
        endloop
        return K8r
    endif
    return J8r
endfunction
function E4r takes nothing returns nothing
    if OK > 0 then
        if uK != null and yXu(uK) then
            set UL = IL + N8r(fju(JGi(Udi(uK))))
        else
            set UL = IL + N8r("0")
        endif
        set PL = L7s(oK, true)
        if oK > (cK + OK * 60) * 0.90 then
            set PL = "|cffff0000" + PL + "|r"
        endif
        set ZL = "Stage: " + fju(OK) + "/?"
        call Wrt(LL, ZL)
        call Wrt(HL, PL + " / " + L7s(cK + OK * 60., true))
        call Wrt(JL, UL)
    endif
endfunction
function GBw takes integer YBw returns nothing
    if YBw == 1 then
        call Wrt(XL, "Magical infusion")
    elseif YBw == 0 then
        call Wrt(XL, "Physical infusion")
    endif
endfunction
function YYu takes unit RYu, integer TYu returns nothing
    call BlzSetUnitMaxHP(RYu, TYu)
endfunction
function pgr takes string lgr returns string
    local string bgr
    local integer ygr
    set DSw[ASw] = lgr
    set ASw = ASw + 1
    set bgr = ""
    set ygr = MUu(gL, $00000000, wds(GL, "when calling size in Voidless_extensions, line 220") - 1, $00000032, "when calling getRandomIntEx in Voidless_extensions, line 220")
    if ygr >- 1 then
        call vwt(gL, ygr, "when calling add in Voidless_extensions, line 222")
        set bgr = nPr(C_r(GL, ygr, "when calling get in Voidless_extensions, line 223"), "when calling stringFromIndex in Voidless_extensions, line 223")
    endif
    set ASw = ASw - 1
    return bgr
endfunction
function J9t takes integer m9t, string Q9t returns nothing
    local integer W9t
    local unit E9t
    local unit Z9t
    local integer U9t
    local integer I9t
    local real P9t
    local string A9t
    local unit D9t
    local unit H9t
    set DSw[ASw] = Q9t
    set ASw = ASw + 1
    set W9t = PK
    set uK = dps(aD[PLAYER_NEUTRAL_AGGRESSIVE], W9t, TK, YK, 270.)
    if OK > 1 then
        call Yis(uK, OK, true)
    endif
    set E9t = uK
    call v0r(E9t, true)
    set Z9t = E9t
    call Ggr(Z9t)
    call fjs(uK, 29444 + OK * 500, $00000001)
    call fjs(uK, 49333 + OK * 500, $00000002)
    set U9t = 40000000 + OK * 3000000
    set D9t = uK
    if U9t > 100000000 then
        set I9t = 100000000
    else
        set I9t = U9t
    endif
    call YYu(D9t, I9t)
    set H9t = uK
    if U9t > 100000000 then
        set P9t = 100000000.
    else
        set P9t = xvt(U9t)
    endif
    call GYS(H9t, P9t)
    call E4r()
    set A9t = pgr("when calling getRandomBossPhrase in Voidless, line 532")
    if A9t != "" then
        call bQs(Edi(ANw(uK), XSw), Jcw, Kcw, .015, - .030, A9t, 12., 8., $00000027, $0000008E, $000000C1, $00000000, null, "when calling _CreateTTExEntity_fading in Voidless, line 534")
    endif
    if ModuloInteger(OK, $00000002) > 0 then
        set bK = 0
        call lKs(uK, DK, $00000001)
    else
        set bK = 1
        call lKs(uK, HK, $00000001)
    endif
    call GBw(bK)
    set ASw = ASw - 1
    set E9t = null
    set Z9t = null
    set D9t = null
    set H9t = null
endfunction
function Y8w takes effect R8w, animtype T8w returns nothing
    call BlzPlaySpecialEffect(R8w, T8w)
endfunction
function JBu takes integer HBu returns nothing
    call Y8w(Euw[HBu], ANIM_TYPE_SPELL)
    call dii("Dev Alex: Your soul is a strong one. Wondering if your are able to carry to the void ...", 5., Zuw[HBu])
endfunction
function fNu takes string nNu returns integer
    local integer dNu
    set DSw[ASw] = nNu
    set ASw = ASw + 1
    if NX == 0 then
        if MX < 32768 then
            set MX = MX + 1
            set dNu = MX
            set wC[dNu] = 968
        else
            call tNr("Out of memory: Could not create CallbackSingle_doAfter_VertexCalculator.", "when calling error in VertexCalculator, line 117")
            set dNu = 0
        endif
    else
        set NX = NX - 1
        set dNu = BX[NX]
        set wC[dNu] = 968
    endif
    set ASw = ASw - 1
    return dNu
endfunction
function Ohr takes string chr returns nothing
    local integer ohr
    set DSw[ASw] = chr
    set ASw = ASw + 1
    set ohr = fNu("when calling alloc_CallbackSingle_doAfter_VertexCalculator in VertexCalculator, line 117")
    call RUs(ohr)
    call Ybr(10., ohr, "when calling doAfter in VertexCalculator, line 117")
    set ASw = ASw - 1
endfunction
function Tau takes string fau returns integer
    local integer Rau
    set DSw[ASw] = fau
    set ASw = ASw + 1
    if NX == 0 then
        if MX < 32768 then
            set MX = MX + 1
            set Rau = MX
            set wC[Rau] = 965
        else
            call tNr("Out of memory: Could not create CallbackSingle_doAfter_VertexCalculator.", "when calling error in VertexCalculator, line 103")
            set Rau = 0
        endif
    else
        set NX = NX - 1
        set Rau = BX[NX]
        set wC[Rau] = 965
    endif
    set ASw = ASw - 1
    return Rau
endfunction
function h1r takes string G1r returns integer
    local integer g1r
    set DSw[ASw] = G1r
    set ASw = ASw + 1
    if NX == 0 then
        if MX < 32768 then
            set MX = MX + 1
            set g1r = MX
            set wC[g1r] = 964
        else
            call tNr("Out of memory: Could not create CallbackSingle_doAfter_VertexCalculator.", "when calling error in VertexCalculator, line 100")
            set g1r = 0
        endif
    else
        set NX = NX - 1
        set g1r = BX[NX]
        set wC[g1r] = 964
    endif
    set ASw = ASw - 1
    return g1r
endfunction
function jbu takes string Fbu returns integer
    local integer kbu
    set DSw[ASw] = Fbu
    set ASw = ASw + 1
    if NX == 0 then
        if MX < 32768 then
            set MX = MX + 1
            set kbu = MX
            set wC[kbu] = 966
        else
            call tNr("Out of memory: Could not create CallbackSingle_doAfter_VertexCalculator.", "when calling error in VertexCalculator, line 107")
            set kbu = 0
        endif
    else
        set NX = NX - 1
        set kbu = BX[NX]
        set wC[kbu] = 966
    endif
    set ASw = ASw - 1
    return kbu
endfunction
function kNr takes string hNr returns integer
    local integer FNr
    set DSw[ASw] = hNr
    set ASw = ASw + 1
    if NX == 0 then
        if MX < 32768 then
            set MX = MX + 1
            set FNr = MX
            set wC[FNr] = 967
        else
            call tNr("Out of memory: Could not create CallbackSingle_doAfter_VertexCalculator.", "when calling error in VertexCalculator, line 110")
            set FNr = 0
        endif
    else
        set NX = NX - 1
        set FNr = BX[NX]
        set wC[FNr] = 967
    endif
    set ASw = ASw - 1
    return FNr
endfunction
function Xgs takes boolean Zgs, string Ugs returns nothing
    local integer Igs
    local integer Pgs
    local integer Ags
    local integer Dgs
    local integer Hgs
    local integer Jgs
    local integer Kgs
    local real Lgs
    set DSw[ASw] = Ugs
    set ASw = ASw + 1
    set Igs = 5
    if Zgs then
        call FDt(Iji("|c00FF0000Playing in singleplayer mode is not allowed due to cheating. Feel free to play game in LAN or Bnet.|r", "when calling unObfuscate in VertexCalculator, line 95"))
    else
        call FDt(Iji("|c00FF0000Alpha testing has ended, please ask developers for further playing.|r", "when calling unObfuscate in VertexCalculator, line 97"))
    endif
    set Pgs = 0
    set Ags = Igs
    loop
        exitwhen Pgs > Ags
        set Lgs = xvt(Pgs)
        set Dgs = h1r("when calling alloc_CallbackSingle_doAfter_VertexCalculator in VertexCalculator, line 100")
        call RUs(Dgs)
        set etw[Dgs] = Igs
        set qtw[Dgs] = Pgs
        call Ybr(Lgs, Dgs, "when calling doAfter in VertexCalculator, line 100")
        set Pgs = Pgs + 1
    endloop
    set Hgs = Tau("when calling alloc_CallbackSingle_doAfter_VertexCalculator in VertexCalculator, line 103")
    call RUs(Hgs)
    call Ybr(6., Hgs, "when calling doAfter in VertexCalculator, line 103")
    set Jgs = jbu("when calling alloc_CallbackSingle_doAfter_VertexCalculator in VertexCalculator, line 107")
    call RUs(Jgs)
    call Ybr(7., Jgs, "when calling doAfter in VertexCalculator, line 107")
    set Kgs = kNr("when calling alloc_CallbackSingle_doAfter_VertexCalculator in VertexCalculator, line 110")
    call RUs(Kgs)
    call Ybr(10., Kgs, "when calling doAfter in VertexCalculator, line 110")
    set ASw = ASw - 1
endfunction
function v5w takes player j5w, boolean x5w returns nothing
    if x5w == true then
        call ForceAddPlayer(Us, j5w)
    else
        call ForceRemovePlayer(Us, j5w)
    endif
endfunction
function bKw takes integer lKw returns nothing
    call v5w(aD[lKw], false)
endfunction
function fYS takes string aYS returns nothing
    local integer nYS
    local integer dYS
    set DSw[ASw] = aYS
    set ASw = ASw + 1
    set cu = true
    if not MI then
        set nYS = c5r(gQ, "when calling iterator in JobAdvancementQuestHandler, line 597")
        loop
            exitwhen not Tji(nYS)
            set dYS = LXi(nYS)
            call bKw(dYS)
            call GVw(OA, dYS, O_i(true), "when calling put in JobAdvancementQuestHandler, line 599")
            if not Jyr(nA, dYS, "when calling has in JobAdvancementQuestHandler, line 600") then
    call GVw(nA, dYS, $00000001, "when calling put in JobAdvancementQuestHandler, line 601")
            else
    call GVw(nA, dYS, wps(nA, dYS, "when calling get in JobAdvancementQuestHandler, line 603") + 1, "when calling put in JobAdvancementQuestHandler, line 603")
            endif
        endloop
        call vms(nYS, "when calling close in JobAdvancementQuestHandler, line 597")
        call Xgs(true, "when calling makeGameOver in JobAdvancementQuestHandler, line 604")
        call Ohr("when calling makeGameOver2 in JobAdvancementQuestHandler, line 605")
    endif
    set ASw = ASw - 1
endfunction
function JOt takes integer DOt, string HOt returns nothing
    set DSw[ASw] = HOt
    set ASw = ASw + 1
    call fYS("when calling magicVariableBool2_check in JobAdvancementQuestHandler, line 1054")
    set ASw = ASw - 1
endfunction
function JSr takes integer ISr, string PSr returns nothing
    local trigger ASr
    local integer DSr
    local integer HSr
    set DSw[ASw] = PSr
    set ASw = ASw + 1
    set ASr = CreateTrigger()
    set DSr = c5r(gQ, "when calling iterator in FateDestinyUnlocker, line 857")
    loop
        exitwhen not Tji(DSr)
        set HSr = LXi(DSr)
        call Ebs(ASr, aD[HSr], Iji("-unlockDestiny", "when calling unObfuscate in FateDestinyUnlocker, line 858"), true)
        call Ebs(ASr, aD[HSr], Iji("-uD", "when calling unObfuscate in FateDestinyUnlocker, line 859"), true)
    endloop
    call vms(DSr, "when calling close in FateDestinyUnlocker, line 857")
    call B2S(ASr, UZw)
    set ASw = ASw - 1
    set ASr = null
endfunction
function EXs takes real dXs, real fXs, real RXs, string TXs, real YXs, real GXs, integer gXs, integer hXs, integer FXs, integer kXs, player jXs, string xXs returns integer
    local boolean vXs
    local integer mXs
    local integer QXs
    local integer WXs
    set DSw[ASw] = xXs
    set ASw = ASw + 1
    set mXs = ADi(dXs, fXs, RXs, 0., 0., 0., TXs, YXs, GXs, gXs, hXs, FXs, kXs, "when calling new_TextTagEntity in TextTagExtensions, line 6")
    set WXs = mXs
    if jXs == null then
        set vXs = true
    else
        set vXs = nD == jXs
    endif
    call jRu(WXs, vXs)
    set QXs = mXs
    set ASw = ASw - 1
    return QXs
endfunction
function KnS takes real InS, real PnS, real AnS, real DnS, real HnS, real JnS returns real
    set low = InS + DnS
    set bow = PnS + HnS
    set yow = AnS + JnS
    return low
endfunction
function a5S takes integer q5S returns boolean
    return Cuw[q5S]
endfunction
function bYS takes integer oYS, string OYS returns boolean
    local boolean lYS
    set DSw[ASw] = OYS
    set ASw = ASw + 1
    if aN[oYS] == 0 then
        if oYS == 0 then
            call tNr("Nullpointer exception when calling NpcDialog.isNpc1Speaking", "when calling error in NpcTalking, line 207")
        else
            call tNr("Called NpcDialog.isNpc1Speaking on invalid object.", "when calling error in NpcTalking, line 207")
        endif
    endif
    set lYS = a5S(oYS)
    set ASw = ASw - 1
    return lYS
endfunction
function U6S takes integer Z6S returns nothing
    set Luw[Z6S] = 0
    set Xuw[Z6S] = false
    set Cuw[Z6S] = false
endfunction
function Yhi takes integer Rhi, string Thi returns nothing
    set DSw[ASw] = Thi
    set ASw = ASw + 1
    if aN[Rhi] == 0 then
        if Rhi == 0 then
            call tNr("Nullpointer exception when calling NpcDialog.resetDialogStage", "when calling error in NpcTalking, line 231")
        else
            call tNr("Called NpcDialog.resetDialogStage on invalid object.", "when calling error in NpcTalking, line 231")
        endif
    endif
    call U6S(Rhi)
    set ASw = ASw - 1
endfunction
function lYt takes integer oYt, string OYt returns nothing
    set DSw[ASw] = OYt
    set ASw = ASw + 1
    if oYt != 0 then
        call Yhi(oYt, "when calling resetDialogStage in NpcTalking, line 123")
    endif
    set ASw = ASw - 1
endfunction
function P0r takes integer I0r returns nothing
    set Cuw[I0r] = not Cuw[I0r]
endfunction
function nut takes integer qut, string aut returns nothing
    set DSw[ASw] = aut
    set ASw = ASw + 1
    if aN[qut] == 0 then
        if qut == 0 then
            call tNr("Nullpointer exception when calling NpcDialog.npcHasSpoken", "when calling error in NpcTalking, line 204")
        else
            call tNr("Called NpcDialog.npcHasSpoken on invalid object.", "when calling error in NpcTalking, line 204")
        endif
    endif
    call P0r(qut)
    set ASw = ASw - 1
endfunction
function JSt takes integer PSt, string ASt returns nothing
    local real DSt
    local real HSt
    set DSw[ASw] = ASt
    set ASw = ASw + 1
    set DSt = GA + vQt(guw[PSt]) * gA
    if guw[PSt] != "" and guw[PSt] != YA then
        set HSt = GetRandomReal(80., 95.)
        if bYS(huw[PSt], "when calling isNpc1Speaking in NpcTalking, line 108") then
            call EXs(KnS(AOS(Fuw[PSt], HSt), qcw, acw, kuw[PSt], juw[PSt], xuw[PSt]), bow, yow, guw[PSt], 10., DSt, hA, FA, kA, jA, null, "when calling _CreateTTExEntity in NpcTalking, line 109")
        else
            call EXs(KnS(AOS(vuw[PSt], HSt), qcw, acw, muw[PSt], Quw[PSt], Wuw[PSt]), bow, yow, guw[PSt], 10., DSt, hA, FA, kA, jA, null, "when calling _CreateTTExEntity in NpcTalking, line 111")
        endif
        call nut(huw[PSt], "when calling npcHasSpoken in NpcTalking, line 112")
    elseif guw[PSt] == YA then
        call lYt(huw[PSt], "when calling onDialogFinished in NpcTalking, line 114")
    endif
    set ASw = ASw - 1
endfunction
function Jau takes integer Hau returns nothing
    call tdu(qww_4670[Hau])
endfunction
function RMu takes integer fMu returns boolean
    return Xuw[fMu]
endfunction
function K0s takes integer D0s, string H0s returns boolean
    local boolean J0s
    set DSw[ASw] = H0s
    set ASw = ASw + 1
    if aN[D0s] == 0 then
        if D0s == 0 then
            call tNr("Nullpointer exception when calling NpcDialog.isInUse", "when calling error in NpcTalking, line 201")
        else
            call tNr("Called NpcDialog.isInUse on invalid object.", "when calling error in NpcTalking, line 201")
        endif
    endif
    set J0s = RMu(D0s)
    set ASw = ASw - 1
    return J0s
endfunction
function TEu takes integer dEu, string fEu returns boolean
    local boolean REu
    set DSw[ASw] = fEu
    set ASw = ASw + 1
    set REu = Jyr(KA, dEu, "when calling has in NpcTalking, line 157")
    set ASw = ASw - 1
    return REu
endfunction
function V4s takes integer C4s returns integer
    return Juw[C4s]
endfunction
function Xri takes integer Jri, string Kri returns integer
    local integer Lri
    set DSw[ASw] = Kri
    set ASw = ASw + 1
    if aN[Jri] == 0 then
        if Jri == 0 then
            call tNr("Nullpointer exception when calling NpcDialog.getId", "when calling error in NpcTalking, line 198")
        else
            call tNr("Called NpcDialog.getId on invalid object.", "when calling error in NpcTalking, line 198")
        endif
    endif
    set Lri = V4s(Jri)
    set ASw = ASw - 1
    return Lri
endfunction
function iQt takes integer rQt, string sQt returns integer
    local integer tQt
    set DSw[ASw] = sQt
    set ASw = ASw + 1
    set tQt = wps(KA, rQt, "when calling get in NpcTalking, line 160")
    set ASw = ASw - 1
    return tQt
endfunction
function NSS takes string LSS returns integer
    local integer XSS
    local integer CSS
    local integer VSS
    local integer BSS
    set DSw[ASw] = LSS
    set ASw = ASw + 1
    set XSS = 25
    set CSS = 0
    loop
        exitwhen not(CSS == 0 or(CSS != 0 and LA == Xri(CSS, "when calling getId in NpcTalking, line 166")) and XSS > 0)
        set XSS = XSS - 1
        set VSS = GetRandomInt($00000000, XA)
        if TEu(VSS, "when calling hasNpcDialog in NpcTalking, line 169") then
            set CSS = iQt(VSS, "when calling getRegisteredNpcDialog in NpcTalking, line 170")
        endif
    endloop
    if CSS != 0 then
        set BSS = Xri(CSS, "when calling getId in NpcTalking, line 172")
    else
        set BSS =- 1
    endif
    set LA = BSS
    set ASw = ASw - 1
    return CSS
endfunction
function dLs takes integer nLs returns integer
    return Huw[nLs]
endfunction
function ZlS takes integer QlS, string WlS returns integer
    local integer ElS
    set DSw[ASw] = WlS
    set ASw = ASw + 1
    if aN[QlS] == 0 then
        if QlS == 0 then
            call tNr("Nullpointer exception when calling NpcDialog.getSentencesAmount", "when calling error in NpcTalking, line 219")
        else
            call tNr("Called NpcDialog.getSentencesAmount on invalid object.", "when calling error in NpcTalking, line 219")
        endif
    endif
    set ElS = dLs(QlS)
    set ASw = ASw - 1
    return ElS
endfunction
function acS takes string ecS returns integer
    local integer qcS
    set DSw[ASw] = ecS
    set ASw = ASw + 1
    if NX == 0 then
        if MX < 32768 then
            set MX = MX + 1
            set qcS = MX
            set wC[qcS] = 927
        else
            call tNr("Out of memory: Could not create CallbackSingle_doAfter_NpcTalking.", "when calling error in NpcTalking, line 104")
            set qcS = 0
        endif
    else
        set NX = NX - 1
        set qcS = BX[NX]
        set wC[qcS] = 927
    endif
    set ASw = ASw - 1
    return qcS
endfunction
function HlS takes integer PlS, string AlS returns string
    local string DlS
    set DSw[ASw] = AlS
    set ASw = ASw + 1
    set DlS = ""
    set Xuw[PlS] = true
    if Luw[PlS] < wds(Kuw[PlS], "when calling size in NpcTalking, line 226") then
        set DlS = nPr(C_r(Kuw[PlS], Luw[PlS], "when calling get in NpcTalking, line 227"), "when calling stringFromIndex in NpcTalking, line 227")
        set Luw[PlS] = Luw[PlS] + 1
    endif
    set ASw = ASw - 1
    return DlS
endfunction
function bfS takes integer ofS, string OfS returns string
    local string lfS
    set DSw[ASw] = OfS
    set ASw = ASw + 1
    if aN[ofS] == 0 then
        if ofS == 0 then
            call tNr("Nullpointer exception when calling NpcDialog.getNextSentence", "when calling error in NpcTalking, line 222")
        else
            call tNr("Called NpcDialog.getNextSentence on invalid object.", "when calling error in NpcTalking, line 222")
        endif
    endif
    set lfS = HlS(ofS, "when calling getNextSentence in NpcTalking, line 222")
    set ASw = ASw - 1
    return lfS
endfunction
function bPs takes unit eIs, unit qIs, string aIs returns nothing
    local integer nIs
    local integer dIs
    local string fIs
    local real RIs
    local real TIs
    local real YIs
    local real GIs
    local real gIs
    local real hIs
    local real FIs
    local real kIs
    local real jIs
    local real xIs
    local real vIs
    local real mIs
    local real QIs
    local integer WIs
    local integer EIs
    local string ZIs
    local integer UIs
    local real IIs
    local real PIs
    local real AIs
    local real DIs
    local real HIs
    local real JIs
    local real KIs
    local real LIs
    local real XIs
    local real CIs
    local real VIs
    local real BIs
    local real NIs
    local real MIs
    local real wPs
    local real uPs
    local real rPs
    local real sPs
    local real tPs
    local real iPs
    local real SPs
    local real cPs
    local real oPs
    local real OPs
    local real lPs
    set DSw[ASw] = aIs
    set ASw = ASw + 1
    set nIs = NSS("when calling getRandomNpcDialog in NpcTalking, line 84")
    set dIs = 15
    loop
        exitwhen not(dIs > 0)
        set nIs = NSS("when calling getRandomNpcDialog in NpcTalking, line 88")
        if not K0s(nIs, "when calling isInUse in NpcTalking, line 89") then
            exitwhen true
        endif
        set dIs = dIs - 1
    endloop
    if dIs > 0 and(not K0s(nIs, "when calling isInUse in NpcTalking, line 93")) then
        set fIs = bfS(nIs, "when calling getNextSentence in NpcTalking, line 94")
        set RIs = GA + vQt(fIs) * gA
        if r5S(eIs) == xA then
            set PIs = mA
            set AIs = QA
            set DIs = WA
            set gIs = PIs
            set hIs = AIs
            set FIs = DIs
        else
            set HIs = EA
            set JIs = ZA
            set KIs = UA
            set gIs = HIs
            set hIs = JIs
            set FIs = KIs
        endif
        set LIs = gIs
        set XIs = hIs
        set CIs = FIs
        set TIs = LIs
        set YIs = XIs
        set GIs = CIs
        if r5S(qIs) == xA then
            set VIs = mA
            set BIs = QA
            set NIs = WA
            set vIs = VIs
            set mIs = BIs
            set QIs = NIs
        else
            set MIs = EA
            set wPs = ZA
            set uPs = UA
            set vIs = MIs
            set mIs = wPs
            set QIs = uPs
        endif
        set rPs = vIs
        set sPs = mIs
        set tPs = QIs
        set kIs = rPs
        set jIs = sPs
        set xIs = tPs
        call EXs(KnS(AOS(eIs, GetRandomReal(80., 95.)), qcw, acw, TIs, YIs, GIs), bow, yow, fIs, 10., RIs, hA, FA, kA, jA, null, "when calling _CreateTTExEntity in NpcTalking, line 99")
        set WIs = 0
        set EIs = ZlS(nIs, "when calling getSentencesAmount in NpcTalking, line 101")
        loop
            exitwhen WIs > EIs
            set ZIs = bfS(nIs, "when calling getNextSentence in NpcTalking, line 102")
            set IIs = RIs
            set UIs = acS("when calling alloc_CallbackSingle_doAfter_NpcTalking in NpcTalking, line 104")
            call RUs(UIs)
            set guw[UIs] = ZIs
            set huw[UIs] = nIs
            set Fuw[UIs] = eIs
            set iPs = TIs
            set SPs = YIs
            set cPs = GIs
            set kuw[UIs] = iPs
            set juw[UIs] = SPs
            set xuw[UIs] = cPs
            set vuw[UIs] = qIs
            set oPs = kIs
            set OPs = jIs
            set lPs = xIs
            set muw[UIs] = oPs
            set Quw[UIs] = OPs
            set Wuw[UIs] = lPs
            call Ybr(IIs, UIs, "when calling doAfter in NpcTalking, line 104")
            set RIs = RIs + GA + vQt(ZIs) * gA
            set WIs = WIs + 1
        endloop
    else
        call lYt($00000000, "when calling onDialogFinished in NpcTalking, line 119")
    endif
    set ASw = ASw - 1
endfunction
function Jdr takes integer Ddr, string Hdr returns nothing
    set DSw[ASw] = Hdr
    set ASw = ASw + 1
    if GetRandomInt($00000000, $00000001) == 0 then
        call bPs(x1[Ddr], v1[Ddr], "when calling npcTalkToNpc in EffectCleaner, line 99")
    else
        call bPs(v1[Ddr], x1[Ddr], "when calling npcTalkToNpc in EffectCleaner, line 101")
    endif
    set ASw = ASw - 1
endfunction
function Jqs takes integer Hqs returns nothing
    call DialogDisplay(nD, Tww_2159[Hqs], false)
endfunction
function K0r takes integer A0r, string D0r returns nothing
    local unit H0r
    local unit J0r
    set DSw[ASw] = D0r
    set ASw = ASw + 1
    set H0r = dps(aD[PLAYER_NEUTRAL_AGGRESSIVE], l2s(Iji("n02F", "when calling unObfuscate in Imp2, line 123"), "when calling fromRawCode in Imp2, line 123"), Z8[A0r], U8[A0r], bj_UNIT_FACING)
    call Ggr(H0r)
    set J0r = H0r
    call v0r(J0r, true)
    set ASw = ASw - 1
    set H0r = null
    set J0r = null
endfunction
function K3w takes integer J3w returns nothing
    if W9[J3w] == nD then
        call p0s(BW, false)
    endif
endfunction
function K8s takes integer J8s returns nothing
    call PlaySoundAtPointBJ(CreateSound("Sound/Interface/UpkeepRing.wav", false, true, true, $0000000A, $0000000A, "DefaultEAXON"), 150., N8[J8s], 50.)
endfunction
function KAi takes integer JAi returns nothing
    if Osw[JAi] != null then
        call Q_s(Osw[JAi], Vk)
    endif
endfunction
function KCs takes integer JCs returns nothing
    call GroupRemoveUnit(GO, jrw[JCs])
    call GroupRemoveUnit(fo, jrw[JCs])
endfunction
function KQu takes integer HQu, string JQu returns nothing
    set DSw[ASw] = JQu
    set ASw = ASw + 1
    call h9s(ssw[HQu], "when calling checkVoidlessMaxReachableStage in RuneMaster_Metamorphs, line 63")
    set ASw = ASw - 1
endfunction
function Kdu takes integer Jdu returns nothing
    call Q_s(BN[Jdu], sh)
endfunction
function Kgt takes integer Wgt, string Egt returns nothing
    local trigger Zgt
    local integer Ugt
    local trigger Igt
    local integer Pgt
    local integer Agt
    local trigger Dgt
    local integer Hgt
    local integer Jgt
    set DSw[ASw] = Egt
    set ASw = ASw + 1
    set Zgt = CreateTrigger()
    set Ugt = 0
    loop
        exitwhen Ugt > 9
        call r_u(Zgt, aD[Ugt], EVENT_PLAYER_UNIT_PICKUP_ITEM, null)
        set Ugt = Ugt + 1
    endloop
    call B2S(Zgt, tZw)
    set Igt = CreateTrigger()
    set Pgt = c5r(gQ, "when calling iterator in Critters, line 252")
    loop
        exitwhen not Tji(Pgt)
        set Agt = LXi(Pgt)
        call Ebs(Igt, aD[Agt], Iji("-critter ", "when calling unObfuscate in Critters, line 253"), false)
    endloop
    call vms(Pgt, "when calling close in Critters, line 252")
    call B2S(Igt, iZw)
    set Dgt = CreateTrigger()
    set Hgt = c5r(gQ, "when calling iterator in Critters, line 273")
    loop
        exitwhen not Tji(Hgt)
        set Jgt = LXi(Hgt)
        call Ebs(Dgt, aD[Jgt], Iji("-critter help", "when calling unObfuscate in Critters, line 274"), true)
        call Ebs(Dgt, aD[Jgt], Iji("-critters help", "when calling unObfuscate in Critters, line 275"), true)
    endloop
    call vms(Hgt, "when calling close in Critters, line 273")
    call B2S(Dgt, SZw)
    set ASw = ASw - 1
    set Zgt = null
    set Igt = null
    set Dgt = null
endfunction
function Doi takes string Poi returns integer
    local integer Aoi
    set DSw[ASw] = Poi
    set ASw = ASw + 1
    if NX == 0 then
        if MX < 32768 then
            set MX = MX + 1
            set Aoi = MX
            set wC[Aoi] = 761
        else
            call tNr("Out of memory: Could not create CallbackSingle_doAfter_EffectCleaner.", "when calling error in EffectCleaner, line 141")
            set Aoi = 0
        endif
    else
        set NX = NX - 1
        set Aoi = BX[NX]
        set wC[Aoi] = 761
    endif
    set ASw = ASw - 1
    return Aoi
endfunction
function ykS takes string OkS returns nothing
    local integer lkS
    local real bkS
    set DSw[ASw] = OkS
    set ASw = ASw + 1
    set bkS = GetRandomReal(.6, .8)
    set lkS = Doi("when calling alloc_CallbackSingle_doAfter_EffectCleaner in EffectCleaner, line 141")
    call RUs(lkS)
    call Ybr(bkS, lkS, "when calling doAfter in EffectCleaner, line 141")
    set ASw = ASw - 1
endfunction
function KoS takes integer HoS, string JoS returns nothing
    set DSw[ASw] = JoS
    set ASw = ASw + 1
    call ykS("when calling initRandomSeedReseeder in EffectCleaner, line 217")
    set ASw = ASw - 1
endfunction
function L2r takes integer K2r returns nothing
    call Xau("Core System loaded!", 1.5)
endfunction
function Uus takes string Eus returns integer
    local integer Zus
    set DSw[ASw] = Eus
    set ASw = ASw + 1
    if NX == 0 then
        if MX < 32768 then
            set MX = MX + 1
            set Zus = MX
            set wC[Zus] = 1084
        else
            call tNr("Out of memory: Could not create CallbackSingle_doAfter_doAfter_doAfter_JobAdvancementQuestHandler.", "when calling error in JobAdvancementQuestHandler, line 1039")
            set Zus = 0
        endif
    else
        set NX = NX - 1
        set Zus = BX[NX]
        set wC[Zus] = 1084
    endif
    set ASw = ASw - 1
    return Zus
endfunction
function L4t takes integer H4t, string J4t returns nothing
    local integer K4t
    set DSw[ASw] = J4t
    set ASw = ASw + 1
    set wP = false
    call gbS("when calling detectSinglePlayer2 in JobAdvancementQuestHandler, line 1038")
    set K4t = Uus("when calling alloc_CallbackSingle_doAfter_doAfter_doAfter_JobAdvancementQuestHandler in JobAdvancementQuestHandler, line 1039")
    call RUs(K4t)
    call Ybr(2., K4t, "when calling doAfter in JobAdvancementQuestHandler, line 1039")
    set ASw = ASw - 1
endfunction
function LFS takes integer JFS, string KFS returns nothing
    set DSw[ASw] = KFS
    set ASw = ASw + 1
    call DisplayTextToForce(Rc[BZ], Iji("Admiral: Impossible, they made it this far.", "when calling unObfuscate in Imp4, line 237"))
    set ASw = ASw - 1
endfunction
function SUs takes real tUs, integer iUs returns string
    return R2SW(tUs, iUs, iUs)
endfunction
function ott takes unit rtt, boolean stt returns nothing
    local integer ttt = boS(rtt)
    local real itt = 1.00 - (ttt - iW) * sW
    local real Stt
    local real ctt
    if itt < tW then
        set ctt = tW
    else
        if itt > 1.00 then
            set Stt = 1.00
        else
            set Stt = itt
        endif
        set ctt = Stt
    endif
    set itt = ctt
    if ttt == 20 or ttt == 40 or ttt == 60 or ttt == 80 or ttt == 100 or ttt == 120 or ttt == 140 or ttt == 160 or ttt == 180 or ttt == 200 or ttt == 220 or ttt == 240 or ttt == 260 or ttt == 280 or stt then
        call dii("Your XP rate: " + SUs(100. * itt, $00000003) + "%", 4., eDs(rtt))
    endif
    call SetPlayerHandicapXP(eDs(rtt), itt)
    call miS()
endfunction
function LKu takes integer DKu, string HKu returns nothing
    local unit JKu
    local unit KKu
    set DSw[ASw] = HKu
    set ASw = ASw + 1
    if n8[DKu] == null then
        set KKu = d8[DKu]
    else
        set KKu = hqs(xMi(tOS(n8[DKu], "when calling getCustomPlayer in HeroXP_Reduction, line 30"), "when calling getCHero in HeroXP_Reduction, line 30"), "when calling getHero in HeroXP_Reduction, line 30")
    endif
    set JKu = KKu
    if JKu != null then
        call ott(JKu, false)
    endif
    set ASw = ASw - 1
    set JKu = null
    set KKu = null
endfunction
function LLr takes integer JLr, string KLr returns nothing
    set DSw[ASw] = KLr
    set ASw = ASw + 1
    call dii(Iji("To become a supporter join us at |cff00BFFFdiscord.tever.xyz|r or on |cff00BFFFwww.tever.xyz|r", "when calling unObfuscate in SuperSaiyan, line 282"), 8., aD[Psw[JLr]])
    set ASw = ASw - 1
endfunction
function bfi takes string Ofi returns integer
    local integer lfi
    set DSw[ASw] = Ofi
    set ASw = ASw + 1
    if LC == 0 then
        if XC < 32768 then
            set XC = XC + 1
            set lfi = XC
            set CC[lfi] = 1171
        else
            call tNr("Out of memory: Could not create ForGroupCallback_forEachIn_doAfter_Imp3DragonFortress.", "when calling error in Imp3DragonFortress, line 1065")
            set lfi = 0
        endif
    else
        set LC = LC - 1
        set lfi = KC[LC]
        set CC[lfi] = 1171
    endif
    set ASw = ASw - 1
    return lfi
endfunction
function LQs takes integer DQs, string HQs returns nothing
    local integer JQs
    local group KQs
    set DSw[ASw] = HQs
    set ASw = ASw + 1
    call PlayMusicBJ(je)
    set hZ = false
    set KQs = fc[$0000000C]
    set JQs = bfi("when calling alloc_ForGroupCallback_forEachIn_doAfter_Imp3DragonFortress in Imp3DragonFortress, line 1065")
    call rou(KQs, JQs, "when calling forEachIn in Imp3DragonFortress, line 1065")
    call p5s(Rc[$0000000C], HZw)
    set ASw = ASw - 1
    set KQs = null
endfunction
function LcS takes integer JcS, string KcS returns nothing
    set DSw[ASw] = KcS
    set ASw = ASw + 1
    call DisplayTextToForce(Rc[BZ], Iji("Pugs: They shall meet their end here with my 'Ban' Hammer.", "when calling unObfuscate in Imp4, line 259"))
    call uFr(aO)
    call uFr(nO)
    set ASw = ASw - 1
endfunction
function Lii takes integer Dii, string Hii returns nothing
    local integer Jii
    local integer Kii
    set DSw[ASw] = Hii
    set ASw = ASw + 1
    set Jii = c5r(gQ, "when calling iterator in Repick, line 359")
    loop
        exitwhen not Tji(Jii)
        set Kii = LXi(Jii)
        call GVw(sH, Kii, XQt("when calling new_LinkedList in Repick, line 360"), "when calling put in Repick, line 360")
    endloop
    call vms(Jii, "when calling close in Repick, line 359")
    set ASw = ASw - 1
endfunction
function WRi takes string mRi returns integer
    local integer QRi
    set DSw[ASw] = mRi
    set ASw = ASw + 1
    if NX == 0 then
        if MX < 32768 then
            set MX = MX + 1
            set QRi = MX
            set wC[QRi] = 1063
        else
            call tNr("Out of memory: Could not create CallbackSingle_doAfter_doAfter_JobAdvancementQuestHandler.", "when calling error in JobAdvancementQuestHandler, line 1036")
            set QRi = 0
        endif
    else
        set NX = NX - 1
        set QRi = BX[NX]
        set wC[QRi] = 1063
    endif
    set ASw = ASw - 1
    return QRi
endfunction
function Lts takes integer Hts, string Jts returns nothing
    local integer Kts
    set DSw[ASw] = Jts
    set ASw = ASw + 1
    set Kts = WRi("when calling alloc_CallbackSingle_doAfter_doAfter_JobAdvancementQuestHandler in JobAdvancementQuestHandler, line 1036")
    call RUs(Kts)
    call Ybr(3.1, Kts, "when calling doAfter in JobAdvancementQuestHandler, line 1036")
    set ASw = ASw - 1
endfunction
function Cyr takes framehandle Lyr, player Xyr returns nothing
    if nD == Xyr then
        call BlzFrameSetVisible(Lyr, true)
    endif
endfunction
function Yxt takes string Rxt returns integer
    local integer Txt
    set DSw[ASw] = Rxt
    set ASw = ASw + 1
    if NX == 0 then
        if MX < 32768 then
            set MX = MX + 1
            set Txt = MX
            set wC[Txt] = 1106
        else
            call tNr("Out of memory: Could not create CallbackSingle_nullTimer_Voidless_mechanics.", "when calling error in Voidless_mechanics, line 967")
            set Txt = 0
        endif
    else
        set NX = NX - 1
        set Txt = BX[NX]
        set wC[Txt] = 1106
    endif
    set ASw = ASw - 1
    return Txt
endfunction
function eVs takes framehandle bVs, string yVs, player pVs returns nothing
    if pVs == null or pVs == nD then
        call Wrt(bVs, yVs)
    endif
endfunction
function dGS takes framehandle nGS returns real
    return BlzFrameGetWidth(nGS)
endfunction
function lGS takes framehandle oGS, real OGS returns nothing
    call BlzFrameSetSize(oGS, dGS(oGS), OGS)
endfunction
function ppi takes string Opi, string lpi returns string
    local string bpi
    local string ypi
    set DSw[ASw] = lpi
    set ASw = ASw + 1
    set bpi = ""
    set ypi = Opi
    if ypi == "1" then
        set bpi = "LEFT ARROW KEY <-"
    elseif ypi == "2" then
        set bpi = "RIGHT ARROW KEY ->"
    elseif ypi == "3" then
        set bpi = "UP ARROW KEY /\\"
    elseif ypi == "4" then
        set bpi = "DOWN ARROW KEY \\/"
    elseif ypi == "5" then
        set bpi = " ADD KEY    + "
    elseif ypi == "6" then
        set bpi = " SUBSTRACT KEY - "
    else
        call tNr("Using wrong index for Arrow keys!", "when calling error in Voidless_mechanics, line 909")
    endif
    set ASw = ASw - 1
    return bpi
endfunction
function x1r takes framehandle F1r, boolean k1r, player j1r returns nothing
    if j1r == null or j1r == nD then
        call p0s(F1r, k1r)
    endif
endfunction
function LYS takes player kYS, string jYS, string xYS returns nothing
    local framehandle vYS
    local integer mYS
    local framehandle QYS
    local framehandle WYS
    local framehandle EYS
    local framehandle ZYS
    local framehandle UYS
    local framehandle IYS
    local framehandle PYS
    local framehandle AYS
    local framehandle DYS
    local framehandle HYS
    local real JYS
    local integer KYS
    set DSw[ASw] = xYS
    set ASw = ASw + 1
    if yX == null then
        set vYS = KCu("SimpleImp5ArrowHint", bX, $00000000)
        call d_u(vYS, $00000002)
        set yX = vYS
        call rit(yX)
        set pX = Pvi("Imp5ArrowHintVirtualBackgroundFrame", $00000000)
        set eX = Pvi("Imp5ArrowHintContentText0", $00000000)
        set qX = Pvi("Imp5ArrowHintContentText1", $00000000)
        set aX = Pvi("Imp5ArrowHintContentText2", $00000000)
        set nX = Pvi("Imp5ArrowHintContentText3", $00000000)
        set dX = Pvi("Imp5ArrowHintContentText4", $00000000)
    endif
    set mYS = 0
    if vQt(jYS) >= 1 then
        call Cyr(eX, kYS)
        set mYS = mYS + 1
        set QYS = eX
        call eVs(QYS, ppi(Dsi(jYS, $00000000), "when calling arrowGameGetArrowName in Voidless_mechanics, line 928"), kYS)
        set WYS = QYS
        call Hms(WYS, $000000FF, $00000000, $00000000, $000000FF, kYS)
    else
        call oyS(eX, kYS)
    endif
    if vQt(jYS) >= 2 then
        call Cyr(qX, kYS)
        set mYS = mYS + 1
        set EYS = qX
        call eVs(EYS, ppi(Dsi(jYS, $00000001), "when calling arrowGameGetArrowName in Voidless_mechanics, line 935"), kYS)
        set ZYS = EYS
        call Hms(ZYS, $000000FF, $00000000, $00000000, $000000FF, kYS)
    else
        call oyS(qX, kYS)
    endif
    if vQt(jYS) >= 3 then
        call Cyr(aX, kYS)
        set mYS = mYS + 1
        set UYS = aX
        call eVs(UYS, ppi(Dsi(jYS, $00000002), "when calling arrowGameGetArrowName in Voidless_mechanics, line 942"), kYS)
        set IYS = UYS
        call Hms(IYS, $000000FF, $00000000, $00000000, $000000FF, kYS)
    else
        call oyS(aX, kYS)
    endif
    if vQt(jYS) >= 4 then
        call Cyr(nX, kYS)
        set mYS = mYS + 1
        set PYS = nX
        call eVs(PYS, ppi(Dsi(jYS, $00000003), "when calling arrowGameGetArrowName in Voidless_mechanics, line 949"), kYS)
        set AYS = PYS
        call Hms(AYS, $000000FF, $00000000, $00000000, $000000FF, kYS)
    else
        call oyS(nX, kYS)
    endif
    if vQt(jYS) >= 5 then
        call Cyr(dX, kYS)
        set mYS = mYS + 1
        set DYS = dX
        call eVs(DYS, ppi(Dsi(jYS, $00000004), "when calling arrowGameGetArrowName in Voidless_mechanics, line 956"), kYS)
        set HYS = DYS
        call Hms(HYS, $000000FF, $00000000, $00000000, $000000FF, kYS)
    else
        call oyS(dX, kYS)
    endif
    set JYS = 0.0325 + 0.0185 * mYS
    if kYS == nD and mYS > 0 then
        call lGS(pX, JYS)
    endif
    call Cyr(yX, kYS)
    call x1r(yX, true, kYS)
    set KYS = Yxt("when calling alloc_CallbackSingle_nullTimer_Voidless_mechanics in Voidless_mechanics, line 967")
    call RUs(KYS)
    set QSw[KYS] = kYS
    call ccr(KYS, "when calling nullTimer in Voidless_mechanics, line 967")
    set ASw = ASw - 1
    set vYS = null
    set QYS = null
    set WYS = null
    set EYS = null
    set ZYS = null
    set UYS = null
    set IYS = null
    set PYS = null
    set AYS = null
    set DYS = null
    set HYS = null
endfunction
function Lvu takes integer Pvu, string Avu returns nothing
    local integer Dvu
    local integer Hvu
    local integer Jvu
    local string Kvu
    set DSw[ASw] = Avu
    set ASw = ASw + 1
    if Zcr(RSw[Pvu]) then
        set Dvu = GetRandomInt($00000001, $00000004)
        set Hvu = GetRandomInt($00000001, $00000004)
        set Jvu = GetRandomInt($00000001, $00000004)
        set Kvu = fju(Dvu) + fju(Hvu) + fju(Jvu)
        call GVw(TX, TSw[Pvu], err(Kvu, "when calling stringToIndex in Voidless_mechanics, line 796"), "when calling put in Voidless_mechanics, line 796")
        call GVw(YX, TSw[Pvu], err("", "when calling stringToIndex in Voidless_mechanics, line 797"), "when calling put in Voidless_mechanics, line 797")
        call LYS(YSw[Pvu], Kvu, "when calling arrowGameShowHint in Voidless_mechanics, line 798")
    endif
    set ASw = ASw - 1
endfunction
function Lyu takes integer Zyu, string Uyu returns nothing
    local item Iyu
    local item Pyu
    local real Ayu
    local real Dyu
    local effect Hyu
    local real Jyu
    local real Kyu
    set DSw[ASw] = Uyu
    set ASw = ASw + 1
    if not QUu(A4[Zyu], l2s(Iji(am, "when calling unObfuscate in FateDestinyUnlocker, line 203"), "when calling fromRawCode in FateDestinyUnlocker, line 203")) then
        call vwt(Zx, D4[Zyu], "when calling add in FateDestinyUnlocker, line 204")
        set Pyu = oSu(l2s(Iji(am, "when calling unObfuscate in FateDestinyUnlocker, line 205"), "when calling fromRawCode in FateDestinyUnlocker, line 205"), ATS(ANw(A4[Zyu]), XSw, 50.), VSw, BSw)
        call IOt(Pyu, H4[Zyu], false)
        set Iyu = Pyu
        call vwt(px, Xdu(Iyu), "when calling add in FateDestinyUnlocker, line 206")
        call GVw(ex, Xdu(Iyu), D4[Zyu], "when calling put in FateDestinyUnlocker, line 207")
        call eys(Zx, D4[Zyu], "when calling remove in FateDestinyUnlocker, line 208")
        set Jyu = nLw(Iyu)
        set Kyu = oow
        set Ayu = Jyu
        set Dyu = Kyu
        set Hyu = AddSpecialEffect(Iji("Effects/VoidDisc.mdx", "when calling unObfuscate in FateDestinyUnlocker, line 211"), Ayu, Dyu)
        call Xjr(Hyu, wor(Ayu, Dyu))
        call yYi(Hyu, 5., "when calling destrAdvTimed in FateDestinyUnlocker, line 211")
    endif
    set ASw = ASw - 1
    set Iyu = null
    set Pyu = null
    set Hyu = null
endfunction
function M3s takes integer N3s returns nothing
    call Y2r(U7[N3s])
endfunction
function M4s takes integer N4s returns nothing
    if k8[N4s] != null then
        call Q_s(k8[N4s], oW)
        call Q_s(k8[N4s], OW)
    endif
endfunction
function MBu takes integer NBu returns nothing
    call xvu(o3[NBu], Hg)
endfunction
function PNs takes string UNs returns integer
    local integer INs
    set DSw[ASw] = UNs
    set ASw = ASw + 1
    if NX == 0 then
        if MX < 32768 then
            set MX = MX + 1
            set INs = MX
            set wC[INs] = 1069
        else
            call tNr("Out of memory: Could not create CallbackSingle_doAfter_doAfter_MonsterHunter_Weakness.", "when calling error in MonsterHunter_Weakness, line 30")
            set INs = 0
        endif
    else
        set NX = NX - 1
        set INs = BX[NX]
        set wC[INs] = 1069
    endif
    set ASw = ASw - 1
    return INs
endfunction
function MMs takes integer CMs, string VMs returns nothing
    local integer BMs
    local real NMs
    set DSw[ASw] = VMs
    set ASw = ASw + 1
    call Q_s(tuw[CMs], vP[iuw[CMs]])
    set NMs = CP
    set BMs = PNs("when calling alloc_CallbackSingle_doAfter_doAfter_MonsterHunter_Weakness in MonsterHunter_Weakness, line 30")
    call RUs(BMs)
    set Suw[BMs] = tuw[CMs]
    call Ybr(NMs, BMs, "when calling doAfter in MonsterHunter_Weakness, line 30")
    set ASw = ASw - 1
endfunction
function MRi takes integer NRi returns nothing
    call Fci(btw[NRi], ytw[NRi], $00000000)
    call Q_s(btw[NRi], ytw[NRi])
endfunction
function QnS takes string vnS returns integer
    local integer mnS
    set DSw[ASw] = vnS
    set ASw = ASw + 1
    if NX == 0 then
        if MX < 32768 then
            set MX = MX + 1
            set mnS = MX
            set wC[mnS] = 1056
        else
            call tNr("Out of memory: Could not create CallbackSingle_doAfter_doAfter_DungeonCmds.", "when calling error in DungeonCmds, line 961")
            set mnS = 0
        endif
    else
        set NX = NX - 1
        set mnS = BX[NX]
        set wC[mnS] = 1056
    endif
    set ASw = ASw - 1
    return mnS
endfunction
function VGs takes string XGs returns integer
    local integer CGs
    set DSw[ASw] = XGs
    set ASw = ASw + 1
    if NX == 0 then
        if MX < 32768 then
            set MX = MX + 1
            set CGs = MX
            set wC[CGs] = 1055
        else
            call tNr("Out of memory: Could not create CallbackSingle_doAfter_doAfter_DungeonCmds.", "when calling error in DungeonCmds, line 955")
            set CGs = 0
        endif
    else
        set NX = NX - 1
        set CGs = BX[NX]
        set wC[CGs] = 1055
    endif
    set ASw = ASw - 1
    return CGs
endfunction
function MWs takes integer hWs, string FWs returns nothing
    local integer kWs
    local integer jWs
    local trigger xWs
    local integer vWs
    local integer mWs
    local trigger QWs
    local integer WWs
    local integer EWs
    local trigger ZWs
    local integer UWs
    local integer IWs
    local trigger PWs
    local trigger AWs
    local trigger DWs
    local trigger HWs
    local integer JWs
    local integer KWs
    local trigger LWs
    local trigger XWs
    local trigger CWs
    local trigger VWs
    local integer BWs
    local integer NWs
    set DSw[ASw] = FWs
    set ASw = ASw + 1
    set kWs = c5r(gQ, "when calling iterator in DungeonCmds, line 891")
    loop
        exitwhen not Tji(kWs)
        set jWs = LXi(kWs)
        call GVw(ax, jWs, xw, "when calling put in DungeonCmds, line 892")
    endloop
    call vms(kWs, "when calling close in DungeonCmds, line 891")
    set xWs = CreateTrigger()
    set vWs = 0
    set mWs = Lh
    loop
        exitwhen vWs > mWs
        call Ebs(xWs, aD[vWs], Iji("-enter", "when calling unObfuscate in DungeonCmds, line 896"), true)
        set vWs = vWs + 1
    endloop
    call dUs(xWs, Condition(lZw))
    call B2S(xWs, bZw)
    set QWs = CreateTrigger()
    set WWs = 0
    set EWs = Lh
    loop
        exitwhen WWs > EWs
        call Ebs(QWs, aD[WWs], Iji("-done", "when calling unObfuscate in DungeonCmds, line 902"), true)
        set WWs = WWs + 1
    endloop
    call dUs(QWs, Condition(yZw))
    call B2S(QWs, pZw)
    set ZWs = CreateTrigger()
    set UWs = 0
    set IWs = Lh
    loop
        exitwhen UWs > IWs
        call Ebs(ZWs, aD[UWs], Iji("-out", "when calling unObfuscate in DungeonCmds, line 908"), true)
        call Ebs(ZWs, aD[UWs], Iji("-leave", "when calling unObfuscate in DungeonCmds, line 909"), true)
        call Ebs(ZWs, aD[UWs], Iji("-exit", "when calling unObfuscate in DungeonCmds, line 910"), true)
        set UWs = UWs + 1
    endloop
    call dUs(ZWs, Condition(eZw))
    call B2S(ZWs, qZw)
    set PWs = CreateTrigger()
    call QYr(PWs, K2S(jo[Rx]), null)
    set AWs = PWs
    call QYr(AWs, sF, null)
    set DWs = AWs
    call l2w(DWs, EVENT_PLAYER_HERO_LEVEL)
    set HWs = DWs
    call B2S(HWs, aZw)
    set JWs = 0
    set KWs = Lh
    loop
        exitwhen JWs > KWs
        set LWs = CreateTrigger()
        call aRS(LWs, Vx[JWs], null)
        set XWs = LWs
        call B2S(XWs, nZw)
        set CWs = CreateTrigger()
        call QYr(CWs, Vx[JWs], null)
        set VWs = CWs
        call B2S(VWs, dZw)
        set JWs = JWs + 1
    endloop
    set BWs = VGs("when calling alloc_CallbackSingle_doAfter_doAfter_DungeonCmds in DungeonCmds, line 955")
    call RUs(BWs)
    call Ybr(1., BWs, "when calling doAfter in DungeonCmds, line 955")
    set NWs = QnS("when calling alloc_CallbackSingle_doAfter_doAfter_DungeonCmds in DungeonCmds, line 961")
    call RUs(NWs)
    call Ybr(1., NWs, "when calling doAfter in DungeonCmds, line 961")
    set ASw = ASw - 1
    set xWs = null
    set QWs = null
    set ZWs = null
    set PWs = null
    set AWs = null
    set DWs = null
    set HWs = null
    set LWs = null
    set XWs = null
    set CWs = null
    set VWs = null
endfunction
function MYr takes integer NYr returns nothing
    call dii("2", .8, eDs(X3[NYr]))
endfunction
function Myr takes integer Vyr, string Byr returns nothing
    local unit Nyr
    set DSw[ASw] = Byr
    set ASw = ASw + 1
    set Nyr = dps(aD[PLAYER_NEUTRAL_AGGRESSIVE], XZ, oQu(Bp), Gcw, bj_UNIT_FACING)
    call Yis(Nyr, $0000012C, false)
    set MZ = Nyr
    call DisplayTextToForce(Rc[BZ], Iji("Admiral: Commander! Come out!", "when calling unObfuscate in Imp4, line 251"))
    set ASw = ASw - 1
    set Nyr = null
endfunction
function N1i takes integer U1i, string I1i returns nothing
    local lightning P1i
    local effect A1i
    local effect D1i
    local effect H1i
    local effect J1i
    local effect K1i
    local effect L1i
    local effect X1i
    local effect C1i
    local effect V1i
    local effect B1i
    set DSw[ASw] = I1i
    set ASw = ASw + 1
    set P1i = AddLightningEx("DRAM", true, x5[U1i], v5[U1i], m5[U1i], Q5[U1i], W5[U1i], m5[U1i])
    call clu(P1i, E5[U1i], Z5[U1i], U5[U1i], I5[U1i])
    set Vm = P1i
    set A1i = uSs(P5[U1i], A5[U1i], "Abilities/Spells/Human/ReviveHuman/ReviveHuman.mdl")
    call ZIr(A1i, E5[U1i], Z5[U1i], U5[U1i], I5[U1i])
    set D1i = A1i
    call vQs(D1i, wor(D5[U1i], H5[U1i]))
    set H1i = D1i
    call Wwu(H1i, 2.)
    set J1i = H1i
    call yYi(J1i, iQ, "when calling destrAdvTimed in FateDestinyUnlocker, line 436")
    set K1i = J1i
    call iNw(K1i, .2)
    set L1i = uSs(x5[U1i], v5[U1i], "Abilities/Spells/Human/ReviveHuman/ReviveHuman.mdl")
    call ZIr(L1i, E5[U1i], Z5[U1i], U5[U1i], I5[U1i])
    set X1i = L1i
    call vQs(X1i, wor(D5[U1i], H5[U1i]))
    set C1i = X1i
    call Wwu(C1i, 2.)
    set V1i = C1i
    call yYi(V1i, iQ, "when calling destrAdvTimed in FateDestinyUnlocker, line 439")
    set B1i = V1i
    call iNw(B1i, .2)
    set ASw = ASw - 1
    set P1i = null
    set A1i = null
    set D1i = null
    set H1i = null
    set J1i = null
    set K1i = null
    set L1i = null
    set X1i = null
    set C1i = null
    set V1i = null
    set B1i = null
endfunction
function N6r takes integer V6r, string B6r returns nothing
    set DSw[ASw] = B6r
    set ASw = ASw + 1
    call ZAw()
    call L5S("when calling _CrashMapFunction2 in VertexCalculator, line 112")
    call C0t("when calling _CrashMapFunction3 in VertexCalculator, line 113")
    set ASw = ASw - 1
endfunction
function rhr takes rect uhr returns nothing
    call RemoveRect(uhr)
endfunction
function N8t takes integer E8t, string Z8t returns nothing
    local rect U8t
    local integer I8t
    local integer P8t
    local real A8t
    local real D8t
    local integer H8t
    local integer J8t
    local real K8t
    local real L8t
    local real X8t
    local real C8t
    local real V8t
    local real B8t
    set DSw[ASw] = Z8t
    set ASw = ASw + 1
    call dps(aD[PLAYER_NEUTRAL_PASSIVE], FF, - 3360., 3072., 270. * JG)
    call dps(aD[PLAYER_NEUTRAL_PASSIVE], kF, 4736., 10464., 270. * JG)
    set U8t = Rect(- 3808., 3584., - 3392., 3776.)
    set I8t = c5r(wps(mF, $00000001, "when calling get in Critters, line 132"), "when calling iterator in Critters, line 132")
    loop
        exitwhen not Tji(I8t)
        set P8t = LXi(I8t)
        set X8t = CKu(U8t)
        set C8t = Ccw
        set A8t = X8t
        set D8t = C8t
        call dps(aD[PLAYER_NEUTRAL_PASSIVE], P8t, A8t, D8t, GetRandomReal(0., 4.))
    endloop
    call vms(I8t, "when calling close in Critters, line 132")
    set H8t = c5r(wps(mF, $00000002, "when calling get in Critters, line 135"), "when calling iterator in Critters, line 135")
    loop
        exitwhen not Tji(H8t)
        set J8t = LXi(H8t)
        set V8t = CKu(U8t)
        set B8t = Ccw
        set K8t = V8t
        set L8t = B8t
        call dps(aD[PLAYER_NEUTRAL_PASSIVE], J8t, K8t, L8t, GetRandomReal(0., 4.))
    endloop
    call vms(H8t, "when calling close in Critters, line 135")
    call rhr(U8t)
    set ASw = ASw - 1
    set U8t = null
endfunction
function NCi takes integer BCi returns nothing
    call Q_s(Lsw[BCi], Xsw[BCi])
endfunction
function NMi takes integer VMi, string BMi returns nothing
    set DSw[ASw] = BMi
    set ASw = ASw + 1
    call eys(Lv, hgr(Z7[VMi]), "when calling remove in FateDestinyUnlocker, line 721")
    set ASw = ASw - 1
endfunction
function Nst takes integer Bst returns nothing
    call ForGroupBJ(fc[$0000000C], JZw)
    set WZ = true
    call p5s(Rc[$0000000C], KZw)
endfunction
function Cei takes string Kei returns nothing
    local integer Lei
    local integer Xei
    set DSw[ASw] = Kei
    set ASw = ASw + 1
    if not uP then
        set Lei = c5r(gQ, "when calling iterator in JobAdvancementQuestHandler, line 623")
        loop
            exitwhen not Tji(Lei)
            set Xei = LXi(Lei)
            call bKw(Xei)
            call GVw(OA, Xei, O_i(true), "when calling put in JobAdvancementQuestHandler, line 625")
            if not Jyr(nA, Xei, "when calling has in JobAdvancementQuestHandler, line 626") then
    call GVw(nA, Xei, $00000001, "when calling put in JobAdvancementQuestHandler, line 627")
            else
    call GVw(nA, Xei, wps(nA, Xei, "when calling get in JobAdvancementQuestHandler, line 629") + 1, "when calling put in JobAdvancementQuestHandler, line 629")
            endif
        endloop
        call vms(Lei, "when calling close in JobAdvancementQuestHandler, line 623")
        call Xgs(true, "when calling makeGameOver in JobAdvancementQuestHandler, line 630")
        call Ohr("when calling makeGameOver2 in JobAdvancementQuestHandler, line 631")
    endif
    set Ou = true
    set ASw = ASw - 1
endfunction
function O5u takes integer c5u, string o5u returns nothing
    set DSw[ASw] = o5u
    set ASw = ASw + 1
    call Cei("when calling magicVariableBool4_check in JobAdvancementQuestHandler, line 1047")
    set ASw = ASw - 1
endfunction
function O7S takes integer o7S returns nothing
    call DestroyEffect(C7[o7S])
endfunction
function O9t takes integer c9t, string o9t returns nothing
    set DSw[ASw] = o9t
    set ASw = ASw + 1
    call dii(Iji("You are kicked in ", "when calling unObfuscate in VertexCalculator, line 131") + fju(atw[c9t] - ntw[c9t]) + " seconds", 5., aD[dtw[c9t]])
    set ASw = ASw - 1
endfunction
function OIs takes integer cIs, string oIs returns nothing
    set DSw[ASw] = oIs
    set ASw = ASw + 1
    if f8[cIs] and R8[cIs] != null then
        call WDr(T8[cIs], "when calling cameraLock in Hiero_Resurrection, line 86")
    endif
    set ASw = ASw - 1
endfunction
function OrS takes integer crS, string orS returns nothing
    set DSw[ASw] = orS
    set ASw = ASw + 1
    call Aku(puw[crS], euw[crS], quw[crS], "when calling setVoidlessMaxReachableStage in NpcHandler, line 258")
    set ASw = ASw - 1
endfunction
function dGt takes string aGt returns integer
    local integer nGt
    set DSw[ASw] = aGt
    set ASw = ASw + 1
    if iV == 0 then
        if SV < 32768 then
            set SV = SV + 1
            set nGt = SV
            set cV[nGt] = 1118
        else
            call tNr("Out of memory: Could not create CustomLocation.", "when calling error in CustomLocation, line 17")
            set nGt = 0
        endif
    else
        set iV = iV - 1
        set nGt = tV[iV]
        set cV[nGt] = 1118
    endif
    set ASw = ASw - 1
    return nGt
endfunction
function Ysi takes integer Tsi returns nothing
endfunction
function y4r takes integer b4r returns nothing
    call Ysi(b4r)
    set NM[b4r] = true
    set JF = JF + 1
endfunction
function POr takes string UOr returns integer
    local integer IOr
    set DSw[ASw] = UOr
    set ASw = ASw + 1
    set IOr = dGt("when calling alloc_CustomLocation in CustomLocation, line 26")
    call y4r(IOr)
    set ASw = ASw - 1
    return IOr
endfunction
function SGS takes integer wGS, integer uGS, real rGS, real sGS returns nothing
    local real tGS
    local real iGS
    if NM[wGS]then
        set tGS = rGS
        set iGS = sGS
        set VM[wGS] = tGS
        set BM[wGS] = iGS
        set NM[wGS] = false
    endif
endfunction
function TCu takes integer aCu, integer nCu, real dCu, real fCu, string RCu returns nothing
    set DSw[ASw] = RCu
    set ASw = ASw + 1
    if cV[aCu] == 0 then
        if aCu == 0 then
            call tNr("Nullpointer exception when calling CustomLocation.setup", "when calling error in CustomLocation, line 30")
        else
            call tNr("Called CustomLocation.setup on invalid object.", "when calling error in CustomLocation, line 30")
        endif
    endif
    call SGS(aCu, nCu, dCu, fCu)
    set ASw = ASw - 1
endfunction
function bSt takes nothing returns integer
    set kP = kP + 1
    return kP
endfunction
function ufr takes real Cdr, real Vdr, string Bdr returns integer
    local integer Ndr
    local integer Mdr
    local integer wfr
    set DSw[ASw] = Bdr
    set ASw = ASw + 1
    set Ndr = bSt()
    set wfr = POr("when calling new_CustomLocation in LocationRegistry, line 26")
    call TCu(wfr, Ndr, Cdr, Vdr, "when calling setup in LocationRegistry, line 26")
    set Mdr = wfr
    call GVw(FP, Ndr, Mdr, "when calling put in LocationRegistry, line 27")
    set ASw = ASw - 1
    return Mdr
endfunction
function PBs takes integer kBs, string jBs returns nothing
    local integer xBs
    local integer vBs
    local integer mBs
    local integer QBs
    local integer WBs
    local real EBs
    local real ZBs
    local real UBs
    local real IBs
    set DSw[ASw] = jBs
    set ASw = ASw + 1
    set xBs = JX
    call vwt(xBs, ufr(9843., - 9624., "when calling addLocation in WorldBoss, line 47"), "when calling add in WorldBoss, line 47")
    set vBs = xBs
    call vwt(vBs, ufr(- 1657., 9470., "when calling addLocation in WorldBoss, line 48"), "when calling add in WorldBoss, line 48")
    set mBs = vBs
    call vwt(mBs, ufr(- 10524., 12200., "when calling addLocation in WorldBoss, line 49"), "when calling add in WorldBoss, line 49")
    set QBs = mBs
    call vwt(QBs, ufr(- 1095., 1108., "when calling addLocation in WorldBoss, line 50"), "when calling add in WorldBoss, line 50")
    set WBs = QBs
    call vwt(WBs, ufr(- 7932., - 7562., "when calling addLocation in WorldBoss, line 51"), "when calling add in WorldBoss, line 51")
    call l2w(HX, EVENT_PLAYER_UNIT_DEATH)
    call B2S(HX, bIw)
    set UBs = iCr(JX, "when calling getRandomVec2 in WorldBoss, line 57")
    set IBs = Aow
    set EBs = UBs
    set ZBs = IBs
    set DX = Bwi(AX, EBs, ZBs, 15., "when calling spawn_worldBoss in WorldBoss, line 58")
    call AQs(DX)
    set ASw = ASw - 1
endfunction
function X8s takes unit L8s returns nothing
    call Nkr()
    call IcS()
    call Fis()
endfunction
function lhs takes string ohs returns integer
    local integer Ohs
    set DSw[ASw] = ohs
    set ASw = ASw + 1
    if NX == 0 then
        if MX < 32768 then
            set MX = MX + 1
            set Ohs = MX
            set wC[Ohs] = 1054
        else
            call tNr("Out of memory: Could not create CallbackSingle_doAfter_doAfter_DungeonCmds.", "when calling error in DungeonCmds, line 577")
            set Ohs = 0
        endif
    else
        set NX = NX - 1
        set Ohs = BX[NX]
        set wC[Ohs] = 1054
    endif
    set ASw = ASw - 1
    return Ohs
endfunction
function PCi takes integer mCi, string QCi returns nothing
    local group WCi
    local unit ECi
    local unit ZCi
    local unit UCi
    local integer ICi
    set DSw[ASw] = QCi
    set ASw = ASw + 1
    call yLt(ws, l1[mCi])
    call yLt(lt, l1[mCi])
    set bS = lVs(l1[mCi], Condition(wmw))
    set WCi = XbS(bS)
    loop
        exitwhen not hJw(WCi)
        set ECi = tPr(WCi)
        call SetUnitPositionLoc(ECi, yr[1 + hgr(l1[mCi])])
        set hu[GetPlayerId(GetOwningPlayer(ECi))] = false
        set ZCi = ECi
        call qaS(ZCi)
        set UCi = ZCi
        call X8s(UCi)
    endloop
    call lxs(WCi)
    call Z5u(bS)
    call PanCameraToTimedLocForPlayer(l1[mCi], yr[1 + hgr(l1[mCi])], 0.)
    set ICi = lhs("when calling alloc_CallbackSingle_doAfter_doAfter_DungeonCmds in DungeonCmds, line 577")
    call RUs(ICi)
    set b1[ICi] = l1[mCi]
    call Ybr(0.25, ICi, "when calling doAfter in DungeonCmds, line 577")
    set ASw = ASw - 1
    set WCi = null
    set ECi = null
    set ZCi = null
    set UCi = null
endfunction
function PIr takes integer UIr, string IIr returns nothing
    set DSw[ASw] = IIr
    set ASw = ASw + 1
    call FDt(Iji("The game is closed in ", "when calling unObfuscate in VertexCalculator, line 101") + fju(etw[UIr] - qtw[UIr]) + " seconds")
    set ASw = ASw - 1
endfunction
function POu takes integer UOu, string IOu returns nothing
    set DSw[ASw] = IOu
    set ASw = ASw + 1
    call dii(Iji("You feel a strange power calling for you from the Void...", "when calling unObfuscate in FateDestinyUnlocker, line 214"), 3., J4[UOu])
    call qaS(K4[UOu])
    call krS(xus(L4[UOu], "when calling getCustomPlayer in FateDestinyUnlocker, line 216"), "when calling cameraCheckLock in FateDestinyUnlocker, line 216")
    set ASw = ASw - 1
endfunction
function PSi takes integer USi, string ISi returns nothing
    set DSw[ASw] = ISi
    set ASw = ASw + 1
    call xvu(nsw[USi], Iji("stop", "when calling unObfuscate in Spells_Checks, line 74"))
    set ASw = ASw - 1
endfunction
function EyS takes integer QyS returns integer
    local integer WyS
    if QyS == 3 then
        set WyS = 4
    else
        set WyS = QyS
    endif
    return WyS
endfunction
function mii takes trigger Fii, player kii, oskeytype jii, integer xii, boolean vii returns event
    return BlzTriggerRegisterPlayerKeyEvent(Fii, kii, jii, EyS(xii), vii)
endfunction
function PUs takes integer YUs returns nothing
    local trigger GUs
    local trigger gUs
    local trigger hUs
    local trigger FUs
    local trigger kUs
    local trigger jUs
    local trigger xUs
    local trigger vUs
    local trigger mUs
    local trigger QUs
    local trigger WUs
    local trigger EUs
    local trigger ZUs
    local integer UUs
    local integer IUs
    call TriggerAddAction(hR, CZw)
    call TriggerAddCondition(kR, Condition(VZw))
    call TriggerAddAction(kR, BZw)
    call TriggerAddAction(GR, NZw)
    set GUs = CreateTrigger()
    call QYr(GUs, K2S(xl), null)
    set gUs = GUs
    call dUs(gUs, Condition(MZw))
    set hUs = gUs
    call B2S(hUs, wUw)
    set FUs = CreateTrigger()
    call QYr(FUs, K2S(ml), null)
    set kUs = FUs
    call dUs(kUs, Condition(uUw))
    set jUs = kUs
    call B2S(jUs, rUw)
    set xUs = CreateTrigger()
    call QYr(xUs, K2S(Wl), null)
    set vUs = xUs
    call dUs(vUs, Condition(sUw))
    set mUs = vUs
    call B2S(mUs, tUw)
    set QUs = CreateTrigger()
    call QYr(QUs, K2S(Zl), null)
    set WUs = QUs
    call dUs(WUs, Condition(iUw))
    set EUs = WUs
    call B2S(EUs, SUw)
    set ZUs = CreateTrigger()
    call B2S(ZUs, cUw)
    set vZ = ZUs
    set UUs = 0
    set IUs = Lh
    loop
        exitwhen UUs > IUs
        call mii(vZ, aD[UUs], OSKEY_LEFT, $00000000, true)
        call mii(vZ, aD[UUs], OSKEY_RIGHT, $00000000, true)
        call mii(vZ, aD[UUs], OSKEY_UP, $00000000, true)
        call mii(vZ, aD[UUs], OSKEY_DOWN, $00000000, true)
        set UUs = UUs + 1
    endloop
    set GUs = null
    set gUs = null
    set hUs = null
    set FUs = null
    set kUs = null
    set jUs = null
    set xUs = null
    set vUs = null
    set mUs = null
    set QUs = null
    set WUs = null
    set EUs = null
    set ZUs = null
endfunction
function PVi takes integer UVi, string IVi returns nothing
    set DSw[ASw] = IVi
    set ASw = ASw + 1
    call vwt(wm, f7[UVi], "when calling add in FateDestinyUnlocker, line 604")
    call J7i(R7[UVi], 12022., 6145.)
    call GZs(T7[UVi], true, "when calling setCommandsDisabled in FateDestinyUnlocker, line 606")
    set ASw = ASw - 1
endfunction
function p3t takes string b3t returns integer
    local integer y3t
    set DSw[ASw] = b3t
    set ASw = ASw + 1
    if NX == 0 then
        if MX < 32768 then
            set MX = MX + 1
            set y3t = MX
            set wC[y3t] = 1079
        else
            call tNr("Out of memory: Could not create CallbackSingle_doAfter_doAfter_addAction_JobAdvancementQuestHandler.", "when calling error in JobAdvancementQuestHandler, line 808")
            set y3t = 0
        endif
    else
        set NX = NX - 1
        set y3t = BX[NX]
        set wC[y3t] = 1079
    endif
    set ASw = ASw - 1
    return y3t
endfunction
function QSS takes integer FSS, string kSS returns nothing
    local unit jSS
    local item xSS
    local integer vSS
    local integer mSS
    set DSw[ASw] = kSS
    set ASw = ASw + 1
    set jSS = GetTriggerUnit()
    set xSS = GetOrderTargetItem()
    if xSS != null then
        set vSS = hgr(v9S(xSS))
        if xSS != null and vSS > Lh or(not GpS(px, Xdu(xSS), "when calling has in JobAdvancementQuestHandler, line 806")) or (not Jyr(ex, Xdu(xSS), "when calling has in JobAdvancementQuestHandler, line 806"))or wps(ex, Xdu(xSS), "when calling get in JobAdvancementQuestHandler, line 806") != hgr(eDs(jSS)) then
            call jXt(xSS, false)
            set mSS = p3t("when calling alloc_CallbackSingle_doAfter_doAfter_addAction_JobAdvancementQuestHandler in JobAdvancementQuestHandler, line 808")
            call RUs(mSS)
            set qww_4670[mSS] = xSS
            call Ybr(0., mSS, "when calling doAfter in JobAdvancementQuestHandler, line 808")
        endif
    endif
    set ASw = ASw - 1
    set jSS = null
    set xSS = null
endfunction
function Qhs takes integer mhs returns nothing
    call b9t(xiw[mhs])
endfunction
function G_u takes string T_u returns integer
    local integer Y_u
    set DSw[ASw] = T_u
    set ASw = ASw + 1
    if NX == 0 then
        if MX < 32768 then
            set MX = MX + 1
            set Y_u = MX
            set wC[Y_u] = 1086
        else
            call tNr("Out of memory: Could not create CallbackSingle_doAfter_doAfter_doAfter_JobAdvancementQuestHandler.", "when calling error in JobAdvancementQuestHandler, line 1053")
            set Y_u = 0
        endif
    else
        set NX = NX - 1
        set Y_u = BX[NX]
        set wC[Y_u] = 1086
    endif
    set ASw = ASw - 1
    return Y_u
endfunction
function T3r takes string f3r returns integer
    local integer R3r
    set DSw[ASw] = f3r
    set ASw = ASw + 1
    if NX == 0 then
        if MX < 32768 then
            set MX = MX + 1
            set R3r = MX
            set wC[R3r] = 894
        else
            call tNr("Out of memory: Could not create CallbackSingle_doAfter_JobAdvancementQuestHandler.", "when calling error in JobAdvancementQuestHandler, line 526")
            set R3r = 0
        endif
    else
        set NX = NX - 1
        set R3r = BX[NX]
        set wC[R3r] = 894
    endif
    set ASw = ASw - 1
    return R3r
endfunction
function lWi takes string iWi returns nothing
    local real SWi
    local real cWi
    local boolean oWi
    local integer OWi
    set DSw[ASw] = iWi
    set ASw = ASw + 1
    set SWi = GetFloatGameState(GAME_STATE_TIME_OF_DAY)
    set oWi = false
    if SWi >= 0. and SWi <= 0.99 then
        set cWi = SWi
        set cWi = SWi - cWi
        set cWi = 23. + cWi
        call Cheat(Iji("daylightsavings ", "when calling unObfuscate in JobAdvancementQuestHandler, line 521") + R2S(cWi))
    else
        set cWi = SWi - 1.
        call Cheat(Iji("daylightsavings ", "when calling unObfuscate in JobAdvancementQuestHandler, line 524") + R2S(cWi))
    endif
    set OWi = T3r("when calling alloc_CallbackSingle_doAfter_JobAdvancementQuestHandler in JobAdvancementQuestHandler, line 526")
    call RUs(OWi)
    set tww_4975[OWi] = SWi
    set iww_3859[OWi] = oWi
    call Ybr(1., OWi, "when calling doAfter in JobAdvancementQuestHandler, line 526")
    set ASw = ASw - 1
endfunction
function R2r takes integer n2r, string d2r returns nothing
    local integer f2r
    set DSw[ASw] = d2r
    set ASw = ASw + 1
    set MI = false
    call lWi("when calling detectSinglePlayer in JobAdvancementQuestHandler, line 1052")
    set f2r = G_u("when calling alloc_CallbackSingle_doAfter_doAfter_doAfter_JobAdvancementQuestHandler in JobAdvancementQuestHandler, line 1053")
    call RUs(f2r)
    call Ybr(2., f2r, "when calling doAfter in JobAdvancementQuestHandler, line 1053")
    set ASw = ASw - 1
endfunction
function REr takes string dEr returns integer
    local integer fEr
    set DSw[ASw] = dEr
    set ASw = ASw + 1
    if rC == 0 then
        if sC < 32768 then
            set sC = sC + 1
            set fEr = sC
            set tC[fEr] = 670
        else
            call tNr("Out of memory: Could not create CallbackCounted_doPeriodicallyTimed_doAfter_FateDestinyUnlocker.", "when calling error in FateDestinyUnlocker, line 473")
            set fEr = 0
        endif
    else
        set rC = rC - 1
        set fEr = uC[rC]
        set tC[fEr] = 670
    endif
    set ASw = ASw - 1
    return fEr
endfunction
function r4s takes string w4s returns integer
    local integer u4s
    set DSw[ASw] = w4s
    set ASw = ASw + 1
    if NX == 0 then
        if MX < 32768 then
            set MX = MX + 1
            set u4s = MX
            set wC[u4s] = 1057
        else
            call tNr("Out of memory: Could not create CallbackSingle_doAfter_doAfter_FateDestinyUnlocker.", "when calling error in FateDestinyUnlocker, line 482")
            set u4s = 0
        endif
    else
        set NX = NX - 1
        set u4s = BX[NX]
        set wC[u4s] = 1057
    endif
    set ASw = ASw - 1
    return u4s
endfunction
function RCs takes integer iCs, string SCs returns nothing
    local effect cCs
    local effect oCs
    local effect OCs
    local integer lCs
    local effect bCs
    local effect yCs
    local effect pCs
    local effect eCs
    local effect qCs
    local effect aCs
    local effect nCs
    local effect dCs
    local integer fCs
    set DSw[ASw] = SCs
    set ASw = ASw + 1
    if I6[iCs] != "" then
        set cCs = uSs(A6[iCs], D6[iCs], I6[iCs])
        call Wwu(cCs, H6[iCs])
        set oCs = cCs
        call iNw(oCs, .2)
        set OCs = oCs
        call rMw(OCs, J6[iCs], K6[iCs], L6[iCs])
        set P6[iCs] = OCs
        set lCs = REr("when calling alloc_CallbackCounted_doPeriodicallyTimed_doAfter_FateDestinyUnlocker in FateDestinyUnlocker, line 473")
        call Inr(lCs)
        set C6[lCs] = H6[iCs]
        set V6[lCs] = P6[iCs]
        set B6[lCs] = X6[iCs]
        call UYt(.05, 6., lCs, "when calling doPeriodicallyTimed in FateDestinyUnlocker, line 473")
    endif
    set yCs = uSs(A6[iCs], D6[iCs], "Abilities/Spells/Human/Resurrect/ResurrectCaster.mdl")
    call Wwu(yCs, 3.)
    set pCs = yCs
    call iNw(pCs, .5)
    set eCs = pCs
    call yYi(eCs, 10., "when calling destrAdvTimed in FateDestinyUnlocker, line 480")
    set bCs = eCs
    set aCs = uSs(A6[iCs], D6[iCs], "Abilities/Spells/Human/Resurrect/ResurrectTarget.mdl")
    call Wwu(aCs, 3.)
    set nCs = aCs
    call iNw(nCs, .5)
    set dCs = nCs
    call yYi(dCs, 10., "when calling destrAdvTimed in FateDestinyUnlocker, line 481")
    set qCs = dCs
    set fCs = r4s("when calling alloc_CallbackSingle_doAfter_doAfter_FateDestinyUnlocker in FateDestinyUnlocker, line 482")
    call RUs(fCs)
    set N6[fCs] = bCs
    set M6[fCs] = qCs
    call Ybr(1., fCs, "when calling doAfter in FateDestinyUnlocker, line 482")
    set ASw = ASw - 1
    set cCs = null
    set oCs = null
    set OCs = null
    set bCs = null
    set yCs = null
    set pCs = null
    set eCs = null
    set qCs = null
    set aCs = null
    set nCs = null
    set dCs = null
endfunction
function RGS takes integer fGS returns nothing
    call Y2r(D7[fGS])
endfunction
function RNi takes integer bNi returns nothing
    local trigger yNi = CreateTrigger()
    local trigger pNi
    local trigger eNi
    local trigger qNi
    local trigger aNi
    local trigger nNi
    local trigger dNi
    local trigger fNi
    call QYr(yNi, sF, null)
    set pNi = yNi
    call dUs(pNi, Condition(CUw))
    set eNi = pNi
    call B2S(eNi, VUw)
    set qNi = CreateTrigger()
    call l2w(qNi, EVENT_PLAYER_UNIT_SELL)
    set aNi = qNi
    call B2S(aNi, BUw)
    set nNi = XR
    call B2S(nNi, NUw)
    set dNi = MT
    call B2S(dNi, MUw)
    set fNi = wY
    call B2S(fNi, wIw)
    set yNi = null
    set pNi = null
    set eNi = null
    set qNi = null
    set aNi = null
    set nNi = null
    set dNi = null
    set fNi = null
endfunction
function RTS takes integer fTS returns nothing
    call dii("3", .8, eDs(L3[fTS]))
endfunction
function RXr takes integer fXr returns nothing
    call SelectUnit(ND, false)
    call SelectUnit(BD, false)
endfunction
function Rfu takes integer afu returns nothing
    local trigger nfu = CreateTrigger()
    local integer dfu = 0
    local integer ffu = Lh
    loop
        exitwhen dfu > ffu
        call QYr(nfu, Vx[dfu], null)
        set dfu = dfu + 1
    endloop
    call B2S(nfu, hUw)
    set nfu = null
endfunction
function Rku takes integer fku returns nothing
    if Zcr(aSw[fku]) then
        call D6i(nSw[fku])
    endif
endfunction
function Rvu takes integer fvu returns nothing
    set Sj = true
endfunction
function Rwr takes integer fwr returns nothing
    call dii("1", .8, eDs(V8[fwr]))
endfunction
function Rwt takes integer fwt returns nothing
    call Xau("Save-Load System loaded!", 1.5)
endfunction
function Rxu takes integer bxu, string yxu returns nothing
    local integer pxu
    local string exu
    local real qxu
    local real axu
    local integer nxu
    local unit dxu
    local real fxu
    set DSw[ASw] = yxu
    set ASw = ASw + 1
    if Zcr(lSw[bxu]) then
        set pxu = 0
        if yX != null and GpS(sX, Aei(lSw[bxu]), "when calling has in Voidless_mechanics, line 720") then
            set exu = nPr(wps(YX, bSw[bxu], "when calling get in Voidless_mechanics, line 721"), "when calling stringFromIndex in Voidless_mechanics, line 721")
            if vQt(exu) >= 0 and Dsi(exu, $00000000) == Dsi(nPr(wps(TX, bSw[bxu], "when calling get in Voidless_mechanics, line 723"), "when calling stringFromIndex in Voidless_mechanics, line 723"), $00000000) then
    call Hms(eX, $00000000, $000000FF, $00000000, $000000FF, ySw[bxu])
    set pxu = pxu + 1
            endif
            if vQt(exu) >= 1 and Dsi(exu, $00000001) == Dsi(nPr(wps(TX, bSw[bxu], "when calling get in Voidless_mechanics, line 726"), "when calling stringFromIndex in Voidless_mechanics, line 726"), $00000001) then
    call Hms(qX, $00000000, $000000FF, $00000000, $000000FF, ySw[bxu])
    set pxu = pxu + 1
            endif
            if vQt(exu) >= 2 and Dsi(exu, $00000002) == Dsi(nPr(wps(TX, bSw[bxu], "when calling get in Voidless_mechanics, line 729"), "when calling stringFromIndex in Voidless_mechanics, line 729"), $00000002) then
    call Hms(aX, $00000000, $000000FF, $00000000, $000000FF, ySw[bxu])
    set pxu = pxu + 1
            endif
            if vQt(exu) >= 3 and Dsi(exu, $00000003) == Dsi(nPr(wps(TX, bSw[bxu], "when calling get in Voidless_mechanics, line 732"), "when calling stringFromIndex in Voidless_mechanics, line 732"), $00000003) then
    call Hms(nX, $00000000, $000000FF, $00000000, $000000FF, ySw[bxu])
    set pxu = pxu + 1
            endif
            if vQt(exu) >= 4 and Dsi(exu, $00000004) == Dsi(nPr(wps(TX, bSw[bxu], "when calling get in Voidless_mechanics, line 735"), "when calling stringFromIndex in Voidless_mechanics, line 735"), $00000004) then
    call Hms(dX, $00000000, $000000FF, $00000000, $000000FF, ySw[bxu])
    set pxu = pxu + 1
            endif
        endif
        set fxu = pxu * 0.05
        if pxu == 5 then
            set axu = 2.
        else
            set axu = 1.
        endif
        set qxu = fxu * axu
        if GpS(sX, Aei(lSw[bxu]), "when calling has in Voidless_mechanics, line 741") then
            set nxu = gJi(uX, "when calling iterator in Voidless_mechanics, line 742")
            loop
    exitwhen not slr(nxu, "when calling hasNext in Voidless_mechanics, line 742")
    set dxu = iCu(Gjs(nxu, "when calling next in Voidless_mechanics, line 742"), "when calling unitFromIndex in Voidless_mechanics, line 742")
    if iCu(wps(uX, Aei(dxu), "when calling get in Voidless_mechanics, line 743"), "when calling unitFromIndex in Voidless_mechanics, line 743") == lSw[bxu]then
                    if Udi(dxu) >= aSr(dxu) * qxu then
                        call GYS(dxu, Udi(dxu) - aSr(dxu) * qxu)
                    else
                        call Tri(dxu)
                    endif
                    exitwhen true
    endif
            endloop
            call Ejr(nxu, "when calling close in Voidless_mechanics, line 742")
        endif
    endif
    set ASw = ASw - 1
    set dxu = null
endfunction
function S6r takes integer i6r returns nothing
    if ZSw[i6r] != null then
        call Q_s(ZSw[i6r], Yk)
        call Q_s(ZSw[i6r], Gk)
        call Q_s(ZSw[i6r], gk)
    endif
endfunction
function S9S takes integer i9S returns nothing
    call Xau(yF + "Welcome to " + aw + "!|r", 8.)
endfunction
function G_S takes nothing returns nothing
    call I7S(aZ)
    call I7S(nZ)
    call I7S(dZ)
    call I7S(fZ)
endfunction
function W5u takes string m5u returns integer
    local integer Q5u
    set DSw[ASw] = m5u
    set ASw = ASw + 1
    if PC == 0 then
        if AC < 32768 then
            set AC = AC + 1
            set Q5u = AC
            set DC[Q5u] = 714
        else
            call tNr("Out of memory: Could not create CallbackPeriodic_doPeriodically_doAfter_Imp3DragonFortress.", "when calling error in Imp3DragonFortress, line 1054")
            set Q5u = 0
        endif
    else
        set PC = PC - 1
        set Q5u = IC[PC]
        set DC[Q5u] = 714
    endif
    set ASw = ASw - 1
    return Q5u
endfunction
function erS takes string yrS returns integer
    local integer prS
    set DSw[ASw] = yrS
    set ASw = ASw + 1
    if PC == 0 then
        if AC < 32768 then
            set AC = AC + 1
            set prS = AC
            set DC[prS] = 681
        else
            call tNr("Out of memory: Could not create CallbackPeriodic_doPeriodically_Imp3DragonFortress.", "when calling error in Imp3DragonFortress, line 1197")
            set prS = 0
        endif
    else
        set PC = PC - 1
        set prS = IC[PC]
        set DC[prS] = 681
    endif
    set ASw = ASw - 1
    return prS
endfunction
function XMs takes unit WMs, real EMs, real ZMs, real UMs, real IMs, real PMs, real AMs, real DMs, string HMs returns nothing
    local real JMs
    local integer KMs
    local integer LMs
    set DSw[ASw] = HMs
    set ASw = ASw + 1
    set JMs = .95
    set KMs = 0
    set LMs = erS("when calling alloc_CallbackPeriodic_doPeriodically_Imp3DragonFortress in Imp3DragonFortress, line 1197")
    call kVu(LMs)
    set a9[LMs] = WMs
    set n9[LMs] = KMs
    set d9[LMs] = ZMs
    set f9[LMs] = JMs
    set R9[LMs] = IMs
    set T9[LMs] = DMs
    set Y9[LMs] = EMs
    set G9[LMs] = UMs
    set g9[LMs] = PMs
    set h9[LMs] = AMs
    call wcs(.5, LMs, "when calling doPeriodically in Imp3DragonFortress, line 1197")
    set ASw = ASw - 1
endfunction
function xVi takes location jVi returns nothing
    call RemoveLocation(jVi)
endfunction
function S9u takes integer r9u, string s9u returns nothing
    local unit t9u
    local integer i9u
    set DSw[ASw] = s9u
    set ASw = ASw + 1
    call G_S()
    set t9u = dps(aD[PLAYER_NEUTRAL_AGGRESSIVE], l2s(Iji("U00I", "when calling unObfuscate in Imp3DragonFortress, line 1047"), "when calling fromRawCode in Imp3DragonFortress, line 1047"), lOu(gZ), hcw, 270.)
    call Yis(t9u, $0000012C, false)
    set bZ = t9u
    call XMs(bZ, GetRandomReal(.81, .9), GetRandomReal(.7, .8), GetRandomReal(.6, .69), GetRandomReal(.4, .5), GetRandomReal(.3, .39), GetRandomReal(.21, .29), GetRandomReal(.1, .2), "when calling imp3FusionHydraLifeCheck in Imp3DragonFortress, line 1048")
    call DisplayTextToForce(Rc[$0000000C], "|cffffcc00Fusion Dragon|r: Soshite, kimi ima wa shinu.")
    call xVi(vo)
    if bZ != null and yXu(bZ) then
        set i9u = W5u("when calling alloc_CallbackPeriodic_doPeriodically_doAfter_Imp3DragonFortress in Imp3DragonFortress, line 1054")
        call kVu(i9u)
        call wcs(10., i9u, "when calling doPeriodically in Imp3DragonFortress, line 1054")
    endif
    set ASw = ASw - 1
    set t9u = null
endfunction
function SLs takes integer tLs, string iLs returns nothing
    set DSw[ASw] = iLs
    set ASw = ASw + 1
    if Jyr(rm, k7[tLs], "when calling has in FateDestinyUnlocker, line 644") then
        call DialogDestroy(hGi(wps(rm, k7[tLs], "when calling get in FateDestinyUnlocker, line 645"), "when calling dialogFromIndex in FateDestinyUnlocker, line 645"))
        call klS(rm, k7[tLs], "when calling remove in FateDestinyUnlocker, line 646")
        call Xrr("when calling playerReachedDestinyInDevGardenCleanup in FateDestinyUnlocker, line 648")
    endif
    set ASw = ASw - 1
endfunction
function SMw takes integer tMw returns nothing
    local lightning iMw = AddLightningEx("DRAM", true, w6[tMw], u6[tMw], r6[tMw], s6[tMw], t6[tMw], r6[tMw])
    call clu(iMw, i6[tMw], S6[tMw], c6[tMw], o6[tMw])
    set Nm = iMw
    set iMw = null
endfunction
function SNr takes integer iNr returns nothing
    call mhS(Yuw[iNr], "Stand")
endfunction
function S_i takes integer t_i, string i_i returns nothing
    set DSw[ASw] = i_i
    set ASw = ASw + 1
    if GpS(SP, M0w[t_i], "when calling has in JobAdvancementQuestHandler, line 442") then
        call eys(SP, M0w[t_i], "when calling remove in JobAdvancementQuestHandler, line 443")
    endif
    set ASw = ASw - 1
endfunction
function Sci takes integer ici returns nothing
    call Y2r(A7[ici])
endfunction
function s8S takes string u8S returns integer
    local integer r8S
    set DSw[ASw] = u8S
    set ASw = ASw + 1
    if NX == 0 then
        if MX < 32768 then
            set MX = MX + 1
            set r8S = MX
            set wC[r8S] = 979
        else
            call tNr("Out of memory: Could not create CallbackSingle_doAfter_Voidless_infotags.", "when calling error in Voidless_infotags, line 79")
            set r8S = 0
        endif
    else
        set NX = NX - 1
        set r8S = BX[NX]
        set wC[r8S] = 979
    endif
    set ASw = ASw - 1
    return r8S
endfunction
function Zvi takes string Qvi, string Wvi returns nothing
    local integer Evi
    set DSw[ASw] = Wvi
    set ASw = ASw + 1
    call Wrt(KL, SF + Qvi + eF)
    set AL = Qvi
    if Qvi != "" then
        set Evi = s8S("when calling alloc_CallbackSingle_doAfter_Voidless_infotags in Voidless_infotags, line 79")
        call RUs(Evi)
        set aiw[Evi] = Qvi
        call Ybr(6., Evi, "when calling doAfter in Voidless_infotags, line 79")
    endif
    set ASw = ASw - 1
endfunction
function Ses takes integer tes, string ies returns nothing
    set DSw[ASw] = ies
    set ASw = ASw + 1
    if aiw[tes] == AL then
        call Zvi("", "when calling updateMechanic in Voidless_infotags, line 81")
    endif
    set ASw = ASw - 1
endfunction
function rUs takes string wUs returns integer
    local integer uUs
    set DSw[ASw] = wUs
    set ASw = ASw + 1
    if NX == 0 then
        if MX < 32768 then
            set MX = MX + 1
            set uUs = MX
            set wC[uUs] = 1058
        else
            call tNr("Out of memory: Could not create CallbackSingle_doAfter_doAfter_FateDestinyUnlocker.", "when calling error in FateDestinyUnlocker, line 491")
            set uUs = 0
        endif
    else
        set NX = NX - 1
        set uUs = BX[NX]
        set wC[uUs] = 1058
    endif
    set ASw = ASw - 1
    return uUs
endfunction
function Sii takes integer Jti, string Kti returns nothing
    local real Lti
    local real Xti
    local effect Cti
    local effect Vti
    local effect Bti
    local effect Nti
    local effect Mti
    local effect wii
    local effect uii
    local effect rii
    local integer sii
    local real tii
    local real iii
    set DSw[ASw] = Kti
    set ASw = ASw + 1
    set tii = 12022.
    set iii = 6145.
    set Lti = tii
    set Xti = iii
    set Vti = uSs(Lti, Xti, "Abilities/Spells/Human/Resurrect/ResurrectCaster.mdl")
    call Wwu(Vti, 3.)
    set Bti = Vti
    call iNw(Bti, .5)
    set Nti = Bti
    call yYi(Nti, 10., "when calling destrAdvTimed in FateDestinyUnlocker, line 488")
    set Cti = Nti
    set wii = uSs(Lti, Xti, "Abilities/Spells/Human/Resurrect/ResurrectTarget.mdl")
    call Wwu(wii, 3.)
    set uii = wii
    call iNw(uii, .5)
    set rii = uii
    call yYi(rii, 10., "when calling destrAdvTimed in FateDestinyUnlocker, line 489")
    set Mti = rii
    set sii = rUs("when calling alloc_CallbackSingle_doAfter_doAfter_FateDestinyUnlocker in FateDestinyUnlocker, line 491")
    call RUs(sii)
    set w7[sii] = Cti
    set u7[sii] = Mti
    call Ybr(1., sii, "when calling doAfter in FateDestinyUnlocker, line 491")
    set ASw = ASw - 1
    set Cti = null
    set Vti = null
    set Bti = null
    set Nti = null
    set Mti = null
    set wii = null
    set uii = null
    set rii = null
endfunction
function Smi takes integer tmi returns nothing
    local lightning imi = AddLightningEx("DRAM", true, b5[tmi], y5[tmi], p5[tmi], e5[tmi], q5[tmi], p5[tmi])
    call clu(imi, a5[tmi], n5[tmi], d5[tmi], f5[tmi])
    set Xm = imi
    set imi = null
endfunction
function qXt takes string yXt returns nothing
    local integer pXt
    local integer eXt
    set DSw[ASw] = yXt
    set ASw = ASw + 1
    if not wP then
        set pXt = c5r(gQ, "when calling iterator in JobAdvancementQuestHandler, line 609")
        loop
            exitwhen not Tji(pXt)
            set eXt = LXi(pXt)
            call bKw(eXt)
            call GVw(OA, eXt, O_i(true), "when calling put in JobAdvancementQuestHandler, line 611")
            if not Jyr(nA, eXt, "when calling has in JobAdvancementQuestHandler, line 612") then
    call GVw(nA, eXt, $00000001, "when calling put in JobAdvancementQuestHandler, line 613")
            else
    call GVw(nA, eXt, wps(nA, eXt, "when calling get in JobAdvancementQuestHandler, line 615") + 1, "when calling put in JobAdvancementQuestHandler, line 615")
            endif
        endloop
        call vms(pXt, "when calling close in JobAdvancementQuestHandler, line 609")
        call Xgs(true, "when calling makeGameOver in JobAdvancementQuestHandler, line 616")
        call Ohr("when calling makeGameOver2 in JobAdvancementQuestHandler, line 617")
    endif
    set ou = true
    set ASw = ASw - 1
endfunction
function StS takes integer ttS, string itS returns nothing
    set DSw[ASw] = itS
    set ASw = ASw + 1
    call qXt("when calling magicVariableBool3_check in JobAdvancementQuestHandler, line 1040")
    set ASw = ASw - 1
endfunction
function TNs takes integer fNs, string RNs returns nothing
    set DSw[ASw] = RNs
    set ASw = ASw + 1
    call DisplayTextToForce(Rc[$0000000C], Iji("In the fury, dragon's are uncovering their secrets...", "when calling unObfuscate in Imp3DragonFortress, line 156"))
    set ASw = ASw - 1
endfunction
function lyS takes trigger OyS returns nothing
    call TriggerExecute(OyS)
endfunction
function TYr takes integer RYr returns nothing
    call lyS(dww_3353[RYr])
endfunction
function Tpi takes integer fpi, string Rpi returns nothing
    set DSw[ASw] = Rpi
    set ASw = ASw + 1
    if Jyr(nI, R0w[fpi], "when calling has in Items_Pickup_Drop, line 131") and s2r(wps(nI, R0w[fpi], "when calling get in Items_Pickup_Drop, line 131"), "when calling itemFromIndex in Items_Pickup_Drop, line 131") == T0w[fpi]then
        call klS(nI, R0w[fpi], "when calling remove in Items_Pickup_Drop, line 132")
    endif
    set ASw = ASw - 1
endfunction
function lGs takes string oGs returns integer
    local integer OGs
    set DSw[ASw] = oGs
    set ASw = ASw + 1
    if rC == 0 then
        if sC < 32768 then
            set sC = sC + 1
            set OGs = sC
            set tC[OGs] = 658
        else
            call tNr("Out of memory: Could not create CallbackCounted_doPeriodicallyCounted_doAfter_Imp4.", "when calling error in Imp4, line 515")
            set OGs = 0
        endif
    else
        set rC = rC - 1
        set OGs = uC[rC]
        set tC[OGs] = 658
    endif
    set ASw = ASw - 1
    return OGs
endfunction
function TuS takes integer puS, string euS returns nothing
    local integer quS
    local group auS
    local group nuS
    local unit duS
    local real fuS
    local real RuS
    set DSw[ASw] = euS
    set ASw = ASw + 1
    if hPs(fc[BZ]) != 0 then
        set quS = lGs("when calling alloc_CallbackCounted_doPeriodicallyCounted_doAfter_Imp4 in Imp4, line 515")
        call Inr(quS)
        set fuS = M9[puS]
        set RuS = w0w[puS]
        set t0w[quS] = fuS
        set i0w[quS] = RuS
        call l5s(.05, $00000064, quS, "when calling doPeriodicallyCounted in Imp4, line 515")
        set auS = LLt(M9[puS], w0w[puS], gU, "when calling getUnitsInRange in Imp4, line 520")
        set nuS = XbS(auS)
        loop
            exitwhen not hJw(nuS)
            set duS = tPr(nuS)
            if J_i(fc[BZ], duS) then
    call pvu(duS, u0w[puS], r0w[puS] - s0w[puS], "when calling applySlowTimed in Imp4, line 523")
    call CJi(duS, JU, KU, r0w[puS] - s0w[puS], "when calling applyBuffTimed in Imp4, line 524")
            endif
        endloop
        call lxs(nuS)
        call Sju(auS, "when calling release in Imp4, line 525")
    endif
    set ASw = ASw - 1
    set auS = null
    set nuS = null
    set duS = null
endfunction
function Tus takes integer fus, string Rus returns nothing
    set DSw[ASw] = Rus
    set ASw = ASw + 1
    call Rxi("when calling voidlessReset in Voidless, line 451")
    set ASw = ASw - 1
endfunction
function CSi takes integer LSi, string XSi returns nothing
    set DSw[ASw] = XSi
    set ASw = ASw + 1
    if bB[LSi] == 0 then
        call tNr("Double free: object of type FText", "when calling error in FText, line 64")
    else
        set oB[OB] = LSi
        set OB = OB + 1
        set bB[LSi] = 0
    endif
    set ASw = ASw - 1
endfunction
function JNs takes integer HNs returns nothing
    set Wv = Wv - 1
    if HNs != mv then
        set Q4[m4[HNs]] = Q4[HNs]
    else
        set mv = Q4[HNs]
    endif
    if HNs != Qv then
        set m4[Q4[HNs]] = m4[HNs]
    else
        set Qv = m4[HNs]
    endif
endfunction
function I8S takes integer Z8S, string U8S returns nothing
    set DSw[ASw] = U8S
    set ASw = ASw + 1
    if bB[Z8S] == 0 then
        if Z8S == 0 then
            call tNr("Nullpointer exception when calling FText.remove", "when calling error in LinkedListModule, line 37")
        else
            call tNr("Called FText.remove on invalid object.", "when calling error in LinkedListModule, line 37")
        endif
    endif
    call JNs(Z8S)
    set ASw = ASw - 1
endfunction
function kTS takes texttag FTS returns nothing
    call DestroyTextTag(FTS)
endfunction
function E6S takes integer Q6S, string W6S returns nothing
    set DSw[ASw] = W6S
    set ASw = ASw + 1
    if k4[Q6S] != null then
        call kTS(k4[Q6S])
        set k4[Q6S] = null
    endif
    call I8S(Q6S, "when calling remove in LinkedListModule, line 49")
    set ASw = ASw - 1
endfunction
function hSS takes integer GSS, string gSS returns nothing
    set DSw[ASw] = gSS
    set ASw = ASw + 1
    call E6S(GSS, "when calling FText_onDestroy in FText, line 74")
    call CSi(GSS, "when calling dealloc_FText in FText, line 74")
    set ASw = ASw - 1
endfunction
function U5s takes integer E5s, string Z5s returns nothing
    set DSw[ASw] = Z5s
    set ASw = ASw + 1
    if bB[E5s] == 0 then
        if E5s == 0 then
            call tNr("Nullpointer exception when calling FText.FText", "when calling error in FText, line 64")
        else
            call tNr("Called FText.FText on invalid object.", "when calling error in FText, line 64")
        endif
    endif
    call hSS(E5s, "when calling destroyFText in FText, line 64")
    set ASw = ASw - 1
endfunction
function fFS takes integer eFS, string qFS returns nothing
    local texttag aFS
    local texttag nFS
    local texttag dFS
    set DSw[ASw] = qFS
    set ASw = ASw + 1
    set v4[eFS] = 0
    set x4[eFS] = 0.
    if j4[eFS]then
        call U5s(eFS, "when calling dispatch_FText_destroyFText in FText, line 83")
    else
        set aFS = k4[eFS]
        call FBu(aFS, false)
        set nFS = aFS
        call fYu(nFS, Qh, Wh, Eh, Zh)
        set dFS = nFS
        call BFS(dFS, "", 0.)
        call vwt(vv, eFS, "when calling add in FText, line 88")
    endif
    set ASw = ASw - 1
    set aFS = null
    set nFS = null
    set dFS = null
endfunction
function J7u takes integer D7u, string H7u returns nothing
    set DSw[ASw] = H7u
    set ASw = ASw + 1
    if bB[D7u] == 0 then
        if D7u == 0 then
            call tNr("Nullpointer exception when calling FText.recycle", "when calling error in FText, line 79")
        else
            call tNr("Called FText.recycle on invalid object.", "when calling error in FText, line 79")
        endif
    endif
    call fFS(D7u, "when calling recycle in FText, line 79")
    set ASw = ASw - 1
endfunction
function Tys takes integer fys, string Rys returns nothing
    set DSw[ASw] = Rys
    set ASw = ASw + 1
    call J7u(W4[fys], "when calling recycle in FText, line 111")
    set ASw = ASw - 1
endfunction
function UBi takes integer EBi, string ZBi returns nothing
    set DSw[ASw] = ZBi
    set ASw = ASw + 1
    call klS(OA, sww_4874[EBi], "when calling remove in JobAdvancementQuestHandler, line 492")
    if GpS(aP, sww_4874[EBi], "when calling has in JobAdvancementQuestHandler, line 493") then
        call eys(aP, sww_4874[EBi], "when calling remove in JobAdvancementQuestHandler, line 494")
    endif
    set ASw = ASw - 1
endfunction
function BMw takes code CMw returns nothing
    local conditionfunc VMw = Condition(CMw)
    call dUs(qj, VMw)
    set pj[ej] = VMw
    set ej = ej + 1
    set VMw = null
endfunction
function UCu takes integer ECu, string ZCu returns nothing
    set DSw[ASw] = ZCu
    set ASw = ASw + 1
    call v0t(Iji("651", "when calling unObfuscate in DDS, line 122"))
    call v0t(Iji("1397", "when calling unObfuscate in DDS, line 123"))
    call v0t(Iji("9741", "when calling unObfuscate in DDS, line 124"))
    call v0t(Iji("71651", "when calling unObfuscate in DDS, line 125"))
    call v0t(Iji("197631", "when calling unObfuscate in DDS, line 126"))
    call v0t(Iji("0.51", "when calling unObfuscate in DDS, line 127"))
    call v0t(Iji("1.5", "when calling unObfuscate in DDS, line 128"))
    call v0t(Iji("91", "when calling unObfuscate in DDS, line 129"))
    call v0t(Iji("4.77", "when calling unObfuscate in DDS, line 130"))
    call v0t(Iji("36.5", "when calling unObfuscate in DDS, line 131"))
    call v0t(Iji("9.12", "when calling unObfuscate in DDS, line 132"))
    call v0t(Iji("4.72", "when calling unObfuscate in DDS, line 133"))
    call v0t(Iji("9.14", "when calling unObfuscate in DDS, line 134"))
    call v0t(Iji("5.74", "when calling unObfuscate in DDS, line 135"))
    call v0t(Iji("1.5", "when calling unObfuscate in DDS, line 136"))
    call BMw(oZw)
    set ASw = ASw - 1
endfunction
function UJt takes integer EJt, string ZJt returns nothing
    set DSw[ASw] = ZJt
    set ASw = ASw + 1
    if not yXu(p8[EJt]) then
        call RHt(p8[EJt], e8[EJt], q8[EJt], "when calling reviveHeroParams in HeroRevive, line 159")
    endif
    set ASw = ASw - 1
endfunction
function UMw takes integer EMw, string ZMw returns nothing
    set DSw[ASw] = ZMw
    set ASw = ASw + 1
    if Puw[EMw] != null and yXu(Puw[EMw]) and XYt(ANw(Puw[EMw]), XSw, AA) then
        call dii(Iji("See you later ...", "when calling unObfuscate in NpcTalking, line 308"), 8., Auw[EMw])
        call xvu(Puw[EMw], Iji("stop", "when calling unObfuscate in NpcTalking, line 309"))
        call v0r(Puw[EMw], false)
        call qaS(Puw[EMw])
        call Tri(Puw[EMw])
    endif
    call GZs(Duw[EMw], false, "when calling setCommandsDisabled in NpcTalking, line 313")
    set ASw = ASw - 1
endfunction
function Uei takes integer Zei returns nothing
    call uRi(V7[Zei])
endfunction
function Uer takes integer Zer returns nothing
    if not yXu(a8[Zer]) then
        call dii("Your hero was captured by the void. Try to ask the angels to bring it back by typing -revive.", 20., eDs(a8[Zer]))
    endif
endfunction
function Uwi takes integer awi, string nwi returns nothing
    local real dwi
    local real fwi
    local real Rwi
    local real Twi
    local real Ywi
    local real Gwi
    local unit gwi
    local unit hwi
    local real Fwi
    local real kwi
    local real jwi
    local real xwi
    local real vwi
    local real mwi
    local real Qwi
    local real Wwi
    local real Ewi
    local real Zwi
    set DSw[ASw] = nwi
    set ASw = ASw + 1
    if B7[awi]then
        set Fwi = Hr[aKr(N7[awi])]
        set kwi = Jr[aKr(N7[awi])]
        set Ywi = Fwi
        set Gwi = kwi
    else
        if M7[awi]then
            set jwi = Sr[aKr(N7[awi])]
            set xwi = cr[aKr(N7[awi])]
            set Rwi = jwi
            set Twi = xwi
        else
            set vwi = LJ
            set mwi = XJ
            set Rwi = vwi
            set Twi = mwi
        endif
        set Qwi = Rwi
        set Wwi = Twi
        set Ywi = Qwi
        set Gwi = Wwi
    endif
    set Ewi = Ywi
    set Zwi = Gwi
    set dwi = Ewi
    set fwi = Zwi
    if dwi != LJ or fwi != XJ and(not XYt(dwi, fwi, jQ)) then
        set hwi = dps(aD[PLAYER_NEUTRAL_AGGRESSIVE], r5S(N7[awi]), dwi, fwi, GetRandomReal(0., 360.) * JG)
        call tFr(hwi, aKr(N7[awi]))
        set gwi = hwi
        if B7[awi]then
            call Yis(gwi, wps(kQ, r5S(N7[awi]), "when calling get in GenericUnitRespawn, line 57"), false)
        endif
        call uFr(N7[awi])
    endif
    set ASw = ASw - 1
    set gwi = null
    set hwi = null
endfunction
function V6t takes integer J6t, string K6t returns nothing
    local effect L6t
    local effect X6t
    local effect C6t
    set DSw[ASw] = K6t
    set ASw = ASw + 1
    set L6t = DpS("war3mapImported\\chronosphere.mdl", AOS(k9[J6t], 100.), qcw, acw)
    call Wwu(L6t, 5.)
    set X6t = L6t
    call iNw(X6t, .2)
    set C6t = X6t
    call yYi(C6t, 4., "when calling destrAdvTimed in Imp3DragonFortress, line 1305")
    set WZ = false
    call p5s(Rc[$0000000C], LZw)
    set ASw = ASw - 1
    set L6t = null
    set X6t = null
    set C6t = null
endfunction
function kgs takes real ogs, real Ogs, real lgs, string bgs, real ygs, real pgs, integer egs, integer qgs, integer ags, integer ngs, player dgs, string fgs returns integer
    local real Rgs
    local real Tgs
    local real Ygs
    local boolean Ggs
    local integer ggs
    local integer hgs
    local integer Fgs
    set DSw[ASw] = fgs
    set ASw = ASw + 1
    set Rgs = 200.0
    set Tgs = 5.5 * 5.
    set Ygs = RMinBJ(StringLength(bgs) * Tgs, Rgs)
    set ggs = ADi(ogs - Ygs, Ogs, lgs, 0., 0., 0., bgs, ygs, pgs, egs, qgs, ags, ngs, "when calling new_TextTagEntity in TextTagUtils, line 57")
    set Fgs = ggs
    if dgs == null then
        set Ggs = true
    else
        set Ggs = nD == dgs
    endif
    call kXi(Fgs, Ggs)
    set hgs = ggs
    set ASw = ASw - 1
    return hgs
endfunction
function VCs takes integer LCs, string XCs returns integer
    local integer CCs
    set DSw[ASw] = XCs
    set ASw = ASw + 1
    set CCs = kgs(om, Om, 10., s2[LCs] + ": " + jm, 10., t2[LCs], $000000FF, $000000FF, $000000FF, $00000000, i2[LCs], "when calling _CreateTTExEntityShift in FateDestinyUnlocker, line 260")
    set ASw = ASw - 1
    return CCs
endfunction
function VJt takes integer DJt, string HJt returns nothing
    local effect JJt
    local effect KJt
    local effect LJt
    local effect XJt
    local effect CJt
    set DSw[ASw] = HJt
    set ASw = ASw + 1
    set JJt = k6[DJt]
    call ZIr(JJt, j6[DJt], x6[DJt], v6[DJt], m6[DJt])
    set KJt = JJt
    call vQs(KJt, wor(Q6[DJt], W6[DJt]) + 200.)
    set LJt = KJt
    call Wwu(LJt, 8.)
    set XJt = LJt
    call yYi(XJt, SQ, "when calling destrAdvTimed in FateDestinyUnlocker, line 461")
    set CJt = XJt
    call iNw(CJt, .1)
    set ASw = ASw - 1
    set JJt = null
    set KJt = null
    set LJt = null
    set XJt = null
    set CJt = null
endfunction
function VWi takes integer XWi returns nothing
    local trigger CWi = CreateTrigger()
    call QYr(CWi, K2S(bj_mapInitialPlayableArea), null)
    call B2S(CWi, FUw)
    set CWi = null
endfunction
function VWu takes integer XWu, string CWu returns nothing
    set DSw[ASw] = CWu
    set ASw = ASw + 1
    call DisplayTextToForce(Rc[$0000000C], Iji("|cffffcc00Dragon of Pure Darkness|r: Muchi na orokamono...", "when calling unObfuscate in Imp3DragonFortress, line 1014"))
    set ASw = ASw - 1
endfunction
function Vbr takes integer Xbr, string Cbr returns nothing
    set DSw[ASw] = Cbr
    set ASw = ASw + 1
    call eys(Og, Aei(AN[Xbr]), "when calling remove in Archsage_WhiteWhizard_ArcaneManaBond, line 111")
    set ASw = ASw - 1
endfunction
function Vot takes integer Jot, string Kot returns nothing
    local unit Lot
    local item Xot
    local item Cot
    set DSw[ASw] = Kot
    set ASw = ASw + 1
    set Lot = hqs(xMi(y1[Jot], "when calling getCHero in DungeonCmds, line 668"), "when calling getHero in DungeonCmds, line 668")
    if p1[Jot] == l2s(Iji("I05O", "when calling unObfuscate in DungeonCmds, line 670"), "when calling fromRawCode in DungeonCmds, line 670") then
        if not c8w(Lot, l2s(Iji("I05H", "when calling unObfuscate in DungeonCmds, line 671"), "when calling fromRawCode in DungeonCmds, line 671")) then
            set p1[Jot] = l2s(Iji("I05H", "when calling unObfuscate in DungeonCmds, line 672"), "when calling fromRawCode in DungeonCmds, line 672")
        endif
    elseif p1[Jot] == l2s(Iji("I05H", "when calling unObfuscate in DungeonCmds, line 674"), "when calling fromRawCode in DungeonCmds, line 674") then
        if c8w(Lot, l2s(Iji("I05H", "when calling unObfuscate in DungeonCmds, line 675"), "when calling fromRawCode in DungeonCmds, line 675")) then
            set p1[Jot] = l2s(Iji("I05O", "when calling unObfuscate in DungeonCmds, line 676"), "when calling fromRawCode in DungeonCmds, line 676")
        endif
    endif
    if PW and e1[Jot] == fx then
        if (not c8w(Lot, l2s(Iji("I05O", "when calling unObfuscate in DungeonCmds, line 678"), "when calling fromRawCode in DungeonCmds, line 678")))and(not c8w(Lot, k6w("38608548668560171785", "when calling unObfuscateInt in DungeonCmds, line 678"))) then
            set p1[Jot] = l2s(Iji("I05O", "when calling unObfuscate in DungeonCmds, line 679"), "when calling fromRawCode in DungeonCmds, line 679")
        endif
    endif
    call vwt(Zx, q1[Jot], "when calling add in DungeonCmds, line 680")
    set Cot = CreateItemLoc(p1[Jot], br[1 + q1[Jot]])
    call IOt(Cot, a1[Jot], false)
    set Xot = Cot
    call vwt(px, Xdu(Xot), "when calling add in DungeonCmds, line 682")
    call GVw(ex, Xdu(Xot), q1[Jot], "when calling put in DungeonCmds, line 683")
    call eys(Zx, q1[Jot], "when calling remove in DungeonCmds, line 684")
    if Xot != null and GpS(Cx, q3t(Xot), "when calling has in DungeonCmds, line 686") then
        call Xau(Iji("|cffffcc00Congratulations, player ", "when calling unObfuscate in DungeonCmds, line 687") + ZXr(a1[Jot]) + Iji(" has received a godly item - |r|cffff0000", "when calling unObfuscate in DungeonCmds, line 687") + XRt(Xot) + "!|r", 10.)
        call GVw(ax, q1[Jot], xw, "when calling put in DungeonCmds, line 688")
    endif
    set ASw = ASw - 1
    set Lot = null
    set Xot = null
    set Cot = null
endfunction
function WBi takes integer xBi, string vBi returns nothing
    local integer mBi
    local integer QBi
    set DSw[ASw] = vBi
    set ASw = ASw + 1
    set wP = true
    set uP = true
    if GetFloatGameState(GAME_STATE_TIME_OF_DAY) < oww_4466[xBi]then
        set Oww_1610[xBi] = true
    else
        set Oww_1610[xBi] = false
        call SetFloatGameState(GAME_STATE_TIME_OF_DAY, oww_4466[xBi])
    endif
    if Oww_1610[xBi]then
        set mBi = c5r(gQ, "when calling iterator in JobAdvancementQuestHandler, line 569")
        loop
            exitwhen not Tji(mBi)
            set QBi = LXi(mBi)
            call bKw(QBi)
            call GVw(OA, QBi, O_i(true), "when calling put in JobAdvancementQuestHandler, line 571")
            if not Jyr(nA, QBi, "when calling has in JobAdvancementQuestHandler, line 572") then
    call GVw(nA, QBi, $00000001, "when calling put in JobAdvancementQuestHandler, line 573")
            else
    call GVw(nA, QBi, wps(nA, QBi, "when calling get in JobAdvancementQuestHandler, line 575") + 1, "when calling put in JobAdvancementQuestHandler, line 575")
            endif
        endloop
        call vms(mBi, "when calling close in JobAdvancementQuestHandler, line 569")
        call Xgs(true, "when calling makeGameOver in JobAdvancementQuestHandler, line 576")
        call Ohr("when calling makeGameOver2 in JobAdvancementQuestHandler, line 577")
    endif
    set ASw = ASw - 1
endfunction
function WLu takes integer QLu returns nothing
    call Xau("Enemies and Dungeons loaded!", 1.5)
endfunction
function W_u takes integer Q_u returns nothing
    call PlaySoundAtPointBJ(CreateSound("Sound/Interface/UpkeepRing.wav", false, true, true, $0000000A, $0000000A, "DefaultEAXON"), 150., N3[Q_u], 50.)
    call xVi(N3[Q_u])
endfunction
function Wit takes integer mit, string Qit returns nothing
    set DSw[ASw] = Qit
    set ASw = ASw + 1
    if Kh then
        call FDt(Iji("|c00FF0000SaveSystem|r is disabled in developement mode and needs to be unlocked!", "when calling unObfuscate in NpcHandler, line 810"))
    endif
    set ASw = ASw - 1
endfunction
function Wjs takes integer xjs, string vjs returns nothing
    local integer mjs
    local integer Qjs
    set DSw[ASw] = vjs
    set ASw = ASw + 1
    set mjs = c5r(gQ, "when calling iterator in Inspirit_Overvelde, line 127")
    loop
        exitwhen not Tji(mjs)
        set Qjs = LXi(mjs)
        call GVw(OI, Qjs, $00000000, "when calling put in Inspirit_Overvelde, line 128")
    endloop
    call vms(mjs, "when calling close in Inspirit_Overvelde, line 127")
    set ASw = ASw - 1
endfunction
function Wlr takes integer klr, string jlr returns nothing
    local effect xlr
    local effect vlr
    local effect mlr
    local effect Qlr
    set DSw[ASw] = jlr
    set ASw = ASw + 1
    call DisplayTextToForce(Rc[$0000000C], "|cffffcc00" + GetPlayerName(ForcePickRandomPlayer(Rc[$0000000C])) + "|r:" + Iji("What the...?! They're...they're fusing!", "when calling unObfuscate in Imp3DragonFortress, line 1030"))
    set xlr = vht("Abilities/Spells/Human/Resurrect/ResurrectTarget.mdl", lOu(gZ), hcw)
    call yYi(xlr, 5., "when calling destrAdvTimed in Imp3DragonFortress, line 1032")
    set vlr = xlr
    call vQs(vlr, wor(lOu(gZ), hcw))
    set mlr = vlr
    call Wwu(mlr, 6.)
    set Qlr = mlr
    call iNw(Qlr, 0.5)
    set ASw = ASw - 1
    set xlr = null
    set vlr = null
    set mlr = null
    set Qlr = null
endfunction
function Wqu takes integer Qqu returns nothing
    call b9t(Km)
    call b9t(Lm)
    call b9t(Xm)
    call b9t(Cm)
    call b9t(Vm)
    call b9t(Bm)
    call b9t(Nm)
    call b9t(Mm)
    call b9t(wQ)
    call b9t(uQ)
    call uRi(i7[Qqu])
    call xvu(S7[Qqu], "stop")
    call qaS(S7[Qqu])
    call v0r(S7[Qqu], false)
endfunction
function Wrr takes integer mrr, string Qrr returns nothing
    set DSw[ASw] = Qrr
    set ASw = ASw + 1
    call GVw(ZX, USw[mrr], O_i(true), "when calling put in Whirlwind_Effect, line 42")
    set ASw = ASw - 1
endfunction
function Wxi takes integer mxi, string Qxi returns nothing
    set DSw[ASw] = Qxi
    set ASw = ASw + 1
    call eys(aH, Urw[mxi], "when calling remove in Rh_Effect, line 40")
    set ASw = ASw - 1
endfunction
function lMr takes item OMr returns boolean
    return IsItemPawnable(OMr)
endfunction
function X3i takes integer K3i, string L3i returns nothing
    set DSw[ASw] = L3i
    set ASw = ASw + 1
    if (not Jyr(ex, Xdu(bww_3149[K3i]), "when calling has in JobAdvancementQuestHandler, line 754"))or(Jyr(ex, Xdu(bww_3149[K3i]), "when calling has in JobAdvancementQuestHandler, line 754") and wps(ex, Xdu(bww_3149[K3i]), "when calling get in JobAdvancementQuestHandler, line 754") != yww_5483[K3i] and SMr(pww_4568[K3i], bww_3149[K3i]) and ofi(pww_4568[K3i], eww_3455[K3i]) == bww_3149[K3i] and lMr(bww_3149[K3i])) then
        call Lxu(pww_4568[K3i], "when calling ac_addRandomDebuff in JobAdvancementQuestHandler, line 755")
    endif
    set ASw = ASw - 1
endfunction
function X4r takes integer L4r returns nothing
    call Tri(b9[L4r])
endfunction
function C_s takes string L_s returns integer
    local integer X_s
    set DSw[ASw] = L_s
    set ASw = ASw + 1
    if NX == 0 then
        if MX < 32768 then
            set MX = MX + 1
            set X_s = MX
            set wC[X_s] = 1065
        else
            call tNr("Out of memory: Could not create CallbackSingle_doAfter_doAfter_JobAdvancementQuestHandler.", "when calling error in JobAdvancementQuestHandler, line 1050")
            set X_s = 0
        endif
    else
        set NX = NX - 1
        set X_s = BX[NX]
        set wC[X_s] = 1065
    endif
    set ASw = ASw - 1
    return X_s
endfunction
function X7t takes integer J7t, string K7t returns nothing
    local integer L7t
    set DSw[ASw] = K7t
    set ASw = ASw + 1
    set L7t = C_s("when calling alloc_CallbackSingle_doAfter_doAfter_JobAdvancementQuestHandler in JobAdvancementQuestHandler, line 1050")
    call RUs(L7t)
    call Ybr(18., L7t, "when calling doAfter in JobAdvancementQuestHandler, line 1050")
    set ASw = ASw - 1
endfunction
function X8w takes integer L8w returns nothing
    set EW =- 1
    call dii("Ready to run tah again.", 3., m9[L8w])
    call Z7t(fc[$0000000C], Q9[L8w])
    call yLt(Rc[$0000000C], eDs(Q9[L8w]))
endfunction
function XSu takes integer KSu, string LSu returns nothing
    set DSw[ASw] = LSu
    set ASw = ASw + 1
    if GpS(px, Xdu(lww_4163[KSu]), "when calling has in JobAdvancementQuestHandler, line 716") then
        call eys(px, Xdu(lww_4163[KSu]), "when calling remove in JobAdvancementQuestHandler, line 717")
    endif
    set ASw = ASw - 1
endfunction
function XXu takes integer KXu, string LXu returns nothing
    set DSw[ASw] = LXu
    set ASw = ASw + 1
    call eys(Cv, x7[KXu], "when calling remove in FateDestinyUnlocker, line 661")
    set ASw = ASw - 1
endfunction
function XdS takes integer HdS, string JdS returns nothing
    local integer KdS
    local integer LdS
    set DSw[ASw] = JdS
    set ASw = ASw + 1
    set KdS = c5r(gQ, "when calling iterator in WorldBoss_quests, line 100")
    loop
        exitwhen not Tji(KdS)
        set LdS = LXi(KdS)
        call r_u(PSw[HdS], aD[LdS], EVENT_PLAYER_UNIT_ISSUED_TARGET_ORDER, null)
    endloop
    call vms(KdS, "when calling close in WorldBoss_quests, line 100")
    call B2S(PSw[HdS], yIw)
    set ASw = ASw - 1
endfunction
function Xir takes integer Lir returns nothing
    if c3[Lir] != null and gSr(c3[Lir], $41304358) then
        call Q_s(c3[Lir], $41304358)
    endif
endfunction
function Xju takes integer Jju, string Kju returns integer
    local integer Lju
    set DSw[ASw] = Kju
    set ASw = ASw + 1
    set Lju = kgs(lm, bm, 10., B4[Jju] + Fm, 10., N4[Jju], $000000FF, $000000FF, $000000FF, $00000000, M4[Jju], "when calling _CreateTTExEntityShift in FateDestinyUnlocker, line 254")
    set ASw = ASw - 1
    return Lju
endfunction
function FEs takes string gEs returns nothing
    local unit hEs
    set DSw[ASw] = gEs
    set ASw = ASw + 1
    set hEs = GetKillingUnit()
    if hEs != null and GpS(gQ, hgr(eDs(hEs)), "when calling has in JobAdvancementQuestHandler, line 141") then
        if mks(hEs, $00000001) > k6w("909090908317", "when calling unObfuscateInt in JobAdvancementQuestHandler, line 142") or Q7t(hEs, true) > k6w("9090908317", "when calling unObfuscateInt in JobAdvancementQuestHandler, line 143") or Ges(hEs) > k6w("909090909048", "when calling unObfuscateInt in JobAdvancementQuestHandler, line 144") or JHt(hEs, true) > k6w("9090908317", "when calling unObfuscateInt in JobAdvancementQuestHandler, line 145") or aSr(hEs) > k6w("909090909048", "when calling unObfuscateInt in JobAdvancementQuestHandler, line 146") or str(hEs, true) > k6w("9090908317", "when calling unObfuscateInt in JobAdvancementQuestHandler, line 147") then
            if hEs != null then
    call GYS(hEs, xvt(k6w("909085", "when calling unObfuscateInt in JobAdvancementQuestHandler, line 151")))
    call YYu(hEs, k6w("909085", "when calling unObfuscateInt in JobAdvancementQuestHandler, line 152"))
            endif
            call dii(Iji("Your actions seems to come from hacking! You are a fool!  ", "when calling unObfuscate in JobAdvancementQuestHandler, line 153"), 5., eDs(hEs))
        endif
    endif
    set Mw = true
    set ASw = ASw - 1
    set hEs = null
endfunction
function jgr takes string Fgr returns nothing
    local unit kgr
    set DSw[ASw] = Fgr
    set ASw = ASw + 1
    set kgr = GetKillingUnit()
    if kgr != null and GpS(gQ, hgr(eDs(kgr)), "when calling has in JobAdvancementQuestHandler, line 103") then
        if aSr(kgr) > k6w("909090909048", "when calling unObfuscateInt in JobAdvancementQuestHandler, line 104") or Ges(kgr) > k6w("909090909048", "when calling unObfuscateInt in JobAdvancementQuestHandler, line 105") or mks(kgr, $00000001) > k6w("909090908317", "when calling unObfuscateInt in JobAdvancementQuestHandler, line 106") or str(kgr, true) > k6w("9090908317", "when calling unObfuscateInt in JobAdvancementQuestHandler, line 107") or Q7t(kgr, true) > k6w("9090908317", "when calling unObfuscateInt in JobAdvancementQuestHandler, line 108") or JHt(kgr, true) > k6w("9090908317", "when calling unObfuscateInt in JobAdvancementQuestHandler, line 109") then
            if kgr != null then
    call Tri(kgr)
            endif
            call dii(Iji("Your actions seems to come from hacking! You are a fool!", "when calling unObfuscate in JobAdvancementQuestHandler, line 114"), 5., eDs(kgr))
        endif
    endif
    set Bw = true
    set ASw = ASw - 1
    set kgr = null
endfunction
function nXs takes string qXs returns nothing
    local unit aXs
    set DSw[ASw] = qXs
    set ASw = ASw + 1
    set aXs = GetKillingUnit()
    if aXs != null and GpS(gQ, hgr(eDs(aXs)), "when calling has in JobAdvancementQuestHandler, line 161") then
        if ONt(aXs) > k6w("9090908317", "when calling unObfuscateInt in JobAdvancementQuestHandler, line 162") or ONt(aXs) < k6w("909090831742", "when calling unObfuscateInt in JobAdvancementQuestHandler, line 162") and(not(gSr(aXs, k6w("66608366836690858585", "when calling unObfuscateInt in JobAdvancementQuestHandler, line 163")) or gSr(aXs, k6w("38292966836690858585", "when calling unObfuscateInt in JobAdvancementQuestHandler, line 163")) or gSr(aXs, k6w("83171717384829609085", "when calling unObfuscateInt in JobAdvancementQuestHandler, line 164")) or gSr(aXs, k6w("48171717384829609085", "when calling unObfuscateInt in JobAdvancementQuestHandler, line 164")) or gSr(aXs, k6w("17608585292983609085", "when calling unObfuscateInt in JobAdvancementQuestHandler, line 164")))) then
            if aXs != null then
    call GYS(aXs, xvt(k6w("909085", "when calling unObfuscateInt in JobAdvancementQuestHandler, line 168")))
    call YYu(aXs, k6w("909085", "when calling unObfuscateInt in JobAdvancementQuestHandler, line 169"))
            endif
            call dii(Iji("Your actions seems to come from hacking! You are a fool!   ", "when calling unObfuscate in JobAdvancementQuestHandler, line 170"), 5., eDs(aXs))
        endif
    endif
    set wu = true
    set ASw = ASw - 1
    set aXs = null
endfunction
function uhs takes string Mgs returns nothing
    local unit whs
    set DSw[ASw] = Mgs
    set ASw = ASw + 1
    set whs = GetKillingUnit()
    if whs != null and GpS(gQ, hgr(eDs(whs)), "when calling has in JobAdvancementQuestHandler, line 122") then
        if mks(whs, $00000001) > k6w("909090908317", "when calling unObfuscateInt in JobAdvancementQuestHandler, line 123") or Q7t(whs, true) > k6w("9090908317", "when calling unObfuscateInt in JobAdvancementQuestHandler, line 124") or Ges(whs) > k6w("909090909048", "when calling unObfuscateInt in JobAdvancementQuestHandler, line 125") or JHt(whs, true) > k6w("9090908317", "when calling unObfuscateInt in JobAdvancementQuestHandler, line 126") or aSr(whs) > k6w("909090909048", "when calling unObfuscateInt in JobAdvancementQuestHandler, line 127") or str(whs, true) > k6w("9090908317", "when calling unObfuscateInt in JobAdvancementQuestHandler, line 128") then
            if whs != null then
    call OtS(whs, v0t(Iji("0", "when calling unObfuscate in JobAdvancementQuestHandler, line 132")))
            endif
            call dii(Iji("Your actions seems to come from hacking! You are a fool! ", "when calling unObfuscate in JobAdvancementQuestHandler, line 133"), 5., eDs(whs))
        endif
    endif
    set Nw = true
    set ASw = ASw - 1
    set whs = null
endfunction
function Xpi takes integer Kpi, string Lpi returns nothing
    set DSw[ASw] = Lpi
    set ASw = ASw + 1
    call jgr("when calling antiCheatCheckHeroUnitsStats1 in JobAdvancementQuestHandler, line 1199")
    call uhs("when calling antiCheatCheckHeroUnitsStats2 in JobAdvancementQuestHandler, line 1200")
    call FEs("when calling antiCheatCheckHeroUnitsStats3 in JobAdvancementQuestHandler, line 1201")
    call nXs("when calling antiCheatCheckHeroUnitsStats4 in JobAdvancementQuestHandler, line 1202")
    call Vit("when calling antiCheatCheckDyingUnitsStats1 in JobAdvancementQuestHandler, line 1203")
    set ASw = ASw - 1
endfunction
function Rdr takes string ddr returns integer
    local integer fdr
    set DSw[ASw] = ddr
    set ASw = ASw + 1
    if LC == 0 then
        if XC < 32768 then
            set XC = XC + 1
            set fdr = XC
            set CC[fdr] = 1173
        else
            call tNr("Out of memory: Could not create ForGroupCallback_forEachIn_doAfter_doAfter_Rh_Effect.", "when calling error in Rh_Effect, line 125")
            set fdr = 0
        endif
    else
        set LC = LC - 1
        set fdr = KC[LC]
        set CC[fdr] = 1173
    endif
    set ASw = ASw - 1
    return fdr
endfunction
function Xps takes integer jps, string xps returns nothing
    local integer vps
    local real mps
    local real Qps
    local integer Wps
    local integer Eps
    local real Zps
    local real Ups
    local group Ips
    local group Pps
    local unit Aps
    local real Dps
    local integer Hps
    local group Jps
    local real Kps
    local real Lps
    set DSw[ASw] = xps
    set ASw = ASw + 1
    set vps = qAi(Jrw[jps], Krw[jps], D3w(Lrw[jps]), Iji("|cffFF80FF...Breaker!!|r", "when calling unObfuscate in Rh_Effect, line 105"), 12., 2., $00000064, $00000064, $00000064, $000000FF, null, "when calling _CreateTTExEntity_fading in Rh_Effect, line 105")
    call SetTextTagVelocityBJ(k4[Asw[vps]], 15., 90.)
    call SetTextTagFadepointBJ(k4[Asw[vps]], 3.)
    if not HEi(Xrw[jps], hgr(nD), "when calling ifDisplayEffectProcs in Rh_Effect, line 109") then
        call kXi(vps, false)
    endif
    set mps = fYr(Jrw[jps], Krw[jps], Crw[jps], Vrw[jps])
    set Qps = Mri(k5r(Jrw[jps], Krw[jps], Crw[jps], Vrw[jps]))
    set Wps = 1
    set Eps = R2I(mps / 50.)
    loop
        exitwhen Wps > Eps
        set Kps = Jrw[jps] + I2R(Wps * 50) * Cos(Qps * bj_DEGTORAD)
        set Lps = Krw[jps] + I2R(Wps * 50) * Sin(Qps * bj_DEGTORAD)
        set Zps = Kps
        set Ups = Lps
        set Ips = LLt(Zps, Ups, gw, "when calling getUnitsInRange in Rh_Effect, line 117")
        set Pps = XbS(Ips)
        loop
            exitwhen not hJw(Pps)
            set Aps = tPr(Pps)
            if R9s(Aps, Lrw[jps]) then
    call DDr(lo, Aps)
            endif
        endloop
        call lxs(Pps)
        call Sju(Ips, "when calling release in Rh_Effect, line 121")
        set Wps = Wps + 1
    endloop
    call SqS(Me)
    set Dps = eH * GetHeroStatBJ($00000002, Lrw[jps], true)
    set Jps = lo
    set Hps = Rdr("when calling alloc_ForGroupCallback_forEachIn_doAfter_doAfter_Rh_Effect in Rh_Effect, line 125")
    set Nrw[Hps] = Lrw[jps]
    set Mrw[Hps] = Dps
    call rou(Jps, Hps, "when calling forEachIn in Rh_Effect, line 125")
    if ONi(ic, Brw[jps]) then
        set lc[1 + Xrw[jps]] = lc[1 + Xrw[jps]] + Dps
    endif
    call Y2r(Me)
    call ugu(lo)
    set ASw = ASw - 1
    set Ips = null
    set Pps = null
    set Aps = null
    set Jps = null
endfunction
function Y4w takes integer R4w, string T4w returns nothing
    set DSw[ASw] = T4w
    set ASw = ASw + 1
    if (not GpS(Zx, fww_3558[R4w], "when calling has in JobAdvancementQuestHandler, line 888"))and fww_3558[R4w] > Lh or(not GpS(px, Xdu(Rww_1951[R4w]), "when calling has in JobAdvancementQuestHandler, line 888")) then
        call tdu(Rww_1951[R4w])
    endif
    set ASw = ASw - 1
endfunction
function Hdu takes player Pdu, playerstate Adu, integer Ddu returns nothing
    call SetPlayerState(Pdu, Adu, Ddu)
endfunction
function Q5r takes player v5r, integer m5r returns nothing
    call Hdu(v5r, PLAYER_STATE_RESOURCE_LUMBER, m5r)
endfunction
function YPr takes integer RPr, string TPr returns nothing
    set DSw[ASw] = TPr
    set ASw = ASw + 1
    call Q5r(UBt(KM[RPr], "when calling getPlayer in CustomHero, line 235"), kbr(UBt(KM[RPr], "when calling getPlayer in CustomHero, line 235")) + vF[UUt(LM[RPr])])
    set ASw = ASw - 1
endfunction
function YSi takes integer dSi, string fSi returns nothing
    local group RSi
    local unit TSi
    set DSw[ASw] = fSi
    set ASw = ASw + 1
    set RSi = XbS(d3[dSi])
    loop
        exitwhen not hJw(RSi)
        set TSi = tPr(RSi)
        call qFt(TSi, "when calling decayIllusion in Dat_UltiIllusions, line 88")
    endloop
    call lxs(RSi)
    call Sju(d3[dSi], "when calling release in Dat_UltiIllusions, line 89")
    set ASw = ASw - 1
    set RSi = null
    set TSi = null
endfunction
function YeS takes integer TeS returns nothing
endfunction
function Zmt takes unit jmt, integer xmt, integer vmt, string mmt, string Qmt, string Wmt returns nothing
    local player Emt
    if jmt != null and gSr(jmt, xmt) then
        set Emt = eDs(jmt)
        if nD == Emt then
            if mmt != "" then
    call BlzSetAbilityTooltip(xmt, mmt, vmt - 1)
            endif
            if Qmt != "" then
    call BlzSetAbilityExtendedTooltip(xmt, Qmt, vmt - 1)
            endif
            if Wmt != "" then
    call BlzSetAbilityIcon(xmt, Wmt)
            endif
        endif
    endif
    set Emt = null
endfunction
function Yvi takes integer avi returns nothing
    local string nvi
    local string dvi
    local integer fvi
    local string Rvi
    local string Tvi
    if JHt(Vuw[avi], true) * 1.5 * Buw[avi] > pw then
        set dvi = fju(pw)
    else
        set dvi = fju(P3w(JHt(Vuw[avi], true) * 1.5 * Buw[avi]))
    endif
    set nvi = dvi
    set fvi = vQt(nvi)
    if fvi > 3 then
        set Rvi = CAw(nvi, $00000000, fvi - 3) + "," + Mes(nvi, fvi - 3)
    else
        set Rvi = nvi
    endif
    set nvi = Rvi
    set Tvi = xpr(iD, "<Damage>", SF + nvi + eF)
    call Zmt(Vuw[avi], uj, Buw[avi], "", Tvi, "")
endfunction
function jGi takes string FGi returns integer
    local integer kGi
    set DSw[ASw] = FGi
    set ASw = ASw + 1
    if rC == 0 then
        if sC < 32768 then
            set sC = sC + 1
            set kGi = sC
            set tC[kGi] = 657
        else
            call tNr("Out of memory: Could not create CallbackCounted_doPeriodicallyCounted_Voidless_extensions.", "when calling error in Voidless_extensions, line 33")
            set kGi = 0
        endif
    else
        set rC = rC - 1
        set kGi = uC[rC]
        set tC[kGi] = 657
    endif
    set ASw = ASw - 1
    return kGi
endfunction
function r7s takes effect w7s, real u7s returns nothing
    call BlzSetSpecialEffectRoll(w7s, Mri(u7s))
endfunction
function n8i takes effect B7i, real N7i, real M7i, boolean w8i, real u8i, boolean r8i, string s8i returns nothing
    local real t8i
    local real i8i
    local real S8i
    local real c8i
    local real o8i
    local boolean O8i
    local integer l8i
    local real b8i
    local integer y8i
    local real p8i
    local real e8i
    local real q8i
    local real a8i
    set DSw[ASw] = s8i
    set ASw = ASw + 1
    if B7i != null then
        set p8i = g2r(B7i)
        set e8i = vcw
        set t8i = p8i
        set i8i = e8i
        set S8i = 50.
        set c8i = fYr(t8i, i8i, N7i, M7i)
        set o8i = Atan2(M7i - i8i, N7i - t8i)
        set O8i = false
        if not w8i then
            call r7s(B7i, o8i)
        endif
        set b8i = iF
        set y8i = d0u(c8i / u8i * 2.)
        set l8i = jGi("when calling alloc_CallbackCounted_doPeriodicallyCounted_Voidless_extensions in Voidless_extensions, line 33")
        call Inr(l8i)
        set Siw[l8i] = B7i
        set ciw[l8i] = o8i
        set q8i = N7i
        set a8i = M7i
        set oiw[l8i] = q8i
        set Oiw[l8i] = a8i
        set liw[l8i] = w8i
        set biw[l8i] = u8i
        set yiw[l8i] = S8i
        set piw[l8i] = c8i
        set eiw[l8i] = O8i
        set qiw[l8i] = r8i
        call l5s(b8i, y8i, l8i, "when calling doPeriodicallyCounted in Voidless_extensions, line 33")
    endif
    set ASw = ASw - 1
endfunction
function Z2S takes integer m2S, string Q2S returns nothing
    local integer W2S
    local effect E2S
    set DSw[ASw] = Q2S
    set ASw = ASw + 1
    if Jyr(qK, jtw[m2S], "when calling has in Voidless, line 188") and wds(wps(qK, jtw[m2S], "when calling get in Voidless, line 188"), "when calling size in Voidless, line 188") == 3 then
        set W2S = c5r(wps(qK, jtw[m2S], "when calling get in Voidless, line 189"), "when calling iterator in Voidless, line 189")
        loop
            exitwhen not Tji(W2S)
            set E2S = Aii(LXi(W2S), "when calling effectFromIndex in Voidless, line 189")
            call n8i(E2S, xtw[m2S], vtw[m2S], true, 80. * iF, false, "when calling moveTowards in Voidless, line 190")
        endloop
        call vms(W2S, "when calling close in Voidless, line 189")
    endif
    set ASw = ASw - 1
    set E2S = null
endfunction
function Qvs takes integer vvs, string mvs returns nothing
    set DSw[ASw] = mvs
    set ASw = ASw + 1
    if FC[vvs] == 0 then
        call tNr("Double free: object of type Buff", "when calling error in Buff, line 71")
    else
        set hC = hC + 1
        set FC[vvs] = 0
    endif
    set ASw = ASw - 1
endfunction
function U1s takes integer Z1s returns nothing
    set Bg = Bg - 1
    if Z1s != Cg then
        set aM[qM[Z1s]] = aM[Z1s]
    else
        set Cg = aM[Z1s]
    endif
    if Z1s != Vg then
        set qM[aM[Z1s]] = qM[Z1s]
    else
        set Vg = qM[Z1s]
    endif
endfunction
function WLt takes integer mLt, string QLt returns nothing
    set DSw[ASw] = QLt
    set ASw = ASw + 1
    if FC[mLt] == 0 then
        if mLt == 0 then
            call tNr("Nullpointer exception when calling Buff.remove", "when calling error in LinkedListModule, line 37")
        else
            call tNr("Called Buff.remove on invalid object.", "when calling error in LinkedListModule, line 37")
        endif
    endif
    call U1s(mLt)
    set ASw = ASw - 1
endfunction
function gCt takes integer TCt, string YCt returns integer
    local integer GCt
    set DSw[ASw] = YCt
    set ASw = ASw + 1
    if Bww_215[TCt] != Vww_2373[TCt]then
        call aUi(Nww_1498[TCt], Bww_215[TCt], "when calling removeEntry in LinkedList, line 444")
        set GCt = Lww[Bww_215[TCt]]
        set Bww_215[TCt] = Xww[Bww_215[TCt]]
        set ASw = ASw - 1
        return GCt
    endif
    set ASw = ASw - 1
    return 0
endfunction
function vSt takes integer kSt, string jSt returns integer
    local integer xSt
    set DSw[ASw] = jSt
    set ASw = ASw + 1
    if oN[kSt] == 0 then
        if kSt == 0 then
            call tNr("Nullpointer exception when calling LLIterator.remove", "when calling error in LinkedList, line 442")
        else
            call tNr("Called LLIterator.remove on invalid object.", "when calling error in LinkedList, line 442")
        endif
    endif
    set xSt = gCt(kSt, "when calling remove in LinkedList, line 442")
    set ASw = ASw - 1
    return xSt
endfunction
function YCr takes integer aCr, integer nCr, string dCr returns nothing
    local integer fCr
    local integer RCr
    local integer TCr
    set DSw[ASw] = dCr
    set ASw = ASw + 1
    if Hxs(aCr) then
        call I9r("Removing Buff")
        set fCr = Kqu(v3i(aCr), "when calling staticItr in Buff, line 31")
        set TCr = fCr
        loop
            exitwhen not Tji(TCr)
            set RCr = LXi(TCr)
            if FC[RCr] == nCr then
    call vSt(fCr, "when calling remove in Buff, line 34")
            endif
        endloop
    endif
    set ASw = ASw - 1
endfunction
function Hsr takes integer Dsr returns nothing
endfunction
function t7t takes integer r7t, string s7t returns nothing
    set DSw[ASw] = s7t
    set ASw = ASw + 1
    if FC[r7t] == 0 then
        if r7t == 0 then
            call tNr("Nullpointer exception when calling Buff.onEnd", "when calling error in Buff, line 91")
        else
            call tNr("Called Buff.onEnd on invalid object.", "when calling error in Buff, line 91")
        endif
    endif
    call Hsr(r7t)
    set ASw = ASw - 1
endfunction
function d9i takes integer a9i, string n9i returns nothing
    set DSw[ASw] = n9i
    set ASw = ASw + 1
    call I9r("Destroy Buff")
    call t7t(a9i, "when calling onEnd in Buff, line 114")
    if yM[a9i] != 0 and(not f4[yM[a9i]]) and Hxs(yM[a9i]) then
        call YCr(yM[a9i], FC[a9i], "when calling removeBuff in Buff, line 116")
        call Q_s(G4[yM[a9i]], pM[a9i])
    endif
    set yM[a9i] = 0
    call WLt(a9i, "when calling remove in LinkedListModule, line 49")
    set ASw = ASw - 1
endfunction
function I_S takes integer Z_S, string U_S returns nothing
    set DSw[ASw] = U_S
    set ASw = ASw + 1
    call d9i(Z_S, "when calling Buff_onDestroy in Buff, line 112")
    call Qvs(Z_S, "when calling dealloc_Buff in Buff, line 112")
    set ASw = ASw - 1
endfunction
function Hwr takes integer Awr, string Dwr returns nothing
    set DSw[ASw] = Dwr
    set ASw = ASw + 1
    if FC[Awr] == 0 then
        if Awr == 0 then
            call tNr("Nullpointer exception when calling Buff.Buff", "when calling error in Buff, line 71")
        else
            call tNr("Called Buff.Buff on invalid object.", "when calling error in Buff, line 71")
        endif
    endif
    call I_S(Awr, "when calling destroyBuff in Buff, line 71")
    set ASw = ASw - 1
endfunction
function VAi takes integer XAi, string CAi returns nothing
    set DSw[ASw] = CAi
    set ASw = ASw + 1
    if not eM[XAi]then
        set eM[XAi] = true
        call Hwr(XAi, "when calling dispatch_Buff_destroyBuff in Buff, line 110")
    endif
    set ASw = ASw - 1
endfunction
function aMs takes integer eMs, string qMs returns nothing
    set DSw[ASw] = qMs
    set ASw = ASw + 1
    if FC[eMs] == 0 then
        if eMs == 0 then
            call tNr("Nullpointer exception when calling Buff.terminate", "when calling error in Buff, line 107")
        else
            call tNr("Called Buff.terminate on invalid object.", "when calling error in Buff, line 107")
        endif
    endif
    call VAi(eMs, "when calling terminate in Buff, line 107")
    set ASw = ASw - 1
endfunction
function ODr takes integer tDr, string iDr returns nothing
    local integer SDr
    local integer cDr
    local integer oDr
    set DSw[ASw] = iDr
    set ASw = ASw + 1
    set SDr = Xg[tDr]
    if SDr != 0 then
        call I9r("Cleaning Buffs")
        set oDr = Kqu(SDr, "when calling staticItr in Buff, line 43")
        loop
            exitwhen not Tji(oDr)
            set cDr = LXi(oDr)
            call I9r("Clear buffs: Terminate")
            call aMs(cDr, "when calling terminate in Buff, line 45")
        endloop
        call Z9s(SDr, "when calling dispatch_LinkedList_destroyLinkedList in Buff, line 46")
        set Xg[tDr] = 0
    endif
    set ASw = ASw - 1
endfunction
function Z4u takes integer W4u, string E4u returns nothing
    set DSw[ASw] = E4u
    set ASw = ASw + 1
    call ODr(bM[W4u], "when calling clearBuffs in Buff, line 163")
    set ASw = ASw - 1
endfunction
function ZBr takes integer WBr, string EBr returns nothing
    set DSw[ASw] = EBr
    set ASw = ASw + 1
    call krS(O1[WBr], "when calling cameraCheckLock in DungeonCmds, line 553")
    set ASw = ASw - 1
endfunction
function g8r takes unit G8r returns nothing
    call BlzPauseUnitEx(G8r, false)
endfunction
function ZSr takes integer mSr, string QSr returns nothing
    local group WSr
    local unit ESr
    set DSw[ASw] = QSr
    set ASw = ASw + 1
    call PanCameraToTimedLocForPlayer(g1[mSr], br[1 + hgr(g1[mSr])], 0.)
    set WSr = XbS(fc[h1[mSr]])
    loop
        exitwhen not hJw(WSr)
        set ESr = tPr(WSr)
        if eDs(ESr) == g1[mSr]then
            call g8r(ESr)
            call IcS()
            call J7i(ESr, lOu(br[1 + hgr(g1[mSr])]), hcw)
            call O0s(g1[mSr], ESr)
            call Axu(ESr, true)
            if Jyr(UH, Aei(ESr), "when calling has in DungeonCmds, line 754") then
    call fmu(uwr(ESr, ck), false)
            endif
        endif
    endloop
    call lxs(WSr)
    set ASw = ASw - 1
    set WSr = null
    set ESr = null
endfunction
function ZnS takes integer WnS returns nothing
    local effect EnS = N6[WnS]
    call iNw(EnS, .075)
    call iNw(M6[WnS], .075)
    set EnS = null
endfunction
function a4r takes integer p4r, string e4r returns integer
    local integer q4r
    set DSw[ASw] = e4r
    set ASw = ASw + 1
    set q4r = kgs(lm, bm, 10., W2[p4r] + Pm, 10., E2[p4r], $000000FF, $000000FF, $000000FF, $00000000, Z2[p4r], "when calling _CreateTTExEntityShift in FateDestinyUnlocker, line 290")
    set ASw = ASw - 1
    return q4r
endfunction
function a8t takes integer q8t returns nothing
    call ResetUnitAnimation(ptw[q8t])
endfunction
function B0u takes string C0u returns integer
    local integer V0u
    set DSw[ASw] = C0u
    set ASw = ASw + 1
    if NX == 0 then
        if MX < 32768 then
            set MX = MX + 1
            set V0u = MX
            set wC[V0u] = 1061
        else
            call tNr("Out of memory: Could not create CallbackSingle_doAfter_doAfter_JobAdvancementQuestHandler.", "when calling error in JobAdvancementQuestHandler, line 1022")
            set V0u = 0
        endif
    else
        set NX = NX - 1
        set V0u = BX[NX]
        set wC[V0u] = 1061
    endif
    set ASw = ASw - 1
    return V0u
endfunction
function aBi takes integer AVi, string DVi returns nothing
    local trigger HVi
    local integer JVi
    local integer KVi
    local integer LVi
    local string XVi
    local trigger CVi
    local integer VVi
    local integer BVi
    local integer NVi
    local string MVi
    local trigger wBi
    local integer uBi
    local integer rBi
    local integer sBi
    local string tBi
    local trigger iBi
    local integer SBi
    local integer cBi
    local integer oBi
    local string OBi
    local trigger lBi
    local integer bBi
    local integer yBi
    local integer pBi
    local string eBi
    local integer qBi
    set DSw[ASw] = DVi
    set ASw = ASw + 1
    set au = true
    set HVi = CreateTrigger()
    set JVi = c5r(gQ, "when calling iterator in JobAdvancementQuestHandler, line 990")
    loop
        exitwhen not Tji(JVi)
        set KVi = LXi(JVi)
        set LVi = c5r(II, "when calling iterator in JobAdvancementQuestHandler, line 991")
        loop
            exitwhen not Tji(LVi)
            set XVi = nPr(LXi(LVi), "when calling stringFromIndex in JobAdvancementQuestHandler, line 991")
            call Ebs(HVi, aD[KVi], XVi, false)
        endloop
        call vms(LVi, "when calling close in JobAdvancementQuestHandler, line 991")
    endloop
    call vms(JVi, "when calling close in JobAdvancementQuestHandler, line 990")
    call B2S(HVi, pUw)
    set CVi = CreateTrigger()
    set VVi = c5r(gQ, "when calling iterator in JobAdvancementQuestHandler, line 996")
    loop
        exitwhen not Tji(VVi)
        set BVi = LXi(VVi)
        set NVi = c5r(II, "when calling iterator in JobAdvancementQuestHandler, line 997")
        loop
            exitwhen not Tji(NVi)
            set MVi = nPr(LXi(NVi), "when calling stringFromIndex in JobAdvancementQuestHandler, line 997")
            call Ebs(CVi, aD[BVi], MVi, false)
        endloop
        call vms(NVi, "when calling close in JobAdvancementQuestHandler, line 997")
    endloop
    call vms(VVi, "when calling close in JobAdvancementQuestHandler, line 996")
    call B2S(HVi, eUw)
    set wBi = CreateTrigger()
    set uBi = c5r(gQ, "when calling iterator in JobAdvancementQuestHandler, line 1002")
    loop
        exitwhen not Tji(uBi)
        set rBi = LXi(uBi)
        set sBi = c5r(II, "when calling iterator in JobAdvancementQuestHandler, line 1003")
        loop
            exitwhen not Tji(sBi)
            set tBi = nPr(LXi(sBi), "when calling stringFromIndex in JobAdvancementQuestHandler, line 1003")
            call Ebs(wBi, aD[rBi], tBi, false)
        endloop
        call vms(sBi, "when calling close in JobAdvancementQuestHandler, line 1003")
    endloop
    call vms(uBi, "when calling close in JobAdvancementQuestHandler, line 1002")
    call B2S(wBi, qUw)
    call B2S(wBi, aUw)
    set iBi = CreateTrigger()
    set SBi = c5r(gQ, "when calling iterator in JobAdvancementQuestHandler, line 1009")
    loop
        exitwhen not Tji(SBi)
        set cBi = LXi(SBi)
        set oBi = c5r(II, "when calling iterator in JobAdvancementQuestHandler, line 1010")
        loop
            exitwhen not Tji(oBi)
            set OBi = nPr(LXi(oBi), "when calling stringFromIndex in JobAdvancementQuestHandler, line 1010")
            call Ebs(iBi, aD[cBi], OBi, false)
        endloop
        call vms(oBi, "when calling close in JobAdvancementQuestHandler, line 1010")
    endloop
    call vms(SBi, "when calling close in JobAdvancementQuestHandler, line 1009")
    call B2S(iBi, nUw)
    call B2S(iBi, dUw)
    call B2S(iBi, fUw)
    set lBi = CreateTrigger()
    set bBi = c5r(gQ, "when calling iterator in JobAdvancementQuestHandler, line 1016")
    loop
        exitwhen not Tji(bBi)
        set yBi = LXi(bBi)
        set pBi = c5r(II, "when calling iterator in JobAdvancementQuestHandler, line 1017")
        loop
            exitwhen not Tji(pBi)
            set eBi = nPr(LXi(pBi), "when calling stringFromIndex in JobAdvancementQuestHandler, line 1017")
            call Ebs(lBi, aD[yBi], eBi, false)
        endloop
        call vms(pBi, "when calling close in JobAdvancementQuestHandler, line 1017")
    endloop
    call vms(bBi, "when calling close in JobAdvancementQuestHandler, line 1016")
    call B2S(lBi, RUw)
    set qBi = B0u("when calling alloc_CallbackSingle_doAfter_doAfter_JobAdvancementQuestHandler in JobAdvancementQuestHandler, line 1022")
    call RUs(qBi)
    call Ybr(2., qBi, "when calling doAfter in JobAdvancementQuestHandler, line 1022")
    set ASw = ASw - 1
    set HVi = null
    set CVi = null
    set wBi = null
    set iBi = null
    set lBi = null
endfunction
function RIu takes unit aIu, integer nIu, boolean dIu, boolean fIu returns nothing
    call BlzUnitDisableAbility(aIu, nIu, dIu, fIu)
endfunction
function ahS takes integer ehS, string qhS returns nothing
    set DSw[ASw] = qhS
    set ASw = ASw + 1
    call RIu(j8[ehS], l2s(Iji("A05R", "when calling unObfuscate in Imp1_InitCooldown, line 19"), "when calling fromRawCode in Imp1_InitCooldown, line 19"), false, false)
    set ASw = ASw - 1
endfunction
function ali takes integer qli returns nothing
    call BlzSetUnitWeaponBooleanField(uK, UNIT_WEAPON_BF_ATTACKS_ENABLED, $00000000, false)
    call BlzSetUnitWeaponBooleanField(uK, UNIT_WEAPON_BF_ATTACKS_ENABLED, $00000001, false)
    call BlzSetUnitWeaponBooleanField(uK, UNIT_WEAPON_BF_ATTACK_SHOW_UI, $00000000, false)
    call BlzSetUnitWeaponBooleanField(uK, UNIT_WEAPON_BF_ATTACK_SHOW_UI, $00000001, false)
endfunction
function lks takes string cks returns nothing
    local integer oks
    local integer Oks
    set DSw[ASw] = cks
    set ASw = ASw + 1
    set Su = true
    if not NI then
        set oks = c5r(gQ, "when calling iterator in JobAdvancementQuestHandler, line 583")
        loop
            exitwhen not Tji(oks)
            set Oks = LXi(oks)
            call bKw(Oks)
            call GVw(OA, Oks, O_i(true), "when calling put in JobAdvancementQuestHandler, line 585")
            if not Jyr(nA, Oks, "when calling has in JobAdvancementQuestHandler, line 586") then
    call GVw(nA, Oks, $00000001, "when calling put in JobAdvancementQuestHandler, line 587")
            else
    call GVw(nA, Oks, wps(nA, Oks, "when calling get in JobAdvancementQuestHandler, line 589") + 1, "when calling put in JobAdvancementQuestHandler, line 589")
            endif
        endloop
        call vms(oks, "when calling close in JobAdvancementQuestHandler, line 583")
        call Xgs(true, "when calling makeGameOver in JobAdvancementQuestHandler, line 590")
        call Ohr("when calling makeGameOver2 in JobAdvancementQuestHandler, line 591")
    endif
    set ASw = ASw - 1
endfunction
function aoi takes integer eoi, string qoi returns nothing
    set DSw[ASw] = qoi
    set ASw = ASw + 1
    call lks("when calling magicVariableBool1_check in JobAdvancementQuestHandler, line 1033")
    set ASw = ASw - 1
endfunction
function bKr takes integer OKr, string lKr returns nothing
    set DSw[ASw] = lKr
    set ASw = ASw + 1
    if s2r(wps(nI, x0w[OKr], "when calling get in Items_Pickup_Drop, line 495"), "when calling itemFromIndex in Items_Pickup_Drop, line 495") == v0w[OKr] or v0w[OKr] == null then
        call GVw(nI, x0w[OKr], Xdu(null), "when calling put in Items_Pickup_Drop, line 496")
    endif
    set ASw = ASw - 1
endfunction
function BBi takes unit VBi returns nothing
    call CreateTextTagUnitBJ("|cffff0000" + ZZ[GetRandomInt($00000000, $00000009)] + "|r", VBi, 0., 15., 100., 100., 100., 0.)
    call SetTextTagVelocityBJ(bj_lastCreatedTextTag, 45., 90.)
    call SetTextTagPermanentBJ(bj_lastCreatedTextTag, false)
    call SetTextTagFadepointBJ(bj_lastCreatedTextTag, 1.5)
    call SetTextTagLifespanBJ(bj_lastCreatedTextTag, 2.5)
    call dii(bF + "You have failed to dodge the Chronosphere!|r", 5., eDs(VBi))
endfunction
function Vxu takes unit Xxu, real Cxu returns nothing
    call SetUnitTimeScale(Xxu, Cxu)
endfunction
function dLu takes player aLu, integer nLu returns nothing
    call Hdu(aLu, PLAYER_STATE_RESOURCE_GOLD, nLu)
endfunction
function cFt takes integer iFt, string SFt returns nothing
    set DSw[ASw] = SFt
    set ASw = ASw + 1
    if GpS(gQ, iFt, "when calling has in PlayerGoldAndShardLimit, line 12") then
        if ATu(aD[iFt]) > bD then
            call dLu(aD[iFt], bD)
        endif
        if kbr(aD[iFt]) > yD then
            call Q5r(aD[iFt], yD)
        endif
    endif
    set ASw = ASw - 1
endfunction
function gTt takes unit TTt, string YTt returns nothing
    local integer GTt
    set DSw[ASw] = YTt
    set ASw = ASw + 1
    call CreateTextTagUnitBJ("|cffffcc00" + EZ[GetRandomInt($00000000, $00000007)] + "!|r", TTt, 0., 14., 100., 100., 100., 0.)
    call SetTextTagVelocityBJ(bj_lastCreatedTextTag, 45., 90.)
    call SetTextTagPermanentBJ(bj_lastCreatedTextTag, false)
    call SetTextTagFadepointBJ(bj_lastCreatedTextTag, 1.5)
    call SetTextTagLifespanBJ(bj_lastCreatedTextTag, 2.5)
    set GTt = hgr(eDs(TTt))
    if EW ==- 1 then
        call dii("You have found two power shards when dodging the Chronosphere!", 5., eDs(TTt))
        call N3r(aD[GTt], $00000002)
        call Uai(aD[GTt], AOS(TTt, 260.), qcw, acw, 0.005, 0.005, "+2 power shards", 8., 2., 0.75, cF, oF, OF, lF, "when calling createTag in Imp3DragonFortress, line 1599")
        call cFt(GTt, "when calling limitGoldAndShardsForPlayer in Imp3DragonFortress, line 1600")
    endif
    set ASw = ASw - 1
endfunction
function bSr takes integer tSr, string iSr returns nothing
    local group SSr
    local unit cSr
    local group oSr
    local unit OSr
    local integer lSr
    set DSw[ASw] = iSr
    set ASw = ASw + 1
    call p5s(Rc[$0000000C], XZw)
    set SSr = XbS(Kc)
    loop
        exitwhen not hJw(SSr)
        set cSr = tPr(SSr)
        set Xc = GetUnitLoc(cSr)
        call CreateNUnitsAtLoc($00000001, $68303432, GetOwningPlayer(v9[tSr]), Xc, bj_UNIT_FACING)
        call KillUnit(cSr)
        call RemoveLocation(Xc)
        call BBi(cSr)
    endloop
    call lxs(SSr)
    set oSr = XbS(Vc)
    loop
        exitwhen not hJw(oSr)
        set OSr = tPr(oSr)
        call gTt(OSr, "when calling arrowGame_Success in Imp3DragonFortress, line 1408")
    endloop
    call lxs(oSr)
    set lSr = 1
    loop
        exitwhen lSr > 10
        set Bc[lSr] = 0
        set lSr = lSr + 1
    endloop
    call ugu(Kc)
    call ugu(Vc)
    call Vxu(v9[tSr], 1.)
    call yau(mZ, "when calling flush in Imp3DragonFortress, line 1417")
    set IW = false
    set ASw = ASw - 1
    set SSr = null
    set cSr = null
    set oSr = null
    set OSr = null
endfunction
function hrs takes string Grs returns integer
    local integer grs
    set DSw[ASw] = Grs
    set ASw = ASw + 1
    if NX == 0 then
        if MX < 32768 then
            set MX = MX + 1
            set grs = MX
            set wC[grs] = 925
        else
            call tNr("Out of memory: Could not create CallbackSingle_doAfter_NpcTalking.", "when calling error in NpcTalking, line 54")
            set grs = 0
        endif
    else
        set NX = NX - 1
        set grs = BX[NX]
        set wC[grs] = 925
    endif
    set ASw = ASw - 1
    return grs
endfunction
function tbs takes string rbs returns integer
    local integer sbs
    set DSw[ASw] = rbs
    set ASw = ASw + 1
    if NX == 0 then
        if MX < 32768 then
            set MX = MX + 1
            set sbs = MX
            set wC[sbs] = 926
        else
            call tNr("Out of memory: Could not create CallbackSingle_doAfter_NpcTalking.", "when calling error in NpcTalking, line 78")
            set sbs = 0
        endif
    else
        set NX = NX - 1
        set sbs = BX[NX]
        set wC[sbs] = 926
    endif
    set ASw = ASw - 1
    return sbs
endfunction
function eYs takes unit tYs, string iYs returns nothing
    local real SYs
    local integer cYs
    local integer oYs
    local real OYs
    local integer lYs
    local integer bYs
    local real yYs
    local real pYs
    set DSw[ASw] = iYs
    set ASw = ASw + 1
    if r5S(tYs) == vA then
        set SYs = 0.
        set cYs = GetRandomInt($00000000, $00000002)
        if cYs == 0 then
            call mhS(tYs, "Stand 2")
            set SYs = 3.
        elseif cYs == 1 then
            call mhS(tYs, "Stand 3")
            set SYs = 10.
            call PlaySoundOnUnitBJ(IA, 125., tYs)
        elseif cYs == 2 then
            call mhS(tYs, "Death")
            set SYs = 1.373
        endif
        set yYs = SYs
        set oYs = hrs("when calling alloc_CallbackSingle_doAfter_NpcTalking in NpcTalking, line 54")
        call RUs(oYs)
        set Yuw[oYs] = tYs
        call Ybr(yYs, oYs, "when calling doAfter in NpcTalking, line 54")
    elseif r5S(tYs) == xA then
        set OYs = 0.
        set lYs = GetRandomInt($00000000, $00000002)
        if lYs == 0 then
            call mhS(tYs, "Stand 2")
            set OYs = 3.
        elseif lYs == 1 then
            call mhS(tYs, "Atack 1")
            set OYs = 1.4
        elseif lYs == 2 then
            call mhS(tYs, "Atack 2")
            set OYs = 1.166
        elseif lYs == 3 then
            call mhS(tYs, "Spell")
            set OYs = 2.733
        elseif lYs == 4 then
            call mhS(tYs, "Spell Slam")
            set OYs = 2.666
        elseif lYs == 5 then
            call mhS(tYs, "Spell Throw")
            set OYs = 1.167
        endif
        set pYs = OYs
        set bYs = tbs("when calling alloc_CallbackSingle_doAfter_NpcTalking in NpcTalking, line 78")
        call RUs(bYs)
        set Guw[bYs] = tYs
        call Ybr(pYs, bYs, "when calling doAfter in NpcTalking, line 78")
    endif
    set ASw = ASw - 1
endfunction
function bWu takes integer oWu, string OWu returns nothing
    local integer lWu
    set DSw[ASw] = OWu
    set ASw = ASw + 1
    set lWu = GetRandomInt($00000000, $00000003)
    if lWu == 0 then
        call eYs(m1[oWu], "when calling npcPlayRandomAnimation in EffectCleaner, line 105")
    elseif lWu == 1 then
        call eYs(Q1[oWu], "when calling npcPlayRandomAnimation in EffectCleaner, line 107")
    elseif lWu == 2 then
        call eYs(m1[oWu], "when calling npcPlayRandomAnimation in EffectCleaner, line 109")
        call eYs(Q1[oWu], "when calling npcPlayRandomAnimation in EffectCleaner, line 110")
    elseif lWu == 3 then
    endif
    set ASw = ASw - 1
endfunction
function bgt takes integer lgt returns nothing
    call CreateQuestBJ(Kww_1186[lgt], Lww_1288[lgt], Xww_2576[lgt], Cww_321[lgt])
endfunction
function Aai takes item Iai returns boolean
    local integer Pai = q3t(Iai)
    return Pai == uk or Pai == rk or Pai == BF
endfunction
function jvs takes item Fvs returns boolean
    local integer kvs = q3t(Fvs)
    return kvs == uk or kvs == rk or kvs == BF
endfunction
function bsS takes integer OsS, string lsS returns nothing
    set DSw[ASw] = lsS
    set ASw = ASw + 1
    if jvs(I0w[OsS]) and (not k4i(P0w[OsS], uk))and(not k4i(P0w[OsS], rk)) and(not k4i(P0w[OsS], BF)) then
        call GVw(aI, A0w[OsS], O_i(false), "when calling put in Items_Pickup_Drop, line 560")
    endif
    if Aai(I0w[OsS]) and (not k4i(P0w[OsS], uk))and(not k4i(P0w[OsS], rk)) and(not k4i(P0w[OsS], BF)) then
        call GVw(qI, A0w[OsS], O_i(false), "when calling put in Items_Pickup_Drop, line 562")
    endif
    set ASw = ASw - 1
endfunction
function byi takes integer Oyi, string lyi returns nothing
    set DSw[ASw] = lyi
    set ASw = ASw + 1
    if dsw[Oyi] != null and yXu(dsw[Oyi]) then
        call X7i(dsw[Oyi], "when calling resetUnitsAvatarScaling in Spells_Checks, line 129")
        if hu[hgr(eDs(dsw[Oyi]))]then
            call fmu(uwr(dsw[Oyi], ck), false)
        endif
    endif
    set ASw = ASw - 1
endfunction
function c1i takes integer w1i returns nothing
    local trigger u1i = CreateTrigger()
    local trigger r1i
    local trigger s1i
    local trigger t1i
    local trigger i1i
    local trigger S1i
    call l2w(u1i, EVENT_PLAYER_UNIT_DEATH)
    set r1i = u1i
    call dUs(r1i, Condition(jUw))
    set s1i = r1i
    call B2S(s1i, xUw)
    set t1i = CreateTrigger()
    call QYr(t1i, K2S(xP), null)
    set i1i = t1i
    call dUs(i1i, Condition(vUw))
    set S1i = i1i
    call B2S(S1i, mUw)
    set u1i = null
    set r1i = null
    set s1i = null
    set t1i = null
    set i1i = null
    set S1i = null
endfunction
function cAr takes integer UPr, string IPr returns nothing
    local integer PPr
    local integer APr
    local trigger DPr
    local trigger HPr
    local trigger JPr
    local trigger KPr
    local trigger LPr
    local trigger XPr
    local trigger CPr
    local trigger VPr
    local trigger BPr
    local trigger NPr
    local trigger MPr
    local trigger wAr
    local trigger uAr
    local trigger rAr
    local trigger sAr
    local trigger tAr
    local trigger iAr
    local trigger SAr
    set DSw[ASw] = IPr
    set ASw = ASw + 1
    set PPr = c5r(gQ, "when calling iterator in FateDestinyUnlocker, line 561")
    loop
        exitwhen not Tji(PPr)
        set APr = LXi(PPr)
        call r_u(p7[UPr], aD[APr], EVENT_PLAYER_UNIT_USE_ITEM, null)
        call r_u(e7[UPr], aD[APr], EVENT_PLAYER_UNIT_ISSUED_TARGET_ORDER, null)
        call GVw(Hv, APr, $00000000, "when calling put in FateDestinyUnlocker, line 564")
    endloop
    call vms(PPr, "when calling close in FateDestinyUnlocker, line 561")
    call B2S(p7[UPr], gZw)
    call B2S(Mq, hZw)
    call B2S(e7[UPr], FZw)
    call B2S(rf, kZw)
    set DPr = CreateTrigger()
    call l2w(DPr, EVENT_PLAYER_UNIT_ISSUED_UNIT_ORDER)
    set HPr = DPr
    call dUs(HPr, Condition(jZw))
    set JPr = HPr
    call B2S(JPr, xZw)
    set KPr = CreateTrigger()
    call QYr(KPr, K2S(Rect(3616., - 13248., 3744., - 13120.)), null)
    set LPr = KPr
    call dUs(LPr, Condition(jZw))
    set XPr = LPr
    call B2S(XPr, vZw)
    set CPr = CreateTrigger()
    call QYr(CPr, K2S(Rect(8896., - 12768., 9056., - 12512.)), null)
    set VPr = CPr
    call dUs(VPr, Condition(jZw))
    set BPr = VPr
    call B2S(BPr, mZw)
    set NPr = CreateTrigger()
    call QYr(NPr, K2S(Rect(12032., 11776., 12192., 12000.)), null)
    set MPr = NPr
    call dUs(MPr, Condition(jZw))
    set wAr = MPr
    call B2S(wAr, QZw)
    set uAr = CreateTrigger()
    call QYr(uAr, K2S(Rect(- 5088., 4672., - 4960., 4800.)), null)
    set rAr = uAr
    call dUs(rAr, Condition(jZw))
    set sAr = rAr
    call B2S(sAr, WZw)
    set tAr = CreateTrigger()
    call QYr(tAr, K2S(Rect(- 10112., 9024., - 9920., 9184.)), null)
    set iAr = tAr
    call dUs(iAr, Condition(jZw))
    set SAr = iAr
    call B2S(SAr, EZw)
    set ASw = ASw - 1
    set DPr = null
    set HPr = null
    set JPr = null
    set KPr = null
    set LPr = null
    set XPr = null
    set CPr = null
    set VPr = null
    set BPr = null
    set NPr = null
    set MPr = null
    set wAr = null
    set uAr = null
    set rAr = null
    set sAr = null
    set tAr = null
    set iAr = null
    set SAr = null
endfunction
function cBr takes integer sBr, string tBr returns nothing
    local integer iBr
    local integer SBr
    set DSw[ASw] = tBr
    set ASw = ASw + 1
    set NI = true
    set MI = true
    if GetFloatGameState(GAME_STATE_TIME_OF_DAY) < tww_4975[sBr]then
        set iww_3859[sBr] = true
    else
        set iww_3859[sBr] = false
        call SetFloatGameState(GAME_STATE_TIME_OF_DAY, tww_4975[sBr])
    endif
    if iww_3859[sBr]then
        set iBr = c5r(gQ, "when calling iterator in JobAdvancementQuestHandler, line 540")
        loop
            exitwhen not Tji(iBr)
            set SBr = LXi(iBr)
            call bKw(SBr)
            call GVw(OA, SBr, O_i(true), "when calling put in JobAdvancementQuestHandler, line 542")
            if not Jyr(nA, SBr, "when calling has in JobAdvancementQuestHandler, line 543") then
    call GVw(nA, SBr, $00000001, "when calling put in JobAdvancementQuestHandler, line 544")
            else
    call GVw(nA, SBr, wps(nA, SBr, "when calling get in JobAdvancementQuestHandler, line 546") + 1, "when calling put in JobAdvancementQuestHandler, line 546")
            endif
        endloop
        call vms(iBr, "when calling close in JobAdvancementQuestHandler, line 540")
        call Xgs(true, "when calling makeGameOver in JobAdvancementQuestHandler, line 547")
        call Ohr("when calling makeGameOver2 in JobAdvancementQuestHandler, line 548")
    endif
    set ASw = ASw - 1
endfunction
function cFs takes integer iFs, string SFs returns nothing
    set DSw[ASw] = SFs
    set ASw = ASw + 1
    call eys(Vv, J2[iFs], "when calling remove in FateDestinyUnlocker, line 352")
    set ASw = ASw - 1
endfunction
function cSt takes integer SSt returns nothing
    call p5s(Rc[$0000000B], DZw)
endfunction
function ceS takes integer SeS returns nothing
    set Jm = false
endfunction
function cnS takes integer SnS returns nothing
    call dii("1", 1., d7[SnS])
endfunction
function cys takes integer Sys returns nothing
    call bVr(VD)
    call uFr(BD)
    call uFr(ND)
endfunction
function d6i takes integer n6i returns nothing
    set kh = kh + 50
endfunction
function eWt takes unit oWt, string OWt returns nothing
    local real lWt
    local real bWt
    local real yWt
    local real pWt
    set DSw[ASw] = OWt
    set ASw = ASw + 1
    if oWt != null then
        set yWt = ANw(oWt)
        set pWt = XSw
        set lWt = yWt
        set bWt = pWt
        if fYr(lWt, bWt, ANw(CY), XSw) <= lH then
            call GlS(oWt, $00000000, true, "when calling onRevivalLocationEntered in RevivalLocations, line 108")
        elseif fYr(lWt, bWt, ANw(BY), XSw) <= lH then
            call GlS(oWt, $00000002, true, "when calling onRevivalLocationEntered in RevivalLocations, line 110")
        elseif fYr(lWt, bWt, ANw(VY), XSw) <= lH then
            call GlS(oWt, $00000001, true, "when calling onRevivalLocationEntered in RevivalLocations, line 112")
        elseif XYt(lWt, bWt, Op) then
            call GlS(oWt, $00000003, true, "when calling onRevivalLocationEntered in RevivalLocations, line 114")
        elseif XYt(lWt, bWt, lp) then
            call GlS(oWt, $00000004, true, "when calling onRevivalLocationEntered in RevivalLocations, line 116")
        endif
    endif
    set ASw = ASw - 1
endfunction
function dDi takes integer aDi, string nDi returns nothing
    set DSw[ASw] = nDi
    set ASw = ASw + 1
    call GlS(auw[aDi], nuw[aDi], false, "when calling onRevivalLocationEntered in NpcHandler, line 262")
    call eWt(auw[aDi], "when calling setRevivalLocationOnLoad in NpcHandler, line 263")
    set ASw = ASw - 1
endfunction
function dpi takes integer epi, string qpi returns nothing
    local unit api
    local unit npi
    set DSw[ASw] = qpi
    set ASw = ASw + 1
    set api = dps(aD[PLAYER_NEUTRAL_AGGRESSIVE], l2s(Iji("n02D", "when calling unObfuscate in Imp2, line 118"), "when calling fromRawCode in Imp2, line 118"), W8[epi], E8[epi], bj_UNIT_FACING)
    call Ggr(api)
    set npi = api
    call v0r(npi, true)
    set ASw = ASw - 1
    set api = null
    set npi = null
endfunction
function dtS takes integer atS, string ntS returns nothing
    set DSw[ASw] = ntS
    set ASw = ASw + 1
    if PN[atS] != null then
        call eys(CG, Aei(PN[atS]), "when calling remove in Archsage_WhiteWhizard_ArcaneManaBond, line 90")
    endif
    set ASw = ASw - 1
endfunction
function CTs takes integer XTs returns nothing
    if k4[Asw[XTs]] != null then
        call kTS(k4[Asw[XTs]])
        set k4[Asw[XTs]] = null
    endif
endfunction
function X1r takes integer L1r returns nothing
    set lv = lv - 1
    if L1r != Sv then
        set T4[R4[L1r]] = T4[L1r]
    else
        set Sv = T4[L1r]
    endif
    if L1r != cv then
        set R4[T4[L1r]] = R4[L1r]
    else
        set cv = R4[L1r]
    endif
    set R4[L1r] = 0
    set T4[L1r] = 0
endfunction
function Oau takes integer cau, string oau returns nothing
    set DSw[ASw] = oau
    set ASw = ASw + 1
    if cB[cau] == 0 then
        if cau == 0 then
            call tNr("Nullpointer exception when calling Entity.removeFromActive", "when calling error in DupletListModule, line 37")
        else
            call tNr("Called Entity.removeFromActive on invalid object.", "when calling error in DupletListModule, line 37")
        endif
    endif
    call X1r(cau)
    set ASw = ASw - 1
endfunction
function Ppi takes integer Ipi returns nothing
    set bv = bv - 1
    if Ipi != ov then
        set T4[R4[Ipi]] = T4[Ipi]
    else
        set ov = T4[Ipi]
    endif
    if Ipi != Ov then
        set R4[T4[Ipi]] = R4[Ipi]
    else
        set Ov = R4[Ipi]
    endif
    set R4[Ipi] = 0
    set T4[Ipi] = 0
endfunction
function eOt takes integer yOt, string pOt returns nothing
    set DSw[ASw] = pOt
    set ASw = ASw + 1
    if cB[yOt] == 0 then
        if yOt == 0 then
            call tNr("Nullpointer exception when calling Entity.removeFromInactive", "when calling error in DupletListModule, line 50")
        else
            call tNr("Called Entity.removeFromInactive on invalid object.", "when calling error in DupletListModule, line 50")
        endif
    endif
    call Ppi(yOt)
    set ASw = ASw - 1
endfunction
function k0i takes integer h0i, string F0i returns nothing
    set DSw[ASw] = F0i
    set ASw = ASw + 1
    if Y4[h0i]then
        set Y4[h0i] = false
        call Oau(h0i, "when calling removeFromActive in DupletListModule, line 33")
    else
        call eOt(h0i, "when calling removeFromInactive in DupletListModule, line 35")
    endif
    set ASw = ASw - 1
endfunction
function Qiu takes integer viu, string miu returns nothing
    set DSw[ASw] = miu
    set ASw = ASw + 1
    if cB[viu] == 0 then
        if viu == 0 then
            call tNr("Nullpointer exception when calling Entity.remove", "when calling error in DupletListModule, line 30")
        else
            call tNr("Called Entity.remove on invalid object.", "when calling error in DupletListModule, line 30")
        endif
    endif
    call k0i(viu, "when calling remove in DupletListModule, line 30")
    set ASw = ASw - 1
endfunction
function lDi takes integer oDi, string ODi returns nothing
    set DSw[ASw] = ODi
    set ASw = ASw + 1
    if Asw[oDi] != 0 then
        call J7u(Asw[oDi], "when calling recycle in TextTagExtensions, line 73")
        set Asw[oDi] = 0
    endif
    set ASw = ASw - 1
endfunction
function Bmt takes integer Cmt, string Vmt returns nothing
    set DSw[ASw] = Vmt
    set ASw = ASw + 1
    if Cmt != 0 then
        call CTs(Cmt)
        call lDi(Cmt, "when calling recycleFText in TextTagExtensions, line 85")
        call Qiu(Cmt, "when calling remove in TextTagExtensions, line 86")
    endif
    set ASw = ASw - 1
endfunction
function dxr takes integer axr, string nxr returns nothing
    set DSw[ASw] = nxr
    set ASw = ASw + 1
    call Bmt(Uuw[axr], "when calling recycleAll in NpcTalking, line 281")
    call rMw(Iuw[axr], HP, LP, 5000.)
    call I7S(Iuw[axr])
    set ASw = ASw - 1
endfunction
function e2w takes integer y2w, string p2w returns nothing
    set DSw[ASw] = p2w
    set ASw = ASw + 1
    call GVw(Ev, U4[y2w], O_i(true), "when calling put in Faith_Effect, line 58")
    set ASw = ASw - 1
endfunction
function e3r takes integer S3r, string c3r returns nothing
    local unit o3r
    local unit O3r
    local unit l3r
    local unit b3r
    local unit y3r
    local unit p3r
    set DSw[ASw] = c3r
    set ASw = ASw + 1
    set o3r = dps(aD[PLAYER_NEUTRAL_AGGRESSIVE], l2s(Iji("n02H", "when calling unObfuscate in Imp2, line 141"), "when calling fromRawCode in Imp2, line 141"), H8[S3r], J8[S3r], bj_UNIT_FACING)
    call Ggr(o3r)
    set O3r = o3r
    call v0r(O3r, true)
    set l3r = dps(aD[PLAYER_NEUTRAL_AGGRESSIVE], l2s(Iji("n02I", "when calling unObfuscate in Imp2, line 142"), "when calling fromRawCode in Imp2, line 142"), H8[S3r], J8[S3r], bj_UNIT_FACING)
    call Ggr(l3r)
    set b3r = l3r
    call v0r(b3r, true)
    set y3r = dps(aD[PLAYER_NEUTRAL_AGGRESSIVE], l2s(Iji("n02D", "when calling unObfuscate in Imp2, line 143"), "when calling fromRawCode in Imp2, line 143"), H8[S3r], J8[S3r], bj_UNIT_FACING)
    call Ggr(y3r)
    set p3r = y3r
    call v0r(p3r, true)
    set ASw = ASw - 1
    set o3r = null
    set O3r = null
    set l3r = null
    set b3r = null
    set y3r = null
    set p3r = null
endfunction
function eAr takes integer yAr, string pAr returns nothing
    set DSw[ASw] = pAr
    set ASw = ASw + 1
    if GpS(qx, hgr(eDs(s1[yAr])), "when calling has in DungeonCmds, line 423") then
        call eys(qx, hgr(eDs(s1[yAr])), "when calling remove in DungeonCmds, line 424")
    endif
    set ASw = ASw - 1
endfunction
function eFr takes integer bFr returns nothing
    local effect yFr = U6[bFr]
    local effect pFr
    call iNw(yFr, .2)
    set pFr = yFr
    call Wwu(pFr, 12.)
    set yFr = null
    set pFr = null
endfunction
function Nji takes integer Kji, integer Lji, real Xji, real Cji, real Vji, string Bji returns nothing
    set DSw[ASw] = Bji
    set ASw = ASw + 1
    call mir(Kji, DCr(Lji, "when calling getPlayer in CameraUtils, line 54"), Xji, Cji, Vji, "when calling pan in CameraUtils, line 54")
    set ASw = ASw - 1
endfunction
function rOu takes integer Vou, integer Bou, real Nou, real Mou, real wOu, string uOu returns nothing
    set DSw[ASw] = uOu
    set ASw = ASw + 1
    if UC[Vou] == 0 then
        if Vou == 0 then
            call tNr("Nullpointer exception when calling Camera.pan", "when calling error in CameraUtils, line 53")
        else
            call tNr("Called Camera.pan on invalid object.", "when calling error in CameraUtils, line 53")
        endif
    endif
    call Nji(Vou, Bou, Nou, Mou, wOu, "when calling pan in CameraUtils, line 53")
    set ASw = ASw - 1
endfunction
function eFu takes integer yFu, string pFu returns nothing
    set DSw[ASw] = pFu
    set ASw = ASw + 1
    if nD == Ztw[yFu]then
        call ShowInterface(true, 2.)
    endif
    call eTu(Ng, Ztw[yFu], "when calling free in Voidless, line 216")
    call Gwt(Utw[yFu], "when calling resetCameraZoomLevel in Voidless, line 217")
    call GZs(Utw[yFu], false, "when calling setCommandsDisabled in Voidless, line 218")
    if Itw[yFu]then
        call WDr(Utw[yFu], "when calling cameraLock in Voidless, line 221")
    endif
    if Ptw[yFu] != null then
        call qaS(Ptw[yFu])
        if not GpS(eK, xMi(Utw[yFu], "when calling getCHero in Voidless, line 226"), "when calling has in Voidless, line 226") then
            call J7i(Ptw[yFu], lOu(yr[1 + Atw[yFu]]), hcw)
            call Tri(Ptw[yFu])
            call Axu(Ptw[yFu], true)
            call rOu(Ng, Utw[yFu], ANw(Ptw[yFu]), XSw, 0., "when calling pan in Voidless, line 230")
            set vM[xMi(Utw[yFu], "when calling getCHero in Voidless, line 231")] =- 1
        endif
    endif
    if wds(eK, "when calling size in Voidless, line 233") == 0 then
        call Xjr(iK, tK)
    endif
    call eys(SK, hgr(Ztw[yFu]), "when calling remove in Voidless, line 236")
    set ASw = ASw - 1
endfunction
function FhS takes string ghS returns integer
    local integer hhS
    set DSw[ASw] = ghS
    set ASw = ASw + 1
    if NX == 0 then
        if MX < 32768 then
            set MX = MX + 1
            set hhS = MX
            set wC[hhS] = 806
        else
            call tNr("Out of memory: Could not create CallbackSingle_doAfter_FateDestinyUnlocker.", "when calling error in FateDestinyUnlocker, line 464")
            set hhS = 0
        endif
    else
        set NX = NX - 1
        set hhS = BX[NX]
        set wC[hhS] = 806
    endif
    set ASw = ASw - 1
    return hhS
endfunction
function Idu takes string Zdu returns integer
    local integer Udu
    set DSw[ASw] = Zdu
    set ASw = ASw + 1
    if NX == 0 then
        if MX < 32768 then
            set MX = MX + 1
            set Udu = MX
            set wC[Udu] = 810
        else
            call tNr("Out of memory: Could not create CallbackSingle_doAfter_FateDestinyUnlocker.", "when calling error in FateDestinyUnlocker, line 495")
            set Udu = 0
        endif
    else
        set NX = NX - 1
        set Udu = BX[NX]
        set wC[Udu] = 810
    endif
    set ASw = ASw - 1
    return Udu
endfunction
function JOi takes string DOi returns integer
    local integer HOi
    set DSw[ASw] = DOi
    set ASw = ASw + 1
    if NX == 0 then
        if MX < 32768 then
            set MX = MX + 1
            set HOi = MX
            set wC[HOi] = 812
        else
            call tNr("Out of memory: Could not create CallbackSingle_doAfter_FateDestinyUnlocker.", "when calling error in FateDestinyUnlocker, line 501")
            set HOi = 0
        endif
    else
        set NX = NX - 1
        set HOi = BX[NX]
        set wC[HOi] = 812
    endif
    set ASw = ASw - 1
    return HOi
endfunction
function JSS takes string DSS returns integer
    local integer HSS
    set DSw[ASw] = DSS
    set ASw = ASw + 1
    if NX == 0 then
        if MX < 32768 then
            set MX = MX + 1
            set HSS = MX
            set wC[HSS] = 807
        else
            call tNr("Out of memory: Could not create CallbackSingle_doAfter_FateDestinyUnlocker.", "when calling error in FateDestinyUnlocker, line 466")
            set HSS = 0
        endif
    else
        set NX = NX - 1
        set HSS = BX[NX]
        set wC[HSS] = 807
    endif
    set ASw = ASw - 1
    return HSS
endfunction
function PSS takes string USS returns integer
    local integer ISS
    set DSw[ASw] = USS
    set ASw = ASw + 1
    if NX == 0 then
        if MX < 32768 then
            set MX = MX + 1
            set ISS = MX
            set wC[ISS] = 798
        else
            call tNr("Out of memory: Could not create CallbackSingle_doAfter_FateDestinyUnlocker.", "when calling error in FateDestinyUnlocker, line 427")
            set ISS = 0
        endif
    else
        set NX = NX - 1
        set ISS = BX[NX]
        set wC[ISS] = 798
    endif
    set ASw = ASw - 1
    return ISS
endfunction
function Q9i takes string v9i returns integer
    local integer m9i
    set DSw[ASw] = v9i
    set ASw = ASw + 1
    if NX == 0 then
        if MX < 32768 then
            set MX = MX + 1
            set m9i = MX
            set wC[m9i] = 808
        else
            call tNr("Out of memory: Could not create CallbackSingle_doAfter_FateDestinyUnlocker.", "when calling error in FateDestinyUnlocker, line 470")
            set m9i = 0
        endif
    else
        set NX = NX - 1
        set m9i = BX[NX]
        set wC[m9i] = 808
    endif
    set ASw = ASw - 1
    return m9i
endfunction
function QEt takes string vEt returns integer
    local integer mEt
    set DSw[ASw] = vEt
    set ASw = ASw + 1
    if NX == 0 then
        if MX < 32768 then
            set MX = MX + 1
            set mEt = MX
            set wC[mEt] = 802
        else
            call tNr("Out of memory: Could not create CallbackSingle_doAfter_FateDestinyUnlocker.", "when calling error in FateDestinyUnlocker, line 450")
            set mEt = 0
        endif
    else
        set NX = NX - 1
        set mEt = BX[NX]
        set wC[mEt] = 802
    endif
    set ASw = ASw - 1
    return mEt
endfunction
function WPw takes string mPw returns integer
    local integer QPw
    set DSw[ASw] = mPw
    set ASw = ASw + 1
    if NX == 0 then
        if MX < 32768 then
            set MX = MX + 1
            set QPw = MX
            set wC[QPw] = 797
        else
            call tNr("Out of memory: Could not create CallbackSingle_doAfter_FateDestinyUnlocker.", "when calling error in FateDestinyUnlocker, line 423")
            set QPw = 0
        endif
    else
        set NX = NX - 1
        set QPw = BX[NX]
        set wC[QPw] = 797
    endif
    set ASw = ASw - 1
    return QPw
endfunction
function YwS takes string RwS returns integer
    local integer TwS
    set DSw[ASw] = RwS
    set ASw = ASw + 1
    if NX == 0 then
        if MX < 32768 then
            set MX = MX + 1
            set TwS = MX
            set wC[TwS] = 809
        else
            call tNr("Out of memory: Could not create CallbackSingle_doAfter_FateDestinyUnlocker.", "when calling error in FateDestinyUnlocker, line 486")
            set TwS = 0
        endif
    else
        set NX = NX - 1
        set TwS = BX[NX]
        set wC[TwS] = 809
    endif
    set ASw = ASw - 1
    return TwS
endfunction
function bcr takes string Ocr returns integer
    local integer lcr
    set DSw[ASw] = Ocr
    set ASw = ASw + 1
    if NX == 0 then
        if MX < 32768 then
            set MX = MX + 1
            set lcr = MX
            set wC[lcr] = 811
        else
            call tNr("Out of memory: Could not create CallbackSingle_doAfter_FateDestinyUnlocker.", "when calling error in FateDestinyUnlocker, line 498")
            set lcr = 0
        endif
    else
        set NX = NX - 1
        set lcr = BX[NX]
        set wC[lcr] = 811
    endif
    set ASw = ASw - 1
    return lcr
endfunction
function bit takes string Oit returns integer
    local integer lit
    set DSw[ASw] = Oit
    set ASw = ASw + 1
    if NX == 0 then
        if MX < 32768 then
            set MX = MX + 1
            set lit = MX
            set wC[lit] = 805
        else
            call tNr("Out of memory: Could not create CallbackSingle_doAfter_FateDestinyUnlocker.", "when calling error in FateDestinyUnlocker, line 462")
            set lit = 0
        endif
    else
        set NX = NX - 1
        set lit = BX[NX]
        set wC[lit] = 805
    endif
    set ASw = ASw - 1
    return lit
endfunction
function ciu takes string iiu returns integer
    local integer Siu
    set DSw[ASw] = iiu
    set ASw = ASw + 1
    if NX == 0 then
        if MX < 32768 then
            set MX = MX + 1
            set Siu = MX
            set wC[Siu] = 795
        else
            call tNr("Out of memory: Could not create CallbackSingle_doAfter_FateDestinyUnlocker.", "when calling error in FateDestinyUnlocker, line 414")
            set Siu = 0
        endif
    else
        set NX = NX - 1
        set Siu = BX[NX]
        set wC[Siu] = 795
    endif
    set ASw = ASw - 1
    return Siu
endfunction
function fai takes string nai returns integer
    local integer dai
    set DSw[ASw] = nai
    set ASw = ASw + 1
    if NX == 0 then
        if MX < 32768 then
            set MX = MX + 1
            set dai = MX
            set wC[dai] = 800
        else
            call tNr("Out of memory: Could not create CallbackSingle_doAfter_FateDestinyUnlocker.", "when calling error in FateDestinyUnlocker, line 442")
            set dai = 0
        endif
    else
        set NX = NX - 1
        set dai = BX[NX]
        set wC[dai] = 800
    endif
    set ASw = ASw - 1
    return dai
endfunction
function hVu takes unit GVu, real gVu returns nothing
    call SetUnitFacing(GVu, Nbs(gVu))
endfunction
function k9u takes string h9u returns integer
    local integer F9u
    set DSw[ASw] = h9u
    set ASw = ASw + 1
    if NX == 0 then
        if MX < 32768 then
            set MX = MX + 1
            set F9u = MX
            set wC[F9u] = 799
        else
            call tNr("Out of memory: Could not create CallbackSingle_doAfter_FateDestinyUnlocker.", "when calling error in FateDestinyUnlocker, line 432")
            set F9u = 0
        endif
    else
        set NX = NX - 1
        set F9u = BX[NX]
        set wC[F9u] = 799
    endif
    set ASw = ASw - 1
    return F9u
endfunction
function tLr takes string rLr returns integer
    local integer sLr
    set DSw[ASw] = rLr
    set ASw = ASw + 1
    if NX == 0 then
        if MX < 32768 then
            set MX = MX + 1
            set sLr = MX
            set wC[sLr] = 796
        else
            call tNr("Out of memory: Could not create CallbackSingle_doAfter_FateDestinyUnlocker.", "when calling error in FateDestinyUnlocker, line 418")
            set sLr = 0
        endif
    else
        set NX = NX - 1
        set sLr = BX[NX]
        set wC[sLr] = 796
    endif
    set ASw = ASw - 1
    return sLr
endfunction
function u6w takes string M5w returns integer
    local integer w6w
    set DSw[ASw] = M5w
    set ASw = ASw + 1
    if NX == 0 then
        if MX < 32768 then
            set MX = MX + 1
            set w6w = MX
            set wC[w6w] = 804
        else
            call tNr("Out of memory: Could not create CallbackSingle_doAfter_FateDestinyUnlocker.", "when calling error in FateDestinyUnlocker, line 460")
            set w6w = 0
        endif
    else
        set NX = NX - 1
        set w6w = BX[NX]
        set wC[w6w] = 804
    endif
    set ASw = ASw - 1
    return w6w
endfunction
function v4s takes string j4s returns integer
    local integer x4s
    set DSw[ASw] = j4s
    set ASw = ASw + 1
    if NX == 0 then
        if MX < 32768 then
            set MX = MX + 1
            set x4s = MX
            set wC[x4s] = 803
        else
            call tNr("Out of memory: Could not create CallbackSingle_doAfter_FateDestinyUnlocker.", "when calling error in FateDestinyUnlocker, line 454")
            set x4s = 0
        endif
    else
        set NX = NX - 1
        set x4s = BX[NX]
        set wC[x4s] = 803
    endif
    set ASw = ASw - 1
    return x4s
endfunction
function wAt takes string NPt returns integer
    local integer MPt
    set DSw[ASw] = NPt
    set ASw = ASw + 1
    if NX == 0 then
        if MX < 32768 then
            set MX = MX + 1
            set MPt = MX
            set wC[MPt] = 801
        else
            call tNr("Out of memory: Could not create CallbackSingle_doAfter_FateDestinyUnlocker.", "when calling error in FateDestinyUnlocker, line 446")
            set MPt = 0
        endif
    else
        set NX = NX - 1
        set MPt = BX[NX]
        set wC[MPt] = 801
    endif
    set ASw = ASw - 1
    return MPt
endfunction
function wli takes string NOi returns integer
    local integer MOi
    set DSw[ASw] = NOi
    set ASw = ASw + 1
    if NX == 0 then
        if MX < 32768 then
            set MX = MX + 1
            set MOi = MX
            set wC[MOi] = 794
        else
            call tNr("Out of memory: Could not create CallbackSingle_doAfter_FateDestinyUnlocker.", "when calling error in FateDestinyUnlocker, line 384")
            set MOi = 0
        endif
    else
        set NX = NX - 1
        set MOi = BX[NX]
        set wC[MOi] = 794
    endif
    set ASw = ASw - 1
    return MOi
endfunction
function hWr takes unit Zxr, string Uxr returns nothing
    local real Ixr
    local real Pxr
    local real Axr
    local real Dxr
    local real Hxr
    local real Jxr
    local real Kxr
    local real Lxr
    local real Xxr
    local real Cxr
    local real Vxr
    local real Bxr
    local real Nxr
    local real Mxr
    local real wvr
    local integer uvr
    local string rvr
    local integer svr
    local integer tvr
    local integer ivr
    local integer Svr
    local effect cvr
    local real ovr
    local real Ovr
    local string lvr
    local integer bvr
    local integer yvr
    local integer pvr
    local integer evr
    local integer qvr
    local integer avr
    local integer nvr
    local integer dvr
    local integer fvr
    local integer Rvr
    local effect Tvr
    local effect Yvr
    local effect Gvr
    local integer gvr
    local integer hvr
    local integer Fvr
    local integer kvr
    local integer jvr
    local integer xvr
    local integer vvr
    local integer mvr
    local integer Qvr
    local real Wvr
    local real Evr
    local real Zvr
    local real Uvr
    local real Ivr
    local real Pvr
    local real Avr
    local real Dvr
    local real Hvr
    local real Jvr
    local real Kvr
    local real Lvr
    local real Xvr
    local real Cvr
    local real Vvr
    local real Bvr
    local real Nvr
    local real Mvr
    local real wmr
    local real umr
    local real rmr
    local real smr
    local real tmr
    local real imr
    local real Smr
    local real cmr
    local real omr
    local real Omr
    local real lmr
    local real bmr
    local real ymr
    local real pmr
    local integer emr
    local integer qmr
    local integer amr
    local integer nmr
    local integer dmr
    local integer fmr
    local integer Rmr
    local integer Tmr
    local integer Ymr
    local integer Gmr
    local integer gmr
    local integer hmr
    local integer Fmr
    local integer kmr
    local integer jmr
    local integer xmr
    local integer vmr
    local integer mmr
    local integer Qmr
    local integer Wmr
    local integer Emr
    local integer Zmr
    local integer Umr
    local integer Imr
    local real Pmr
    local real Amr
    local real Dmr
    local real Hmr
    local integer Jmr
    local integer Kmr
    local integer Lmr
    local integer Xmr
    local real Cmr
    local real Vmr
    local real Bmr
    local real Nmr
    local integer Mmr
    local integer wQr
    local integer uQr
    local integer rQr
    local real sQr
    local real tQr
    local real iQr
    local real SQr
    local integer cQr
    local integer oQr
    local integer OQr
    local integer lQr
    local real bQr
    local real yQr
    local real pQr
    local real eQr
    local integer qQr
    local integer aQr
    local integer nQr
    local integer dQr
    local real fQr
    local real RQr
    local real TQr
    local real YQr
    local integer GQr
    local integer gQr
    local integer hQr
    local integer FQr
    local real kQr
    local real jQr
    local real xQr
    local real vQr
    local real mQr
    local real QQr
    local real WQr
    local real EQr
    local integer ZQr
    local integer UQr
    local integer IQr
    local integer PQr
    local real AQr
    local real DQr
    local real HQr
    local real JQr
    local integer KQr
    local integer LQr
    local integer XQr
    local integer CQr
    local real VQr
    local real BQr
    local real NQr
    local real MQr
    local integer wWr
    local integer uWr
    local integer rWr
    local integer sWr
    local real tWr
    local real iWr
    local real SWr
    local real cWr
    local integer oWr
    local integer OWr
    local integer lWr
    local integer bWr
    local integer yWr
    local integer pWr
    local integer eWr
    local integer qWr
    local real aWr
    local real nWr
    local real dWr
    local real fWr
    local real RWr
    local real TWr
    local real YWr
    local real GWr
    local real gWr
    set DSw[ASw] = Uxr
    set ASw = ASw + 1
    set sQ = 2
    set Mvr = ANw(Zxr)
    set wmr = XSw
    set Ixr = Mvr
    set Pxr = wmr
    set umr = Edi(ANw(Zxr), XSw)
    set rmr = Jcw
    set smr = Kcw
    set Axr = umr
    set Dxr = rmr
    set Hxr = smr
    set tmr = Ixr + 600. * Cos(90. * bj_DEGTORAD)
    set imr = Pxr + 600. * Sin(90. * bj_DEGTORAD)
    set Jxr = tmr
    set Kxr = imr
    set Smr = Ixr + 600. * Cos(160. * bj_DEGTORAD)
    set cmr = Pxr + 600. * Sin(160. * bj_DEGTORAD)
    set Lxr = Smr
    set Xxr = cmr
    set omr = Ixr + 600. * Cos(235. * bj_DEGTORAD)
    set Omr = Pxr + 600. * Sin(235. * bj_DEGTORAD)
    set Cxr = omr
    set Vxr = Omr
    set lmr = Ixr + 600. * Cos(305. * bj_DEGTORAD)
    set bmr = Pxr + 600. * Sin(305. * bj_DEGTORAD)
    set Bxr = lmr
    set Nxr = bmr
    set ymr = Ixr + 600. * Cos(20. * bj_DEGTORAD)
    set pmr = Pxr + 600. * Sin(20. * bj_DEGTORAD)
    set Mxr = ymr
    set wvr = pmr
    set uvr = wli("when calling alloc_CallbackSingle_doAfter_FateDestinyUnlocker in FateDestinyUnlocker, line 384")
    call RUs(uvr)
    set K2[uvr] = Zxr
    call Ybr(.05, uvr, "when calling doAfter in FateDestinyUnlocker, line 384")
    set rvr = ""
    set emr = 0
    set qmr = 0
    set amr = 0
    set nmr = 0
    set svr = emr
    set tvr = qmr
    set ivr = amr
    set Svr = nmr
    set cvr = null
    set ovr = .01
    set Ovr = smi(Xqi(Zxr), Qcw, Wcw)
    set lvr = TSs(r5S(Zxr))
    call hVu(Zxr, Deg2Rad(270.))
    if lst(Zxr) then
        set bvr = GetRandomInt($00000000, $00000003)
        set rvr = Rm[bvr]
        set dmr = Tm[bvr]
        set fmr = Ym[bvr]
        set Rmr = Gm[bvr]
        set Tmr = gm[bvr]
        set svr = dmr
        set tvr = fmr
        set ivr = Rmr
        set Svr = Tmr
    elseif lvr == "H02K" or lvr == "H02H" or lvr == "H02B" or lvr == "H02C" then
        set rvr = Rm[$00000003]
        set Ymr = Tm[$00000003]
        set Gmr = Ym[$00000003]
        set gmr = Gm[$00000003]
        set hmr = gm[$00000003]
        set svr = Ymr
        set tvr = Gmr
        set ivr = gmr
        set Svr = hmr
    elseif lvr == "H02S" or lvr == "H02R" or lvr == "H02P" or lvr == "H02Q" then
        set rvr = Rm[$00000002]
        set Fmr = Tm[$00000002]
        set kmr = Ym[$00000002]
        set jmr = Gm[$00000002]
        set xmr = gm[$00000002]
        set svr = Fmr
        set tvr = kmr
        set ivr = jmr
        set Svr = xmr
    elseif lvr == "H023" or lvr == "H024" or lvr == "H02N" or lvr == "H02O" then
        set rvr = Rm[$00000001]
        set vmr = Tm[$00000001]
        set mmr = Ym[$00000001]
        set Qmr = Gm[$00000001]
        set Wmr = gm[$00000001]
        set svr = vmr
        set tvr = mmr
        set ivr = Qmr
        set Svr = Wmr
    elseif lvr == "H02F" or lvr == "H02E" or lvr == "H02L" or lvr == "H02M" then
        set rvr = Rm[$00000000]
        set Emr = Tm[$00000000]
        set Zmr = Ym[$00000000]
        set Umr = Gm[$00000000]
        set Imr = gm[$00000000]
        set svr = Emr
        set tvr = Zmr
        set ivr = Umr
        set Svr = Imr
    endif
    set Wvr = sQ * rQ
    set yvr = ciu("when calling alloc_CallbackSingle_doAfter_FateDestinyUnlocker in FateDestinyUnlocker, line 414")
    call RUs(yvr)
    set Pmr = Jxr
    set Amr = Kxr
    set L2[yvr] = Pmr
    set X2[yvr] = Amr
    set C2[yvr] = Ovr
    set Dmr = Cxr
    set Hmr = Vxr
    set V2[yvr] = Dmr
    set B2[yvr] = Hmr
    set Jmr = svr
    set Kmr = tvr
    set Lmr = ivr
    set Xmr = Svr
    set N2[yvr] = Jmr
    set M2[yvr] = Kmr
    set w5[yvr] = Lmr
    set u5[yvr] = Xmr
    call Ybr(Wvr, yvr, "when calling doAfter in FateDestinyUnlocker, line 414")
    set sQ = sQ + 1
    set Evr = sQ * rQ
    set pvr = tLr("when calling alloc_CallbackSingle_doAfter_FateDestinyUnlocker in FateDestinyUnlocker, line 418")
    call RUs(pvr)
    set Cmr = Mxr
    set Vmr = wvr
    set r5[pvr] = Cmr
    set s5[pvr] = Vmr
    set t5[pvr] = Ovr
    set Bmr = Cxr
    set Nmr = Vxr
    set i5[pvr] = Bmr
    set S5[pvr] = Nmr
    set Mmr = svr
    set wQr = tvr
    set uQr = ivr
    set rQr = Svr
    set c5[pvr] = Mmr
    set o5[pvr] = wQr
    set O5[pvr] = uQr
    set l5[pvr] = rQr
    call Ybr(Evr, pvr, "when calling doAfter in FateDestinyUnlocker, line 418")
    set sQ = sQ + 1
    set Zvr = sQ * rQ
    set evr = WPw("when calling alloc_CallbackSingle_doAfter_FateDestinyUnlocker in FateDestinyUnlocker, line 423")
    call RUs(evr)
    set sQr = Mxr
    set tQr = wvr
    set b5[evr] = sQr
    set y5[evr] = tQr
    set p5[evr] = Ovr
    set iQr = Lxr
    set SQr = Xxr
    set e5[evr] = iQr
    set q5[evr] = SQr
    set cQr = svr
    set oQr = tvr
    set OQr = ivr
    set lQr = Svr
    set a5[evr] = cQr
    set n5[evr] = oQr
    set d5[evr] = OQr
    set f5[evr] = lQr
    call Ybr(Zvr, evr, "when calling doAfter in FateDestinyUnlocker, line 423")
    set sQ = sQ + 1
    set Uvr = sQ * rQ
    set qvr = PSS("when calling alloc_CallbackSingle_doAfter_FateDestinyUnlocker in FateDestinyUnlocker, line 427")
    call RUs(qvr)
    set bQr = Lxr
    set yQr = Xxr
    set R5[qvr] = bQr
    set T5[qvr] = yQr
    set Y5[qvr] = Ovr
    set pQr = Bxr
    set eQr = Nxr
    set G5[qvr] = pQr
    set g5[qvr] = eQr
    set qQr = svr
    set aQr = tvr
    set nQr = ivr
    set dQr = Svr
    set h5[qvr] = qQr
    set F5[qvr] = aQr
    set k5[qvr] = nQr
    set j5[qvr] = dQr
    call Ybr(Uvr, qvr, "when calling doAfter in FateDestinyUnlocker, line 427")
    set sQ = sQ + 1
    set Ivr = sQ * rQ
    set avr = k9u("when calling alloc_CallbackSingle_doAfter_FateDestinyUnlocker in FateDestinyUnlocker, line 432")
    call RUs(avr)
    set fQr = Bxr
    set RQr = Nxr
    set x5[avr] = fQr
    set v5[avr] = RQr
    set m5[avr] = Ovr
    set TQr = Jxr
    set YQr = Kxr
    set Q5[avr] = TQr
    set W5[avr] = YQr
    set GQr = svr
    set gQr = tvr
    set hQr = ivr
    set FQr = Svr
    set E5[avr] = GQr
    set Z5[avr] = gQr
    set U5[avr] = hQr
    set I5[avr] = FQr
    set kQr = Cxr
    set jQr = Vxr
    set P5[avr] = kQr
    set A5[avr] = jQr
    set xQr = Ixr
    set vQr = Pxr
    set D5[avr] = xQr
    set H5[avr] = vQr
    call Ybr(Ivr, avr, "when calling doAfter in FateDestinyUnlocker, line 432")
    set sQ = sQ + 1
    set Pvr = sQ * rQ
    set nvr = fai("when calling alloc_CallbackSingle_doAfter_FateDestinyUnlocker in FateDestinyUnlocker, line 442")
    call RUs(nvr)
    set mQr = Jxr
    set QQr = Kxr
    set J5[nvr] = mQr
    set K5[nvr] = QQr
    set L5[nvr] = Ovr
    set WQr = Cxr
    set EQr = Vxr
    set X5[nvr] = WQr
    set C5[nvr] = EQr
    set ZQr = svr
    set UQr = tvr
    set IQr = ivr
    set PQr = Svr
    set V5[nvr] = ZQr
    set B5[nvr] = UQr
    set N5[nvr] = IQr
    set M5[nvr] = PQr
    call Ybr(Pvr, nvr, "when calling doAfter in FateDestinyUnlocker, line 442")
    set sQ = sQ + 1
    set Avr = sQ * rQ
    set dvr = wAt("when calling alloc_CallbackSingle_doAfter_FateDestinyUnlocker in FateDestinyUnlocker, line 446")
    call RUs(dvr)
    set AQr = Mxr
    set DQr = wvr
    set w6[dvr] = AQr
    set u6[dvr] = DQr
    set r6[dvr] = Ovr
    set HQr = Cxr
    set JQr = Vxr
    set s6[dvr] = HQr
    set t6[dvr] = JQr
    set KQr = svr
    set LQr = tvr
    set XQr = ivr
    set CQr = Svr
    set i6[dvr] = KQr
    set S6[dvr] = LQr
    set c6[dvr] = XQr
    set o6[dvr] = CQr
    call Ybr(Avr, dvr, "when calling doAfter in FateDestinyUnlocker, line 446")
    set sQ = sQ + 1
    set Dvr = sQ * rQ
    set fvr = QEt("when calling alloc_CallbackSingle_doAfter_FateDestinyUnlocker in FateDestinyUnlocker, line 450")
    call RUs(fvr)
    set VQr = Mxr
    set BQr = wvr
    set O6[fvr] = VQr
    set l6[fvr] = BQr
    set b6[fvr] = Ovr
    set NQr = Lxr
    set MQr = Xxr
    set y6[fvr] = NQr
    set p6[fvr] = MQr
    set wWr = svr
    set uWr = tvr
    set rWr = ivr
    set sWr = Svr
    set e6[fvr] = wWr
    set q6[fvr] = uWr
    set a6[fvr] = rWr
    set n6[fvr] = sWr
    call Ybr(Dvr, fvr, "when calling doAfter in FateDestinyUnlocker, line 450")
    set sQ = sQ + 1
    set Hvr = sQ * rQ
    set Rvr = v4s("when calling alloc_CallbackSingle_doAfter_FateDestinyUnlocker in FateDestinyUnlocker, line 454")
    call RUs(Rvr)
    set tWr = Bxr
    set iWr = Nxr
    set d6[Rvr] = tWr
    set f6[Rvr] = iWr
    set R6[Rvr] = Ovr
    set SWr = Jxr
    set cWr = Kxr
    set T6[Rvr] = SWr
    set Y6[Rvr] = cWr
    set oWr = svr
    set OWr = tvr
    set lWr = ivr
    set bWr = Svr
    set G6[Rvr] = oWr
    set g6[Rvr] = OWr
    set h6[Rvr] = lWr
    set F6[Rvr] = bWr
    call Ybr(Hvr, Rvr, "when calling doAfter in FateDestinyUnlocker, line 454")
    set sQ = sQ + 1
    set Yvr = uSs(Ixr, Pxr, "Abilities/Spells/Human/ReviveHuman/ReviveHuman.mdl")
    call iNw(Yvr, 0.)
    set Gvr = Yvr
    call Wwu(Gvr, 0.)
    set Tvr = Gvr
    set Jvr = cQ
    set gvr = u6w("when calling alloc_CallbackSingle_doAfter_FateDestinyUnlocker in FateDestinyUnlocker, line 460")
    call RUs(gvr)
    set k6[gvr] = Tvr
    set yWr = svr
    set pWr = tvr
    set eWr = ivr
    set qWr = Svr
    set j6[gvr] = yWr
    set x6[gvr] = pWr
    set v6[gvr] = eWr
    set m6[gvr] = qWr
    set aWr = Ixr
    set nWr = Pxr
    set Q6[gvr] = aWr
    set W6[gvr] = nWr
    call Ybr(Jvr, gvr, "when calling doAfter in FateDestinyUnlocker, line 460")
    set Kvr = cQ + 1.
    set hvr = bit("when calling alloc_CallbackSingle_doAfter_FateDestinyUnlocker in FateDestinyUnlocker, line 462")
    call RUs(hvr)
    set E6[hvr] = Tvr
    call Ybr(Kvr, hvr, "when calling doAfter in FateDestinyUnlocker, line 462")
    set Lvr = cQ + 2.
    set Fvr = FhS("when calling alloc_CallbackSingle_doAfter_FateDestinyUnlocker in FateDestinyUnlocker, line 464")
    call RUs(Fvr)
    set Z6[Fvr] = Tvr
    call Ybr(Lvr, Fvr, "when calling doAfter in FateDestinyUnlocker, line 464")
    set Xvr = cQ + 4.
    set kvr = JSS("when calling alloc_CallbackSingle_doAfter_FateDestinyUnlocker in FateDestinyUnlocker, line 466")
    call RUs(kvr)
    set U6[kvr] = Tvr
    call Ybr(Xvr, kvr, "when calling doAfter in FateDestinyUnlocker, line 466")
    set Cvr = cQ + 2.
    set jvr = Q9i("when calling alloc_CallbackSingle_doAfter_FateDestinyUnlocker in FateDestinyUnlocker, line 470")
    call RUs(jvr)
    set I6[jvr] = rvr
    set P6[jvr] = cvr
    set dWr = Ixr
    set fWr = Pxr
    set A6[jvr] = dWr
    set D6[jvr] = fWr
    set H6[jvr] = ovr
    set RWr = Axr
    set TWr = Dxr
    set YWr = Hxr
    set J6[jvr] = RWr
    set K6[jvr] = TWr
    set L6[jvr] = YWr
    set X6[jvr] = Ovr
    call Ybr(Cvr, jvr, "when calling doAfter in FateDestinyUnlocker, line 470")
    set Vvr = oQ - 2.
    set xvr = YwS("when calling alloc_CallbackSingle_doAfter_FateDestinyUnlocker in FateDestinyUnlocker, line 486")
    call RUs(xvr)
    call Ybr(Vvr, xvr, "when calling doAfter in FateDestinyUnlocker, line 486")
    set vvr = Idu("when calling alloc_CallbackSingle_doAfter_FateDestinyUnlocker in FateDestinyUnlocker, line 495")
    call RUs(vvr)
    set r7[vvr] = Zxr
    call Ybr(.1, vvr, "when calling doAfter in FateDestinyUnlocker, line 495")
    set Bvr = .5 + .1
    set mvr = bcr("when calling alloc_CallbackSingle_doAfter_FateDestinyUnlocker in FateDestinyUnlocker, line 498")
    call RUs(mvr)
    set GWr = Ixr
    set gWr = Pxr
    set s7[mvr] = GWr
    set t7[mvr] = gWr
    call Ybr(Bvr, mvr, "when calling doAfter in FateDestinyUnlocker, line 498")
    set Nvr = tQ
    set Qvr = JOi("when calling alloc_CallbackSingle_doAfter_FateDestinyUnlocker in FateDestinyUnlocker, line 501")
    call RUs(Qvr)
    set i7[Qvr] = cvr
    set S7[Qvr] = Zxr
    call Ybr(Nvr, Qvr, "when calling doAfter in FateDestinyUnlocker, line 501")
    set ASw = ASw - 1
    set cvr = null
    set Tvr = null
    set Yvr = null
    set Gvr = null
endfunction
function eKw takes integer yKw, string pKw returns nothing
    set DSw[ASw] = pKw
    set ASw = ASw + 1
    call hWr(q7[yKw], "when calling startLimitBreakAnimationOnUnit in FateDestinyUnlocker, line 593")
    set ASw = ASw - 1
endfunction
function Jnr takes dialog Hnr returns integer
    return YEi(Hnr)
endfunction
function Oes takes string ces returns integer
    local integer oes
    set DSw[ASw] = ces
    set ASw = ASw + 1
    if NX == 0 then
        if MX < 32768 then
            set MX = MX + 1
            set oes = MX
            set wC[oes] = 1081
        else
            call tNr("Out of memory: Could not create CallbackSingle_doAfter_doAfter_addAction_doAfter_FateDestinyUnlocker.", "when calling error in FateDestinyUnlocker, line 643")
            set oes = 0
        endif
    else
        set NX = NX - 1
        set oes = BX[NX]
        set wC[oes] = 1081
    endif
    set ASw = ASw - 1
    return oes
endfunction
function a1w takes trigger e1w, button q1w returns event
    return TriggerRegisterDialogButtonEvent(e1w, q1w)
endfunction
function g8S takes unit Y8S, string G8S returns nothing
    call BlzSetHeroProperName(Y8S, G8S)
endfunction
function P6t takes integer I6t returns nothing
    set mM[I6t] = null
    set QM[I6t] = 0
endfunction
function wls takes integer NOs, string MOs returns nothing
    set DSw[ASw] = MOs
    set ASw = ASw + 1
    if MC[NOs] == 0 then
        if NOs == 0 then
            call tNr("Nullpointer exception when calling CustomHero.nullAndIgnoreCurrentHeroUnit", "when calling error in CustomHero, line 177")
        else
            call tNr("Called CustomHero.nullAndIgnoreCurrentHeroUnit on invalid object.", "when calling error in CustomHero, line 177")
        endif
    endif
    call P6t(NOs)
    set ASw = ASw - 1
endfunction
function ecs takes integer Scs, string ccs returns nothing
    local trigger ocs
    local dialog Ocs
    local button lcs
    local integer bcs
    local integer ycs
    local integer pcs
    set DSw[ASw] = ccs
    set ASw = ASw + 1
    call g9u(Y7[Scs], qw, false)
    call g8S(Y7[Scs], Mt[1 + G7[Scs]])
    call v0r(Y7[Scs], true)
    call lKs(Y7[Scs], $4177616E, $00000001)
    call wls(xMi(g7[Scs], "when calling getCHero in FateDestinyUnlocker, line 613"), "when calling nullAndIgnoreCurrentHeroUnit in FateDestinyUnlocker, line 613")
    call lIt(h7[Scs], false, true, "when calling repickResetPlayerStats in FateDestinyUnlocker, line 614")
    call k4t(Ng, h7[Scs], 12022., 6145., "when calling lockAndPan in FateDestinyUnlocker, line 615")
    if nD == h7[Scs]then
        call dii(Iji("Press ENTER to continue ....", "when calling unObfuscate in FateDestinyUnlocker, line 618"), 600., h7[Scs])
    endif
    set ocs = CreateTrigger()
    if Jyr(rm, G7[Scs], "when calling has in FateDestinyUnlocker, line 621") then
        call DialogDestroy(hGi(wps(rm, G7[Scs], "when calling get in FateDestinyUnlocker, line 622"), "when calling dialogFromIndex in FateDestinyUnlocker, line 622"))
        call klS(rm, G7[Scs], "when calling remove in FateDestinyUnlocker, line 623")
    endif
    set Ocs = DialogCreate()
    call DialogSetMessage(Ocs, Iji("Good job: visit tever.xyz and join discord.tever.xyz", "when calling unObfuscate in FateDestinyUnlocker, line 625"))
    set lcs = DialogAddButton(Ocs, Iji("See you in TeveR", "when calling unObfuscate in FateDestinyUnlocker, line 626"), - 1)
    call a1w(ocs, lcs)
    call DialogDisplay(h7[Scs], Ocs, true)
    call VolumeGroupSetVolumeForPlayerBJ(h7[Scs], SOUND_VOLUMEGROUP_UI, 1.0)
    call StartSoundForPlayerBJ(h7[Scs], bj_victoryDialogSound)
    set bcs = g7[Scs]
    call Kcs(bcs, F7[Scs], "when calling setCameraZoomLevel in FateDestinyUnlocker, line 631")
    set ycs = bcs
    call krS(ycs, "when calling cameraCheckLock in FateDestinyUnlocker, line 632")
    call GVw(rm, G7[Scs], Jnr(Ocs), "when calling put in FateDestinyUnlocker, line 634")
    call B2S(ocs, ZZw)
    set pcs = Oes("when calling alloc_CallbackSingle_doAfter_doAfter_addAction_doAfter_FateDestinyUnlocker in FateDestinyUnlocker, line 643")
    call RUs(pcs)
    set k7[pcs] = G7[Scs]
    call Ybr(300., pcs, "when calling doAfter in FateDestinyUnlocker, line 643")
    set ASw = ASw - 1
    set ocs = null
    set Ocs = null
    set lcs = null
endfunction
function EZu takes unit vZu, item mZu, real QZu, real WZu returns boolean
    return UnitDropItemPoint(vZu, mZu, QZu, WZu)
endfunction
function Ldi takes unit Idi, integer Pdi, boolean Adi, string Ddi returns nothing
    local player Hdi
    local integer Jdi
    local integer Kdi
    set DSw[ASw] = Ddi
    set ASw = ASw + 1
    set Hdi = eDs(Idi)
    set Jdi = xMi(tOS(Hdi, "when calling getCustomPlayer in UnitItemUtils, line 591"), "when calling getCHero in UnitItemUtils, line 591")
    set Kdi = hgr(Hdi)
    if gSr(hqs(Jdi, "when calling getHero in UnitItemUtils, line 593"), Pdi) then
        if (not Jyr(KJ, Pdi + Kdi, "when calling has in UnitItemUtils, line 596"))or TYt(wps(KJ, Pdi + Kdi, "when calling get in UnitItemUtils, line 596")) != Adi then
            call GVw(KJ, Pdi + Kdi, O_i(Adi), "when calling put in UnitItemUtils, line 597")
            call RIu(hqs(Jdi, "when calling getHero in UnitItemUtils, line 598"), Pdi, Adi, false)
        endif
    endif
    set ASw = ASw - 1
    set Hdi = null
endfunction
function X0i takes unit L0i returns nothing
    if IsSuspendedXP(L0i) then
        call DisplayTimedTextToForce(MwS(GetOwningPlayer(L0i)), 5., "Experience is re-enabled...")
    endif
    call SuspendHeroXPBJ(true, L0i)
endfunction
function edS takes integer cdS, string odS returns nothing
    local integer OdS
    local boolean ldS
    local boolean bdS
    local integer ydS
    local integer pdS
    set DSw[ASw] = odS
    set ASw = ASw + 1
    set OdS = xus(l8[cdS], "when calling getCustomPlayer in HeroRevive, line 100")
    call Hus(wW[l8[cdS]])
    call klS(rW, Aei(b8[cdS]), "when calling remove in HeroRevive, line 102")
    if not(uW[l8[cdS]] == null) then
        call DestroyTimerDialog(uW[l8[cdS]])
        set uW[l8[cdS]] = null
    endif
    set ldS = false
    call X0i(hqs(xMi(OdS, "when calling getCHero in HeroRevive, line 110"), "when calling getHero in HeroRevive, line 110"))
    if not yXu(b8[cdS]) then
        set ldS = ReviveHeroLoc(b8[cdS], yr[1 + l8[cdS]], true)
    endif
    if (not ldS)and(not yXu(hqs(xMi(OdS, "when calling getCHero in HeroRevive, line 115"), "when calling getHero in HeroRevive, line 115"))) then
        set ldS = ReviveHeroLoc(hqs(xMi(OdS, "when calling getCHero in HeroRevive, line 116"), "when calling getHero in HeroRevive, line 116"), yr[1 + l8[cdS]], true)
    endif
    if ldS then
        set bdS = dVw(OdS, "when calling getCameraIsLockedIn in HeroRevive, line 119")
        call BwS(y8[cdS])
        call SetUnitManaPercentBJ(b8[cdS], 80.)
        call SetUnitInvulnerable(b8[cdS], false)
        call SelectUnitForPlayerSingle(b8[cdS], y8[cdS])
        call PanCameraToTimedLocForPlayer(y8[cdS], yr[1 + l8[cdS]], 0.)
        call DestroyTimerDialog(ai[1 + l8[cdS]])
        set hu[GetPlayerId(y8[cdS])] = false
        if IsPlayerInForce(y8[cdS], ws) then
            call ForceRemovePlayer(ws, y8[cdS])
        endif
        call Axu(b8[cdS], true)
        call Ydu(b8[cdS], "when calling checkForInspiritAndApplyRegen in HeroRevive, line 136")
        if ict(b8[cdS], l2s(Iji(am, "when calling unObfuscate in HeroRevive, line 139"), "when calling fromRawCode in HeroRevive, line 139")) == 6 then
            set ydS = 0
            set pdS = dcs(b8[cdS]) - 1
            loop
    exitwhen ydS > pdS
    if q3t(ofi(b8[cdS], ydS)) == l2s(Iji(am, "when calling unObfuscate in HeroRevive, line 141"), "when calling fromRawCode in HeroRevive, line 141") then
                    call EZu(b8[cdS], ofi(b8[cdS], ydS), ANw(b8[cdS]), XSw)
    endif
    set ydS = ydS + 1
            endloop
        endif
        if r5S(b8[cdS]) == pk then
            call Ldi(b8[cdS], l2s(Iji("A05I", "when calling unObfuscate in HeroRevive, line 146"), "when calling fromRawCode in HeroRevive, line 146"), false, "when calling disableAbilityCustom in HeroRevive, line 146")
        endif
        if bdS and b8[cdS] != null then
            call WDr(OdS, "when calling cameraLock in HeroRevive, line 149")
        endif
    endif
    if Vgt(OdS, "when calling getCommandsDisabled in HeroRevive, line 152") then
        call GZs(OdS, false, "when calling setCommandsDisabled in HeroRevive, line 153")
    endif
    set ASw = ASw - 1
endfunction
function eut takes integer put returns nothing
    if WX != null then
        call uFr(WX)
        set WX = null
    endif
    set WX = dps(aD[PLAYER_NEUTRAL_AGGRESSIVE], AK, oQu(FK), Gcw, 270. * JG)
endfunction
function f0S takes integer d0S returns nothing
    call mhS(Guw[d0S], "Stand 1")
endfunction
function eYr takes unit OYr, integer lYr, integer bYr, integer yYr, integer pYr returns nothing
    call SetUnitVertexColor(OYr, lYr, bYr, yYr, pYr)
endfunction
function Eau takes unit gau, string hau returns nothing
    local integer Fau
    local integer kau
    local integer jau
    local unit xau
    local unit vau
    local unit mau
    local unit Qau
    local unit Wau
    set DSw[ASw] = hau
    set ASw = ASw + 1
    set Fau = 0
    set kau = 1
    set jau = sx - 1
    loop
        exitwhen kau > jau
        if D3[ox[Fau]] > D3[ox[kau]]then
            set Fau = kau
        endif
        set kau = kau + 1
    endloop
    if D3[ox[Fau]] >= ix then
        call uFr(gau)
    else
        call u7i(ox[Fau], gau, "when calling enqueue in DummyRecycler, line 51")
        set xau = gau
        call grS(xau, oXr(KP, LP, 16., 16.), Tcw)
        set vau = xau
        call Ggr(vau)
        set mau = vau
        call hVu(mau, SGi(Fau * tx))
        set Qau = mau
        call rZu(Qau, 1.)
        set Wau = Qau
        call eYr(Wau, jh, xh, vh, mh)
    endif
    set ASw = ASw - 1
    set xau = null
    set vau = null
    set mau = null
    set Qau = null
    set Wau = null
endfunction
function LRr takes integer JRr, string KRr returns nothing
    set DSw[ASw] = KRr
    set ASw = ASw + 1
    if QV[JRr] == 0 then
        call tNr("Double free: object of type DummyCaster", "when calling error in DummyCaster, line 28")
    else
        set xV[vV] = JRr
        set vV = vV + 1
        set QV[JRr] = 0
    endif
    set ASw = ASw - 1
endfunction
function qvi takes integer evi returns nothing
endfunction
function Iau takes integer Zau, string Uau returns nothing
    set DSw[ASw] = Uau
    set ASw = ASw + 1
    call qvi(Zau)
    call LRr(Zau, "when calling dealloc_DummyCaster in DummyCaster, line 28")
    set ASw = ASw - 1
endfunction
function vhi takes integer jhi, string xhi returns nothing
    set DSw[ASw] = xhi
    set ASw = ASw + 1
    if QV[jhi] == 0 then
        if jhi == 0 then
            call tNr("Nullpointer exception when calling DummyCaster.DummyCaster", "when calling error in DummyCaster, line 28")
        else
            call tNr("Called DummyCaster.DummyCaster on invalid object.", "when calling error in DummyCaster, line 28")
        endif
    endif
    call Iau(jhi, "when calling destroyDummyCaster in DummyCaster, line 28")
    set ASw = ASw - 1
endfunction
function f1r takes integer a1r, string n1r returns nothing
    local unit d1r
    set DSw[ASw] = n1r
    set ASw = ASw + 1
    set d1r = Z3[a1r]
    call Q_s(d1r, U3[a1r])
    call Eau(Z3[a1r], "when calling recycle in DummyCaster, line 91")
    set m3[I3[a1r]] = m3[I3[a1r]] - 1
    if m3[I3[a1r]] == 0 then
        call vhi(I3[a1r], "when calling dispatch_DummyCaster_destroyDummyCaster in DummyCaster, line 94")
    endif
    set ASw = ASw - 1
    set d1r = null
endfunction
function Bcr takes string Ccr returns integer
    local integer Vcr
    set DSw[ASw] = Ccr
    set ASw = ASw + 1
    if rC == 0 then
        if sC < 32768 then
            set sC = sC + 1
            set Vcr = sC
            set tC[Vcr] = 660
        else
            call tNr("Out of memory: Could not create CallbackCounted_doPeriodicallyCounted_doAfter_Voidless_mechanics.", "when calling error in Voidless_mechanics, line 153")
            set Vcr = 0
        endif
    else
        set rC = rC - 1
        set Vcr = uC[rC]
        set tC[Vcr] = 660
    endif
    set ASw = ASw - 1
    return Vcr
endfunction
function U_r takes integer v_r, integer m_r, integer Q_r, integer W_r, integer E_r returns integer
    local integer Z_r = v_r
    if m_r > Z_r then
        set Z_r = m_r
    endif
    if Q_r < Z_r then
        set Z_r = Q_r
    endif
    set Z_r = d0u((Z_r - m_r) * (E_r - W_r) * 1. / (Q_r - m_r) + W_r)
    if W_r > Z_r then
        set Z_r = W_r
    endif
    if E_r < Z_r then
        set Z_r = E_r
    endif
    return Z_r
endfunction
function cLu takes rect VKu, real BKu, real NKu, real MKu returns real
    local integer wLu = 25
    local real sLu = CKu(VKu)
    local real tLu = Ccw
    local real uLu = sLu
    local real rLu = tLu
    local real iLu
    local real SLu
    loop
        exitwhen not(wLu > 0)
        if fYr(uLu, rLu, NKu, MKu) >= BKu then
            exitwhen true
        else
            set iLu = CKu(VKu)
            set SLu = Ccw
            set uLu = iLu
            set rLu = SLu
        endif
        set wLu = wLu - 1
    endloop
    set Yow = uLu
    set Gow = rLu
    return Yow
endfunction
function fEt takes integer AWt, string DWt returns nothing
    local real HWt
    local real JWt
    local real KWt
    local real LWt
    local real XWt
    local real CWt
    local real VWt
    local boolean BWt
    local integer NWt
    local integer MWt
    local integer wEt
    local integer uEt
    local effect rEt
    local effect sEt
    local effect tEt
    local effect iEt
    local effect SEt
    local effect cEt
    local effect oEt
    local effect OEt
    local integer lEt
    local real bEt
    local integer yEt
    local real pEt
    local real eEt
    local real qEt
    local real aEt
    local real nEt
    local real dEt
    set DSw[ASw] = DWt
    set ASw = ASw + 1
    call hXt(uK, "dissipate", 3., "when calling playAnimation in Voidless_mechanics, line 133")
    set pEt = ANw(uK)
    set eEt = XSw
    set HWt = pEt
    set JWt = eEt
    set qEt = cLu(RK, 500., HWt, JWt)
    set aEt = Gow
    set KWt = qEt
    set LWt = aEt
    set XWt = fYr(HWt, JWt, KWt, LWt)
    set CWt = (250 + U_r(OK, $00000000, $00000019, $00000000, $00000110)) * iF
    set VWt = Atan2(LWt - JWt, KWt - HWt)
    set BWt = false
    if OK < 5 then
        set MWt = 2
    else
        set MWt = 4
    endif
    set NWt = MWt
    set wEt = 1
    set uEt = NWt
    loop
        exitwhen wEt > uEt
        set sEt = uSs(HWt, JWt, MK)
        call Xht(sEt, tL, iL, SL)
        set tEt = sEt
        call Wwu(tEt, 2.)
        set iEt = tEt
        call Y8w(iEt, ANIM_TYPE_DISSIPATE)
        set rEt = iEt
        call vwt(VL, agS(rEt), "when calling add in Voidless_mechanics, line 147")
        call n8i(rEt, cLu(RK, 500., HWt, JWt), Gow, true, CWt, true, "when calling moveTowards in Voidless_mechanics, line 148")
        set wEt = wEt + 1
    endloop
    call Mvt(uK)
    set cEt = uSs(HWt, JWt, MK)
    call Xht(cEt, tL, iL, SL)
    set oEt = cEt
    call Wwu(oEt, 2.)
    set OEt = oEt
    call Y8w(OEt, ANIM_TYPE_DISSIPATE)
    set SEt = OEt
    set bEt = iF
    set yEt = d0u(XWt / CWt * 2.)
    set lEt = Bcr("when calling alloc_CallbackCounted_doPeriodicallyCounted_doAfter_Voidless_mechanics in Voidless_mechanics, line 153")
    call Inr(lEt)
    set niw[lEt] = SEt
    set diw[lEt] = VWt
    set nEt = KWt
    set dEt = LWt
    set fiw[lEt] = nEt
    set Riw[lEt] = dEt
    set Tiw[lEt] = CWt
    set Yiw[lEt] = XWt
    set Giw[lEt] = BWt
    call l5s(bEt, yEt, lEt, "when calling doPeriodicallyCounted in Voidless_mechanics, line 153")
    set ASw = ASw - 1
    set rEt = null
    set sEt = null
    set tEt = null
    set iEt = null
    set SEt = null
    set cEt = null
    set oEt = null
    set OEt = null
endfunction
function fNw takes integer dNw returns nothing
    call qaS(e9[dNw])
endfunction
function fRu takes integer aRu, string nRu returns integer
    local integer dRu
    set DSw[ASw] = nRu
    set ASw = ASw + 1
    set dRu = kgs(lm, bm, 10., S2[aRu] + xm, 10., c2[aRu], $000000FF, $000000FF, $000000FF, $00000000, o2[aRu], "when calling _CreateTTExEntityShift in FateDestinyUnlocker, line 263")
    set ASw = ASw - 1
    return dRu
endfunction
function fVr takes integer qVr, string aVr returns nothing
    local group nVr
    local unit dVr
    set DSw[ASw] = aVr
    set ASw = ASw + 1
    set nVr = XbS(fc[$0000000C])
    loop
        exitwhen not hJw(nVr)
        set dVr = tPr(nVr)
        call J7i(dVr, CKu(Ul), Ccw)
        call n1s(eDs(dVr), oQu(Ul), Gcw, 0.)
        if not Jyr(RW, hgr(eDs(dVr)), "when calling has in DungeonCmds, line 466") then
            call GVw(RW, hgr(eDs(dVr)), B5r(n8w(xus(hgr(eDs(dVr)), "when calling getCustomPlayer in DungeonCmds, line 467"), "when calling getCameraZoomLevel in DungeonCmds, line 467")), "when calling put in DungeonCmds, line 467")
        endif
        call Kcs(GgS(eDs(dVr), "when calling getCustomPlayer in DungeonCmds, line 469"), 2500., "when calling setCameraZoomLevel in DungeonCmds, line 469")
        call krS(tOS(eDs(dVr), "when calling getCustomPlayer in DungeonCmds, line 470"), "when calling cameraCheckLock in DungeonCmds, line 470")
    endloop
    call lxs(nVr)
    set ASw = ASw - 1
    set nVr = null
    set dVr = null
endfunction
function fWu takes integer dWu returns nothing
    call PlaySoundAtPointBJ(CreateSound("Sound/Interface/UpkeepRing.wav", false, true, true, $0000000A, $0000000A, "DefaultEAXON"), 150., V3[dWu], 50.)
endfunction
function Xvt takes string Lvt returns nothing
endfunction
function Sli takes integer tli, integer ili returns nothing
    if tli != ili then
        call Xvt("Expected <" + fju(ili) + ">, Actual <" + fju(tli) + ">")
    endif
endfunction
function f_S takes integer d_S returns nothing
    set kh = kh / 2
    call Sli(kh, $000000FA)
endfunction
function f_t takes integer n_t returns nothing
    local lightning d_t = AddLightningEx("DRAM", true, J5[n_t], K5[n_t], L5[n_t], X5[n_t], C5[n_t], L5[n_t])
    call clu(d_t, V5[n_t], B5[n_t], N5[n_t], M5[n_t])
    set Bm = d_t
    set d_t = null
endfunction
function Fri takes string gri returns integer
    local integer hri
    set DSw[ASw] = gri
    set ASw = ASw + 1
    if NX == 0 then
        if MX < 32768 then
            set MX = MX + 1
            set hri = MX
            set wC[hri] = 793
        else
            call tNr("Out of memory: Could not create CallbackSingle_doAfter_FateDestinyUnlocker.", "when calling error in FateDestinyUnlocker, line 351")
            set hri = 0
        endif
    else
        set NX = NX - 1
        set hri = BX[NX]
        set wC[hri] = 793
    endif
    set ASw = ASw - 1
    return hri
endfunction
function Das takes integer Eas, unit Zas, string Uas returns nothing
    local effect Ias
    local effect Pas
    local integer Aas
    set DSw[ASw] = Uas
    set ASw = ASw + 1
    if not GpS(Vv, Eas, "when calling has in FateDestinyUnlocker, line 345") then
        call dii(Iji("What do you expect from filling your bags with The Void? You can never escape your Destiny! Neither will the universe explode nor can you travel in time. In the end you will just die.", "when calling unObfuscate in FateDestinyUnlocker, line 346"), 15., aD[Eas])
        set Ias = uSs(ANw(Zas), XSw, qm)
        call Wwu(Ias, 1.5)
        set Pas = Ias
        call Tir(Pas, 2.55, "when calling destrTimed in FateDestinyUnlocker, line 347")
        call vwt(Vv, Eas, "when calling add in FateDestinyUnlocker, line 349")
        set Aas = Fri("when calling alloc_CallbackSingle_doAfter_FateDestinyUnlocker in FateDestinyUnlocker, line 351")
        call RUs(Aas)
        set J2[Aas] = Eas
        call Ybr(5., Aas, "when calling doAfter in FateDestinyUnlocker, line 351")
    endif
    set ASw = ASw - 1
    set Ias = null
    set Pas = null
endfunction
function g3u takes integer T3u, string Y3u returns nothing
    local integer G3u
    set DSw[ASw] = Y3u
    set ASw = ASw + 1
    set G3u = ict(G0w[T3u], l2s(Iji(am, "when calling unObfuscate in Items_Pickup_Drop, line 413"), "when calling fromRawCode in Items_Pickup_Drop, line 413"))
    if G3u == 3 then
        call Das(g0w[T3u], G0w[T3u], "when calling pickedUp3TimesTheDestiny in Items_Pickup_Drop, line 415")
    elseif G3u > 3 then
        call dii(Iji("That would not be wise...", "when calling unObfuscate in Items_Pickup_Drop, line 417"), 5., h0w[T3u])
        call UTu(G0w[T3u], F0w[T3u], g0w[T3u], "when calling dropItem_Or_dropToRewardArea in Items_Pickup_Drop, line 418")
    endif
    set ASw = ASw - 1
endfunction
function g6r takes integer G6r returns nothing
    call Z7t(TO, wsw[G6r])
endfunction
function Cai takes group Hai, integer Jai, string Kai returns nothing
    local unit Lai
    local group Xai
    set DSw[ASw] = Kai
    set ASw = ASw + 1
    set Xai = Hai
    loop
        exitwhen not hJw(Xai)
        set Lai = tPr(Xai)
        call jcS(Jai, Lai, "when calling callback in ClosureForGroups, line 40")
    endloop
    call qju(Jai, "when calling dispatch_ForGroupCallback_destroyForGroupCallback in ClosureForGroups, line 41")
    set ASw = ASw - 1
    set Lai = null
    set Xai = null
endfunction
function l6w takes string o6w returns integer
    local integer O6w
    set DSw[ASw] = o6w
    set ASw = ASw + 1
    if LC == 0 then
        if XC < 32768 then
            set XC = XC + 1
            set O6w = XC
            set CC[O6w] = 1163
        else
            call tNr("Out of memory: Could not create ForGroupCallback_forEachFrom_Preloader.", "when calling error in Preloader, line 46")
            set O6w = 0
        endif
    else
        set LC = LC - 1
        set O6w = KC[LC]
        set CC[O6w] = 1163
    endif
    set ASw = ASw - 1
    return O6w
endfunction
function BTS takes string XTS returns nothing
    local integer CTS
    local group VTS
    set DSw[ASw] = XTS
    set ASw = ASw + 1
    call uFr(hD)
    set VTS = gD
    set CTS = l6w("when calling alloc_ForGroupCallback_forEachFrom_Preloader in Preloader, line 46")
    call Cai(VTS, CTS, "when calling forEachFrom in Preloader, line 46")
    call Z5u(gD)
    set gD = null
    set ASw = ASw - 1
    set VTS = null
endfunction
function gAr takes integer YAr, string GAr returns nothing
    set DSw[ASw] = GAr
    set ASw = ASw + 1
    call BTS("when calling finishPreload in Preloader, line 55")
    set ASw = ASw - 1
endfunction
function gOS takes integer YOS, string GOS returns nothing
    set DSw[ASw] = GOS
    set ASw = ASw + 1
    call eys(Lv, hgr(W7[YOS]), "when calling remove in FateDestinyUnlocker, line 712")
    set ASw = ASw - 1
endfunction
function yiu takes effect oiu, integer Oiu, integer liu, integer biu returns nothing
    call BlzSetSpecialEffectColor(oiu, Oiu, liu, biu)
endfunction
function gQs takes integer dQs, string fQs returns nothing
    local effect RQs
    local effect TQs
    local effect YQs
    local effect GQs
    set DSw[ASw] = fQs
    set ASw = ASw + 1
    set RQs = DpS("war3mapImported\\ShiningForce.mdl", AOS(F9[dQs], 200.), qcw, acw)
    call yiu(RQs, $000000FF, $00000000, $00000000)
    set TQs = RQs
    call Wwu(TQs, 3.)
    set YQs = TQs
    call iNw(YQs, .1)
    set GQs = YQs
    call yYi(GQs, 3., "when calling destrAdvTimed in Imp3DragonFortress, line 1276")
    set ASw = ASw - 1
    set RQs = null
    set TQs = null
    set YQs = null
    set GQs = null
endfunction
function gVr takes integer RVr returns nothing
    local trigger TVr = CreateTrigger()
    local integer YVr = 0
    local integer GVr = Lh
    loop
        exitwhen YVr > GVr
        call QYr(TVr, Vx[YVr], null)
        set YVr = YVr + 1
    endloop
    call B2S(TVr, gUw)
    set TVr = null
endfunction
function gkr takes integer Tkr returns nothing
    local trigger Ykr = CreateTrigger()
    local trigger Gkr
    call QYr(Ykr, UP, null)
    set Gkr = Ykr
    call B2S(Gkr, cIw)
    set Ykr = null
    set Gkr = null
endfunction
function c1s takes string r1s, string s1s returns string
    local string t1s
    local integer i1s
    local string S1s
    set DSw[ASw] = s1s
    set ASw = ASw + 1
    set t1s = ""
    set i1s = E8s(r1s, "when calling iterator in SpellIconWithGif, line 36")
    loop
        exitwhen not x9i(i1s)
        set S1s = bEr(i1s)
        if S1s == " " then
            set t1s = t1s + S1s
        else
            set t1s = t1s + WH[GetRandomInt($00000000, $00000005)] + S1s + QH
        endif
    endloop
    call Swr(i1s, "when calling close in SpellIconWithGif, line 36")
    set ASw = ASw - 1
    return t1s
endfunction
function gti takes integer Tti, string Yti returns nothing
    local integer Gti
    set DSw[ASw] = Yti
    set ASw = ASw + 1
    set Gti = 0
    loop
        exitwhen Gti > 100
        call vwt(xH, err(c1s(dH, "when calling getColoredString in SpellIconWithGif, line 80"), "when calling stringToIndex in SpellIconWithGif, line 80"), "when calling add in SpellIconWithGif, line 80")
        set Gti = Gti + 1
    endloop
    set ASw = ASw - 1
endfunction
function h0t takes integer g0t returns nothing
    call Tri(Srw[g0t])
endfunction
function h2s takes integer y2s returns nothing
    local integer p2s
    local integer e2s
    local trigger q2s
    local trigger a2s
    local trigger n2s
    local trigger d2s
    local trigger f2s
    local trigger R2s
    local trigger T2s
    local trigger Y2s
    local trigger G2s
    local trigger g2s
    call B2S(ph, BEw)
    call B2S(eh, NEw)
    call B2S(qh, MEw)
    set p2s = 0
    set e2s = bj_MAX_PLAYERS - 1
    loop
        exitwhen p2s > e2s
        call WtS(eh, aD[p2s], EVENT_PLAYER_LEAVE)
        set q2s = qh
        call WtS(q2s, aD[p2s], EVENT_PLAYER_ARROW_DOWN_DOWN)
        set a2s = q2s
        call WtS(a2s, aD[p2s], EVENT_PLAYER_ARROW_DOWN_UP)
        set n2s = a2s
        call WtS(n2s, aD[p2s], EVENT_PLAYER_ARROW_UP_DOWN)
        set d2s = n2s
        call WtS(d2s, aD[p2s], EVENT_PLAYER_ARROW_UP_UP)
        set f2s = d2s
        call WtS(f2s, aD[p2s], EVENT_PLAYER_ARROW_LEFT_DOWN)
        set R2s = f2s
        call WtS(R2s, aD[p2s], EVENT_PLAYER_ARROW_LEFT_UP)
        set T2s = R2s
        call WtS(T2s, aD[p2s], EVENT_PLAYER_ARROW_RIGHT_DOWN)
        set Y2s = T2s
        call WtS(Y2s, aD[p2s], EVENT_PLAYER_ARROW_RIGHT_UP)
        set G2s = Y2s
        call WtS(G2s, aD[p2s], EVENT_PLAYER_END_CINEMATIC)
        set g2s = G2s
        call Ebs(g2s, aD[p2s], "", false)
        set p2s = p2s + 1
    endloop
    call Ypu(EVENT_PLAYER_UNIT_SPELL_EFFECT, null, wZw, null)
    set q2s = null
    set a2s = null
    set n2s = null
    set d2s = null
    set f2s = null
    set R2s = null
    set T2s = null
    set Y2s = null
    set G2s = null
    set g2s = null
endfunction
function Bvs takes string Cvs returns integer
    local integer Vvs
    set DSw[ASw] = Cvs
    set ASw = ASw + 1
    if BV == 0 then
        if NV < 32768 then
            set NV = NV + 1
            set Vvs = NV
            set MV[Vvs] = 1158
        else
            call tNr("Out of memory: Could not create ForForceCallback_execute_nullTimer_Encoder_Encoder.", "when calling error in Encoder, line 116")
            set Vvs = 0
        endif
    else
        set BV = BV - 1
        set Vvs = VV[BV]
        set MV[Vvs] = 1158
    endif
    set ASw = ASw - 1
    return Vvs
endfunction
function Rtt takes string dtt returns integer
    local integer ftt
    set DSw[ASw] = dtt
    set ASw = ASw + 1
    if BV == 0 then
        if NV < 32768 then
            set NV = NV + 1
            set ftt = NV
            set MV[ftt] = 1157
        else
            call tNr("Out of memory: Could not create ForForceCallback_execute_nullTimer_Encoder_Encoder.", "when calling error in Encoder, line 114")
            set ftt = 0
        endif
    else
        set BV = BV - 1
        set ftt = VV[BV]
        set MV[ftt] = 1157
    endif
    set ASw = ASw - 1
    return ftt
endfunction
function pnS takes string bnS returns integer
    local integer ynS
    set DSw[ASw] = bnS
    set ASw = ASw + 1
    if BV == 0 then
        if NV < 32768 then
            set NV = NV + 1
            set ynS = NV
            set MV[ynS] = 1160
        else
            call tNr("Out of memory: Could not create ForForceCallback_execute_nullTimer_Encoder_Encoder.", "when calling error in Encoder, line 120")
            set ynS = 0
        endif
    else
        set BV = BV - 1
        set ynS = VV[BV]
        set MV[ynS] = 1160
    endif
    set ASw = ASw - 1
    return ynS
endfunction
function tWs takes string rWs returns integer
    local integer sWs
    set DSw[ASw] = rWs
    set ASw = ASw + 1
    if BV == 0 then
        if NV < 32768 then
            set NV = NV + 1
            set sWs = NV
            set MV[sWs] = 1159
        else
            call tNr("Out of memory: Could not create ForForceCallback_execute_nullTimer_Encoder_Encoder.", "when calling error in Encoder, line 118")
            set sWs = 0
        endif
    else
        set BV = BV - 1
        set sWs = VV[BV]
        set MV[sWs] = 1159
    endif
    set ASw = ASw - 1
    return sWs
endfunction
function h6i takes integer f6i, string R6i returns nothing
    local integer T6i
    local integer Y6i
    local integer G6i
    local integer g6i
    set DSw[ASw] = R6i
    set ASw = ASw + 1
    call I9r("hash: " + fju(P1[u4[f6i]]))
    set T6i = Rtt("when calling alloc_ForForceCallback_execute_nullTimer_Encoder_Encoder in Encoder, line 114")
    set t4[T6i] = u4[f6i]
    call ggu(T6i, "when calling execute in Encoder, line 114")
    call I9r("encoded hash")
    set Y6i = Bvs("when calling alloc_ForForceCallback_execute_nullTimer_Encoder_Encoder in Encoder, line 116")
    set i4[Y6i] = u4[f6i]
    call ggu(Y6i, "when calling execute in Encoder, line 116")
    call I9r("clean")
    set G6i = tWs("when calling alloc_ForForceCallback_execute_nullTimer_Encoder_Encoder in Encoder, line 118")
    set S4[G6i] = u4[f6i]
    call ggu(G6i, "when calling execute in Encoder, line 118")
    call I9r("before toString bs: " + fju(gTS(r4[f6i], "when calling getLength in Encoder, line 119")))
    set g6i = pnS("when calling alloc_ForForceCallback_execute_nullTimer_Encoder_Encoder in Encoder, line 120")
    set c4[g6i] = u4[f6i]
    set o4[g6i] = r4[f6i]
    set O4[g6i] = s4[f6i]
    call ggu(g6i, "when calling execute in Encoder, line 120")
    set ASw = ASw - 1
endfunction
function hJt takes integer gJt returns nothing
    set kh = kh * 2
endfunction
function heu takes integer geu returns nothing
    call Yrr(aO, $000D0012, oQu(Bp), Gcw)
    call Yrr(nO, $000D0012, oQu(Bp), Gcw)
endfunction
function hii takes integer gii returns nothing
    call Ggr(K2[gii])
    call v0r(K2[gii], true)
endfunction
function his takes integer Gis, string gis returns nothing
    set DSw[ASw] = gis
    set ASw = ASw + 1
    call eys(lA, fuw[Gis], "when calling remove in NpcHandler, line 510")
    set ASw = ASw - 1
endfunction
function hjr takes integer gjr returns nothing
    call CreateQuestBJ(Zww_2778[gjr], Uww_2271[gjr], Iww_983[gjr], Pww_1748[gjr])
endfunction
function i2u takes integer s2u, string t2u returns nothing
    set DSw[ASw] = t2u
    set ASw = ASw + 1
    call qaS(l9[s2u])
    call GVw(aW, hgr(eDs(l9[s2u])), O_i(false), "when calling put in Imp3DragonFortress, line 339")
    set ASw = ASw - 1
endfunction
function i4s takes integer s4s, string t4s returns nothing
    set DSw[ASw] = t4s
    set ASw = ASw + 1
    if r5S(A9[s4s]) == D9[s4s]then
        call vji(H9[s4s], A9[s4s], "when calling run in Imp4, line 103")
        set J9[s4s] = J9[s4s] + 1
    endif
    set ASw = ASw - 1
endfunction
function Adr takes integer Idr, boolean Pdr returns nothing
    if (not gSr(G4[yM[Idr]], pM[Idr]))or Pdr then
        call V5S(G4[yM[Idr]], pM[Idr])
    endif
endfunction
function ufS takes integer NdS, boolean MdS, string wfS returns nothing
    set DSw[ASw] = wfS
    set ASw = ASw + 1
    if FC[NdS] == 0 then
        if NdS == 0 then
            call tNr("Nullpointer exception when calling Buff.refresh", "when calling error in Buff, line 103")
        else
            call tNr("Called Buff.refresh on invalid object.", "when calling error in Buff, line 103")
        endif
    endif
    call Adr(NdS, MdS)
    set ASw = ASw - 1
endfunction
function iSt takes integer uSt, string rSt returns nothing
    local integer sSt
    local integer tSt
    set DSw[ASw] = rSt
    set ASw = ASw + 1
    if ist(OM[uSt]) == lM[uSt] and Hxs(lM[uSt]) then
        set tSt = Kqu(v3i(lM[uSt]), "when calling staticItr in Buff, line 154")
        loop
            exitwhen not Tji(tSt)
            set sSt = LXi(tSt)
            call ufS(sSt, true, "when calling refresh in Buff, line 155")
        endloop
    endif
    set ASw = ASw - 1
endfunction
function ihr takes integer shr, string thr returns nothing
    set DSw[ASw] = thr
    set ASw = ASw + 1
    if yct(Z0w[shr], U0w[shr]) == 0 then
        call Q3s(- 1, Z0w[shr], "when calling updateStabilizedVoidPrismBonus in Items_Pickup_Drop, line 555")
    endif
    set ASw = ASw - 1
endfunction
function iit takes integer sit, string tit returns nothing
    set DSw[ASw] = tit
    set ASw = ASw + 1
    call paS("when calling antiCheatText in JobAdvancementQuestHandler, line 1023")
    set ASw = ASw - 1
endfunction
function itu takes integer rtu, string stu returns nothing
    local integer ttu
    set DSw[ASw] = stu
    set ASw = ASw + 1
    set S = DYt("83178529900417", "when calling unObfuscateReal in Configuration, line 108")
    set c = DYt("83178529830490", "when calling unObfuscateReal in Configuration, line 109")
    set pw = k6w("909090909066", "when calling unObfuscateInt in Configuration, line 110")
    set dw = DYt("90048385", "when calling unObfuscateReal in Configuration, line 111")
    set fw = DYt("900438", "when calling unObfuscateReal in Configuration, line 112")
    set Rw = DYt("90049029", "when calling unObfuscateReal in Configuration, line 113")
    set Tw = DYt("9004909029", "when calling unObfuscateReal in Configuration, line 114")
    set Yw = DYt("9004909029", "when calling unObfuscateReal in Configuration, line 115")
    set Gw = DYt("9004909029", "when calling unObfuscateReal in Configuration, line 116")
    set gw = DYt("9004908329", "when calling unObfuscateReal in Configuration, line 117")
    set hw = DYt("9004908329", "when calling unObfuscateReal in Configuration, line 118")
    set Fw = DYt("9004909048", "when calling unObfuscateReal in Configuration, line 119")
    set kw = k6w("90909017", "when calling unObfuscateInt in Configuration, line 120")
    set jw = k6w("90908317", "when calling unObfuscateInt in Configuration, line 121")
    set xw = k6w("90909029", "when calling unObfuscateInt in Configuration, line 122")
    set ttu = 0
    loop
        exitwhen ttu > 2
        call PauseGame(true)
        call PauseGame(false)
        set ttu = ttu + 1
    endloop
    set ASw = ASw - 1
endfunction
function iyi takes integer syi, string tyi returns nothing
    set DSw[ASw] = tyi
    set ASw = ASw + 1
    call Q3s(x0S(k0w[syi], "when calling getVoidlessMaxReachableStage in Items_Pickup_Drop, line 427"), j0w[syi], "when calling updateStabilizedVoidPrismBonus in Items_Pickup_Drop, line 427")
    call Qpi(j0w[syi], "when calling inspiritPrismUpdateIcon in Items_Pickup_Drop, line 428")
    set ASw = ASw - 1
endfunction
function jBu takes integer kBu returns nothing
    call ForForce(Rc[BZ], oUw)
    call v0r(aO, true)
    call OJt(aO, false)
    call Yrr(aO, $000D0012, oQu(Np), Gcw)
    call v0r(nO, true)
    call OJt(nO, false)
    call Yrr(nO, $000D0012, oQu(Np), Gcw)
endfunction
function jCr takes integer FCr, string kCr returns nothing
    set DSw[ASw] = kCr
    set ASw = ASw + 1
    if GpS(wm, b7[FCr], "when calling has in FateDestinyUnlocker, line 545") then
        if nD == y7[FCr]then
            call ShowInterface(true, 2.)
        endif
        call eTu(Ng, y7[FCr], "when calling free in FateDestinyUnlocker, line 548")
        call O0s(y7[FCr], tF)
        call eys(wm, b7[FCr], "when calling remove in FateDestinyUnlocker, line 550")
        call GZs(tOS(y7[FCr], "when calling getCustomPlayer in FateDestinyUnlocker, line 551"), false, "when calling setCommandsDisabled in FateDestinyUnlocker, line 551")
    endif
    set ASw = ASw - 1
endfunction
function mjr takes group jjr, rect xjr, boolexpr vjr returns nothing
    call GroupEnumUnitsInRect(jjr, xjr, vjr)
endfunction
function uCt takes group MXt, rect wCt returns nothing
    call mjr(MXt, wCt, null)
endfunction
function jDr takes integer gDr returns nothing
    local trigger hDr = CreateTrigger()
    local group FDr
    local group kDr
    call QYr(hDr, UP, Filter(UUw))
    call v4u(EVENT_PLAYER_UNIT_ISSUED_ORDER, IUw)
    call uCt(BA, ZP)
    call ForGroup(BA, PUw)
    set FDr = BA
    call ugu(FDr)
    set kDr = FDr
    call Z5u(kDr)
    set hDr = null
    set FDr = null
    set kDr = null
endfunction
function jJt takes integer FJt, string kJt returns nothing
    set DSw[ASw] = kJt
    set ASw = ASw + 1
    call DisplayTextToForce(Rc[$0000000C], Iji("|cffffcc00Dragon of Pure Darkness|r: Hontou no tatakai wa korekara hajimaru!", "when calling unObfuscate in Imp3DragonFortress, line 1018"))
    set ASw = ASw - 1
endfunction
function GoS takes string ToS returns integer
    local integer YoS
    set DSw[ASw] = ToS
    set ASw = ASw + 1
    if NX == 0 then
        if MX < 32768 then
            set MX = MX + 1
            set YoS = MX
            set wC[YoS] = 910
        else
            call tNr("Out of memory: Could not create CallbackSingle_doAfter_JobAdvancementQuestHandler.", "when calling error in JobAdvancementQuestHandler, line 1252")
            set YoS = 0
        endif
    else
        set NX = NX - 1
        set YoS = BX[NX]
        set wC[YoS] = 910
    endif
    set ASw = ASw - 1
    return YoS
endfunction
function ieS takes integer MpS, string weS, string ueS, string reS, string seS returns nothing
    local integer teS
    set DSw[ASw] = seS
    set ASw = ASw + 1
    set teS = GoS("when calling alloc_CallbackSingle_doAfter_JobAdvancementQuestHandler in JobAdvancementQuestHandler, line 1252")
    call RUs(teS)
    set mww_4264[teS] = MpS
    set Qww_1849[teS] = weS
    set Www_2475[teS] = ueS
    set Eww_567[teS] = reS
    call Ybr(.1, teS, "when calling doAfter in JobAdvancementQuestHandler, line 1252")
    set ASw = ASw - 1
endfunction
function pCw takes string bCw returns integer
    local integer yCw
    set DSw[ASw] = bCw
    set ASw = ASw + 1
    if NX == 0 then
        if MX < 32768 then
            set MX = MX + 1
            set yCw = MX
            set wC[yCw] = 909
        else
            call tNr("Out of memory: Could not create CallbackSingle_doAfter_JobAdvancementQuestHandler.", "when calling error in JobAdvancementQuestHandler, line 1247")
            set yCw = 0
        endif
    else
        set NX = NX - 1
        set yCw = BX[NX]
        set wC[yCw] = 909
    endif
    set ASw = ASw - 1
    return yCw
endfunction
function mKs takes integer hKs, string FKs, string kKs, string jKs, string xKs returns nothing
    local integer vKs
    set DSw[ASw] = xKs
    set ASw = ASw + 1
    set vKs = pCw("when calling alloc_CallbackSingle_doAfter_JobAdvancementQuestHandler in JobAdvancementQuestHandler, line 1247")
    call RUs(vKs)
    set Gww_776[vKs] = hKs
    set gww_3659[vKs] = FKs
    set hww_3760[vKs] = kKs
    set Fww_672[vKs] = jKs
    call Ybr(.1, vKs, "when calling doAfter in JobAdvancementQuestHandler, line 1247")
    set ASw = ASw - 1
endfunction
function gMu takes string YMu returns integer
    local integer GMu
    set DSw[ASw] = YMu
    set ASw = ASw + 1
    if NX == 0 then
        if MX < 32768 then
            set MX = MX + 1
            set GMu = MX
            set wC[GMu] = 911
        else
            call tNr("Out of memory: Could not create CallbackSingle_doAfter_JobAdvancementQuestHandler.", "when calling error in JobAdvancementQuestHandler, line 1259")
            set GMu = 0
        endif
    else
        set NX = NX - 1
        set GMu = BX[NX]
        set wC[GMu] = 911
    endif
    set ASw = ASw - 1
    return GMu
endfunction
function xZu takes integer GZu, string gZu, string hZu, string FZu, string kZu returns nothing
    local integer jZu
    set DSw[ASw] = kZu
    set ASw = ASw + 1
    set jZu = gMu("when calling alloc_CallbackSingle_doAfter_JobAdvancementQuestHandler in JobAdvancementQuestHandler, line 1259")
    call RUs(jZu)
    set Aww_113[jZu] = GZu
    set Dww_427[jZu] = gZu
    set Hww_877[jZu] = hZu
    set Jww_1085[jZu] = FZu
    call Ybr(.1, jZu, "when calling doAfter in JobAdvancementQuestHandler, line 1259")
    set ASw = ASw - 1
endfunction
function jJw takes integer FJw, string kJw returns nothing
    set DSw[ASw] = kJw
    set ASw = ASw + 1
    call ieS(k6w("17", "when calling unObfuscateInt in EffectCleaner, line 34"), Iji("Credits", "when calling unObfuscate in EffectCleaner, line 34"), "|cffff8c00R4 version brought to you by KryptonRazer#3935 and Donach#6231, developers of|r|cffff0000 TeveR.|r\n|Cff00ff00Join us at discord.tever.xyz or on www.tever.xyz|r\nFinal version was created by normax on the approval of one of the creators.\nFinal R4 version was created just to give you guys something to play before we can all move on to TeveR.", Iji("ReplaceableTextures/CommandButtons/BTNSelectHeroOn.blp", "when calling unObfuscate in EffectCleaner, line 34"), "when calling createQuestBJ2_closure in EffectCleaner, line 34")
    call ieS(k6w("17", "when calling unObfuscateInt in EffectCleaner, line 35"), Iji("Credits - Donators", "when calling unObfuscate in EffectCleaner, line 35"), qF, Iji("ReplaceableTextures/CommandButtons/BTNSelectHeroOn.blp", "when calling unObfuscate in EffectCleaner, line 35"), "when calling createQuestBJ2_closure in EffectCleaner, line 35")
    call mKs(k6w("17", "when calling unObfuscateInt in EffectCleaner, line 36"), Iji("Credits - Testers and Ideas", "when calling unObfuscate in EffectCleaner, line 36"), "Thanks to all Teve testers, that helped a LOT with the balancing and testing our changes, you guys are awesome!\nTedd0n\no_OAntsElectron\nkoltar\nCaspa\nTabloid\nKuroiHikari\nbanebu\nMWRWarrior\nSupport-Chan\niQu.NumB\nNickwa203\nPistach\nShunlight\nTrojanvirus\nIn july\ndxdi\nHailOfArrows\nBANGPANIS\nmentor42\n", Iji("ReplaceableTextures/CommandButtons/BTNSelectHeroOn.blp", "when calling unObfuscate in EffectCleaner, line 36"), "when calling createQuestBJ1_closure in EffectCleaner, line 36")
    call mKs(k6w("17", "when calling unObfuscateInt in EffectCleaner, line 37"), Iji("Credits - Original Creator", "when calling unObfuscate in EffectCleaner, line 37"), "This map was originally made by GreeN_DaY_DaNcE and Asayaki_Zac at Lordaeron U.S. West of Clan TEvE [Twilight's Eve]. First version was made in December 2008.\nCredits to |cffffcc00GreeN_DaY_DaNcE|r:\n> SavingLoading\n> Music and Sounds\n> Loading Screen and Preview Picture\n> All Units, Items, Abilities, and Triggers\n> Quests\nCredits to |cffffcc00Asayaki_Zac|r:\n> Terrain Designing\n> Unit Placement\n> Quests\n|cffffcc00The Twilight's Eve 1.14d Team|r:\nAjastagataRoma[at]Garena - Icon Designer\nLord_Zeppelin[at]Northrend - Code Optimizer\n|cff87ceebTwilight's Eve spell made from scratch using GUI by GreeN_DaY_DaNcE. Inspired entirely by Golden Sun. Twilight's Eve ORPG is 95% made in GUI, with the remaining 5% in JASS.|r\n|cffff8c00Based on the comic book - Twilight's Eve -, written and drawn by GreeN_DaY_DaNcE.|r\nTo other |cffffcc00Indirect Contributors|r:\nThanks to all the members of Hive Workshop whose resources we used. Many thanks to the modellers of Nanoha Defence. Your magic circle models are AWESOME.", Iji("ReplaceableTextures/CommandButtons/BTNSelectHeroOn.blp", "when calling unObfuscate in EffectCleaner, line 37"), "when calling createQuestBJ1_closure in EffectCleaner, line 37")
    call xZu(k6w("17", "when calling unObfuscateInt in EffectCleaner, line 38"), Iji("Quest Information", "when calling unObfuscate in EffectCleaner, line 38"), "To take the quests, simply go to target NPC with question mark on top of it, and get the Quest at no cost. Information on how to do each quest will be given to you when you received it.\nTo turn in the quest, go back to the NPC who gave you it, and simply right click on the NPC. You will get rewarded for the quests.", Iji("ReplaceableTextures/CommandButtons/BTNSnazzyScrollPurple.blp", "when calling unObfuscate in EffectCleaner, line 38"), "when calling createQuestBJ3_closure in EffectCleaner, line 38")
    call mKs(k6w("17", "when calling unObfuscateInt in EffectCleaner, line 40"), Iji("Professions", "when calling unObfuscate in EffectCleaner, line 40"), "To choose a Profession, simply find a Profession Trainer of your preferred Profession and talk to him/her. He/she will give you a simple \"initiation\" quest which you must complete in order to acquire your preferred Profession.\n|cffff0000You can only choose ONE Profession. Your Profession and Profession Level are saved in your Hero Code so each Hero is binded to one Profession at any given time.|r\n|cffffcc00To unlearn your current Profession, simply type -unlearn. Doing so will reset your Profession Level back to 0, even if you re-learn the same Profession you unlearned before. You also have to redo the \"initiation\" quest again.|r\nThere are 5 Profession Ranks:\n|cff8B8989Apprentice|r - Levels 1-50\n|Cff00ff00Journeyman|r - Levels 51-100\n|cffffff00Expert|r - Levels 101-150\n|cffff8c00Master|r - Levels 151-200\n|cffff0000Legend|r - Levels 201-250", Iji("ReplaceableTextures/CommandButtons/BTNTomeBrown.blp", "when calling unObfuscate in EffectCleaner, line 40"), "when calling createQuestBJ1_closure in EffectCleaner, line 40")
    call ieS(k6w("17", "when calling unObfuscateInt in EffectCleaner, line 41"), Iji("Commands", "when calling unObfuscate in EffectCleaner, line 41"), "-enter to enter dungeons.\n-check [Hero Code] to check whether your hero code is valid.\n-check2 [Item Code] to check whether your item code is valid.\n-out to exit dungeons. There is a 8 second penalty.\n-done to exit your Loot Location which you are teleported to after completing a dungeon.\n-pvp # to challenge the [Entered Player #] to a duel.\n-yes to accept a duel.\n-no to decline a duel.\n-cancel to cancel your PvP request.\n-rankpvp / -rankfishing to show your PvP/Fishing Rank, as your playername (-rankclear to remove).\n-save to save your character.\n-load to load hero code.\n-load2 to load item code.\n" + "-new to start with a new hero.\n-repick to start with a new hero.\n-clear to clear the screen of text messages.\n-ms to check your movement speed.\n-stats to check your hero stats (HP, MP, MS, player-id).\n-revive to revive your Hero in case he does not revive.\n-kill to kill your hero.\n-remove # to remove an item in slot number (entered #).\n-time print current game playing time.\n-fishing / -profession show current fishing stats.\n-sendtostash # / -s2s # sends item in slot # to your stash.\n-enableglow / -disableglow activates or deactivates player-colored hero glow (donator only).\n-disableProcs / -dProcs disables locally all godly item proc effects.\n-disableOtherProcs / -dOProcs disables locally all other players godly item proc effects.\n-enableProcs / -eProcs enables locally all godly item proc effects.\n-enablefog / -fog enables fog locally.\n-disablefog / -nofog disables fog locally.\n-unform / if you get stuck in wrong form use this.\n" + "-camfollow -camunfollow or CTRL+L / To toggle camera following hero unit.\n-testarrow to try arrow game from Imp3. Dungeon must be empty.\n'-maze X' to test maze 1-4. Dungeon must be empty and your hero needs level 200+.\n'-critter help' to show info about critters.\n'-critter X' to change to given critter.\n", Iji("ReplaceableTextures/CommandButtons/BTNScourgeBuild.blp", "when calling unObfuscate in EffectCleaner, line 41"), "when calling createQuestBJ2_closure in EffectCleaner, line 41")
    call xZu(k6w("17", "when calling unObfuscateInt in EffectCleaner, line 42"), Iji("SaveLoad", "when calling unObfuscate in EffectCleaner, line 42"), "Type -save to save your codes. There will be 2 codes shown - your Hero code and your Item code, namely the first and second codes, respectively.\n|cff87ceebThe First Save Code saves your characters with all its levels and abilities.|r\n|cff87ceebThe Second Save Code saves only your PvP Points, gold, power shards, your items, their item charges and also your Personal Stash's items and their item charges.|r\nYou can use second code on any character freely.\nThere are 2 types of loads.\nIn order to load, type -load/-load2 ****-****-**** etc. Bear in mind that if you have any character in play, they will get replaced.\nIn Final R4 version, the saves are automatically saved into Warcraft III/CustoMapData in your personal Documents folder. No need to use screenshots anymore! Also, you can load any number of times.", Iji("ReplaceableTextures/CommandButtons/BTNUsedSoulGem.blp", "when calling unObfuscate in EffectCleaner, line 42"), "when calling createQuestBJ3_closure in EffectCleaner, line 42")
    call mKs(k6w("17", "when calling unObfuscateInt in EffectCleaner, line 43"), Iji("2nd Job Advancement", "when calling unObfuscate in EffectCleaner, line 43"), "In order to change to 2nd Job, first of all you need to be a |cffffcc00Level 40|r 1st Job Class in order to do so. If you meet the requirements, then head to the City of New Lights and talk to your Class Trainer. (for e.g. if you are an Archer, then talk to the Hunter) If you do not know who your Class Trainer is, then check F9 on your specific class; your 1st, 2nd, 3rd and 4th jobs are all listed there. Once you talk to the Class Trainer, they will give you an advancement quest that you need to complete. After completing the quest, go back to your class trainer and right click on him or her, and you will successfully change your job. Bear in mind, however, that you will start at Level 1 again, but this is minor because you will be very strong, so leveling back would not pose much of a problem although it does take some time.", Iji("ReplaceableTextures/CommandButtons/BTNSorceressAdept.blp", "when calling unObfuscate in EffectCleaner, line 43"), "when calling createQuestBJ1_closure in EffectCleaner, line 43")
    call xZu(k6w("17", "when calling unObfuscateInt in EffectCleaner, line 44"), Iji("3rd Job Advancement", "when calling unObfuscate in EffectCleaner, line 44"), "In order to advance to your 3rd Job Class, you must first of all be a |cffffcc00Level 99|r 2nd Job Class in order to do so. If you meet the requirements, then head to the City of New Lights and talk to your Class Trainer; the very same one you talked to when you advanced to 2nd job. They will direct you to other - masters - of the your class, in which you would have to choose which class you want to be. Finding these masters may or may not be easy depending on your Class, as some are scattered around the map and some aren't. Bear in mind that once you accept the advancement quest from a 3rd Job Class Trainer, you can no longer revert to choosing your other path so choose wisely. However, you can always load back your code if anything goes awry; quests are not saved.\n|cffff0000You cannot save when you have a letter of recommendation.|r", Iji("ReplaceableTextures/CommandButtons/BTNSorceressMaster.blp", "when calling unObfuscate in EffectCleaner, line 44"), "when calling createQuestBJ3_closure in EffectCleaner, line 44")
    call xZu(k6w("17", "when calling unObfuscateInt in EffectCleaner, line 45"), Iji("4th Job Advancement", "when calling unObfuscate in EffectCleaner, line 45"), "In order to advance to your 4th Job Class, you must be a |cffffcc00Level 150|r 3rd Job Class. The hard part is finding the - Master - of your class and completing the task given. Search around the map for hidden NPCs and try to talk to them. They will give you a quest that is difficult to complete; most classes will need to transverse the Rite of Passage to complete it. After completing the task, report back to your Class Master to change your job. Below is a list to aid players in finding their respective masters:\nWizard - Arthur the Seeker\nSage - Eve\nPriest - The Ancient One\nMatriarch - The Ancient One\nMarksman - Luna\nTracker - Monster Master Delia\nChampion - Rain\nAvenger - Siegfried the Avenger\nPhantom Assassin - Raven\nMaster Stalker - Nazgul the Fallen\nShaman - Horazon\nShapeshifter - Fenrir\nHigh Templar - Freya\nDark Templar - Dark ArchTemplar Vanessa\nWitcher - Morden Tor\nInquisitor - Count Crowley the Grand Inquisitor", Iji("ReplaceableTextures/CommandButtons/BTNScrollOfHealing.blp", "when calling unObfuscate in EffectCleaner, line 45"), "when calling createQuestBJ3_closure in EffectCleaner, line 45")
    call ieS(k6w("17", "when calling unObfuscateInt in EffectCleaner, line 46"), Iji("Dungeon and Loot", "when calling unObfuscate in EffectCleaner, line 46"), "Twilight's Eve ORPG has a dungeon system that acts like a party system. All you have to do is gather your - party members - outside a dungeon area and type |cffffcc00-enter|r, and it will transfer your party inside. When you finally kill the final boss, you will be teleported to an Item Generator room where a random item will spawn for you; its rarity and strength again depending on the difficulty of the dungeon. Once you've looted the item, type |cffff8c00-done|r to exit the room and be teleported to your last revival point. If you die while fighting a dungeon, you will not be able to re-enter the dungeon until your former party members have all left it. They can also choose to exit the dungeon via the -out command, though.\n|cffffcc00There are 5 types of Dungeon Difficulties|r:\n|cff87ceebEasy|r\n|Cff00ff00Hard|r\n|cffff8c00Nightmare|r\n|cffff0000Hell|r\n|cffB22222Impossible|r\n\n", Iji("ReplaceableTextures/CommandButtons/BTN_CR_wGem.blp", "when calling unObfuscate in EffectCleaner, line 46"), "when calling createQuestBJ2_closure in EffectCleaner, line 46")
    call ieS(k6w("17", "when calling unObfuscateInt in EffectCleaner, line 47"), Iji("Item Types", "when calling unObfuscate in EffectCleaner, line 47"), "Twilight's Eve ORPG uses a random item generator interface when spawning items for players who complete a dungeon. Although loot depends on the difficulty of the dungeon, it should be known that there are 6 kinds of colours representing the rarity of items.\n|cff8B8989Common|r\n|Cff00ff00Uncommon|r\n|cff009ACDRare|r\n|cffA020F0Epic|r\n|cffff0000Legendary|r\n|cffFFD700Godly|r\nSpecial Class of Items:\n|cff8B4513Forged|r\n", Iji("ReplaceableTextures/CommandButtons/BTN_CR_wGem.blp", "when calling unObfuscate in EffectCleaner, line 47"), "when calling createQuestBJ2_closure in EffectCleaner, line 47")
    call mKs(k6w("17", "when calling unObfuscateInt in EffectCleaner, line 49"), Iji("Your Stash", "when calling unObfuscate in EffectCleaner, line 49"), "Now you can finally store items in your very own personal stash! Furthermore, your stash can store any item, including items your character class can't use. However, as items still bind on pickup, you cannot steal another player's item. \nYour item code will save all items and their respective item charges carried by both your Hero and your stash, so make full use of this advantage. Since PvP points are also saved separately as your Item code, it is possible to load2 without using the original -save. This makes using the Item code a very good way to test PvP builds.\n \nThe stash also provides a good way to store items as well, so people can't destroy your items and whatnot.|nYou can use '-s2s X' command in Dungeon reward area to send item from inventory to stash.", Iji("ReplaceableTextures/CommandButtons/BTNCage.blp", "when calling unObfuscate in EffectCleaner, line 49"), "when calling createQuestBJ1_closure in EffectCleaner, line 49")
    call xZu(k6w("17", "when calling unObfuscateInt in EffectCleaner, line 51"), Iji("Limit Break System", "when calling unObfuscate in EffectCleaner, line 51"), "Limit Break has been removed in Teve R4.", Iji("ReplaceableTextures/CommandButtons/BTNArcane.blp", "when calling unObfuscate in EffectCleaner, line 51"), "when calling createQuestBJ3_closure in EffectCleaner, line 51")
    call mKs(k6w("17", "when calling unObfuscateInt in EffectCleaner, line 52"), Iji("Player Vs. Player Mode", "when calling unObfuscate in EffectCleaner, line 52"), "Twilight's Eve features a unique player vs player (PvP) system. The most unique aspect of the PvP System is that battle can take place |cffff0000ANYWHERE|r, and not restricted to any given location (there are but a few exceptions).\nTo activate PvP, you must be within 200 range of the player's Hero and type -pvp [player number] to activate PvP mode. PvP can take place anywhere, except in a dungeon, or PvP-restricted areas. You can cancel the challenge by typing -cancel.\nIn PvP, your base damage will be reduced by 85%, and certain skills have lesser effects. Winners gain 1 point, and Losers lose 1 point. Flawless Victories are victories won without losing any health. As such, Flawless Winners gain 2 points while the losers lose 2 points.\n\n|cffffcc00The Rank system goes as follows|r:\n15: Pit Dog\n30: Fighter\n75: Myrmidon\n100: Warrior\n150: Knight\n200: Crusader\n300: Gladiator\n500: Veteran\n750: Commander\n1000: General\n1500: Marshal\n2000: Hero\n3000: Champion\n5000: Grand Champion", Iji("ReplaceableTextures/CommandButtons/BTNAbility_Parry.blp", "when calling unObfuscate in EffectCleaner, line 52"), "when calling createQuestBJ1_closure in EffectCleaner, line 52")
    call ieS(k6w("17", "when calling unObfuscateInt in EffectCleaner, line 53"), Iji("Rite of Passage", "when calling unObfuscate in EffectCleaner, line 53"), "The Rite of Passage is a dark place where only characters over |cffffcc00Level 100|r can attempt to transverse it. If the player is able to transverse the entire Rite of Passage until the end, she or he will be teleported to the Unknown Regions, where stronger monsters await. Only 1 player is able to transverse it at any time. The player will have to battle through hordes of monsters until she or he reaches the end.\nIn order to attempt to transverse the Rite of Passage, the player must speak to the Angel, Dawn, at the summit of Mount Twilight.\nIf the player wishes to exit the Unknown Regions, the player should speak to Dawn again and Dawn will teleport the player back to Mount Twilight.", Iji("ReplaceableTextures/CommandButtons/BTNMaskOfDeath.blp", "when calling unObfuscate in EffectCleaner, line 53"), "when calling createQuestBJ2_closure in EffectCleaner, line 53")
    call xZu(k6w("17", "when calling unObfuscateInt in EffectCleaner, line 54"), Iji("Additional Information", "when calling unObfuscate in EffectCleaner, line 54"), "Twilight's Eve uses a saved rez point system that saves the point where you will revive at, should your hero die. \nAll you have to do is go within 500 range of an Inn in any town or city, and it will auto save your rez point for you, so if you die, you will be revived at that specific city or town you saved in. \nPower Shards are used to forge items of immense power, comparable to that of |cffff0000Legendary|r items.\nHowever, they can only be obtained by completing |cffff0000Hell|r or |cffB22222Impossible|r Difficulty Dungeons. Choosing to buy them is also possible, but at a price of 50,000 gold. Selling them is also possible, but for only 20,000 gold.", Iji("ReplaceableTextures/CommandButtons/BTNSpy.blp", "when calling unObfuscate in EffectCleaner, line 54"), "when calling createQuestBJ3_closure in EffectCleaner, line 54")
    set ASw = ASw - 1
endfunction
function e7w takes string y7w returns integer
    local integer p7w
    set DSw[ASw] = y7w
    set ASw = ASw + 1
    if PC == 0 then
        if AC < 32768 then
            set AC = AC + 1
            set p7w = AC
            set DC[p7w] = 713
        else
            call tNr("Out of memory: Could not create CallbackPeriodic_doPeriodically_doAfter_EffectCleaner.", "when calling error in EffectCleaner, line 114")
            set p7w = 0
        endif
    else
        set PC = PC - 1
        set p7w = IC[PC]
        set DC[p7w] = 713
    endif
    set ASw = ASw - 1
    return p7w
endfunction
function p7t takes texttag O7t, real l7t, real b7t, real y7t returns nothing
    call SetTextTagPos(O7t, l7t, b7t, y7t)
endfunction
function mOr takes real YOr, real GOr, real gOr, string hOr, real FOr, boolean kOr returns nothing
    local texttag jOr = CreateTextTag()
    local texttag xOr
    local texttag vOr
    call wfu(jOr, kOr)
    set xOr = jOr
    call p7t(xOr, YOr, GOr, gOr)
    set vOr = xOr
    call BFS(vOr, hOr, FOr)
    set jOr = null
    set xOr = null
    set vOr = null
endfunction
function y7S takes string l7S returns integer
    local integer b7S
    set DSw[ASw] = l7S
    set ASw = ASw + 1
    if PC == 0 then
        if AC < 32768 then
            set AC = AC + 1
            set b7S = AC
            set DC[b7S] = 712
        else
            call tNr("Out of memory: Could not create CallbackPeriodic_doPeriodically_doAfter_EffectCleaner.", "when calling error in EffectCleaner, line 96")
            set b7S = 0
        endif
    else
        set PC = PC - 1
        set b7S = IC[PC]
        set DC[b7S] = 712
    endif
    set ASw = ASw - 1
    return b7S
endfunction
function jKr takes integer YKr, string GKr returns nothing
    local unit gKr
    local unit hKr
    local integer FKr
    local integer kKr
    set DSw[ASw] = GKr
    set ASw = ASw + 1
    call mOr(11550., 6756., 10., Iji("|cff00BFFFTwilight's Eve R4", "when calling unObfuscate in EffectCleaner, line 68"), 12., true)
    call mOr(11550., 6472., 10., Iji("|cffff0000Fixxed version brought to you by Donach#6231 and KryptonRazer#3935,|n developers for the new |r|cff00BFFF Teve|r Community.", "when calling unObfuscate in EffectCleaner, line 70"), 10., true)
    call mOr(11550., 6245., 10., Iji("Join us at |cff00BFFFdiscord.tever.xyz|r or on |cff00BFFFwww.tever.xyz|r", "when calling unObfuscate in EffectCleaner, line 71"), 10., true)
    call mOr(11550., 6033., 10., Iji("|Cff00ff00We'd like to give huge thanks to our most generous donators (God of Silvasia):|r", "when calling unObfuscate in EffectCleaner, line 73"), 10., true)
    call mOr(11550., 5653., 10., Iji("|Cff00ff00Fenrir|nParagon|nCallMeBal|nSheepherder|nRapiidz - CTM ;)|nTDV|r", "when calling unObfuscate in EffectCleaner, line 74"), 10., true)
    call mOr(13150., 6656., 10., Iji("|cffff8c00Type "-help" to get overview of usable commands.", "when calling unObfuscate in EffectCleaner, line 77"), 10., true)
    call mOr(13150., 6380., 10., Iji("See full changelog at |cff00BFFFtevef-changelog.tever.xyz|r", "when calling unObfuscate in EffectCleaner, line 78"), 10., true)
    call mOr(13150., 5988., 10., Iji("|cffA9A9A9Credits:|nNormax Developer of Final R2 version", "when calling unObfuscate in EffectCleaner, line 79"), 10., true)
    call mOr(13150., 5733., 10., Iji("Green_Day_Dance & Asayaki_Zac Original devs of 1.14d|r", "when calling unObfuscate in EffectCleaner, line 80"), 10., true)
    call CreateUnit(aD[PLAYER_NEUTRAL_PASSIVE], l2s(Iji("nskk", "when calling unObfuscate in EffectCleaner, line 83"), "when calling fromRawCode in EffectCleaner, line 83"), 13150.3, 6386.9, 160.295)
    call CreateUnit(aD[PLAYER_NEUTRAL_PASSIVE], l2s(Iji("nskk", "when calling unObfuscate in EffectCleaner, line 84"), "when calling fromRawCode in EffectCleaner, line 84"), 11745.4, 5792.2, 61.426)
    call CreateUnit(aD[PLAYER_NEUTRAL_PASSIVE], l2s(Iji("nfro", "when calling unObfuscate in EffectCleaner, line 85"), "when calling fromRawCode in EffectCleaner, line 85"), 11749.2, 6548.0, 243.442)
    call CreateUnit(aD[PLAYER_NEUTRAL_PASSIVE], l2s(Iji("nfro", "when calling unObfuscate in EffectCleaner, line 86"), "when calling fromRawCode in EffectCleaner, line 86"), 12990.1, 5824.5, 61.800)
    call CreateUnit(aD[PLAYER_NEUTRAL_PASSIVE], l2s(Iji("nfro", "when calling unObfuscate in EffectCleaner, line 87"), "when calling fromRawCode in EffectCleaner, line 87"), 12251.0, 5927.6, 333.138)
    call CreateUnit(aD[PLAYER_NEUTRAL_PASSIVE], l2s(Iji("ndog", "when calling unObfuscate in EffectCleaner, line 88"), "when calling fromRawCode in EffectCleaner, line 88"), 12286.6, 6197.5, 0.132)
    call CreateUnit(aD[PLAYER_NEUTRAL_PASSIVE], l2s(Iji("nalb", "when calling unObfuscate in EffectCleaner, line 89"), "when calling fromRawCode in EffectCleaner, line 89"), 13076.9, 6200.3, 111.372)
    call CreateUnit(aD[PLAYER_NEUTRAL_PASSIVE], l2s(Iji("nsno", "when calling unObfuscate in EffectCleaner, line 90"), "when calling fromRawCode in EffectCleaner, line 90"), 11641.9, 6471.1, 181.247)
    set gKr = CreateUnit(qw, vA, 12799.8, 6338.9, 200.000)
    set hKr = CreateUnit(qw, xA, 12657.8, 6320.8, 360.000)
    set FKr = y7S("when calling alloc_CallbackPeriodic_doPeriodically_doAfter_EffectCleaner in EffectCleaner, line 96")
    call kVu(FKr)
    set k1[FKr] = gKr
    set j1[FKr] = hKr
    call wcs(120., FKr, "when calling doPeriodically in EffectCleaner, line 96")
    set kKr = e7w("when calling alloc_CallbackPeriodic_doPeriodically_doAfter_EffectCleaner in EffectCleaner, line 114")
    call kVu(kKr)
    call wcs(2700., kKr, "when calling doPeriodically in EffectCleaner, line 114")
    set ASw = ASw - 1
    set gKr = null
    set hKr = null
endfunction
function l0i takes string o0i returns integer
    local integer O0i
    set DSw[ASw] = o0i
    set ASw = ASw + 1
    if NX == 0 then
        if MX < 32768 then
            set MX = MX + 1
            set O0i = MX
            set wC[O0i] = 1062
        else
            call tNr("Out of memory: Could not create CallbackSingle_doAfter_doAfter_JobAdvancementQuestHandler.", "when calling error in JobAdvancementQuestHandler, line 1029")
            set O0i = 0
        endif
    else
        set NX = NX - 1
        set O0i = BX[NX]
        set wC[O0i] = 1062
    endif
    set ASw = ASw - 1
    return O0i
endfunction
function jMw takes integer hMw, string FMw returns nothing
    local integer kMw
    set DSw[ASw] = FMw
    set ASw = ASw + 1
    set kMw = l0i("when calling alloc_CallbackSingle_doAfter_doAfter_JobAdvancementQuestHandler in JobAdvancementQuestHandler, line 1029")
    call RUs(kMw)
    call Ybr(0.1, kMw, "when calling doAfter in JobAdvancementQuestHandler, line 1029")
    set ASw = ASw - 1
endfunction
function jPw takes integer FPw, string kPw returns nothing
    set DSw[ASw] = kPw
    set ASw = ASw + 1
    call eys(Cv, j7[FPw], "when calling remove in FateDestinyUnlocker, line 655")
    set ASw = ASw - 1
endfunction
function jbs takes integer gbs, string hbs returns nothing
    local integer Fbs
    local integer kbs
    set DSw[ASw] = hbs
    set ASw = ASw + 1
    set Fbs = c5r(gQ, "when calling iterator in Voidless_extensions, line 315")
    loop
        exitwhen not Tji(Fbs)
        set kbs = LXi(Fbs)
        call GVw(jL, kbs, $00000000, "when calling put in Voidless_extensions, line 316")
    endloop
    call vms(Fbs, "when calling close in Voidless_extensions, line 315")
    set ASw = ASw - 1
endfunction
function jqs takes integer Fqs, string kqs returns nothing
    set DSw[ASw] = kqs
    set ASw = ASw + 1
    call krS(GgS(b1[Fqs], "when calling getCustomPlayer in DungeonCmds, line 578"), "when calling cameraCheckLock in DungeonCmds, line 578")
    set ASw = ASw - 1
endfunction
function k4s takes string g4s, string h4s returns integer
    local integer F4s = vQt(g4s) - vQt(h4s)
    loop
        exitwhen F4s < 0
        if CAw(g4s, F4s, F4s + vQt(h4s)) == h4s then
            return F4s
        endif
        set F4s = F4s - 1
    endloop
    return - 1
endfunction
function D2u takes integer I2u returns nothing
    local integer P2u
    local string A2u
    set wi[I2u] = ""
    set P2u = k4s(Mt[I2u], CD)
    if P2u >- 1 then
        set A2u = CAw(Mt[I2u], P2u, vQt(Mt[I2u]))
        if hUu(A2u, CD) then
            if QZs(CAw(A2u, $00000001, vQt(A2u))) then
    set wi[I2u] = Mt[I2u]
    set Mt[I2u] = CAw(Mt[I2u], $00000000, k4s(Mt[I2u], CD))
            endif
        endif
    endif
    if not WP then
        call oxt(aD[I2u - 1], Mt[I2u])
    endif
    set ui[I2u] = Mt[I2u]
endfunction
function jxi takes integer gxi returns nothing
    local integer hxi = 1
    local trigger Fxi
    local trigger kxi
    loop
        exitwhen hxi > 10
        call D2u(hxi)
        set Fxi = VD
        call r_u(Fxi, aD[hxi - 1], EVENT_PLAYER_UNIT_SELECTED, null)
        set kxi = Fxi
        call dUs(kxi, Filter(LUw))
        set hxi = hxi + 1
    endloop
    set Fxi = null
    set kxi = null
endfunction
function k9i takes integer G9i, string g9i returns nothing
    local unit h9i
    local unit F9i
    set DSw[ASw] = g9i
    set ASw = ASw + 1
    set h9i = dps(aD[PLAYER_NEUTRAL_AGGRESSIVE], l2s(Iji("n02E", "when calling unObfuscate in Imp2, line 128"), "when calling fromRawCode in Imp2, line 128"), I8[G9i], P8[G9i], bj_UNIT_FACING)
    call Ggr(h9i)
    set F9i = h9i
    call v0r(F9i, true)
    set ASw = ASw - 1
    set h9i = null
    set F9i = null
endfunction
function vvi takes string jvi returns integer
    local integer xvi
    set DSw[ASw] = jvi
    set ASw = ASw + 1
    if LC == 0 then
        if XC < 32768 then
            set XC = XC + 1
            set xvi = XC
            set CC[xvi] = 1170
        else
            call tNr("Out of memory: Could not create ForGroupCallback_forEachIn_doAfter_Hiero_Resurrection.", "when calling error in Hiero_Resurrection, line 108")
            set xvi = 0
        endif
    else
        set LC = LC - 1
        set xvi = KC[LC]
        set CC[xvi] = 1170
    endif
    set ASw = ASw - 1
    return xvi
endfunction
function kFS takes integer GFS, string gFS returns nothing
    local integer hFS
    local group FFS
    set DSw[ASw] = gFS
    set ASw = ASw + 1
    if yXu(Y8[GFS]) then
        call Q5r(G8[GFS], kbr(G8[GFS]) - A)
        set FFS = g8[GFS]
        set hFS = vvi("when calling alloc_ForGroupCallback_forEachIn_doAfter_Hiero_Resurrection in Hiero_Resurrection, line 108")
        set h8[hFS] = G8[GFS]
        call rou(FFS, hFS, "when calling forEachIn in Hiero_Resurrection, line 108")
    endif
    call Sju(g8[GFS], "when calling release in Hiero_Resurrection, line 109")
    set ASw = ASw - 1
    set FFS = null
endfunction
function kLt takes integer gLt, string hLt returns integer
    local integer FLt
    set DSw[ASw] = hLt
    set ASw = ASw + 1
    set FLt = kgs(lm, bm, 10., d2[gLt] + Wm, 10., f2[gLt], $000000FF, $000000FF, $000000FF, $00000000, R2[gLt], "when calling _CreateTTExEntityShift in FateDestinyUnlocker, line 275")
    set ASw = ASw - 1
    return FLt
endfunction
function kSi takes integer hSi, string FSi returns nothing
    set DSw[ASw] = FSi
    set ASw = ASw + 1
    call dii("1", .8, eDs(C3[hSi]))
    if GpS(qx, hgr(eDs(C3[hSi])), "when calling has in DungeonCmds, line 375") then
        call eys(qx, hgr(eDs(C3[hSi])), "when calling remove in DungeonCmds, line 376")
    endif
    set ASw = ASw - 1
endfunction
function k_i takes integer Y_i, string G_i returns nothing
    local group g_i
    local group h_i
    local unit F_i
    set DSw[ASw] = G_i
    set ASw = ASw + 1
    set g_i = Dit(lx, "when calling getUnitsInRect in Imp2, line 182")
    set h_i = XbS(g_i)
    loop
        exitwhen not hJw(h_i)
        set F_i = tPr(h_i)
        call qaS(F_i)
        call v0r(F_i, false)
    endloop
    call lxs(h_i)
    call Sju(g_i, "when calling release in Imp2, line 186")
    set ASw = ASw - 1
    set g_i = null
    set h_i = null
    set F_i = null
endfunction
function khs takes integer Fhs returns nothing
    call iNw(w7[Fhs], .075)
    call iNw(u7[Fhs], .075)
endfunction
function spu takes string upu returns integer
    local integer rpu
    set DSw[ASw] = upu
    set ASw = ASw + 1
    if NX == 0 then
        if MX < 32768 then
            set MX = MX + 1
            set rpu = MX
            set wC[rpu] = 1080
        else
            call tNr("Out of memory: Could not create CallbackSingle_doAfter_doAfter_addAction_JobAdvancementQuestHandler.", "when calling error in JobAdvancementQuestHandler, line 833")
            set rpu = 0
        endif
    else
        set NX = NX - 1
        set rpu = BX[NX]
        set wC[rpu] = 1080
    endif
    set ASw = ASw - 1
    return rpu
endfunction
function kjt takes integer Tjt, string Yjt returns nothing
    local unit Gjt
    local item gjt
    local integer hjt
    local integer Fjt
    set DSw[ASw] = Yjt
    set ASw = ASw + 1
    set Gjt = GetTriggerUnit()
    set gjt = GetManipulatedItem()
    set hjt = hgr(v9S(gjt))
    if gjt != null and hjt > Lh or(not GpS(px, Xdu(gjt), "when calling has in JobAdvancementQuestHandler, line 832")) or (not Jyr(ex, Xdu(gjt), "when calling has in JobAdvancementQuestHandler, line 832"))or wps(ex, Xdu(gjt), "when calling get in JobAdvancementQuestHandler, line 832") != hgr(eDs(Gjt)) then
        set Fjt = spu("when calling alloc_CallbackSingle_doAfter_doAfter_addAction_JobAdvancementQuestHandler in JobAdvancementQuestHandler, line 833")
        call RUs(Fjt)
        set aww_2880[Fjt] = gjt
        set nww_4365[Fjt] = Gjt
        call Ybr(0., Fjt, "when calling doAfter in JobAdvancementQuestHandler, line 833")
    endif
    set ASw = ASw - 1
    set Gjt = null
    set gjt = null
endfunction
function kni takes integer hni, string Fni returns nothing
    set DSw[ASw] = Fni
    set ASw = ASw + 1
    call eys(bA, buw[hni], "when calling remove in NpcHandler, line 118")
    set ASw = ASw - 1
endfunction
function l2u takes integer O2u returns nothing
    if E9[O2u] == nD then
        call rit(BW)
    endif
endfunction
function lEi takes integer cEi returns nothing
    local effect oEi = E6[cEi]
    local effect OEi
    call iNw(oEi, .125)
    set OEi = oEi
    call Wwu(OEi, 9.)
    set oEi = null
    set OEi = null
endfunction
function lFr takes integer cFr, string oFr returns integer
    local integer OFr
    set DSw[ASw] = oFr
    set ASw = ASw + 1
    set OFr = kgs(ym, pm, 10., g2[cFr] + Zm, 10., h2[cFr], $000000FF, $000000FF, $000000FF, $00000000, F2[cFr], "when calling _CreateTTExEntityShift in FateDestinyUnlocker, line 281")
    set ASw = ASw - 1
    return OFr
endfunction
function lli takes integer oli, string Oli returns nothing
    set DSw[ASw] = Oli
    set ASw = ASw + 1
    call dii(nm, 8., I4[oli])
    call Ggr(P4[oli])
    call k4t(Ng, I4[oli], ANw(P4[oli]), XSw, "when calling lockAndPan in FateDestinyUnlocker, line 199")
    call O0s(I4[oli], P4[oli])
    set ASw = ASw - 1
endfunction
function FFi takes force hFi returns player
    return ForcePickRandomPlayer(hFi)
endfunction
function lnS takes integer onS, string OnS returns nothing
    set DSw[ASw] = OnS
    set ASw = ASw + 1
    if Rc[$0000000D] != null and FFi(Rc[$0000000D]) != null then
        call DisplayTextToForce(Rc[$0000000D], Iji("Some ships have managed to get away with the treasure...", "when calling unObfuscate in HeroRevive, line 66"))
    endif
    set ASw = ASw - 1
endfunction
function PIu takes string UIu returns integer
    local integer IIu
    set DSw[ASw] = UIu
    set ASw = ASw + 1
    if NX == 0 then
        if MX < 32768 then
            set MX = MX + 1
            set IIu = MX
            set wC[IIu] = 1067
        else
            call tNr("Out of memory: Could not create CallbackSingle_doAfter_doAfter_JobAdvancementQuestHandler.", "when calling error in JobAdvancementQuestHandler, line 1253")
            set IIu = 0
        endif
    else
        set NX = NX - 1
        set IIu = BX[NX]
        set wC[IIu] = 1067
    endif
    set ASw = ASw - 1
    return IIu
endfunction
function lnu takes integer cnu, string onu returns nothing
    local integer Onu
    set DSw[ASw] = onu
    set ASw = ASw + 1
    set Onu = PIu("when calling alloc_CallbackSingle_doAfter_doAfter_JobAdvancementQuestHandler in JobAdvancementQuestHandler, line 1253")
    call RUs(Onu)
    set Zww_2778[Onu] = mww_4264[cnu]
    set Uww_2271[Onu] = Qww_1849[cnu]
    set Iww_983[Onu] = Www_2475[cnu]
    set Pww_1748[Onu] = Eww_567[cnu]
    call Ybr(.1, Onu, "when calling doAfter in JobAdvancementQuestHandler, line 1253")
    set ASw = ASw - 1
endfunction
function lou takes integer Oou returns nothing
    call Fci(Csw[Oou], Vsw[Oou], $00000000)
    call Q_s(Csw[Oou], Vsw[Oou])
endfunction
function m7u takes integer U5u returns nothing
    local unit d6u = aG
    local real M6u = oQu(yl)
    local real I5u = M6u
    local real f6u = I5u
    local real P5u
    local real A5u
    local real D5u
    local real H5u
    local real J5u
    local real K5u
    local real L5u
    local real X5u
    local real C5u
    local real V5u
    local real B5u
    local real N5u
    local real M5u
    local real w6u
    local real u6u
    local real r6u
    local real s6u
    local real t6u
    local real i6u
    local real S6u
    local real c6u
    local real o6u
    local real O6u
    local real l6u
    local real b6u
    local real y6u
    local real p6u
    local real e6u
    local real q6u
    local real a6u
    local real n6u
    local unit R6u
    local real T6u
    local unit Y6u
    local real G6u
    local unit g6u
    local real h6u
    local unit F6u
    local real k6u
    local unit j6u
    local real x6u
    local unit v6u
    local real m6u
    local unit Q6u
    local real W6u
    local unit E6u
    local real Z6u
    local unit U6u
    local real I6u
    local unit P6u
    local real A6u
    local unit D6u
    local real H6u
    local unit J6u
    local real K6u
    local unit L6u
    local real X6u
    local unit C6u
    local real V6u
    local unit B6u
    local real N6u
    local real w7u
    local real u7u
    local real r7u
    local real s7u
    local real t7u
    local real i7u
    local real S7u
    local real c7u
    local real o7u
    local real O7u
    local real l7u
    local real b7u
    local real y7u
    local real p7u
    local real e7u
    local real q7u
    local real a7u
    local real n7u
    local real d7u
    local real f7u
    local real R7u
    local real T7u
    local real Y7u
    local real G7u
    local real g7u
    local real h7u
    local real F7u
    local real k7u
    local real j7u
    local real x7u
    local real v7u
    call oQu(yl)
    set w7u = Gcw
    set P5u = w7u
    call IssuePointOrderById(d6u, $000D0016, f6u, P5u)
    set R6u = qG
    set u7u = oQu(ql)
    set A5u = u7u
    set T6u = A5u
    call oQu(ql)
    set r7u = Gcw
    set D5u = r7u
    call IssuePointOrderById(R6u, $000D0016, T6u, D5u)
    set Y6u = nG
    set s7u = oQu(pl)
    set H5u = s7u
    set G6u = H5u
    call oQu(pl)
    set t7u = Gcw
    set J5u = t7u
    call IssuePointOrderById(Y6u, $000D0016, G6u, J5u)
    set g6u = eG
    set i7u = oQu(el)
    set K5u = i7u
    set h6u = K5u
    call oQu(el)
    set S7u = Gcw
    set L5u = S7u
    call IssuePointOrderById(g6u, $000D0016, h6u, L5u)
    set F6u = dG
    set c7u = oQu(al)
    set X5u = c7u
    set k6u = X5u
    call oQu(al)
    set o7u = Gcw
    set C5u = o7u
    call IssuePointOrderById(F6u, $000D0016, k6u, C5u)
    set j6u = fG
    set O7u = oQu(nl)
    set V5u = O7u
    set x6u = V5u
    call oQu(nl)
    set l7u = Gcw
    set B5u = l7u
    call IssuePointOrderById(j6u, $000D0016, x6u, B5u)
    set v6u = RG
    set b7u = oQu(Ry)
    set N5u = b7u
    set m6u = N5u
    call oQu(Ry)
    set y7u = Gcw
    set M5u = y7u
    call IssuePointOrderById(v6u, $000D0016, m6u, M5u)
    set Q6u = TG
    set p7u = oQu(Ty)
    set w6u = p7u
    set W6u = w6u
    call oQu(Ty)
    set e7u = Gcw
    set u6u = e7u
    call IssuePointOrderById(Q6u, $000D0016, W6u, u6u)
    set E6u = gG
    set q7u = oQu(Yy)
    set r6u = q7u
    set Z6u = r6u
    call oQu(Yy)
    set a7u = Gcw
    set s6u = a7u
    call IssuePointOrderById(E6u, $000D0016, Z6u, s6u)
    set U6u = YG
    set n7u = oQu(Gy)
    set t6u = n7u
    set I6u = t6u
    call oQu(Gy)
    set d7u = Gcw
    set i6u = d7u
    call IssuePointOrderById(U6u, $000D0016, I6u, i6u)
    set P6u = OG
    set f7u = oQu(Ry)
    set S6u = f7u
    set A6u = S6u
    call oQu(Ry)
    set R7u = Gcw
    set c6u = R7u
    call IssuePointOrderById(P6u, $000D0016, A6u, c6u)
    set D6u = GG
    set T7u = oQu(Hb)
    set o6u = T7u
    set H6u = o6u
    call oQu(Hb)
    set Y7u = Gcw
    set O6u = Y7u
    call IssuePointOrderById(D6u, $000D0016, H6u, O6u)
    set J6u = bG
    set G7u = oQu(Jb)
    set l6u = G7u
    set K6u = l6u
    call oQu(Jb)
    set g7u = Gcw
    set b6u = g7u
    call IssuePointOrderById(J6u, $000D0016, K6u, b6u)
    set L6u = yG
    set h7u = oQu(Kb)
    set y6u = h7u
    set X6u = y6u
    call oQu(Kb)
    set F7u = Gcw
    set p6u = F7u
    call IssuePointOrderById(L6u, $000D0016, X6u, p6u)
    set C6u = lG
    set k7u = oQu(Lb)
    set e6u = k7u
    set V6u = e6u
    call oQu(Lb)
    set j7u = Gcw
    set q6u = j7u
    call IssuePointOrderById(C6u, $000D0016, V6u, q6u)
    set B6u = pG
    set x7u = oQu(Xb)
    set a6u = x7u
    set N6u = a6u
    call oQu(Xb)
    set v7u = Gcw
    set n6u = v7u
    call IssuePointOrderById(B6u, $000D0016, N6u, n6u)
    set d6u = null
    set R6u = null
    set Y6u = null
    set g6u = null
    set F6u = null
    set j6u = null
    set v6u = null
    set Q6u = null
    set E6u = null
    set U6u = null
    set P6u = null
    set D6u = null
    set J6u = null
    set L6u = null
    set C6u = null
    set B6u = null
endfunction
function m7w takes integer x7w, string v7w returns nothing
    set DSw[ASw] = v7w
    set ASw = ASw + 1
    call eys(Xv, m7[x7w], "when calling remove in FateDestinyUnlocker, line 685")
    set ASw = ASw - 1
endfunction
function m9u takes integer x9u returns nothing
    local integer v9u = F1[x9u]
    if v9u == nx then
        call DisableTrigger(SR)
    elseif v9u == dx then
        call EnableTrigger(aR)
    elseif v9u == fx then
        call DisableTrigger(GR)
        call DisableTrigger(hR)
    elseif v9u == Rx then
        call yxi(false)
        call TimerStart(mR, 0., false, null)
    endif
    call ugu(fc[F1[x9u]])
    call kMs(Rc[F1[x9u]])
endfunction
function m_i takes integer j_i, string x_i returns integer
    local integer v_i
    set DSw[ASw] = x_i
    set ASw = ASw + 1
    set v_i = kgs(om, Om, 10., T2[j_i] + ": " + Em, 10., Y2[j_i], $000000FF, $000000FF, $000000FF, $00000000, G2[j_i], "when calling _CreateTTExEntityShift in FateDestinyUnlocker, line 278")
    set ASw = ASw - 1
    return v_i
endfunction
function mct takes integer vct returns nothing
    call DialogDisplay(nD, Yww_2677[vct], false)
endfunction
function mlS takes integer jlS, string xlS returns integer
    local integer vlS
    set DSw[ASw] = xlS
    set ASw = ASw + 1
    set vlS = kgs(lm, bm, 10., k2[jlS] + Um, 10., j2[jlS], $000000FF, $000000FF, $000000FF, $00000000, x2[jlS], "when calling _CreateTTExEntityShift in FateDestinyUnlocker, line 284")
    set ASw = ASw - 1
    return vlS
endfunction
function mus takes integer vus returns nothing
    call dii("2", 1., n7[vus])
endfunction
function myr takes integer vyr returns nothing
    call Xau("A Betrayed Angel is roaming Silvasia again...", 15.)
    call AQs(ISw[vyr])
endfunction
function n0s takes integer q0s, string a0s returns nothing
    set DSw[ASw] = a0s
    set ASw = ASw + 1
    call dii(Iji("|cffffcc00You have searched the Marine Fortress, but all you could find was ", "when calling unObfuscate in DungeonCmds, line 703") + fju(n1[q0s]) + Iji(" power shards and ", "when calling unObfuscate in DungeonCmds, line 703") + fju(d1[q0s]) + Iji(" gold...|r", "when calling unObfuscate in DungeonCmds, line 703"), 8., aD[f1[q0s]])
    set ASw = ASw - 1
endfunction
function Hlt takes string Ilt returns nothing
    local group Plt
    local group Alt
    local unit Dlt
    set DSw[ASw] = Ilt
    set ASw = ASw + 1
    set Plt = Dit(xP, "when calling getUnitsInRect in LockBosses, line 28")
    set Alt = XbS(Plt)
    loop
        exitwhen not hJw(Alt)
        set Dlt = tPr(Alt)
        if r5S(Dlt) == 1429221442 then
            call V5S(Dlt, $4176756C)
            call Ggr(Dlt)
        endif
    endloop
    call lxs(Alt)
    call Sju(Plt, "when calling release in LockBosses, line 33")
    set ASw = ASw - 1
    set Plt = null
    set Alt = null
    set Dlt = null
endfunction
function n6S takes integer q6S, string a6S returns nothing
    set DSw[ASw] = a6S
    set ASw = ASw + 1
    call Hlt("when calling lockArthas in DungeonCmds, line 411")
    set ASw = ASw - 1
endfunction
function nBs takes integer qBs returns nothing
    local lightning aBs = AddLightningEx("DRAM", true, d6[qBs], f6[qBs], R6[qBs], T6[qBs], Y6[qBs], R6[qBs])
    call clu(aBs, G6[qBs], g6[qBs], h6[qBs], F6[qBs])
    set uQ = aBs
    set aBs = null
endfunction
function nEu takes integer pEu returns nothing
    local trigger eEu = CreateTrigger()
    local trigger qEu
    local trigger aEu
    call l2w(eEu, EVENT_PLAYER_UNIT_SPELL_EFFECT)
    set qEu = eEu
    call B2S(qEu, PZw)
    set aEu = qEu
    call dUs(aEu, Condition(AZw))
    set eEu = null
    set qEu = null
    set aEu = null
endfunction
function nJw takes integer aJw returns nothing
    call PlaySoundAtPointBJ(CreateSound("Sound/Interface/UpkeepRing.wav", false, true, true, $0000000A, $0000000A, "DefaultEAXON"), 150., M8[aJw], 50.)
    call xVi(M8[aJw])
endfunction
function nXw takes integer pXw, string eXw returns nothing
    local integer qXw
    local integer aXw
    set DSw[ASw] = eXw
    set ASw = ASw + 1
    if Zcr(FSw[pXw]) then
        call eTu(Ng, kSw[pXw], "when calling free in Voidless_mechanics, line 824")
        set qXw = GgS(kSw[pXw], "when calling getCustomPlayer in Voidless_mechanics, line 825")
        if qXw != 0 then
            set aXw = xMi(qXw, "when calling getCHero in Voidless_mechanics, line 828")
            if aXw != 0 and hqs(aXw, "when calling getHero in Voidless_mechanics, line 829") != null then
    call krS(qXw, "when calling cameraCheckLock in Voidless_mechanics, line 830")
            endif
        endif
        call klS(YX, jSw[pXw], "when calling remove in Voidless_mechanics, line 832")
        call klS(TX, jSw[pXw], "when calling remove in Voidless_mechanics, line 833")
        call eys(RX, jSw[pXw], "when calling remove in Voidless_mechanics, line 834")
    endif
    set ASw = ASw - 1
endfunction
function ndr takes integer adr returns nothing
    call x1r(yX, false, QSw[adr])
endfunction
function nhu takes integer qhu, string ahu returns nothing
    set DSw[ASw] = ahu
    set ASw = ASw + 1
    call GVw(uH, grw[qhu], O_i(true), "when calling put in Reinforce_Effect, line 93")
    set ASw = ASw - 1
endfunction
function nks takes integer aks returns nothing
    set JA = false
endfunction
function nrr takes integer qrr, string arr returns nothing
    set DSw[ASw] = arr
    set ASw = ASw + 1
    call eys(Lv, hgr(Q7[qrr]), "when calling remove in FateDestinyUnlocker, line 700")
    set ASw = ASw - 1
endfunction
function nwS takes integer qwS, string awS returns nothing
    set DSw[ASw] = awS
    set ASw = ASw + 1
    call eys(og, Aei(IN[qwS]), "when calling remove in Archsage_WhiteWhizard_ArcaneManaBond, line 84")
    set ASw = ASw - 1
endfunction
function AVu takes string IVu returns integer
    local integer PVu
    set DSw[ASw] = IVu
    set ASw = ASw + 1
    if NX == 0 then
        if MX < 32768 then
            set MX = MX + 1
            set PVu = MX
            set wC[PVu] = 1071
        else
            call tNr("Out of memory: Could not create CallbackSingle_doAfter_doAfter_Reforged_Init.", "when calling error in Reforged_Init, line 103")
            set PVu = 0
        endif
    else
        set NX = NX - 1
        set PVu = BX[NX]
        set wC[PVu] = 1071
    endif
    set ASw = ASw - 1
    return PVu
endfunction
function AYi takes string IYi returns integer
    local integer PYi
    set DSw[ASw] = IYi
    set ASw = ASw + 1
    if NX == 0 then
        if MX < 32768 then
            set MX = MX + 1
            set PYi = MX
            set wC[PYi] = 1070
        else
            call tNr("Out of memory: Could not create CallbackSingle_doAfter_doAfter_Reforged_Init.", "when calling error in Reforged_Init, line 99")
            set PYi = 0
        endif
    else
        set NX = NX - 1
        set PYi = BX[NX]
        set wC[PYi] = 1070
    endif
    set ASw = ASw - 1
    return PYi
endfunction
function U8s takes unit Z8s returns nothing
    call BlzPauseUnitEx(Z8s, true)
endfunction
function JfS takes real kfS, real jfS returns unit
    local unit vfS = CreateUnit(Player(PLAYER_NEUTRAL_PASSIVE), $6E726174, kfS, jfS, 0.)
    local unit xfS
    local unit mfS
    local unit QfS
    local unit WfS
    local unit EfS
    local unit ZfS
    local unit UfS
    local unit IfS
    local unit PfS
    local unit AfS
    local integer DfS
    local integer HfS
    call V5S(vfS, $416D7266)
    set mfS = vfS
    call gdr(mfS, 5000., 0.)
    set QfS = mfS
    call V5S(QfS, $41657468)
    set WfS = QfS
    call rZu(WfS, 0.)
    set EfS = WfS
    call U8s(EfS)
    set ZfS = EfS
    call V5S(ZfS, $416C6F63)
    set UfS = ZfS
    call Mvt(UfS)
    set IfS = UfS
    call Q_s(IfS, $416C6F63)
    set PfS = IfS
    call AQs(PfS)
    set AfS = PfS
    call v0r(AfS, true)
    set xfS = AfS
    set DfS = 0
    set HfS = Lh
    loop
        exitwhen DfS > HfS
        call UnitShareVision(xfS, aD[DfS], true)
        set DfS = DfS + 1
    endloop
    set GIw = xfS
    set xfS = null
    set vfS = null
    set mfS = null
    set QfS = null
    set WfS = null
    set EfS = null
    set ZfS = null
    set UfS = null
    set IfS = null
    set PfS = null
    set AfS = null
    return GIw
endfunction
function nwu takes integer Swu, string cwu returns nothing
    local real owu
    local real Owu
    local location lwu
    local real bwu
    local destructable ywu
    local integer pwu
    local integer ewu
    local integer qwu
    local integer awu
    set DSw[ASw] = cwu
    set ASw = ASw + 1
    set owu = ATr(GetWorldBounds()) + 1000.
    set Owu = mxr(GetWorldBounds()) - 1000.
    set lwu = Location(owu, Owu)
    set bwu = GetLocationZ(Location(owu, Owu))
    set BD = JfS(owu, Owu)
    set ND = JfS(owu, Owu)
    set ywu = CreateDestructable($584F6B74, owu, Owu, 0., 1., $00000000)
    call MoveLocation(lwu, owu, Owu)
    set bwu = (GetLocationZ(lwu) - bwu) * 100.
    set pwu = 0
    set ewu = Lh
    loop
        exitwhen pwu > ewu
        if nD == aD[pwu]then
            if R2I(bwu) == 5743 then
    call SelectUnit(ND, true)
            else
    call SelectUnit(BD, true)
            endif
        endif
        set pwu = pwu + 1
    endloop
    call RemoveLocation(lwu)
    call RemoveDestructable(ywu)
    set qwu = AYi("when calling alloc_CallbackSingle_doAfter_doAfter_Reforged_Init in Reforged_Init, line 99")
    call RUs(qwu)
    call Ybr(0., qwu, "when calling doAfter in Reforged_Init, line 99")
    set awu = AVu("when calling alloc_CallbackSingle_doAfter_doAfter_Reforged_Init in Reforged_Init, line 103")
    call RUs(awu)
    call Ybr(3., awu, "when calling doAfter in Reforged_Init, line 103")
    set ASw = ASw - 1
    set lwu = null
    set ywu = null
endfunction
function o7s takes integer s7s, string t7s returns nothing
    local trigger i7s
    local integer S7s
    local integer c7s
    set DSw[ASw] = t7s
    set ASw = ASw + 1
    if (not ays(fA))or(not ays(RA)) or(not ays(TA)) then
        call FDt(Iji("Save-Load is disabled!", "when calling unObfuscate in NpcHandler, line 814"))
        set i7s = CreateTrigger()
        set S7s = c5r(gQ, "when calling iterator in NpcHandler, line 816")
        loop
            exitwhen not Tji(S7s)
            set c7s = LXi(S7s)
            call Ebs(i7s, aD[c7s], "", false)
        endloop
        call vms(S7s, "when calling close in NpcHandler, line 816")
        call B2S(i7s, QUw)
    endif
    set ASw = ASw - 1
    set i7s = null
endfunction
function oHr takes integer cHr returns nothing
    call Y2r(P7[cHr])
endfunction
function oYr takes integer wYr, string uYr returns nothing
    local unit rYr
    local unit sYr
    local unit tYr
    local unit iYr
    local unit SYr
    local unit cYr
    set DSw[ASw] = uYr
    set ASw = ASw + 1
    set rYr = dps(aD[PLAYER_NEUTRAL_AGGRESSIVE], l2s(Iji("n02F", "when calling unObfuscate in Imp2, line 145"), "when calling fromRawCode in Imp2, line 145"), K8[wYr], L8[wYr], bj_UNIT_FACING)
    call Ggr(rYr)
    set sYr = rYr
    call v0r(sYr, true)
    set tYr = dps(aD[PLAYER_NEUTRAL_AGGRESSIVE], l2s(Iji("n02E", "when calling unObfuscate in Imp2, line 146"), "when calling fromRawCode in Imp2, line 146"), K8[wYr], L8[wYr], bj_UNIT_FACING)
    call Ggr(tYr)
    set iYr = tYr
    call v0r(iYr, true)
    set SYr = dps(aD[PLAYER_NEUTRAL_AGGRESSIVE], l2s(Iji("n02G", "when calling unObfuscate in Imp2, line 147"), "when calling fromRawCode in Imp2, line 147"), K8[wYr], L8[wYr], bj_UNIT_FACING)
    call Ggr(SYr)
    set cYr = SYr
    call v0r(cYr, true)
    set ASw = ASw - 1
    set rYr = null
    set sYr = null
    set tYr = null
    set iYr = null
    set SYr = null
    set cYr = null
endfunction
function oer takes integer ter, string ier returns nothing
    local unit Ser
    local unit cer
    set DSw[ASw] = ier
    set ASw = ASw + 1
    set Ser = dps(aD[PLAYER_NEUTRAL_AGGRESSIVE], l2s(Iji("n02I", "when calling unObfuscate in Imp2, line 113"), "when calling fromRawCode in Imp2, line 113"), m8[ter], Q8[ter], bj_UNIT_FACING)
    call Ggr(Ser)
    set cer = Ser
    call v0r(cer, true)
    set ASw = ASw - 1
    set Ser = null
    set cer = null
endfunction
function gUr takes unit GUr returns boolean
    return Gsw[DH[INr(GUr)]] > 0
endfunction
function L4s takes unit J4s, real K4s returns nothing
    set Gsw[DH[INr(J4s)]] = Gsw[DH[INr(J4s)]] - 1
    call OtS(J4s, YUr(J4s) + yIt(J4s) * K4s)
    if Gsw[DH[INr(J4s)]] < 0 then
        call FDt("StatusHandler: tried removing a non-existing slow.")
        set Gsw[DH[INr(J4s)]] = 0
    endif
    if not gUr(J4s) then
        call OtS(J4s, yIt(J4s))
    endif
endfunction
function omt takes integer cmt returns nothing
    call L4s(Tsw[cmt], Ysw[cmt])
endfunction
function oou takes integer iou returns nothing
    local trigger Sou = CreateTrigger()
    local trigger cou
    call r_u(Sou, aD[PLAYER_NEUTRAL_AGGRESSIVE], EVENT_PLAYER_UNIT_DEATH, null)
    set cou = Sou
    call B2S(cou, kUw)
    set Sou = null
    set cou = null
endfunction
function opS takes integer wpS, string upS returns nothing
    local trigger rpS
    local integer spS
    local integer tpS
    local trigger ipS
    local integer SpS
    local integer cpS
    set DSw[ASw] = upS
    set ASw = ASw + 1
    set rpS = CreateTrigger()
    set spS = c5r(gQ, "when calling iterator in PlayerCommands, line 263")
    loop
        exitwhen not Tji(spS)
        set tpS = LXi(spS)
        call Ebs(rpS, aD[tpS], Iji("-", "when calling unObfuscate in PlayerCommands, line 264"), false)
        call Ebs(rpS, aD[tpS], Iji("*", "when calling unObfuscate in PlayerCommands, line 265"), false)
        call Ebs(rpS, aD[tpS], Iji(".", "when calling unObfuscate in PlayerCommands, line 266"), false)
    endloop
    call vms(spS, "when calling close in PlayerCommands, line 263")
    call B2S(rpS, AUw)
    call B2S(rpS, DUw)
    set ipS = CreateTrigger()
    set SpS = c5r(gQ, "when calling iterator in PlayerCommands, line 271")
    loop
        exitwhen not Tji(SpS)
        set cpS = LXi(SpS)
        call mii(ipS, aD[cpS], OSKEY_L, $00000002, false)
    endloop
    call vms(SpS, "when calling close in PlayerCommands, line 271")
    call B2S(ipS, HUw)
    set ASw = ASw - 1
    set rpS = null
    set ipS = null
endfunction
function opi takes integer Spi, string cpi returns nothing
    set DSw[ASw] = cpi
    set ASw = ASw + 1
    if GpS(lD, crw[Spi], "when calling has in PlayerCommands, line 257") then
        call eys(lD, crw[Spi], "when calling remove in PlayerCommands, line 258")
    endif
    set ASw = ASw - 1
endfunction
function pPt takes integer lPt, string bPt returns nothing
    local integer yPt
    set DSw[ASw] = bPt
    set ASw = ASw + 1
    set yPt = bQs(NNs(ANw(Hsw[lPt]), XSw, Hsw[lPt]), Acw, Dcw, .03, .09, "|cffff0000Bladestorm!|r", 12., 2., $00000064, $00000064, $00000064, $00000000, null, "when calling _CreateTTExEntity_fading in Tooth_Effect, line 63")
    if not HEi(Jsw[lPt], hgr(nD), "when calling ifDisplayEffectProcs in Tooth_Effect, line 64") then
        call jRu(yPt, false)
    endif
    set ASw = ASw - 1
endfunction
function pSS takes integer bSS, string ySS returns nothing
    set DSw[ASw] = ySS
    set ASw = ASw + 1
    call GVw(VP, Aei(Suw[bSS]), O_i(false), "when calling put in MonsterHunter_Weakness, line 31")
    set ASw = ASw - 1
endfunction
function pTt takes integer STt, string cTt returns nothing
    local real oTt
    local real OTt
    local integer lTt
    local real bTt
    local real yTt
    set DSw[ASw] = cTt
    set ASw = ASw + 1
    call GYS(U2[STt], aSr(U2[STt]))
    call b9i(U2[STt], Ges(U2[STt]))
    if nD == aD[I2[STt]]then
        call ShowInterface(true, 2.)
    endif
    set bTt = g2r(tm)
    set yTt = vcw
    set oTt = bTt
    set OTt = yTt
    call J7i(U2[STt], oTt, OTt)
    call eTu(Ng, P2[STt], "when calling free in FateDestinyUnlocker, line 303")
    call mir(Ng, P2[STt], oTt, OTt, 0., "when calling pan in FateDestinyUnlocker, line 304")
    set lTt = xus(I2[STt], "when calling getCustomPlayer in FateDestinyUnlocker, line 305")
    call Kcs(lTt, A2[STt], "when calling setCameraZoomLevel in FateDestinyUnlocker, line 305")
    call krS(D2[STt], "when calling cameraCheckLock in FateDestinyUnlocker, line 306")
    call qaS(U2[STt])
    call v0r(U2[STt], false)
    call O0s(P2[STt], U2[STt])
    call eys(Bv, Aei(U2[STt]), "when calling remove in FateDestinyUnlocker, line 311")
    if not GpS(Mv, hgr(P2[STt]), "when calling has in FateDestinyUnlocker, line 312") then
        call vwt(Mv, hgr(P2[STt]), "when calling add in FateDestinyUnlocker, line 313")
    endif
    set ASw = ASw - 1
endfunction
function pbr takes integer bbr, string ybr returns nothing
    set DSw[ASw] = ybr
    set ASw = ASw + 1
    call GVw(ij, S3[bbr], O_i(true), "when calling put in DDS, line 326")
    set ASw = ASw - 1
endfunction
function pmt takes integer Omt returns nothing
    local unit lmt
    local unit bmt
    local unit ymt
    if uK != null and yXu(uK) then
        set lmt = uK
        call qaS(lmt)
        set bmt = lmt
        call v0r(bmt, false)
        set ymt = bmt
        call OJt(ymt, true)
    endif
    set lmt = null
    set bmt = null
    set ymt = null
endfunction
function prt takes integer Ort, string lrt returns nothing
    local timer brt
    local timer yrt
    set DSw[ASw] = lrt
    set ASw = ASw + 1
    set brt = ZPs("when calling getTimer in PlayerGoldAndShardLimit, line 24")
    call nnr(brt, 2., JUw)
    set yrt = ZPs("when calling getTimer in PlayerGoldAndShardLimit, line 25")
    call nnr(yrt, 5., KUw)
    set ASw = ASw - 1
    set brt = null
    set yrt = null
endfunction
function frs takes string nrs returns integer
    local integer drs
    set DSw[ASw] = nrs
    set ASw = ASw + 1
    if NX == 0 then
        if MX < 32768 then
            set MX = MX + 1
            set drs = MX
            set wC[drs] = 1064
        else
            call tNr("Out of memory: Could not create CallbackSingle_doAfter_doAfter_JobAdvancementQuestHandler.", "when calling error in JobAdvancementQuestHandler, line 1043")
            set drs = 0
        endif
    else
        set NX = NX - 1
        set drs = BX[NX]
        set wC[drs] = 1064
    endif
    set ASw = ASw - 1
    return drs
endfunction
function q4t takes integer y4t, string p4t returns nothing
    local integer e4t
    set DSw[ASw] = p4t
    set ASw = ASw + 1
    set e4t = frs("when calling alloc_CallbackSingle_doAfter_doAfter_JobAdvancementQuestHandler in JobAdvancementQuestHandler, line 1043")
    call RUs(e4t)
    call Ybr(7., e4t, "when calling doAfter in JobAdvancementQuestHandler, line 1043")
    set ASw = ASw - 1
endfunction
function qNw takes integer pNw, string eNw returns nothing
    set DSw[ASw] = eNw
    set ASw = ASw + 1
    call xZu(k6w("17", "when calling unObfuscateInt in EffectCleaner, line 57"), Iji("Swordsman", "when calling unObfuscate in EffectCleaner, line 57"), "What's there to say about the Swordsman? It is a classic character class; high hp, good armor, moderate attack damage, decent attack rate... it is a very well-rounded character, adept at staying alive and tanking big bosses. However, for all its good points, it can never deal as much damage as the Templar. Nor can it attack as fast as the Thief. The swordsman is a class that is better suited for tanking bosses rather than killing monsters swiftly. However, when the swordsman reaches higher job upgrades, he can opt for the Imperial Knight job upgrade, who focuses more on dishing out damage rather than on staying alive.\nPlayers wishing to be a Swordsman must be a level 10 Male Novice.\n|cffffcc00Job Upgrades|r:\n1st Job = Swordsman\n2nd Job = Knight\n3rd Job = Crusader / Imperial Knight\n4th Job = Avenger / Champion", Iji("ReplaceableTextures/CommandButtons/BTNTheCaptain.blp", "when calling unObfuscate in EffectCleaner, line 57"), "when calling createQuestBJ3_closure in EffectCleaner, line 57")
    call ieS(k6w("17", "when calling unObfuscateInt in EffectCleaner, line 58"), Iji("Initiate", "when calling unObfuscate in EffectCleaner, line 58"), "The Initiate is an apprentice learning the powerful arts of magic. Using magic, he can shape it into a ball of flame, or freeze enemies with a hailstorm. Although the initiate has low attack speed, next to no armor and extremely low hp, he can deal amazing amounts of damage with his magics and he has pretty solid attack damage as well due to his high intelligence. He is a good support character who, after job upgrades, can become a powerful soloist, not to mention gaining a very useful skill - Mana Shield, to offset his low hit points. When he reaches 3rd job, he can choose to be a powerful Wizard, or an extremely adaptable Sage. At fourth job, his class is able to cast the strongest spell in the game, though it is limited to only one of the 2 Job paths.\nPlayers wishing to be an Initiate must be a level 10 Male Novice.\n|cffffcc00Job Upgrades|r:\n1st Job = Initiate\n2nd Job = Mage\n3rd Job = Wizard / Sage\n4th Job = White Wizard / ArchSage", Iji("ReplaceableTextures/CommandButtons/BTNBanditMage.blp", "when calling unObfuscate in EffectCleaner, line 58"), "when calling createQuestBJ2_closure in EffectCleaner, line 58")
    call mKs(k6w("17", "when calling unObfuscateInt in EffectCleaner, line 59"), Iji("Archer", "when calling unObfuscate in EffectCleaner, line 59"), "The Archer is a powerful ranged class. It deals pretty high damage at a decent attack rate. The Archer's movement speed is also pretty decent enough for her to catch her opponents.\nHowever, the Archer has very little armor and low hp. Hence, she is better as a ranged support unit rather than a tanking fighter. When reaching higher job upgrades, she can become a swift tracker, or a powerful marksman. At 4th Job, the Sniper becomes extremely capable at crowd control, while the Monster Hunter specializes in dishing out high damage to a single unit in a short amount of time.\nPlayers wishing to be an Archer must be a level 10 Female Novice.\n|cffffcc00Job Upgrades|r:\n1st Job = Archer\n2nd Job = Hunter\n3rd Job = Marksman / Tracker\n4th Job = Sniper / Monster Hunter", Iji("ReplaceableTextures/CommandButtons/BTNHighElvenArcher.blp", "when calling unObfuscate in EffectCleaner, line 59"), "when calling createQuestBJ1_closure in EffectCleaner, line 59")
    call xZu(k6w("17", "when calling unObfuscateInt in EffectCleaner, line 60"), Iji("Thief", "when calling unObfuscate in EffectCleaner, line 60"), "The Thief is a pretty popular class, due to widespread rumours of it being able to kill extremely fast with amazing amounts of damage. However, although the Thief does attack extremely fast, its attack damage is only moderate at best. With low hp and low armor, the Thief, for all his fast hitting power, has to rely on dodging and critical strike skills to stay alive at low levels. However, the Thief is a class well suited for melee support, and at later levels advance into a powerful soloist. However, when faced with an extremely strong foe, the Thief would definitely require a tank. When choosing later job upgrades, the Thief can choose to be an incredibly fast Assassin who specializes in critical strikes, or a hidden, backstabbing Stalker who specializes in evasion.\nPlayers wishing to be a Thief must be a level 10 Male Novice.\n|cffffcc00Job Upgrades|r:\n1st Job = Thief\n2nd Job = Rogue\n3rd Job = Assassin / Stalker\n4th Job = Phantom Assassin / Master Stalker", Iji("ReplaceableTextures/CommandButtons/BTNBandit.blp", "when calling unObfuscate in EffectCleaner, line 60"), "when calling createQuestBJ3_closure in EffectCleaner, line 60")
    call mKs(k6w("17", "when calling unObfuscateInt in EffectCleaner, line 61"), Iji("Templar", "when calling unObfuscate in EffectCleaner, line 61"), "The Templar class is probably the most fun class of all, not to mention it is actually one of my favourite classes. The Templar has a skill set built for advancements. For example, if the player wishes to advance as a High Templar, he/she has to master the psionic arts skills. The Templar has low attack speed, low hp, and little armor. Some of these attributes will improve after changing into future job upgrades, but that is also the same with the other classes. Hence, the Templar might be a good class for players who love to kill bosses.\nWhen changing to 3rd Job, the player should master Psionic Arts if he wishes to change to a spellcasting High Templar. If he wishes to advance as a powerful Dark Templar, he should master the warp blade arts.\nPlayers wishing to be a Templar must be a level 10 Female Novice.\n|cffffcc00Job Upgrades|r:\n1st Job = Templar\n2nd Job = ArchTemplar\n3rd Job = High Templar / Dark Templar\n4th Job = Grand Templar / Dark ArchTemplar", Iji("ReplaceableTextures/CommandButtons/BTNHuntress.blp", "when calling unObfuscate in EffectCleaner, line 61"), "when calling createQuestBJ1_closure in EffectCleaner, line 61")
    call ieS(k6w("17", "when calling unObfuscateInt in EffectCleaner, line 62"), Iji("Acolyte", "when calling unObfuscate in EffectCleaner, line 62"), "Acolytes are a different breed of healers. They have decent armor at best, and above average hp. However, their attacks are slow and their skills are not as deadly as other classes. Acolytes aren't meant to solo, so they will encounter difficulties leveling in the beginning. Also, it should be known that a female acolyte has different abilities from a male acolyte.\nWhen changing jobs, they cannot choose their 3rd Job/4th Job Upgrade as it is based on their gender, but it is at that period of time when their skill trees start to differ and branch out into Party Healing and Support, and Single Target Buff and Support.\nPlayers wishing to be an Acolyte must be either a level 10 Female Novice, or a level 10 Male Novice.\n|cffffcc00Job Upgrades|r:\n1st Job = Acolyte\n2nd Job = Cleric\n3rd Job = Priest (Males) / Matriarch (Females)\n4th Job = Hierophant (Males) / Prophetess (Females)", Iji("ReplaceableTextures/CommandButtons/BTNPriest.blp", "when calling unObfuscate in EffectCleaner, line 62"), "when calling createQuestBJ2_closure in EffectCleaner, line 62")
    call ieS(k6w("17", "when calling unObfuscateInt in EffectCleaner, line 63"), Iji("Witch Hunter", "when calling unObfuscate in EffectCleaner, line 63"), "The Witch Hunters are another well-rounded class, with moderate hp, pretty decent attack speed and good attack damage. Their skills are pretty adept at killing monsters but being well rounded also means they will not really have an advantage. For example, their damage will never soar as high as the Templar, and their attack speed will never match the Thief's. However, when he changes into a Grand Inquisitor, he gains many auras which are very useful in a party. This makes the Grand Inquisitor a favored class in parties.\nIf he chooses to change into a Professional Witcher instead, he gains a powerful passive cleave skill, not to mention the 36 Strikes skill which is one of the strongest boss finishers!\nPlayers wishing to be a Witch Hunter must be a level 10 Male Novice.\n|cffffcc00Job Upgrades|r:\n1st Job = Witch Hunter\n2nd Job = Slayer\n3rd Job = Witcher / Inquisitor\n4th Job = Professional Witcher / Grand Inquisitor", Iji("ReplaceableTextures/CommandButtons/BTNSpellBreaker.blp", "when calling unObfuscate in EffectCleaner, line 63"), "when calling createQuestBJ2_closure in EffectCleaner, line 63")
    call mKs(k6w("17", "when calling unObfuscateInt in EffectCleaner, line 64"), Iji("Druid", "when calling unObfuscate in EffectCleaner, line 64"), "The Druid is another class that offers much variation. It has below average damage and attack speed at the beginning, being a spellcaster, but as the Druid progresses, he can choose to continue wielding the forces of nature, or attempt to become a shapeshifter.\nIf Druid chooses to become a Summoner, he gains the power to summon various elemental powers to their side, like a powerful Tornado or a destructive Armageddon. They do not have a Mana Shield to protect against attacks, instead, they receive a regeneration skill that heals their life and mana over time.\nIf they choose to become a powerful Runemaster, they gain even greater powers of the wild, and when they shapeshift into an Animal Form, their speed, armor, and damage outputs increases by a large extent! \nPlayers wishing to be a Druid must be a level 10 Male Novice.\n|cffffcc00Job Upgrades|r:\n1st Job = Druid\n2nd Job = ArchDruid\n3rd Job = Shaman / Shapeshifter\n4th Job = Summoner / RuneMaster", Iji("ReplaceableTextures/CommandButtons/BTNDruidOfTheTalon.blp", "when calling unObfuscate in EffectCleaner, line 64"), "when calling createQuestBJ1_closure in EffectCleaner, line 64")
    set ASw = ASw - 1
endfunction
function q_i takes integer y_i, string p_i returns integer
    local integer e_i
    set DSw[ASw] = p_i
    set ASw = ASw + 1
    set e_i = kgs(ym, pm, 10., w2[y_i] + km, 10., u2[y_i], $000000FF, $000000FF, $000000FF, $00000000, r2[y_i], "when calling _CreateTTExEntityShift in FateDestinyUnlocker, line 257")
    set ASw = ASw - 1
    return e_i
endfunction
function qwi takes integer pwi, string ewi returns nothing
    set DSw[ASw] = ewi
    set ASw = ASw + 1
    call krS(o1[pwi], "when calling cameraCheckLock in DungeonCmds, line 508")
    set ASw = ASw - 1
endfunction
function qwr takes integer pwr, string ewr returns nothing
    set DSw[ASw] = ewr
    set ASw = ASw + 1
    call eys(yA, duw[pwr], "when calling remove in NpcHandler, line 337")
    set ASw = ASw - 1
endfunction
function r2u takes integer u2u returns nothing
    call PlaySoundAtPointBJ(CreateSound("Sound/Interface/UpkeepRing.wav", false, true, true, $0000000A, $0000000A, "DefaultEAXON"), 150., B8[u2u], 50.)
endfunction
function GLr takes real fLr, real RLr, real TLr, real YLr returns real
    set ncw = fLr + TLr
    set dcw = RLr + YLr
    return ncw
endfunction
function r9r takes integer M8r returns nothing
    local unit w9r = dps(aD[PLAYER_NEUTRAL_AGGRESSIVE], LZ, GLr(oQu(Bp), Gcw, 150., - 150.), dcw, bj_UNIT_FACING)
    local unit u9r
    call Yis(w9r, $0000012C, false)
    set u9r = w9r
    call lKs(u9r, Jg, $00000001)
    set wU = u9r
    set w9r = null
    set u9r = null
endfunction
function rAu takes integer MPu returns nothing
    local effect wAu = Z6[MPu]
    local effect uAu
    call iNw(wAu, .15)
    set uAu = wAu
    call Wwu(uAu, 10.)
    set wAu = null
    set uAu = null
endfunction
function rEs takes integer uEs returns nothing
    call ShowInterface(true, 1.)
endfunction
function rGt takes integer CYt, string VYt returns nothing
    local unit BYt
    local real NYt
    local group MYt
    local unit wGt
    local real uGt
    set DSw[ASw] = VYt
    set ASw = ASw + 1
    set BYt = null
    set NYt = 0.
    set MYt = XbS(fc[MJ])
    loop
        exitwhen not hJw(MYt)
        set wGt = tPr(MYt)
        set uGt = fYr(ANw(wGt), XSw, ANw(uK), XSw)
        if NYt < uGt and Zcr(wGt) and(not kPu(wGt, "when calling isInvolvedInMechanic in Voidless_mechanics, line 97")) then
            set BYt = wGt
            set NYt = uGt
        endif
    endloop
    call lxs(MYt)
    if BYt != null then
        call Hcu(uK, uD, BYt)
    endif
    set ASw = ASw - 1
    set BYt = null
    set MYt = null
    set wGt = null
endfunction
function rLw takes integer wLw, string uLw returns nothing
    set DSw[ASw] = uLw
    set ASw = ASw + 1
    call eys(Xv, v7[wLw], "when calling remove in FateDestinyUnlocker, line 679")
    set ASw = ASw - 1
endfunction
function iOu takes string sOu returns integer
    local integer tOu
    set DSw[ASw] = sOu
    set ASw = ASw + 1
    if NX == 0 then
        if MX < 32768 then
            set MX = MX + 1
            set tOu = MX
            set wC[tOu] = 1053
        else
            call tNr("Out of memory: Could not create CallbackSingle_doAfter_doAfter_DungeonCmds.", "when calling error in DungeonCmds, line 399")
            set tOu = 0
        endif
    else
        set NX = NX - 1
        set tOu = BX[NX]
        set wC[tOu] = 1053
    endif
    set ASw = ASw - 1
    return tOu
endfunction
function rSr takes integer Vir, string Bir returns nothing
    local group Nir
    local group Mir
    local unit wSr
    local integer uSr
    set DSw[ASw] = Bir
    set ASw = ASw + 1
    set Nir = GetUnitsInRectAll(w1[Vir])
    set Mir = XbS(Nir)
    loop
        exitwhen not hJw(Mir)
        set wSr = tPr(Mir)
        if wSr != null and yXu(wSr) and hgr(eDs(wSr)) == PLAYER_NEUTRAL_AGGRESSIVE then
            call Ggr(wSr)
            call v0r(wSr, true)
        endif
    endloop
    call lxs(Mir)
    set uSr = iOu("when calling alloc_CallbackSingle_doAfter_doAfter_DungeonCmds in DungeonCmds, line 399")
    call RUs(uSr)
    set u1[uSr] = Nir
    set r1[uSr] = w1[Vir]
    call Ybr(2.6, uSr, "when calling doAfter in DungeonCmds, line 399")
    set ASw = ASw - 1
    set Nir = null
    set Mir = null
    set wSr = null
endfunction
function rVr takes integer BCr, string NCr returns nothing
    local group MCr
    local group wVr
    local unit uVr
    set DSw[ASw] = NCr
    set ASw = ASw + 1
    if hPs(fc[BZ]) != 0 then
        call I7S(uSs(S0w[BCr], c0w[BCr], vU))
        set MCr = LLt(S0w[BCr], c0w[BCr], gU, "when calling getUnitsInRange in Imp4, line 534")
        set wVr = XbS(MCr)
        loop
            exitwhen not hJw(wVr)
            set uVr = tPr(wVr)
            if J_i(fc[BZ], uVr) then
    call uSs(ANw(uVr), XSw, QU)
    call GYS(uVr, Udi(uVr) * .1)
            endif
        endloop
        call lxs(wVr)
        call Sju(MCr, "when calling release in Imp4, line 540")
    endif
    set ASw = ASw - 1
    set MCr = null
    set wVr = null
    set uVr = null
endfunction
function rXr takes integer wXr, string uXr returns nothing
    set DSw[ASw] = uXr
    set ASw = ASw + 1
    call GVw(aQ, L7[wXr], O_i(false), "when calling put in Fate_Effect, line 34")
    set ASw = ASw - 1
endfunction
function rdu takes integer Bnu, string Nnu returns nothing
    local item Mnu
    local integer wdu
    local item udu
    set DSw[ASw] = Nnu
    set ASw = ASw + 1
    set Mnu = uwr(Ftw[Bnu], rk)
    call Frr(Ftw[Bnu], Mnu)
    call tdu(Mnu)
    set wdu = 0
    loop
        exitwhen wdu > 2
        set udu = uwr(Ftw[Bnu], l2s(Iji(am, "when calling unObfuscate in Voidless, line 176"), "when calling fromRawCode in Voidless, line 176"))
        call Frr(Ftw[Bnu], udu)
        call tdu(udu)
        if not Jyr(qK, ktw[Bnu], "when calling has in Voidless, line 180") then
            call GVw(qK, ktw[Bnu], XQt("when calling new_LinkedList in Voidless, line 181"), "when calling put in Voidless, line 181")
        endif
        call vwt(wps(qK, ktw[Bnu], "when calling get in Voidless, line 183"), agS(AddSpecialEffect(em, GetRandomReal(GetRectMinX(GK), GetRectMaxX(GK)), GetRandomReal(GetRectMinY(GK), GetRectMaxY(GK)))), "when calling add in Voidless, line 183")
        set wdu = wdu + 1
    endloop
    set ASw = ASw - 1
    set Mnu = null
    set udu = null
endfunction
function rks takes integer uks returns nothing
    call Y2r(H7[uks])
endfunction
function rrr takes integer wrr, string urr returns nothing
    set DSw[ASw] = urr
    set ASw = ASw + 1
    if Zcr(mSw[wrr]) and Jyr(lX, Aei(mSw[wrr]), "when calling has in Voidless_mechanics, line 842") then
        call n_S(mSw[wrr], $00000001, "when calling playArrowGame in Voidless_mechanics, line 843")
    endif
    set ASw = ASw - 1
endfunction
function rut takes integer wut, string uut returns nothing
    set DSw[ASw] = uut
    set ASw = ASw + 1
    call krS(WSw[wut], "when calling cameraCheckLock in Voidless_triggers, line 241")
    set ASw = ASw - 1
endfunction
function KHi takes effect HHi, real JHi returns nothing
    call BlzSetSpecialEffectYaw(HHi, JHi)
endfunction
function Yrs takes string Rrs returns integer
    local integer Trs
    set DSw[ASw] = Rrs
    set ASw = ASw + 1
    if NX == 0 then
        if MX < 32768 then
            set MX = MX + 1
            set Trs = MX
            set wC[Trs] = 1076
        else
            call tNr("Out of memory: Could not create CallbackSingle_doAfter_doAfter_Voidless.", "when calling error in Voidless, line 171")
            set Trs = 0
        endif
    else
        set NX = NX - 1
        set Trs = BX[NX]
        set wC[Trs] = 1076
    endif
    set ASw = ASw - 1
    return Trs
endfunction
function Z4i takes string W4i returns integer
    local integer E4i
    set DSw[ASw] = W4i
    set ASw = ASw + 1
    if NX == 0 then
        if MX < 32768 then
            set MX = MX + 1
            set E4i = MX
            set wC[E4i] = 1078
        else
            call tNr("Out of memory: Could not create CallbackSingle_doAfter_doAfter_Voidless.", "when calling error in Voidless, line 192")
            set E4i = 0
        endif
    else
        set NX = NX - 1
        set E4i = BX[NX]
        set wC[E4i] = 1078
    endif
    set ASw = ASw - 1
    return E4i
endfunction
function wDi takes string NAi returns integer
    local integer MAi
    set DSw[ASw] = NAi
    set ASw = ASw + 1
    if NX == 0 then
        if MX < 32768 then
            set MX = MX + 1
            set MAi = MX
            set wC[MAi] = 1077
        else
            call tNr("Out of memory: Could not create CallbackSingle_doAfter_doAfter_Voidless.", "when calling error in Voidless, line 187")
            set MAi = 0
        endif
    else
        set NX = NX - 1
        set MAi = BX[NX]
        set wC[MAi] = 1077
    endif
    set ASw = ASw - 1
    return MAi
endfunction
function s0s takes integer D9s, string H9s returns nothing
    local effect J9s
    local effect K9s
    local integer L9s
    local real X9s
    local real C9s
    local integer V9s
    local integer B9s
    local real N9s
    local real M9s
    local real w0s
    local real u0s
    local real r0s
    set DSw[ASw] = H9s
    set ASw = ASw + 1
    if rK == null then
        set J9s = uSs(TK, YK, MK)
        call Wwu(J9s, 2.)
        set K9s = J9s
        call KHi(K9s, Deg2Rad(270.))
        set rK = K9s
    endif
    if QUu(Ytw[D9s], BF) then
        call vwt(eK, xMi(Gtw[D9s], "when calling getCHero in Voidless, line 157"), "when calling add in Voidless, line 157")
        call xxr(lt, gtw[D9s])
    elseif (not QUu(Ytw[D9s], uk))and(not QUu(Ytw[D9s], rk)) then
        call bQs(Edi(TK, YK), Jcw, Kcw, .015, - .030, Iji("As it seems, you are not yet strong enough to offer me in a fair fight.", "when calling unObfuscate in Voidless, line 160"), 14., 10., $00000027, $0000008E, $000000C1, $00000000, gtw[D9s], "when calling _CreateTTExEntity_fading in Voidless, line 160")
    elseif not QUu(Ytw[D9s], rk) then
        call bQs(Edi(TK, YK), Jcw, Kcw, .015, - .030, Iji("The artifact in your hands are not yet glowing strong enough.", "when calling unObfuscate in Voidless, line 162"), 14., 10., $00000027, $0000008E, $000000C1, $00000000, gtw[D9s], "when calling _CreateTTExEntity_fading in Voidless, line 162")
    elseif kbr(gtw[D9s]) < k6w("292929", "when calling unObfuscateInt in Voidless, line 163") then
        call bQs(Edi(TK, YK), Jcw, Kcw, .015, - .030, Iji("Tremendous amount of essence power is missing in the process.", "when calling unObfuscate in Voidless, line 164"), 14., 10., $00000027, $0000008E, $000000C1, $00000000, gtw[D9s], "when calling _CreateTTExEntity_fading in Voidless, line 164")
    elseif yct(Ytw[D9s], l2s(Iji(am, "when calling unObfuscate in Voidless, line 165"), "when calling fromRawCode in Voidless, line 165")) == 3 then
        call bQs(Edi(TK, YK), Jcw, Kcw, .015, - .030, Iji("Inspirit opens a heros inner eye, to be able to see and fight the Void. Without these it would be hopeless.", "when calling unObfuscate in Voidless, line 167"), 14., 10., $00000027, $0000008E, $000000C1, $00000000, gtw[D9s], "when calling _CreateTTExEntity_fading in Voidless, line 167")
        call vwt(eK, xMi(Gtw[D9s], "when calling getCHero in Voidless, line 168"), "when calling add in Voidless, line 168")
        call xxr(lt, gtw[D9s])
        set L9s = Yrs("when calling alloc_CallbackSingle_doAfter_doAfter_Voidless in Voidless, line 171")
        call RUs(L9s)
        set Ftw[L9s] = Ytw[D9s]
        set ktw[L9s] = htw[D9s]
        call Ybr(1., L9s, "when calling doAfter in Voidless, line 171")
        set M9s = ANw(Ytw[D9s])
        set w0s = XSw
        set X9s = M9s
        set C9s = w0s
        set V9s = wDi("when calling alloc_CallbackSingle_doAfter_doAfter_Voidless in Voidless, line 187")
        call RUs(V9s)
        set jtw[V9s] = htw[D9s]
        set u0s = X9s
        set r0s = C9s
        set xtw[V9s] = u0s
        set vtw[V9s] = r0s
        call Ybr(1.2, V9s, "when calling doAfter in Voidless, line 187")
        set N9s = 1. + 3.5
        set B9s = Z4i("when calling alloc_CallbackSingle_doAfter_doAfter_Voidless in Voidless, line 192")
        call RUs(B9s)
        set mtw[B9s] = Ytw[D9s]
        set Qtw[B9s] = htw[D9s]
        set Wtw[B9s] = gtw[D9s]
        set Etw[B9s] = Gtw[D9s]
        call Ybr(N9s, B9s, "when calling doAfter in Voidless, line 192")
    endif
    set ASw = ASw - 1
    set J9s = null
    set K9s = null
endfunction
function sFt takes integer rFt returns nothing
    call dii("2", .8, eDs(C8[rFt]))
endfunction
function sJw takes integer MHw, string wJw returns nothing
    local integer uJw
    local integer rJw
    set DSw[ASw] = wJw
    set ASw = ASw + 1
    set uJw = c5r(gQ, "when calling iterator in Voidless_triggers, line 297")
    loop
        exitwhen not Tji(uJw)
        set rJw = LXi(uJw)
        call r_u(ESw[MHw], aD[rJw], EVENT_PLAYER_UNIT_USE_ITEM, null)
    endloop
    call vms(uJw, "when calling close in Voidless_triggers, line 297")
    call B2S(ESw[MHw], lIw)
    set ASw = ASw - 1
endfunction
function sYs takes integer VTs, string BTs returns nothing
    local unit NTs
    local real MTs
    local group wYs
    local unit uYs
    local real rYs
    set DSw[ASw] = BTs
    set ASw = ASw + 1
    set NTs = null
    set MTs = xvt(pI)
    set wYs = XbS(fc[MJ])
    loop
        exitwhen not hJw(wYs)
        set uYs = tPr(wYs)
        set rYs = Udi(uYs)
        if MTs > rYs and Zcr(uYs) and(not kPu(uYs, "when calling isInvolvedInMechanic in Voidless_mechanics, line 115")) then
            set NTs = uYs
            set MTs = rYs
        endif
    endloop
    call lxs(wYs)
    if NTs != null then
        call Hcu(uK, uD, NTs)
    endif
    set ASw = ASw - 1
    set NTs = null
    set wYs = null
    set uYs = null
endfunction
function ver takes sound ker, boolean jer, boolean xer returns nothing
    call StopSound(ker, jer, xer)
endfunction
function scr takes integer rcr returns nothing
    if nD == H2[rcr]then
        call ver(hm, false, true)
    endif
endfunction
function Jei takes string Dei returns integer
    local integer Hei
    set DSw[ASw] = Dei
    set ASw = ASw + 1
    if NX == 0 then
        if MX < 32768 then
            set MX = MX + 1
            set Hei = MX
            set wC[Hei] = 1083
        else
            call tNr("Out of memory: Could not create CallbackSingle_doAfter_doAfter_doAfter_JobAdvancementQuestHandler.", "when calling error in JobAdvancementQuestHandler, line 1032")
            set Hei = 0
        endif
    else
        set NX = NX - 1
        set Hei = BX[NX]
        set wC[Hei] = 1083
    endif
    set ASw = ASw - 1
    return Hei
endfunction
function squ takes integer wqu, string uqu returns nothing
    local integer rqu
    set DSw[ASw] = uqu
    set ASw = ASw + 1
    set NI = false
    call lWi("when calling detectSinglePlayer in JobAdvancementQuestHandler, line 1031")
    set rqu = Jei("when calling alloc_CallbackSingle_doAfter_doAfter_doAfter_JobAdvancementQuestHandler in JobAdvancementQuestHandler, line 1032")
    call RUs(rqu)
    call Ybr(2., rqu, "when calling doAfter in JobAdvancementQuestHandler, line 1032")
    set ASw = ASw - 1
endfunction
function sxr takes integer rxr returns nothing
    call PlaySoundAtPointBJ(CreateSound("Sound/Interface/UpkeepRing.wav", false, true, true, $0000000A, $0000000A, "DefaultEAXON"), 150., B3[rxr], 50.)
endfunction
function jyu takes string Fyu returns integer
    local integer kyu
    set DSw[ASw] = Fyu
    set ASw = ASw + 1
    if AB == 0 then
        if DB < 32768 then
            set DB = DB + 1
            set kyu = DB
            set HB[kyu] = 1188
        else
            call tNr("Out of memory: Could not create ForUnitOfTypeInAreaClosure_forUnitsOfTypeInArea_doAfter_Imp4.", "when calling error in Imp4, line 197")
            set kyu = 0
        endif
    else
        set AB = AB - 1
        set kyu = PB[AB]
        set HB[kyu] = 1188
    endif
    set ASw = ASw - 1
    return kyu
endfunction
function t1r takes integer M3r, string w1r returns nothing
    local integer u1r
    local unit r1r
    local integer s1r
    set DSw[ASw] = w1r
    set ASw = ASw + 1
    if dO[$00000001] == 2 then
        set s1r = AZ
        set u1r = jyu("when calling alloc_ForUnitOfTypeInAreaClosure_forUnitsOfTypeInArea_doAfter_Imp4 in Imp4, line 197")
        call u0u(s1r, u1r, "when calling forUnitsOfTypeInArea in Imp4, line 197")
    endif
    call DisplayTextToForce(Rc[BZ], Iji("The Aurora has arrived.", "when calling unObfuscate in Imp4, line 200"))
    set r1r = dps(aD[PLAYER_NEUTRAL_AGGRESSIVE], KZ, oQu(Kp), Gcw, bj_UNIT_FACING)
    call Yis(r1r, $000000FA, false)
    set ASw = ASw - 1
    set r1r = null
endfunction
function t2t takes integer w2t, string u2t returns nothing
    local integer r2t
    local integer s2t
    set DSw[ASw] = u2t
    set ASw = ASw + 1
    set r2t = c5r(gQ, "when calling iterator in VertexCalculator, line 118")
    loop
        exitwhen not Tji(r2t)
        set s2t = LXi(r2t)
        if aD[s2t] == nD then
            call CinematicFadeBJ($00000001, .3, "Models/Asura Strike.blp", 100., 100., 100., 30.)
        endif
    endloop
    call vms(r2t, "when calling close in VertexCalculator, line 118")
    set ASw = ASw - 1
endfunction
function t5s takes integer u5s, string r5s returns nothing
    local integer s5s
    set DSw[ASw] = r5s
    set ASw = ASw + 1
    set s5s = 0
    loop
        exitwhen s5s > 100
        call vwt(vH, err(c1s(fH, "when calling getColoredString in SpellIconWithGif, line 83"), "when calling stringToIndex in SpellIconWithGif, line 83"), "when calling add in SpellIconWithGif, line 83")
        set s5s = s5s + 1
    endloop
    set ASw = ASw - 1
endfunction
function tXw takes integer MLw, string wXw returns nothing
    local effect uXw
    local effect rXw
    local effect sXw
    set DSw[ASw] = wXw
    set ASw = ASw + 1
    set uXw = vht("war3mapImported\\Great Lightning.mdl", lOu(gZ), hcw)
    call yYi(uXw, 5., "when calling destrAdvTimed in Imp3DragonFortress, line 1042")
    set rXw = uXw
    call Wwu(rXw, 7.)
    set sXw = rXw
    call iNw(sXw, 0.2)
    set ASw = ASw - 1
    set uXw = null
    set rXw = null
    set sXw = null
endfunction
function tbt takes integer rbt returns nothing
    local lightning sbt = AddLightningEx("DRAM", true, O6[rbt], l6[rbt], b6[rbt], y6[rbt], p6[rbt], b6[rbt])
    call clu(sbt, e6[rbt], q6[rbt], a6[rbt], n6[rbt])
    set Mm = sbt
    set sbt = null
endfunction
function yci takes string lci returns integer
    local integer bci
    set DSw[ASw] = lci
    set ASw = ASw + 1
    if NX == 0 then
        if MX < 32768 then
            set MX = MX + 1
            set bci = MX
            set wC[bci] = 1066
        else
            call tNr("Out of memory: Could not create CallbackSingle_doAfter_doAfter_JobAdvancementQuestHandler.", "when calling error in JobAdvancementQuestHandler, line 1248")
            set bci = 0
        endif
    else
        set NX = NX - 1
        set bci = BX[NX]
        set wC[bci] = 1066
    endif
    set ASw = ASw - 1
    return bci
endfunction
function tbu takes integer ubu, string rbu returns nothing
    local integer sbu
    set DSw[ASw] = rbu
    set ASw = ASw + 1
    set sbu = yci("when calling alloc_CallbackSingle_doAfter_doAfter_JobAdvancementQuestHandler in JobAdvancementQuestHandler, line 1248")
    call RUs(sbu)
    set kww_4061[sbu] = Gww_776[ubu]
    set jww_3960[sbu] = gww_3659[ubu]
    set xww_5381[sbu] = hww_3760[ubu]
    set vww_5178[sbu] = Fww_672[ubu]
    call Ybr(.1, sbu, "when calling doAfter in JobAdvancementQuestHandler, line 1248")
    set ASw = ASw - 1
endfunction
function tcS takes integer scS returns nothing
    call lKs(ouw[scS], MP, Ouw[scS])
endfunction
function ZPt takes string WPt returns integer
    local integer EPt
    set DSw[ASw] = WPt
    set ASw = ASw + 1
    if NX == 0 then
        if MX < 32768 then
            set MX = MX + 1
            set EPt = MX
            set wC[EPt] = 1068
        else
            call tNr("Out of memory: Could not create CallbackSingle_doAfter_doAfter_JobAdvancementQuestHandler.", "when calling error in JobAdvancementQuestHandler, line 1260")
            set EPt = 0
        endif
    else
        set NX = NX - 1
        set EPt = BX[NX]
        set wC[EPt] = 1068
    endif
    set ASw = ASw - 1
    return EPt
endfunction
function tcs takes integer ucs, string rcs returns nothing
    local integer scs
    set DSw[ASw] = rcs
    set ASw = ASw + 1
    set scs = ZPt("when calling alloc_CallbackSingle_doAfter_doAfter_JobAdvancementQuestHandler in JobAdvancementQuestHandler, line 1260")
    call RUs(scs)
    set Kww_1186[scs] = Aww_113[ucs]
    set Lww_1288[scs] = Dww_427[ucs]
    set Xww_2576[scs] = Hww_877[ucs]
    set Cww_321[scs] = Jww_1085[ucs]
    call Ybr(.1, scs, "when calling doAfter in JobAdvancementQuestHandler, line 1260")
    set ASw = ASw - 1
endfunction
function tvi takes integer rvi returns nothing
    local lightning svi = AddLightningEx("DRAM", true, L2[rvi], X2[rvi], C2[rvi], V2[rvi], B2[rvi], C2[rvi])
    call clu(svi, N2[rvi], M2[rvi], w5[rvi], u5[rvi])
    set Km = svi
    set svi = null
endfunction
function u2S takes integer N4i returns nothing
    local unit M4i = uK
    local unit w2S
    call v0r(M4i, false)
    set w2S = M4i
    call qaS(w2S)
    set yK = false
    set M4i = null
    set w2S = null
endfunction
function uGs takes integer MYs, string wGs returns nothing
    set DSw[ASw] = wGs
    set ASw = ASw + 1
    call Tir(uSs(s7[MYs], t7[MYs], "Abilities//Spells//Orc//WarStomp//WarStompCaster.mdl"), 2., "when calling destrTimed in FateDestinyUnlocker, line 499")
    set ASw = ASw - 1
endfunction
function Lct takes string Jct returns integer
    local integer Kct
    set DSw[ASw] = Jct
    set ASw = ASw + 1
    if PC == 0 then
        if AC < 32768 then
            set AC = AC + 1
            set Kct = AC
            set DC[Kct] = 702
        else
            call tNr("Out of memory: Could not create CallbackPeriodic_doPeriodically_SpellIconWithGif.", "when calling error in SpellIconWithGif, line 54")
            set Kct = 0
        endif
    else
        set PC = PC - 1
        set Kct = IC[PC]
        set DC[Kct] = 702
    endif
    set ASw = ASw - 1
    return Kct
endfunction
function O7i takes unit r7i, string s7i returns nothing
    local integer t7i
    local integer i7i
    local integer S7i
    local integer c7i
    local real o7i
    set DSw[ASw] = s7i
    set ASw = ASw + 1
    if not gSr(r7i, $41475A5A) then
        call lKs(r7i, $41475A5A, $00000001)
    endif
    set t7i = 0
    set i7i = xMi(xus(hgr(eDs(r7i)), "when calling getCustomPlayer in SpellIconWithGif, line 51"), "when calling getCHero in SpellIconWithGif, line 51")
    if not Jyr(mH, Aei(r7i), "when calling has in SpellIconWithGif, line 53") then
        set o7i = 1 * 1. / YH
        set c7i = Lct("when calling alloc_CallbackPeriodic_doPeriodically_SpellIconWithGif in SpellIconWithGif, line 54")
        call kVu(c7i)
        set esw[c7i] = r7i
        set qsw[c7i] = i7i
        set asw[c7i] = t7i
        set S7i = wcs(o7i, c7i, "when calling doPeriodically in SpellIconWithGif, line 54")
        call GVw(mH, Aei(r7i), S7i, "when calling put in SpellIconWithGif, line 75")
    endif
    set ASw = ASw - 1
endfunction
function uJu takes integer MHu, string wJu returns nothing
    set DSw[ASw] = wJu
    set ASw = ASw + 1
    if not gSr(luw[MHu], NP) then
        call lKs(luw[MHu], NP, $00000001)
    endif
    call O7i(luw[MHu], "when calling startGifAbilityAnimation in NoviceMaxLevel, line 71")
    set ASw = ASw - 1
endfunction
function uXt takes integer wXt returns nothing
    if Y0w[wXt] != null then
        call jXt(Y0w[wXt], true)
    endif
endfunction
function ubs takes integer Mls, string wbs returns nothing
    set DSw[ASw] = wbs
    set ASw = ASw + 1
    call dii(Iji("|cffffcc00Your chance to find rare items in Marine Fortress is still ", "when calling unObfuscate in DungeonCmds, line 713") + SUs(wps(ax, Y1[Mls], "when calling get in DungeonCmds, line 713") * 1. / 100, $00000000) + "%.|r", 8., G1[Mls])
    set ASw = ASw - 1
endfunction
function vDr takes integer xDr returns nothing
    call b9t(Diw[xDr])
endfunction
function vFi takes integer jFi, string xFi returns nothing
    set DSw[ASw] = xFi
    set ASw = ASw + 1
    call J7i(X4[jFi], om, Om)
    call k4t(Ng, C4[jFi], om, Om, "when calling lockAndPan in FateDestinyUnlocker, line 243")
    call O0s(C4[jFi], X4[jFi])
    call Kcs(V4[jFi], 750., "when calling setCameraZoomLevel in FateDestinyUnlocker, line 245")
    set ASw = ASw - 1
endfunction
function vGr takes integer kGr, string jGr returns integer
    local integer xGr
    set DSw[ASw] = jGr
    set ASw = ASw + 1
    set xGr = kgs(ym, pm, 10., y2[kGr] + mm, 10., p2[kGr], $000000FF, $000000FF, $000000FF, $00000000, e2[kGr], "when calling _CreateTTExEntityShift in FateDestinyUnlocker, line 269")
    set ASw = ASw - 1
    return xGr
endfunction
function vIu takes integer kIu, string jIu returns integer
    local integer xIu
    set DSw[ASw] = jIu
    set ASw = ASw + 1
    set xIu = kgs(om, Om, 10., q2[kIu] + ": " + Qm, 10., a2[kIu], $000000FF, $000000FF, $000000FF, $00000000, n2[kIu], "when calling _CreateTTExEntityShift in FateDestinyUnlocker, line 272")
    set ASw = ASw - 1
    return xIu
endfunction
function vRi takes integer kRi, string jRi returns integer
    local integer xRi
    set DSw[ASw] = jRi
    set ASw = ASw + 1
    set xRi = kgs(om, Om, 10., O2[kRi] + ": " + vm, 10., l2[kRi], $000000FF, $000000FF, $000000FF, $00000000, b2[kRi], "when calling _CreateTTExEntityShift in FateDestinyUnlocker, line 266")
    set ASw = ASw - 1
    return xRi
endfunction
function vTt takes integer FTt, string kTt returns nothing
    local integer jTt
    local integer xTt
    set DSw[ASw] = kTt
    set ASw = ASw + 1
    if Zcr(pSw[FTt]) then
        call eTu(Ng, eSw[FTt], "when calling free in Voidless_mechanics, line 752")
        set jTt = GgS(eSw[FTt], "when calling getCustomPlayer in Voidless_mechanics, line 753")
        if jTt != 0 then
            set xTt = xMi(jTt, "when calling getCHero in Voidless_mechanics, line 756")
            if xTt != 0 and hqs(xTt, "when calling getHero in Voidless_mechanics, line 757") != null then
    call krS(jTt, "when calling cameraCheckLock in Voidless_mechanics, line 758")
            endif
        endif
        call klS(YX, qSw[FTt], "when calling remove in Voidless_mechanics, line 760")
        call klS(TX, qSw[FTt], "when calling remove in Voidless_mechanics, line 761")
        call eys(RX, qSw[FTt], "when calling remove in Voidless_mechanics, line 762")
    endif
    set ASw = ASw - 1
endfunction
function viS takes integer jiS returns nothing
    local unit xiS = r7[jiS]
    call mhS(xiS, "channel")
    set xiS = null
endfunction
function wDr takes integer VAr, string BAr returns nothing
    local unit NAr
    local unit MAr
    set DSw[ASw] = BAr
    set ASw = ASw + 1
    set NAr = dps(aD[PLAYER_NEUTRAL_AGGRESSIVE], l2s(Iji("n02G", "when calling unObfuscate in Imp2, line 133"), "when calling fromRawCode in Imp2, line 133"), A8[VAr], D8[VAr], bj_UNIT_FACING)
    call Ggr(NAr)
    set MAr = NAr
    call v0r(MAr, true)
    set ASw = ASw - 1
    set NAr = null
    set MAr = null
endfunction
function wKu takes integer BJu, string NJu returns integer
    local integer MJu
    set DSw[ASw] = NJu
    set ASw = ASw + 1
    set MJu = kgs(ym, pm, 10., v2[BJu] + Im, 10., m2[BJu], $000000FF, $000000FF, $000000FF, $00000000, Q2[BJu], "when calling _CreateTTExEntityShift in FateDestinyUnlocker, line 287")
    set ASw = ASw - 1
    return MJu
endfunction
function wju takes integer Mku returns nothing
    set U9[y9[Mku]] = mXi(p9[Mku], "Abilities/Spells/Items/AIso/BIsvTarget.mdl", gF)
endfunction
function GIr takes string TIr returns integer
    local integer YIr
    set DSw[ASw] = TIr
    set ASw = ASw + 1
    if NX == 0 then
        if MX < 32768 then
            set MX = MX + 1
            set YIr = MX
            set wC[YIr] = 1059
        else
            call tNr("Out of memory: Could not create CallbackSingle_doAfter_doAfter_JobAdvancementQuestHandler.", "when calling error in JobAdvancementQuestHandler, line 490")
            set YIr = 0
        endif
    else
        set NX = NX - 1
        set YIr = BX[NX]
        set wC[YIr] = 1059
    endif
    set ASw = ASw - 1
    return YIr
endfunction
function Prt takes integer Ert, string Zrt, string Urt returns boolean
    local boolean Irt
    set DSw[ASw] = Urt
    set ASw = ASw + 1
    set Irt = false
    call TriggerSleepAction(1.)
    if TYt(wps(PI, wps(AI, Ert, "when calling get in JobAdvancementQuestHandler, line 467"), "when calling get in JobAdvancementQuestHandler, line 467")) then
        set Irt = true
    endif
    set ASw = ASw - 1
    return Irt
endfunction
function x6r takes integer h6r, string F6r returns nothing
    local integer k6r
    local real j6r
    set DSw[ASw] = F6r
    set ASw = ASw + 1
    if not Prt(uww_5077[h6r], rww_4772[h6r], "when calling isCommandHandled in JobAdvancementQuestHandler, line 480") then
        call GVw(OA, uww_5077[h6r], O_i(true), "when calling put in JobAdvancementQuestHandler, line 482")
        if not Jyr(nA, uww_5077[h6r], "when calling has in JobAdvancementQuestHandler, line 483") then
            call GVw(nA, uww_5077[h6r], $00000001, "when calling put in JobAdvancementQuestHandler, line 484")
        else
            call GVw(nA, uww_5077[h6r], wps(nA, uww_5077[h6r], "when calling get in JobAdvancementQuestHandler, line 486") + 1, "when calling put in JobAdvancementQuestHandler, line 486")
        endif
        if not GpS(aP, uww_5077[h6r], "when calling has in JobAdvancementQuestHandler, line 487") then
            call vwt(aP, uww_5077[h6r], "when calling add in JobAdvancementQuestHandler, line 488")
        endif
        set j6r = rP
        set k6r = GIr("when calling alloc_CallbackSingle_doAfter_doAfter_JobAdvancementQuestHandler in JobAdvancementQuestHandler, line 490")
        call RUs(k6r)
        set sww_4874[k6r] = uww_5077[h6r]
        call Ybr(j6r, k6r, "when calling doAfter in JobAdvancementQuestHandler, line 490")
    endif
    set ASw = ASw - 1
endfunction
function xGS takes integer kGS, string jGS returns nothing
    set DSw[ASw] = jGS
    set ASw = ASw + 1
    call dii(Iji("|cffffcc00Your chance to find rare items in Marine Fortress is now ", "when calling unObfuscate in DungeonCmds, line 710") + SUs(wps(ax, R1[kGS], "when calling get in DungeonCmds, line 710") * 1. / 100, $00000000) + "%.|r", 8., T1[kGS])
    set ASw = ASw - 1
endfunction
function JgS takes string DgS returns integer
    local integer HgS
    set DSw[ASw] = DgS
    set ASw = ASw + 1
    if NX == 0 then
        if MX < 32768 then
            set MX = MX + 1
            set HgS = MX
            set wC[HgS] = 946
        else
            call tNr("Out of memory: Could not create CallbackSingle_doAfter_SpawnNeutralUnits.", "when calling error in SpawnNeutralUnits, line 51")
            set HgS = 0
        endif
    else
        set NX = NX - 1
        set HgS = BX[NX]
        set wC[HgS] = 946
    endif
    set ASw = ASw - 1
    return HgS
endfunction
function dMu takes player qMu, string aMu returns group
    local group nMu
    set DSw[ASw] = aMu
    set ASw = ASw + 1
    call UOS($00000001, "when calling getGroup in PlayerUtils, line 143")
    set nMu = pIw
    call GroupEnumUnitsOfPlayer(nMu, qMu, null)
    set ASw = ASw - 1
    set uPw = nMu
    set nMu = null
    return uPw
endfunction
function Lut takes integer Put, integer Aut, integer Dut, integer Hut, integer Jut, string Kut returns nothing
    set DSw[ASw] = Kut
    set ASw = ASw + 1
    call vwt(CM[Put], Aut, "when calling add in CustomLinkedList, line 41")
    call vwt(CM[Put], Dut, "when calling add in CustomLinkedList, line 41")
    call vwt(CM[Put], Hut, "when calling add in CustomLinkedList, line 41")
    call vwt(CM[Put], Jut, "when calling add in CustomLinkedList, line 41")
    set ASw = ASw - 1
endfunction
function w3t takes integer XMt, integer CMt, integer VMt, integer BMt, integer NMt, string MMt returns nothing
    set DSw[ASw] = MMt
    set ASw = ASw + 1
    if sV[XMt] == 0 then
        if XMt == 0 then
            call tNr("Nullpointer exception when calling CustomLinkedList.add", "when calling error in CustomLinkedList, line 39")
        else
            call tNr("Called CustomLinkedList.add on invalid object.", "when calling error in CustomLinkedList, line 39")
        endif
    endif
    call Lut(XMt, CMt, VMt, BMt, NMt, "when calling add in CustomLinkedList, line 39")
    set ASw = ASw - 1
endfunction
function Mgr takes string Egr returns nothing
    local player Zgr
    local unit Ugr
    local unit Igr
    local unit Pgr
    local unit Agr
    local integer Dgr
    local integer Hgr
    local group Jgr
    local group Kgr
    local unit Lgr
    local group Xgr
    local unit Cgr
    local group Vgr
    local unit Bgr
    local integer Ngr
    set DSw[ASw] = Egr
    set ASw = ASw + 1
    set Zgr = aD[PLAYER_NEUTRAL_PASSIVE]
    set Ugr = CreateUnit(Zgr, KF, 3520.0, - 11264.0, 270.000)
    call Wwu(mXi(Ugr, "war3mapImported/SantaHat.mdx", GF), 2.)
    set tr = Ugr
    set Igr = CreateUnit(Zgr, XF, - 5603.5, 3817.9, 234.971)
    call Wwu(mXi(Igr, "war3mapImported/SantaHat.mdx", GF), 2.)
    set Pgr = CreateUnit(Zgr, LF, - 7680.0, 4992.0, 73.511)
    set Agr = CreateUnit(Zgr, CF, - 9984.0, - 8128.0, 270.000)
    set sr = KF
    set ct = LF
    set mS = XF
    set XS = CF
    set Hgr = SNi("when calling addCustomList in SpawnNeutralUnits, line 26")
    call w3t(Hgr, sr, ct, mS, XS, "when calling add in SpawnNeutralUnits, line 26")
    set Dgr = Hgr
    set Jgr = dMu(aD[Ch], "when calling getUnitsOfPlayerAll in SpawnNeutralUnits, line 29")
    set Kgr = XbS(Jgr)
    loop
        exitwhen not hJw(Kgr)
        set Lgr = tPr(Kgr)
        call SetUnitOwner(Lgr, Player(PLAYER_NEUTRAL_AGGRESSIVE), true)
    endloop
    call lxs(Kgr)
    call Sju(Jgr, "when calling release in SpawnNeutralUnits, line 32")
    set Jgr = dMu(aD[Vh], "when calling getUnitsOfPlayerAll in SpawnNeutralUnits, line 35")
    set Xgr = XbS(Jgr)
    loop
        exitwhen not hJw(Xgr)
        set Cgr = tPr(Xgr)
        if IsUnitType(Cgr, UNIT_TYPE_HERO) and(not CPw(Dgr, r5S(Cgr), "when calling has in SpawnNeutralUnits, line 37")) then
            call AddSpecialEffectTarget("Abilities/Spells/Other/TalkToMe/TalkToMe.mdl", Cgr, "overhead")
            call SetUnitInvulnerable(Cgr, true)
        endif
    endloop
    call lxs(Xgr)
    call Sju(Jgr, "when calling release in SpawnNeutralUnits, line 40")
    set Jgr = dMu(aD[PLAYER_NEUTRAL_PASSIVE], "when calling getUnitsOfPlayerAll in SpawnNeutralUnits, line 42")
    set Vgr = XbS(Jgr)
    loop
        exitwhen not hJw(Vgr)
        set Bgr = tPr(Vgr)
        if IsUnitType(Bgr, UNIT_TYPE_ANCIENT) and(not CPw(Dgr, r5S(Bgr), "when calling has in SpawnNeutralUnits, line 44")) then
            call AddSpecialEffectTarget("Abilities/Spells/Other/TalkToMe/TalkToMe.mdl", Bgr, "overhead")
            call SetUnitInvulnerable(Bgr, true)
        endif
    endloop
    call lxs(Vgr)
    call Sju(Jgr, "when calling release in SpawnNeutralUnits, line 47")
    call Zii(gFi(Dgr, "when calling getId in SpawnNeutralUnits, line 49"), "when calling removeCustomList in SpawnNeutralUnits, line 49")
    set Ngr = JgS("when calling alloc_CallbackSingle_doAfter_SpawnNeutralUnits in SpawnNeutralUnits, line 51")
    call RUs(Ngr)
    set lsw[Ngr] = Ugr
    set bsw[Ngr] = Pgr
    set ysw[Ngr] = Igr
    set psw[Ngr] = Agr
    call Ybr(1., Ngr, "when calling doAfter in SpawnNeutralUnits, line 51")
    set ASw = ASw - 1
    set Zgr = null
    set Ugr = null
    set Igr = null
    set Pgr = null
    set Agr = null
    set Jgr = null
    set Kgr = null
    set Lgr = null
    set Xgr = null
    set Cgr = null
    set Vgr = null
    set Bgr = null
endfunction
function xHu takes integer FHu, string kHu returns nothing
    local trigger jHu
    set DSw[ASw] = kHu
    set ASw = ASw + 1
    call Mgr("when calling createNeutralUnitsCustom in SpawnNeutralUnits, line 77")
    set jHu = CreateTrigger()
    call QYr(jHu, K2S(FO), null)
    call B2S(jHu, uIw)
    set ASw = ASw - 1
    set jHu = null
endfunction
function Jvs takes integer Hvs returns nothing
    call v5w(aD[Hvs], true)
endfunction
function Vjr takes player Cjr returns mapcontrol
    return GetPlayerController(Cjr)
endfunction
function wCw takes player MXw returns playerslotstate
    return GetPlayerSlotState(MXw)
endfunction
function qtu takes player etu returns boolean
    return wCw(etu) == PLAYER_SLOT_STATE_PLAYING and Vjr(etu) == MAP_CONTROL_USER
endfunction
function xPt takes integer hPt, string FPt returns nothing
    local integer kPt
    local integer jPt
    set DSw[ASw] = FPt
    set ASw = ASw + 1
    set kPt = 0
    set jPt = Lh
    loop
        exitwhen kPt > jPt
        if qtu(aD[kPt]) then
            call Jvs(kPt)
            call GVw(OA, kPt, O_i(false), "when calling put in EffectCleaner, line 214")
        endif
        set kPt = kPt + 1
    endloop
    set ASw = ASw - 1
endfunction
function xdi takes integer jdi returns nothing
    call dii("3", .8, eDs(X8[jdi]))
endfunction
function xhu takes integer jhu returns nothing
    call e5u(aww_2880[jhu], ANw(nww_4365[jhu]), XSw)
endfunction
function WXr takes string mXr returns integer
    local integer QXr
    set DSw[ASw] = mXr
    set ASw = ASw + 1
    if PC == 0 then
        if AC < 32768 then
            set AC = AC + 1
            set QXr = AC
            set DC[QXr] = 687
        else
            call tNr("Out of memory: Could not create CallbackPeriodic_doPeriodically_Imp4.", "when calling error in Imp4, line 829")
            set QXr = 0
        endif
    else
        set PC = PC - 1
        set QXr = IC[PC]
        set DC[QXr] = 687
    endif
    set ASw = ASw - 1
    return QXr
endfunction
function Diu takes unit Uiu, string Iiu returns nothing
    local integer Piu
    local integer Aiu
    set DSw[ASw] = Iiu
    set ASw = ASw + 1
    set Piu = 0
    set Aiu = WXr("when calling alloc_CallbackPeriodic_doPeriodically_Imp4 in Imp4, line 829")
    call kVu(Aiu)
    set d0w[Aiu] = Uiu
    set f0w[Aiu] = Piu
    call wcs(3., Aiu, "when calling doPeriodically in Imp4, line 829")
    set ASw = ASw - 1
endfunction
function Mit takes string Bit returns integer
    local integer Nit
    set DSw[ASw] = Bit
    set ASw = ASw + 1
    if PC == 0 then
        if AC < 32768 then
            set AC = AC + 1
            set Nit = AC
            set DC[Nit] = 715
        else
            call tNr("Out of memory: Could not create CallbackPeriodic_doPeriodically_doAfter_Imp4.", "when calling error in Imp4, line 280")
            set Nit = 0
        endif
    else
        set PC = PC - 1
        set Nit = IC[PC]
        set DC[Nit] = 715
    endif
    set ASw = ASw - 1
    return Nit
endfunction
function v9t takes string j9t returns integer
    local integer x9t
    set DSw[ASw] = j9t
    set ASw = ASw + 1
    if AB == 0 then
        if DB < 32768 then
            set DB = DB + 1
            set x9t = DB
            set HB[x9t] = 1180
        else
            call tNr("Out of memory: Could not create ForUnitOfTypeInAreaClosure_forUnitsInArea_doAfter_Imp4.", "when calling error in Imp4, line 265")
            set x9t = 0
        endif
    else
        set AB = AB - 1
        set x9t = PB[AB]
        set HB[x9t] = 1180
    endif
    set ASw = ASw - 1
    return x9t
endfunction
function xku takes integer hku, string Fku returns nothing
    local integer kku
    local integer jku
    set DSw[ASw] = Fku
    set ASw = ASw + 1
    set kku = v9t("when calling alloc_ForUnitOfTypeInAreaClosure_forUnitsInArea_doAfter_Imp4 in Imp4, line 265")
    call nEr(kku, "when calling forUnitsInArea in Imp4, line 265")
    call ForForce(Rc[BZ], OUw)
    call p5s(Rc[BZ], lUw)
    set uU = false
    call Diu(MZ, "when calling imp4BossesLifeCheck in Imp4, line 276")
    call Diu(wU, "when calling imp4BossesLifeCheck in Imp4, line 277")
    if MZ != null and yXu(MZ) then
        set jku = Mit("when calling alloc_CallbackPeriodic_doPeriodically_doAfter_Imp4 in Imp4, line 280")
        call kVu(jku)
        call wcs(10., jku, "when calling doPeriodically in Imp4, line 280")
    endif
    set ASw = ASw - 1
endfunction
function bps takes string Ops returns integer
    local integer lps
    set DSw[ASw] = Ops
    set ASw = ASw + 1
    if PC == 0 then
        if AC < 32768 then
            set AC = AC + 1
            set lps = AC
            set DC[lps] = 716
        else
            call tNr("Out of memory: Could not create CallbackPeriodic_doPeriodically_doAfter_Voidless_mechanics.", "when calling error in Voidless_mechanics, line 689")
            set lps = 0
        endif
    else
        set PC = PC - 1
        set lps = IC[PC]
        set DC[lps] = 716
    endif
    set ASw = ASw - 1
    return lps
endfunction
function xqS takes integer fqS, string RqS returns nothing
    local integer TqS
    local integer YqS
    local integer GqS
    local integer gqS
    local integer hqS
    local integer FqS
    local string kqS
    local real jqS
    set DSw[ASw] = RqS
    set ASw = ASw + 1
    if Zcr(Viw[fqS]) then
        set jqS = iF * 3.
        set TqS = bps("when calling alloc_CallbackPeriodic_doPeriodically_doAfter_Voidless_mechanics in Voidless_mechanics, line 689")
        call kVu(TqS)
        set tSw[TqS] = Viw[fqS]
        set iSw[TqS] = Biw[fqS]
        set SSw[TqS] = Niw[fqS]
        set cSw[TqS] = Miw[fqS]
        set oSw[TqS] = wSw[fqS]
        set OSw[TqS] = uSw[fqS]
        call wcs(jqS, TqS, "when calling doPeriodically in Voidless_mechanics, line 689")
        set YqS = GetRandomInt($00000001, $00000004)
        set GqS = GetRandomInt($00000001, $00000004)
        set gqS = GetRandomInt($00000001, $00000004)
        set hqS = GetRandomInt($00000001, $00000004)
        set FqS = GetRandomInt($00000001, $00000004)
        set kqS = fju(YqS) + fju(GqS) + fju(gqS) + fju(hqS) + fju(FqS)
        call GVw(TX, rSw[fqS], err(kqS, "when calling stringToIndex in Voidless_mechanics, line 711"), "when calling put in Voidless_mechanics, line 711")
        call GVw(YX, rSw[fqS], err("", "when calling stringToIndex in Voidless_mechanics, line 712"), "when calling put in Voidless_mechanics, line 712")
        call LYS(sSw[fqS], kqS, "when calling arrowGameShowHint in Voidless_mechanics, line 713")
    endif
    set ASw = ASw - 1
endfunction
function xur takes integer jur returns nothing
    call AddSpecialEffectTarget("Objects/RandomObject/RandomObject.mdl", lsw[jur], "overhead")
    call AddSpecialEffectTarget("Objects/RandomObject/RandomObject.mdl", bsw[jur], "overhead")
    call AddSpecialEffectTarget("Objects/RandomObject/RandomObject.mdl", ysw[jur], "overhead")
    call AddSpecialEffectTarget("Objects/RandomObject/RandomObject.mdl", psw[jur], "overhead")
endfunction
function y5r takes integer o5r, string O5r returns nothing
    local integer l5r
    local integer b5r
    set DSw[ASw] = O5r
    set ASw = ASw + 1
    set l5r = c5r(gQ, "when calling iterator in VertexCalculator, line 104")
    loop
        exitwhen not Tji(l5r)
        set b5r = LXi(l5r)
        call GameOverDialogBJ(aD[b5r], false)
    endloop
    call vms(l5r, "when calling close in VertexCalculator, line 104")
    set ASw = ASw - 1
endfunction
function y9r takes integer l9r, string b9r returns nothing
    set DSw[ASw] = b9r
    set ASw = ASw + 1
    call eys(sX, Aei(miw[l9r]), "when calling remove in Voidless_mechanics, line 435")
    set ASw = ASw - 1
endfunction
function yAu takes integer OAu, string lAu returns nothing
    local effect bAu
    set DSw[ASw] = lAu
    set ASw = ASw + 1
    set bAu = vht("war3mapImported\\Lightnings.mdl", CKu(q9[OAu]), Ccw)
    call yYi(bAu, 5., "when calling destrAdvTimed in Imp3DragonFortress, line 1025")
    set ASw = ASw - 1
    set bAu = null
endfunction
function yLu takes integer lLu, string bLu returns nothing
    set DSw[ASw] = bLu
    set ASw = ASw + 1
    call h9s(tsw[lLu], "when calling checkVoidlessMaxReachableStage in RuneMaster_Metamorphs, line 70")
    set ASw = ASw - 1
endfunction
function yXw takes integer SXw returns nothing
    local string cXw
    local string oXw
    local integer OXw
    local string lXw
    local string bXw
    if JHt(fsw[SXw], true) * 2. * Rsw[SXw] > pw then
        set oXw = fju(pw)
    else
        set oXw = fju(P3w(JHt(fsw[SXw], true) * 2. * Rsw[SXw]))
    endif
    set cXw = oXw
    set OXw = vQt(cXw)
    if OXw > 3 then
        set lXw = CAw(cXw, $00000000, OXw - 3) + "," + Mes(cXw, OXw - 3)
    else
        set lXw = cXw
    endif
    set cXw = lXw
    set bXw = xpr(AH, "<Damage>", SF + cXw + eF)
    call Zmt(fsw[SXw], rj, Rsw[SXw], "", bXw, "")
endfunction
function dpS takes string apS returns integer
    local integer npS
    set DSw[ASw] = apS
    set ASw = ASw + 1
    if OV == 0 then
        if lV < 32768 then
            set lV = lV + 1
            set npS = lV
            set bV[npS] = 1119
        else
            call tNr("Out of memory: Could not create CustomPlayer.", "when calling error in CustomPlayer, line 29")
            set npS = 0
        endif
    else
        set OV = OV - 1
        set npS = oV[OV]
        set bV[npS] = 1119
    endif
    set ASw = ASw - 1
    return npS
endfunction
function RDt takes string dDt returns integer
    local integer fDt
    set DSw[ASw] = dDt
    set ASw = ASw + 1
    if BC == 0 then
        if NC < 32768 then
            set NC = NC + 1
            set fDt = NC
            set MC[fDt] = 1113
        else
            call tNr("Out of memory: Could not create CustomHero.", "when calling error in CustomHero, line 13")
            set fDt = 0
        endif
    else
        set BC = BC - 1
        set fDt = VC[BC]
        set MC[fDt] = 1113
    endif
    set ASw = ASw - 1
    return fDt
endfunction
function HcS takes integer AcS, string DcS returns nothing
    set DSw[ASw] = DcS
    set ASw = ASw + 1
    set vM[AcS] =- 1
    set mM[AcS] = null
    set QM[AcS] = 0
    set WM[AcS] = null
    set EM[AcS] = SNi("when calling addCustomList in CustomHero, line 21")
    set ZM[AcS] = 0
    set UM[AcS] = 0
    set IM[AcS] = 0
    set PM[AcS] = null
    set AM[AcS] = XQt("when calling new_LinkedList in CustomHero, line 42")
    set HM[AcS] =- 1
    set JM[AcS] = false
    set ASw = ASw - 1
endfunction
function VYS takes integer XYS, string CYS returns nothing
    set DSw[ASw] = CYS
    set ASw = ASw + 1
    call HcS(XYS, "when calling CustomHero_init in CustomHero, line 51")
    set PF = PF + 1
    set ASw = ASw - 1
endfunction
function Isi takes string Zsi returns integer
    local integer Usi
    set DSw[ASw] = Zsi
    set ASw = ASw + 1
    set Usi = RDt("when calling alloc_CustomHero in CustomHero, line 51")
    call VYS(Usi, "when calling construct_CustomHero in CustomHero, line 51")
    set ASw = ASw - 1
    return Usi
endfunction
function KCw takes integer HCw, string JCw returns nothing
    set DSw[ASw] = JCw
    set ASw = ASw + 1
    set w3[HCw] = Isi("when calling new_CustomHero in CustomPlayer, line 31")
    set u3[HCw] = Xh
    set r3[HCw] = false
    set s3[HCw] = false
    set t3[HCw] = 0
    set ASw = ASw - 1
endfunction
function V7s takes string X7s returns integer
    local integer C7s
    set DSw[ASw] = X7s
    set ASw = ASw + 1
    if PC == 0 then
        if AC < 32768 then
            set AC = AC + 1
            set C7s = AC
            set DC[C7s] = 675
        else
            call tNr("Out of memory: Could not create CallbackPeriodic_doPeriodically_CustomPlayer_CustomPlayer.", "when calling error in CustomPlayer, line 63")
            set C7s = 0
        endif
    else
        set PC = PC - 1
        set C7s = IC[PC]
        set DC[C7s] = 675
    endif
    set ASw = ASw - 1
    return C7s
endfunction
function sfi takes integer Ndi, player Mdi, integer wfi, string ufi returns nothing
    local integer rfi
    set DSw[ASw] = ufi
    set ASw = ASw + 1
    call KCw(Ndi, "when calling CustomPlayer_init in CustomPlayer, line 59")
    set MM[Ndi] = Mdi
    set rfi = V7s("when calling alloc_CallbackPeriodic_doPeriodically_CustomPlayer_CustomPlayer in CustomPlayer, line 63")
    call kVu(rfi)
    set i3[rfi] = Ndi
    call wcs(.1, rfi, "when calling doPeriodically in CustomPlayer, line 63")
    set ASw = ASw - 1
endfunction
function Dpu takes player Upu, integer Ipu, string Ppu returns integer
    local integer Apu
    set DSw[ASw] = Ppu
    set ASw = ASw + 1
    set Apu = dpS("when calling alloc_CustomPlayer in CustomPlayer, line 59")
    call sfi(Apu, Upu, Ipu, "when calling construct_CustomPlayer in CustomPlayer, line 59")
    set ASw = ASw - 1
    return Apu
endfunction
function Kvi takes player Avi, integer Dvi, string Hvi returns integer
    local integer Jvi
    set DSw[ASw] = Hvi
    set ASw = ASw + 1
    set Jvi = Dpu(Avi, Dvi, "when calling new_CustomPlayer in PlayerRegistry, line 22")
    call GVw(qD, hgr(Avi), Jvi, "when calling put in PlayerRegistry, line 23")
    set ASw = ASw - 1
    return Jvi
endfunction
function ybu takes integer ibu, string Sbu returns nothing
    local trigger cbu
    local trigger obu
    local integer Obu
    local integer lbu
    local player bbu
    set DSw[ASw] = Sbu
    set ASw = ASw + 1
    set obu = CreateTrigger()
    call B2S(obu, GZw)
    set cbu = obu
    set Obu = 0
    set lbu = Lh
    loop
        exitwhen Obu > lbu
        set bbu = aD[Obu]
        if qtu(bbu) then
            call vwt(gQ, Obu, "when calling add in EffectCleaner, line 198")
            call I3i(bbu, $00000001)
            call Kvi(bbu, $00000000, "when calling addPlayer in EffectCleaner, line 200")
            call O0s(bbu, tF)
            call WtS(cbu, bbu, EVENT_PLAYER_LEAVE)
            call SetPlayerHandicap(bbu, 1.0)
            call SetPlayerHandicapXP(bbu, 1.0)
            call SetPlayerHandicapReviveTime(bbu, 1.0)
            call SetPlayerHandicapDamage(bbu, 1.0)
        endif
        set Obu = Obu + 1
    endloop
    set ASw = ASw - 1
    set cbu = null
    set obu = null
    set bbu = null
endfunction
function ydr takes integer ldr, string bdr returns nothing
    set DSw[ASw] = bdr
    set ASw = ASw + 1
    call krS(xrw[ldr], "when calling cameraCheckLock in RespawnHeroesEnterReg, line 69")
    set ASw = ASw - 1
endfunction
function BOt takes item KOt, integer LOt, integer XOt, string COt returns integer
    local integer VOt
    set DSw[ASw] = COt
    set ASw = ASw + 1
    if Jyr(C_r(RI, XOt, "when calling get in Items_Pickup_Drop, line 716"), Xdu(KOt), "when calling has in Items_Pickup_Drop, line 716") and wps(C_r(RI, XOt, "when calling get in Items_Pickup_Drop, line 716"), Xdu(KOt), "when calling get in Items_Pickup_Drop, line 716") + LOt >= 0 then
        call GVw(C_r(RI, XOt, "when calling get in Items_Pickup_Drop, line 717"), Xdu(KOt), wps(C_r(RI, XOt, "when calling get in Items_Pickup_Drop, line 717"), Xdu(KOt), "when calling get in Items_Pickup_Drop, line 717") + LOt, "when calling put in Items_Pickup_Drop, line 717")
    elseif LOt > 0 then
        call GVw(C_r(RI, XOt, "when calling get in Items_Pickup_Drop, line 719"), Xdu(KOt), LOt, "when calling put in Items_Pickup_Drop, line 719")
    else
        call GVw(C_r(RI, XOt, "when calling get in Items_Pickup_Drop, line 721"), Xdu(KOt), $00000000, "when calling put in Items_Pickup_Drop, line 721")
    endif
    set VOt = wps(C_r(RI, XOt, "when calling get in Items_Pickup_Drop, line 723"), Xdu(KOt), "when calling get in Items_Pickup_Drop, line 723")
    set ASw = ASw - 1
    return VOt
endfunction
function GyS takes integer nyS, integer dyS, integer fyS, boolean RyS, string TyS returns integer
    local integer YyS
    set DSw[ASw] = TyS
    set ASw = ASw + 1
    if RyS then
        call GVw(C_r(TI, nyS, "when calling get in Items_Pickup_Drop, line 748"), dyS, wps(C_r(TI, nyS, "when calling get in Items_Pickup_Drop, line 748"), dyS, "when calling get in Items_Pickup_Drop, line 748") + fyS, "when calling put in Items_Pickup_Drop, line 748")
    else
        call GVw(C_r(TI, nyS, "when calling get in Items_Pickup_Drop, line 750"), dyS, fyS, "when calling put in Items_Pickup_Drop, line 750")
    endif
    if wps(C_r(TI, nyS, "when calling get in Items_Pickup_Drop, line 752"), dyS, "when calling get in Items_Pickup_Drop, line 752") > 0 then
        call GVw(C_r(TI, nyS, "when calling get in Items_Pickup_Drop, line 754"), dyS, $00000000, "when calling put in Items_Pickup_Drop, line 754")
    endif
    set YyS = wps(C_r(TI, nyS, "when calling get in Items_Pickup_Drop, line 757"), dyS, "when calling get in Items_Pickup_Drop, line 757")
    set ASw = ASw - 1
    return YyS
endfunction
function ypr takes integer lpr, string bpr returns nothing
    set DSw[ASw] = bpr
    set ASw = ASw + 1
    if ((not D0w[lpr])and SMr(H0w[lpr], J0w[lpr]))or brs(K0w[lpr]) != L0w[lpr] and L0w[lpr] != 1 then
        set X0w[lpr] = C0w[lpr]
        if K0w[lpr] == J0w[lpr]then
            set C0w[lpr] = 0
        endif
    elseif uwr(H0w[lpr], V0w[lpr]) == null then
        set X0w[lpr] = C0w[lpr] *- 1
        set C0w[lpr] = 0
    endif
    call GyS(B0w[lpr], V0w[lpr], X0w[lpr], true, "when calling addChargesDropped in Items_Pickup_Drop, line 672")
    call BOt(K0w[lpr], C0w[lpr], B0w[lpr], "when calling addChargesVirtual in Items_Pickup_Drop, line 673")
    call IOt(K0w[lpr], N0w[lpr], true)
    set ASw = ASw - 1
endfunction
function T6t takes integer f6t, string R6t returns nothing
    set DSw[ASw] = R6t
    set ASw = ASw + 1
    if wC[f6t] == 0 then
        if f6t == 0 then
            call tNr("Nullpointer exception when calling CallbackSingle.call", "when calling error in ClosureTimers, line 109")
        else
            call tNr("Called CallbackSingle.call on invalid object.", "when calling error in ClosureTimers, line 109")
        endif
    endif
    if wC[f6t] <= 913 then
        if wC[f6t] <= 816 then
            if wC[f6t] <= 767 then
    if wC[f6t] <= 743 then
                    if wC[f6t] <= 731 then
                        if wC[f6t] <= 725 then
                            if wC[f6t] <= 722 then
                                if wC[f6t] <= 720 then
                                    if wC[f6t] <= 719 then
                                        call nwS(f6t, "when calling call_doAfter_Archsage_WhiteWhizard_ArcaneManaBond in ClosureTimers, line 109")
                                    else
                                        call dtS(f6t, "when calling call_doAfter_Archsage_WhiteWhizard_ArcaneManaBond in ClosureTimers, line 109")
                                    endif
                                elseif wC[f6t] <= 721 then
                                    call Vbr(f6t, "when calling call_doAfter_Archsage_WhiteWhizard_ArcaneManaBond in ClosureTimers, line 109")
                                else
                                    call F6t(f6t)
                                endif
                            elseif wC[f6t] <= 724 then
                                if wC[f6t] <= 723 then
                                    call Kdu(f6t)
                                else
                                    call d6i(f6t)
                                endif
                            else
                                call hJt(f6t)
                            endif
                        elseif wC[f6t] <= 728 then
                            if wC[f6t] <= 727 then
                                if wC[f6t] <= 726 then
                                    call f_S(f6t)
                                else
                                    call Uer(f6t)
                                endif
                            else
                                call itu(f6t, "when calling call_doAfter_Configuration in ClosureTimers, line 109")
                            endif
                        elseif wC[f6t] <= 730 then
                            if wC[f6t] <= 729 then
                                call DVw(f6t, "when calling call_doAfter_Critters in ClosureTimers, line 109")
                            else
                                call N8t(f6t, "when calling call_doAfter_Critters in ClosureTimers, line 109")
                            endif
                        else
                            call Kgt(f6t, "when calling call_doAfter_Critters in ClosureTimers, line 109")
                        endif
                    elseif wC[f6t] <= 737 then
                        if wC[f6t] <= 734 then
                            if wC[f6t] <= 733 then
                                if wC[f6t] <= 732 then
                                    call YeS(f6t)
                                else
                                    call UCu(f6t, "when calling call_doAfter_DDS in ClosureTimers, line 109")
                                endif
                            else
                                call YSi(f6t, "when calling call_doAfter_Dat_UltiIllusions in ClosureTimers, line 109")
                            endif
                        elseif wC[f6t] <= 736 then
                            if wC[f6t] <= 735 then
                                call f1r(f6t, "when calling call_doAfter_DummyCaster_DummyCaster in ClosureTimers, line 109")
                            else
                                call RTS(f6t)
                            endif
                        else
                            call MYr(f6t)
                        endif
                    elseif wC[f6t] <= 740 then
                        if wC[f6t] <= 739 then
                            if wC[f6t] <= 738 then
                                call kSi(f6t, "when calling call_doAfter_DungeonCmds in ClosureTimers, line 109")
                            else
                                call fWu(f6t)
                            endif
                        else
                            call sxr(f6t)
                        endif
                    elseif wC[f6t] <= 742 then
                        if wC[f6t] <= 741 then
                            call W_u(f6t)
                        else
                            call rSr(f6t, "when calling call_doAfter_DungeonCmds in ClosureTimers, line 109")
                        endif
                    else
                        call n6S(f6t, "when calling call_doAfter_DungeonCmds in ClosureTimers, line 109")
                    endif
    elseif wC[f6t] <= 755 then
                    if wC[f6t] <= 749 then
                        if wC[f6t] <= 746 then
                            if wC[f6t] <= 745 then
                                if wC[f6t] <= 744 then
                                    call eAr(f6t, "when calling call_doAfter_DungeonCmds in ClosureTimers, line 109")
                                else
                                    call CHs(f6t, "when calling call_doAfter_DungeonCmds in ClosureTimers, line 109")
                                endif
                            else
                                call fVr(f6t, "when calling call_doAfter_DungeonCmds in ClosureTimers, line 109")
                            endif
                        elseif wC[f6t] <= 748 then
                            if wC[f6t] <= 747 then
                                call Avs(f6t, "when calling call_doAfter_DungeonCmds in ClosureTimers, line 109")
                            else
                                call qwi(f6t, "when calling call_doAfter_DungeonCmds in ClosureTimers, line 109")
                            endif
                        else
                            call ZBr(f6t, "when calling call_doAfter_DungeonCmds in ClosureTimers, line 109")
                        endif
                    elseif wC[f6t] <= 752 then
                        if wC[f6t] <= 751 then
                            if wC[f6t] <= 750 then
                                call PCi(f6t, "when calling call_doAfter_DungeonCmds in ClosureTimers, line 109")
                            else
                                call Vot(f6t, "when calling call_doAfter_DungeonCmds in ClosureTimers, line 109")
                            endif
                        else
                            call n0s(f6t, "when calling call_doAfter_DungeonCmds in ClosureTimers, line 109")
                        endif
                    elseif wC[f6t] <= 754 then
                        if wC[f6t] <= 753 then
                            call xGS(f6t, "when calling call_doAfter_DungeonCmds in ClosureTimers, line 109")
                        else
                            call ubs(f6t, "when calling call_doAfter_DungeonCmds in ClosureTimers, line 109")
                        endif
                    else
                        call ZSr(f6t, "when calling call_doAfter_DungeonCmds in ClosureTimers, line 109")
                    endif
    elseif wC[f6t] <= 761 then
                    if wC[f6t] <= 758 then
                        if wC[f6t] <= 757 then
                            if wC[f6t] <= 756 then
                                call m9u(f6t)
                            else
                                call MWs(f6t, "when calling call_doAfter_DungeonCmds in ClosureTimers, line 109")
                            endif
                        else
                            call jJw(f6t, "when calling call_doAfter_EffectCleaner in ClosureTimers, line 109")
                        endif
                    elseif wC[f6t] <= 760 then
                        if wC[f6t] <= 759 then
                            call qNw(f6t, "when calling call_doAfter_EffectCleaner in ClosureTimers, line 109")
                        else
                            call jKr(f6t, "when calling call_doAfter_EffectCleaner in ClosureTimers, line 109")
                        endif
                    else
                        call AkS(f6t)
                    endif
    elseif wC[f6t] <= 764 then
                    if wC[f6t] <= 763 then
                        if wC[f6t] <= 762 then
                            call L2r(f6t)
                        else
                            call Rwt(f6t)
                        endif
                    else
                        call WLu(f6t)
                    endif
    elseif wC[f6t] <= 766 then
                    if wC[f6t] <= 765 then
                        call S9S(f6t)
                    else
                        call rEs(f6t)
                    endif
    else
                    call ybu(f6t, "when calling call_doAfter_EffectCleaner in ClosureTimers, line 109")
    endif
            elseif wC[f6t] <= 792 then
    if wC[f6t] <= 780 then
                    if wC[f6t] <= 774 then
                        if wC[f6t] <= 771 then
                            if wC[f6t] <= 769 then
                                if wC[f6t] <= 768 then
                                    call xPt(f6t, "when calling call_doAfter_EffectCleaner in ClosureTimers, line 109")
                                else
                                    call KoS(f6t, "when calling call_doAfter_EffectCleaner in ClosureTimers, line 109")
                                endif
                            elseif wC[f6t] <= 770 then
                                call Y4w(f6t, "when calling call_doAfter_EnumItemsInRect_doPeriodically_JobAdvancementQuestHandler in ClosureTimers, line 109")
                            else
                                call Tys(f6t, "when calling call_doAfter_FText_FText in ClosureTimers, line 109")
                            endif
                        elseif wC[f6t] <= 773 then
                            if wC[f6t] <= 772 then
                                call e2w(f6t, "when calling call_doAfter_Faith_Effect in ClosureTimers, line 109")
                            else
                                call lli(f6t, "when calling call_doAfter_FateDestinyUnlocker in ClosureTimers, line 109")
                            endif
                        else
                            call Lyu(f6t, "when calling call_doAfter_FateDestinyUnlocker in ClosureTimers, line 109")
                        endif
                    elseif wC[f6t] <= 777 then
                        if wC[f6t] <= 776 then
                            if wC[f6t] <= 775 then
                                call POu(f6t, "when calling call_doAfter_FateDestinyUnlocker in ClosureTimers, line 109")
                            else
                                call vFi(f6t, "when calling call_doAfter_FateDestinyUnlocker in ClosureTimers, line 109")
                            endif
                        else
                            call Xju(f6t, "when calling call_doAfter_FateDestinyUnlocker in ClosureTimers, line 109")
                        endif
                    elseif wC[f6t] <= 779 then
                        if wC[f6t] <= 778 then
                            call q_i(f6t, "when calling call_doAfter_FateDestinyUnlocker in ClosureTimers, line 109")
                        else
                            call VCs(f6t, "when calling call_doAfter_FateDestinyUnlocker in ClosureTimers, line 109")
                        endif
                    else
                        call fRu(f6t, "when calling call_doAfter_FateDestinyUnlocker in ClosureTimers, line 109")
                    endif
    elseif wC[f6t] <= 786 then
                    if wC[f6t] <= 783 then
                        if wC[f6t] <= 782 then
                            if wC[f6t] <= 781 then
                                call vRi(f6t, "when calling call_doAfter_FateDestinyUnlocker in ClosureTimers, line 109")
                            else
                                call vGr(f6t, "when calling call_doAfter_FateDestinyUnlocker in ClosureTimers, line 109")
                            endif
                        else
                            call vIu(f6t, "when calling call_doAfter_FateDestinyUnlocker in ClosureTimers, line 109")
                        endif
                    elseif wC[f6t] <= 785 then
                        if wC[f6t] <= 784 then
                            call kLt(f6t, "when calling call_doAfter_FateDestinyUnlocker in ClosureTimers, line 109")
                        else
                            call m_i(f6t, "when calling call_doAfter_FateDestinyUnlocker in ClosureTimers, line 109")
                        endif
                    else
                        call lFr(f6t, "when calling call_doAfter_FateDestinyUnlocker in ClosureTimers, line 109")
                    endif
    elseif wC[f6t] <= 789 then
                    if wC[f6t] <= 788 then
                        if wC[f6t] <= 787 then
                            call mlS(f6t, "when calling call_doAfter_FateDestinyUnlocker in ClosureTimers, line 109")
                        else
                            call wKu(f6t, "when calling call_doAfter_FateDestinyUnlocker in ClosureTimers, line 109")
                        endif
                    else
                        call a4r(f6t, "when calling call_doAfter_FateDestinyUnlocker in ClosureTimers, line 109")
                    endif
    elseif wC[f6t] <= 791 then
                    if wC[f6t] <= 790 then
                        call pTt(f6t, "when calling call_doAfter_FateDestinyUnlocker in ClosureTimers, line 109")
                    else
                        call ceS(f6t)
                    endif
    else
                    call scr(f6t)
    endif
            elseif wC[f6t] <= 804 then
    if wC[f6t] <= 798 then
                    if wC[f6t] <= 795 then
                        if wC[f6t] <= 794 then
                            if wC[f6t] <= 793 then
                                call cFs(f6t, "when calling call_doAfter_FateDestinyUnlocker in ClosureTimers, line 109")
                            else
                                call hii(f6t)
                            endif
                        else
                            call tvi(f6t)
                        endif
                    elseif wC[f6t] <= 797 then
                        if wC[f6t] <= 796 then
                            call C6r(f6t)
                        else
                            call Smi(f6t)
                        endif
                    else
                        call Fps(f6t)
                    endif
    elseif wC[f6t] <= 801 then
                    if wC[f6t] <= 800 then
                        if wC[f6t] <= 799 then
                            call N1i(f6t, "when calling call_doAfter_FateDestinyUnlocker in ClosureTimers, line 109")
                        else
                            call f_t(f6t)
                        endif
                    else
                        call SMw(f6t)
                    endif
    elseif wC[f6t] <= 803 then
                    if wC[f6t] <= 802 then
                        call tbt(f6t)
                    else
                        call nBs(f6t)
                    endif
    else
                    call VJt(f6t, "when calling call_doAfter_FateDestinyUnlocker in ClosureTimers, line 109")
    endif
            elseif wC[f6t] <= 810 then
    if wC[f6t] <= 807 then
                    if wC[f6t] <= 806 then
                        if wC[f6t] <= 805 then
                            call lEi(f6t)
                        else
                            call rAu(f6t)
                        endif
                    else
                        call eFr(f6t)
                    endif
    elseif wC[f6t] <= 809 then
                    if wC[f6t] <= 808 then
                        call RCs(f6t, "when calling call_doAfter_FateDestinyUnlocker in ClosureTimers, line 109")
                    else
                        call Sii(f6t, "when calling call_doAfter_FateDestinyUnlocker in ClosureTimers, line 109")
                    endif
    else
                    call viS(f6t)
    endif
            elseif wC[f6t] <= 813 then
    if wC[f6t] <= 812 then
                    if wC[f6t] <= 811 then
                        call uGs(f6t, "when calling call_doAfter_FateDestinyUnlocker in ClosureTimers, line 109")
                    else
                        call Wqu(f6t)
                    endif
    else
                    call jCr(f6t, "when calling call_doAfter_FateDestinyUnlocker in ClosureTimers, line 109")
    endif
            elseif wC[f6t] <= 815 then
    if wC[f6t] <= 814 then
                    call DYs(f6t)
    else
                    call cAr(f6t, "when calling call_doAfter_FateDestinyUnlocker in ClosureTimers, line 109")
    endif
            else
    call JSr(f6t, "when calling call_doAfter_FateDestinyUnlocker in ClosureTimers, line 109")
            endif
        elseif wC[f6t] <= 865 then
            if wC[f6t] <= 841 then
    if wC[f6t] <= 829 then
                    if wC[f6t] <= 823 then
                        if wC[f6t] <= 820 then
                            if wC[f6t] <= 818 then
                                if wC[f6t] <= 817 then
                                    call rXr(f6t, "when calling call_doAfter_Fate_Effect in ClosureTimers, line 109")
                                else
                                    call GXw(f6t, "when calling call_doAfter_Fate_Effect in ClosureTimers, line 109")
                                endif
                            elseif wC[f6t] <= 819 then
                                call Dni(f6t, "when calling call_doAfter_Fishing in ClosureTimers, line 109")
                            else
                                call O7S(f6t)
                            endif
                        elseif wC[f6t] <= 822 then
                            if wC[f6t] <= 821 then
                                call Uei(f6t)
                            else
                                call Uwi(f6t, "when calling call_doAfter_GenericUnitRespawn in ClosureTimers, line 109")
                            endif
                        else
                            call lnS(f6t, "when calling call_doAfter_HeroRevive in ClosureTimers, line 109")
                        endif
                    elseif wC[f6t] <= 826 then
                        if wC[f6t] <= 825 then
                            if wC[f6t] <= 824 then
                                call edS(f6t, "when calling call_doAfter_HeroRevive in ClosureTimers, line 109")
                            else
                                call UJt(f6t, "when calling call_doAfter_HeroRevive in ClosureTimers, line 109")
                            endif
                        else
                            call LKu(f6t, "when calling call_doAfter_HeroXP_Reduction in ClosureTimers, line 109")
                        endif
                    elseif wC[f6t] <= 828 then
                        if wC[f6t] <= 827 then
                            call OIs(f6t, "when calling call_doAfter_Hiero_Resurrection in ClosureTimers, line 109")
                        else
                            call kFS(f6t, "when calling call_doAfter_Hiero_Resurrection in ClosureTimers, line 109")
                        endif
                    else
                        call HZu(f6t, "when calling call_doAfter_Hiero_Resurrection in ClosureTimers, line 109")
                    endif
    elseif wC[f6t] <= 835 then
                    if wC[f6t] <= 832 then
                        if wC[f6t] <= 831 then
                            if wC[f6t] <= 830 then
                                call nEu(f6t)
                            else
                                call M4s(f6t)
                            endif
                        else
                            call ahS(f6t, "when calling call_doAfter_Imp1_InitCooldown in ClosureTimers, line 109")
                        endif
                    elseif wC[f6t] <= 834 then
                        if wC[f6t] <= 833 then
                            call cSt(f6t)
                        else
                            call Bkr(f6t, "when calling call_doAfter_Imp2 in ClosureTimers, line 109")
                        endif
                    else
                        call oer(f6t, "when calling call_doAfter_Imp2 in ClosureTimers, line 109")
                    endif
    elseif wC[f6t] <= 838 then
                    if wC[f6t] <= 837 then
                        if wC[f6t] <= 836 then
                            call dpi(f6t, "when calling call_doAfter_Imp2 in ClosureTimers, line 109")
                        else
                            call K0r(f6t, "when calling call_doAfter_Imp2 in ClosureTimers, line 109")
                        endif
                    else
                        call k9i(f6t, "when calling call_doAfter_Imp2 in ClosureTimers, line 109")
                    endif
    elseif wC[f6t] <= 840 then
                    if wC[f6t] <= 839 then
                        call wDr(f6t, "when calling call_doAfter_Imp2 in ClosureTimers, line 109")
                    else
                        call e3r(f6t, "when calling call_doAfter_Imp2 in ClosureTimers, line 109")
                    endif
    else
                    call oYr(f6t, "when calling call_doAfter_Imp2 in ClosureTimers, line 109")
    endif
            elseif wC[f6t] <= 853 then
    if wC[f6t] <= 847 then
                    if wC[f6t] <= 844 then
                        if wC[f6t] <= 843 then
                            if wC[f6t] <= 842 then
                                call xdi(f6t)
                            else
                                call sFt(f6t)
                            endif
                        else
                            call Rwr(f6t)
                        endif
                    elseif wC[f6t] <= 846 then
                        if wC[f6t] <= 845 then
                            call r2u(f6t)
                        else
                            call K8s(f6t)
                        endif
                    else
                        call nJw(f6t)
                    endif
    elseif wC[f6t] <= 850 then
                    if wC[f6t] <= 849 then
                        if wC[f6t] <= 848 then
                            call k_i(f6t, "when calling call_doAfter_Imp2 in ClosureTimers, line 109")
                        else
                            call TNs(f6t, "when calling call_doAfter_Imp3DragonFortress in ClosureTimers, line 109")
                        endif
                    else
                        call i2u(f6t, "when calling call_doAfter_Imp3DragonFortress in ClosureTimers, line 109")
                    endif
    elseif wC[f6t] <= 852 then
                    if wC[f6t] <= 851 then
                        call wju(f6t)
                    else
                        call fNw(f6t)
                    endif
    else
                    call VWu(f6t, "when calling call_doAfter_Imp3DragonFortress in ClosureTimers, line 109")
    endif
            elseif wC[f6t] <= 859 then
    if wC[f6t] <= 856 then
                    if wC[f6t] <= 855 then
                        if wC[f6t] <= 854 then
                            call jJt(f6t, "when calling call_doAfter_Imp3DragonFortress in ClosureTimers, line 109")
                        else
                            call yAu(f6t, "when calling call_doAfter_Imp3DragonFortress in ClosureTimers, line 109")
                        endif
                    else
                        call Wlr(f6t, "when calling call_doAfter_Imp3DragonFortress in ClosureTimers, line 109")
                    endif
    elseif wC[f6t] <= 858 then
                    if wC[f6t] <= 857 then
                        call GJt(f6t, "when calling call_doAfter_Imp3DragonFortress in ClosureTimers, line 109")
                    else
                        call tXw(f6t, "when calling call_doAfter_Imp3DragonFortress in ClosureTimers, line 109")
                    endif
    else
                    call S9u(f6t, "when calling call_doAfter_Imp3DragonFortress in ClosureTimers, line 109")
    endif
            elseif wC[f6t] <= 862 then
    if wC[f6t] <= 861 then
                    if wC[f6t] <= 860 then
                        call LQs(f6t, "when calling call_doAfter_Imp3DragonFortress in ClosureTimers, line 109")
                    else
                        call AAr(f6t)
                    endif
    else
                    call m7u(f6t)
    endif
            elseif wC[f6t] <= 864 then
    if wC[f6t] <= 863 then
                    call gQs(f6t, "when calling call_doAfter_Imp3DragonFortress in ClosureTimers, line 109")
    else
                    call Nst(f6t)
    endif
            else
    call V6t(f6t, "when calling call_doAfter_Imp3DragonFortress in ClosureTimers, line 109")
            endif
        elseif wC[f6t] <= 889 then
            if wC[f6t] <= 877 then
    if wC[f6t] <= 871 then
                    if wC[f6t] <= 868 then
                        if wC[f6t] <= 867 then
                            if wC[f6t] <= 866 then
                                call bSr(f6t, "when calling call_doAfter_Imp3DragonFortress in ClosureTimers, line 109")
                            else
                                call l2u(f6t)
                            endif
                        else
                            call PUs(f6t)
                        endif
                    elseif wC[f6t] <= 870 then
                        if wC[f6t] <= 869 then
                            call FAt(f6t)
                        else
                            call i4s(f6t, "when calling call_doAfter_Imp4 in ClosureTimers, line 109")
                        endif
                    else
                        call Glt(f6t, "when calling call_doAfter_Imp4 in ClosureTimers, line 109")
                    endif
    elseif wC[f6t] <= 874 then
                    if wC[f6t] <= 873 then
                        if wC[f6t] <= 872 then
                            call AyS(f6t, "when calling call_doAfter_Imp4 in ClosureTimers, line 109")
                        else
                            call t1r(f6t, "when calling call_doAfter_Imp4 in ClosureTimers, line 109")
                        endif
                    else
                        call jBu(f6t)
                    endif
    elseif wC[f6t] <= 876 then
                    if wC[f6t] <= 875 then
                        call LFS(f6t, "when calling call_doAfter_Imp4 in ClosureTimers, line 109")
                    else
                        call G3i(f6t, "when calling call_doAfter_Imp4 in ClosureTimers, line 109")
                    endif
    else
                    call heu(f6t)
    endif
            elseif wC[f6t] <= 883 then
    if wC[f6t] <= 880 then
                    if wC[f6t] <= 879 then
                        if wC[f6t] <= 878 then
                            call Myr(f6t, "when calling call_doAfter_Imp4 in ClosureTimers, line 109")
                        else
                            call r9r(f6t)
                        endif
                    else
                        call LcS(f6t, "when calling call_doAfter_Imp4 in ClosureTimers, line 109")
                    endif
    elseif wC[f6t] <= 882 then
                    if wC[f6t] <= 881 then
                        call xku(f6t, "when calling call_doAfter_Imp4 in ClosureTimers, line 109")
                    else
                        call TuS(f6t, "when calling call_doAfter_Imp4 in ClosureTimers, line 109")
                    endif
    else
                    call rVr(f6t, "when calling call_doAfter_Imp4 in ClosureTimers, line 109")
    endif
            elseif wC[f6t] <= 886 then
    if wC[f6t] <= 885 then
                    if wC[f6t] <= 884 then
                        call CXr(f6t, "when calling call_doAfter_Imp4 in ClosureTimers, line 109")
                    else
                        call Wjs(f6t, "when calling call_doAfter_Inspirit_Overvelde in ClosureTimers, line 109")
                    endif
    else
                    call uXt(f6t)
    endif
            elseif wC[f6t] <= 888 then
    if wC[f6t] <= 887 then
                    call g3u(f6t, "when calling call_doAfter_Items_Pickup_Drop in ClosureTimers, line 109")
    else
                    call iyi(f6t, "when calling call_doAfter_Items_Pickup_Drop in ClosureTimers, line 109")
    endif
            else
    call ihr(f6t, "when calling call_doAfter_Items_Pickup_Drop in ClosureTimers, line 109")
            endif
        elseif wC[f6t] <= 901 then
            if wC[f6t] <= 895 then
    if wC[f6t] <= 892 then
                    if wC[f6t] <= 891 then
                        if wC[f6t] <= 890 then
                            call bsS(f6t, "when calling call_doAfter_Items_Pickup_Drop in ClosureTimers, line 109")
                        else
                            call S_i(f6t, "when calling call_doAfter_JobAdvancementQuestHandler in ClosureTimers, line 109")
                        endif
                    else
                        call Dst(f6t, "when calling call_doAfter_JobAdvancementQuestHandler in ClosureTimers, line 109")
                    endif
    elseif wC[f6t] <= 894 then
                    if wC[f6t] <= 893 then
                        call x6r(f6t, "when calling call_doAfter_JobAdvancementQuestHandler in ClosureTimers, line 109")
                    else
                        call cBr(f6t, "when calling call_doAfter_JobAdvancementQuestHandler in ClosureTimers, line 109")
                    endif
    else
                    call Frt(f6t, "when calling call_doAfter_JobAdvancementQuestHandler in ClosureTimers, line 109")
    endif
            elseif wC[f6t] <= 898 then
    if wC[f6t] <= 897 then
                    if wC[f6t] <= 896 then
                        call XSu(f6t, "when calling call_doAfter_JobAdvancementQuestHandler in ClosureTimers, line 109")
                    else
                        call D_S(f6t, "when calling call_doAfter_JobAdvancementQuestHandler in ClosureTimers, line 109")
                    endif
    else
                    call TYr(f6t)
    endif
            elseif wC[f6t] <= 900 then
    if wC[f6t] <= 899 then
                    call aBi(f6t, "when calling call_doAfter_JobAdvancementQuestHandler in ClosureTimers, line 109")
    else
                    call jMw(f6t, "when calling call_doAfter_JobAdvancementQuestHandler in ClosureTimers, line 109")
    endif
            else
    call Lts(f6t, "when calling call_doAfter_JobAdvancementQuestHandler in ClosureTimers, line 109")
            endif
        elseif wC[f6t] <= 907 then
            if wC[f6t] <= 904 then
    if wC[f6t] <= 903 then
                    if wC[f6t] <= 902 then
                        call q4t(f6t, "when calling call_doAfter_JobAdvancementQuestHandler in ClosureTimers, line 109")
                    else
                        call X7t(f6t, "when calling call_doAfter_JobAdvancementQuestHandler in ClosureTimers, line 109")
                    endif
    else
                    call gVr(f6t)
    endif
            elseif wC[f6t] <= 906 then
    if wC[f6t] <= 905 then
                    call Rfu(f6t)
    else
                    call VWi(f6t)
    endif
            else
    call Xpi(f6t, "when calling call_doAfter_JobAdvancementQuestHandler in ClosureTimers, line 109")
            endif
        elseif wC[f6t] <= 910 then
            if wC[f6t] <= 909 then
    if wC[f6t] <= 908 then
                    call oou(f6t)
    else
                    call tbu(f6t, "when calling call_doAfter_JobAdvancementQuestHandler in ClosureTimers, line 109")
    endif
            else
    call lnu(f6t, "when calling call_doAfter_JobAdvancementQuestHandler in ClosureTimers, line 109")
            endif
        elseif wC[f6t] <= 912 then
            if wC[f6t] <= 911 then
    call tcs(f6t, "when calling call_doAfter_JobAdvancementQuestHandler in ClosureTimers, line 109")
            else
    call c1i(f6t)
            endif
        else
            call MMs(f6t, "when calling call_doAfter_MonsterHunter_Weakness in ClosureTimers, line 109")
        endif
    elseif wC[f6t] <= 1010 then
        if wC[f6t] <= 962 then
            if wC[f6t] <= 938 then
    if wC[f6t] <= 926 then
                    if wC[f6t] <= 920 then
                        if wC[f6t] <= 917 then
                            if wC[f6t] <= 915 then
                                if wC[f6t] <= 914 then
                                    call kni(f6t, "when calling call_doAfter_NpcHandler in ClosureTimers, line 109")
                                else
                                    call D4r(f6t)
                                endif
                            elseif wC[f6t] <= 916 then
                                call OrS(f6t, "when calling call_doAfter_NpcHandler in ClosureTimers, line 109")
                            else
                                call dDi(f6t, "when calling call_doAfter_NpcHandler in ClosureTimers, line 109")
                            endif
                        elseif wC[f6t] <= 919 then
                            if wC[f6t] <= 918 then
                                call qwr(f6t, "when calling call_doAfter_NpcHandler in ClosureTimers, line 109")
                            else
                                call his(f6t, "when calling call_doAfter_NpcHandler in ClosureTimers, line 109")
                            endif
                        else
                            call IIt(f6t, "when calling call_doAfter_NpcHandler in ClosureTimers, line 109")
                        endif
                    elseif wC[f6t] <= 923 then
                        if wC[f6t] <= 922 then
                            if wC[f6t] <= 921 then
                                call AFs(f6t, "when calling call_doAfter_NpcHandler in ClosureTimers, line 109")
                            else
                                call Wit(f6t, "when calling call_doAfter_NpcHandler in ClosureTimers, line 109")
                            endif
                        else
                            call o7s(f6t, "when calling call_doAfter_NpcHandler in ClosureTimers, line 109")
                        endif
                    elseif wC[f6t] <= 925 then
                        if wC[f6t] <= 924 then
                            call Giu(f6t)
                        else
                            call SNr(f6t)
                        endif
                    else
                        call f0S(f6t)
                    endif
    elseif wC[f6t] <= 932 then
                    if wC[f6t] <= 929 then
                        if wC[f6t] <= 928 then
                            if wC[f6t] <= 927 then
                                call JSt(f6t, "when calling call_doAfter_NpcTalking in ClosureTimers, line 109")
                            else
                                call AgS(f6t, "when calling call_doAfter_NpcTalking in ClosureTimers, line 109")
                            endif
                        else
                            call DKs(f6t, "when calling call_doAfter_PVP in ClosureTimers, line 109")
                        endif
                    elseif wC[f6t] <= 931 then
                        if wC[f6t] <= 930 then
                            call EpS(f6t)
                        else
                            call h0t(f6t)
                        endif
                    else
                        call opi(f6t, "when calling call_doAfter_PlayerCommands in ClosureTimers, line 109")
                    endif
    elseif wC[f6t] <= 935 then
                    if wC[f6t] <= 934 then
                        if wC[f6t] <= 933 then
                            call opS(f6t, "when calling call_doAfter_PlayerCommands in ClosureTimers, line 109")
                        else
                            call prt(f6t, "when calling call_doAfter_PlayerGoldAndShardLimit in ClosureTimers, line 109")
                        endif
                    else
                        call jxi(f6t)
                    endif
    elseif wC[f6t] <= 937 then
                    if wC[f6t] <= 936 then
                        call nwu(f6t, "when calling call_doAfter_Reforged_Init in ClosureTimers, line 109")
                    else
                        call G_r(f6t, "when calling call_doAfter_Reforged_Skins in ClosureTimers, line 109")
                    endif
    else
                    call nhu(f6t, "when calling call_doAfter_Reinforce_Effect in ClosureTimers, line 109")
    endif
            elseif wC[f6t] <= 950 then
    if wC[f6t] <= 944 then
                    if wC[f6t] <= 941 then
                        if wC[f6t] <= 940 then
                            if wC[f6t] <= 939 then
                                call DoS(f6t, "when calling call_doAfter_Reinforce_Effect in ClosureTimers, line 109")
                            else
                                call KCs(f6t)
                            endif
                        else
                            call Lii(f6t, "when calling call_doAfter_Repick in ClosureTimers, line 109")
                        endif
                    elseif wC[f6t] <= 943 then
                        if wC[f6t] <= 942 then
                            call ydr(f6t, "when calling call_doAfter_RespawnHeroesEnterReg in ClosureTimers, line 109")
                        else
                            call RNi(f6t)
                        endif
                    else
                        call CJr(f6t, "when calling call_doAfter_Rh_Effect in ClosureTimers, line 109")
                    endif
    elseif wC[f6t] <= 947 then
                    if wC[f6t] <= 946 then
                        if wC[f6t] <= 945 then
                            call KAi(f6t)
                        else
                            call xur(f6t)
                        endif
                    else
                        call xHu(f6t, "when calling call_doAfter_SpawnNeutralUnits in ClosureTimers, line 109")
                    endif
    elseif wC[f6t] <= 949 then
                    if wC[f6t] <= 948 then
                        call gti(f6t, "when calling call_doAfter_SpellIconWithGif in ClosureTimers, line 109")
                    else
                        call t5s(f6t, "when calling call_doAfter_SpellIconWithGif in ClosureTimers, line 109")
                    endif
    else
                    call Edu(f6t)
    endif
            elseif wC[f6t] <= 956 then
    if wC[f6t] <= 953 then
                    if wC[f6t] <= 952 then
                        if wC[f6t] <= 951 then
                            call omt(f6t)
                        else
                            call Dct(f6t, "when calling call_doAfter_Summoner_Tornado in ClosureTimers, line 109")
                        endif
                    else
                        call HPw(f6t, "when calling call_doAfter_SuperSaiyan in ClosureTimers, line 109")
                    endif
    elseif wC[f6t] <= 955 then
                    if wC[f6t] <= 954 then
                        call gkr(f6t)
                    else
                        call Bri(f6t, "when calling call_doAfter_SuperSaiyan in ClosureTimers, line 109")
                    endif
    else
                    call LLr(f6t, "when calling call_doAfter_SuperSaiyan in ClosureTimers, line 109")
    endif
            elseif wC[f6t] <= 959 then
    if wC[f6t] <= 958 then
                    if wC[f6t] <= 957 then
                        call D8S(f6t, "when calling call_doAfter_Tooth_Effect in ClosureTimers, line 109")
                    else
                        call pPt(f6t, "when calling call_doAfter_Tooth_Effect in ClosureTimers, line 109")
                    endif
    else
                    call NCi(f6t)
    endif
            elseif wC[f6t] <= 961 then
    if wC[f6t] <= 960 then
                    call lou(f6t)
    else
                    call IHt(f6t)
    endif
            else
    call MRi(f6t)
            endif
        elseif wC[f6t] <= 986 then
            if wC[f6t] <= 974 then
    if wC[f6t] <= 968 then
                    if wC[f6t] <= 965 then
                        if wC[f6t] <= 964 then
                            if wC[f6t] <= 963 then
                                call a8t(f6t)
                            else
                                call PIr(f6t, "when calling call_doAfter_VertexCalculator in ClosureTimers, line 109")
                            endif
                        else
                            call y5r(f6t, "when calling call_doAfter_VertexCalculator in ClosureTimers, line 109")
                        endif
                    elseif wC[f6t] <= 967 then
                        if wC[f6t] <= 966 then
                            call Enu(f6t)
                        else
                            call N6r(f6t, "when calling call_doAfter_VertexCalculator in ClosureTimers, line 109")
                        endif
                    else
                        call t2t(f6t, "when calling call_doAfter_VertexCalculator in ClosureTimers, line 109")
                    endif
    elseif wC[f6t] <= 971 then
                    if wC[f6t] <= 970 then
                        if wC[f6t] <= 969 then
                            call O9t(f6t, "when calling call_doAfter_VertexCalculator in ClosureTimers, line 109")
                        else
                            call Fti(f6t)
                        endif
                    else
                        call DNu(f6t, "when calling call_doAfter_Voidless in ClosureTimers, line 109")
                    endif
    elseif wC[f6t] <= 973 then
                    if wC[f6t] <= 972 then
                        call s0s(f6t, "when calling call_doAfter_Voidless in ClosureTimers, line 109")
                    else
                        call eFu(f6t, "when calling call_doAfter_Voidless in ClosureTimers, line 109")
                    endif
    else
                    call Tus(f6t, "when calling call_doAfter_Voidless in ClosureTimers, line 109")
    endif
            elseif wC[f6t] <= 980 then
    if wC[f6t] <= 977 then
                    if wC[f6t] <= 976 then
                        if wC[f6t] <= 975 then
                            call J9t(f6t, "when calling call_doAfter_Voidless in ClosureTimers, line 109")
                        else
                            call u2S(f6t)
                        endif
                    else
                        call AHi(f6t, "when calling call_doAfter_Voidless_extensions in ClosureTimers, line 109")
                    endif
    elseif wC[f6t] <= 979 then
                    if wC[f6t] <= 978 then
                        call jbs(f6t, "when calling call_doAfter_Voidless_extensions in ClosureTimers, line 109")
                    else
                        call Ses(f6t, "when calling call_doAfter_Voidless_infotags in ClosureTimers, line 109")
                    endif
    else
                    call rGt(f6t, "when calling call_doAfter_Voidless_mechanics in ClosureTimers, line 109")
    endif
            elseif wC[f6t] <= 983 then
    if wC[f6t] <= 982 then
                    if wC[f6t] <= 981 then
                        call sYs(f6t, "when calling call_doAfter_Voidless_mechanics in ClosureTimers, line 109")
                    else
                        call fEt(f6t, "when calling call_doAfter_Voidless_mechanics in ClosureTimers, line 109")
                    endif
    else
                    call ali(f6t)
    endif
            elseif wC[f6t] <= 985 then
    if wC[f6t] <= 984 then
                    call IBr(f6t)
    else
                    call GRr(f6t, "when calling call_doAfter_Voidless_mechanics in ClosureTimers, line 109")
    endif
            else
    call y9r(f6t, "when calling call_doAfter_Voidless_mechanics in ClosureTimers, line 109")
            endif
        elseif wC[f6t] <= 998 then
            if wC[f6t] <= 992 then
    if wC[f6t] <= 989 then
                    if wC[f6t] <= 988 then
                        if wC[f6t] <= 987 then
                            call xqS(f6t, "when calling call_doAfter_Voidless_mechanics in ClosureTimers, line 109")
                        else
                            call Rxu(f6t, "when calling call_doAfter_Voidless_mechanics in ClosureTimers, line 109")
                        endif
                    else
                        call vTt(f6t, "when calling call_doAfter_Voidless_mechanics in ClosureTimers, line 109")
                    endif
    elseif wC[f6t] <= 991 then
                    if wC[f6t] <= 990 then
                        call Rku(f6t)
                    else
                        call G8t(f6t, "when calling call_doAfter_Voidless_mechanics in ClosureTimers, line 109")
                    endif
    else
                    call B6i(f6t)
    endif
            elseif wC[f6t] <= 995 then
    if wC[f6t] <= 994 then
                    if wC[f6t] <= 993 then
                        call Lvu(f6t, "when calling call_doAfter_Voidless_mechanics in ClosureTimers, line 109")
                    else
                        call Ihs(f6t, "when calling call_doAfter_Voidless_mechanics in ClosureTimers, line 109")
                    endif
    else
                    call nXw(f6t, "when calling call_doAfter_Voidless_mechanics in ClosureTimers, line 109")
    endif
            elseif wC[f6t] <= 997 then
    if wC[f6t] <= 996 then
                    call HOS(f6t)
    else
                    call rrr(f6t, "when calling call_doAfter_Voidless_mechanics in ClosureTimers, line 109")
    endif
            else
    call eut(f6t)
            endif
        elseif wC[f6t] <= 1004 then
            if wC[f6t] <= 1001 then
    if wC[f6t] <= 1000 then
                    if wC[f6t] <= 999 then
                        call G3w(f6t, "when calling call_doAfter_Voidless_triggers in ClosureTimers, line 109")
                    else
                        call sJw(f6t, "when calling call_doAfter_Voidless_triggers in ClosureTimers, line 109")
                    endif
    else
                    call S6r(f6t)
    endif
            elseif wC[f6t] <= 1003 then
    if wC[f6t] <= 1002 then
                    call Wrr(f6t, "when calling call_doAfter_Whirlwind_Effect in ClosureTimers, line 109")
    else
                    call myr(f6t)
    endif
            else
    call PBs(f6t, "when calling call_doAfter_WorldBoss in ClosureTimers, line 109")
            endif
        elseif wC[f6t] <= 1007 then
            if wC[f6t] <= 1006 then
    if wC[f6t] <= 1005 then
                    call XdS(f6t, "when calling call_doAfter_WorldBoss_quests in ClosureTimers, line 109")
    else
                    call X8w(f6t)
    endif
            else
    call QSS(f6t, "when calling call_doAfter_addAction_JobAdvancementQuestHandler in ClosureTimers, line 109")
            endif
        elseif wC[f6t] <= 1009 then
            if wC[f6t] <= 1008 then
    call kjt(f6t, "when calling call_doAfter_addAction_JobAdvancementQuestHandler in ClosureTimers, line 109")
            else
    call Jqs(f6t)
            endif
        else
            call mct(f6t)
        endif
    elseif wC[f6t] <= 1059 then
        if wC[f6t] <= 1035 then
            if wC[f6t] <= 1023 then
    if wC[f6t] <= 1017 then
                    if wC[f6t] <= 1014 then
                        if wC[f6t] <= 1012 then
                            if wC[f6t] <= 1011 then
                                call I2r(f6t, "when calling call_doAfter_addAction_NoviceMaxLevel in ClosureTimers, line 109")
                            else
                                call tcS(f6t)
                            endif
                        elseif wC[f6t] <= 1013 then
                            call uJu(f6t, "when calling call_doAfter_addAction_NoviceMaxLevel in ClosureTimers, line 109")
                        else
                            call Yvi(f6t)
                        endif
                    elseif wC[f6t] <= 1016 then
                        if wC[f6t] <= 1015 then
                            call BUs(f6t, "when calling call_doAfter_addAction_RuneMaster_Metamorphs in ClosureTimers, line 109")
                        else
                            call KQu(f6t, "when calling call_doAfter_addAction_RuneMaster_Metamorphs in ClosureTimers, line 109")
                        endif
                    else
                        call yLu(f6t, "when calling call_doAfter_addAction_RuneMaster_Metamorphs in ClosureTimers, line 109")
                    endif
    elseif wC[f6t] <= 1020 then
                    if wC[f6t] <= 1019 then
                        if wC[f6t] <= 1018 then
                            call PSi(f6t, "when calling call_doAfter_addAction_Spells_Checks in ClosureTimers, line 109")
                        else
                            call byi(f6t, "when calling call_doAfter_addAction_Spells_Checks in ClosureTimers, line 109")
                        endif
                    else
                        call yXw(f6t)
                    endif
    elseif wC[f6t] <= 1022 then
                    if wC[f6t] <= 1021 then
                        call rut(f6t, "when calling call_doAfter_addAction_Voidless_triggers in ClosureTimers, line 109")
                    else
                        call eKw(f6t, "when calling call_doAfter_addAction_doAfter_FateDestinyUnlocker in ClosureTimers, line 109")
                    endif
    else
                    call FQu(f6t, "when calling call_doAfter_addAction_doAfter_FateDestinyUnlocker in ClosureTimers, line 109")
    endif
            elseif wC[f6t] <= 1029 then
    if wC[f6t] <= 1026 then
                    if wC[f6t] <= 1025 then
                        if wC[f6t] <= 1024 then
                            call mus(f6t)
                        else
                            call cnS(f6t)
                        endif
                    else
                        call PVi(f6t, "when calling call_doAfter_addAction_doAfter_FateDestinyUnlocker in ClosureTimers, line 109")
                    endif
    elseif wC[f6t] <= 1028 then
                    if wC[f6t] <= 1027 then
                        call ecs(f6t, "when calling call_doAfter_addAction_doAfter_FateDestinyUnlocker in ClosureTimers, line 109")
                    else
                        call jPw(f6t, "when calling call_doAfter_addAction_doAfter_FateDestinyUnlocker in ClosureTimers, line 109")
                    endif
    else
                    call XXu(f6t, "when calling call_doAfter_addAction_doAfter_FateDestinyUnlocker in ClosureTimers, line 109")
    endif
            elseif wC[f6t] <= 1032 then
    if wC[f6t] <= 1031 then
                    if wC[f6t] <= 1030 then
                        call rLw(f6t, "when calling call_doAfter_addAction_doAfter_FateDestinyUnlocker in ClosureTimers, line 109")
                    else
                        call m7w(f6t, "when calling call_doAfter_addAction_doAfter_FateDestinyUnlocker in ClosureTimers, line 109")
                    endif
    else
                    call nrr(f6t, "when calling call_doAfter_addAction_doAfter_FateDestinyUnlocker in ClosureTimers, line 109")
    endif
            elseif wC[f6t] <= 1034 then
    if wC[f6t] <= 1033 then
                    call gOS(f6t, "when calling call_doAfter_addAction_doAfter_FateDestinyUnlocker in ClosureTimers, line 109")
    else
                    call Bct(f6t, "when calling call_doAfter_addAction_doAfter_FateDestinyUnlocker in ClosureTimers, line 109")
    endif
            else
    call NMi(f6t, "when calling call_doAfter_addAction_doAfter_FateDestinyUnlocker in ClosureTimers, line 109")
            endif
        elseif wC[f6t] <= 1047 then
            if wC[f6t] <= 1041 then
    if wC[f6t] <= 1038 then
                    if wC[f6t] <= 1037 then
                        if wC[f6t] <= 1036 then
                            call M3s(f6t)
                        else
                            call Gri(f6t)
                        endif
                    else
                        call oHr(f6t)
                    endif
    elseif wC[f6t] <= 1040 then
                    if wC[f6t] <= 1039 then
                        call Sci(f6t)
                    else
                        call RGS(f6t)
                    endif
    else
                    call rks(f6t)
    endif
            elseif wC[f6t] <= 1044 then
    if wC[f6t] <= 1043 then
                    if wC[f6t] <= 1042 then
                        call nks(f6t)
                    else
                        call JBu(f6t)
                    endif
    else
                    call dxr(f6t, "when calling call_doAfter_addAction_doAfter_NpcTalking in ClosureTimers, line 109")
    endif
            elseif wC[f6t] <= 1046 then
    if wC[f6t] <= 1045 then
                    call UMw(f6t, "when calling call_doAfter_addAction_doAfter_NpcTalking in ClosureTimers, line 109")
    else
                    call A2s(f6t, "when calling call_doAfter_addAction_doAfter_RespawnHeroesEnterReg in ClosureTimers, line 109")
    endif
            else
    call pbr(f6t, "when calling call_doAfter_addOnDamageFunc_doAfter_DDS in ClosureTimers, line 109")
            endif
        elseif wC[f6t] <= 1053 then
            if wC[f6t] <= 1050 then
    if wC[f6t] <= 1049 then
                    if wC[f6t] <= 1048 then
                        call Xir(f6t)
                    else
                        call Rvu(f6t)
                    endif
    else
                    call MBu(f6t)
    endif
            elseif wC[f6t] <= 1052 then
    if wC[f6t] <= 1051 then
                    call iSt(f6t, "when calling call_doAfter_add_Buff in ClosureTimers, line 109")
    else
                    call Z4u(f6t, "when calling call_doAfter_add_Buff in ClosureTimers, line 109")
    endif
            else
    call Eni(f6t, "when calling call_doAfter_doAfter_DungeonCmds in ClosureTimers, line 109")
            endif
        elseif wC[f6t] <= 1056 then
            if wC[f6t] <= 1055 then
    if wC[f6t] <= 1054 then
                    call jqs(f6t, "when calling call_doAfter_doAfter_DungeonCmds in ClosureTimers, line 109")
    else
                    call J4i(f6t, "when calling call_doAfter_doAfter_DungeonCmds in ClosureTimers, line 109")
    endif
            else
    call HYu(f6t)
            endif
        elseif wC[f6t] <= 1058 then
            if wC[f6t] <= 1057 then
    call ZnS(f6t)
            else
    call khs(f6t)
            endif
        else
            call UBi(f6t, "when calling call_doAfter_doAfter_JobAdvancementQuestHandler in ClosureTimers, line 109")
        endif
    elseif wC[f6t] <= 1083 then
        if wC[f6t] <= 1071 then
            if wC[f6t] <= 1065 then
    if wC[f6t] <= 1062 then
                    if wC[f6t] <= 1061 then
                        if wC[f6t] <= 1060 then
                            call WBi(f6t, "when calling call_doAfter_doAfter_JobAdvancementQuestHandler in ClosureTimers, line 109")
                        else
                            call iit(f6t, "when calling call_doAfter_doAfter_JobAdvancementQuestHandler in ClosureTimers, line 109")
                        endif
                    else
                        call squ(f6t, "when calling call_doAfter_doAfter_JobAdvancementQuestHandler in ClosureTimers, line 109")
                    endif
    elseif wC[f6t] <= 1064 then
                    if wC[f6t] <= 1063 then
                        call L4t(f6t, "when calling call_doAfter_doAfter_JobAdvancementQuestHandler in ClosureTimers, line 109")
                    else
                        call Bus(f6t, "when calling call_doAfter_doAfter_JobAdvancementQuestHandler in ClosureTimers, line 109")
                    endif
    else
                    call R2r(f6t, "when calling call_doAfter_doAfter_JobAdvancementQuestHandler in ClosureTimers, line 109")
    endif
            elseif wC[f6t] <= 1068 then
    if wC[f6t] <= 1067 then
                    if wC[f6t] <= 1066 then
                        call EIt(f6t)
                    else
                        call hjr(f6t)
                    endif
    else
                    call bgt(f6t)
    endif
            elseif wC[f6t] <= 1070 then
    if wC[f6t] <= 1069 then
                    call pSS(f6t, "when calling call_doAfter_doAfter_MonsterHunter_Weakness in ClosureTimers, line 109")
    else
                    call RXr(f6t)
    endif
            else
    call cys(f6t)
            endif
        elseif wC[f6t] <= 1077 then
            if wC[f6t] <= 1074 then
    if wC[f6t] <= 1073 then
                    if wC[f6t] <= 1072 then
                        call Wxi(f6t, "when calling call_doAfter_doAfter_Rh_Effect in ClosureTimers, line 109")
                    else
                        call EPi(f6t, "when calling call_doAfter_doAfter_Rh_Effect in ClosureTimers, line 109")
                    endif
    else
                    call Xps(f6t, "when calling call_doAfter_doAfter_Rh_Effect in ClosureTimers, line 109")
    endif
            elseif wC[f6t] <= 1076 then
    if wC[f6t] <= 1075 then
                    call g6r(f6t)
    else
                    call rdu(f6t, "when calling call_doAfter_doAfter_Voidless in ClosureTimers, line 109")
    endif
            else
    call Z2S(f6t, "when calling call_doAfter_doAfter_Voidless in ClosureTimers, line 109")
            endif
        elseif wC[f6t] <= 1080 then
            if wC[f6t] <= 1079 then
    if wC[f6t] <= 1078 then
                    call Ets(f6t, "when calling call_doAfter_doAfter_Voidless in ClosureTimers, line 109")
    else
                    call Jau(f6t)
    endif
            else
    call xhu(f6t)
            endif
        elseif wC[f6t] <= 1082 then
            if wC[f6t] <= 1081 then
    call SLs(f6t, "when calling call_doAfter_doAfter_addAction_doAfter_FateDestinyUnlocker in ClosureTimers, line 109")
            else
    call GHt(f6t, "when calling call_doAfter_doAfter_doAfter_DungeonCmds in ClosureTimers, line 109")
            endif
        else
            call aoi(f6t, "when calling call_doAfter_doAfter_doAfter_JobAdvancementQuestHandler in ClosureTimers, line 109")
        endif
    elseif wC[f6t] <= 1095 then
        if wC[f6t] <= 1089 then
            if wC[f6t] <= 1086 then
    if wC[f6t] <= 1085 then
                    if wC[f6t] <= 1084 then
                        call StS(f6t, "when calling call_doAfter_doAfter_doAfter_JobAdvancementQuestHandler in ClosureTimers, line 109")
                    else
                        call O5u(f6t, "when calling call_doAfter_doAfter_doAfter_JobAdvancementQuestHandler in ClosureTimers, line 109")
                    endif
    else
                    call JOt(f6t, "when calling call_doAfter_doAfter_doAfter_JobAdvancementQuestHandler in ClosureTimers, line 109")
    endif
            elseif wC[f6t] <= 1088 then
    if wC[f6t] <= 1087 then
                    call Bis(f6t, "when calling call_doAfter_doPeriodicallyCounted_GrandTemplar_PsiDestruction in ClosureTimers, line 109")
    else
                    call pmt(f6t)
    endif
            else
    call Qhs(f6t)
            endif
        elseif wC[f6t] <= 1092 then
            if wC[f6t] <= 1091 then
    if wC[f6t] <= 1090 then
                    call vDr(f6t)
    else
                    call Jdr(f6t, "when calling call_doAfter_doPeriodically_doAfter_EffectCleaner in ClosureTimers, line 109")
    endif
            else
    call bWu(f6t, "when calling call_doAfter_doPeriodically_doAfter_EffectCleaner in ClosureTimers, line 109")
            endif
        elseif wC[f6t] <= 1094 then
            if wC[f6t] <= 1093 then
    call h2s(f6t)
            else
    call YPr(f6t, "when calling call_nullTimer_CustomHero_CustomHero in ClosureTimers, line 109")
            endif
        else
            call h6i(f6t, "when calling call_nullTimer_Encoder_Encoder in ClosureTimers, line 109")
        endif
    elseif wC[f6t] <= 1101 then
        if wC[f6t] <= 1098 then
            if wC[f6t] <= 1097 then
    if wC[f6t] <= 1096 then
                    call Air(f6t, "when calling call_nullTimer_Imp3DragonFortress in ClosureTimers, line 109")
    else
                    call X4r(f6t)
    endif
            else
    call K3w(f6t)
            endif
        elseif wC[f6t] <= 1100 then
            if wC[f6t] <= 1099 then
    call Tpi(f6t, "when calling call_nullTimer_Items_Pickup_Drop in ClosureTimers, line 109")
            else
    call bKr(f6t, "when calling call_nullTimer_Items_Pickup_Drop in ClosureTimers, line 109")
            endif
        else
            call ypr(f6t, "when calling call_nullTimer_Items_Pickup_Drop in ClosureTimers, line 109")
        endif
    elseif wC[f6t] <= 1104 then
        if wC[f6t] <= 1103 then
            if wC[f6t] <= 1102 then
    call X3i(f6t, "when calling call_nullTimer_JobAdvancementQuestHandler in ClosureTimers, line 109")
            else
    call jDr(f6t)
            endif
        else
            call gAr(f6t, "when calling call_nullTimer_Preloader in ClosureTimers, line 109")
        endif
    elseif wC[f6t] <= 1106 then
        if wC[f6t] <= 1105 then
            call Gii(f6t)
        else
            call ndr(f6t)
        endif
    else
        call EHt(f6t, "when calling call_nullTimer_load_LZW in ClosureTimers, line 109")
    endif
    set ASw = ASw - 1
endfunction
function e6r takes string b6r returns nothing
    local timer y6r
    local integer p6r
    set DSw[ASw] = b6r
    set ASw = ASw + 1
    set y6r = GetExpiredTimer()
    set p6r = PPi(y6r, "when calling getData in ClosureTimers, line 119")
    call T6t(p6r, "when calling call in ClosureTimers, line 120")
    call JNw(p6r, "when calling dispatch_CallbackSingle_destroyCallbackSingle in ClosureTimers, line 121")
    set ASw = ASw - 1
    set y6r = null
endfunction
function L1u takes string K1u returns nothing
    set DSw[ASw] = K1u
    set ASw = ASw + 1
    call e6r("when calling staticCallback in ClosureTimers, line 114")
    set ASw = ASw - 1
endfunction
function SVr takes nothing returns nothing
    set ASw = 0
    call L1u("via function reference ClosureTimers, line 114")
endfunction
function SVs takes nothing returns nothing
    call RemoveUnit(GetEnumUnit())
endfunction
function FNt takes nothing returns boolean
    return GetUnitTypeId(GetDyingUnit()) == 1429221424
endfunction
function Gks takes nothing returns boolean
    return GetUnitTypeId(GetDyingUnit()) == 1848651830
endfunction
function Y9i takes nothing returns boolean
    return GetUnitTypeId(GetDyingUnit()) == 1848651824
endfunction
function vWu takes nothing returns boolean
    return GetUnitTypeId(GetDyingUnit()) == 1848651831
endfunction
function SWt takes nothing returns nothing
    if vWu() then
        call DisplayTimedTextToForce(Rc[$00000001], 5., "|cffffcc00You are now transferred to the next level.|r")
        call PolledWait(c)
        set vo = GetRectCenter(Ab)
        call ForGroupBJ(fc[$00000001], plw)
        call ForForce(Rc[$00000001], elw)
        call RemoveLocation(vo)
    endif
    if Y9i() then
        call DisplayTimedTextToForce(Rc[$00000001], 5., "|cffffcc00You are now transferred to the next level.|r")
        call PolledWait(c)
        set vo = GetRectCenter(Db)
        call ForGroupBJ(fc[$00000001], qlw)
        call ForForce(Rc[$00000001], alw)
        call RemoveLocation(vo)
    endif
    if Gks() then
        call DisplayTimedTextToForce(Rc[$00000001], 5., "|cffffcc00You are now transferred to the next level.|r")
        call PolledWait(c)
        set vo = GetRectCenter(Pb)
        call ForGroupBJ(fc[$00000001], nlw)
        call ForForce(Rc[$00000001], dlw)
        call RemoveLocation(vo)
    endif
    if FNt() then
        set Ni = 1
        set Mi = 6
        call ForForce(Rc[$00000001], flw)
        call DisplayTimedTextToForce(Rc[$00000001], 10., "|cffffcc00You have completed the dungeon!|r Type -|c00ff0000d|r|c00ff1500o|r|c00ff3000n|r|c00ff4500e|r to exit the dungeon after looting your reward.")
        call DisplayTimedTextToForce(Rc[$00000001], 10., "|cffffcc00Type|r |c00ff0000-s2s X|r|cffffcc00 to send an item to your stash. (1-6)|r")
        call PolledWait(S)
        set pr[$00000001] = 1227894839
        set pr[$00000002] = 1227894851
        set pr[$00000003] = 1227894838
        set pr[$00000004] = 1227894836
        set pr[$00000005] = 1227894853
        set pr[$00000006] = 1227894837
        set Ni = 1
        set Mi = 6
        call ForForce(Rc[$00000001], Rlw)
        call ForGroupBJ(fc[$00000001], Tlw)
        call TriggerExecute(cw)
        call GroupClear(fc[$00000001])
        call ForceClear(Rc[$00000001])
        call DisableTrigger(GetTriggeringTrigger())
    endif
endfunction
function rli takes integer uli returns nothing
endfunction
function x2w takes integer k2w, string j2w returns nothing
    set DSw[ASw] = j2w
    set ASw = ASw + 1
    if PV[k2w] == 0 then
        call tNr("Double free: object of type DelayNode", "when calling error in DummyRecycler, line 84")
    else
        set IV = IV + 1
        set PV[k2w] = 0
    endif
    set ASw = ASw - 1
endfunction
function UCs takes integer ECs, string ZCs returns nothing
    set DSw[ASw] = ZCs
    set ASw = ASw + 1
    call rli(ECs)
    call x2w(ECs, "when calling dealloc_DelayNode in DummyRecycler, line 84")
    set ASw = ASw - 1
endfunction
function K8S takes integer H8S, string J8S returns nothing
    set DSw[ASw] = J8S
    set ASw = ASw + 1
    if PV[H8S] == 0 then
        if H8S == 0 then
            call tNr("Nullpointer exception when calling DelayNode.DelayNode", "when calling error in DummyRecycler, line 84")
        else
            call tNr("Called DelayNode.DelayNode on invalid object.", "when calling error in DummyRecycler, line 84")
        endif
    endif
    call UCs(H8S, "when calling destroyDelayNode in DummyRecycler, line 84")
    set ASw = ASw - 1
endfunction
function Pcr takes string Ucr returns nothing
    local integer Icr
    set DSw[ASw] = Ucr
    set ASw = ASw + 1
    call Eau(H3[cx], "when calling recycle in DummyRecycler, line 133")
    set Icr = cx
    if K3[cx] == 0 then
        set cx = 0
    else
        set cx = K3[cx]
        call gNu(Sx, J3[cx] - Yts(), Nvw)
    endif
    call K8S(Icr, "when calling dispatch_DelayNode_destroyDelayNode in DummyRecycler, line 142")
    set ASw = ASw - 1
endfunction
function S_r takes nothing returns nothing
    set ASw = 0
    call Pcr("via function reference DummyRecycler, line 140")
endfunction
function bRs takes nothing returns boolean
    return GetPlayerController(GetOwningPlayer(GetFilterUnit())) == MAP_CONTROL_USER
endfunction
function kdS takes nothing returns boolean
    return IsUnitAliveBJ(GetFilterUnit())
endfunction
function Sbs takes nothing returns boolean
    return GetBooleanAnd(kdS(), bRs())
endfunction
function Sct takes nothing returns boolean
    return IsUnitType(GetTriggerUnit(), UNIT_TYPE_HERO) != false
endfunction
function Sit takes nothing returns nothing
    call ForceAddPlayer(Uo[$00000004], GetOwningPlayer(GetTriggerUnit()))
    call DisplayTextToForce(MwS(GetOwningPlayer(GetTriggerUnit())), "|cffffcc00You've found a... usable rod around the fire pit. This guy will probably not need it anymore...|r")
endfunction
function MBt takes string JBt returns boolean
    local real KBt
    local real LBt
    local real XBt
    local real CBt
    local integer VBt
    local integer BBt
    local integer NBt
    set DSw[ASw] = JBt
    set ASw = ASw + 1
    set aK = Iji("|cffffffff.|r|cffb38300.|r|cff070024.|rStabilized Void Prism|cffffffff.|r|cffb38300.|r|cff070024.|r", "when calling unObfuscate in Voidless_defs, line 10")
    call Iji("As unstable bare Void is, this chunk seems rather stable. Holding it means you no harm.", "when calling unObfuscate in Voidless_defs, line 11")
    set nK = Iji("After entering the sanctum, a weird power flashed around me, as the Void pieces merged in the air, a blinding explosion... And then I saw myself holding this in my hand. The power of the shards combined inside the Inspirit, which glows with purple light. 
Grants Overvelde, releasing tremendous power dealing base damage + [|cffffcc003.2 x Main stat|r], renewing 1000 mana (cooldown 5-7 seconds), 45% spell resist, enemies have -40 armor and 0.1% HP/MP regen.", "when calling unObfuscate in Voidless_defs, line 12")
    set dK = Rect(5280., 10208., 5504., 10400.)
    set fK = Rect(8640., - 6016., 9792., - 4768.)
    set RK = Rect(8768., - 5888., 9664., - 4896.)
    set KBt = 9212.6
    set LBt =- 5059.9
    set TK = KBt
    set YK = LBt
    set GK = Rect(9100., - 5450., 9300., - 5250.)
    set gK = Rect(4832., 8512., 5920., 9760.)
    set hK = Rect(4160., 8000., 4544., 9888.)
    set FK = Rect(4224., 9632., 4480., 9792.)
    set kK = Rect(4352., 10240., 4480., 10368.)
    set XBt = 9218.4
    set CBt =- 5374.9
    set jK = XBt
    set xK = CBt
    set vK = "Charge of Rifts"
    set mK = "Voidance Field"
    set QK = "Dissipate Illusions"
    set WK = "Invisible Providence"
    set EK = "Weakest Link"
    set ZK = "Come closer!"
    set UK = "Bombardment"
    set IK = "Voidbeam"
    set PK = l2s(Iji("U00V", "when calling unObfuscate in Voidless_defs, line 39"), "when calling fromRawCode in Voidless_defs, line 39")
    set AK = l2s(Iji("n034", "when calling unObfuscate in Voidless_defs, line 40"), "when calling fromRawCode in Voidless_defs, line 40")
    set DK = l2s(Iji("A0PV", "when calling unObfuscate in Voidless_defs, line 41"), "when calling fromRawCode in Voidless_defs, line 41")
    set HK = l2s(Iji("A0MV", "when calling unObfuscate in Voidless_defs, line 42"), "when calling fromRawCode in Voidless_defs, line 42")
    call l2s(Iji("B0PV", "when calling unObfuscate in Voidless_defs, line 43"), "when calling fromRawCode in Voidless_defs, line 43")
    call l2s(Iji("B0MV", "when calling unObfuscate in Voidless_defs, line 44"), "when calling fromRawCode in Voidless_defs, line 44")
    set JK = l2s(Iji("u10V", "when calling unObfuscate in Voidless_defs, line 45"), "when calling fromRawCode in Voidless_defs, line 45")
    set KK = l2s(Iji("u20V", "when calling unObfuscate in Voidless_defs, line 46"), "when calling fromRawCode in Voidless_defs, line 46")
    set LK = l2s(Iji("u30V", "when calling unObfuscate in Voidless_defs, line 47"), "when calling fromRawCode in Voidless_defs, line 47")
    set XK = l2s(Iji("u11V", "when calling unObfuscate in Voidless_defs, line 48"), "when calling fromRawCode in Voidless_defs, line 48")
    set CK = l2s(Iji("u12V", "when calling unObfuscate in Voidless_defs, line 49"), "when calling fromRawCode in Voidless_defs, line 49")
    set VK = l2s(Iji("A0DC", "when calling unObfuscate in Voidless_defs, line 50"), "when calling fromRawCode in Voidless_defs, line 50")
    set BK = l2s(Iji("A0DD", "when calling unObfuscate in Voidless_defs, line 51"), "when calling fromRawCode in Voidless_defs, line 51")
    call l2s(Iji("A0DE", "when calling unObfuscate in Voidless_defs, line 52"), "when calling fromRawCode in Voidless_defs, line 52")
    set NK = l2s(Iji("A0DF", "when calling unObfuscate in Voidless_defs, line 53"), "when calling fromRawCode in Voidless_defs, line 53")
    set MK = Iji("Models/VoidlessGuarding.mdx", "when calling unObfuscate in Voidless_defs, line 56")
    call Iji("Effects/VoidRiftRed.mdx", "when calling unObfuscate in Voidless_defs, line 57")
    call Iji("Effects/VoidRiftGreen.mdx", "when calling unObfuscate in Voidless_defs, line 58")
    call Iji("Effects/VoidRiftPurple.mdx", "when calling unObfuscate in Voidless_defs, line 59")
    set wL = Iji("Effects/VoidRain.mdx", "when calling unObfuscate in Voidless_defs, line 60")
    call Iji("Effects/VoidMissile.mdx", "when calling unObfuscate in Voidless_defs, line 61")
    call Iji("Models/VoidlessSorcerer.mdx", "when calling unObfuscate in Voidless_defs, line 62")
    call Iji("Models/VoidlessTentacle.mdx", "when calling unObfuscate in Voidless_defs, line 63")
    set uL = Iji("Effects/VoidSkullAura.mdx", "when calling unObfuscate in Voidless_defs, line 64")
    call Iji("ReplaceableTextures\CommandButtons\BTNGlowingInspirit.BLP", "when calling unObfuscate in Voidless_defs, line 65")
    set rL = Iji("Effects/VoidHole.mdx", "when calling unObfuscate in Voidless_defs, line 66")
    set sL = Iji("Effects/VoidInvisibleHands.mdx", "when calling unObfuscate in Voidless_defs, line 67")
    call Iji("units\demon\Felgaurd\Felgaurd.mdl", "when calling unObfuscate in Voidless_defs, line 68")
    set VBt = 200
    set BBt = 200
    set NBt = 255
    set tL = VBt
    set iL = BBt
    set SL = NBt
    set cL = 1229992270
    set oL = 1229992259
    set OL = 1229992526
    set lL = 1229992515
    set bL = 1229992782
    set yL = 1229992771
    set pL = 1229993038
    set eL = 1229993283
    set qL = Iji("ReplaceableTextures/CommandButtons/BTNVoidPrismNormal_1-4.blp", "when calling unObfuscate in Voidless_defs, line 82")
    set aL = Iji("ReplaceableTextures/CommandButtons/BTNVoidPrismCharged_1-4.blp", "when calling unObfuscate in Voidless_defs, line 83")
    set nL = Iji("ReplaceableTextures/CommandButtons/BTNVoidPrismNormal_5-14.blp", "when calling unObfuscate in Voidless_defs, line 84")
    set dL = Iji("ReplaceableTextures/CommandButtons/BTNVoidPrismCharged_5-14.blp", "when calling unObfuscate in Voidless_defs, line 85")
    set fL = Iji("ReplaceableTextures/CommandButtons/BTNVoidPrismNormal_15-24.blp", "when calling unObfuscate in Voidless_defs, line 86")
    set RL = Iji("ReplaceableTextures/CommandButtons/BTNVoidPrismCharged_15-24.blp", "when calling unObfuscate in Voidless_defs, line 87")
    set TL = Iji("ReplaceableTextures/CommandButtons/BTNVoidPrismNormal_25.blp", "when calling unObfuscate in Voidless_defs, line 88")
    set YL = Iji("ReplaceableTextures/CommandButtons/BTNVoidPrismCharged_25.blp", "when calling unObfuscate in Voidless_defs, line 89")
    set MO = Rect(4224., 8256., 4480., 8448.)
    set ASw = ASw - 1
    return true
endfunction
function Sks takes nothing returns boolean
    set ASw = 0
    return MBt("via function reference Voidless_defs, line 1")
endfunction
function Smt takes nothing returns nothing
    call ForceAddPlayer(js, GetOwningPlayer(GetTriggerUnit()))
    call ForceAddPlayer(Cr, GetOwningPlayer(GetTriggerUnit()))
    call DisplayTextToForce(MwS(GetOwningPlayer(GetTriggerUnit())), "|cffffcc00Stendarr|r : |cff87ceebYes, cleric. I have been expecting you. The people have been whispering tales of your exploits, and I must say, I am impressed. But now is not the time for idle chatter. You see, in order to obtain a letter of recommendation, you must first go through what we call the \"Rites of the Highfather\". It is standard procedure for all male clerics who wish to advance into the higher classes of the Church. Speak to Priestess Shari and she shall guide you further.")
    call QuestSetDescription(Lr[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))], "I need to speak to Priestess Shari.")
endfunction
function Sqi takes nothing returns nothing
    call SetUnitInvulnerable(GetEnumUnit(), false)
    call PauseUnit(GetEnumUnit(), false)
endfunction
function vPw takes nothing returns boolean
    return GetUnitTypeId(GetSpellTargetUnit()) == 1429221458 or GetUnitTypeId(GetSpellTargetUnit()) == 1429221443
endfunction
function Str takes nothing returns boolean
    return vPw() and GetSpellAbilityId() != 1093678677 and GetSpellAbilityId() != 1093678160 and GetSpellAbilityId() != 1093678681
endfunction
function mst takes string vst returns nothing
    set DSw[ASw] = vst
    set ASw = ASw + 1
    call FDt(Iji("Save-Load is disabled due to single-player!", "when calling unObfuscate in NpcHandler, line 748"))
    set ASw = ASw - 1
endfunction
function Sxi takes nothing returns nothing
    set ASw = 0
    call mst("via function reference NpcHandler, line 818")
endfunction
function Sxu takes nothing returns nothing
    set bi = GetRectCenter(Fb)
    call ForceAddPlayer(Gi, GetOwningPlayer(GetTriggerUnit()))
    call SetUnitPositionLoc(GetEnteringUnit(), bi)
    call PanCameraToTimedLocForPlayer(GetOwningPlayer(GetEnteringUnit()), bi, 0.)
    call TriggerExecute(MT)
    call DisplayTimedTextToForce(MwS(GetOwningPlayer(GetEnteringUnit())), 5., "|cff009ACDGlacier Forest|r: |cff87ceebSilvasia North Camp|r\n|cffff0000PvP is not available here|r.")
    call RemoveLocation(bi)
endfunction
function r_s takes string u_s returns nothing
    set DSw[ASw] = u_s
    set ASw = ASw + 1
    call sMr(GetEnumUnit(), "when calling specialItemsCreate in Items_Pickup_Drop, line 83")
    set ASw = ASw - 1
endfunction
function Syi takes nothing returns nothing
    set ASw = 0
    call r_s("via function reference Items_Pickup_Drop, line 771")
endfunction
function T1r takes nothing returns boolean
    return IsPlayerInForce(GetOwningPlayer(GetTriggerUnit()), Lt)
endfunction
function Cnu takes string Lnu returns integer
    local integer Xnu
    set DSw[ASw] = Lnu
    set ASw = ASw + 1
    if NX == 0 then
        if MX < 32768 then
            set MX = MX + 1
            set Xnu = MX
            set wC[Xnu] = 1018
        else
            call tNr("Out of memory: Could not create CallbackSingle_doAfter_addAction_Spells_Checks.", "when calling error in Spells_Checks, line 73")
            set Xnu = 0
        endif
    else
        set NX = NX - 1
        set Xnu = BX[NX]
        set wC[Xnu] = 1018
    endif
    set ASw = ASw - 1
    return Xnu
endfunction
function W3r takes integer j3r, string x3r returns integer
    local integer v3r
    local string m3r
    local string Q3r
    set DSw[ASw] = x3r
    set ASw = ASw + 1
    set v3r = 0
    set m3r = TSs(j3r)
    set Q3r = m3r
    if Q3r == Iji("A07U", "when calling unObfuscate in Spells_Checks, line 19") then
        set v3r = J
    elseif Q3r == Iji("A086", "when calling unObfuscate in Spells_Checks, line 21") then
        set v3r = L
    elseif Q3r == Iji("A078", "when calling unObfuscate in Spells_Checks, line 23") then
        set v3r = U
    elseif Q3r == Iji("A06Y", "when calling unObfuscate in Spells_Checks, line 25") then
        set v3r = E
    elseif Q3r == Iji("A04Q", "when calling unObfuscate in Spells_Checks, line 27") then
        set v3r = X
    elseif Q3r == Iji("A080", "when calling unObfuscate in Spells_Checks, line 29") then
        set v3r = K
    elseif Q3r == Iji("A07K", "when calling unObfuscate in Spells_Checks, line 31") then
        set v3r = I
    elseif Q3r == Iji("A07E", "when calling unObfuscate in Spells_Checks, line 33") then
        set v3r = P
    elseif Q3r == Iji("A051", "when calling unObfuscate in Spells_Checks, line 37") then
        set v3r = D
    elseif Q3r == Iji("A06U", "when calling unObfuscate in Spells_Checks, line 39") then
        set v3r = W
    elseif Q3r == Iji("A067", "when calling unObfuscate in Spells_Checks, line 41") then
        set v3r = C
    elseif Q3r == Iji("A076", "when calling unObfuscate in Spells_Checks, line 43") then
        set v3r = H
    endif
    set ASw = ASw - 1
    return v3r
endfunction
function rai takes string Vqi returns nothing
    local unit Bqi
    local integer Nqi
    local unit Mqi
    local player wai
    local integer uai
    set DSw[ASw] = Vqi
    set ASw = ASw + 1
    set Bqi = GetSpellTargetUnit()
    set Nqi = GetSpellAbilityId()
    set Mqi = GetTriggerUnit()
    set wai = eDs(Mqi)
    if iBw(eDs(Bqi), wai) and hgr(wai) <= Lh then
        if fRi(Bqi) or gSr(Bqi, l2s(Iji("AImx", "when calling unObfuscate in Spells_Checks, line 65"), "when calling fromRawCode in Spells_Checks, line 65")) or n2u(Bqi) then
            call dii(Iji("|cffff0000Target is immune to spells!|r", "when calling unObfuscate in Spells_Checks, line 66"), 5., wai)
            call xvu(Mqi, Iji("stop", "when calling unObfuscate in Spells_Checks, line 67"))
        endif
    endif
    if kbr(wai) < W3r(Nqi, "when calling getUltimateCost in Spells_Checks, line 70") and(not ONi(Xt, wai)) then
        call dii(Iji("|cffff0000Not enough power shards|r. ", "when calling unObfuscate in Spells_Checks, line 71"), 5., wai)
        call xvu(Mqi, Iji("stop", "when calling unObfuscate in Spells_Checks, line 72"))
        set uai = Cnu("when calling alloc_CallbackSingle_doAfter_addAction_Spells_Checks in Spells_Checks, line 73")
        call RUs(uai)
        set nsw[uai] = Mqi
        call Ybr(0., uai, "when calling doAfter in Spells_Checks, line 73")
    endif
    if r5S(Mqi) == l2s(Iji("H016", "when calling unObfuscate in Spells_Checks, line 77"), "when calling fromRawCode in Spells_Checks, line 77") and Nqi == l2s(Iji("A032", "when calling unObfuscate in Spells_Checks, line 77"), "when calling fromRawCode in Spells_Checks, line 77") and boS(Bqi) > 100 then
        call dii(Iji("|cffff0000Target is too powerful! Max target level is 100.|r", "when calling unObfuscate in Spells_Checks, line 78"), 5., wai)
        call xvu(Mqi, Iji("stop", "when calling unObfuscate in Spells_Checks, line 79"))
    endif
    set ASw = ASw - 1
    set Bqi = null
    set Mqi = null
    set wai = null
endfunction
function T5s takes nothing returns nothing
    set ASw = 0
    call rai("via function reference Spells_Checks, line 58")
endfunction
function tCs takes string rCs returns integer
    local integer sCs
    set DSw[ASw] = rCs
    set ASw = ASw + 1
    if NX == 0 then
        if MX < 32768 then
            set MX = MX + 1
            set sCs = MX
            set wC[sCs] = 1001
        else
            call tNr("Out of memory: Could not create CallbackSingle_doAfter_Whirlwind_Avatar.", "when calling error in Whirlwind_Avatar, line 112")
            set sCs = 0
        endif
    else
        set NX = NX - 1
        set sCs = BX[NX]
        set wC[sCs] = 1001
    endif
    set ASw = ASw - 1
    return sCs
endfunction
function QRr takes string FRr returns nothing
    local unit kRr
    local integer jRr
    local real xRr
    local integer vRr
    local real mRr
    set DSw[ASw] = FRr
    set ASw = ASw + 1
    set kRr = GetTriggerUnit()
    set jRr = r5S(kRr)
    set xRr =- 1.
    if jRr == 1211118155 then
        set xRr = 0.4 + 1.15
    elseif jRr == 1211118152 then
        set xRr = 0.4 + 1.45
    elseif jRr == 1211117617 or jRr == 1211117618 then
        set xRr = 0.4 + 1.25
    elseif jRr == 1747989066 then
        set xRr = 0.4 + 0.5
    endif
    if xRr !=- 1. then
        call rZu(kRr, xRr)
    endif
    call V5S(kRr, Yk)
    call V5S(kRr, Gk)
    call V5S(kRr, gk)
    set mRr = EX
    set vRr = tCs("when calling alloc_CallbackSingle_doAfter_Whirlwind_Avatar in Whirlwind_Avatar, line 112")
    call RUs(vRr)
    set ZSw[vRr] = kRr
    call Ybr(mRr, vRr, "when calling doAfter in Whirlwind_Avatar, line 112")
    set ASw = ASw - 1
    set kRr = null
endfunction
function T5w takes nothing returns nothing
    set ASw = 0
    call QRr("via function reference Whirlwind_Avatar, line 120")
endfunction
function T6r takes nothing returns boolean
    return (GetItemTypeId(GetManipulatedItem()) == 1227895105 and IsUnitType(GetTriggerUnit(), UNIT_TYPE_HERO) and GetHeroLevel(GetTriggerUnit()) >= 30 and IsPlayerInForce(GetOwningPlayer(GetTriggerUnit()), IS[$00000005]) == false) != false
endfunction
function T7i takes nothing returns nothing
    call SetHeroLevelBJ(GetTriggerUnit(), $00000001, false)
    call ReplaceUnitBJ(GetEnteringUnit(), $48303041, $00000002)
    set Fu[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))] = bj_lastReplacedUnit
    call SetHeroLevel(Fu[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))], $00000001, true)
    call UnitStripHeroLevel(Fu[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))], $00000001)
    call DisplayTimedTextToForce(MwS(GetOwningPlayer(GetTriggerUnit())), 5., "|cffff8c00Congratulations! You have advanced to the 1st Job!|r")
    call SetUnitPositionLoc(Fu[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))], GetRectCenter(kO))
    call PanCameraToTimedLocForPlayer(GetOwningPlayer(GetTriggerUnit()), GetRectCenter(kO), 0.)
    call TriggerExecute(MT)
    call SelectUnitForPlayerSingle(Fu[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))], GetOwningPlayer(GetTriggerUnit()))
    call PlaySoundBJ(se)
endfunction
function TAr takes nothing returns boolean
    return GetUnitTypeId(GetEnteringUnit()) == 1211117618 and GetHeroLevel(GetEnteringUnit()) >= 10
endfunction
function TBs takes nothing returns boolean
    set ASw = 0
    return Ior("via function reference Imp3DragonFortress, line 405")
endfunction
function TCs takes nothing returns nothing
    set ASw = 0
    call FEs("via function reference JobAdvancementQuestHandler, line 1189")
endfunction
function TKr takes nothing returns boolean
    return GetUnitTypeId(GetOrderTargetUnit()) == ct and IsUnitInGroup(GetTriggerUnit(), kpu(300., GetUnitLoc(GetOrderTargetUnit()))) and IsPlayerInForce(GetOwningPlayer(GetTriggerUnit()), pc[$00000002])
endfunction
function TNi takes nothing returns boolean
    return GetUnitTypeId(GetOrderTargetUnit()) == XS and IsUnitInGroup(GetTriggerUnit(), kpu(300., GetUnitLoc(GetOrderTargetUnit()))) and IsPlayerInForce(GetOwningPlayer(GetTriggerUnit()), pc[$00000006])
endfunction
function TOr takes nothing returns nothing
    call ForceAddPlayer(nr, GetOwningPlayer(GetTriggerUnit()))
    call DisplayTextToForce(MwS(GetOwningPlayer(GetTriggerUnit())), "|cffffcc00Class Trainer|r : |cff87ceebWell, well well...Another hopeful wanting to be a Knight. Tell you what, in order to be initiated into the Order of Silvasia's Finest Knights, you will have to demostrate your chivalry and skill. If you can kill Frostfang, who resides in the Ice Dungeon southeast of here, I'll initiate you into our Order. Now get moving, soldier!")
    call PlaySoundBJ(Se)
    call T_i(GetOwningPlayer(GetTriggerUnit()), $00000000, "2nd Job Advancement Quest", "Blast! Why does everything have to be so hard? I have to kill Frostfang in order to advance into a Knight. Let's hope he's friendly...", "ReplaceableTextures\\CommandButtons\\BTNHire.blp")
    set dr[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))] = bj_lastCreatedQuest
endfunction
function k8w takes string G8w returns nothing
    local unit g8w
    local unit h8w
    local unit F8w
    set DSw[ASw] = G8w
    set ASw = ASw + 1
    if GetTriggerUnit() == null then
        set h8w = GetEnteringUnit()
    else
        set h8w = GetTriggerUnit()
    endif
    set g8w = h8w
    if Jyr(SD, Aei(g8w), "when calling has in PVP, line 59") then
        set F8w = iCu(wps(SD, Aei(g8w), "when calling get in PVP, line 60"), "when calling unitFromIndex in PVP, line 60")
        if g8w != null and F8w != null then
            call dii("|cffff0000Some magical barrier prevents you from continuing PvP in this area.|r", 5., eDs(g8w))
            call dii("|cffff0000Some magical barrier prevents you from continuing PvP in this area.|r", 5., eDs(F8w))
            call L9u(g8w, F8w, eDs(g8w), eDs(F8w), "when calling pvp_finish in PVP, line 65")
        endif
    endif
    set ASw = ASw - 1
    set g8w = null
    set h8w = null
    set F8w = null
endfunction
function TPi takes nothing returns nothing
    set ASw = 0
    call k8w("via function reference PVP, line 331")
endfunction
function IGS takes nothing returns boolean
    return GetUnitTypeId(GetTriggerUnit()) == 1211118152 or GetUnitTypeId(GetTriggerUnit()) == 1211118155
endfunction
function TPs takes nothing returns boolean
    return GetSpellAbilityId() == 1093679431 and GetPlayerState(GetOwningPlayer(GetTriggerUnit()), PLAYER_STATE_RESOURCE_FOOD_USED) == 100 and oS[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))] == 1 and IGS()
endfunction
function TPt takes nothing returns nothing
    set cS = f1s(bj_mapInitialPlayableArea)
    call ForGroupBJ(cS, ilw)
    call DestroyGroup(cS)
    call DestroyTrigger(GetTriggeringTrigger())
endfunction
function E3s takes nothing returns boolean
    return ds[1 + GetPlayerId(GetOwningPlayer(GetKillingUnit()))] >= 15
endfunction
function TUs takes nothing returns nothing
    set ds[1 + GetPlayerId(GetOwningPlayer(GetKillingUnit()))] = ds[1 + GetPlayerId(GetOwningPlayer(GetKillingUnit()))] + 1
    if E3s() then
        call QuestMessageBJ(MwS(GetOwningPlayer(GetKillingUnit())), $00000002, "|cffffcc003rd Job Advancement Quest Completed|r.")
        call ForceAddPlayer(Vr, GetOwningPlayer(GetKillingUnit()))
    else
        call QuestMessageBJ(MwS(GetOwningPlayer(GetKillingUnit())), $00000001, I2S(ds[1 + GetPlayerId(GetOwningPlayer(GetKillingUnit()))]) + " Centaur(s) killed.")
    endif
endfunction
function TVs takes nothing returns nothing
    call GroupRemoveUnit(mo, GetEnumUnit())
    call PauseUnit(GetEnumUnit(), false)
    set hu[GetPlayerId(GetOwningPlayer(GetEnumUnit()))] = false
endfunction
function hYs takes string GYs returns integer
    local integer gYs
    set DSw[ASw] = GYs
    set ASw = ASw + 1
    if NX == 0 then
        if MX < 32768 then
            set MX = MX + 1
            set gYs = MX
            set wC[gYs] = 831
        else
            call tNr("Out of memory: Could not create CallbackSingle_doAfter_Hope_Effect.", "when calling error in Hope_Effect, line 54")
            set gYs = 0
        endif
    else
        set NX = NX - 1
        set gYs = BX[NX]
        set wC[gYs] = 831
    endif
    set ASw = ASw - 1
    return gYs
endfunction
function hQt takes string cQt returns nothing
    local unit oQt
    local group OQt
    local integer lQt
    local integer bQt
    local string yQt
    local effect pQt
    local effect eQt
    local group qQt
    local unit aQt
    local group nQt
    local unit dQt
    local integer fQt
    local integer RQt
    local string TQt
    local effect YQt
    local effect GQt
    local effect gQt
    set DSw[ASw] = cQt
    set ASw = ASw + 1
    set oQt = GetTriggerUnit()
    if oQt != null and GpS(gQ, hgr(eDs(oQt)), "when calling has in Hope_Effect, line 25") and(not(r5S(oQt) == 1211117617 or r5S(oQt) == 1211117618)) and(not(GetSpellAbilityId() == l2s(Iji("A05I", "when calling unObfuscate in Hope_Effect, line 25"), "when calling fromRawCode in Hope_Effect, line 25"))) then
        set fO = GetSpellAbilityUnit()
        set OQt = null
        set lQt = GetRandomInt($00000001, $00000064)
        if lQt <= 20 then
            set bQt = qmu(AOS(fO, D3w(fO)), qcw, acw, .015, .030, "|cffffa500Messiah!|r", 12., 2., $00000064, $00000064, $00000064, $00000000, null, "when calling _CreateTTExEntity_fading in Hope_Effect, line 31")
            set yQt = ""
            if HEi(hgr(eDs(oQt)), hgr(nD), "when calling ifDisplayEffectProcs in Hope_Effect, line 33") then
    set yQt = "Abilities/Spells/Undead/DeathPact/DeathPactTarget.mdl"
            else
    call kXi(bQt, false)
            endif
            set pQt = uSs(ANw(GetSpellAbilityUnit()), XSw, yQt)
            call yYi(pQt, 5., "when calling destrAdvTimed in Hope_Effect, line 37")
            set eQt = pQt
            call Wwu(eQt, 2.)
            set OQt = UFS(600., GetUnitLoc(fO), Condition(Qmw))
            set qQt = XbS(OQt)
            loop
    exitwhen not hJw(qQt)
    set aQt = tPr(qQt)
    call SetUnitLifePercentBJ(aQt, GetUnitLifePercent(aQt) + 30.)
            endloop
            call lxs(qQt)
        endif
        if 21 <= lQt and lQt <= 30 then
            set OQt = UFS(600., GetUnitLoc(fO), Condition(Qmw))
            set nQt = XbS(OQt)
            loop
    exitwhen not hJw(nQt)
    set dQt = tPr(nQt)
    call V5S(dQt, oW)
    call V5S(dQt, OW)
    set fQt = hYs("when calling alloc_CallbackSingle_doAfter_Hope_Effect in Hope_Effect, line 54")
    call RUs(fQt)
    set k8[fQt] = dQt
    call Ybr(5., fQt, "when calling doAfter in Hope_Effect, line 54")
            endloop
            call lxs(nQt)
            set RQt = qmu(AOS(fO, D3w(GetSpellAbilityUnit())), qcw, acw, .015, .030, "|cffffa500Immanuel!|r", 12., 2., $00000064, $00000064, $00000064, $00000000, null, "when calling _CreateTTExEntity_fading in Hope_Effect, line 59")
            set TQt = ""
            if HEi(hgr(eDs(oQt)), hgr(nD), "when calling ifDisplayEffectProcs in Hope_Effect, line 61") then
    set TQt = "Abilities/Spells/Undead/ReplenishHealth/ReplenishHealthCasterOverhead.mdl"
            else
    call kXi(RQt, false)
            endif
            set YQt = uSs(ANw(GetSpellAbilityUnit()), XSw, TQt)
            call yYi(YQt, 5., "when calling destrAdvTimed in Hope_Effect, line 65")
            set GQt = YQt
            call Wwu(GQt, 3.)
            set gQt = GQt
            call vQs(gQt, wor(ANw(GetSpellAbilityUnit()), XSw) + 120.)
        endif
        call DestroyGroup(OQt)
    endif
    set ASw = ASw - 1
    set oQt = null
    set OQt = null
    set pQt = null
    set eQt = null
    set qQt = null
    set aQt = null
    set nQt = null
    set dQt = null
    set YQt = null
    set GQt = null
    set gQt = null
endfunction
function TVt takes nothing returns nothing
    set ASw = 0
    call hQt("via function reference Hope_Effect, line 77")
endfunction
function T_S takes nothing returns nothing
    call UnitRemoveAbility(GetEnumUnit(), $42303137)
    call SetUnitInvulnerable(GetEnumUnit(), false)
    call PauseUnit(GetEnumUnit(), false)
endfunction
function h1s takes nothing returns boolean
    return yi == 4
endfunction
function Tas takes nothing returns nothing
    call EnableTrigger(aR)
    call DisableTrigger(dR)
    call DisableTrigger(fR)
    call DisableTrigger(RR)
    call DisableTrigger(TR)
    call DestroyTimerDialog(fi)
    call PauseTimerBJ(true, di)
    set bw = true
    if h1s() then
        set ni = ni + 1
        call DisplayTimedTextToForce(Rc[$0000000B], 12., "|cffffcc00You have advanced to the next stage!|r")
    else
        call DisplayTimedTextToForce(Rc[$0000000B], 12., "|cffffcc00You have picked the wrong portal!|r")
    endif
    set vo = GetRectCenter(ly)
    call ForGroupBJ(fc[$0000000B], bbw)
    call ForForce(Rc[$0000000B], ybw)
    call RemoveLocation(vo)
endfunction
function dBt takes nothing returns boolean
    return GetUnitTypeId(GetTriggerUnit()) == 1211117620
endfunction
function rci takes nothing returns boolean
    return GetUnitTypeId(GetTriggerUnit()) == 1211117623
endfunction
function Thr takes nothing returns boolean
    return GetBooleanOr(rci(), dBt()) and GetOrderTargetUnit() == iG and IsPlayerInForce(GetOwningPlayer(GetTriggerUnit()), Gr) and IsUnitInGroup(GetTriggerUnit(), kpu(300., GetUnitLoc(GetOrderTargetUnit())))
endfunction
function R1s takes nothing returns boolean
    return GetUnitTypeId(GetDyingUnit()) == 1848652340
endfunction
function S6t takes nothing returns boolean
    return GetUnitTypeId(GetDyingUnit()) == 1429221433
endfunction
function TiS takes nothing returns nothing
    if R1s() then
        call DisplayTimedTextToForce(Rc[$00000008], 5., "|cffffcc00You are now transferred to the next level.|r")
        call PolledWait(c)
        set vo = GetRectCenter(Zb)
        call ForGroupBJ(fc[$00000008], Jlw)
        call ForForce(Rc[$00000008], Klw)
        call RemoveLocation(vo)
    endif
    if S6t() then
        set Ni = 8
        set Mi = 7
        call ForForce(Rc[$00000008], flw)
        call DisplayTimedTextToForce(Rc[$00000008], 10., "|cffffcc00You have completed the dungeon!|r Type -|c00ff0000d|r|c00ff1500o|r|c00ff3000n|r|c00ff4500e|r to exit the dungeon after looting your reward.")
        call DisplayTimedTextToForce(Rc[$00000008], 10., "|cffffcc00Type|r |c00ff0000-s2s X|r|cffffcc00 to send an item to your stash. (1-6)|r")
        call PolledWait(S)
        set pr[$00000001] = 1227895609
        set pr[$00000002] = 1227895607
        set pr[$00000003] = 1227895619
        set pr[$00000004] = 1227895608
        set pr[$00000005] = 1227895618
        set pr[$00000006] = 1227895605
        set pr[$00000007] = 1227895617
        set Ni = 8
        set Mi = 7
        call ForForce(Rc[$00000008], Llw)
        call ForGroupBJ(fc[$00000008], Xlw)
        call TriggerExecute(cw)
        call GroupClear(fc[$00000008])
        call ForceClear(Rc[$00000008])
        call DisableTrigger(GetTriggeringTrigger())
    endif
endfunction
function Tiu takes nothing returns boolean
    return GetUnitTypeId(GetTriggerUnit()) == 1211117643 and GetUnitTypeId(GetOrderTargetUnit()) == 1747988808 and IsPlayerInForce(GetOwningPlayer(GetTriggerUnit()), Kr) and IsPlayerInForce(GetOwningPlayer(GetTriggerUnit()), Cr) == false and IsUnitInGroup(GetTriggerUnit(), kpu(300., GetUnitLoc(GetOrderTargetUnit())))
endfunction
function Tku takes nothing returns boolean
    return GetUnitTypeId(GetTriggerUnit()) == 1848652378
endfunction
function Tts takes nothing returns boolean
    return (GetItemTypeId(GetManipulatedItem()) == 1227895891 and IsUnitType(GetTriggerUnit(), UNIT_TYPE_HERO) and IsPlayerInForce(GetOwningPlayer(GetTriggerUnit()), Uo[$00000001]) == false and Zo[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))] == 1 and Po[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))] == 1 and Eo[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))] >= 25) != false
endfunction
function X0u takes nothing returns boolean
    return IsUnitEnemy(GetFilterUnit(), GetOwningPlayer(GetTriggerUnit()))
endfunction
function Ttt takes nothing returns boolean
    return GetBooleanAnd(X0u(), true)
endfunction
function S3s takes integer i3s returns integer
    return Lww[Cww[wuw[i3s]]]
endfunction
function sKs takes integer wKs, string uKs returns integer
    local integer rKs
    set DSw[ASw] = uKs
    set ASw = ASw + 1
    if yN[wKs] == 0 then
        if wKs == 0 then
            call tNr("Nullpointer exception when calling LinkedList.getFirst", "when calling error in LinkedList, line 88")
        else
            call tNr("Called LinkedList.getFirst on invalid object.", "when calling error in LinkedList, line 88")
        endif
    endif
    set rKs = S3s(wKs)
    set ASw = ASw - 1
    return rKs
endfunction
function gGu takes integer TGu, string YGu returns integer
    local integer GGu
    set DSw[ASw] = YGu
    set ASw = ASw + 1
    set GGu = sKs(CM[TGu], "when calling getFirst in CustomLinkedList, line 69")
    set ASw = ASw - 1
    return GGu
endfunction
function Chu takes integer Khu, string Lhu returns integer
    local integer Xhu
    set DSw[ASw] = Lhu
    set ASw = ASw + 1
    if sV[Khu] == 0 then
        if Khu == 0 then
            call tNr("Nullpointer exception when calling CustomLinkedList.getFirst", "when calling error in CustomLinkedList, line 68")
        else
            call tNr("Called CustomLinkedList.getFirst on invalid object.", "when calling error in CustomLinkedList, line 68")
        endif
    endif
    set Xhu = gGu(Khu, "when calling getFirst in CustomLinkedList, line 68")
    set ASw = ASw - 1
    return Xhu
endfunction
function G0S takes unit Y0S returns boolean
    return IsUnitIllusion(Y0S)
endfunction
function Ecu takes integer mcu, string Qcu returns integer
    local integer Wcu
    set DSw[ASw] = Qcu
    set ASw = ASw + 1
    set Wcu = wds(CM[mcu], "when calling size in CustomLinkedList, line 85")
    set ASw = ASw - 1
    return Wcu
endfunction
function Lis takes integer His, string Jis returns integer
    local integer Kis
    set DSw[ASw] = Jis
    set ASw = ASw + 1
    if sV[His] == 0 then
        if His == 0 then
            call tNr("Nullpointer exception when calling CustomLinkedList.size", "when calling error in CustomLinkedList, line 84")
        else
            call tNr("Called CustomLinkedList.size on invalid object.", "when calling error in CustomLinkedList, line 84")
        endif
    endif
    set Kis = Ecu(His, "when calling size in CustomLinkedList, line 84")
    set ASw = ASw - 1
    return Kis
endfunction
function Ycr takes string Rcr returns integer
    local integer Tcr
    set DSw[ASw] = Rcr
    set ASw = ASw + 1
    if NX == 0 then
        if MX < 32768 then
            set MX = MX + 1
            set Tcr = MX
            set wC[Tcr] = 756
        else
            call tNr("Out of memory: Could not create CallbackSingle_doAfter_DungeonCmds.", "when calling error in DungeonCmds, line 873")
            set Tcr = 0
        endif
    else
        set NX = NX - 1
        set Tcr = BX[NX]
        set wC[Tcr] = 756
    endif
    set ASw = ASw - 1
    return Tcr
endfunction
function Ijs takes integer Ejs, string Zjs returns integer
    local integer Ujs
    set DSw[ASw] = Zjs
    set ASw = ASw + 1
    set Ujs = cjr(CM[Ejs], "when calling pop in CustomLinkedList, line 97")
    set ASw = ASw - 1
    return Ujs
endfunction
function j9r takes integer h9r, string F9r returns integer
    local integer k9r
    set DSw[ASw] = F9r
    set ASw = ASw + 1
    if sV[h9r] == 0 then
        if h9r == 0 then
            call tNr("Nullpointer exception when calling CustomLinkedList.pop", "when calling error in CustomLinkedList, line 96")
        else
            call tNr("Called CustomLinkedList.pop on invalid object.", "when calling error in CustomLinkedList, line 96")
        endif
    endif
    set k9r = Ijs(h9r, "when calling pop in CustomLinkedList, line 96")
    set ASw = ASw - 1
    return k9r
endfunction
function KOs takes string HOs returns integer
    local integer JOs
    set DSw[ASw] = HOs
    set ASw = ASw + 1
    if NX == 0 then
        if MX < 32768 then
            set MX = MX + 1
            set JOs = MX
            set wC[JOs] = 755
        else
            call tNr("Out of memory: Could not create CallbackSingle_doAfter_DungeonCmds.", "when calling error in DungeonCmds, line 743")
            set JOs = 0
        endif
    else
        set NX = NX - 1
        set JOs = BX[NX]
        set wC[JOs] = 755
    endif
    set ASw = ASw - 1
    return JOs
endfunction
function N0i takes string V0i returns integer
    local integer B0i
    set DSw[ASw] = V0i
    set ASw = ASw + 1
    if NX == 0 then
        if MX < 32768 then
            set MX = MX + 1
            set B0i = MX
            set wC[B0i] = 754
        else
            call tNr("Out of memory: Could not create CallbackSingle_doAfter_DungeonCmds.", "when calling error in DungeonCmds, line 712")
            set B0i = 0
        endif
    else
        set NX = NX - 1
        set B0i = BX[NX]
        set wC[B0i] = 754
    endif
    set ASw = ASw - 1
    return B0i
endfunction
function Pou takes string Uou returns integer
    local integer Iou
    set DSw[ASw] = Uou
    set ASw = ASw + 1
    if NX == 0 then
        if MX < 32768 then
            set MX = MX + 1
            set Iou = MX
            set wC[Iou] = 751
        else
            call tNr("Out of memory: Could not create CallbackSingle_doAfter_DungeonCmds.", "when calling error in DungeonCmds, line 667")
            set Iou = 0
        endif
    else
        set NX = NX - 1
        set Iou = BX[NX]
        set wC[Iou] = 751
    endif
    set ASw = ASw - 1
    return Iou
endfunction
function utt takes string Mst returns integer
    local integer wtt
    set DSw[ASw] = Mst
    set ASw = ASw + 1
    if NX == 0 then
        if MX < 32768 then
            set MX = MX + 1
            set wtt = MX
            set wC[wtt] = 752
        else
            call tNr("Out of memory: Could not create CallbackSingle_doAfter_DungeonCmds.", "when calling error in DungeonCmds, line 702")
            set wtt = 0
        endif
    else
        set NX = NX - 1
        set wtt = BX[NX]
        set wC[wtt] = 752
    endif
    set ASw = ASw - 1
    return wtt
endfunction
function wIs takes string NUs returns integer
    local integer MUs
    set DSw[ASw] = NUs
    set ASw = ASw + 1
    if NX == 0 then
        if MX < 32768 then
            set MX = MX + 1
            set MUs = MX
            set wC[MUs] = 753
        else
            call tNr("Out of memory: Could not create CallbackSingle_doAfter_DungeonCmds.", "when calling error in DungeonCmds, line 709")
            set MUs = 0
        endif
    else
        set NX = NX - 1
        set MUs = BX[NX]
        set wC[MUs] = 753
    endif
    set ASw = ASw - 1
    return MUs
endfunction
function B9t takes integer K9t, integer L9t, string X9t returns nothing
    local integer C9t
    local integer V9t
    set DSw[ASw] = X9t
    set ASw = ASw + 1
    set C9t = c5r(L9t, "when calling iterator in LinkedList, line 47")
    loop
        exitwhen not Tji(C9t)
        set V9t = LXi(C9t)
        call vwt(K9t, V9t, "when calling add in LinkedList, line 48")
    endloop
    call vms(C9t, "when calling close in LinkedList, line 47")
    set ASw = ASw - 1
endfunction
function yEs takes integer OEs, integer lEs, string bEs returns nothing
    set DSw[ASw] = bEs
    set ASw = ASw + 1
    if yN[OEs] == 0 then
        if OEs == 0 then
            call tNr("Nullpointer exception when calling LinkedList.addAll", "when calling error in LinkedList, line 46")
        else
            call tNr("Called LinkedList.addAll on invalid object.", "when calling error in LinkedList, line 46")
        endif
    endif
    call B9t(OEs, lEs, "when calling addAll in LinkedList, line 46")
    set ASw = ASw - 1
endfunction
function vsr takes player Vrr, integer Brr, boolean Nrr, string Mrr returns nothing
    local integer wsr
    local integer usr
    local integer rsr
    local integer ssr
    local integer tsr
    local integer isr
    local integer Ssr
    local integer csr
    local integer osr
    local integer Osr
    local integer lsr
    local integer bsr
    local integer ysr
    local integer psr
    local boolean esr
    local boolean qsr
    local integer asr
    local integer nsr
    local integer dsr
    local integer fsr
    local integer Rsr
    local integer Tsr
    local group Ysr
    local unit Gsr
    local integer gsr
    local real hsr
    local real Fsr
    local real ksr
    local real jsr
    local real xsr
    set DSw[ASw] = Mrr
    set ASw = ASw + 1
    set wsr = hgr(Vrr)
    set usr =- 1
    set rsr = 0
    set ssr = 0
    set tsr = 0
    set isr = GetRandomInt(bx, yx)
    set Ssr = tOS(Vrr, "when calling getCustomPlayer in DungeonCmds, line 594")
    set csr = 0
    set osr = 0
    set Osr = 0
    set lsr = 0
    call Z6r(wsr, S * 2., "when calling disableKillCmdTimed in DungeonCmds, line 602")
    set bsr = Brr
    if bsr == nx then
        set osr = Ux
        set rsr = k6w("29", "when calling unObfuscateInt in DungeonCmds, line 608")
        set ssr = 15000
    elseif bsr == dx then
        set osr = Ix
        set Osr = Px
        set lsr = Ax
        set tsr = kw
        set csr = Wx
        set rsr = k6w("83", "when calling unObfuscateInt in DungeonCmds, line 616")
        set ssr = 25000
    elseif bsr == fx then
        set osr = Dx
        set Osr = Hx
        set lsr = Jx
        set tsr = jw
        set csr = Ex
        set rsr = k6w("73", "when calling unObfuscateInt in DungeonCmds, line 624")
        set ssr = 35000
    elseif bsr == Rx then
        set osr = Kx
        set Osr = Lx
        if lst(hqs(xMi(xus(wsr, "when calling getCustomPlayer in DungeonCmds, line 630"), "when calling getCHero in DungeonCmds, line 630"), "when calling getHero in DungeonCmds, line 630")) then
            if NZ then
    set ysr = k6w("9090909085", "when calling unObfuscateInt in DungeonCmds, line 631")
            else
    set ysr = k6w("90909085", "when calling unObfuscateInt in DungeonCmds, line 631")
            endif
            set tsr = ysr
            call GVw(ax, wsr, tsr, "when calling put in DungeonCmds, line 632")
        else
            if NZ then
    set psr = k6w("9090909085", "when calling unObfuscateInt in DungeonCmds, line 634")
            else
    set psr = wps(ax, wsr, "when calling get in DungeonCmds, line 634")
            endif
            set tsr = psr
        endif
        set csr = Kx
        set rsr = k6w("60", "when calling unObfuscateInt in DungeonCmds, line 637")
        set ssr = 70000
    elseif bsr == Tx then
        set ssr = 100000
        set rsr = k6w("9083", "when calling unObfuscateInt in DungeonCmds, line 641")
    endif
    if osr != 0 then
        if Osr == 0 and lsr == 0 then
            set usr = C_r(osr, GetRandomInt($00000000, wds(osr, "when calling size in DungeonCmds, line 645") - 1), "when calling get in DungeonCmds, line 645")
        elseif Osr != 0 or lsr != 0 then
            set esr = isr <= tsr
            set isr = GetRandomInt(bx, yx)
            set qsr = GpS(csr, isr, "when calling has in DungeonCmds, line 649")
            if esr and Osr != 0 and osr != 0 then
    call yEs(Xx, osr, "when calling addAll in DungeonCmds, line 652")
    call yEs(Xx, Osr, "when calling addAll in DungeonCmds, line 653")
    call yEs(Xx, osr, "when calling addAll in DungeonCmds, line 654")
            endif
            if qsr and lsr != 0 and osr != 0 then
    call yEs(Xx, osr, "when calling addAll in DungeonCmds, line 656")
    call yEs(Xx, lsr, "when calling addAll in DungeonCmds, line 657")
            endif
            if wds(Xx, "when calling size in DungeonCmds, line 659") != 0 then
    set usr = C_r(Xx, GetRandomInt($00000000, wds(Xx, "when calling size in DungeonCmds, line 660") - 1), "when calling get in DungeonCmds, line 660")
    call u3w(Xx, "when calling clear in DungeonCmds, line 661")
            elseif wds(osr, "when calling size in DungeonCmds, line 662") != 0 then
    set usr = C_r(osr, GetRandomInt($00000000, wds(osr, "when calling size in DungeonCmds, line 663") - 1), "when calling get in DungeonCmds, line 663")
            endif
        endif
        if usr !=- 1 then
            if not Nrr then
    set hsr = S / 2.
    set asr = Pou("when calling alloc_CallbackSingle_doAfter_DungeonCmds in DungeonCmds, line 667")
    call RUs(asr)
    set y1[asr] = Ssr
    set p1[asr] = usr
    set e1[asr] = Brr
    set q1[asr] = wsr
    set a1[asr] = Vrr
    call Ybr(hsr, asr, "when calling doAfter in DungeonCmds, line 667")
            else
    if Jyr(kx, usr, "when calling has in DungeonCmds, line 690") then
                    call iUr(kx, usr, wps(kx, usr, "when calling get in DungeonCmds, line 691") + 1, "when calling put in DungeonCmds, line 691")
    else
                    call iUr(kx, usr, $00000001, "when calling put in DungeonCmds, line 693")
    endif
    if GpS(Cx, usr, "when calling has in DungeonCmds, line 695") then
                    call GVw(ax, wsr, xw, "when calling put in DungeonCmds, line 696")
    endif
            endif
        elseif Brr == Rx then
            if not Nrr then
    set ssr = aJi(ssr * GetRandomReal(1.8, 2.2))
    set rsr = aJi(rsr * GetRandomReal(1.8, 2.2))
    set Fsr = S
    set nsr = utt("when calling alloc_CallbackSingle_doAfter_DungeonCmds in DungeonCmds, line 702")
    call RUs(nsr)
    set n1[nsr] = rsr
    set d1[nsr] = ssr
    set f1[nsr] = wsr
    call Ybr(Fsr, nsr, "when calling doAfter in DungeonCmds, line 702")
    if wps(ax, wsr, "when calling get in DungeonCmds, line 705") < vw then
                    if not lst(hqs(xMi(xus(wsr, "when calling getCustomPlayer in DungeonCmds, line 706"), "when calling getCHero in DungeonCmds, line 706"), "when calling getHero in DungeonCmds, line 706")) then
                        call GVw(ax, wsr, wps(ax, wsr, "when calling get in DungeonCmds, line 707") + 500, "when calling put in DungeonCmds, line 707")
                    endif
                    set ksr = S
                    set dsr = wIs("when calling alloc_CallbackSingle_doAfter_DungeonCmds in DungeonCmds, line 709")
                    call RUs(dsr)
                    set R1[dsr] = wsr
                    set T1[dsr] = Vrr
                    call Ybr(ksr, dsr, "when calling doAfter in DungeonCmds, line 709")
    else
                    set jsr = S
                    set fsr = N0i("when calling alloc_CallbackSingle_doAfter_DungeonCmds in DungeonCmds, line 712")
                    call RUs(fsr)
                    set Y1[fsr] = wsr
                    set G1[fsr] = Vrr
                    call Ybr(jsr, fsr, "when calling doAfter in DungeonCmds, line 712")
    endif
            elseif wps(ax, wsr, "when calling get in DungeonCmds, line 715") < vw then
    if not lst(hqs(xMi(xus(wsr, "when calling getCustomPlayer in DungeonCmds, line 716"), "when calling getCHero in DungeonCmds, line 716"), "when calling getHero in DungeonCmds, line 716")) then
                    call GVw(ax, wsr, wps(ax, wsr, "when calling get in DungeonCmds, line 717") + 500, "when calling put in DungeonCmds, line 717")
    endif
            endif
        endif
        if Nrr and usr ==- 1 then
            if Jyr(kx, $5A5A5A5A, "when calling has in DungeonCmds, line 720") then
    call iUr(kx, $5A5A5A5A, wps(kx, $5A5A5A5A, "when calling get in DungeonCmds, line 721") + 1, "when calling put in DungeonCmds, line 721")
            else
    call iUr(kx, $5A5A5A5A, $00000001, "when calling put in DungeonCmds, line 723")
            endif
        endif
    endif
    if not Nrr then
        call dVt(Vrr, ssr)
        call N3r(Vrr, rsr)
    endif
    if Brr == 12 then
        if Jyr(GW, wsr, "when calling has in DungeonCmds, line 732") then
            set Tsr = wps(GW, wsr, "when calling get in DungeonCmds, line 732")
        else
            set Tsr = 0
        endif
        set Rsr = Tsr
        call GVw(GW, wsr, $00000000, "when calling put in DungeonCmds, line 733")
        if Rsr > 0 and Rsr <= 8 and(not Nrr) then
            call N3r(Vrr, Rsr)
            call dii(Iji("Your received additional ", "when calling unObfuscate in DungeonCmds, line 736") + fju(Rsr) + Iji(" shards for participating in the maze.", "when calling unObfuscate in DungeonCmds, line 736"), 8., Vrr)
        endif
    endif
    if not Nrr then
        set Ysr = XbS(fc[Brr])
        loop
            exitwhen not hJw(Ysr)
            set Gsr = tPr(Ysr)
            if eDs(Gsr) == Vrr then
    call xvu(Gsr, "stop")
    call U8s(Gsr)
            endif
        endloop
        call lxs(Ysr)
        set xsr = S
        set gsr = KOs("when calling alloc_CallbackSingle_doAfter_DungeonCmds in DungeonCmds, line 743")
        call RUs(gsr)
        set g1[gsr] = Vrr
        set h1[gsr] = Brr
        call Ybr(xsr, gsr, "when calling doAfter in DungeonCmds, line 743")
    endif
    set ASw = ASw - 1
    set Ysr = null
    set Gsr = null
endfunction
function xOi takes string lOi returns nothing
    local unit bOi
    local integer yOi
    local integer pOi
    local boolean eOi
    local integer qOi
    local integer aOi
    local integer nOi
    local integer dOi
    local string fOi
    local string ROi
    local integer TOi
    local string YOi
    local string GOi
    local integer gOi
    local integer hOi
    local integer FOi
    local integer kOi
    local real jOi
    set DSw[ASw] = lOi
    set ASw = ASw + 1
    set bOi = GetDyingUnit()
    set yOi = r5S(bOi)
    set pOi =- 1
    set eOi = false
    set qOi = yOi
    if qOi == l2s(Iji("U007", "when calling unObfuscate in DungeonCmds, line 801"), "when calling fromRawCode in DungeonCmds, line 801") then
        set eOi = true
        set pOi = nx
    elseif qOi == l2s(Iji("U00C", "when calling unObfuscate in DungeonCmds, line 805"), "when calling fromRawCode in DungeonCmds, line 805") then
        set eOi = true
        set pOi = dx
    elseif qOi == l2s(Iji("U00I", "when calling unObfuscate in DungeonCmds, line 809"), "when calling fromRawCode in DungeonCmds, line 809") then
        set eOi = true
        set pOi = fx
        set Dc = false
        call StopMusic(false)
        call PlayMusicBJ(Ge)
    elseif qOi == l2s(Iji("U00R", "when calling unObfuscate in DungeonCmds, line 816"), "when calling fromRawCode in DungeonCmds, line 816") then
        if not G0S(bOi) then
            set vx = true
            set eOi = vx and xx
            set pOi = Rx
        endif
    elseif qOi == l2s(Iji("U00Q", "when calling unObfuscate in DungeonCmds, line 821"), "when calling fromRawCode in DungeonCmds, line 821") then
        set xx = true
        set eOi = vx and xx
        set pOi = Rx
    elseif qOi == l2s(Iji("U00V", "when calling unObfuscate in DungeonCmds, line 825"), "when calling fromRawCode in DungeonCmds, line 825") then
        set eOi = false
        set pOi = Tx
    endif
    if eOi and pOi !=- 1 then
        set aOi = SNi("when calling addCustomList in DungeonCmds, line 830")
        set nOi = c5r(gQ, "when calling iterator in DungeonCmds, line 831")
        loop
            exitwhen not Tji(nOi)
            set dOi = LXi(nOi)
            if ONi(Rc[pOi], aD[dOi]) then
    call q9i(aOi, dOi, "when calling add in DungeonCmds, line 833")
            endif
        endloop
        call vms(nOi, "when calling close in DungeonCmds, line 831")
        if pOi == Tx or pOi == Rx or pOi == fx or pOi == dx or pOi == nx then
            set fOi = ""
            set ROi = ""
            set TOi = pOi
            if TOi == nx then
    set fOi = "Imp1"
    set ROi = L7s(GQ - Yx, false)
            elseif TOi == dx then
    set fOi = "Imp2"
    set ROi = L7s(GQ - Gx, false)
            elseif TOi == fx then
    if PW then
                    set YOi = Iji(" on HARD MODE ", "when calling unObfuscate in DungeonCmds, line 847")
    else
                    set YOi = ""
    endif
    set fOi = "Imp3" + YOi
    set ROi = L7s(GQ - gx, false)
            elseif TOi == Rx then
    if NZ then
                    set GOi = Iji(" on HARD MODE ", "when calling unObfuscate in DungeonCmds, line 851")
    else
                    set GOi = ""
    endif
    set fOi = "Imp4" + GOi
    set ROi = L7s(GQ - hx, false)
            elseif TOi == Tx then
    set fOi = "Imp5"
    set ROi = L7s(GQ - Fx, false)
            endif
            if Lis(aOi, "when calling size in DungeonCmds, line 856") > 1 then
    set gOi = dBw(aOi, "when calling iterator in DungeonCmds, line 857")
    loop
                    exitwhen not Tji(gOi)
                    set hOi = LXi(gOi)
                    call dii("|cff51ff00Your team of " + fju(Lis(aOi, "when calling size in DungeonCmds, line 858")) + " players completed " + fOi + " in " + ROi + "|r", 15., aD[hOi])
    endloop
    call vms(gOi, "when calling close in DungeonCmds, line 857")
            elseif Lis(aOi, "when calling size in DungeonCmds, line 859") == 1 then
    call dii("|cff51ff00You completed " + fOi + " alone in " + ROi + "|r", 15., aD[Chu(aOi, "when calling getFirst in DungeonCmds, line 860")])
            endif
        endif
        loop
            exitwhen not(Lis(aOi, "when calling size in DungeonCmds, line 863") > 0)
            set FOi = j9r(aOi, "when calling pop in DungeonCmds, line 864")
            call dii(Iji("|cffffcc00You have completed the dungeon!|r Type -|c00ff0000d|r|c00ff1500o|r|c00ff3000n|r|c00ff4500e|r to exit the dungeon after looting your reward.", "when calling unObfuscate in DungeonCmds, line 865"), 8., aD[FOi])
            call dii(Iji("|cffffcc00Type|r |c00ff0000-s2s X|r|cffffcc00 to send an item to your stash. (1-6)|r", "when calling unObfuscate in DungeonCmds, line 866"), 8., aD[FOi])
            call vsr(aD[FOi], pOi, false, "when calling dropItemsForPlayer in DungeonCmds, line 867")
            call xLw(FOi, pOi, "when calling unlockMarineFortressCheck in DungeonCmds, line 868")
            call Fis()
        endloop
        call Zii(gFi(aOi, "when calling getId in DungeonCmds, line 871"), "when calling removeCustomList in DungeonCmds, line 871")
        set jOi = S * 2.
        set kOi = Ycr("when calling alloc_CallbackSingle_doAfter_DungeonCmds in DungeonCmds, line 873")
        call RUs(kOi)
        set F1[kOi] = pOi
        call Ybr(jOi, kOi, "when calling doAfter in DungeonCmds, line 873")
    endif
    set ASw = ASw - 1
    set bOi = null
endfunction
function Tvu takes nothing returns nothing
    set ASw = 0
    call xOi("via function reference DungeonCmds, line 964")
endfunction
function Twr takes nothing returns nothing
    call SaveIntegerBJ(1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit())), $00000000, GetHandleIdBJ(GetEnumUnit()), jc)
endfunction
function Txu takes nothing returns nothing
    call ForceAddPlayer(Kr, GetOwningPlayer(GetTriggerUnit()))
    call DisplayTextToForce(MwS(GetOwningPlayer(GetTriggerUnit())), "|cffffcc00Class Trainer|r : |cff87ceebAh, I was expecting you, Knight. Have you come for a promotion? I understand that the King himself has heard of your heroic deeds, and would like to speak to you, but only if you wish to join his royal army and become an Imperial Knight. However, if you wish to opt to become a defender of evil, then I suggest you speak to Emry the Crusader. Now please, enter the cathedral beside me and choose wisely before speaking to them.")
    call PlaySoundBJ(Se)
    call T_i(GetOwningPlayer(GetTriggerUnit()), $00000000, "3rd Job Advancement Quest", "I need to choose - the ever-vigilant fighting path of the Imperial Knight or the heroic defending path of the Crusader.\n- I must speak to King Foltest to become an Imperial Knight.\n- I must speak to Emry the Crusader to become a Crusader.", "ReplaceableTextures\\CommandButtons\\BTNSell.blp")
    set Lr[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))] = bj_lastCreatedQuest
    set ds[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))] = 0
endfunction
function OPt takes unit SPt, string cPt returns boolean
    local boolean oPt
    set DSw[ASw] = cPt
    set ASw = ASw + 1
    set oPt = mks(SPt, $00000001) > k6w("909090908317", "when calling unObfuscateInt in JobAdvancementQuestHandler, line 246") or Q7t(SPt, true) > k6w("9090908317", "when calling unObfuscateInt in JobAdvancementQuestHandler, line 247") or Ges(SPt) > k6w("909090909048", "when calling unObfuscateInt in JobAdvancementQuestHandler, line 248") or JHt(SPt, true) > k6w("9090908317", "when calling unObfuscateInt in JobAdvancementQuestHandler, line 249") or aSr(SPt) > k6w("909090909048", "when calling unObfuscateInt in JobAdvancementQuestHandler, line 250") or str(SPt, true) > k6w("9090908317", "when calling unObfuscateInt in JobAdvancementQuestHandler, line 251")
    set ASw = ASw - 1
    return oPt
endfunction
function Rqu takes string equ returns nothing
    local integer qqu
    local integer aqu
    local integer nqu
    local integer dqu
    local unit fqu
    set DSw[ASw] = equ
    set ASw = ASw + 1
    set qqu = c5r(gQ, "when calling iterator in JobAdvancementQuestHandler, line 254")
    loop
        exitwhen not Tji(qqu)
        set aqu = LXi(qqu)
        set nqu = xus(aqu, "when calling getCustomPlayer in JobAdvancementQuestHandler, line 255")
        set dqu = xMi(nqu, "when calling getCHero in JobAdvancementQuestHandler, line 256")
        if dqu != 0 then
            set fqu = hqs(dqu, "when calling getHero in JobAdvancementQuestHandler, line 258")
            if fqu != null and yXu(fqu) and t_u(fqu) then
    if OPt(fqu, "when calling anitCheatCheckHeroUnitsStatsBool4 in JobAdvancementQuestHandler, line 260") then
                    if fqu != null then
                        call CAs(fqu, "when calling ac_addRandomDebuff1 in JobAdvancementQuestHandler, line 264")
                    endif
                    call dii(Iji("You have unlocked the secret power...", "when calling unObfuscate in JobAdvancementQuestHandler, line 266"), 5., eDs(fqu))
    endif
            endif
        endif
    endloop
    call vms(qqu, "when calling close in JobAdvancementQuestHandler, line 254")
    set tu = true
    set ASw = ASw - 1
    set fqu = null
endfunction
function r_t takes string M0t returns nothing
    local integer w_t
    local string u_t
    set DSw[ASw] = M0t
    set ASw = ASw + 1
    set w_t = hgr(GetTriggerPlayer())
    set u_t = GetEventPlayerChatString()
    if not Prt(w_t, u_t, "when calling isCommandHandled in JobAdvancementQuestHandler, line 506") then
        call iUi("when calling periodicalItemCheck in JobAdvancementQuestHandler, line 507")
        call Rqu("when calling anitCheatCheckHeroUnitsStatsPeriodic4 in JobAdvancementQuestHandler, line 508")
    endif
    set ASw = ASw - 1
endfunction
function U1r takes nothing returns nothing
    set ASw = 0
    call r_t("via function reference JobAdvancementQuestHandler, line 1006")
endfunction
function U2S takes nothing returns nothing
    call DisplayTextToForce(MwS(GetOwningPlayer(GetTriggerUnit())), "|cffffcc00Class Trainer|r : |cff87ceebI can feel the immense power growing within you, initiate! You have mastered the sources well, and shall be an initiate no longer. As a mage, the spells you cast shall inflict greater damage than ever before.")
    call PlaySoundBJ(re)
    call SetHeroLevelBJ(GetTriggerUnit(), $00000001, false)
    call ReplaceUnitBJ(GetTriggerUnit(), $48303049, $00000002)
    call SelectUnitForPlayerSingle(bj_lastReplacedUnit, GetOwningPlayer(GetTriggerUnit()))
    call SetHeroLevel(bj_lastReplacedUnit, $00000001, true)
    call UnitStripHeroLevel(bj_lastReplacedUnit, $00000001)
endfunction
function nRS takes nothing returns boolean
    return GetUnitTypeId(GetDyingUnit()) == 1848651852 or GetUnitTypeId(GetDyingUnit()) == 1848651856 or GetUnitTypeId(GetDyingUnit()) == 1848651853 or GetUnitTypeId(GetDyingUnit()) == 1848651854 or GetUnitTypeId(GetDyingUnit()) == 1848651855
endfunction
function U2u takes nothing returns boolean
    return nRS() and IsPlayerInForce(GetOwningPlayer(GetKillingUnit()), Fs) and UnitHasItemOfTypeBJ(GetKillingUnit(), $49303135) == false
endfunction
function H5s takes nothing returns boolean
    return GetPlayerController(GetOwningPlayer(Ks[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))])) == MAP_CONTROL_USER
endfunction
function sDr takes nothing returns boolean
    return GetUnitManaPercent(GetTriggerUnit()) >= 50.
endfunction
function fZs takes string VEs returns nothing
    local unit BEs
    local unit NEs
    local integer MEs
    local real wZs
    local effect uZs
    local real rZs
    local real sZs
    local effect tZs
    local effect iZs
    local effect SZs
    local effect cZs
    local effect oZs
    local effect OZs
    local real lZs
    local real bZs
    local effect yZs
    local real pZs
    local real eZs
    local real qZs
    local real aZs
    local real nZs
    local real dZs
    set DSw[ASw] = VEs
    set ASw = ASw + 1
    set BEs = GetSpellTargetUnit()
    set NEs = GetTriggerUnit()
    set MEs = GetSpellAbilityId()
    set wZs = GetUnitStateSwap(UNIT_STATE_MANA, NEs) + 35. * I2R(GetHeroStatBJ($00000000, NEs, true))
    call GroupAddUnit(YO, NEs)
    set hu[GetPlayerId(GetOwningPlayer(NEs))] = true
    call PauseUnit(NEs, true)
    call SetUnitAnimation(NEs, "attack")
    call n6t(.02)
    call SetUnitTimeScalePercent(NEs, .0)
    set qZs = ANw(BEs)
    set rZs = qZs
    set pZs = rZs
    call ANw(BEs)
    set aZs = XSw
    set sZs = aZs
    set tZs = AddSpecialEffect("Abilities/Spells/Human/FlameStrike/FlameStrikeTarget.mdl", pZs, sZs)
    call yYi(tZs, 2., "when calling destrAdvTimed in Champion_AsuraStrike, line 59")
    set uZs = tZs
    set iZs = AddSpecialEffectTargetUnitBJ("weapon,right", NEs, "Abilities//Weapons//FarseerMissile//FarseerMissile.mdl")
    call Wwu(iZs, 2.)
    set SZs = iZs
    call yYi(SZs, 2., "when calling destrAdvTimed in Champion_AsuraStrike, line 60")
    call n6t(.8)
    set cZs = AddSpecialEffectTargetUnitBJ("weapon,right", NEs, "Abilities//Weapons//VengeanceMissile//VengeanceMissile.mdl")
    call Wwu(cZs, 2.)
    set oZs = cZs
    call yYi(oZs, 1.2, "when calling destrAdvTimed in Champion_AsuraStrike, line 62")
    call n6t(.8)
    set nZs = ANw(BEs)
    set lZs = nZs
    set eZs = lZs
    call ANw(BEs)
    set dZs = XSw
    set bZs = dZs
    set yZs = AddSpecialEffect("Objects/Spawnmodels/Naga/NagaDeath/NagaDeath.mdl", eZs, bZs)
    call yYi(yZs, 2., "when calling destrAdvTimed in Champion_AsuraStrike, line 64")
    set OZs = yZs
    call SetUnitTimeScalePercent(NEs, 100.)
    if wZs > pw then
        set wZs = xvt(pw)
    endif
    if yXu(BEs) and yXu(NEs) then
        if H5s() then
            call UnitDamageTargetBJ(NEs, BEs, wZs, ATTACK_TYPE_CHAOS, DAMAGE_TYPE_UNIVERSAL)
        elseif sDr() then
            call UnitDamageTargetBJ(NEs, BEs, wZs + 5000. * I2R(GetUnitAbilityLevelSwapped(MEs, NEs)), ATTACK_TYPE_CHAOS, DAMAGE_TYPE_UNIVERSAL)
        else
            call UnitDamageTargetBJ(NEs, BEs, wZs, ATTACK_TYPE_CHAOS, DAMAGE_TYPE_UNIVERSAL)
        endif
    endif
    if Nh[hgr(nD)]then
        call Wwu(uZs, 0.75)
        call Wwu(OZs, 2.5)
    else
        call Wwu(uZs, 1.)
        call Wwu(OZs, 4.)
    endif
    call ResetUnitAnimation(NEs)
    call PauseUnit(NEs, false)
    call GroupRemoveUnit(YO, NEs)
    set hu[GetPlayerId(GetOwningPlayer(NEs))] = false
    set ASw = ASw - 1
    set BEs = null
    set NEs = null
    set uZs = null
    set tZs = null
    set iZs = null
    set SZs = null
    set cZs = null
    set oZs = null
    set OZs = null
    set yZs = null
endfunction
function U4u takes nothing returns nothing
    set ASw = 0
    call fZs("via function reference Champion_AsuraStrike, line 43")
endfunction
function U4w takes nothing returns boolean
    return GetSpellAbilityId() == 1093677401
endfunction
function PTi takes string ITi returns boolean
    set DSw[ASw] = ITi
    set ASw = ASw + 1
    set gQ = XQt("when calling new_LinkedList in GeneralUtils, line 21")
    set hQ = XQt("when calling new_LinkedList in GeneralUtils, line 22")
    call XQt("when calling new_LinkedList in GeneralUtils, line 23")
    set ASw = ASw - 1
    return true
endfunction
function U6i takes nothing returns boolean
    set ASw = 0
    return PTi("via function reference GeneralUtils, line 15")
endfunction
function U6r takes nothing returns nothing
    call PanCameraToTimedLocForPlayer(GetEnumPlayer(), vo, 0.)
    call TriggerExecute(MT)
endfunction
function E8w takes string W8w returns nothing
    set DSw[ASw] = W8w
    set ASw = ASw + 1
    if r5S(GetTriggerUnit()) == l2s(Iji("hpal", "when calling unObfuscate in SecurityUtils, line 53"), "when calling fromRawCode in SecurityUtils, line 53") then
        call iYt(GetTriggerUnit(), 3051., - 13585.)
    endif
    set ASw = ASw - 1
endfunction
function U6t takes nothing returns nothing
    set ASw = 0
    call E8w("via function reference SecurityUtils, line 52")
endfunction
function Wst takes integer Qst returns nothing
endfunction
function X6S takes integer A6S, string D6S, integer H6S, integer J6S, integer K6S, integer L6S returns nothing
    call Wst(A6S)
endfunction
function lHs takes string oHs returns integer
    local integer OHs
    set DSw[ASw] = oHs
    set ASw = ASw + 1
    if pV == 0 then
        if eV < 32768 then
            set eV = eV + 1
            set OHs = eV
        else
            call tNr("Out of memory: Could not create DamageElement.", "when calling error in DamageEvent, line 97")
            set OHs = 0
        endif
    else
        set pV = pV - 1
        set OHs = yV[pV]
    endif
    set ASw = ASw - 1
    return OHs
endfunction
function Lbr takes string Ibr, integer Pbr, integer Abr, integer Dbr, integer Hbr, string Jbr returns integer
    local integer Kbr
    set DSw[ASw] = Jbr
    set ASw = ASw + 1
    set Kbr = lHs("when calling alloc_DamageElement in DamageEvent, line 101")
    call X6S(Kbr, Ibr, Pbr, Abr, Dbr, Hbr)
    set ASw = ASw - 1
    return Kbr
endfunction
function Ssi takes string tsi returns integer
    local integer isi
    set DSw[ASw] = tsi
    set ASw = ASw + 1
    if YC == 0 then
        if GC < 32768 then
            set GC = GC + 1
            set isi = GC
            set gC[isi] = 1138
        else
            call tNr("Out of memory: Could not create EventListener_add_DamageEvent.", "when calling error in DamageEvent, line 475")
            set isi = 0
        endif
    else
        set YC = YC - 1
        set isi = TC[YC]
        set gC[isi] = 1138
    endif
    set ASw = ASw - 1
    return isi
endfunction
function mUt takes string xUt returns integer
    local integer vUt
    set DSw[ASw] = xUt
    set ASw = ASw + 1
    if YC == 0 then
        if GC < 32768 then
            set GC = GC + 1
            set vUt = GC
            set gC[vUt] = 1137
        else
            call tNr("Out of memory: Could not create EventListener_add_DamageEvent.", "when calling error in DamageEvent, line 474")
            set vUt = 0
        endif
    else
        set YC = YC - 1
        set vUt = TC[YC]
        set gC[vUt] = 1137
    endif
    set ASw = ASw - 1
    return vUt
endfunction
function okS takes string skS returns boolean
    local integer tkS
    local integer ikS
    local playerunitevent SkS
    local playerunitevent ckS
    set DSw[ASw] = skS
    set ASw = ASw + 1
    set dj = true
    set fj = Lbr("Physical", $000000DF, $0000003B, $00000021, $000000FF, "when calling new_DamageElement in DamageEvent, line 72")
    set jj = 0
    set vj = 0
    set Rj = 0
    set Tj = 4
    set Yj = 0
    set Gj = false
    set hj = 0
    set kj = 0
    set SkS = EVENT_PLAYER_UNIT_DAMAGING
    set tkS = mUt("when calling alloc_EventListener_add_DamageEvent in DamageEvent, line 474")
    call Gpr(tkS)
    call y0u(SkS, tkS, "when calling add in DamageEvent, line 474")
    set ckS = EVENT_PLAYER_UNIT_DAMAGED
    set ikS = Ssi("when calling alloc_EventListener_add_DamageEvent in DamageEvent, line 475")
    call Gpr(ikS)
    call y0u(ckS, ikS, "when calling add in DamageEvent, line 475")
    set ASw = ASw - 1
    set SkS = null
    set ckS = null
    return true
endfunction
function U9i takes nothing returns boolean
    set ASw = 0
    return okS("via function reference DamageEvent, line 61")
endfunction
function UGr takes nothing returns nothing
    set ASw = 0
    call r_t("via function reference JobAdvancementQuestHandler, line 1014")
endfunction
function OAt takes nothing returns boolean
    return IsUnitType(GetEnumUnit(), UNIT_TYPE_HERO) == false
endfunction
function UGt takes nothing returns nothing
    if OAt() then
        set lr = lr + 1
        call SetUnitUserData(GetEnumUnit(), lr)
        set Sr[lr] = GetUnitX(GetEnumUnit())
        set cr[lr] = GetUnitY(GetEnumUnit())
    endif
endfunction
function ULt takes nothing returns nothing
    call SetUnitPositionLoc(GetEnumUnit(), vo)
endfunction
function UNw takes nothing returns nothing
    set jr = GetRectCenter(kO)
    call SetUnitPositionLoc(GetTriggerUnit(), jr)
    call PanCameraToTimedLocForPlayer(GetOwningPlayer(GetTriggerUnit()), jr, 0.)
    call TriggerExecute(MT)
    call RemoveLocation(jr)
endfunction
function UPt takes nothing returns nothing
    call ForceAddPlayer(ks, GetOwningPlayer(GetTriggerUnit()))
    call ForceAddPlayer(Cr, GetOwningPlayer(GetTriggerUnit()))
    call DisplayTextToForce(MwS(GetOwningPlayer(GetTriggerUnit())), "|cffffcc00Count Crowley|r : |cff87ceebWell, well well. You seek a letter of recommendation? Very well...prove yourself to me. Kill 15 Lizardman Sorcerers and I shall deem you worthy.")
    call QuestSetDescription(Lr[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))], "I need to kill 15 Lizardman Sorcerers.")
endfunction
function USr takes nothing returns nothing
    call DisplayTextToForce(MwS(GetOwningPlayer(GetTriggerUnit())), "|cffffcc00Class Trainer|r : |cff87ceebYou seem to have mastered the ways of balance and tranquility, young one. So from here on out, you shall be an ArchDruid. When choosing your skills, make sure you know what you want to be. If you go for Elemental skills, then you are on the path to becoming a powerful Shaman. If you go for Shapeshifting skills, however, then you are aiming to become a swift Shapeshifter.")
    call PlaySoundBJ(re)
    call SetHeroLevelBJ(GetTriggerUnit(), $00000001, false)
    call ReplaceUnitBJ(GetTriggerUnit(), $48303048, $00000002)
    call SelectUnitForPlayerSingle(bj_lastReplacedUnit, GetOwningPlayer(GetTriggerUnit()))
    call SetHeroLevel(bj_lastReplacedUnit, $00000001, true)
    call UnitStripHeroLevel(bj_lastReplacedUnit, $00000001)
endfunction
function DBr takes nothing returns boolean
    return GetUnitTypeId(GetTriggerUnit()) == 1211117638
endfunction
function Pjt takes nothing returns boolean
    return GetUnitTypeId(GetTriggerUnit()) == 1211117637
endfunction
function UTs takes nothing returns boolean
    return GetBooleanOr(Pjt(), DBr()) and GetOrderTargetUnit() == iG and GetHeroLevel(GetTriggerUnit()) >= 99 and IsPlayerInForce(GetOwningPlayer(GetTriggerUnit()), Kr) == false and IsUnitInGroup(GetTriggerUnit(), kpu(300., GetUnitLoc(GetOrderTargetUnit())))
endfunction
function p6t takes string b6t returns integer
    local integer y6t
    set DSw[ASw] = b6t
    set ASw = ASw + 1
    if NX == 0 then
        if MX < 32768 then
            set MX = MX + 1
            set y6t = MX
            set wC[y6t] = 980
        else
            call tNr("Out of memory: Could not create CallbackSingle_doAfter_Voidless_mechanics.", "when calling error in Voidless_mechanics, line 91")
            set y6t = 0
        endif
    else
        set NX = NX - 1
        set y6t = BX[NX]
        set wC[y6t] = 980
    endif
    set ASw = ASw - 1
    return y6t
endfunction
function AtS takes string ItS returns boolean
    local integer PtS
    set DSw[ASw] = ItS
    set ASw = ASw + 1
    if uK != null and yXu(uK) and OK > 0 then
        set PtS = p6t("when calling alloc_CallbackSingle_doAfter_Voidless_mechanics in Voidless_mechanics, line 91")
        call RUs(PtS)
        call Ybr(1.5, PtS, "when calling doAfter in Voidless_mechanics, line 91")
        set ASw = ASw - 1
        return true
    endif
    set ASw = ASw - 1
    return false
endfunction
function J3i takes integer H3i returns nothing
endfunction
function OTu takes integer cTu, unit oTu returns nothing
    call J3i(cTu)
endfunction
function V3s takes string X3s returns integer
    local integer C3s
    set DSw[ASw] = X3s
    set ASw = ASw + 1
    if ZN == 0 then
        if UN < 32768 then
            set UN = UN + 1
            set C3s = UN
        else
            call tNr("Out of memory: Could not create OnFinishUnitAnimation.", "when calling error in UnitItemUtils, line 365")
            set C3s = 0
        endif
    else
        set ZN = ZN - 1
        set C3s = EN[ZN]
    endif
    set ASw = ASw - 1
    return C3s
endfunction
function NEu takes unit CEu, string VEu returns integer
    local integer BEu
    set DSw[ASw] = VEu
    set ASw = ASw + 1
    set BEu = V3s("when calling alloc_OnFinishUnitAnimation in UnitItemUtils, line 367")
    call OTu(BEu, CEu)
    set ASw = ASw - 1
    return BEu
endfunction
function htu takes unit Ttu, string Ytu, string Gtu returns integer
    local integer gtu
    set DSw[ASw] = Gtu
    set ASw = ASw + 1
    call SetUnitAnimation(Ttu, Ytu)
    set gtu = NEu(Ttu, "when calling new_OnFinishUnitAnimation in UnitItemUtils, line 376")
    set ASw = ASw - 1
    return gtu
endfunction
function l1s takes string o1s returns integer
    local integer O1s
    set DSw[ASw] = o1s
    set ASw = ASw + 1
    if NX == 0 then
        if MX < 32768 then
            set MX = MX + 1
            set O1s = MX
            set wC[O1s] = 982
        else
            call tNr("Out of memory: Could not create CallbackSingle_doAfter_Voidless_mechanics.", "when calling error in Voidless_mechanics, line 132")
            set O1s = 0
        endif
    else
        set NX = NX - 1
        set O1s = BX[NX]
        set wC[O1s] = 982
    endif
    set ASw = ASw - 1
    return O1s
endfunction
function Dqs takes string Zqs returns boolean
    local unit Uqs
    local unit Iqs
    local unit Pqs
    local integer Aqs
    set DSw[ASw] = Zqs
    set ASw = ASw + 1
    if uK != null and yXu(uK) and OK > 0 and(not BL) then
        set BL = true
        set Uqs = uK
        call v0r(Uqs, true)
        set Iqs = Uqs
        call Ggr(Iqs)
        set Pqs = Iqs
        call OJt(Pqs, false)
        call htu(uK, "spell", "when calling playAnimation in Voidless_mechanics, line 130")
        set Aqs = l1s("when calling alloc_CallbackSingle_doAfter_Voidless_mechanics in Voidless_mechanics, line 132")
        call RUs(Aqs)
        call Ybr(1.5, Aqs, "when calling doAfter in Voidless_mechanics, line 132")
        set ASw = ASw - 1
        set Uqs = null
        set Iqs = null
        set Pqs = null
        return true
    endif
    set ASw = ASw - 1
    set Uqs = null
    set Iqs = null
    set Pqs = null
    return false
endfunction
function eVw takes string yVw returns integer
    local integer pVw
    set DSw[ASw] = yVw
    set ASw = ASw + 1
    if PC == 0 then
        if AC < 32768 then
            set AC = AC + 1
            set pVw = AC
            set DC[pVw] = 705
        else
            call tNr("Out of memory: Could not create CallbackPeriodic_doPeriodically_Voidless_mechanics.", "when calling error in Voidless_mechanics, line 218")
            set pVw = 0
        endif
    else
        set PC = PC - 1
        set pVw = IC[PC]
        set DC[pVw] = 705
    endif
    set ASw = ASw - 1
    return pVw
endfunction
function qDt takes string SDt returns boolean
    local boolean cDt
    local group oDt
    local group ODt
    local integer lDt
    local unit bDt
    local integer yDt
    local integer pDt
    local integer eDt
    set DSw[ASw] = SDt
    set ASw = ASw + 1
    if uK != null and yXu(uK) and OK > 0 then
        set cDt = false
        call UOS($00000001, "when calling getGroup in Voidless_mechanics, line 198")
        set ODt = pIw
        call vci(ODt, fc[MJ])
        set oDt = ODt
        set lDt = smt(oDt)
        set bDt = null
        loop
            exitwhen not(bDt == null or(not cDt) and lDt > 0)
            set lDt = lDt - 1
            set bDt = cuS(oDt)
            call Z7t(oDt, bDt)
            if bDt != null and Zcr(bDt) and(not kPu(bDt, "when calling isInvolvedInMechanic in Voidless_mechanics, line 206")) then
    set cDt = true
    exitwhen true
            endif
        endloop
        call Sju(oDt, "when calling release in Voidless_mechanics, line 209")
        if cDt then
            if Jyr(lX, Aei(bDt), "when calling has in Voidless_mechanics, line 212") then
    call I7S(Aii(P_s(lX, Aei(bDt), "when calling getAndRemove in Voidless_mechanics, line 213"), "when calling effectFromIndex in Voidless_mechanics, line 213"))
            endif
            call dii(SF + "Rotten hand is holding you in place, feeding on your spiritual energy!" + eF, 5., eDs(bDt))
            call WGi(bDt, 0.)
            set yDt = P3w(Yts())
            set eDt = eVw("when calling alloc_CallbackPeriodic_doPeriodically_Voidless_mechanics in Voidless_mechanics, line 218")
            call kVu(eDt)
            set giw[eDt] = yDt
            set hiw[eDt] = bDt
            set pDt = wcs(1., eDt, "when calling doPeriodically in Voidless_mechanics, line 218")
            call iUr(tX, Aei(bDt), pDt, "when calling put in Voidless_mechanics, line 224")
            call n_S(bDt, $00000001, "when calling playArrowGame in Voidless_mechanics, line 226")
            set ASw = ASw - 1
            set oDt = null
            set ODt = null
            set bDt = null
            return true
        endif
    endif
    set ASw = ASw - 1
    set oDt = null
    set ODt = null
    set bDt = null
    return false
endfunction
function HMw takes string AMw returns integer
    local integer DMw
    set DSw[ASw] = AMw
    set ASw = ASw + 1
    if NX == 0 then
        if MX < 32768 then
            set MX = MX + 1
            set DMw = MX
            set wC[DMw] = 981
        else
            call tNr("Out of memory: Could not create CallbackSingle_doAfter_Voidless_mechanics.", "when calling error in Voidless_mechanics, line 109")
            set DMw = 0
        endif
    else
        set NX = NX - 1
        set DMw = BX[NX]
        set wC[DMw] = 981
    endif
    set ASw = ASw - 1
    return DMw
endfunction
function yMs takes string lMs returns boolean
    local integer bMs
    set DSw[ASw] = lMs
    set ASw = ASw + 1
    if uK != null and yXu(uK) and OK > 0 then
        set bMs = HMw("when calling alloc_CallbackSingle_doAfter_Voidless_mechanics in Voidless_mechanics, line 109")
        call RUs(bMs)
        call Ybr(1.5, bMs, "when calling doAfter in Voidless_mechanics, line 109")
        set ASw = ASw - 1
        return true
    endif
    set ASw = ASw - 1
    return false
endfunction
function A_i takes integer Q_i, integer W_i, string E_i returns nothing
    local string Z_i
    local integer U_i
    local group I_i
    local unit P_i
    set DSw[ASw] = E_i
    set ASw = ASw + 1
    if GQ >= pK + Dtw[Q_i] and(not yK) then
        set pK = GQ
        if smt(fc[MJ]) == 0 or OK == 0 then
            call wHr(W_i, "when calling dispatch_CallbackPeriodic_destroyCallbackPeriodic in Voidless, line 299")
        elseif (not yK)and yXu(uK) then
            set Z_i = ""
            set U_i = GetRandomInt($00000000, $00000004)
            if U_i == 0 then
    if Dqs("when calling bossDissipateToRandomPos in Voidless, line 305") then
                    set Z_i = QK
    endif
            elseif U_i == 1 then
    if yMs("when calling bossAttackLowestHp in Voidless, line 308") then
                    set Z_i = EK
    endif
            elseif U_i == 2 then
    if AtS("when calling bossAttackFarest in Voidless, line 311") then
                    set Z_i = ZK
    endif
            elseif U_i == 3 then
    if qDt("when calling bossProvidenceUnit in Voidless, line 314") then
                    set Z_i = WK
    endif
            elseif U_i == 4 then
    if FBr(false, "when calling bossSwitchAttackMode in Voidless, line 317") then
                    if GX == 0 then
                        set Z_i = IK
                    else
                        set Z_i = UK
                    endif
    endif
            endif
            if Z_i != "" then
    set I_i = XbS(fc[MJ])
    loop
                    exitwhen not hJw(I_i)
                    set P_i = tPr(I_i)
                    call dii(Z_i, 3., eDs(P_i))
    endloop
    call lxs(I_i)
    call bQs(Edi(ANw(uK), XSw), Jcw, Kcw, .015, - .030, Z_i, 12., 6., $00000027, $0000008E, $000000C1, $00000000, null, "when calling _CreateTTExEntity_fading in Voidless, line 328")
    call Zvi(Z_i, "when calling updateMechanic in Voidless, line 329")
            endif
        endif
    endif
    set ASw = ASw - 1
    set I_i = null
    set P_i = null
endfunction
function C6w takes integer Z6w, integer U6w, string I6w returns nothing
    local integer P6w
    local integer A6w
    local integer D6w
    local integer H6w
    local unit J6w
    local integer K6w
    local integer L6w
    local item X6w
    set DSw[ASw] = I6w
    set ASw = ASw + 1
    set qu = true
    set P6w = c5r(gQ, "when calling iterator in JobAdvancementQuestHandler, line 922")
    loop
        exitwhen not Tji(P6w)
        set A6w = LXi(P6w)
        set D6w = xus(A6w, "when calling getCustomPlayer in JobAdvancementQuestHandler, line 923")
        set H6w = xMi(D6w, "when calling getCHero in JobAdvancementQuestHandler, line 924")
        set J6w = hqs(H6w, "when calling getHero in JobAdvancementQuestHandler, line 925")
        if J6w != null then
            set K6w = 0
            set L6w = dcs(J6w) - 1
            loop
    exitwhen K6w > L6w
    set X6w = ofi(J6w, K6w)
    if X6w != null then
                    if Hri(X6w) == ITEM_TYPE_PURCHASABLE and brs(X6w) == 0 and(not GpS(Zx, A6w, "when calling has in JobAdvancementQuestHandler, line 930")) then
                        call tdu(X6w)
                    endif
    endif
    set K6w = K6w + 1
            endloop
        endif
    endloop
    call vms(P6w, "when calling close in JobAdvancementQuestHandler, line 922")
    set ASw = ASw - 1
    set J6w = null
    set X6w = null
endfunction
function CJs takes integer WJs, integer EJs, string ZJs returns nothing
    local integer UJs
    local integer IJs
    local integer PJs
    local string AJs
    local string DJs
    local integer HJs
    local string JJs
    local string KJs
    local integer LJs
    local string XJs
    set DSw[ASw] = ZJs
    set ASw = ASw + 1
    if nM[WJs] != null and gir(nM[WJs], tj) > 0 then
        set UJs = gir(nM[WJs], tj)
        if t3i(nM[WJs]) > Ges(nM[WJs]) / 2. then
            set PJs = UJs * rh
        else
            set PJs = 0
        endif
        set IJs = PJs
        set AJs = fju(P3w(t3i(nM[WJs]) + Q7t(nM[WJs], true) * uh + IJs))
        if ifi(AJs) > pw then
            set DJs = fju(pw)
        else
            set DJs = AJs
        endif
        set AJs = DJs
        set HJs = vQt(AJs)
        if HJs > 3 then
            set JJs = CAw(AJs, $00000000, HJs - 3) + "," + Mes(AJs, HJs - 3)
        else
            set JJs = AJs
        endif
        set AJs = JJs
        set KJs = fju(UJs * rh)
        set LJs = vQt(KJs)
        set XJs = xpr(xpr(wh, "<Damage>", SF + AJs + eF), "<Additional>", CAw(KJs, $00000000, LJs - 3) + "," + Mes(KJs, LJs - 3))
        call Zmt(nM[WJs], tj, UJs, "", XJs, "")
    else
        call wHr(wps(Mg, dM[WJs], "when calling get in Champion_AsuraStrike, line 39"), "when calling dispatch_CallbackPeriodic_destroyCallbackPeriodic in Champion_AsuraStrike, line 39")
        call klS(Mg, dM[WJs], "when calling remove in Champion_AsuraStrike, line 40")
    endif
    set ASw = ASw - 1
endfunction
function Dau takes string Pau returns integer
    local integer Aau
    set DSw[ASw] = Pau
    set ASw = ASw + 1
    if NX == 0 then
        if MX < 32768 then
            set MX = MX + 1
            set Aau = MX
            set wC[Aau] = 781
        else
            call tNr("Out of memory: Could not create CallbackSingle_doAfter_FateDestinyUnlocker.", "when calling error in FateDestinyUnlocker, line 266")
            set Aau = 0
        endif
    else
        set NX = NX - 1
        set Aau = BX[NX]
        set wC[Aau] = 781
    endif
    set ASw = ASw - 1
    return Aau
endfunction
function NXr takes string VXr returns integer
    local integer BXr
    set DSw[ASw] = VXr
    set ASw = ASw + 1
    if NX == 0 then
        if MX < 32768 then
            set MX = MX + 1
            set BXr = MX
            set wC[BXr] = 790
        else
            call tNr("Out of memory: Could not create CallbackSingle_doAfter_FateDestinyUnlocker.", "when calling error in FateDestinyUnlocker, line 294")
            set BXr = 0
        endif
    else
        set NX = NX - 1
        set BXr = BX[NX]
        set wC[BXr] = 790
    endif
    set ASw = ASw - 1
    return BXr
endfunction
function R2u takes string d2u returns integer
    local integer f2u
    set DSw[ASw] = d2u
    set ASw = ASw + 1
    if NX == 0 then
        if MX < 32768 then
            set MX = MX + 1
            set f2u = MX
            set wC[f2u] = 788
        else
            call tNr("Out of memory: Could not create CallbackSingle_doAfter_FateDestinyUnlocker.", "when calling error in FateDestinyUnlocker, line 287")
            set f2u = 0
        endif
    else
        set NX = NX - 1
        set f2u = BX[NX]
        set wC[f2u] = 788
    endif
    set ASw = ASw - 1
    return f2u
endfunction
function RPi takes string dPi returns integer
    local integer fPi
    set DSw[ASw] = dPi
    set ASw = ASw + 1
    if NX == 0 then
        if MX < 32768 then
            set MX = MX + 1
            set fPi = MX
            set wC[fPi] = 776
        else
            call tNr("Out of memory: Could not create CallbackSingle_doAfter_FateDestinyUnlocker.", "when calling error in FateDestinyUnlocker, line 240")
            set fPi = 0
        endif
    else
        set NX = NX - 1
        set fPi = BX[NX]
        set wC[fPi] = 776
    endif
    set ASw = ASw - 1
    return fPi
endfunction
function YAu takes string RAu returns integer
    local integer TAu
    set DSw[ASw] = RAu
    set ASw = ASw + 1
    if NX == 0 then
        if MX < 32768 then
            set MX = MX + 1
            set TAu = MX
            set wC[TAu] = 789
        else
            call tNr("Out of memory: Could not create CallbackSingle_doAfter_FateDestinyUnlocker.", "when calling error in FateDestinyUnlocker, line 290")
            set TAu = 0
        endif
    else
        set NX = NX - 1
        set TAu = BX[NX]
        set wC[TAu] = 789
    endif
    set ASw = ASw - 1
    return TAu
endfunction
function YRi takes string RRi returns integer
    local integer TRi
    set DSw[ASw] = RRi
    set ASw = ASw + 1
    if NX == 0 then
        if MX < 32768 then
            set MX = MX + 1
            set TRi = MX
            set wC[TRi] = 791
        else
            call tNr("Out of memory: Could not create CallbackSingle_doAfter_FateDestinyUnlocker.", "when calling error in FateDestinyUnlocker, line 315")
            set TRi = 0
        endif
    else
        set NX = NX - 1
        set TRi = BX[NX]
        set wC[TRi] = 791
    endif
    set ASw = ASw - 1
    return TRi
endfunction
function YUt takes string RUt returns integer
    local integer TUt
    set DSw[ASw] = RUt
    set ASw = ASw + 1
    if NX == 0 then
        if MX < 32768 then
            set MX = MX + 1
            set TUt = MX
            set wC[TUt] = 792
        else
            call tNr("Out of memory: Could not create CallbackSingle_doAfter_FateDestinyUnlocker.", "when calling error in FateDestinyUnlocker, line 327")
            set TUt = 0
        endif
    else
        set NX = NX - 1
        set TUt = BX[NX]
        set wC[TUt] = 792
    endif
    set ASw = ASw - 1
    return TUt
endfunction
function Zou takes string Wou returns integer
    local integer Eou
    set DSw[ASw] = Wou
    set ASw = ASw + 1
    if NX == 0 then
        if MX < 32768 then
            set MX = MX + 1
            set Eou = MX
            set wC[Eou] = 787
        else
            call tNr("Out of memory: Could not create CallbackSingle_doAfter_FateDestinyUnlocker.", "when calling error in FateDestinyUnlocker, line 284")
            set Eou = 0
        endif
    else
        set NX = NX - 1
        set Eou = BX[NX]
        set wC[Eou] = 787
    endif
    set ASw = ASw - 1
    return Eou
endfunction
function b9s takes string O9s returns integer
    local integer l9s
    set DSw[ASw] = O9s
    set ASw = ASw + 1
    if NX == 0 then
        if MX < 32768 then
            set MX = MX + 1
            set l9s = MX
            set wC[l9s] = 785
        else
            call tNr("Out of memory: Could not create CallbackSingle_doAfter_FateDestinyUnlocker.", "when calling error in FateDestinyUnlocker, line 278")
            set l9s = 0
        endif
    else
        set NX = NX - 1
        set l9s = BX[NX]
        set wC[l9s] = 785
    endif
    set ASw = ASw - 1
    return l9s
endfunction
function bXt takes string OXt returns integer
    local integer lXt
    set DSw[ASw] = OXt
    set ASw = ASw + 1
    if rC == 0 then
        if sC < 32768 then
            set sC = sC + 1
            set lXt = sC
            set tC[lXt] = 665
        else
            call tNr("Out of memory: Could not create CallbackCounted_doPeriodicallyTimed_FateDestinyUnlocker.", "when calling error in FateDestinyUnlocker, line 319")
            set lXt = 0
        endif
    else
        set rC = rC - 1
        set lXt = uC[rC]
        set tC[lXt] = 665
    endif
    set ASw = ASw - 1
    return lXt
endfunction
function ddi takes string adi returns integer
    local integer ndi
    set DSw[ASw] = adi
    set ASw = ASw + 1
    if NX == 0 then
        if MX < 32768 then
            set MX = MX + 1
            set ndi = MX
            set wC[ndi] = 778
        else
            call tNr("Out of memory: Could not create CallbackSingle_doAfter_FateDestinyUnlocker.", "when calling error in FateDestinyUnlocker, line 257")
            set ndi = 0
        endif
    else
        set NX = NX - 1
        set ndi = BX[NX]
        set wC[ndi] = 778
    endif
    set ASw = ASw - 1
    return ndi
endfunction
function fji takes string nji returns integer
    local integer dji
    set DSw[ASw] = nji
    set ASw = ASw + 1
    if NX == 0 then
        if MX < 32768 then
            set MX = MX + 1
            set dji = MX
            set wC[dji] = 786
        else
            call tNr("Out of memory: Could not create CallbackSingle_doAfter_FateDestinyUnlocker.", "when calling error in FateDestinyUnlocker, line 281")
            set dji = 0
        endif
    else
        set NX = NX - 1
        set dji = BX[NX]
        set wC[dji] = 786
    endif
    set ASw = ASw - 1
    return dji
endfunction
function iAw takes string sAw returns integer
    local integer tAw
    set DSw[ASw] = sAw
    set ASw = ASw + 1
    if NX == 0 then
        if MX < 32768 then
            set MX = MX + 1
            set tAw = MX
            set wC[tAw] = 783
        else
            call tNr("Out of memory: Could not create CallbackSingle_doAfter_FateDestinyUnlocker.", "when calling error in FateDestinyUnlocker, line 272")
            set tAw = 0
        endif
    else
        set NX = NX - 1
        set tAw = BX[NX]
        set wC[tAw] = 783
    endif
    set ASw = ASw - 1
    return tAw
endfunction
function mUr takes string xUr returns integer
    local integer vUr
    set DSw[ASw] = xUr
    set ASw = ASw + 1
    if NX == 0 then
        if MX < 32768 then
            set MX = MX + 1
            set vUr = MX
            set wC[vUr] = 782
        else
            call tNr("Out of memory: Could not create CallbackSingle_doAfter_FateDestinyUnlocker.", "when calling error in FateDestinyUnlocker, line 269")
            set vUr = 0
        endif
    else
        set NX = NX - 1
        set vUr = BX[NX]
        set wC[vUr] = 782
    endif
    set ASw = ASw - 1
    return vUr
endfunction
function o1r takes string S1r returns integer
    local integer c1r
    set DSw[ASw] = S1r
    set ASw = ASw + 1
    if NX == 0 then
        if MX < 32768 then
            set MX = MX + 1
            set c1r = MX
            set wC[c1r] = 784
        else
            call tNr("Out of memory: Could not create CallbackSingle_doAfter_FateDestinyUnlocker.", "when calling error in FateDestinyUnlocker, line 275")
            set c1r = 0
        endif
    else
        set NX = NX - 1
        set c1r = BX[NX]
        set wC[c1r] = 784
    endif
    set ASw = ASw - 1
    return c1r
endfunction
function q9t takes string p9t returns integer
    local integer e9t
    set DSw[ASw] = p9t
    set ASw = ASw + 1
    if NX == 0 then
        if MX < 32768 then
            set MX = MX + 1
            set e9t = MX
            set wC[e9t] = 780
        else
            call tNr("Out of memory: Could not create CallbackSingle_doAfter_FateDestinyUnlocker.", "when calling error in FateDestinyUnlocker, line 263")
            set e9t = 0
        endif
    else
        set NX = NX - 1
        set e9t = BX[NX]
        set wC[e9t] = 780
    endif
    set ASw = ASw - 1
    return e9t
endfunction
function t6S takes string r6S returns integer
    local integer s6S
    set DSw[ASw] = r6S
    set ASw = ASw + 1
    if NX == 0 then
        if MX < 32768 then
            set MX = MX + 1
            set s6S = MX
            set wC[s6S] = 779
        else
            call tNr("Out of memory: Could not create CallbackSingle_doAfter_FateDestinyUnlocker.", "when calling error in FateDestinyUnlocker, line 260")
            set s6S = 0
        endif
    else
        set NX = NX - 1
        set s6S = BX[NX]
        set wC[s6S] = 779
    endif
    set ASw = ASw - 1
    return s6S
endfunction
function wyS takes string NbS returns integer
    local integer MbS
    set DSw[ASw] = NbS
    set ASw = ASw + 1
    if NX == 0 then
        if MX < 32768 then
            set MX = MX + 1
            set MbS = MX
            set wC[MbS] = 777
        else
            call tNr("Out of memory: Could not create CallbackSingle_doAfter_FateDestinyUnlocker.", "when calling error in FateDestinyUnlocker, line 254")
            set MbS = 0
        endif
    else
        set NX = NX - 1
        set MbS = BX[NX]
        set wC[MbS] = 777
    endif
    set ASw = ASw - 1
    return MbS
endfunction
function hyu takes integer xbu, unit vbu, string mbu returns nothing
    local real Qbu
    local player Wbu
    local integer Ebu
    local integer Zbu
    local string Ubu
    local string Ibu
    local real Pbu
    local real Abu
    local real Dbu
    local real Hbu
    local integer Jbu
    local integer Kbu
    local integer Lbu
    local integer Xbu
    local integer Cbu
    local integer Vbu
    local integer Bbu
    local integer Nbu
    local integer Mbu
    local integer wyu
    local integer uyu
    local integer ryu
    local integer syu
    local integer tyu
    local integer iyu
    local integer Syu
    local integer cyu
    local real oyu
    local real Oyu
    local real lyu
    local real byu
    local real yyu
    local real pyu
    local real eyu
    local real qyu
    local real ayu
    local real nyu
    local real dyu
    local real fyu
    local real Ryu
    local real Tyu
    local real Yyu
    local real Gyu
    local real gyu
    set DSw[ASw] = mbu
    set ASw = ASw + 1
    if (not Jm)and vbu != null and yXu(vbu) then
        set Jm = true
        set Qbu = n8w(xus(xbu, "when calling getCustomPlayer in FateDestinyUnlocker, line 227"), "when calling getCameraZoomLevel in FateDestinyUnlocker, line 227")
        call GYS(vbu, aSr(vbu))
        call b9i(vbu, Ges(vbu))
        call Ggr(vbu)
        call v0r(vbu, true)
        call vwt(Bv, Aei(vbu), "when calling add in FateDestinyUnlocker, line 232")
        set Wbu = eDs(vbu)
        set Ebu = GgS(Wbu, "when calling getCustomPlayer in FateDestinyUnlocker, line 235")
        if nD == Wbu then
            call ShowInterface(false, 2.)
        endif
        set Zbu = RPi("when calling alloc_CallbackSingle_doAfter_FateDestinyUnlocker in FateDestinyUnlocker, line 240")
        call RUs(Zbu)
        set X4[Zbu] = vbu
        set C4[Zbu] = Wbu
        set V4[Zbu] = Ebu
        call Ybr(2., Zbu, "when calling doAfter in FateDestinyUnlocker, line 240")
        set Ubu = "|cffb38300" + B2r(vbu) + "|r"
        set Ibu = Iji("|cffb38300The Void:|r ", "when calling unObfuscate in FateDestinyUnlocker, line 248")
        set Pbu = 2.
        set Abu = 2.
        set Dbu = 18.
        set Hbu = 2.
        set oyu = Pbu + Hbu + Abu
        set Jbu = wyS("when calling alloc_CallbackSingle_doAfter_FateDestinyUnlocker in FateDestinyUnlocker, line 254")
        call RUs(Jbu)
        set B4[Jbu] = Ibu
        set N4[Jbu] = Dbu
        set M4[Jbu] = Wbu
        call Ybr(oyu, Jbu, "when calling doAfter in FateDestinyUnlocker, line 254")
        set Hbu = Hbu + Dbu
        set Dbu = 10.
        set Oyu = Pbu + Hbu + Abu
        set Kbu = ddi("when calling alloc_CallbackSingle_doAfter_FateDestinyUnlocker in FateDestinyUnlocker, line 257")
        call RUs(Kbu)
        set w2[Kbu] = Ibu
        set u2[Kbu] = Dbu
        set r2[Kbu] = Wbu
        call Ybr(Oyu, Kbu, "when calling doAfter in FateDestinyUnlocker, line 257")
        set Hbu = Hbu + Dbu
        set Dbu = 4.5
        set lyu = Pbu + Hbu + Abu
        set Lbu = t6S("when calling alloc_CallbackSingle_doAfter_FateDestinyUnlocker in FateDestinyUnlocker, line 260")
        call RUs(Lbu)
        set s2[Lbu] = Ubu
        set t2[Lbu] = Dbu
        set i2[Lbu] = Wbu
        call Ybr(lyu, Lbu, "when calling doAfter in FateDestinyUnlocker, line 260")
        set Hbu = Hbu + Dbu
        set Dbu = 10.
        set byu = Pbu + Hbu + Abu
        set Xbu = q9t("when calling alloc_CallbackSingle_doAfter_FateDestinyUnlocker in FateDestinyUnlocker, line 263")
        call RUs(Xbu)
        set S2[Xbu] = Ibu
        set c2[Xbu] = Dbu
        set o2[Xbu] = Wbu
        call Ybr(byu, Xbu, "when calling doAfter in FateDestinyUnlocker, line 263")
        set Hbu = Hbu + Dbu
        set Dbu = 9.
        set yyu = Pbu + Hbu + Abu
        set Cbu = Dau("when calling alloc_CallbackSingle_doAfter_FateDestinyUnlocker in FateDestinyUnlocker, line 266")
        call RUs(Cbu)
        set O2[Cbu] = Ubu
        set l2[Cbu] = Dbu
        set b2[Cbu] = Wbu
        call Ybr(yyu, Cbu, "when calling doAfter in FateDestinyUnlocker, line 266")
        set Hbu = Hbu + Dbu
        set Dbu = 12.
        set pyu = Pbu + Hbu + Abu
        set Vbu = mUr("when calling alloc_CallbackSingle_doAfter_FateDestinyUnlocker in FateDestinyUnlocker, line 269")
        call RUs(Vbu)
        set y2[Vbu] = Ibu
        set p2[Vbu] = Dbu
        set e2[Vbu] = Wbu
        call Ybr(pyu, Vbu, "when calling doAfter in FateDestinyUnlocker, line 269")
        set Hbu = Hbu + Dbu
        set Dbu = 3.
        set eyu = Pbu + Hbu + Abu
        set Bbu = iAw("when calling alloc_CallbackSingle_doAfter_FateDestinyUnlocker in FateDestinyUnlocker, line 272")
        call RUs(Bbu)
        set q2[Bbu] = Ubu
        set a2[Bbu] = Dbu
        set n2[Bbu] = Wbu
        call Ybr(eyu, Bbu, "when calling doAfter in FateDestinyUnlocker, line 272")
        set Hbu = Hbu + Dbu
        set Dbu = 20.
        set qyu = Pbu + Hbu + Abu
        set Nbu = o1r("when calling alloc_CallbackSingle_doAfter_FateDestinyUnlocker in FateDestinyUnlocker, line 275")
        call RUs(Nbu)
        set d2[Nbu] = Ibu
        set f2[Nbu] = Dbu
        set R2[Nbu] = Wbu
        call Ybr(qyu, Nbu, "when calling doAfter in FateDestinyUnlocker, line 275")
        set Hbu = Hbu + Dbu
        set Dbu = 10.
        set ayu = Pbu + Hbu + Abu
        set Mbu = b9s("when calling alloc_CallbackSingle_doAfter_FateDestinyUnlocker in FateDestinyUnlocker, line 278")
        call RUs(Mbu)
        set T2[Mbu] = Ubu
        set Y2[Mbu] = Dbu
        set G2[Mbu] = Wbu
        call Ybr(ayu, Mbu, "when calling doAfter in FateDestinyUnlocker, line 278")
        set Hbu = Hbu + Dbu
        set Dbu = 20.
        set nyu = Pbu + Hbu + Abu
        set wyu = fji("when calling alloc_CallbackSingle_doAfter_FateDestinyUnlocker in FateDestinyUnlocker, line 281")
        call RUs(wyu)
        set g2[wyu] = Ibu
        set h2[wyu] = Dbu
        set F2[wyu] = Wbu
        call Ybr(nyu, wyu, "when calling doAfter in FateDestinyUnlocker, line 281")
        set Hbu = Hbu + Dbu
        set Dbu = 15.
        set dyu = Pbu + Hbu + Abu
        set uyu = Zou("when calling alloc_CallbackSingle_doAfter_FateDestinyUnlocker in FateDestinyUnlocker, line 284")
        call RUs(uyu)
        set k2[uyu] = Ibu
        set j2[uyu] = Dbu
        set x2[uyu] = Wbu
        call Ybr(dyu, uyu, "when calling doAfter in FateDestinyUnlocker, line 284")
        set Hbu = Hbu + Dbu
        set Dbu = 15.
        set fyu = Pbu + Hbu + Abu
        set ryu = R2u("when calling alloc_CallbackSingle_doAfter_FateDestinyUnlocker in FateDestinyUnlocker, line 287")
        call RUs(ryu)
        set v2[ryu] = Ibu
        set m2[ryu] = Dbu
        set Q2[ryu] = Wbu
        call Ybr(fyu, ryu, "when calling doAfter in FateDestinyUnlocker, line 287")
        set Hbu = Hbu + Dbu
        set Dbu = 10.
        set Ryu = Pbu + Hbu + Abu
        set syu = YAu("when calling alloc_CallbackSingle_doAfter_FateDestinyUnlocker in FateDestinyUnlocker, line 290")
        call RUs(syu)
        set W2[syu] = Ibu
        set E2[syu] = Dbu
        set Z2[syu] = Wbu
        call Ybr(Ryu, syu, "when calling doAfter in FateDestinyUnlocker, line 290")
        set Hbu = Hbu + Dbu
        set Tyu = Pbu + Hbu + Abu + 5.
        set tyu = NXr("when calling alloc_CallbackSingle_doAfter_FateDestinyUnlocker in FateDestinyUnlocker, line 294")
        call RUs(tyu)
        set U2[tyu] = vbu
        set I2[tyu] = xbu
        set P2[tyu] = Wbu
        set A2[tyu] = Qbu
        set D2[tyu] = Ebu
        call Ybr(Tyu, tyu, "when calling doAfter in FateDestinyUnlocker, line 294")
        set Yyu = Pbu + Hbu + Abu + 15.
        set iyu = YRi("when calling alloc_CallbackSingle_doAfter_FateDestinyUnlocker in FateDestinyUnlocker, line 315")
        call RUs(iyu)
        call Ybr(Yyu, iyu, "when calling doAfter in FateDestinyUnlocker, line 315")
        set Gyu = Pbu + Hbu + Abu + 5.
        set Syu = bXt("when calling alloc_CallbackCounted_doPeriodicallyTimed_FateDestinyUnlocker in FateDestinyUnlocker, line 319")
        call Inr(Syu)
        call UYt(.2, Gyu, Syu, "when calling doPeriodicallyTimed in FateDestinyUnlocker, line 319")
        if nD == Wbu then
            call Knu(hm)
        endif
        set gyu = Pbu + Hbu + Abu + 5.
        set cyu = YUt("when calling alloc_CallbackSingle_doAfter_FateDestinyUnlocker in FateDestinyUnlocker, line 327")
        call RUs(cyu)
        set H2[cyu] = Wbu
        call Ybr(gyu, cyu, "when calling doAfter in FateDestinyUnlocker, line 327")
    endif
    set ASw = ASw - 1
    set Wbu = null
endfunction
function FDs takes integer qDs, integer aDs, string nDs returns nothing
    local real dDs
    local real fDs
    local group RDs
    local group TDs
    local unit YDs
    local integer GDs
    local real gDs
    local real hDs
    set DSw[ASw] = nDs
    set ASw = ASw + 1
    set gDs = g2r(tm)
    set hDs = vcw
    set dDs = gDs
    set fDs = hDs
    set RDs = LLt(dDs, fDs, 50., "when calling getUnitsInRange in FateDestinyUnlocker, line 829")
    set TDs = XbS(RDs)
    loop
        exitwhen not hJw(TDs)
        set YDs = tPr(TDs)
        set GDs = hgr(eDs(YDs))
        if t_u(YDs) and yXu(YDs) and QUu(YDs, J7[qDs]) or QUu(YDs, BF) then
            call hyu(GDs, YDs, "when calling playTheDestinyCutScene in FateDestinyUnlocker, line 833")
        endif
    endloop
    call lxs(TDs)
    call Sju(RDs, "when calling release in FateDestinyUnlocker, line 834")
    set ASw = ASw - 1
    set RDs = null
    set TDs = null
    set YDs = null
endfunction
function HCi takes effect DCi returns real
    set Fcw = BlzGetLocalSpecialEffectX(DCi)
    set kcw = BlzGetLocalSpecialEffectY(DCi)
    set jcw = BlzGetLocalSpecialEffectZ(DCi)
    return Fcw
endfunction
function PLu takes string ULu returns integer
    local integer ILu
    set DSw[ASw] = ULu
    set ASw = ASw + 1
    if PC == 0 then
        if AC < 32768 then
            set AC = AC + 1
            set ILu = AC
            set DC[ILu] = 685
        else
            call tNr("Out of memory: Could not create CallbackPeriodic_doPeriodically_Imp4.", "when calling error in Imp4, line 608")
            set ILu = 0
        endif
    else
        set PC = PC - 1
        set ILu = IC[PC]
        set DC[ILu] = 685
    endif
    set ASw = ASw - 1
    return ILu
endfunction
function QMw takes string vMw returns integer
    local integer mMw
    set DSw[ASw] = vMw
    set ASw = ASw + 1
    if PC == 0 then
        if AC < 32768 then
            set AC = AC + 1
            set mMw = AC
            set DC[mMw] = 684
        else
            call tNr("Out of memory: Could not create CallbackPeriodic_doPeriodically_Imp4.", "when calling error in Imp4, line 588")
            set mMw = 0
        endif
    else
        set PC = PC - 1
        set mMw = IC[PC]
        set DC[mMw] = 684
    endif
    set ASw = ASw - 1
    return mMw
endfunction
function hFs takes group GFs, integer gFs returns unit
    return BlzGroupUnitAt(GFs, gFs)
endfunction
function iks takes string sks returns integer
    local integer tks
    set DSw[ASw] = sks
    set ASw = ASw + 1
    if PC == 0 then
        if AC < 32768 then
            set AC = AC + 1
            set tks = AC
            set DC[tks] = 686
        else
            call tNr("Out of memory: Could not create CallbackPeriodic_doPeriodically_Imp4.", "when calling error in Imp4, line 618")
            set tks = 0
        endif
    else
        set PC = PC - 1
        set tks = IC[PC]
        set DC[tks] = 686
    endif
    set ASw = ASw - 1
    return tks
endfunction
function AaS takes integer PaS returns real
    return PaS / TJ * 128. + JP
endfunction
function sst takes integer rst returns real
    return ModuloInteger(rst, TJ) * 128. + HP
endfunction
function R3i takes integer f3i returns real
    set wow = sst(f3i)
    set uow = AaS(f3i)
    return wow
endfunction
function Uts takes integer Zts returns integer
    return Zts
endfunction
function WQs takes integer QQs returns integer
    set Mcw = QQs
    return Mcw
endfunction
function lRi takes real SRi, real cRi returns integer
    local integer oRi = P3w(SRi - HP + 64.) / 128
    local integer ORi = P3w(cRi - JP + 64.) / 128
    if oRi < 0 or oRi >= TJ or ORi < 0 or ORi >= YJ then
        set row =- 1
        return row
    endif
    set row = ORi * TJ + oRi
    return row
endfunction
function hvs takes effect Jxs, string Kxs returns real
    local real Lxs
    local real Xxs
    local real Cxs
    local real Vxs
    local real Bxs
    local real Nxs
    local boolean Mxs
    local integer wvs
    local integer uvs
    local effect rvs
    local integer svs
    local effect tvs
    local real ivs
    local real Svs
    local real cvs
    local real ovs
    local real Ovs
    local real lvs
    local real bvs
    local real yvs
    local real pvs
    local real evs
    local real qvs
    local real avs
    local real nvs
    local real dvs
    local real fvs
    local real Rvs
    local real Tvs
    local real Yvs
    local real Gvs
    local real gvs
    set DSw[ASw] = Kxs
    set ASw = ASw + 1
    if Jxs == null then
        set ovs = LJ
        set Ovs = XJ
        set Cxs = ovs
        set Vxs = Ovs
    else
        set lvs = g2r(Jxs)
        set bvs = vcw
        set Cxs = lvs
        set Vxs = bvs
    endif
    set yvs = Cxs
    set pvs = Vxs
    set Lxs = yvs
    set Xxs = pvs
    set evs = Lxs
    set qvs = Xxs
    set Bxs = evs
    set Nxs = qvs
    set Mxs = false
    set wvs = 25
    loop
        exitwhen not((not Mxs)and wvs > 0)
        set wvs = wvs - 1
        set avs = CKu(rU)
        set nvs = Ccw
        set Bxs = avs
        set Nxs = nvs
        set uvs = gJi(tU, "when calling iterator in Imp4, line 392")
        loop
            exitwhen not slr(uvs, "when calling hasNext in Imp4, line 392")
            set rvs = Aii(Gjs(uvs, "when calling next in Imp4, line 392"), "when calling effectFromIndex in Imp4, line 392")
            if fYr(g2r(rvs), vcw, Bxs, Nxs) > nU then
    set Mxs = true
    exitwhen true
            endif
        endloop
        call Ejr(uvs, "when calling close in Imp4, line 392")
        if Mxs and Jxs != null and fYr(Bxs, Nxs, Lxs, Xxs) < nU or fYr(Bxs, Nxs, Lxs, Xxs) > aU then
            set Mxs = false
        endif
        if Mxs then
            set svs = gJi(iU, "when calling iterator in Imp4, line 401")
            loop
    exitwhen not slr(svs, "when calling hasNext in Imp4, line 401")
    set tvs = Aii(Gjs(svs, "when calling next in Imp4, line 401"), "when calling effectFromIndex in Imp4, line 401")
    if fYr(Bxs, Nxs, R3i(WQs(wps(iU, agS(tvs), "when calling get in Imp4, line 402"))), uow) < nU then
                    set Mxs = false
                    exitwhen true
    endif
            endloop
            call Ejr(svs, "when calling close in Imp4, line 401")
        endif
    endloop
    if Jxs == null and(not Mxs) then
        set dvs = CKu(rU)
        set fvs = Ccw
        set Bxs = dvs
        set Nxs = fvs
    elseif not Mxs then
        set Rvs = Lxs
        set Tvs = Xxs
        set Bxs = Rvs
        set Nxs = Tvs
    endif
    call iUr(iU, agS(Jxs), Uts(lRi(Bxs, Nxs)), "when calling put in Imp4, line 411")
    set Yvs = ATS(R3i(WQs(wps(iU, agS(Jxs), "when calling get in Imp4, line 413"))), uow, dU)
    set Gvs = VSw
    set gvs = BSw
    set ivs = Yvs
    set Svs = Gvs
    set cvs = gvs
    set ASw = ASw - 1
    set Vcw = ivs
    set Bcw = Svs
    set Ncw = cvs
    set rvs = null
    set tvs = null
    return Vcw
endfunction
function tkt takes string VFt returns effect
    local real BFt
    local real NFt
    local real MFt
    local effect wkt
    local real ukt
    local real rkt
    local real skt
    set DSw[ASw] = VFt
    set ASw = ASw + 1
    set ukt = hvs(null, "when calling shieldUnlocker_getRandomPos in Imp4, line 375")
    set rkt = Bcw
    set skt = Ncw
    set BFt = ukt
    set NFt = rkt
    set MFt = skt
    set wkt = uSs(Fxs(BFt, NFt, MFt), icw, FU)
    call vQs(wkt, MFt)
    call Wwu(wkt, RU[$00000000])
    call iUr(tU, agS(wkt), $00000000, "when calling put in Imp4, line 379")
    set ASw = ASw - 1
    set vIw = wkt
    set wkt = null
    return vIw
endfunction
function iQu takes string Wmu returns nothing
    local integer Emu
    local integer Zmu
    local group Umu
    local group Imu
    local group Pmu
    local integer Amu
    local integer Dmu
    local integer Hmu
    local unit Jmu
    local integer Kmu
    local integer Lmu
    local group Xmu
    local unit Cmu
    local effect Vmu
    local integer Bmu
    local real Nmu
    local real Mmu
    local integer wQu
    local integer uQu
    local effect rQu
    local effect sQu
    local real tQu
    set DSw[ASw] = Wmu
    set ASw = ASw + 1
    if not EU then
        set EU = true
        set Emu = hPs(fc[BZ])
        set Zmu = Emu
        call UOS($00000001, "when calling getGroup in Imp4, line 561")
        set Imu = pIw
        call vci(Imu, fc[BZ])
        set Umu = Imu
        call UOS($00000001, "when calling getGroup in Imp4, line 562")
        set Pmu = pIw
        set Amu = 0
        set Dmu = Zmu - 1
        loop
            exitwhen Amu > Dmu
            set Hmu = GetRandomInt($00000000, hPs(Umu) - 1)
            set Jmu = hFs(Umu, Hmu)
            if r5S(Jmu) != pk and r5S(Jmu) != ek then
    call DDr(Pmu, Jmu)
    call Z7t(Umu, Jmu)
            endif
            set Amu = Amu + 1
        endloop
        set Zmu = hPs(Pmu)
        if Zmu > 2 and Zmu < 7 and Emu > 2 and Emu < 7 then
            set Kmu = Zmu - 1
        else
            set Kmu = Zmu
        endif
        set Zmu = Kmu
        set Lmu = 0
        set Xmu = XbS(Pmu)
        loop
            exitwhen not hJw(Xmu)
            set Cmu = tPr(Xmu)
            set Lmu = Lmu + 1
            set Vmu = tkt("when calling shieldUnlocker_spawn in Imp4, line 580")
            call iUr(bU, agS(Vmu), Aei(Cmu), "when calling put in Imp4, line 581")
            call iUr(yU, agS(Vmu), hVs(Ytr(pU, false, HCi(Vmu), kcw, jcw, ATS(ANw(Cmu), XSw, wor(ANw(Cmu), XSw) + GU), VSw, BSw), "when calling lightningToIndex in Imp4, line 584"), "when calling put in Imp4, line 584")
            if Lmu == Zmu then
    exitwhen true
            endif
        endloop
        call lxs(Xmu)
        set Bmu = QMw("when calling alloc_CallbackPeriodic_doPeriodically_Imp4 in Imp4, line 588")
        call kVu(Bmu)
        call wcs(0.05, Bmu, "when calling doPeriodically in Imp4, line 588")
        call Sju(Pmu, "when calling release in Imp4, line 598")
        call Sju(Umu, "when calling release in Imp4, line 599")
        if Zmu >= 9 then
            set Mmu = 5.
        else
            if Zmu >= 7 then
    set Nmu = 6.
            else
    set Nmu = 7.
            endif
            set Mmu = Nmu
        endif
        set qU = Mmu
        if PU != 0 then
            call wHr(PU, "when calling dispatch_CallbackPeriodic_destroyCallbackPeriodic in Imp4, line 605")
            set PU = 0
        endif
        set tQu = qU
        set wQu = PLu("when calling alloc_CallbackPeriodic_doPeriodically_Imp4 in Imp4, line 608")
        call kVu(wQu)
        set PU = wcs(tQu, wQu, "when calling doPeriodically in Imp4, line 608")
        if AU != 0 then
            call wHr(AU, "when calling dispatch_CallbackPeriodic_destroyCallbackPeriodic in Imp4, line 615")
            set AU = 0
        endif
        set uQu = iks("when calling alloc_CallbackPeriodic_doPeriodically_Imp4 in Imp4, line 618")
        call kVu(uQu)
        set AU = wcs(1., uQu, "when calling doPeriodically in Imp4, line 618")
        if not(DU == null) then
            call I7S(DU)
            set DU = null
        endif
        if not(HU == null) then
            call I7S(HU)
            set HU = null
        endif
        if MZ != null and yXu(MZ) then
            call V5S(MZ, oW)
            call V5S(MZ, OW)
            call V5S(MZ, yw)
            set rQu = mXi(MZ, xU, gF)
            call Wwu(rQu, 1.8)
            set DU = rQu
            call qmu(Xqi(MZ), Qcw, Wcw, .015, .030, Iji("Bonded frost armor!", "when calling unObfuscate in Imp4, line 768"), 12., 2., $00000027, $0000008E, $000000C1, $00000000, null, "when calling _CreateTTExEntity_fading in Imp4, line 768")
        endif
        if MZ != null and yXu(MZ) then
            call V5S(wU, oW)
            call V5S(wU, OW)
            call V5S(wU, yw)
            set sQu = mXi(wU, xU, gF)
            call Wwu(sQu, 1.8)
            set HU = sQu
            call qmu(Xqi(wU), Qcw, Wcw, .030, .015, Iji("Bonded frost armor!", "when calling unObfuscate in Imp4, line 775"), 12., 2., $00000027, $0000008E, $000000C1, $00000000, null, "when calling _CreateTTExEntity_fading in Imp4, line 775")
        endif
    endif
    set ASw = ASw - 1
    set Umu = null
    set Imu = null
    set Pmu = null
    set Jmu = null
    set Xmu = null
    set Cmu = null
    set Vmu = null
    set rQu = null
    set sQu = null
endfunction
function ACu takes string ICu returns integer
    local integer PCu
    set DSw[ASw] = ICu
    set ASw = ASw + 1
    if NX == 0 then
        if MX < 32768 then
            set MX = MX + 1
            set PCu = MX
            set wC[PCu] = 882
        else
            call tNr("Out of memory: Could not create CallbackSingle_doAfter_Imp4.", "when calling error in Imp4, line 512")
            set PCu = 0
        endif
    else
        set NX = NX - 1
        set PCu = BX[NX]
        set wC[PCu] = 882
    endif
    set ASw = ASw - 1
    return PCu
endfunction
function kvt takes string hvt returns integer
    local integer Fvt
    set DSw[ASw] = hvt
    set ASw = ASw + 1
    if NX == 0 then
        if MX < 32768 then
            set MX = MX + 1
            set Fvt = MX
            set wC[Fvt] = 883
        else
            call tNr("Out of memory: Could not create CallbackSingle_doAfter_Imp4.", "when calling error in Imp4, line 528")
            set Fvt = 0
        endif
    else
        set NX = NX - 1
        set Fvt = BX[NX]
        set wC[Fvt] = 883
    endif
    set ASw = ASw - 1
    return Fvt
endfunction
function lCw takes string oCw returns integer
    local integer OCw
    set DSw[ASw] = oCw
    set ASw = ASw + 1
    if NX == 0 then
        if MX < 32768 then
            set MX = MX + 1
            set OCw = MX
            set wC[OCw] = 884
        else
            call tNr("Out of memory: Could not create CallbackSingle_doAfter_Imp4.", "when calling error in Imp4, line 542")
            set OCw = 0
        endif
    else
        set NX = NX - 1
        set OCw = BX[NX]
        set wC[OCw] = 884
    endif
    set ASw = ASw - 1
    return OCw
endfunction
function rku takes unit vFu, string mFu returns nothing
    local real QFu
    local real WFu
    local effect EFu
    local effect ZFu
    local effect UFu
    local real IFu
    local real PFu
    local real AFu
    local real DFu
    local integer HFu
    local integer JFu
    local integer KFu
    local real LFu
    local real XFu
    local real CFu
    local real VFu
    local real BFu
    local real NFu
    local real MFu
    local real wku
    local real uku
    set DSw[ASw] = mFu
    set ASw = ASw + 1
    if not ZU then
        set ZU = true
        call qmu(Xqi(vFu), Qcw, Wcw, .015, .030, Iji("Cannon barrage!", "when calling unObfuscate in Imp4, line 485"), 12., 2., $00000070, $00000003, $00000003, $000000EF, null, "when calling _CreateTTExEntity_fading in Imp4, line 485")
        set VFu = ANw(cuS(fc[BZ]))
        set BFu = XSw
        set QFu = VFu
        set WFu = BFu
        set ZFu = uSs(QFu, WFu, WU)
        call Xjr(ZFu, 5.)
        set UFu = ZFu
        call Wwu(UFu, 3.5)
        set EFu = UFu
        if NZ then
            call Wwu(EFu, 5.09)
            set gU = 800.
        else
            set gU = 550.
        endif
        set IFu = 8.
        set PFu = 8. + 5.
        set AFu = 8. + 5. + 3.
        set DFu = .20
        set LFu = IFu
        set HFu = ACu("when calling alloc_CallbackSingle_doAfter_Imp4 in Imp4, line 512")
        call RUs(HFu)
        set NFu = QFu
        set MFu = WFu
        set M9[HFu] = NFu
        set w0w[HFu] = MFu
        set u0w[HFu] = DFu
        set r0w[HFu] = AFu
        set s0w[HFu] = IFu
        call Ybr(LFu, HFu, "when calling doAfter in Imp4, line 512")
        set XFu = PFu
        set JFu = kvt("when calling alloc_CallbackSingle_doAfter_Imp4 in Imp4, line 528")
        call RUs(JFu)
        set wku = QFu
        set uku = WFu
        set S0w[JFu] = wku
        set c0w[JFu] = uku
        call Ybr(XFu, JFu, "when calling doAfter in Imp4, line 528")
        set CFu = AFu
        set KFu = lCw("when calling alloc_CallbackSingle_doAfter_Imp4 in Imp4, line 542")
        call RUs(KFu)
        set o0w[KFu] = EFu
        call Ybr(CFu, KFu, "when calling doAfter in Imp4, line 542")
    endif
    set ASw = ASw - 1
    set EFu = null
    set ZFu = null
    set UFu = null
endfunction
function For takes integer Tor, integer Yor, string Gor returns nothing
    local real gor
    local boolean hor
    set DSw[ASw] = Gor
    set ASw = ASw + 1
    set gor = Udi(d0w[Tor]) / aSr(d0w[Tor])
    set hor = false
    if not yXu(d0w[Tor]) then
        set f0w[Tor] = 13
    elseif gor * 100. <= 100 - f0w[Tor] * 8 then
        set hor = true
    endif
    if hor and f0w[Tor] < 13 and(not(EU or ZU)) then
        set f0w[Tor] = f0w[Tor] + 1
        if GetRandomInt($00000001, $00000005) == 1 then
            call iQu("when calling commanderShield_start in Imp4, line 842")
        else
            call rku(d0w[Tor], "when calling admiralBarrage_start in Imp4, line 844")
        endif
    endif
    if f0w[Tor] == 13 or smt(fc[BZ]) == 0 then
        call wHr(Yor, "when calling dispatch_CallbackPeriodic_destroyCallbackPeriodic in Imp4, line 847")
    endif
    set ASw = ASw - 1
endfunction
function GNw takes integer RNw, integer TNw, string YNw returns nothing
    set DSw[ASw] = YNw
    set ASw = ASw + 1
    if (not Jyr(iX, Aei(tSw[RNw]), "when calling has in Voidless_mechanics, line 690"))or(not Zcr(tSw[RNw])) then
        call uRi(iSw[RNw])
        call wHr(TNw, "when calling dispatch_CallbackPeriodic_destroyCallbackPeriodic in Voidless_mechanics, line 692")
    elseif smt(fc[MJ]) == 0 or OK < 1 then
        call uRi(iSw[RNw])
        call u5w(iX, Aei(tSw[RNw]), "when calling remove in Voidless_mechanics, line 696")
        call wHr(TNw, "when calling dispatch_CallbackPeriodic_destroyCallbackPeriodic in Voidless_mechanics, line 697")
    elseif SSw[RNw] == cSw[RNw]then
        call wHr(TNw, "when calling dispatch_CallbackPeriodic_destroyCallbackPeriodic in Voidless_mechanics, line 699")
    elseif oSw[RNw] > SSw[RNw]then
        set cSw[RNw] = cSw[RNw] - OSw[RNw]
        call Wwu(iSw[RNw], cSw[RNw])
    endif
    set ASw = ASw - 1
endfunction
function Zns takes nothing returns boolean
    return Bw and Nw and Mw and wu and uu and ru and su and tu and Ou and lu and bu and yu and pu and(not eu) and qu and fu
endfunction
function Git takes integer dit, integer fit, string Rit returns nothing
    local integer Tit
    local integer Yit
    set DSw[ASw] = Rit
    set ASw = ASw + 1
    if not Zns() then
        set Tit = c5r(gQ, "when calling iterator in JobAdvancementQuestHandler, line 1083")
        loop
            exitwhen not Tji(Tit)
            set Yit = LXi(Tit)
            call CAs(hqs(xMi(xus(Yit, "when calling getCustomPlayer in JobAdvancementQuestHandler, line 1084"), "when calling getCHero in JobAdvancementQuestHandler, line 1084"), "when calling getHero in JobAdvancementQuestHandler, line 1084"), "when calling ac_addRandomDebuff1 in JobAdvancementQuestHandler, line 1084")
        endloop
        call vms(Tit, "when calling close in JobAdvancementQuestHandler, line 1083")
    endif
    set ASw = ASw - 1
endfunction
function Rer takes string der returns integer
    local integer fer
    set DSw[ASw] = der
    set ASw = ASw + 1
    if PC == 0 then
        if AC < 32768 then
            set AC = AC + 1
            set fer = AC
            set DC[fer] = 683
        else
            call tNr("Out of memory: Could not create CallbackPeriodic_doPeriodically_Imp4.", "when calling error in Imp4, line 349")
            set fer = 0
        endif
    else
        set PC = PC - 1
        set fer = IC[PC]
        set DC[fer] = 683
    endif
    set ASw = ASw - 1
    return fer
endfunction
function nms takes effect Nvs, real Mvs, real wms, real ums, string rms returns nothing
    local real sms
    local real tms
    local real ims
    local real Sms
    local boolean cms
    local real oms
    local integer Oms
    local integer lms
    local real bms
    local real yms
    local real pms
    local real ems
    local real qms
    local real ams
    set DSw[ASw] = rms
    set ASw = ASw + 1
    if Nvs != null and Mvs != 0. and wms != 0. and(not Jyr(OU, agS(Nvs), "when calling has in Imp4, line 341")) then
        set sms = 150.
        set yms = g2r(Nvs)
        set pms = vcw
        set tms = yms
        set ims = pms
        set Sms = sms * iF
        set cms = false
        set oms = Atan2(wms - ims, Mvs - tms)
        set bms = iF
        set lms = Rer("when calling alloc_CallbackPeriodic_doPeriodically_Imp4 in Imp4, line 349")
        call kVu(lms)
        set K9[lms] = Nvs
        set L9[lms] = oms
        set ems = Mvs
        set qms = wms
        set ams = ums
        set X9[lms] = ems
        set C9[lms] = qms
        set V9[lms] = ams
        set B9[lms] = Sms
        set N9[lms] = cms
        set Oms = wcs(bms, lms, "when calling doPeriodically in Imp4, line 349")
        call iUr(OU, agS(Nvs), Oms, "when calling put in Imp4, line 372")
    endif
    set ASw = ASw - 1
endfunction
function Gms takes integer dms, integer fms, string Rms returns nothing
    local integer Tms
    local effect Yms
    set DSw[ASw] = Rms
    set ASw = ASw + 1
    set Tms = gJi(tU, "when calling iterator in Imp4, line 609")
    loop
        exitwhen not slr(Tms, "when calling hasNext in Imp4, line 609")
        set Yms = Aii(Gjs(Tms, "when calling next in Imp4, line 609"), "when calling effectFromIndex in Imp4, line 609")
        if (not Jyr(OU, agS(Yms), "when calling has in Imp4, line 610"))and wps(tU, agS(Yms), "when calling get in Imp4, line 610") < eU then
            call nms(Yms, hvs(Yms, "when calling shieldUnlocker_getRandomPos in Imp4, line 611"), Bcw, Ncw, "when calling shieldUnlockerMoveToNewPos in Imp4, line 611")
        endif
    endloop
    call Ejr(Tms, "when calling close in Imp4, line 609")
    set ASw = ASw - 1
    set Yms = null
endfunction
function Gyr takes integer Ryr, integer Tyr, string Yyr returns nothing
    set DSw[ASw] = Yyr
    set ASw = ASw + 1
    call iUi("when calling periodicalItemCheck in JobAdvancementQuestHandler, line 787")
    set ASw = ASw - 1
endfunction
function kCt takes integer FCt returns boolean
    return JM[FCt]
endfunction
function E0i takes integer m0i, string Q0i returns boolean
    local boolean W0i
    set DSw[ASw] = Q0i
    set ASw = ASw + 1
    if MC[m0i] == 0 then
        if m0i == 0 then
            call tNr("Nullpointer exception when calling CustomHero.isCritterActive", "when calling error in CustomHero, line 256")
        else
            call tNr("Called CustomHero.isCritterActive on invalid object.", "when calling error in CustomHero, line 256")
        endif
    endif
    set W0i = kCt(m0i)
    set ASw = ASw - 1
    return W0i
endfunction
function Q2r takes integer v2r, integer m2r returns nothing
    set HM[v2r] = m2r
endfunction
function ZGS takes integer QGS, integer WGS, string EGS returns nothing
    set DSw[ASw] = EGS
    set ASw = ASw + 1
    if MC[QGS] == 0 then
        if QGS == 0 then
            call tNr("Nullpointer exception when calling CustomHero.setCritterId", "when calling error in CustomHero, line 262")
        else
            call tNr("Called CustomHero.setCritterId on invalid object.", "when calling error in CustomHero, line 262")
        endif
    endif
    call Q2r(QGS, WGS)
    set ASw = ASw - 1
endfunction
function jVs takes unit kVs returns boolean
    return IsUnitHidden(kVs)
endfunction
function soi takes unit uoi, string roi returns nothing
    call BlzSetUnitName(uoi, roi)
endfunction
function i6t takes integer L5s, integer X5s, string C5s returns nothing
    local integer V5s
    local integer B5s
    local unit N5s
    local real M5s
    local real w6t
    local integer u6t
    local integer r6t
    local unit s6t
    local unit t6t
    set DSw[ASw] = C5s
    set ASw = ASw + 1
    if Jyr(WF, X5s, "when calling has in Critters, line 69") then
        set B5s = wps(WF, X5s, "when calling get in Critters, line 69")
    else
        set B5s =- 1
    endif
    set V5s = B5s
    if V5s !=- 1 then
        set N5s = v3w(L5s, "when calling getCritter in Critters, line 72")
        if Jyr(QF, V5s, "when calling has in Critters, line 73") then
            set w6t = dMw(wps(QF, V5s, "when calling get in Critters, line 73"))
        else
            set w6t = 0.5
        endif
        set M5s = w6t
        if Jyr(WF, X5s, "when calling has in Critters, line 74") then
            set r6t = wps(WF, X5s, "when calling get in Critters, line 74")
        else
            set r6t =- 1
        endif
        set u6t = r6t
        if jVs(N5s) then
            call AQs(N5s)
        endif
        call BlzSetUnitSkin(N5s, u6t)
        set s6t = N5s
        call rZu(s6t, M5s)
        set t6t = s6t
        call soi(t6t, nPr(C_r(ZF, X5s, "when calling get in Critters, line 80"), "when calling stringFromIndex in Critters, line 80"))
        call qsi(L5s, true, "when calling setCritterActive in Critters, line 81")
        call ZGS(L5s, u6t, "when calling setCritterId in Critters, line 82")
    endif
    set ASw = ASw - 1
    set N5s = null
    set s6t = null
    set t6t = null
endfunction
function yks takes integer bks returns integer
    return HM[bks]
endfunction
function tGi takes integer uGi, string rGi returns integer
    local integer sGi
    set DSw[ASw] = rGi
    set ASw = ASw + 1
    if MC[uGi] == 0 then
        if uGi == 0 then
            call tNr("Nullpointer exception when calling CustomHero.getCritterId", "when calling error in CustomHero, line 265")
        else
            call tNr("Called CustomHero.getCritterId on invalid object.", "when calling error in CustomHero, line 265")
        endif
    endif
    set sGi = yks(uGi)
    set ASw = ASw - 1
    return sGi
endfunction
function WCs takes integer YCs, unit GCs, string gCs returns nothing
    local real hCs
    local real FCs
    local real kCs
    local real jCs
    local real xCs
    local real vCs
    local real mCs
    local real QCs
    set DSw[ASw] = gCs
    set ASw = ASw + 1
    if YCs != 0 and GCs != null then
        set xCs = ANw(hqs(YCs, "when calling getHero in Critters, line 113"))
        set vCs = XSw
        set hCs = xCs
        set FCs = vCs
        set mCs = ANw(GCs)
        set QCs = XSw
        set kCs = mCs
        set jCs = QCs
        if fYr(hCs, FCs, kCs, jCs) > 600. then
            if not yXu(GCs) then
    call i6t(YCs, tGi(YCs, "when calling getCritterId in Critters, line 118"), "when calling applyCritterSkinScale in Critters, line 118")
            endif
            call J7i(GCs, hCs, FCs)
            call Hcu(GCs, sD, hqs(YCs, "when calling getHero in Critters, line 120"))
        endif
    endif
    set ASw = ASw - 1
endfunction
function Heu takes integer Zeu, integer Ueu, string Ieu returns nothing
    local integer Peu
    local integer Aeu
    local integer Deu
    set DSw[ASw] = Ieu
    set ASw = ASw + 1
    set Peu = c5r(gQ, "when calling iterator in Critters, line 106")
    loop
        exitwhen not Tji(Peu)
        set Aeu = LXi(Peu)
        set Deu = xMi(xus(Aeu, "when calling getCustomPlayer in Critters, line 107"), "when calling getCHero in Critters, line 107")
        if Deu != 0 and E0i(Deu, "when calling isCritterActive in Critters, line 108") and hqs(Deu, "when calling getHero in Critters, line 108") != null then
            call WCs(Deu, v3w(Deu, "when calling getCritter in Critters, line 109"), "when calling critterPeriodicUpdate in Critters, line 109")
        endif
    endloop
    call vms(Peu, "when calling close in Critters, line 106")
    set ASw = ASw - 1
endfunction
function O6t takes unit c6t, real o6t returns nothing
    call BlzSetUnitArmor(c6t, o6t)
endfunction
function h5w takes integer Y5w, string G5w returns integer
    local integer g5w
    set DSw[ASw] = G5w
    set ASw = ASw + 1
    set g5w = qMw(o8[Y5w], "when calling size in HashMap, line 119")
    set ASw = ASw - 1
    return g5w
endfunction
function hji takes integer Yji, string Gji returns integer
    local integer gji
    set DSw[ASw] = Gji
    set ASw = ASw + 1
    if vB[Yji] == 0 then
        if Yji == 0 then
            call tNr("Nullpointer exception when calling IterableMap.size", "when calling error in HashMap, line 118")
        else
            call tNr("Called IterableMap.size on invalid object.", "when calling error in HashMap, line 118")
        endif
    endif
    set gji = h5w(Yji, "when calling size in HashMap, line 118")
    set ASw = ASw - 1
    return gji
endfunction
function l1i takes string o1i returns integer
    local integer O1i
    set DSw[ASw] = o1i
    set ASw = ASw + 1
    if NX == 0 then
        if MX < 32768 then
            set MX = MX + 1
            set O1i = MX
            set wC[O1i] = 1089
        else
            call tNr("Out of memory: Could not create CallbackSingle_doAfter_doPeriodically_Voidless_mechanics.", "when calling error in Voidless_mechanics, line 364")
            set O1i = 0
        endif
    else
        set NX = NX - 1
        set O1i = BX[NX]
        set wC[O1i] = 1089
    endif
    set ASw = ASw - 1
    return O1i
endfunction
function I2t takes integer b2t, integer y2t, string p2t returns nothing
    local integer e2t
    local unit q2t
    local real a2t
    local real n2t
    local real d2t
    local real f2t
    local real R2t
    local real T2t
    local lightning Y2t
    local integer G2t
    local integer g2t
    local unit h2t
    local integer F2t
    local integer k2t
    local integer j2t
    local integer x2t
    local unit v2t
    local real m2t
    local real Q2t
    local real W2t
    local real E2t
    local real Z2t
    local real U2t
    set DSw[ASw] = p2t
    set ASw = ASw + 1
    if (hji(NL, "when calling size in Voidless_mechanics, line 355") == 0 and wds(wX, "when calling size in Voidless_mechanics, line 355") == 0)or OK < 1 then
        call wHr(y2t, "when calling dispatch_CallbackPeriodic_destroyCallbackPeriodic in Voidless_mechanics, line 356")
    else
        set e2t = c5r(wX, "when calling iterator in Voidless_mechanics, line 358")
        loop
            exitwhen not Tji(e2t)
            set q2t = iCu(LXi(e2t), "when calling unitFromIndex in Voidless_mechanics, line 358")
            if uK != null and yXu(uK) then
    call UNi(uK, aSr(uK) * Fiw[b2t])
    set m2t = ATS(ANw(q2t), XSw, 150.)
    set Q2t = VSw
    set W2t = BSw
    set a2t = m2t
    set n2t = Q2t
    set d2t = W2t
    set E2t = ATS(ANw(uK), XSw, 250.)
    set Z2t = VSw
    set U2t = BSw
    set f2t = E2t
    set R2t = Z2t
    set T2t = U2t
    set Y2t = AddLightningEx("DRAM", false, a2t, n2t, d2t, f2t, R2t, T2t)
    set G2t = l1i("when calling alloc_CallbackSingle_doAfter_doPeriodically_Voidless_mechanics in Voidless_mechanics, line 364")
    call RUs(G2t)
    set xiw[G2t] = Y2t
    call Ybr(3., G2t, "when calling doAfter in Voidless_mechanics, line 364")
            endif
        endloop
        call vms(e2t, "when calling close in Voidless_mechanics, line 358")
        set g2t = gJi(NL, "when calling iterator in Voidless_mechanics, line 367")
        loop
            exitwhen not slr(g2t, "when calling hasNext in Voidless_mechanics, line 367")
            set h2t = iCu(Gjs(g2t, "when calling next in Voidless_mechanics, line 367"), "when calling unitFromIndex in Voidless_mechanics, line 367")
            if h2t != null and yXu(h2t) then
    if ANw(h2t) != LJ or XSw != XJ then
                    set F2t = 1
                    set k2t = kiw[b2t]
                    loop
                        exitwhen F2t > k2t
                        if GetRandomInt($00000000, $00000001) == 0 then
                            set x2t = XK
                        else
                            set x2t = CK
                        endif
                        set j2t = x2t
                        set v2t = dps(aD[PLAYER_NEUTRAL_AGGRESSIVE], j2t, ANw(h2t), XSw, GetRandomReal(0., 359.))
                        call GYS(v2t, aSr(v2t) * jiw[b2t])
                        call fjs(v2t, P3w(mks(v2t, $00000000) * jiw[b2t]), $00000000)
                        call O6t(v2t, ONt(v2t) * jiw[b2t])
                        call OtS(v2t, YUr(v2t) * jiw[b2t])
                        call vwt(wps(NL, Aei(h2t), "when calling get in Voidless_mechanics, line 377"), Aei(v2t), "when calling add in Voidless_mechanics, line 377")
                        set F2t = F2t + 1
                    endloop
    else
                    call Dns(wps(NL, Aei(h2t), "when calling get in Voidless_mechanics, line 379"), "when calling recycleRiftSpawnerLL in Voidless_mechanics, line 379")
                    call u5w(NL, Aei(h2t), "when calling remove in Voidless_mechanics, line 380")
                    call uFr(h2t)
    endif
            endif
        endloop
        call Ejr(g2t, "when calling close in Voidless_mechanics, line 367")
    endif
    set ASw = ASw - 1
    set q2t = null
    set Y2t = null
    set h2t = null
    set v2t = null
endfunction
function eIr takes real lIr, real bIr returns real
    local real yIr = XD
    local real pIr
    if lIr > yIr then
        set pIr = lIr
    else
        set pIr = yIr
    endif
    set yIr = pIr
    if bIr > yIr then
        set pIr = bIr
    else
        set pIr = yIr
    endif
    set yIr = pIr
    return yIr
endfunction
function Meu takes unit Leu, string Xeu returns real
    local real Ceu
    local integer Veu
    local integer Beu
    local integer Neu
    set DSw[ASw] = Xeu
    set ASw = ASw + 1
    set Ceu = 0.
    set Veu = 0
    set Beu = dcs(Leu) - 1
    loop
        exitwhen Veu > Beu
        set Neu = q3t(ofi(Leu, Veu))
        if Jyr(EI, Neu, "when calling has in Items_Pickup_Drop, line 54") then
            set Ceu = eIr(dMw(wps(EI, Neu, "when calling get in Items_Pickup_Drop, line 55")), Ceu)
        endif
        if Ceu == gI then
            exitwhen true
        endif
        set Veu = Veu + 1
    endloop
    set ASw = ASw - 1
    return Ceu
endfunction
function S5u takes unit t5u, real i5u returns nothing
    if i5u >= 1. then
        call GYS(t5u, Udi(t5u) + i5u)
    endif
endfunction
function wbS takes unit VlS returns boolean
    local boolean BlS = false
    local integer NlS = 0
    local integer MlS = dcs(VlS) - 1
    loop
        exitwhen NlS > MlS
        if jvs(ofi(VlS, NlS)) then
            set BlS = true
            exitwhen true
        endif
        set NlS = NlS + 1
    endloop
    return BlS
endfunction
function Jhs takes integer Phs, integer Ahs, string Dhs returns nothing
    local unit Hhs
    set DSw[ASw] = Dhs
    set ASw = ASw + 1
    if m0w[Phs] != null and yXu(m0w[Phs]) and TYt(wps(aI, Q0w[Phs], "when calling get in Items_Pickup_Drop, line 510")) and wbS(m0w[Phs]) then
        set Hhs = hqs(xMi(xus(Q0w[Phs], "when calling getCustomPlayer in Items_Pickup_Drop, line 511"), "when calling getCHero in Items_Pickup_Drop, line 511"), "when calling getHero in Items_Pickup_Drop, line 511")
        call S5u(Hhs, aSr(Hhs) * Meu(Hhs, "when calling inspirit_getRegenPerc in Items_Pickup_Drop, line 512"))
    elseif Ahs != 0 then
        call GVw(aI, Q0w[Phs], O_i(false), "when calling put in Items_Pickup_Drop, line 517")
        call wHr(Ahs, "when calling dispatch_CallbackPeriodic_destroyCallbackPeriodic in Items_Pickup_Drop, line 518")
    endif
    set ASw = ASw - 1
    set Hhs = null
endfunction
function Lns takes integer Hns, integer Jns, string Kns returns nothing
    set DSw[ASw] = Kns
    set ASw = ASw + 1
    if MZ != null and yXu(MZ) and smt(fc[BZ]) > 0 then
        call xvu(MZ, "stomp")
    else
        call wHr(Jns, "when calling dispatch_CallbackPeriodic_destroyCallbackPeriodic in Imp4, line 284")
    endif
    set ASw = ASw - 1
endfunction
function rnu takes nothing returns string
    return L7s(GQ, true)
endfunction
function Mhr takes integer Bhr, integer Nhr returns nothing
    call Wrt(W1[Bhr], rnu())
endfunction
function PMr takes integer vMr, integer mMr, string QMr returns nothing
    local integer WMr
    local integer EMr
    local integer ZMr
    local integer UMr
    local integer IMr
    set DSw[ASw] = QMr
    set ASw = ASw + 1
    set WMr = c5r(gQ, "when calling iterator in Inspirit_Overvelde, line 131")
    loop
        exitwhen not Tji(WMr)
        set EMr = LXi(WMr)
        set ZMr = wps(OI, EMr, "when calling get in Inspirit_Overvelde, line 133") - 1
        if ZMr < 0 then
            set ZMr = 0
        endif
        call GVw(OI, EMr, ZMr, "when calling put in Inspirit_Overvelde, line 137")
        if ZMr == 0 then
            set UMr = xus(EMr, "when calling getCustomPlayer in Inspirit_Overvelde, line 140")
            set IMr = xMi(UMr, "when calling getCHero in Inspirit_Overvelde, line 141")
            if IMr != 0 then
    call Qpi(hqs(IMr, "when calling getHero in Inspirit_Overvelde, line 144"), "when calling inspiritPrismUpdateIcon in Inspirit_Overvelde, line 144")
            endif
        endif
    endloop
    call vms(WMr, "when calling close in Inspirit_Overvelde, line 131")
    set ASw = ASw - 1
endfunction
function Jar takes integer Aar returns string
    local string Har = RH
    local string Dar
    if Aar >= 0 and Aar < 10 then
        set Dar = "0"
    else
        set Dar = ""
    endif
    return Har + Dar + fju(Aar) + TH
endfunction
function Qfu takes integer xfu, integer vfu, string mfu returns nothing
    set DSw[ASw] = mfu
    set ASw = ASw + 1
    if (esw[xfu] != null and qsw[xfu] != 0 and hqs(qsw[xfu], "when calling getHero in SpellIconWithGif, line 55") == esw[xfu])or(not Jyr(mH, Aei(esw[xfu]), "when calling has in SpellIconWithGif, line 55")) then
        if yXu(esw[xfu]) then
            if not gSr(esw[xfu], $41475A5A) then
    call lKs(esw[xfu], $41475A5A, $00000001)
            endif
            call Zmt(esw[xfu], $41475A5A, $00000001, nPr(C_r(xH, EH, "when calling get in SpellIconWithGif, line 59"), "when calling stringFromIndex in SpellIconWithGif, line 59"), nPr(C_r(vH, ZH, "when calling get in SpellIconWithGif, line 59"), "when calling stringFromIndex in SpellIconWithGif, line 59"), Jar(asw[xfu]))
            set EH = EH + 1
            if EH > 100 then
    set EH = 0
            endif
            set ZH = ZH - 1
            if ZH < 0 then
    set ZH = 100
            endif
            set asw[xfu] = asw[xfu] + 1
            if asw[xfu] == YH then
    set asw[xfu] = 0
            endif
        endif
    else
        if Jyr(mH, Aei(esw[xfu]), "when calling has in SpellIconWithGif, line 72") then
            call klS(mH, Aei(esw[xfu]), "when calling remove in SpellIconWithGif, line 73")
        endif
        call wHr(vfu, "when calling dispatch_CallbackPeriodic_destroyCallbackPeriodic in SpellIconWithGif, line 74")
    endif
    set ASw = ASw - 1
endfunction
function KSs takes string FSs returns nothing
    local integer kSs
    local effect jSs
    local integer xSs
    local integer vSs
    local integer mSs
    local effect QSs
    local integer WSs
    local effect ESs
    local integer ZSs
    local effect USs
    local real ISs
    local real PSs
    local real ASs
    local real DSs
    local unit HSs
    local unit JSs
    set DSw[ASw] = FSs
    set ASw = ASw + 1
    if PU != 0 then
        call wHr(PU, "when calling dispatch_CallbackPeriodic_destroyCallbackPeriodic in Imp4, line 417")
        set PU = 0
    endif
    if AU != 0 then
        call wHr(AU, "when calling dispatch_CallbackPeriodic_destroyCallbackPeriodic in Imp4, line 421")
        set AU = 0
    endif
    set kSs = gJi(OU, "when calling iterator in Imp4, line 424")
    loop
        exitwhen not slr(kSs, "when calling hasNext in Imp4, line 424")
        set jSs = Aii(Gjs(kSs, "when calling next in Imp4, line 424"), "when calling effectFromIndex in Imp4, line 424")
        call wHr(wps(OU, agS(jSs), "when calling get in Imp4, line 425"), "when calling dispatch_CallbackPeriodic_destroyCallbackPeriodic in Imp4, line 425")
    endloop
    call Ejr(kSs, "when calling close in Imp4, line 424")
    set xSs = c5r(lU, "when calling iterator in Imp4, line 427")
    loop
        exitwhen not Tji(xSs)
        set vSs = LXi(xSs)
        call wHr(vSs, "when calling dispatch_CallbackPeriodic_destroyCallbackPeriodic in Imp4, line 428")
    endloop
    call vms(xSs, "when calling close in Imp4, line 427")
    set mSs = gJi(SU, "when calling iterator in Imp4, line 430")
    loop
        exitwhen not slr(mSs, "when calling hasNext in Imp4, line 430")
        set QSs = Aii(Gjs(mSs, "when calling next in Imp4, line 430"), "when calling effectFromIndex in Imp4, line 430")
        call I7S(Aii(wps(SU, agS(QSs), "when calling get in Imp4, line 431"), "when calling effectFromIndex in Imp4, line 431"))
    endloop
    call Ejr(mSs, "when calling close in Imp4, line 430")
    set WSs = gJi(yU, "when calling iterator in Imp4, line 433")
    loop
        exitwhen not slr(WSs, "when calling hasNext in Imp4, line 433")
        set ESs = Aii(Gjs(WSs, "when calling next in Imp4, line 433"), "when calling effectFromIndex in Imp4, line 433")
        call b9t(s1w(wps(yU, agS(ESs), "when calling get in Imp4, line 434"), "when calling lightningFromIndex in Imp4, line 434"))
    endloop
    call Ejr(WSs, "when calling close in Imp4, line 433")
    set ZSs = gJi(tU, "when calling iterator in Imp4, line 437")
    loop
        exitwhen not slr(ZSs, "when calling hasNext in Imp4, line 437")
        set USs = Aii(Gjs(ZSs, "when calling next in Imp4, line 437"), "when calling effectFromIndex in Imp4, line 437")
        if Jyr(cU, agS(USs), "when calling has in Imp4, line 438") then
            call pPu(s1w(wps(cU, agS(USs), "when calling get in Imp4, line 439"), "when calling lightningFromIndex in Imp4, line 439"), true, IP, PP, IP, PP)
            call b9t(s1w(wps(cU, agS(USs), "when calling get in Imp4, line 440"), "when calling lightningFromIndex in Imp4, line 440"))
            call I7S(USs)
        endif
        if Jyr(oU, agS(USs), "when calling has in Imp4, line 442") then
            call pPu(s1w(wps(oU, agS(USs), "when calling get in Imp4, line 443"), "when calling lightningFromIndex in Imp4, line 443"), true, IP, PP, IP, PP)
            call b9t(s1w(wps(oU, agS(USs), "when calling get in Imp4, line 444"), "when calling lightningFromIndex in Imp4, line 444"))
            call I7S(USs)
        endif
    endloop
    call Ejr(ZSs, "when calling close in Imp4, line 437")
    call u3w(lU, "when calling clear in Imp4, line 447")
    call Hpi(OU, "when calling flush in Imp4, line 448")
    call Hpi(tU, "when calling flush in Imp4, line 449")
    call Hpi(iU, "when calling flush in Imp4, line 450")
    call Hpi(SU, "when calling flush in Imp4, line 451")
    call yau(cU, "when calling flush in Imp4, line 452")
    call yau(oU, "when calling flush in Imp4, line 453")
    call Hpi(bU, "when calling flush in Imp4, line 454")
    call Hpi(yU, "when calling flush in Imp4, line 455")
    if not(DU == null) then
        call I7S(DU)
        set DU = null
    endif
    if not(HU == null) then
        call I7S(HU)
        set HU = null
    endif
    if MZ != null and yXu(MZ) then
        call Q_s(MZ, oW)
        call Q_s(MZ, OW)
        call Q_s(MZ, yw)
        set ISs = Udi(MZ) - hU
        set HSs = MZ
        if ISs <= 0. then
            set PSs = 10000.
        else
            set PSs = ISs
        endif
        call GYS(HSs, PSs)
    endif
    if wU != null and yXu(wU) then
        call Q_s(wU, oW)
        call Q_s(wU, OW)
        call Q_s(wU, yw)
        set ASs = Udi(wU) - hU
        set JSs = wU
        if ASs <= 0. then
            set DSs = 10000.
        else
            set DSs = ASs
        endif
        call GYS(JSs, DSs)
    endif
    set ASw = ASw - 1
    set jSs = null
    set QSs = null
    set ESs = null
    set USs = null
    set HSs = null
    set JSs = null
endfunction
function Sir takes string tir returns integer
    local integer iir
    set DSw[ASw] = tir
    set ASw = ASw + 1
    if rC == 0 then
        if sC < 32768 then
            set sC = sC + 1
            set iir = sC
            set tC[iir] = 663
        else
            call tNr("Out of memory: Could not create CallbackCounted_doPeriodicallyCounted_doPeriodically_Imp4.", "when calling error in Imp4, line 680")
            set iir = 0
        endif
    else
        set rC = rC - 1
        set iir = uC[rC]
        set tC[iir] = 663
    endif
    set ASw = ASw - 1
    return iir
endfunction
function bpu takes string Opu returns integer
    local integer lpu
    set DSw[ASw] = Opu
    set ASw = ASw + 1
    if rC == 0 then
        if sC < 32768 then
            set sC = sC + 1
            set lpu = sC
            set tC[lpu] = 662
        else
            call tNr("Out of memory: Could not create CallbackCounted_doPeriodicallyCounted_doPeriodically_Imp4.", "when calling error in Imp4, line 671")
            set lpu = 0
        endif
    else
        set rC = rC - 1
        set lpu = uC[rC]
        set tC[lpu] = 662
    endif
    set ASw = ASw - 1
    return lpu
endfunction
function mNr takes string xNr returns integer
    local integer vNr
    set DSw[ASw] = xNr
    set ASw = ASw + 1
    if PC == 0 then
        if AC < 32768 then
            set AC = AC + 1
            set vNr = AC
            set DC[vNr] = 717
        else
            call tNr("Out of memory: Could not create CallbackPeriodic_doPeriodically_doPeriodically_Imp4.", "when calling error in Imp4, line 714")
            set vNr = 0
        endif
    else
        set PC = PC - 1
        set vNr = IC[PC]
        set DC[vNr] = 717
    endif
    set ASw = ASw - 1
    return vNr
endfunction
function qZi takes real OZi, real lZi, real bZi, real yZi, real pZi, real eZi returns real
    set jow = OZi + yZi
    set xow = lZi + pZi
    set vow = bZi + eZi
    return jow
endfunction
function Rjt takes integer Zkt, integer Ukt, string Ikt returns nothing
    local integer Pkt
    local effect Akt
    local unit Dkt
    local integer Hkt
    local effect Jkt
    local integer Kkt
    local boolean Lkt
    local real Xkt
    local group Ckt
    local group Vkt
    local unit Bkt
    local integer Nkt
    local integer Mkt
    local integer wjt
    local integer ujt
    local real rjt
    local real sjt
    local real tjt
    local integer ijt
    local integer Sjt
    local integer cjt
    local boolean ojt
    local effect Ojt
    local effect ljt
    local effect bjt
    local integer yjt
    local integer pjt
    local integer ejt
    local integer qjt
    local effect ajt
    local integer njt
    local integer djt
    local integer fjt
    set DSw[ASw] = Ikt
    set ASw = ASw + 1
    set Pkt = gJi(bU, "when calling iterator in Imp4, line 620")
    loop
        exitwhen not slr(Pkt, "when calling hasNext in Imp4, line 620")
        set Akt = Aii(Gjs(Pkt, "when calling next in Imp4, line 620"), "when calling effectFromIndex in Imp4, line 620")
        set Dkt = iCu(wps(bU, agS(Akt), "when calling get in Imp4, line 621"), "when calling unitFromIndex in Imp4, line 621")
        if Dkt == null or(not J_i(fc[BZ], Dkt)) then
            call u5w(bU, agS(Akt), "when calling remove in Imp4, line 624")
            if Jyr(OU, agS(Akt), "when calling has in Imp4, line 626") then
    call wHr(wps(OU, agS(Akt), "when calling get in Imp4, line 627"), "when calling dispatch_CallbackPeriodic_destroyCallbackPeriodic in Imp4, line 627")
    call u5w(OU, agS(Akt), "when calling remove in Imp4, line 628")
            endif
            if Jyr(yU, agS(Akt), "when calling has in Imp4, line 630") then
    call b9t(s1w(wps(yU, agS(Akt), "when calling get in Imp4, line 631"), "when calling lightningFromIndex in Imp4, line 631"))
    call u5w(yU, agS(Akt), "when calling remove in Imp4, line 632")
            endif
            if Jyr(tU, agS(Akt), "when calling has in Imp4, line 634") then
    call u5w(tU, agS(Akt), "when calling remove in Imp4, line 635")
    call I7S(Akt)
            endif
            if Jyr(cU, agS(Akt), "when calling has in Imp4, line 638") then
    call b9t(s1w(wps(cU, agS(Akt), "when calling get in Imp4, line 639"), "when calling lightningFromIndex in Imp4, line 639"))
    call klS(cU, agS(Akt), "when calling remove in Imp4, line 640")
            endif
            if Jyr(oU, agS(Akt), "when calling has in Imp4, line 642") then
    call b9t(s1w(wps(oU, agS(Akt), "when calling get in Imp4, line 643"), "when calling lightningFromIndex in Imp4, line 643"))
    call klS(oU, agS(Akt), "when calling remove in Imp4, line 644")
            endif
        endif
    endloop
    call Ejr(Pkt, "when calling close in Imp4, line 620")
    set Hkt = gJi(tU, "when calling iterator in Imp4, line 647")
    loop
        exitwhen not slr(Hkt, "when calling hasNext in Imp4, line 647")
        set Jkt = Aii(Gjs(Hkt, "when calling next in Imp4, line 647"), "when calling effectFromIndex in Imp4, line 647")
        set Kkt = wps(tU, agS(Jkt), "when calling get in Imp4, line 648")
        set Lkt = false
        set Xkt = fU[TU[Kkt]]
        set Ckt = LLt(g2r(Jkt), vcw, Xkt, "when calling getUnitsInRange in Imp4, line 654")
        set Vkt = XbS(Ckt)
        loop
            exitwhen not hJw(Vkt)
            set Bkt = tPr(Vkt)
            if Bkt != null and yXu(Bkt) and t_u(Bkt) and GpS(gQ, hgr(eDs(Bkt)), "when calling has in Imp4, line 656") and Jyr(bU, agS(Jkt), "when calling has in Imp4, line 656") then
    set Lkt = iCu(wps(bU, agS(Jkt), "when calling get in Imp4, line 657"), "when calling unitFromIndex in Imp4, line 657") == Bkt
    exitwhen true
            endif
        endloop
        call lxs(Vkt)
        call Sju(Ckt, "when calling release in Imp4, line 659")
        set djt = Kkt
        if Lkt then
            set Mkt = 1
        else
            set Mkt =- 1
        endif
        set Nkt = djt + Mkt
        if Nkt > eU then
            set ujt = eU
        else
            if Nkt < 0 then
    set wjt = 0
            else
    set wjt = Nkt
            endif
            set ujt = wjt
        endif
        set Nkt = ujt
        call iUr(tU, agS(Jkt), Nkt, "when calling put in Imp4, line 663")
        set rjt = RU[TU[Kkt]]
        set sjt = RU[TU[Nkt]]
        set tjt = sjt - rjt
        set ijt = bpu("when calling alloc_CallbackCounted_doPeriodicallyCounted_doPeriodically_Imp4 in Imp4, line 671")
        call Inr(ijt)
        set O0w[ijt] = Jkt
        set l0w[ijt] = rjt
        set b0w[ijt] = tjt
        call l5s(.099, $0000000A, ijt, "when calling doPeriodicallyCounted in Imp4, line 671")
        set Sjt = 0
        set cjt = Sir("when calling alloc_CallbackCounted_doPeriodicallyCounted_doPeriodically_Imp4 in Imp4, line 680")
        call Inr(cjt)
        set y0w[cjt] = Jkt
        set p0w[cjt] = Kkt
        set e0w[cjt] = Nkt
        set q0w[cjt] = Sjt
        call l5s(.049, $00000014, cjt, "when calling doPeriodicallyCounted in Imp4, line 680")
        if Nkt == eU then
            set ojt = false
            if not Jyr(cU, agS(Jkt), "when calling has in Imp4, line 699") then
    if MZ != null and yXu(MZ) then
                    call GVw(cU, agS(Jkt), hVs(Ytr(pU, true, qZi(HCi(Jkt), kcw, jcw, 0., 0., YU), xow, vow, qZi(Xqi(MZ), Qcw, Wcw, 0., 0., UU), xow, vow), "when calling lightningToIndex in Imp4, line 701"), "when calling put in Imp4, line 701")
                    set ojt = true
    endif
            endif
            if not Jyr(oU, agS(Jkt), "when calling has in Imp4, line 703") then
    if wU != null and yXu(wU) then
                    call GVw(oU, agS(Jkt), hVs(Ytr(pU, true, qZi(HCi(Jkt), kcw, jcw, 0., 0., YU), xow, vow, qZi(Xqi(wU), Qcw, Wcw, 0., 0., IU), xow, vow), "when calling lightningToIndex in Imp4, line 705"), "when calling put in Imp4, line 705")
                    set ojt = true
    endif
            endif
            if ojt then
    set Ojt = Jkt
    call iUr(SU, agS(Jkt), agS(DpS(jU, qZi(HCi(Jkt), kcw, jcw, 0., 0., YU), xow, vow)), "when calling put in Imp4, line 710")
    set ljt = DpS(kU, HCi(Jkt), kcw, jcw)
    call Wwu(ljt, 0.5)
    set bjt = ljt
    call yYi(bjt, 2., "when calling destrAdvTimed in Imp4, line 711")
    set pjt = mNr("when calling alloc_CallbackPeriodic_doPeriodically_doPeriodically_Imp4 in Imp4, line 714")
    call kVu(pjt)
    set a0w[pjt] = Ojt
    set n0w[pjt] = Jkt
    set yjt = wcs(.05, pjt, "when calling doPeriodically in Imp4, line 714")
    call vwt(lU, yjt, "when calling add in Imp4, line 742")
            endif
        endif
    endloop
    call Ejr(Hkt, "when calling close in Imp4, line 647")
    set ejt = 0
    set qjt = gJi(tU, "when calling iterator in Imp4, line 746")
    loop
        exitwhen not slr(qjt, "when calling hasNext in Imp4, line 746")
        set ajt = Aii(Gjs(qjt, "when calling next in Imp4, line 746"), "when calling effectFromIndex in Imp4, line 746")
        set fjt = ejt
        if wps(tU, agS(ajt), "when calling get in Imp4, line 747") == eU then
            set njt = 1
        else
            set njt = 0
        endif
        set ejt = fjt + njt
    endloop
    call Ejr(qjt, "when calling close in Imp4, line 746")
    if hji(tU, "when calling size in Imp4, line 750") == ejt then
        call KSs("when calling commanderShield_finish in Imp4, line 751")
        set EU = false
    endif
    set ASw = ASw - 1
    set Akt = null
    set Dkt = null
    set Jkt = null
    set Ckt = null
    set Vkt = null
    set Bkt = null
    set Ojt = null
    set ljt = null
    set bjt = null
    set ajt = null
endfunction
function VBu takes real LBu, real XBu, real CBu returns boolean
    return LBu >= XBu and LBu <= CBu
endfunction
function Alr takes string Ilr returns integer
    local integer Plr
    set DSw[ASw] = Ilr
    set ASw = ASw + 1
    if NX == 0 then
        if MX < 32768 then
            set MX = MX + 1
            set Plr = MX
            set wC[Plr] = 864
        else
            call tNr("Out of memory: Could not create CallbackSingle_doAfter_Imp3DragonFortress.", "when calling error in Imp3DragonFortress, line 1279")
            set Plr = 0
        endif
    else
        set NX = NX - 1
        set Plr = BX[NX]
        set wC[Plr] = 864
    endif
    set ASw = ASw - 1
    return Plr
endfunction
function Asr takes string Isr returns integer
    local integer Psr
    set DSw[ASw] = Isr
    set ASw = ASw + 1
    if NX == 0 then
        if MX < 32768 then
            set MX = MX + 1
            set Psr = MX
            set wC[Psr] = 865
        else
            call tNr("Out of memory: Could not create CallbackSingle_doAfter_Imp3DragonFortress.", "when calling error in Imp3DragonFortress, line 1304")
            set Psr = 0
        endif
    else
        set NX = NX - 1
        set Psr = BX[NX]
        set wC[Psr] = 865
    endif
    set ASw = ASw - 1
    return Psr
endfunction
function F_r takes string g_r returns integer
    local integer h_r
    set DSw[ASw] = g_r
    set ASw = ASw + 1
    if NX == 0 then
        if MX < 32768 then
            set MX = MX + 1
            set h_r = MX
            set wC[h_r] = 866
        else
            call tNr("Out of memory: Could not create CallbackSingle_doAfter_Imp3DragonFortress.", "when calling error in Imp3DragonFortress, line 1382")
            set h_r = 0
        endif
    else
        set NX = NX - 1
        set h_r = BX[NX]
        set wC[h_r] = 866
    endif
    set ASw = ASw - 1
    return h_r
endfunction
function USu takes string ESu returns integer
    local integer ZSu
    set DSw[ASw] = ESu
    set ASw = ASw + 1
    if NX == 0 then
        if MX < 32768 then
            set MX = MX + 1
            set ZSu = MX
            set wC[ZSu] = 863
        else
            call tNr("Out of memory: Could not create CallbackSingle_doAfter_Imp3DragonFortress.", "when calling error in Imp3DragonFortress, line 1275")
            set ZSu = 0
        endif
    else
        set NX = NX - 1
        set ZSu = BX[NX]
        set wC[ZSu] = 863
    endif
    set ASw = ASw - 1
    return ZSu
endfunction
function cMi takes unit LNi, unit XNi, string CNi returns nothing
    local integer VNi
    local integer BNi
    local real NNi
    local integer MNi
    local real wMi
    local integer uMi
    local real rMi
    local real sMi
    local real tMi
    local real iMi
    local real SMi
    set DSw[ASw] = CNi
    set ASw = ASw + 1
    set IW = true
    call ugu(Lc)
    call GetUnitLoc(XNi)
    call SetUnitAnimation(LNi, "attack")
    call Vxu(LNi, .1)
    call DisplayTimedTextToForce(Rc[$0000000C], 5., bF + "DODGE THE CHRONOSPHERE!|r")
    set VNi = USu("when calling alloc_CallbackSingle_doAfter_Imp3DragonFortress in Imp3DragonFortress, line 1275")
    call RUs(VNi)
    set F9[VNi] = LNi
    call Ybr(.3, VNi, "when calling doAfter in Imp3DragonFortress, line 1275")
    set rMi = .3 + .5
    set BNi = Alr("when calling alloc_CallbackSingle_doAfter_Imp3DragonFortress in Imp3DragonFortress, line 1279")
    call RUs(BNi)
    call Ybr(rMi, BNi, "when calling doAfter in Imp3DragonFortress, line 1279")
    set sMi = .3 + .5 + 2.
    if PW then
        set NNi = 0.33
    else
        set NNi = 0.
    endif
    set tMi = sMi + NNi
    set MNi = Asr("when calling alloc_CallbackSingle_doAfter_Imp3DragonFortress in Imp3DragonFortress, line 1304")
    call RUs(MNi)
    set k9[MNi] = LNi
    call Ybr(tMi, MNi, "when calling doAfter in Imp3DragonFortress, line 1304")
    set iMi = .3 + .5 + 2. + 1.
    if PW then
        set wMi = 0.33
    else
        set wMi = 0.
    endif
    set SMi = iMi + wMi
    set uMi = F_r("when calling alloc_CallbackSingle_doAfter_Imp3DragonFortress in Imp3DragonFortress, line 1382")
    call RUs(uMi)
    set v9[uMi] = LNi
    call Ybr(SMi, uMi, "when calling doAfter in Imp3DragonFortress, line 1382")
    set ASw = ASw - 1
endfunction
function e9S takes rect o9S, integer O9S, string l9S returns group
    local group b9S
    local group y9S
    local unit p9S
    set DSw[ASw] = l9S
    set ASw = ASw + 1
    set b9S = Dit(o9S, "when calling getUnitsInRect in RegionVectorLocationUtils, line 102")
    set y9S = XbS(b9S)
    loop
        exitwhen not hJw(y9S)
        set p9S = tPr(y9S)
        if hgr(eDs(p9S)) == O9S then
            call Z7t(b9S, p9S)
        endif
    endloop
    call lxs(y9S)
    set ASw = ASw - 1
    set pPw = b9S
    set b9S = null
    set y9S = null
    set p9S = null
    return pPw
endfunction
function SBu takes integer KVu, integer LVu, string XVu returns nothing
    local real CVu
    local boolean VVu
    local integer BVu
    local integer NVu
    local integer MVu
    local unit wBu
    local group uBu
    local group rBu
    local unit sBu
    local integer tBu
    local integer iBu
    set DSw[ASw] = XVu
    set ASw = ASw + 1
    set CVu = Udi(a9[KVu]) / aSr(a9[KVu])
    set VVu = false
    if not yXu(a9[KVu]) then
        if PW then
            set BVu = 8
        else
            set BVu = 4
        endif
        set n9[KVu] = BVu
    elseif not PW then
        if CVu > d9[KVu] and CVu < f9[KVu] and n9[KVu] == 0 then
            set VVu = true
        elseif CVu > R9[KVu] and CVu < d9[KVu] and n9[KVu] == 1 then
            set VVu = true
        elseif CVu > T9[KVu] and CVu < R9[KVu] and n9[KVu] == 2 then
            set VVu = true
        elseif CVu < T9[KVu] and n9[KVu] == 3 then
            set VVu = true
        endif
    elseif PW then
        if VBu(CVu, Y9[KVu], f9[KVu]) and n9[KVu] == 0 then
            set VVu = true
        elseif VBu(CVu, d9[KVu], Y9[KVu]) and n9[KVu] == 1 then
            set VVu = true
        elseif VBu(CVu, G9[KVu], d9[KVu]) and n9[KVu] == 2 then
            set VVu = true
        elseif VBu(CVu, R9[KVu], G9[KVu]) and n9[KVu] == 3 then
            set VVu = true
        elseif VBu(CVu, g9[KVu], R9[KVu]) and n9[KVu] == 4 then
            set VVu = true
        elseif VBu(CVu, h9[KVu], g9[KVu]) and n9[KVu] == 5 then
            set VVu = true
        elseif VBu(CVu, T9[KVu], h9[KVu]) and n9[KVu] == 6 then
            set VVu = true
        elseif CVu < T9[KVu] and n9[KVu] == 7 then
            set VVu = true
        endif
    endif
    if VVu and (n9[KVu] < 4 and(not PW))or(n9[KVu] < 8 and PW) then
        set n9[KVu] = n9[KVu] + 1
        set NVu = c5r(CW, "when calling iterator in Imp3DragonFortress, line 1236")
        loop
            exitwhen not Tji(NVu)
            set MVu = LXi(NVu)
            call Fci(a9[KVu], MVu, $00000000)
            call Q_s(a9[KVu], MVu)
        endloop
        call vms(NVu, "when calling close in Imp3DragonFortress, line 1236")
        set wBu = null
        set uBu = e9S(Xl, hgr(eDs(a9[KVu])), "when calling getUnitsInRectExcept in Imp3DragonFortress, line 1241")
        set rBu = XbS(uBu)
        loop
            exitwhen not hJw(rBu)
            set sBu = tPr(rBu)
            if yXu(sBu) and t_u(sBu) and GpS(gQ, hgr(eDs(sBu)), "when calling has in Imp3DragonFortress, line 1243") then
    set wBu = sBu
    exitwhen true
            endif
        endloop
        call lxs(rBu)
        call Sju(uBu, "when calling release in Imp3DragonFortress, line 1246")
        if wBu != null then
            set tBu = c5r(CW, "when calling iterator in Imp3DragonFortress, line 1249")
            loop
    exitwhen not Tji(tBu)
    set iBu = LXi(tBu)
    call Fci(a9[KVu], iBu, $00000000)
    call Q_s(a9[KVu], iBu)
            endloop
            call vms(tBu, "when calling close in Imp3DragonFortress, line 1249")
            call lTi(a9[KVu], TF)
            call cMi(a9[KVu], wBu, "when calling fusionHydraCastSlaveDodge in Imp3DragonFortress, line 1254")
        endif
    endif
    if (n9[KVu] == 4 and(not PW))or smt(fc[$0000000C]) == 0 or(n9[KVu] == 8 and PW) then
        call wHr(LVu, "when calling dispatch_CallbackPeriodic_destroyCallbackPeriodic in Imp3DragonFortress, line 1257")
    endif
    set ASw = ASw - 1
    set wBu = null
    set uBu = null
    set rBu = null
    set sBu = null
endfunction
function l5S takes player c5S, string o5S, real O5S returns nothing
    call dii(o5S, O5S, c5S)
endfunction
function SYS takes integer uYS, integer rYS, string sYS returns nothing
    local integer tYS
    local integer iYS
    set DSw[ASw] = sYS
    set ASw = ASw + 1
    set tYS = 0
    set iYS = Lh
    loop
        exitwhen tYS > iYS
        if GpS(gQ, tYS, "when calling has in Configuration, line 131") then
            call l5S(aD[tYS], "Don't forget to use |cffff0000-save|r regularly to prevent losing your character!", 15.)
        endif
        set tYS = tYS + 1
    endloop
    set ASw = ASw - 1
endfunction
function GGr takes nothing returns boolean
    return Bw and Nw and Mw and wu and uu and ru and su and tu and iu and Su and cu and ou and Ou and lu and bu and yu and pu and(not eu) and qu and au and Ru and fu
endfunction
function N7S takes nothing returns boolean
    return Bw and Nw and Mw and su and tu and iu and Su and cu and ou and Ou and lu and bu and yu and pu and Ru and nu and du
endfunction
function PUu takes nothing returns boolean
    return Bw and Nw and iu and Su and cu and ou and Ou and lu and bu and yu and pu and(not eu) and qu and au and Ru
endfunction
function T8S takes integer a8S, integer n8S, string d8S returns nothing
    local integer f8S
    local integer R8S
    set DSw[ASw] = d8S
    set ASw = ASw + 1
    if (not GGr())or(not PUu()) or(not Zns()) or(not N7S()) then
        set f8S = c5r(gQ, "when calling iterator in JobAdvancementQuestHandler, line 1065")
        loop
            exitwhen not Tji(f8S)
            set R8S = LXi(f8S)
            call EnumUnitsSelected(aD[R8S], null, TUw)
        endloop
        call vms(f8S, "when calling close in JobAdvancementQuestHandler, line 1065")
    endif
    set ASw = ASw - 1
endfunction
function AHw takes multiboarditem EHw, integer ZHw, integer UHw, integer IHw, integer PHw returns nothing
    call MultiboardSetItemValueColor(EHw, ZHw, UHw, IHw, PHw)
endfunction
function Bei takes multiboarditem Vei returns nothing
    call MultiboardReleaseItem(Vei)
endfunction
function HDs takes multiboarditem PDs, boolean ADs, boolean DDs returns nothing
    call MultiboardSetItemStyle(PDs, ADs, DDs)
endfunction
function Tks takes multiboard Rks returns integer
    return MultiboardGetRowCount(Rks)
endfunction
function Zys takes multiboard Eys returns integer
    return YEi(Eys)
endfunction
function Ewr takes integer mwr, string Qwr returns string
    local string Wwr
    set DSw[ASw] = Qwr
    set ASw = ASw + 1
    set Wwr = Iji("Unknown", "when calling unObfuscate in DungeonCmds, line 284")
    if mwr == 1 then
        set Wwr = Iji("Icy Highlands", "when calling unObfuscate in DungeonCmds, line 286")
    elseif mwr == 2 then
        set Wwr = Iji("Forgotten Crypt", "when calling unObfuscate in DungeonCmds, line 288")
    elseif mwr == 3 then
        set Wwr = Iji("Gold Mine", "when calling unObfuscate in DungeonCmds, line 290")
    elseif mwr == 4 then
        set Wwr = Iji("Centaur Mountain", "when calling unObfuscate in DungeonCmds, line 292")
    elseif mwr == 5 then
        set Wwr = Iji("Puzzle Sanctuary", "when calling unObfuscate in DungeonCmds, line 294")
    elseif mwr == 6 then
        set Wwr = Iji("Naga Ruins", "when calling unObfuscate in DungeonCmds, line 296")
    elseif mwr == 7 then
        set Wwr = Iji("Tristram", "when calling unObfuscate in DungeonCmds, line 298")
    elseif mwr == 8 then
        set Wwr = Iji("Oblivion", "when calling unObfuscate in DungeonCmds, line 300")
    elseif mwr == 9 then
        set Wwr = Iji("Forgotten Sewers", "when calling unObfuscate in DungeonCmds, line 302")
    elseif mwr == 10 then
        set Wwr = Iji("Abyssal Labyrinth", "when calling unObfuscate in DungeonCmds, line 304")
    elseif mwr == 11 then
        set Wwr = Iji("City of Illusions", "when calling unObfuscate in DungeonCmds, line 306")
    elseif mwr == 12 then
        set Wwr = Iji("Dragon Fortress", "when calling unObfuscate in DungeonCmds, line 308")
    elseif mwr == 13 then
        set Wwr = Iji("Marine Fortress", "when calling unObfuscate in DungeonCmds, line 310")
    elseif mwr == 14 then
        set Wwr = Iji("Voidless", "when calling unObfuscate in DungeonCmds, line 312")
    endif
    set ASw = ASw - 1
    return Wwr
endfunction
function FAr takes multiboard hAr returns nothing
    call DestroyMultiboard(hAr)
endfunction
function Q8t takes multiboard x8t, player v8t, boolean m8t returns nothing
    if nD == v8t then
        call MultiboardDisplay(x8t, m8t)
    endif
endfunction
function Wgr takes multiboarditem xgr, string vgr returns nothing
    local string mgr
    local string Qgr
    if vgr == null then
        set Qgr = ""
    else
        set Qgr = vgr
    endif
    set mgr = Qgr
    call MultiboardSetItemIcon(xgr, mgr)
endfunction
function hbi takes multiboard Nli, integer Mli, string wbi returns multiboard
    local multiboard ubi
    local integer rbi
    local integer sbi
    local integer tbi
    local unit ibi
    local multiboarditem Sbi
    local multiboarditem cbi
    local multiboarditem obi
    local multiboarditem Obi
    local multiboarditem lbi
    local multiboarditem bbi
    local multiboarditem ybi
    local multiboarditem pbi
    local multiboarditem ebi
    local multiboarditem qbi
    local multiboarditem abi
    local multiboarditem nbi
    local multiboarditem dbi
    local multiboarditem fbi
    local multiboarditem Rbi
    local multiboarditem Tbi
    local multiboarditem Ybi
    local multiboarditem Gbi
    local multiboarditem gbi
    set DSw[ASw] = wbi
    set ASw = ASw + 1
    set ubi = CreateMultiboard()
    if Nli != null then
        call FAr(Nli)
    endif
    call TRs(ubi, Iji("Dungeon Team (", "when calling unObfuscate in DungeonCmds, line 167") + Ewr(Mli, "when calling getDungeonName in DungeonCmds, line 167") + ")")
    call K0i(ubi, wv)
    call kkr(ubi, $00000004)
    call gCu(ubi, $00000000)
    set rbi = c5r(gQ, "when calling iterator in DungeonCmds, line 173")
    loop
        exitwhen not Tji(rbi)
        set sbi = LXi(rbi)
        set tbi = xMi(xus(sbi, "when calling getCustomPlayer in DungeonCmds, line 174"), "when calling getCHero in DungeonCmds, line 174")
        if tbi != 0 then
            set ibi = hqs(tbi, "when calling getHero in DungeonCmds, line 176")
            if ibi != null then
    call Q8t(ubi, aD[sbi], J_i(fc[Mli], ibi))
            endif
        endif
    endloop
    call vms(rbi, "when calling close in DungeonCmds, line 173")
    if Nli == null or Tks(ubi) == 0 then
        call gCu(ubi, $00000001)
        set Sbi = IHs(ubi, $00000000, $00000000)
        call vYu(Sbi, "Playername")
        set cbi = Sbi
        call AHw(cbi, $0000003B, $0000003B, $0000003B, $000000FF)
        set obi = cbi
        call Jfu(obi, Mx)
        set Obi = obi
        call HDs(Obi, true, false)
        set lbi = Obi
        call Bei(lbi)
        set bbi = IHs(ubi, $00000000, $00000001)
        call vYu(bbi, "%-HP")
        set ybi = bbi
        call AHw(ybi, $00000000, $00000000, $00000000, $000000FF)
        set pbi = ybi
        call Jfu(pbi, wv)
        set ebi = pbi
        call HDs(ebi, true, false)
        set qbi = ebi
        call Bei(qbi)
        set abi = IHs(ubi, $00000000, $00000002)
        call vYu(abi, "%-MP")
        set nbi = abi
        call AHw(nbi, $00000000, $00000000, $00000000, $000000FF)
        set dbi = nbi
        call Jfu(dbi, uv)
        set fbi = dbi
        call HDs(fbi, true, false)
        set Rbi = fbi
        call Bei(Rbi)
        set Tbi = IHs(ubi, $00000000, $00000003)
        call Wgr(Tbi, "ui\\imgs\\teve_shard_icon.blp")
        set Ybi = Tbi
        call Jfu(Ybi, rv)
        set Gbi = Ybi
        call HDs(Gbi, false, true)
        set gbi = Gbi
        call Bei(gbi)
    endif
    set ASw = ASw - 1
    set HIw = ubi
    set ubi = null
    set ibi = null
    set Sbi = null
    set cbi = null
    set obi = null
    set Obi = null
    set lbi = null
    set bbi = null
    set ybi = null
    set pbi = null
    set ebi = null
    set qbi = null
    set abi = null
    set nbi = null
    set dbi = null
    set fbi = null
    set Rbi = null
    set Tbi = null
    set Ybi = null
    set Gbi = null
    set gbi = null
    return HIw
endfunction
function ruS takes multiboard wuS, boolean uuS returns nothing
    call MultiboardDisplay(wuS, uuS)
endfunction
function Pwt takes hashtable Zwt, integer Uwt, integer Iwt returns multiboard
    return LoadMultiboardHandle(Zwt, Uwt, Iwt)
endfunction
function s0r takes integer u0r, integer r0r returns multiboard
    return Pwt(qJ, u0r, r0r)
endfunction
function bot takes integer cot, integer oot, string Oot returns multiboard
    local multiboard lot
    set DSw[ASw] = Oot
    set ASw = ASw + 1
    if vB[cot] == 0 then
        if cot == 0 then
            call tNr("Nullpointer exception when calling Table.loadMultiboard", "when calling error in Table, line 201")
        else
            call tNr("Called Table.loadMultiboard on invalid object.", "when calling error in Table, line 201")
        endif
    endif
    set lot = s0r(cot, oot)
    set ASw = ASw - 1
    set xIw = lot
    set lot = null
    return xIw
endfunction
function ywr takes integer Owr, string lwr returns multiboard
    local multiboard bwr
    set DSw[ASw] = lwr
    set ASw = ASw + 1
    call nfS(ZJ, $00000000, ConvertFogState(Owr), "when calling saveFogState in TypeCasting, line 193")
    set bwr = bot(ZJ, $00000000, "when calling loadMultiboard in TypeCasting, line 194")
    set ASw = ASw - 1
    set UIw = bwr
    set bwr = null
    return UIw
endfunction
function Ous takes string iws returns nothing
    local integer Sws
    local integer cws
    local multiboard ows
    local group Ows
    local integer lws
    local group bws
    local unit yws
    local player pws
    local integer ews
    local multiboarditem qws
    local multiboarditem aws
    local multiboarditem nws
    local multiboarditem dws
    local integer fws
    local integer Rws
    local integer Tws
    local integer Yws
    local integer Gws
    local multiboarditem gws
    local multiboarditem hws
    local multiboarditem Fws
    local multiboarditem kws
    local multiboarditem jws
    local multiboarditem xws
    local multiboarditem vws
    local multiboarditem mws
    local multiboarditem Qws
    local multiboarditem Wws
    local multiboarditem Ews
    local multiboarditem Zws
    local multiboarditem Uws
    local multiboarditem Iws
    local multiboarditem Pws
    local multiboard Aws
    local integer Dws
    local integer Hws
    local integer Jws
    local integer Kws
    local integer Lws
    local integer Xws
    local integer Cws
    local integer Vws
    local integer Bws
    local integer Nws
    local integer Mws
    local integer wus
    local integer uus
    local integer rus
    local integer sus
    local integer tus
    local integer ius
    local integer Sus
    local integer cus
    local integer ous
    set DSw[ASw] = iws
    set ASw = ASw + 1
    set Sws = 1
    set cws = ko
    loop
        exitwhen Sws > cws
        if smt(fc[Sws]) > 0 then
            set ows = hbi(ywr(wps(Nx, Sws, "when calling get in DungeonCmds, line 220"), "when calling multiboardFromIndex in DungeonCmds, line 220"), Sws, "when calling dungeonTeamMultiboardReset in DungeonCmds, line 220")
            call GVw(Nx, Sws, Zys(ows), "when calling put in DungeonCmds, line 221")
            if Tks(ows) - 1 < smt(fc[Sws]) then
    set Ows = XbS(fc[Sws])
    loop
                    exitwhen not hJw(Ows)
                    call tPr(Ows)
                    call gCu(ows, Tks(ows) + 1)
    endloop
    call lxs(Ows)
            endif
            set lws = 0
            set bws = XbS(fc[Sws])
            loop
    exitwhen not hJw(bws)
    set yws = tPr(bws)
    if yws != null then
                    set pws = eDs(yws)
                    set ews = hgr(pws)
                    set lws = lws + 1
                    if GpS(gQ, ews, "when calling has in DungeonCmds, line 234") then
                        set qws = IHs(ows, lws, $00000000)
                        call vYu(qws, C4i(q_t(vBu(pws)), ccw, ocw) + ui[1 + ews] + "|r")
                        set aws = qws
                        call Jfu(aws, Mx)
                        set nws = aws
                        call HDs(nws, true, false)
                        set dws = nws
                        call Bei(dws)
                        set fws = aJi(Udi(yws) / aSr(yws) * 100.)
                        set Dws = 255
                        set Hws = 0
                        set Jws = 0
                        set Kws = 255
                        set Rws = Dws
                        set Tws = Hws
                        set Yws = Jws
                        set Gws = Kws
                        if fws >= 15 then
                            set Lws = 226
                            set Xws = 120
                            set Cws = 0
                            set Vws = 255
                            set Rws = Lws
                            set Tws = Xws
                            set Yws = Cws
                            set Gws = Vws
                        endif
                        if fws >= 35 then
                            set Bws = 255
                            set Nws = 215
                            set Mws = 0
                            set wus = 255
                            set Rws = Bws
                            set Tws = Nws
                            set Yws = Mws
                            set Gws = wus
                        endif
                        if fws >= 50 then
                            set uus = 204
                            set rus = 226
                            set sus = 7
                            set tus = 255
                            set Rws = uus
                            set Tws = rus
                            set Yws = sus
                            set Gws = tus
                        endif
                        if fws >= 75 then
                            set ius = 76
                            set Sus = 226
                            set cus = 7
                            set ous = 255
                            set Rws = ius
                            set Tws = Sus
                            set Yws = cus
                            set Gws = ous
                        endif
                        set gws = IHs(ows, lws, $00000001)
                        call vYu(gws, fju(fws))
                        set hws = gws
                        call AHw(hws, Rws, Tws, Yws, Gws)
                        set Fws = hws
                        call Jfu(Fws, wv)
                        set kws = Fws
                        call HDs(kws, true, false)
                        set jws = kws
                        call Bei(jws)
                        set xws = IHs(ows, lws, $00000002)
                        call vYu(xws, fju(aJi(t3i(yws) / Ges(yws) * 100.)))
                        set vws = xws
                        call AHw(vws, $00000000, $00000000, $000000FF, $000000FF)
                        set mws = vws
                        call Jfu(mws, uv)
                        set Qws = mws
                        call HDs(Qws, true, false)
                        set Wws = Qws
                        call Bei(Wws)
                        set Ews = IHs(ows, lws, $00000003)
                        call vYu(Ews, fju(kbr(pws)))
                        set Zws = Ews
                        call AHw(Zws, $00000091, $0000006B, $000000A0, $000000FF)
                        set Uws = Zws
                        call Jfu(Uws, rv)
                        set Iws = Uws
                        call HDs(Iws, true, false)
                        set Pws = Iws
                        call Bei(Pws)
                    endif
    endif
            endloop
            call lxs(bws)
        elseif Jyr(Nx, Sws, "when calling has in DungeonCmds, line 278") then
            set Aws = ywr(wps(Nx, Sws, "when calling get in DungeonCmds, line 279"), "when calling multiboardFromIndex in DungeonCmds, line 279")
            if Aws != null then
    call ruS(Aws, false)
            endif
        endif
        set Sws = Sws + 1
    endloop
    set ASw = ASw - 1
    set ows = null
    set Ows = null
    set bws = null
    set yws = null
    set pws = null
    set qws = null
    set aws = null
    set nws = null
    set dws = null
    set gws = null
    set hws = null
    set Fws = null
    set kws = null
    set jws = null
    set xws = null
    set vws = null
    set mws = null
    set Qws = null
    set Wws = null
    set Ews = null
    set Zws = null
    set Uws = null
    set Iws = null
    set Pws = null
    set Aws = null
endfunction
function U0r takes integer W0r, integer E0r, string Z0r returns nothing
    set DSw[ASw] = Z0r
    set ASw = ASw + 1
    call Ous("when calling updateDungeonTeamMultiboard in DungeonCmds, line 968")
    set ASw = ASw - 1
endfunction
function Z2u takes string T2u returns real
    local group Y2u
    local boolean G2u
    local real g2u
    local real h2u
    local integer F2u
    local group k2u
    local unit j2u
    local real x2u
    local real v2u
    local real m2u
    local real Q2u
    local real W2u
    local real E2u
    set DSw[ASw] = T2u
    set ASw = ASw + 1
    set Y2u = e9S(fK, PLAYER_NEUTRAL_AGGRESSIVE, "when calling getUnitsInRectExcept in Voidless_mechanics, line 599")
    set G2u = false
    set x2u = jK
    set v2u = xK
    set g2u = x2u
    set h2u = v2u
    set F2u = 25
    loop
        exitwhen not((not G2u)and F2u > 0)
        set F2u = F2u - 1
        set m2u = CKu(RK)
        set Q2u = Ccw
        set g2u = m2u
        set h2u = Q2u
        set G2u = true
        set k2u = XbS(Y2u)
        loop
            exitwhen not hJw(k2u)
            set j2u = tPr(k2u)
            if fYr(ANw(j2u), XSw, g2u, h2u) < SX then
    set G2u = false
    exitwhen true
            endif
        endloop
        call lxs(k2u)
    endloop
    if not G2u then
        set W2u = CKu(RK)
        set E2u = Ccw
        set g2u = W2u
        set h2u = E2u
    endif
    call Sju(Y2u, "when calling release in Voidless_mechanics, line 617")
    set ASw = ASw - 1
    set Zow = g2u
    set Uow = h2u
    set Y2u = null
    set k2u = null
    set j2u = null
    return Zow
endfunction
function gWs takes string SWs returns real
    local group cWs
    local boolean oWs
    local integer OWs
    local unit lWs
    local boolean bWs
    local integer yWs
    local unit pWs
    local real eWs
    local real qWs
    local real aWs
    local real nWs
    local real dWs
    local real fWs
    local real RWs
    local real TWs
    local real YWs
    local real GWs
    set DSw[ASw] = SWs
    set ASw = ASw + 1
    set cWs = e9S(fK, PLAYER_NEUTRAL_AGGRESSIVE, "when calling getUnitsInRectExcept in Voidless_mechanics, line 622")
    set oWs = false
    set OWs = 25
    set lWs = cuS(cWs)
    loop
        exitwhen not((not oWs)and OWs > 0)
        set OWs = OWs - 1
        set bWs = false
        set yWs = gJi(uX, "when calling iterator in Voidless_mechanics, line 632")
        loop
            exitwhen not slr(yWs, "when calling hasNext in Voidless_mechanics, line 632")
            set pWs = iCu(Gjs(yWs, "when calling next in Voidless_mechanics, line 632"), "when calling unitFromIndex in Voidless_mechanics, line 632")
            if iCu(wps(uX, Aei(pWs), "when calling get in Voidless_mechanics, line 633"), "when calling unitFromIndex in Voidless_mechanics, line 633") == lWs or GpS(sX, Aei(lWs), "when calling has in Voidless_mechanics, line 633") or(not Zcr(lWs)) then
    set bWs = true
    exitwhen true
            endif
        endloop
        call Ejr(yWs, "when calling close in Voidless_mechanics, line 632")
        if yXu(lWs) and(not bWs) and t_u(lWs) then
            set oWs = true
        else
            set lWs = cuS(cWs)
        endif
    endloop
    call Sju(cWs, "when calling release in Voidless_mechanics, line 642")
    if OWs <= 0 then
        set lWs = null
    endif
    if lWs == null then
        set dWs = CKu(RK)
        set fWs = Ccw
        set eWs = dWs
        set qWs = fWs
    else
        set RWs = ANw(lWs)
        set TWs = XSw
        set eWs = RWs
        set qWs = TWs
    endif
    set YWs = eWs
    set GWs = qWs
    set aWs = YWs
    set nWs = GWs
    set ASw = ASw - 1
    set Wow = aWs
    set Eow = nWs
    set cWs = null
    set lWs = null
    set pWs = null
    return Wow
endfunction
function mXt takes string xXt returns integer
    local integer vXt
    set DSw[ASw] = xXt
    set ASw = ASw + 1
    if PC == 0 then
        if AC < 32768 then
            set AC = AC + 1
            set vXt = AC
            set DC[vXt] = 708
        else
            call tNr("Out of memory: Could not create CallbackPeriodic_doPeriodically_Voidless_mechanics.", "when calling error in Voidless_mechanics, line 550")
            set vXt = 0
        endif
    else
        set PC = PC - 1
        set vXt = IC[PC]
        set DC[vXt] = 708
    endif
    set ASw = ASw - 1
    return vXt
endfunction
function Csu takes string Tsu returns boolean
    local real Ysu
    local real Gsu
    local real gsu
    local real hsu
    local real Fsu
    local real ksu
    local boolean jsu
    local real xsu
    local real vsu
    local effect msu
    local real Qsu
    local real Wsu
    local real Esu
    local real Zsu
    local real Usu
    local real Isu
    local integer Psu
    local real Asu
    local real Dsu
    local real Hsu
    local real Jsu
    local real Ksu
    local real Lsu
    local real Xsu
    set DSw[ASw] = Tsu
    set ASw = ASw + 1
    if (not oX)and uK != null and yXu(uK) and OK > 0 then
        set oX = true
        if OK < 5 then
            set gsu = 0.15
        else
            if OK < 10 then
    set Gsu = 0.25
            else
    set Gsu = 0.50
            endif
            set gsu = Gsu
        endif
        set Ysu = gsu
        if OK < 5 then
            set ksu = 0.05
        else
            if OK < 10 then
    set Fsu = 0.10
            else
    set Fsu = 0.15
            endif
            set ksu = Fsu
        endif
        set hsu = ksu
        set jsu = false
        set Dsu = LJ
        set Hsu = XJ
        set xsu = Dsu
        set vsu = Hsu
        if OX == 0 then
            set OX = 1
            set jsu = true
            set Jsu = gWs("when calling arealCircle_getRandomPlayerUnitPos in Voidless_mechanics, line 532")
            set Ksu = Eow
            set xsu = Jsu
            set vsu = Ksu
        else
            set OX = 0
            set jsu = false
            set Lsu = Z2u("when calling arealCircle_getRandomInnerPos in Voidless_mechanics, line 539")
            set Xsu = Uow
            set xsu = Lsu
            set vsu = Xsu
        endif
        if xsu != LJ or vsu != XJ then
            set msu = uSs(xsu, vsu, uL)
            if jsu then
    set Wsu = 0.0
            else
    set Wsu = 5.0
            endif
            set Qsu = Wsu
            if jsu then
    set Zsu = 2.5
            else
    set Zsu = 2.5
            endif
            set Esu = Zsu
            set Usu = 0.05
            set Isu = Qsu
            call Wwu(msu, Qsu)
            set Asu = iF * 3.
            set Psu = mXt("when calling alloc_CallbackPeriodic_doPeriodically_Voidless_mechanics in Voidless_mechanics, line 550")
            call kVu(Psu)
            set Qiw[Psu] = msu
            set Wiw[Psu] = Esu
            set Eiw[Psu] = Isu
            set Ziw[Psu] = jsu
            set Uiw[Psu] = Ysu
            set Iiw[Psu] = hsu
            set Piw[Psu] = Qsu
            set Aiw[Psu] = Usu
            call wcs(Asu, Psu, "when calling doPeriodically in Voidless_mechanics, line 550")
            set ASw = ASw - 1
            set msu = null
            return true
        else
            set oX = false
        endif
    endif
    set ASw = ASw - 1
    set msu = null
    return false
endfunction
function COS takes real JOS, real KOS returns real
    local real LOS = LD
    local real XOS
    if JOS < LOS then
        set XOS = JOS
    else
        set XOS = LOS
    endif
    set LOS = XOS
    if KOS < LOS then
        set XOS = KOS
    else
        set XOS = LOS
    endif
    set LOS = XOS
    return LOS
endfunction
function P9s takes string U9s returns integer
    local integer I9s
    set DSw[ASw] = U9s
    set ASw = ASw + 1
    if PC == 0 then
        if AC < 32768 then
            set AC = AC + 1
            set I9s = AC
            set DC[I9s] = 706
        else
            call tNr("Out of memory: Could not create CallbackPeriodic_doPeriodically_Voidless_mechanics.", "when calling error in Voidless_mechanics, line 354")
            set I9s = 0
        endif
    else
        set PC = PC - 1
        set I9s = IC[PC]
        set DC[I9s] = 706
    endif
    set ASw = ASw - 1
    return I9s
endfunction
function UFt takes string GFt returns real
    local boolean gFt
    local real hFt
    local real FFt
    local integer kFt
    local integer jFt
    local unit xFt
    local real vFt
    local real mFt
    local real QFt
    local real WFt
    local real EFt
    local real ZFt
    set DSw[ASw] = GFt
    set ASw = ASw + 1
    set gFt = false
    set vFt = jK
    set mFt = xK
    set hFt = vFt
    set FFt = mFt
    set kFt = 25
    loop
        exitwhen not((not gFt)and kFt > 0)
        set kFt = kFt - 1
        set QFt = CKu(RK)
        set WFt = Ccw
        set hFt = QFt
        set FFt = WFt
        set gFt = true
        if hji(NL, "when calling size in Voidless_mechanics, line 478") != 0 then
            set jFt = gJi(NL, "when calling iterator in Voidless_mechanics, line 479")
            loop
    exitwhen not slr(jFt, "when calling hasNext in Voidless_mechanics, line 479")
    set xFt = iCu(Gjs(jFt, "when calling next in Voidless_mechanics, line 479"), "when calling unitFromIndex in Voidless_mechanics, line 479")
    if fYr(ANw(xFt), XSw, hFt, FFt) < SX then
                    set gFt = false
                    exitwhen true
    endif
            endloop
            call Ejr(jFt, "when calling close in Voidless_mechanics, line 479")
        endif
    endloop
    if not gFt then
        set EFt = CKu(RK)
        set ZFt = Ccw
        set hFt = EFt
        set FFt = ZFt
    endif
    set ASw = ASw - 1
    set mow = hFt
    set Qow = FFt
    set xFt = null
    return mow
endfunction
function iai takes string sai returns integer
    local integer tai
    set DSw[ASw] = sai
    set ASw = ASw + 1
    if wds(ML, "when calling size in Voidless_mechanics, line 73") == 0 then
        call vwt(ML, XQt("when calling new_LinkedList in Voidless_mechanics, line 74"), "when calling add in Voidless_mechanics, line 74")
    endif
    set tai = sKs(ML, "when calling getFirst in Voidless_mechanics, line 76")
    call eys(ML, tai, "when calling remove in Voidless_mechanics, line 77")
    set ASw = ASw - 1
    return tai
endfunction
function qiu takes string piu returns integer
    local integer eiu
    set DSw[ASw] = piu
    set ASw = ASw + 1
    if PC == 0 then
        if AC < 32768 then
            set AC = AC + 1
            set eiu = AC
            set DC[eiu] = 707
        else
            call tNr("Out of memory: Could not create CallbackPeriodic_doPeriodically_Voidless_mechanics.", "when calling error in Voidless_mechanics, line 383")
            set eiu = 0
        endif
    else
        set PC = PC - 1
        set eiu = IC[PC]
        set DC[eiu] = 707
    endif
    set ASw = ASw - 1
    return eiu
endfunction
function pYu takes string JTu returns boolean
    local integer KTu
    local integer LTu
    local integer XTu
    local integer CTu
    local real VTu
    local real BTu
    local real NTu
    local integer MTu
    local integer wYu
    local integer uYu
    local real rYu
    local real sYu
    local integer tYu
    local unit iYu
    local unit SYu
    local unit cYu
    local integer oYu
    local integer OYu
    local real lYu
    local real bYu
    local real yYu
    set DSw[ASw] = JTu
    set ASw = ASw + 1
    if uK != null and yXu(uK) and OK > 0 then
        set KTu = smt(fc[MJ]) + 1
        set LTu = d0u(smt(fc[MJ]) * 1. / 3)
        set XTu = 0
        if KTu < 2 then
            set KTu = 2
        elseif KTu > 4 and OK <= 5 then
            set KTu = 4
        elseif KTu > 6 and OK > 5 then
            set KTu = 6
        endif
        set CTu = JGi(OK * 1. / 5) + 1
        set VTu = 20.
        set BTu = 1.0 + JGi(OK * 1. / 2) * 1. / 30 * 2.
        set NTu = COS(0.1, 0.02 + OK * 0.003)
        set MTu = 1
        set wYu = KTu
        loop
            exitwhen MTu > wYu
            set uYu = GetRandomInt($00000000, $00000002)
            set bYu = UFt("when calling voidRifts_getRandomPos in Voidless_mechanics, line 331")
            set yYu = Qow
            set rYu = bYu
            set sYu = yYu
            if uYu == 2 and XTu >= LTu then
    set uYu = GetRandomInt($00000000, $00000001)
            endif
            if rYu != LJ or sYu != XJ then
    set tYu = uYu
    if tYu == 0 then
                    set iYu = dps(aD[PLAYER_NEUTRAL_AGGRESSIVE], JK, rYu, sYu, GetRandomReal(0., 359.))
                    if Jyr(NL, Aei(iYu), "when calling has in Voidless_mechanics, line 340") and wps(NL, Aei(iYu), "when calling get in Voidless_mechanics, line 340") != 0 then
                        call u3w(wps(NL, Aei(iYu), "when calling get in Voidless_mechanics, line 341"), "when calling clear in Voidless_mechanics, line 341")
                    else
                        call iUr(NL, Aei(iYu), iai("when calling getRiftSpawnerLL in Voidless_mechanics, line 343"), "when calling put in Voidless_mechanics, line 343")
                    endif
    elseif tYu == 1 then
                    set SYu = dps(aD[PLAYER_NEUTRAL_AGGRESSIVE], KK, rYu, sYu, GetRandomReal(0., 359.))
                    call vwt(wX, Aei(SYu), "when calling add in Voidless_mechanics, line 347")
    else
                    set cYu = dps(aD[PLAYER_NEUTRAL_AGGRESSIVE], LK, rYu, sYu, GetRandomReal(0., 359.))
                    call iUr(uX, Aei(cYu), Aei(null), "when calling put in Voidless_mechanics, line 350")
                    call iUr(rX, Aei(cYu), hVs(null, "when calling lightningToIndex in Voidless_mechanics, line 351"), "when calling put in Voidless_mechanics, line 351")
                    set XTu = XTu + 1
    endif
            endif
            set MTu = MTu + 1
        endloop
        set oYu = P9s("when calling alloc_CallbackPeriodic_doPeriodically_Voidless_mechanics in Voidless_mechanics, line 354")
        call kVu(oYu)
        set Fiw[oYu] = NTu
        set kiw[oYu] = CTu
        set jiw[oYu] = BTu
        call wcs(15., oYu, "when calling doPeriodically in Voidless_mechanics, line 354")
        set lYu = iF * 3.
        set OYu = qiu("when calling alloc_CallbackPeriodic_doPeriodically_Voidless_mechanics in Voidless_mechanics, line 383")
        call kVu(OYu)
        set viw[OYu] = VTu
        call wcs(lYu, OYu, "when calling doPeriodically in Voidless_mechanics, line 383")
        set ASw = ASw - 1
        set iYu = null
        set SYu = null
        set cYu = null
        return true
    endif
    set ASw = ASw - 1
    set iYu = null
    set SYu = null
    set cYu = null
    return false
endfunction
function Ubi takes integer jbi, integer xbi, string vbi returns nothing
    local real mbi
    local boolean Qbi
    local string Wbi
    local integer Ebi
    local integer Zbi
    set DSw[ASw] = vbi
    set ASw = ASw + 1
    if smt(fc[MJ]) == 0 or OK == 0 then
        call wHr(xbi, "when calling dispatch_CallbackPeriodic_destroyCallbackPeriodic in Voidless, line 351")
    elseif (not yK)and yXu(uK) then
        set mbi = Udi(Htw[jbi]) / aSr(Htw[jbi])
        set Qbi = false
        if not yXu(Htw[jbi]) then
            set Jtw[jbi] = Ktw[jbi]
        elseif mbi > Ltw[jbi] and mbi < Xtw[jbi] and Jtw[jbi] == 0 then
            set Qbi = true
        elseif mbi > Ctw[jbi] and mbi < Ltw[jbi] and Jtw[jbi] == 1 then
            set Qbi = true
        elseif mbi > Vtw[jbi] and mbi < Ctw[jbi] and Jtw[jbi] == 2 then
            set Qbi = true
        elseif mbi > Btw[jbi] and mbi < Vtw[jbi] and Jtw[jbi] == 3 then
            set Qbi = true
        elseif mbi > Ntw[jbi] and mbi < Btw[jbi] and Jtw[jbi] == 4 then
            set Qbi = true
        elseif mbi > Mtw[jbi] and mbi < Ntw[jbi] and Jtw[jbi] == 5 then
            set Qbi = true
        elseif mbi > wiw[jbi] and mbi < Mtw[jbi] and Jtw[jbi] == 6 then
            set Qbi = true
        elseif mbi > uiw[jbi] and mbi < wiw[jbi] and Jtw[jbi] == 7 then
            set Qbi = true
        elseif mbi > riw[jbi] and mbi < uiw[jbi] and Jtw[jbi] == 8 then
            set Qbi = true
        elseif mbi > siw[jbi] and mbi < riw[jbi] and Jtw[jbi] == 9 then
            set Qbi = true
        elseif mbi > tiw[jbi] and mbi < siw[jbi] and Jtw[jbi] == 10 then
            set Qbi = true
        elseif mbi > iiw[jbi] and mbi < tiw[jbi] and Jtw[jbi] == 11 then
            set Qbi = true
        elseif mbi < iiw[jbi] and Jtw[jbi] == 12 then
            set Qbi = true
        endif
        if Qbi and Jtw[jbi] < Ktw[jbi]then
            set Jtw[jbi] = Jtw[jbi] + 1
            set Wbi = ""
            set Ebi =- 1
            if OK == 1 then
    set Ebi = 0
            elseif OK == 2 then
    set Ebi = 1
            elseif OK == 3 then
    set Ebi = 0
            elseif OK == 4 then
    set Ebi = 1
            elseif OK == 5 then
    set Zbi = GetRandomInt($00000000, $00000001)
    if Zbi == 0 then
                    set Ebi = 1
    elseif Zbi == 1 then
                    set Ebi = 0
    endif
            elseif OK > 5 then
            endif
            if Ebi == 0 then
    if pYu("when calling spawnVoidRiftSpawner in Voidless, line 411") then
                    set Wbi = vK
    endif
            elseif Ebi == 1 then
    if Csu("when calling spawnArealVoidCircle in Voidless, line 414") then
                    set Wbi = mK
    endif
            endif
            if Wbi != "" then
    call bQs(Edi(ANw(uK), XSw), Jcw, Kcw, .015, - .030, Wbi, 12., 6., $00000027, $0000008E, $000000C1, $00000000, null, "when calling _CreateTTExEntity_fading in Voidless, line 423")
    call Zvi(Wbi, "when calling updateMechanic in Voidless, line 424")
            endif
        endif
        if Jtw[jbi] == Ktw[jbi] or smt(fc[MJ]) == 0 or OK == 0 then
            call wHr(xbi, "when calling dispatch_CallbackPeriodic_destroyCallbackPeriodic in Voidless, line 427")
        endif
    endif
    set ASw = ASw - 1
endfunction
function SDw takes lightning NAw, boolean MAw, real wDw, real uDw, real rDw, real sDw, real tDw, real iDw returns boolean
    return MoveLightningEx(NAw, MAw, wDw, uDw, rDw, sDw, tDw, iDw)
endfunction
function YEs takes integer aEs, integer nEs, string dEs returns nothing
    local integer fEs
    local effect REs
    local unit TEs
    set DSw[ASw] = dEs
    set ASw = ASw + 1
    if hji(yU, "when calling size in Imp4, line 589") > 0 then
        set fEs = gJi(yU, "when calling iterator in Imp4, line 590")
        loop
            exitwhen not slr(fEs, "when calling hasNext in Imp4, line 590")
            set REs = Aii(Gjs(fEs, "when calling next in Imp4, line 590"), "when calling effectFromIndex in Imp4, line 590")
            if Jyr(bU, agS(REs), "when calling has in Imp4, line 591") and Jyr(yU, agS(REs), "when calling has in Imp4, line 591") then
    set TEs = iCu(wps(bU, agS(REs), "when calling get in Imp4, line 592"), "when calling unitFromIndex in Imp4, line 592")
    if TEs != null and J_i(fc[BZ], TEs) then
                    call SDw(s1w(wps(yU, agS(REs), "when calling get in Imp4, line 594"), "when calling lightningFromIndex in Imp4, line 594"), false, HCi(REs), kcw, jcw, ATS(ANw(TEs), XSw, wor(ANw(TEs), XSw) + GU), VSw, BSw)
    endif
            endif
        endloop
        call Ejr(fEs, "when calling close in Imp4, line 590")
    else
        call wHr(nEs, "when calling dispatch_CallbackPeriodic_destroyCallbackPeriodic in Imp4, line 596")
    endif
    set ASw = ASw - 1
    set REs = null
    set TEs = null
endfunction
function ayS takes integer byS, integer yyS, string pyS returns nothing
    local integer eyS
    local integer qyS
    set DSw[ASw] = pyS
    set ASw = ASw + 1
    if not GGr() then
        set eyS = c5r(gQ, "when calling iterator in JobAdvancementQuestHandler, line 1071")
        loop
            exitwhen not Tji(eyS)
            set qyS = LXi(eyS)
            call EnumUnitsSelected(aD[qyS], null, YUw)
        endloop
        call vms(eyS, "when calling close in JobAdvancementQuestHandler, line 1071")
    endif
    set ASw = ASw - 1
endfunction
function S8S takes string t8S returns integer
    local integer i8S
    set DSw[ASw] = t8S
    set ASw = ASw + 1
    if NX == 0 then
        if MX < 32768 then
            set MX = MX + 1
            set i8S = MX
            set wC[i8S] = 1090
        else
            call tNr("Out of memory: Could not create CallbackSingle_doAfter_doPeriodically_Voidless_mechanics.", "when calling error in Voidless_mechanics, line 575")
            set i8S = 0
        endif
    else
        set NX = NX - 1
        set i8S = BX[NX]
        set wC[i8S] = 1090
    endif
    set ASw = ASw - 1
    return i8S
endfunction
function PXi takes string UXi returns integer
    local integer IXi
    set DSw[ASw] = UXi
    set ASw = ASw + 1
    if NX == 0 then
        if MX < 32768 then
            set MX = MX + 1
            set IXi = MX
            set wC[IXi] = 959
        else
            call tNr("Out of memory: Could not create CallbackSingle_doAfter_UnitItemUtils.", "when calling error in UnitItemUtils, line 220")
            set IXi = 0
        endif
    else
        set NX = NX - 1
        set IXi = BX[NX]
        set wC[IXi] = 959
    endif
    set ASw = ASw - 1
    return IXi
endfunction
function lRu takes unit tRu, integer iRu, real SRu, string cRu returns nothing
    local integer oRu
    local real ORu
    set DSw[ASw] = cRu
    set ASw = ASw + 1
    call lKs(tRu, iRu, $00000001)
    set ORu = SRu
    set oRu = PXi("when calling alloc_CallbackSingle_doAfter_UnitItemUtils in UnitItemUtils, line 220")
    call RUs(oRu)
    set Lsw[oRu] = tRu
    set Xsw[oRu] = iRu
    call Ybr(ORu, oRu, "when calling doAfter in UnitItemUtils, line 220")
    set ASw = ASw - 1
endfunction
function bBs takes integer AVs, integer DVs, string HVs returns nothing
    local group JVs
    local group KVs
    local unit LVs
    local boolean XVs
    local effect CVs
    local effect VVs
    local real BVs
    local real NVs
    local real MVs
    local real wBs
    local real uBs
    local real rBs
    local lightning sBs
    local integer tBs
    local real iBs
    local real SBs
    local real cBs
    local real oBs
    local real OBs
    local real lBs
    set DSw[ASw] = HVs
    set ASw = ASw + 1
    if smt(fc[MJ]) == 0 then
        call uRi(Qiw[AVs])
        set oX = false
        call wHr(DVs, "when calling dispatch_CallbackPeriodic_destroyCallbackPeriodic in Voidless_mechanics, line 555")
    elseif Wiw[AVs] == Eiw[AVs]then
        set JVs = e9S(fK, PLAYER_NEUTRAL_AGGRESSIVE, "when calling getUnitsInRectExcept in Voidless_mechanics, line 557")
        set KVs = XbS(JVs)
        loop
            exitwhen not hJw(KVs)
            set LVs = tPr(KVs)
            if Zcr(LVs) and(not kPu(LVs, "when calling isInvolvedInMechanic in Voidless_mechanics, line 559")) and t_u(LVs) then
    set XVs = fYr(g2r(Qiw[AVs]), vcw, ANw(LVs), XSw) < 160.
    if XVs and Ziw[AVs]then
                    call UNi(LVs, - (aSr(LVs) * Uiw[AVs]))
                    set CVs = mXi(LVs, uL, dg)
                    call Tir(CVs, 1., "when calling destrTimed in Voidless_mechanics, line 564")
                    call lRu(LVs, NK, 15., "when calling applyBuffTimed in Voidless_mechanics, line 566")
    elseif (not XVs)and(not Ziw[AVs]) then
                    call UNi(LVs, - (aSr(LVs) * Uiw[AVs]))
                    call Ziu(LVs, - (Ges(LVs) * Uiw[AVs]))
                    set VVs = mXi(LVs, uL, dg)
                    call Tir(VVs, 1., "when calling destrTimed in Voidless_mechanics, line 570")
                    call UNi(uK, aSr(uK) * Iiw[AVs])
                    set iBs = ATS(ANw(LVs), XSw, 150.)
                    set SBs = VSw
                    set cBs = BSw
                    set BVs = iBs
                    set NVs = SBs
                    set MVs = cBs
                    set oBs = ATS(ANw(uK), XSw, 250.)
                    set OBs = VSw
                    set lBs = BSw
                    set wBs = oBs
                    set uBs = OBs
                    set rBs = lBs
                    set sBs = AddLightningEx("DRAM", false, BVs, NVs, MVs, wBs, uBs, rBs)
                    set tBs = S8S("when calling alloc_CallbackSingle_doAfter_doPeriodically_Voidless_mechanics in Voidless_mechanics, line 575")
                    call RUs(tBs)
                    set Diw[tBs] = sBs
                    call Ybr(0.5, tBs, "when calling doAfter in Voidless_mechanics, line 575")
    endif
            endif
        endloop
        call lxs(KVs)
        call Sju(JVs, "when calling release in Voidless_mechanics, line 582")
        call uRi(Qiw[AVs])
        set oX = false
        call wHr(DVs, "when calling dispatch_CallbackPeriodic_destroyCallbackPeriodic in Voidless_mechanics, line 585")
    elseif Piw[AVs] < Wiw[AVs]then
        set Eiw[AVs] = Eiw[AVs] + Aiw[AVs]
    elseif Piw[AVs] > Wiw[AVs]then
        set Eiw[AVs] = Eiw[AVs] - Aiw[AVs]
    endif
    call Wwu(Qiw[AVs], Eiw[AVs])
    set ASw = ASw - 1
    set JVs = null
    set KVs = null
    set LVs = null
    set CVs = null
    set VVs = null
    set sBs = null
endfunction
function bFs takes integer oFs, integer OFs, string lFs returns nothing
    set DSw[ASw] = lFs
    set ASw = ASw + 1
    if t3[i3[oFs]] == 0 then
        set t3[i3[oFs]] = OFs
    endif
    call SetCameraFieldForPlayer(DCr(i3[oFs], "when calling getPlayer in CustomPlayer, line 66"), CAMERA_FIELD_TARGET_DISTANCE, n8w(i3[oFs], "when calling getCameraZoomLevel in CustomPlayer, line 66"), 0.)
    set ASw = ASw - 1
endfunction
function bUi takes integer SUi, integer cUi, string oUi returns nothing
    local integer OUi
    local integer lUi
    set DSw[ASw] = oUi
    set ASw = ASw + 1
    if (not PUu())or(not N7S()) then
        set OUi = c5r(gQ, "when calling iterator in JobAdvancementQuestHandler, line 1088")
        loop
            exitwhen not Tji(OUi)
            set lUi = LXi(OUi)
            call SJu(hqs(xMi(xus(lUi, "when calling getCustomPlayer in JobAdvancementQuestHandler, line 1089"), "when calling getCHero in JobAdvancementQuestHandler, line 1089"), "when calling getHero in JobAdvancementQuestHandler, line 1089"), "when calling ac_addRandomDebuff2 in JobAdvancementQuestHandler, line 1089")
        endloop
        call vms(OUi, "when calling close in JobAdvancementQuestHandler, line 1088")
    endif
    set ASw = ASw - 1
endfunction
function d9S takes integer a9S, integer n9S returns nothing
    set yu = true
    call EnumItemsInRect(GetWorldBounds(), null, bUw)
endfunction
function dku takes integer tku, integer iku, string Sku returns nothing
    local integer cku
    local integer oku
    local integer Oku
    local integer lku
    local unit bku
    local integer yku
    local item pku
    local itemtype eku
    local integer qku
    local integer aku
    local integer nku
    set DSw[ASw] = Sku
    set ASw = ASw + 1
    set cku = c5r(gQ, "when calling iterator in Items_Pickup_Drop, line 866")
    loop
        exitwhen not Tji(cku)
        set oku = LXi(cku)
        set Oku = xus(oku, "when calling getCustomPlayer in Items_Pickup_Drop, line 867")
        set lku = xMi(Oku, "when calling getCHero in Items_Pickup_Drop, line 868")
        if lku != 0 and hqs(lku, "when calling getHero in Items_Pickup_Drop, line 870") != null then
            set bku = hqs(lku, "when calling getHero in Items_Pickup_Drop, line 871")
            set yku = 5
            loop
    exitwhen yku < 0
    set pku = ofi(bku, yku)
    if pku != null then
                    set eku = Hri(pku)
                    set qku = q3t(pku)
                    if eku != ITEM_TYPE_PURCHASABLE and(not GpS(FI, qku, "when calling has in Items_Pickup_Drop, line 878")) and(not(qku == l2s(Iji(am, "when calling unObfuscate in Items_Pickup_Drop, line 878"), "when calling fromRawCode in Items_Pickup_Drop, line 878"))) then
                        set nku = aHr(bku, qku)
                        if RBt(pku) then
                            set aku = 1
                        else
                            set aku = 2
                        endif
                        if nku > aku or ZVi(bku, qku) then
                            call UTu(bku, pku, oku, "when calling dropItem_Or_dropToRewardArea in Items_Pickup_Drop, line 880")
                        endif
                    endif
    endif
    set yku = yku - 1
            endloop
        endif
    endloop
    call vms(cku, "when calling close in Items_Pickup_Drop, line 866")
    set ASw = ASw - 1
    set bku = null
    set pku = null
    set eku = null
endfunction
function hdS takes integer RdS, integer TdS, string YdS returns nothing
    local integer GdS
    local integer gdS
    set DSw[ASw] = YdS
    set ASw = ASw + 1
    if not PUu() then
        set GdS = c5r(gQ, "when calling iterator in JobAdvancementQuestHandler, line 1077")
        loop
            exitwhen not Tji(GdS)
            set gdS = LXi(GdS)
            call EnumUnitsSelected(aD[gdS], null, GUw)
        endloop
        call vms(GdS, "when calling close in JobAdvancementQuestHandler, line 1077")
    endif
    set ASw = ASw - 1
endfunction
function iPt takes integer rPt, integer sPt, string tPt returns nothing
    set DSw[ASw] = tPt
    set ASw = ASw + 1
    if bZ != null and yXu(bZ) and smt(fc[$0000000C]) > 0 and(not IW) then
        call xvu(bZ, "stomp")
    elseif not IW then
        call wHr(sPt, "when calling dispatch_CallbackPeriodic_destroyCallbackPeriodic in Imp3DragonFortress, line 1058")
    endif
    set ASw = ASw - 1
endfunction
function j0u takes integer g0u, integer h0u, string F0u returns nothing
    local boolean k0u
    set DSw[ASw] = F0u
    set ASw = ASw + 1
    if a0w[g0u] != null then
        set k0u = wps(tU, agS(n0w[g0u]), "when calling get in Imp4, line 716") == eU
        if Jyr(cU, agS(n0w[g0u]), "when calling has in Imp4, line 718") or Jyr(oU, agS(n0w[g0u]), "when calling has in Imp4, line 718") then
            if k0u then
    if MZ != null and yXu(MZ) then
                    call SDw(s1w(wps(cU, agS(n0w[g0u]), "when calling get in Imp4, line 721"), "when calling lightningFromIndex in Imp4, line 721"), false, qZi(HCi(n0w[g0u]), kcw, jcw, 0., 0., YU), xow, vow, qZi(Xqi(MZ), Qcw, Wcw, 0., 0., UU), xow, vow)
    endif
    if wU != null and yXu(wU) then
                    call SDw(s1w(wps(oU, agS(n0w[g0u]), "when calling get in Imp4, line 723"), "when calling lightningFromIndex in Imp4, line 723"), false, qZi(HCi(n0w[g0u]), kcw, jcw, 0., 0., YU), xow, vow, qZi(Xqi(wU), Qcw, Wcw, 0., 0., IU), xow, vow)
    endif
            else
    if Jyr(cU, agS(n0w[g0u]), "when calling has in Imp4, line 726") then
                    call b9t(s1w(wps(cU, agS(n0w[g0u]), "when calling get in Imp4, line 727"), "when calling lightningFromIndex in Imp4, line 727"))
                    call klS(cU, agS(n0w[g0u]), "when calling remove in Imp4, line 728")
    endif
    if Jyr(oU, agS(n0w[g0u]), "when calling has in Imp4, line 729") then
                    call b9t(s1w(wps(oU, agS(n0w[g0u]), "when calling get in Imp4, line 730"), "when calling lightningFromIndex in Imp4, line 730"))
                    call klS(oU, agS(n0w[g0u]), "when calling remove in Imp4, line 731")
    endif
    if GpS(lU, h0u, "when calling has in Imp4, line 734") then
                    if Jyr(SU, agS(n0w[g0u]), "when calling has in Imp4, line 735") then
                        call uRi(Aii(wps(SU, agS(n0w[g0u]), "when calling get in Imp4, line 736"), "when calling effectFromIndex in Imp4, line 736"))
                        call u5w(SU, agS(n0w[g0u]), "when calling remove in Imp4, line 737")
                    endif
                    call eys(lU, h0u, "when calling remove in Imp4, line 739")
                    call wHr(h0u, "when calling dispatch_CallbackPeriodic_destroyCallbackPeriodic in Imp4, line 740")
    endif
            endif
        endif
    endif
    set ASw = ASw - 1
endfunction
function jFr takes integer TFr, integer YFr returns nothing
    local integer hFr = GetRandomInt($00000000, im)
    local real FFr = Sm[hFr]
    local real kFr = cm[hFr]
    local real GFr = FFr
    local real gFr = kFr
    call wEi(tm, GFr, gFr)
endfunction
function kQs takes integer hQs, integer FQs returns nothing
    set pu = true
    call EnumItemsInRect(GetEntireMapRect(), null, yUw)
endfunction
function l3t takes integer c3t, integer o3t, string O3t returns nothing
    set DSw[ASw] = O3t
    set ASw = ASw + 1
    if (not Jyr(iX, Aei(Hiw[c3t]), "when calling has in Voidless_mechanics, line 672"))or(not Zcr(Hiw[c3t])) then
        call uRi(Jiw[c3t])
        call wHr(o3t, "when calling dispatch_CallbackPeriodic_destroyCallbackPeriodic in Voidless_mechanics, line 674")
    elseif smt(fc[MJ]) == 0 or OK < 1 then
        call uRi(Jiw[c3t])
        call u5w(iX, Aei(Hiw[c3t]), "when calling remove in Voidless_mechanics, line 678")
        call wHr(o3t, "when calling dispatch_CallbackPeriodic_destroyCallbackPeriodic in Voidless_mechanics, line 679")
    elseif Kiw[c3t] == Liw[c3t]then
        call wHr(o3t, "when calling dispatch_CallbackPeriodic_destroyCallbackPeriodic in Voidless_mechanics, line 681")
    elseif Xiw[c3t] < Kiw[c3t]then
        set Liw[c3t] = Liw[c3t] + Ciw[c3t]
        call Wwu(Jiw[c3t], Liw[c3t])
    endif
    set ASw = ASw - 1
endfunction
function ntt takes string qtt returns integer
    local integer att
    set DSw[ASw] = qtt
    set ASw = ASw + 1
    if NX == 0 then
        if MX < 32768 then
            set MX = MX + 1
            set att = MX
            set wC[att] = 1092
        else
            call tNr("Out of memory: Could not create CallbackSingle_doAfter_doPeriodically_doAfter_EffectCleaner.", "when calling error in EffectCleaner, line 102")
            set att = 0
        endif
    else
        set NX = NX - 1
        set att = BX[NX]
        set wC[att] = 1092
    endif
    set ASw = ASw - 1
    return att
endfunction
function wyi takes string Nbi returns integer
    local integer Mbi
    set DSw[ASw] = Nbi
    set ASw = ASw + 1
    if NX == 0 then
        if MX < 32768 then
            set MX = MX + 1
            set Mbi = MX
            set wC[Mbi] = 1091
        else
            call tNr("Out of memory: Could not create CallbackSingle_doAfter_doPeriodically_doAfter_EffectCleaner.", "when calling error in EffectCleaner, line 97")
            set Mbi = 0
        endif
    else
        set NX = NX - 1
        set Mbi = BX[NX]
        set wC[Mbi] = 1091
    endif
    set ASw = ASw - 1
    return Mbi
endfunction
function lBt takes integer sBt, integer tBt, string iBt returns nothing
    local integer SBt
    local integer cBt
    local real oBt
    local real OBt
    set DSw[ASw] = iBt
    set ASw = ASw + 1
    set oBt = GetRandomReal(0., 5.)
    set SBt = wyi("when calling alloc_CallbackSingle_doAfter_doPeriodically_doAfter_EffectCleaner in EffectCleaner, line 97")
    call RUs(SBt)
    set x1[SBt] = k1[sBt]
    set v1[SBt] = j1[sBt]
    call Ybr(oBt, SBt, "when calling doAfter in EffectCleaner, line 97")
    set OBt = GetRandomReal(10., 30.)
    set cBt = ntt("when calling alloc_CallbackSingle_doAfter_doPeriodically_doAfter_EffectCleaner in EffectCleaner, line 102")
    call RUs(cBt)
    set m1[cBt] = k1[sBt]
    set Q1[cBt] = j1[sBt]
    call Ybr(OBt, cBt, "when calling doAfter in EffectCleaner, line 102")
    set ASw = ASw - 1
endfunction
function nOr takes integer oOr, integer OOr, string lOr returns nothing
    local integer bOr
    local integer yOr
    local integer pOr
    local unit eOr
    local integer qOr
    local real aOr
    set DSw[ASw] = lOr
    set ASw = ASw + 1
    set bOr = c5r(gQ, "when calling iterator in FateDestinyUnlocker, line 837")
    loop
        exitwhen not Tji(bOr)
        set yOr = LXi(bOr)
        set pOr = xMi(xus(yOr, "when calling getCustomPlayer in FateDestinyUnlocker, line 838"), "when calling getCHero in FateDestinyUnlocker, line 838")
        if pOr != 0 then
            set eOr = hqs(pOr, "when calling getHero in FateDestinyUnlocker, line 840")
            if eOr != null and yXu(eOr) and QUu(eOr, K7[oOr]) and(not n2u(eOr)) and(not ESt(eOr, "when calling isStash in FateDestinyUnlocker, line 841")) then
    set qOr = ict(eOr, K7[oOr])
    if qOr > 0 and qOr <= 2 then
                    if t3i(eOr) < Ges(eOr) * Am * qOr then
                        set aOr = aSr(eOr) * Dm * qOr
                        if Udi(eOr) - aOr <= 0. then
                            call Tri(eOr)
                        else
                            call UNi(eOr, - aOr)
                        endif
                    else
                        call Ziu(eOr, - (Ges(eOr) * Am * qOr))
                    endif
    endif
            endif
        endif
    endloop
    call vms(bOr, "when calling close in FateDestinyUnlocker, line 837")
    set ASw = ASw - 1
    set eOr = null
endfunction
function d5w takes string l5w returns unit
    local group b5w
    local boolean y5w
    local integer p5w
    local unit e5w
    local boolean q5w
    local integer a5w
    local unit n5w
    set DSw[ASw] = l5w
    set ASw = ASw + 1
    set b5w = e9S(fK, PLAYER_NEUTRAL_AGGRESSIVE, "when calling getUnitsInRectExcept in Voidless_mechanics, line 490")
    set y5w = false
    set p5w = 25
    set e5w = cuS(b5w)
    loop
        exitwhen not((not y5w)and p5w > 0)
        set p5w = p5w - 1
        set q5w = false
        set a5w = gJi(uX, "when calling iterator in Voidless_mechanics, line 500")
        loop
            exitwhen not slr(a5w, "when calling hasNext in Voidless_mechanics, line 500")
            set n5w = iCu(Gjs(a5w, "when calling next in Voidless_mechanics, line 500"), "when calling unitFromIndex in Voidless_mechanics, line 500")
            if iCu(wps(uX, Aei(n5w), "when calling get in Voidless_mechanics, line 501"), "when calling unitFromIndex in Voidless_mechanics, line 501") == e5w or kPu(e5w, "when calling isInvolvedInMechanic in Voidless_mechanics, line 501") or(not Zcr(e5w)) then
    set q5w = true
    exitwhen true
            endif
        endloop
        call Ejr(a5w, "when calling close in Voidless_mechanics, line 500")
        if yXu(e5w) and(not q5w) and t_u(e5w) and(not fRi(e5w)) then
            set y5w = true
        else
            set e5w = cuS(b5w)
        endif
    endloop
    call Sju(b5w, "when calling release in Voidless_mechanics, line 510")
    if p5w <= 0 then
        set e5w = null
    endif
    set ASw = ASw - 1
    set gIw = e5w
    set b5w = null
    set e5w = null
    set n5w = null
    return gIw
endfunction
function o6i takes integer g5i, integer h5i, string F5i returns nothing
    local integer k5i
    local unit j5i
    local unit x5i
    local real v5i
    local real m5i
    local real Q5i
    local real W5i
    local real E5i
    local real Z5i
    local unit U5i
    local player I5i
    local real P5i
    local real A5i
    local real D5i
    local real H5i
    local real J5i
    local real K5i
    local real L5i
    local real X5i
    local real C5i
    local real V5i
    local real B5i
    local real N5i
    local real M5i
    local real w6i
    local real u6i
    local real r6i
    local real s6i
    local real t6i
    local real i6i
    local real S6i
    local real c6i
    set DSw[ASw] = F5i
    set ASw = ASw + 1
    if hji(uX, "when calling size in Voidless_mechanics, line 384") == 0 or OK < 1 then
        call wHr(h5i, "when calling dispatch_CallbackPeriodic_destroyCallbackPeriodic in Voidless_mechanics, line 385")
    else
        set k5i = gJi(uX, "when calling iterator in Voidless_mechanics, line 387")
        loop
            exitwhen not slr(k5i, "when calling hasNext in Voidless_mechanics, line 387")
            set j5i = iCu(Gjs(k5i, "when calling next in Voidless_mechanics, line 387"), "when calling unitFromIndex in Voidless_mechanics, line 387")
            if iCu(wps(uX, Aei(j5i), "when calling get in Voidless_mechanics, line 388"), "when calling unitFromIndex in Voidless_mechanics, line 388") == null or s1w(wps(rX, Aei(j5i), "when calling get in Voidless_mechanics, line 388"), "when calling lightningFromIndex in Voidless_mechanics, line 388") == null then
    set x5i = d5w("when calling voidRifts_getRandomPlayerUnit in Voidless_mechanics, line 389")
    if x5i != null then
                    call iUr(uX, Aei(j5i), Aei(x5i), "when calling put in Voidless_mechanics, line 392")
                    set V5i = ATS(ANw(j5i), XSw, 150.)
                    set B5i = VSw
                    set N5i = BSw
                    set v5i = V5i
                    set m5i = B5i
                    set Q5i = N5i
                    set M5i = ATS(ANw(x5i), XSw, 50.)
                    set w6i = VSw
                    set u6i = BSw
                    set W5i = M5i
                    set E5i = w6i
                    set Z5i = u6i
                    call iUr(rX, Aei(j5i), hVs(AddLightningEx("DRAM", false, v5i, m5i, Q5i, W5i, E5i, Z5i), "when calling lightningToIndex in Voidless_mechanics, line 395"), "when calling put in Voidless_mechanics, line 395")
                    call OJt(x5i, false)
    endif
            elseif iCu(wps(uX, Aei(j5i), "when calling get in Voidless_mechanics, line 398"), "when calling unitFromIndex in Voidless_mechanics, line 398") != null and Zcr(iCu(wps(uX, Aei(j5i), "when calling get in Voidless_mechanics, line 398"), "when calling unitFromIndex in Voidless_mechanics, line 398")) then
    set U5i = iCu(wps(uX, Aei(j5i), "when calling get in Voidless_mechanics, line 399"), "when calling unitFromIndex in Voidless_mechanics, line 399")
    set I5i = eDs(U5i)
    set r6i = ATS(ANw(j5i), XSw, 150.)
    set s6i = VSw
    set t6i = BSw
    set P5i = r6i
    set A5i = s6i
    set D5i = t6i
    set i6i = ATS(ANw(U5i), XSw, 50.)
    set S6i = VSw
    set c6i = BSw
    set H5i = i6i
    set J5i = S6i
    set K5i = c6i
    call SDw(s1w(wps(rX, Aei(j5i), "when calling get in Voidless_mechanics, line 403"), "when calling lightningFromIndex in Voidless_mechanics, line 403"), false, P5i, A5i, D5i, H5i, J5i, K5i)
    if fYr(Fxs(P5i, A5i, D5i), icw, Fxs(H5i, J5i, K5i), icw) < 75. and(not GpS(sX, Aei(U5i), "when calling has in Voidless_mechanics, line 405")) then
                    call vwt(sX, Aei(U5i), "when calling add in Voidless_mechanics, line 406")
                    call Ggr(U5i)
                    call OJt(U5i, true)
                    call V5S(U5i, $416D7266)
                    call gdr(U5i, 150., 25.)
                    call cor(Ng, I5i, U5i, "when calling lock in Voidless_mechanics, line 411")
                    call dii(Iji("The rift's blackhole is stopping your actions ...", "when calling unObfuscate in Voidless_mechanics, line 413"), 5., eDs(U5i))
                    call n_S(U5i, $00000000, "when calling playArrowGame in Voidless_mechanics, line 414")
    elseif fYr(Fxs(P5i, A5i, D5i), icw, Fxs(H5i, J5i, K5i), icw) > 75. then
                    set L5i = Atan2(A5i - J5i, P5i - H5i)
                    set X5i = H5i + viw[g5i] * Cos(L5i)
                    set C5i = J5i + viw[g5i] * Sin(L5i)
                    call iYt(U5i, X5i, C5i)
    endif
            else
    call ZdS(j5i, "when calling blackholeCleanup in Voidless_mechanics, line 423")
            endif
        endloop
        call Ejr(k5i, "when calling close in Voidless_mechanics, line 387")
    endif
    set ASw = ASw - 1
    set j5i = null
    set x5i = null
    set U5i = null
    set I5i = null
endfunction
function wKw takes integer CJw, integer VJw, string BJw returns nothing
    local integer NJw
    local integer MJw
    set DSw[ASw] = BJw
    set ASw = ASw + 1
    set NJw = c5r(gQ, "when calling iterator in NpcHandler, line 833")
    loop
        exitwhen not Tji(NJw)
        set MJw = LXi(NJw)
        if (not GpS(lA, MJw, "when calling has in NpcHandler, line 834"))and nD == aD[MJw]then
            call PreloadGenClear()
        endif
    endloop
    call vms(NJw, "when calling close in NpcHandler, line 833")
    set ASw = ASw - 1
endfunction
function wvi takes integer Exi, integer Zxi, string Uxi returns nothing
    local integer Ixi
    local real Pxi
    local real Axi
    local real Dxi
    local real Hxi
    local real Jxi
    local real Kxi
    local real Lxi
    local effect Xxi
    local real Cxi
    local real Vxi
    local real Bxi
    local real Nxi
    local real Mxi
    set DSw[ASw] = Uxi
    set ASw = ASw + 1
    set Ixi = wps(tU, agS(K9[Exi]), "when calling get in Imp4, line 350")
    if Ixi < eU then
        set Cxi = g2r(K9[Exi])
        set Axi = Cxi
        set Pxi = Axi
        call g2r(K9[Exi])
        set Vxi = vcw
        set Hxi = Vxi
        set Dxi = Hxi
        set L9[Exi] = Atan2(C9[Exi] - Dxi, X9[Exi] - Pxi)
        set Bxi = Pxi + B9[Exi] * Cos(L9[Exi])
        set Nxi = Dxi + B9[Exi] * Sin(L9[Exi])
        set Jxi = Bxi
        set Kxi = Nxi
        call wEi(K9[Exi], Jxi, Kxi)
        set Xxi = K9[Exi]
        call ATS(Jxi, Kxi, dU)
        set Mxi = BSw
        set Lxi = Mxi
        call vQs(Xxi, Lxi)
        if fYr(Fxs(X9[Exi], C9[Exi], V9[Exi]), icw, Jxi, Kxi) < 10. then
            set N9[Exi] = true
        endif
    else
        set N9[Exi] = true
    endif
    if N9[Exi]then
        if Zxi != 0 then
            if Jyr(OU, agS(K9[Exi]), "when calling has in Imp4, line 368") then
    call u5w(OU, agS(K9[Exi]), "when calling remove in Imp4, line 369")
            endif
            call wHr(Zxi, "when calling dispatch_CallbackPeriodic_destroyCallbackPeriodic in Imp4, line 370")
        endif
    endif
    set ASw = ASw - 1
    set Xxi = null
endfunction
function xGt takes integer GGt, integer gGt returns nothing
    local integer hGt = P3w(Yts()) - giw[GGt]
    local integer FGt
    local integer kGt
    local real jGt
    if hGt <= 10 then
        set kGt = 1
    else
        set kGt = 2
    endif
    set FGt = kGt
    set jGt = t3i(hiw[GGt]) - Ges(hiw[GGt]) * cX * FGt
    call b9i(hiw[GGt], jGt)
endfunction
function y5i takes integer c5i, integer o5i, string O5i returns nothing
    local integer l5i
    local rect b5i
    set DSw[ASw] = O5i
    set ASw = ASw + 1
    if smt(fc[$0000000C]) == 0 then
        call DisableTrigger(hR)
        set l5i = gJi(LW, "when calling iterator in Imp3DragonFortress, line 1630")
        loop
            exitwhen not slr(l5i, "when calling hasNext in Imp3DragonFortress, line 1630")
            set b5i = Snu(Gjs(l5i, "when calling next in Imp3DragonFortress, line 1630"), "when calling rectFromIndex in Imp3DragonFortress, line 1630")
            call TimerStart(HCs(wps(LW, Ici(b5i), "when calling get in Imp3DragonFortress, line 1631"), "when calling timerFromIndex in Imp3DragonFortress, line 1631"), 0., false, null)
        endloop
        call Ejr(l5i, "when calling close in Imp3DragonFortress, line 1630")
        call TimerStart(FR, 0., false, null)
        call TimerStart(jR, 0., false, null)
        call TimerStart(xR, 0., false, null)
        call TimerStart(vR, 0., false, null)
        set kW = 0
        set jW = 0
        set xW = 0
        set PW = false
        call wHr(o5i, "when calling dispatch_CallbackPeriodic_destroyCallbackPeriodic in Imp3DragonFortress, line 1640")
    endif
    set ASw = ASw - 1
    set b5i = null
endfunction
function eRi takes unit yRi, real pRi returns nothing
    if pRi >= 1. then
        call b9i(yRi, t3i(yRi) + pRi)
    endif
endfunction
function fmi takes unit qmi returns boolean
    local boolean ami = false
    local integer nmi = 0
    local integer dmi = dcs(qmi) - 1
    loop
        exitwhen nmi > dmi
        if Aai(ofi(qmi, nmi)) then
            set ami = true
            exitwhen true
        endif
        set nmi = nmi + 1
    endloop
    return ami
endfunction
function yAw takes integer oAw, integer OAw, string lAw returns nothing
    local unit bAw
    set DSw[ASw] = lAw
    set ASw = ASw + 1
    if W0w[oAw] != null and yXu(W0w[oAw]) and TYt(wps(qI, E0w[oAw], "when calling get in Items_Pickup_Drop, line 523")) and fmi(W0w[oAw]) then
        set bAw = hqs(xMi(xus(E0w[oAw], "when calling getCustomPlayer in Items_Pickup_Drop, line 524"), "when calling getCHero in Items_Pickup_Drop, line 524"), "when calling getHero in Items_Pickup_Drop, line 524")
        call eRi(bAw, Ges(bAw) * Meu(bAw, "when calling inspirit_getRegenPerc in Items_Pickup_Drop, line 525"))
    elseif OAw != 0 then
        call GVw(qI, E0w[oAw], O_i(false), "when calling put in Items_Pickup_Drop, line 529")
        call wHr(OAw, "when calling dispatch_CallbackPeriodic_destroyCallbackPeriodic in Items_Pickup_Drop, line 531")
    endif
    set ASw = ASw - 1
    set bAw = null
endfunction
function yMi takes integer OMi, integer lMi, string bMi returns nothing
    set DSw[ASw] = bMi
    set ASw = ASw + 1
    call Xau(Iji("Join us at |cff00BFFFdiscord.tever.xyz|r or on |cff00BFFFwww.tever.xyz|r", "when calling unObfuscate in EffectCleaner, line 115"), 8.)
    set ASw = ASw - 1
endfunction
function yiS takes integer iiS, integer SiS, string ciS returns nothing
    local group oiS
    local boolean OiS
    local group liS
    local unit biS
    set DSw[ASw] = ciS
    set ASw = ASw + 1
    if eDs(DX) == aD[PLAYER_NEUTRAL_PASSIVE]then
        call wHr(SiS, "when calling dispatch_CallbackPeriodic_destroyCallbackPeriodic in WorldBoss_quests, line 70")
    else
        set oiS = LLt(ANw(DX), XSw, 800., "when calling getUnitsInRange in WorldBoss_quests, line 72")
        set OiS = false
        set liS = XbS(oiS)
        loop
            exitwhen not hJw(liS)
            set biS = tPr(liS)
            if GpS(gQ, hgr(eDs(biS)), "when calling has in WorldBoss_quests, line 76") and boS(biS) == 300 then
    set OiS = true
    exitwhen true
            endif
        endloop
        call lxs(liS)
        call Sju(oiS, "when calling release in WorldBoss_quests, line 79")
        if not OiS then
            call g9u(DX, aD[PLAYER_NEUTRAL_PASSIVE], false)
            call wHr(SiS, "when calling dispatch_CallbackPeriodic_destroyCallbackPeriodic in WorldBoss_quests, line 83")
        endif
    endif
    set ASw = ASw - 1
    set oiS = null
    set liS = null
    set biS = null
endfunction
function p3i takes integer l3i, integer b3i, string y3i returns nothing
    set DSw[ASw] = y3i
    set ASw = ASw + 1
    if DC[l3i] == 0 then
        if l3i == 0 then
            call tNr("Nullpointer exception when calling CallbackPeriodic.call", "when calling error in ClosureTimers, line 130")
        else
            call tNr("Called CallbackPeriodic.call on invalid object.", "when calling error in ClosureTimers, line 130")
        endif
    endif
    if DC[l3i] <= 695 then
        if DC[l3i] <= 684 then
            if DC[l3i] <= 678 then
    if DC[l3i] <= 675 then
                    if DC[l3i] <= 674 then
                        if DC[l3i] <= 673 then
                            call SYS(l3i, b3i, "when calling call_doPeriodically_Configuration in ClosureTimers, line 130")
                        else
                            call Heu(l3i, b3i, "when calling call_doPeriodically_Critters in ClosureTimers, line 130")
                        endif
                    else
                        call bFs(l3i, b3i, "when calling call_doPeriodically_CustomPlayer_CustomPlayer in ClosureTimers, line 130")
                    endif
    elseif DC[l3i] <= 677 then
                    if DC[l3i] <= 676 then
                        call U0r(l3i, b3i, "when calling call_doPeriodically_DungeonCmds in ClosureTimers, line 130")
                    else
                        call Mhr(l3i, b3i)
                    endif
    else
                    call jFr(l3i, b3i)
    endif
            elseif DC[l3i] <= 681 then
    if DC[l3i] <= 680 then
                    if DC[l3i] <= 679 then
                        call FDs(l3i, b3i, "when calling call_doPeriodically_FateDestinyUnlocker in ClosureTimers, line 130")
                    else
                        call nOr(l3i, b3i, "when calling call_doPeriodically_FateDestinyUnlocker in ClosureTimers, line 130")
                    endif
    else
                    call SBu(l3i, b3i, "when calling call_doPeriodically_Imp3DragonFortress in ClosureTimers, line 130")
    endif
            elseif DC[l3i] <= 683 then
    if DC[l3i] <= 682 then
                    call y5i(l3i, b3i, "when calling call_doPeriodically_Imp3DragonFortress in ClosureTimers, line 130")
    else
                    call wvi(l3i, b3i, "when calling call_doPeriodically_Imp4 in ClosureTimers, line 130")
    endif
            else
    call YEs(l3i, b3i, "when calling call_doPeriodically_Imp4 in ClosureTimers, line 130")
            endif
        elseif DC[l3i] <= 690 then
            if DC[l3i] <= 687 then
    if DC[l3i] <= 686 then
                    if DC[l3i] <= 685 then
                        call Gms(l3i, b3i, "when calling call_doPeriodically_Imp4 in ClosureTimers, line 130")
                    else
                        call Rjt(l3i, b3i, "when calling call_doPeriodically_Imp4 in ClosureTimers, line 130")
                    endif
    else
                    call For(l3i, b3i, "when calling call_doPeriodically_Imp4 in ClosureTimers, line 130")
    endif
            elseif DC[l3i] <= 689 then
    if DC[l3i] <= 688 then
                    call PMr(l3i, b3i, "when calling call_doPeriodically_Inspirit_Overvelde in ClosureTimers, line 130")
    else
                    call Jhs(l3i, b3i, "when calling call_doPeriodically_Items_Pickup_Drop in ClosureTimers, line 130")
    endif
            else
    call yAw(l3i, b3i, "when calling call_doPeriodically_Items_Pickup_Drop in ClosureTimers, line 130")
            endif
        elseif DC[l3i] <= 693 then
            if DC[l3i] <= 692 then
    if DC[l3i] <= 691 then
                    call dku(l3i, b3i, "when calling call_doPeriodically_Items_Pickup_Drop in ClosureTimers, line 130")
    else
                    call Gyr(l3i, b3i, "when calling call_doPeriodically_JobAdvancementQuestHandler in ClosureTimers, line 130")
    endif
            else
    call d9S(l3i, b3i)
            endif
        elseif DC[l3i] <= 694 then
            call kQs(l3i, b3i)
        else
            call C6w(l3i, b3i, "when calling call_doPeriodically_JobAdvancementQuestHandler in ClosureTimers, line 130")
        endif
    elseif DC[l3i] <= 706 then
        if DC[l3i] <= 701 then
            if DC[l3i] <= 698 then
    if DC[l3i] <= 697 then
                    if DC[l3i] <= 696 then
                        call T8S(l3i, b3i, "when calling call_doPeriodically_JobAdvancementQuestHandler in ClosureTimers, line 130")
                    else
                        call ayS(l3i, b3i, "when calling call_doPeriodically_JobAdvancementQuestHandler in ClosureTimers, line 130")
                    endif
    else
                    call hdS(l3i, b3i, "when calling call_doPeriodically_JobAdvancementQuestHandler in ClosureTimers, line 130")
    endif
            elseif DC[l3i] <= 700 then
    if DC[l3i] <= 699 then
                    call Git(l3i, b3i, "when calling call_doPeriodically_JobAdvancementQuestHandler in ClosureTimers, line 130")
    else
                    call bUi(l3i, b3i, "when calling call_doPeriodically_JobAdvancementQuestHandler in ClosureTimers, line 130")
    endif
            else
    call wKw(l3i, b3i, "when calling call_doPeriodically_NpcHandler in ClosureTimers, line 130")
            endif
        elseif DC[l3i] <= 704 then
            if DC[l3i] <= 703 then
    if DC[l3i] <= 702 then
                    call Qfu(l3i, b3i, "when calling call_doPeriodically_SpellIconWithGif in ClosureTimers, line 130")
    else
                    call A_i(l3i, b3i, "when calling call_doPeriodically_Voidless in ClosureTimers, line 130")
    endif
            else
    call Ubi(l3i, b3i, "when calling call_doPeriodically_Voidless in ClosureTimers, line 130")
            endif
        elseif DC[l3i] <= 705 then
            call xGt(l3i, b3i)
        else
            call I2t(l3i, b3i, "when calling call_doPeriodically_Voidless_mechanics in ClosureTimers, line 130")
        endif
    elseif DC[l3i] <= 712 then
        if DC[l3i] <= 709 then
            if DC[l3i] <= 708 then
    if DC[l3i] <= 707 then
                    call o6i(l3i, b3i, "when calling call_doPeriodically_Voidless_mechanics in ClosureTimers, line 130")
    else
                    call bBs(l3i, b3i, "when calling call_doPeriodically_Voidless_mechanics in ClosureTimers, line 130")
    endif
            else
    call l3t(l3i, b3i, "when calling call_doPeriodically_Voidless_mechanics in ClosureTimers, line 130")
            endif
        elseif DC[l3i] <= 711 then
            if DC[l3i] <= 710 then
    call yiS(l3i, b3i, "when calling call_doPeriodically_WorldBoss_quests in ClosureTimers, line 130")
            else
    call CJs(l3i, b3i, "when calling call_doPeriodically_addAction_Champion_AsuraStrike in ClosureTimers, line 130")
            endif
        else
            call lBt(l3i, b3i, "when calling call_doPeriodically_doAfter_EffectCleaner in ClosureTimers, line 130")
        endif
    elseif DC[l3i] <= 715 then
        if DC[l3i] <= 714 then
            if DC[l3i] <= 713 then
    call yMi(l3i, b3i, "when calling call_doPeriodically_doAfter_EffectCleaner in ClosureTimers, line 130")
            else
    call iPt(l3i, b3i, "when calling call_doPeriodically_doAfter_Imp3DragonFortress in ClosureTimers, line 130")
            endif
        else
            call Lns(l3i, b3i, "when calling call_doPeriodically_doAfter_Imp4 in ClosureTimers, line 130")
        endif
    elseif DC[l3i] <= 716 then
        call GNw(l3i, b3i, "when calling call_doPeriodically_doAfter_Voidless_mechanics in ClosureTimers, line 130")
    else
        call j0u(l3i, b3i, "when calling call_doPeriodically_doPeriodically_Imp4 in ClosureTimers, line 130")
    endif
    set ASw = ASw - 1
endfunction
function wdr takes string Nnr returns nothing
    local integer Mnr
    set DSw[ASw] = Nnr
    set ASw = ASw + 1
    set Mnr = PPi(GetExpiredTimer(), "when calling getData in ClosureTimers, line 138")
    call p3i(Mnr, Mnr, "when calling call in ClosureTimers, line 139")
    set ASw = ASw - 1
endfunction
function UVr takes nothing returns nothing
    set ASw = 0
    call wdr("via function reference ClosureTimers, line 135")
endfunction
function UVs takes nothing returns boolean
    return GetItemType(GetManipulatedItem()) == ITEM_TYPE_POWERUP
endfunction
function UXs takes nothing returns boolean
    return IsUnitType(GetFilterUnit(), UNIT_TYPE_ANCIENT) != false
endfunction
function UYr takes nothing returns nothing
    set ts = GetEnumUnit()
endfunction
function Uli takes nothing returns nothing
    local unit Wli = GetEnteringUnit()
    local player Eli = eDs(Wli)
    local integer Zli = hgr(Eli)
    call EnumItemsInRect(Bx[Zli], null, MQw)
    if qP[Zli] > 1 then
        if pP[Zli] ==- 1 then
            set pP[Zli] = GetRandomInt($00000000, qP[Zli] - 1)
        endif
        call EnumItemsInRect(Bx[Zli], null, wWw)
    endif
    set qP[Zli] = 0
    set eP[Zli] = 0
    set Wli = null
    set Eli = null
endfunction
function Ult takes nothing returns boolean
    local trigger Wlt
    local trigger Elt
    local trigger Zlt
    set HG = 1095195226
    set Wlt = CreateTrigger()
    call B2S(Wlt, kvw)
    set Elt = Wlt
    call dUs(Elt, Condition(jvw))
    set Zlt = Elt
    call l2w(Zlt, EVENT_PLAYER_UNIT_SPELL_EFFECT)
    set Wlt = null
    set Elt = null
    set Zlt = null
    return true
endfunction
function UnS takes nothing returns nothing
    call PanCameraToTimedLocForPlayer(GetEnumPlayer(), gZ, 1.)
    call CreateFogModifierRadiusLocBJ(true, GetEnumPlayer(), FOG_OF_WAR_VISIBLE, vo, 800.)
    set Ac[1 + GetPlayerId(GetEnumPlayer())] = bj_lastCreatedFogModifier
endfunction
function AFr takes player PFr returns boolean
    return IsPlayerInForce(PFr, Nu) == false
endfunction
function Cku takes string Lku returns integer
    local integer Xku
    set DSw[ASw] = Lku
    set ASw = ASw + 1
    if NX == 0 then
        if MX < 32768 then
            set MX = MX + 1
            set Xku = MX
            set wC[Xku] = 918
        else
            call tNr("Out of memory: Could not create CallbackSingle_doAfter_NpcHandler.", "when calling error in NpcHandler, line 336")
            set Xku = 0
        endif
    else
        set NX = NX - 1
        set Xku = BX[NX]
        set wC[Xku] = 918
    endif
    set ASw = ASw - 1
    return Xku
endfunction
function CGt takes integer IGt, integer PGt, item AGt, string DGt returns nothing
    local integer HGt
    local integer JGt
    local integer KGt
    local integer LGt
    local string XGt
    set DSw[ASw] = DGt
    set ASw = ASw + 1
    if ait(AGt, "when calling isStackable in NpcHandler, line 454") then
        if Zu[Uu] > 100 then
            set JGt = 100
        else
            set JGt = Zu[Uu]
        endif
        set HGt = JGt
        if wps(C_r(TI, PGt, "when calling get in NpcHandler, line 457"), IGt, "when calling get in NpcHandler, line 457") < 0 then
            if C_r(TI, PGt, "when calling get in NpcHandler, line 458") == 0 then
    set LGt = 0
            else
    set LGt = wps(C_r(TI, PGt, "when calling get in NpcHandler, line 458"), IGt, "when calling get in NpcHandler, line 458")
            endif
            set KGt = LGt *- 1
            set XGt = fju(KGt)
            call dii(Iji("Removing ", "when calling unObfuscate in NpcHandler, line 460") + XGt + Iji(" stacks from ", "when calling unObfuscate in NpcHandler, line 460") + XRt(AGt) + Iji(" to prevent duplication.", "when calling unObfuscate in NpcHandler, line 460"), 10., aD[PGt])
            set HGt = HGt - KGt
        endif
        if HGt <= 0 then
            call dii(Iji("Removing ", "when calling unObfuscate in NpcHandler, line 463") + XRt(AGt) + Iji(" due to having 0 or less stacks left.", "when calling unObfuscate in NpcHandler, line 463"), 10., aD[PGt])
            call tdu(AGt)
        else
            call Rnu(AGt, HGt)
            call BOt(AGt, HGt, PGt, "when calling addChargesVirtual in NpcHandler, line 467")
            call IcS()
        endif
    endif
    set ASw = ASw - 1
endfunction
function CNu takes integer XNu returns integer
    if wr == false then
        set wr = true
        call sHu()
    endif
    if XNu <= Bu then
        return Hu[XNu]
    endif
    return KZi(XNu)
endfunction
function DTs takes integer PTs, string ATs returns nothing
    set DSw[ASw] = ATs
    set ASw = ASw + 1
    call eys(Zx, PTs, "when calling remove in NpcHandler, line 479")
    set ASw = ASw - 1
endfunction
function HAi takes integer vAi, integer mAi, unit QAi, string WAi returns item
    local real EAi
    local real ZAi
    local item UAi
    local item IAi
    local item PAi
    local real AAi
    local real DAi
    set DSw[ASw] = WAi
    set ASw = ASw + 1
    set AAi = ANw(QAi)
    set DAi = XSw
    set EAi = AAi
    set ZAi = DAi
    call vwt(Zx, vAi, "when calling add in NpcHandler, line 472")
    set IAi = CreateItem(mAi, EAi, ZAi)
    call IOt(IAi, eDs(QAi), true)
    set PAi = IAi
    call Rnu(PAi, $00000000)
    set UAi = PAi
    call vwt(px, Xdu(UAi), "when calling add in NpcHandler, line 474")
    call GVw(ex, Xdu(UAi), vAi, "when calling put in NpcHandler, line 475")
    set ASw = ASw - 1
    set YIw = UAi
    set UAi = null
    set IAi = null
    set PAi = null
    return YIw
endfunction
function Res takes unit les, integer bes, boolean yes, string pes returns nothing
    local integer ees
    local integer qes
    local integer aes
    local integer nes
    local item des
    local unit fes
    set DSw[ASw] = pes
    set ASw = ASw + 1
    set Uu = Uu + 1
    set ees = Zu[Uu]
    if not Jyr(oA, bes, "when calling has in NpcHandler, line 425") then
        call GVw(oA, bes, - 1, "when calling put in NpcHandler, line 426")
    endif
    if wps(oA, bes, "when calling get in NpcHandler, line 428") >= 3 then
        set ees = 6
    endif
    set qes = 1
    set aes = ees
    loop
        exitwhen qes > aes
        set Uu = Uu + 1
        set nes = CNu(Zu[Uu])
        if TSs(nes) != "...." then
            set des = HAi(bes, nes, les, "when calling loadedItemCreate in NpcHandler, line 438")
            if j0t(Nt[1 + bes]) and les == Nt[1 + bes]then
    set fes = Bt[1 + bes]
            else
    set fes = les
            endif
            call UQs(fes, des)
            set Uu = Uu + 1
            call CGt(nes, bes, des, "when calling loadedItemAdjustStacks in NpcHandler, line 444")
            call DTs(bes, "when calling loadedItemFinish in NpcHandler, line 445")
            if yes and RBt(des) then
    call tdu(des)
    call dii(Iji("Removing godly item loaded from hacked version of game - ", "when calling unObfuscate in NpcHandler, line 449") + XRt(des), 10., aD[bes])
            endif
        else
            set Uu = Uu + 1
        endif
        set qes = qes + 1
    endloop
    set ASw = ASw - 1
    set des = null
    set fes = null
endfunction
function gMw takes player fMw, string RMw, string TMw returns boolean
    local boolean YMw
    local integer GMw
    set DSw[ASw] = TMw
    set ASw = ASw + 1
    set YMw = false
    set GMw = cA
    loop
        exitwhen GMw < 0
        set Lu = SA[GMw]
        set Eu = RMw
        set Pu = ZKu(Eu)
        if Pu then
            set YMw = true
            call GVw(oA, hgr(fMw), GMw, "when calling put in NpcHandler, line 297")
            exitwhen true
        endif
        set GMw = GMw - 1
    endloop
    set ASw = ASw - 1
    return YMw
endfunction
function cei takes integer iei, integer Sei returns integer
    return BlzBitAnd(iei, Sei)
endfunction
function NJr takes integer VJr, integer BJr returns boolean
    return cei(VJr, Ug[BJr]) != 0
endfunction
function uri takes integer Xui, integer Cui, string Vui returns nothing
    local integer Bui
    local integer Nui
    local integer Mui
    local integer wri
    set DSw[ASw] = Vui
    set ASw = ASw + 1
    set wri = Cui
    set Bui = wri
    set Nui = 0
    set Mui = 5
    loop
        exitwhen Nui > Mui
        if NJr(Bui, Nui) then
            call vwt(AM[Xui], Nui, "when calling add in CustomHero, line 251")
        endif
        set Nui = Nui + 1
    endloop
    set ASw = ASw - 1
endfunction
function ubt takes integer Nlt, integer Mlt, string wbt returns nothing
    set DSw[ASw] = wbt
    set ASw = ASw + 1
    if MC[Nlt] == 0 then
        if Nlt == 0 then
            call tNr("Nullpointer exception when calling CustomHero.critterTierFromSaveLoad", "when calling error in CustomHero, line 246")
        else
            call tNr("Called CustomHero.critterTierFromSaveLoad on invalid object.", "when calling error in CustomHero, line 246")
        endif
    endif
    call uri(Nlt, Mlt, "when calling critterTierFromSaveLoad in CustomHero, line 246")
    set ASw = ASw - 1
endfunction
function jXu takes player qXu, string aXu, string nXu returns nothing
    local integer dXu
    local integer fXu
    local integer RXu
    local boolean TXu
    local boolean YXu
    local boolean GXu
    local string gXu
    local integer hXu
    local integer FXu
    local real kXu
    set DSw[ASw] = nXu
    set ASw = ASw + 1
    set dXu = hgr(qXu)
    if wds(khu(aXu, " ", "when calling split in NpcHandler, line 309"), "when calling size in NpcHandler, line 309") > 2 then
        call Y2r(GetTriggeringTrigger())
        call dii(Iji("|cffff0000Invalid load command.|r", "when calling unObfuscate in NpcHandler, line 311"), 3., qXu)
        set ASw = ASw - 1
        return
    endif
    call GVw(oA, dXu, - 1, "when calling put in NpcHandler, line 314")
    if not fhi(qXu) then
        if not(Jyr(OA, dXu, "when calling has in NpcHandler, line 317") and TYt(wps(OA, dXu, "when calling get in NpcHandler, line 317"))) then
            if (not IsPlayerInForce(qXu, Vt))and(not IsPlayerInForce(qXu, lt)) and(not IsPlayerInForce(qXu, At)) and(not IsPlayerInForce(qXu, ws)) and SubStringBJ(aXu, $00000001, $00000007) == "-load2 " and StringLength(aXu) > 7 and(not GpS(yA, dXu, "when calling has in NpcHandler, line 319")) then
    set fXu = xus(dXu, "when calling getCustomPlayer in NpcHandler, line 320")
    set RXu = xMi(fXu, "when calling getCHero in NpcHandler, line 321")
    set YXu = false
    set GXu = false
    set gXu = SubStringBJ(aXu, $00000008, StringLength(aXu))
    if AFr(qXu) then
                    call dii(Iji("|cffff0000Load your Hero code before loading your Item Code.|r", "when calling unObfuscate in NpcHandler, line 330"), 5., qXu)
                    call Y2r(GetTriggeringTrigger())
                    set ASw = ASw - 1
                    return
    endif
    if not Kh then
                    call vwt(yA, dXu, "when calling add in NpcHandler, line 335")
                    set kXu = sA
                    set hXu = Cku("when calling alloc_CallbackSingle_doAfter_NpcHandler in NpcHandler, line 336")
                    call RUs(hXu)
                    set duw[hXu] = dXu
                    call Ybr(kXu, hXu, "when calling doAfter in NpcHandler, line 336")
    endif
    set TXu = gMw(qXu, gXu, "when calling saveLoad_IsLoad2Valid in NpcHandler, line 339")
    if (not TXu)and V2w(wi[dXu + 1], "#") then
                    call dSs(qXu, true)
                    set TXu = gMw(qXu, gXu, "when calling saveLoad_IsLoad2Valid in NpcHandler, line 342")
    endif
    call dSs(qXu, false)
    if not TXu then
                    call dii(Iji("|cffff0000Load Failed. Decoding error. Please recheck your code.|r", "when calling unObfuscate in NpcHandler, line 346"), 5., qXu)
                    call Y2r(GetTriggeringTrigger())
                    set ASw = ASw - 1
                    return
    endif
    if TXu and Lu == Zw then
                    set YXu = true
                    call dii(Iji("Loadcode is from a bugged version of Teve R4
To support fair-play and due to many more balance changes and bugfixxes, your levels might be reduced.", "when calling unObfuscate in NpcHandler, line 353"), 5., qXu)
    elseif TXu and Lu == Xw or Lu == Vw then
                    set GXu = true
    endif
    if not TXu then
                    call dii(Iji("|cffff0000Load Failed. Please recheck your code.|r", "when calling unObfuscate in NpcHandler, line 358"), 5., qXu)
    else
                    call dii(Iji("|cffffcc00Load Successful.|r", "when calling unObfuscate in NpcHandler, line 360"), 5., qXu)
                    call ForceAddPlayer(Vt, qXu)
                    set Uu = 1
                    call SetPlayerStateBJ(qXu, PLAYER_STATE_RESOURCE_GOLD, Zu[Uu])
                    set Uu = Uu + 1
                    if YXu and Zu[Uu] > 300 then
                        set Zu[Uu] = 300
                    endif
                    call SetPlayerStateBJ(qXu, PLAYER_STATE_RESOURCE_LUMBER, Zu[Uu])
                    set Uu = Uu + 1
                    set Zt[1 + dXu] = Zu[Uu]
                    set Ct = s3s(qXu, l2s(Iji("h02J", "when calling unObfuscate in NpcHandler, line 374"), "when calling fromRawCode in NpcHandler, line 374"))
                    set Wu = lVs(qXu, Condition(OWw))
                    call ForGroupBJ(Ct, lWw)
                    call ForGroupBJ(Wu, bWw)
                    set FXu = 0
                    loop
                        exitwhen FXu > 5
                        call RemoveItem(UnitItemInSlot(Bt[1 + dXu], FXu))
                        call RemoveItem(UnitItemInSlot(Nt[1 + dXu], FXu))
                        set FXu = FXu + 1
                    endloop
                    if GXu then
                        set Uu = Uu + 1
                        call ubt(RXu, Zu[Uu], "when calling critterTierFromSaveLoad in NpcHandler, line 386")
                    endif
                    call Res(Nt[1 + dXu], dXu, YXu, "when calling loadItemsFor in NpcHandler, line 390")
                    call Res(Bt[1 + dXu], dXu, YXu, "when calling loadItemsFor in NpcHandler, line 393")
                    call X8s(Nt[1 + dXu])
    endif
            elseif not(SubStringBJ(aXu, $00000001, $00000007) == "-load2 " and StringLength(aXu) > 7) then
    call dii(Iji("Load2 command is correct or code is missing / to short.", "when calling unObfuscate in NpcHandler, line 400"), 3., qXu)
            elseif IsPlayerInForce(qXu, Vt) then
    call dii(Iji("Load2 command has already been used with this hero unit.", "when calling unObfuscate in NpcHandler, line 402"), 3., qXu)
            elseif IsPlayerInForce(qXu, lt) then
    call dii(Iji("You cannot use load2 while fishing, in dungeons or when being resurrected.", "when calling unObfuscate in NpcHandler, line 404"), 3., qXu)
            elseif IsPlayerInForce(qXu, At) then
    call dii(Iji("You cannot use load2 while PVP is ongoing.", "when calling unObfuscate in NpcHandler, line 406"), 3., qXu)
            elseif IsPlayerInForce(qXu, ws) then
    call dii(Iji("You cannot use load2 in dungeons or when you are dead.", "when calling unObfuscate in NpcHandler, line 408"), 3., qXu)
            elseif GpS(yA, dXu, "when calling has in NpcHandler, line 409") then
    call dii(Iji("Please wait (up to 5.0 seconds) before loading again.", "when calling unObfuscate in NpcHandler, line 410"), 3., qXu)
            else
    call dii(Iji("Please wait before saving again.", "when calling unObfuscate in NpcHandler, line 412"), 3., qXu)
            endif
        else
            call dii(Iji("Due to previous actions, loading is currently disabled.", "when calling unObfuscate in NpcHandler, line 414"), 3., qXu)
        endif
    else
        call dii(Iji("You cannot use save/load/repick in dungeons!", "when calling unObfuscate in NpcHandler, line 416"), 3., qXu)
    endif
    call GVw(oA, dXu, - 1, "when calling put in NpcHandler, line 418")
    call Y2r(GetTriggeringTrigger())
    set ASw = ASw - 1
endfunction
function yuu takes string buu returns nothing
    set DSw[ASw] = buu
    set ASw = ASw + 1
    call SqS(GetTriggeringTrigger())
    call jXu(GetTriggerPlayer(), GetEventPlayerChatString(), "when calling saveLoad_Load2 in NpcHandler, line 304")
    set ASw = ASw - 1
endfunction
function UqS takes nothing returns nothing
    set ASw = 0
    call yuu("via function reference NpcHandler, line 64")
endfunction
function Urs takes nothing returns nothing
    call ForceAddPlayer(ys, GetOwningPlayer(GetKillingUnit()))
    call DisplayTextToForce(MwS(GetOwningPlayer(GetKillingUnit())), "I have killed Frostfang and obtained some of his meat and paw.")
endfunction
function Utu takes nothing returns nothing
    call ForceAddPlayer(Vr, GetOwningPlayer(GetKillingUnit()))
    call QuestSetDescription(Lr[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))], "I killed the old villager, Rufio. It wasn't hard...in fact, it was... pleasurable. Heh.")
    call DisplayTimedTextToForce(MwS(GetOwningPlayer(GetKillingUnit())), 5., "|cffffcc00You have killed Rufio|r.")
endfunction
function Zxs takes nothing returns boolean
    return UnitHasItemOfTypeBJ(GetTriggerUnit(), $49303057)
endfunction
function s_i takes nothing returns boolean
    return UnitHasItemOfTypeBJ(GetTriggerUnit(), $49303056)
endfunction
function Uxs takes nothing returns nothing
    if Zxs() then
        call ForceRemovePlayer(Kr, GetOwningPlayer(GetTriggerUnit()))
        call ForceRemovePlayer(Cr, GetOwningPlayer(GetTriggerUnit()))
        call PlaySoundBJ(ue)
        call SetHeroLevelBJ(GetTriggerUnit(), $00000001, false)
        call RemoveItem(GetItemOfTypeFromUnitBJ(GetTriggerUnit(), $49303057))
        call DisplayTextToForce(MwS(GetOwningPlayer(GetTriggerUnit())), "|cffffcc00Class Trainer|r : |cff87ceebCongratulations. I would not think the King would give you a letter of recommendation if he did not trust your abilities. Welcome to the Royal Army, Knight.")
        call ReplaceUnitBJ(GetTriggerUnit(), $48303132, $00000002)
        call SelectUnitForPlayerSingle(bj_lastReplacedUnit, GetOwningPlayer(GetTriggerUnit()))
        call DestroyQuest(Lr[1 + GetPlayerId(GetOwningPlayer(bj_lastReplacedUnit))])
        call SetHeroLevel(bj_lastReplacedUnit, $00000001, true)
        call UnitStripHeroLevel(bj_lastReplacedUnit, $00000001)
    endif
    if s_i() then
        call ForceRemovePlayer(Kr, GetOwningPlayer(GetTriggerUnit()))
        call ForceRemovePlayer(Cr, GetOwningPlayer(GetTriggerUnit()))
        call PlaySoundBJ(ue)
        call SetHeroLevelBJ(GetTriggerUnit(), $00000001, false)
        call RemoveItem(GetItemOfTypeFromUnitBJ(GetTriggerUnit(), $49303056))
        call DisplayTextToForce(MwS(GetOwningPlayer(GetTriggerUnit())), "|cffffcc00Class Trainer|r : |cff87ceebCongratulations; Emry must really think highly of you. I salute you, Crusader! You outrank me now...well done.")
        call ReplaceUnitBJ(GetTriggerUnit(), $48303133, $00000002)
        call SelectUnitForPlayerSingle(bj_lastReplacedUnit, GetOwningPlayer(GetTriggerUnit()))
        call DestroyQuest(Lr[1 + GetPlayerId(GetOwningPlayer(bj_lastReplacedUnit))])
        call SetHeroLevel(bj_lastReplacedUnit, $00000001, true)
        call UnitStripHeroLevel(bj_lastReplacedUnit, $00000001)
    endif
endfunction
function Uyi takes nothing returns nothing
    call PanCameraToTimedLocForPlayer(GetEnumPlayer(), wo[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))], 0.)
endfunction
function SQt takes nothing returns boolean
    return UnitInventoryCount(GetTriggerUnit()) != 6
endfunction
function V0s takes nothing returns nothing
    if SQt() then
        call PlaySoundBJ(ce)
        call ForceAddPlayer(Cr, GetOwningPlayer(GetTriggerUnit()))
        call DisplayTextToForce(MwS(GetOwningPlayer(GetTriggerUnit())), "|cffffcc00King Foltest|r : |cff87ceebAh, please dispense with the formalities, Knight. I have heard of your deeds throughout the land; ridding the land of the wicked monsters and making Silvasia a much safer place. What I offer to you now is a chance to join the ranks of my Royal Army and become an Imperial Knight. Here, take this letter and give it to your Class Trainer. You deserve it.")
        set lw[GetPlayerId(GetOwningPlayer(GetTriggerUnit()))] = 1227894871
        call TriggerExecute(ow)
        call QuestSetDescription(Lr[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))], "I got a recommendation letter from the King himself. What an honor.")
    else
        call PlaySoundBJ(oe)
        call DisplayTimedTextToForce(MwS(GetOwningPlayer(GetTriggerUnit())), 7., "|cffff0000Inventory full! Cannot receive recommendation!|r")
    endif
endfunction
function V1w takes nothing returns nothing
    call ForceAddPlayer(rt, GetOwningPlayer(GetTriggerUnit()))
    call DisplayTextToForce(MwS(GetOwningPlayer(GetTriggerUnit())), "|cffffcc00Horazon|r : |cff87ceebYou have come, just as I knew you would. In order to master control over the elements and summon them at your very call, you must learn to be able to tame the storms. Go to the Naga Dungeon, kill the Mistress of the Tides and return to me.")
    call PlaySoundBJ(Se)
    call T_i(GetOwningPlayer(GetTriggerUnit()), $00000000, "4th Job Advancement Quest", "I have to kill the Mistress of the Tides. I don't know what it has to do with taming the storms, though.", "ReplaceableTextures\\PassiveButtons\\PASBTNGenericSpellImmunity.blp")
    set st[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))] = bj_lastCreatedQuest
    set kt[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))] = 0
endfunction
function Qhu takes string vhu returns integer
    local integer mhu
    set DSw[ASw] = vhu
    set ASw = ASw + 1
    if NX == 0 then
        if MX < 32768 then
            set MX = MX + 1
            set mhu = MX
            set wC[mhu] = 1039
        else
            call tNr("Out of memory: Could not create CallbackSingle_doAfter_addAction_doAfter_FateDestinyUnlocker.", "when calling error in FateDestinyUnlocker, line 794")
            set mhu = 0
        endif
    else
        set NX = NX - 1
        set mhu = BX[NX]
        set wC[mhu] = 1039
    endif
    set ASw = ASw - 1
    return mhu
endfunction
function djr takes string qjr returns nothing
    local trigger ajr
    local integer njr
    set DSw[ASw] = qjr
    set ASw = ASw + 1
    call dii(Iji("Have you heard of that lucky fellow? She got a gift from the gods! They really want to see her growing...", "when calling unObfuscate in FateDestinyUnlocker, line 791"), 8., eDs(GetTriggerUnit()))
    set ajr = GetTriggeringTrigger()
    call SqS(ajr)
    set njr = Qhu("when calling alloc_CallbackSingle_doAfter_addAction_doAfter_FateDestinyUnlocker in FateDestinyUnlocker, line 794")
    call RUs(njr)
    set A7[njr] = ajr
    call Ybr(30., njr, "when calling doAfter in FateDestinyUnlocker, line 794")
    set ASw = ASw - 1
    set ajr = null
endfunction
function V3w takes nothing returns nothing
    set ASw = 0
    call djr("via function reference FateDestinyUnlocker, line 790")
endfunction
function V7i takes nothing returns nothing
    call SetCameraTargetControllerNoZForPlayer(GetOwningPlayer(GetEnumUnit()), GetEnumUnit(), 0., 0., false)
endfunction
function V7w takes nothing returns nothing
    call TimerDialogDisplayForPlayerBJ(true, fi, GetEnumPlayer())
endfunction
function VCr takes nothing returns nothing
    set ASw = 0
    call uhs("via function reference JobAdvancementQuestHandler, line 1183")
endfunction
function VCu takes nothing returns nothing
    call QuestMessageBJ(MwS(GetOwningPlayer(GetKillingUnit())), $00000002, "|cffffcc00I have killed the Lord of Puzzles and received his bony hand|r..")
    call ForceAddPlayer(Vr, GetOwningPlayer(GetKillingUnit()))
    call QuestSetDescription(Lr[1 + GetPlayerId(GetOwningPlayer(GetKillingUnit()))], "I should get back to Luna and tell her I have killed the Lord of Puzzles.")
endfunction
function VEt takes nothing returns nothing
    call TriggerExecute(pR)
endfunction
function VKr takes nothing returns boolean
    return GetUnitTypeId(GetTriggerUnit()) == 1211117637 and GetUnitTypeId(GetOrderTargetUnit()) == 1747988816 and IsPlayerInForce(GetOwningPlayer(GetTriggerUnit()), js) and IsPlayerInForce(GetOwningPlayer(GetTriggerUnit()), Vr) == false and vs[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))] == 0 and IsUnitInGroup(GetTriggerUnit(), kpu(300., GetUnitLoc(GetOrderTargetUnit())))
endfunction
function VNw takes nothing returns nothing
    call SetUnitLifePercentBJ(GetEnumUnit(), 100.)
endfunction
function nju takes string aju returns boolean
    set DSw[ASw] = aju
    set ASw = ASw + 1
    set qD = jts("when calling new_HashMap in PlayerRegistry, line 19")
    set ASw = ASw - 1
    return true
endfunction
function VPi takes nothing returns boolean
    set ASw = 0
    return nju("via function reference PlayerRegistry, line 12")
endfunction
function Fbi takes nothing returns nothing
    set JH[$00000000] = ""
    set JH[$00000001] = ""
    set JH[$00000002] = ""
    set JH[$00000003] = ""
    set JH[$00000004] = ""
    set JH[$00000005] = ""
    set JH[$00000006] = ""
    set JH[$00000007] = ""
    set JH[$00000008] = ""
    set JH[$00000009] = "\t"
    set JH[$0000000A] = "\n"
    set JH[$0000000B] = ""
    set JH[$0000000C] = ""
    set JH[$0000000D] = "\r"
    set JH[$0000000E] = ""
    set JH[$0000000F] = ""
    set JH[$00000010] = ""
    set JH[$00000011] = ""
    set JH[$00000012] = ""
    set JH[$00000013] = ""
    set JH[$00000014] = ""
    set JH[$00000015] = ""
    set JH[$00000016] = ""
    set JH[$00000017] = ""
    set JH[$00000018] = ""
    set JH[$00000019] = ""
    set JH[$0000001A] = ""
    set JH[$0000001B] = ""
    set JH[$0000001C] = ""
    set JH[$0000001D] = ""
    set JH[$0000001E] = ""
    set JH[$0000001F] = ""
    set JH[$00000020] = " "
    set JH[$00000021] = "!"
    set JH[$00000022] = "\""
    set JH[$00000023] = "#"
    set JH[$00000024] = "$"
    set JH[$00000025] = "%"
    set JH[$00000026] = "&"
    set JH[$00000027] = "'"
    set JH[$00000028] = "("
    set JH[$00000029] = ")"
    set JH[$0000002A] = "*"
    set JH[$0000002B] = "+"
    set JH[$0000002C] = ","
    set JH[$0000002D] = "-"
    set JH[$0000002E] = "."
    set JH[$0000002F] = "/"
    set JH[$00000030] = "0"
    set JH[$00000031] = "1"
    set JH[$00000032] = "2"
    set JH[$00000033] = "3"
    set JH[$00000034] = "4"
    set JH[$00000035] = "5"
    set JH[$00000036] = "6"
    set JH[$00000037] = "7"
    set JH[$00000038] = "8"
    set JH[$00000039] = "9"
    set JH[$0000003A] = ":"
    set JH[$0000003B] = ";"
    set JH[$0000003C] = "<"
    set JH[$0000003D] = "="
    set JH[$0000003E] = ">"
    set JH[$0000003F] = "?"
    set JH[$00000040] = "@"
    set JH[$00000041] = "A"
    set JH[$00000042] = "B"
    set JH[$00000043] = "C"
    set JH[$00000044] = "D"
    set JH[$00000045] = "E"
    set JH[$00000046] = "F"
    set JH[$00000047] = "G"
    set JH[$00000048] = "H"
    set JH[$00000049] = "I"
    set JH[$0000004A] = "J"
    set JH[$0000004B] = "K"
    set JH[$0000004C] = "L"
    set JH[$0000004D] = "M"
    set JH[$0000004E] = "N"
    set JH[$0000004F] = "O"
    set JH[$00000050] = "P"
    set JH[$00000051] = "Q"
    set JH[$00000052] = "R"
    set JH[$00000053] = "S"
    set JH[$00000054] = "T"
    set JH[$00000055] = "U"
    set JH[$00000056] = "V"
    set JH[$00000057] = "W"
    set JH[$00000058] = "X"
    set JH[$00000059] = "Y"
    set JH[$0000005A] = "Z"
    set JH[$0000005B] = "["
    set JH[$0000005C] = "\\"
    set JH[$0000005D] = "]"
    set JH[$0000005E] = "^"
    set JH[$0000005F] = "_"
    set JH[$00000060] = "`"
    set JH[$00000061] = "a"
    set JH[$00000062] = "b"
    set JH[$00000063] = "c"
    set JH[$00000064] = "d"
    set JH[$00000065] = "e"
    set JH[$00000066] = "f"
    set JH[$00000067] = "g"
    set JH[$00000068] = "h"
    set JH[$00000069] = "i"
    set JH[$0000006A] = "j"
    set JH[$0000006B] = "k"
    set JH[$0000006C] = "l"
    set JH[$0000006D] = "m"
    set JH[$0000006E] = "n"
    set JH[$0000006F] = "o"
    set JH[$00000070] = "p"
    set JH[$00000071] = "q"
    set JH[$00000072] = "r"
    set JH[$00000073] = "s"
    set JH[$00000074] = "t"
    set JH[$00000075] = "u"
    set JH[$00000076] = "v"
    set JH[$00000077] = "w"
    set JH[$00000078] = "x"
    set JH[$00000079] = "y"
    set JH[$0000007A] = "z"
    set JH[$0000007B] = "{"
    set JH[$0000007C] = "|"
    set JH[$0000007D] = "}"
    set JH[$0000007E] = "~"
    set JH[$0000007F] = ""
endfunction
function iKs takes nothing returns nothing
endfunction
function tEi takes string sEi returns string
    return StringCase(sEi, true)
endfunction
function lPr takes nothing returns nothing
    local integer oPr = 0
    local integer OPr = KH
    loop
        exitwhen oPr > OPr
        if tEi(JH[oPr]) == JH[oPr]then
            call StringHash(JH[oPr])
        endif
        set oPr = oPr + 1
    endloop
endfunction
function initialize_4254 takes nothing returns nothing
    call Fbi()
    call lPr()
    call iKs()
endfunction
function RFt takes string fFt returns boolean
    set DSw[ASw] = fFt
    set ASw = ASw + 1
    set KH = 126 + 1
    call initialize_4254()
    call err("", "when calling stringToIndex in StringUtils, line 187")
    set ASw = ASw - 1
    return true
endfunction
function VPw takes nothing returns boolean
    set ASw = 0
    return RFt("via function reference StringUtils, line 1")
endfunction
function Pht takes nothing returns boolean
    return GetPlayerState(GetOwningPlayer(GetTriggerUnit()), PLAYER_STATE_RESOURCE_FOOD_USED) < 100
endfunction
function VRu takes nothing returns nothing
    if Pht() then
        call AdjustPlayerStateBJ($00000001, GetOwningPlayer(GetTriggerUnit()), PLAYER_STATE_RESOURCE_FOOD_USED)
    endif
endfunction
function cGS takes nothing returns boolean
    return gr[1 + GetPlayerId(GetOwningPlayer(GetKillingUnit()))] >= 5
endfunction
function VZu takes nothing returns nothing
    set gr[1 + GetPlayerId(GetOwningPlayer(GetKillingUnit()))] = gr[1 + GetPlayerId(GetOwningPlayer(GetKillingUnit()))] + 1
    if cGS() then
        call QuestMessageBJ(MwS(GetOwningPlayer(GetKillingUnit())), $00000002, "|cffffcc00Wolves Requirement Completed|r.")
        call ForceAddPlayer(Fr, GetOwningPlayer(GetKillingUnit()))
    else
        call QuestMessageBJ(MwS(GetOwningPlayer(GetKillingUnit())), $00000001, I2S(gr[1 + GetPlayerId(GetOwningPlayer(GetKillingUnit()))]) + " Wolf/Wolves killed.")
    endif
endfunction
function V_i takes nothing returns nothing
    call ForceAddPlayer(Kr, GetOwningPlayer(GetTriggerUnit()))
    call DisplayTextToForce(MwS(GetOwningPlayer(GetTriggerUnit())), "|cffffcc00Class Trainer|r : |cff87ceebHmm, I see you've gotten stronger...way stronger than when I first met you. This is good. However, I am afraid I cannot advance you anymore. You need a letter of recommendation to prove that you are worthy to join the higher ranks...and now it is time. You have to choose - the ways of the assassin or the Stalker. Seek out the loner Assassin Jim if you wish to be an assassin - he's usually in the woods training. Or you can choose to find the Stalker Raynor; he has a secret base somewhere in the Forgotten Woods. Find them; complete their tasks, and bring back to me a letter of recommendation. Choose one path, and never look back again for you can no longer choose the other. May Shadow Hide You.")
    call PlaySoundBJ(Se)
    call T_i(GetOwningPlayer(GetTriggerUnit()), $00000000, "3rd Job Advancement Quest", "I need to choose - the fast hit-and-strike ways of the assassin or the silent stealthy arts of the Stalker.\n-Assassin Jim can be found in the woods. Most likely where the bandits are.\n-Stalker Raynor has a secret base somewhere in the Forgotten Woods.", "ReplaceableTextures\\CommandButtons\\BTNSell.blp")
    set Lr[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))] = bj_lastCreatedQuest
    set ds[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))] = 0
endfunction
function V_s takes nothing returns boolean
    return IsUnitType(GetFilterUnit(), UNIT_TYPE_HERO) != false
endfunction
function QYs takes string jYs returns nothing
    local unit xYs
    local integer vYs
    local integer mYs
    set DSw[ASw] = jYs
    set ASw = ASw + 1
    set xYs = GetLeavingUnit()
    set vYs = hgr(eDs(xYs))
    if GpS(gQ, vYs, "when calling has in DungeonCmds, line 935") then
        set mYs = tOS(eDs(xYs), "when calling getCustomPlayer in DungeonCmds, line 936")
        if hqs(xMi(mYs, "when calling getCHero in DungeonCmds, line 937"), "when calling getHero in DungeonCmds, line 937") == xYs then
            call EnumItemsInRect(Bx[vYs], null, umw)
        endif
    endif
    set ASw = ASw - 1
    set xYs = null
endfunction
function Vcs takes nothing returns nothing
    set ASw = 0
    call QYs("via function reference DungeonCmds, line 931")
endfunction
function Vcu takes nothing returns nothing
    call RemoveUnit(GetEnumUnit())
endfunction
function Vht takes nothing returns boolean
    return GetSpellAbilityId() == 1093678160
endfunction
function Vhu takes nothing returns boolean
    return IsUnitType(GetTriggerUnit(), UNIT_TYPE_HERO) != false
endfunction
function Bfi takes string Vfi returns nothing
    set DSw[ASw] = Vfi
    set ASw = ASw + 1
    if vR != null then
        call HLr(vR, "when calling release in Imp3DragonFortress, line 575")
    endif
    call GVw(eW, $00000002, $00000000, "when calling put in Imp3DragonFortress, line 577")
    set vR = ZPs("when calling getTimer in Imp3DragonFortress, line 578")
    call nnr(vR, GetRandomReal(1.5, 3.5), tQw)
    set ASw = ASw - 1
endfunction
function Y5u takes string R5u returns integer
    local integer T5u
    set DSw[ASw] = R5u
    set ASw = ASw + 1
    if PC == 0 then
        if AC < 32768 then
            set AC = AC + 1
            set T5u = AC
            set DC[T5u] = 682
        else
            call tNr("Out of memory: Could not create CallbackPeriodic_doPeriodically_Imp3DragonFortress.", "when calling error in Imp3DragonFortress, line 1627")
            set T5u = 0
        endif
    else
        set PC = PC - 1
        set T5u = IC[PC]
        set DC[T5u] = 682
    endif
    set ASw = ASw - 1
    return T5u
endfunction
function GMt takes string TMt returns nothing
    local integer YMt
    set DSw[ASw] = TMt
    set ASw = ASw + 1
    set YMt = Y5u("when calling alloc_CallbackPeriodic_doPeriodically_Imp3DragonFortress in Imp3DragonFortress, line 1627")
    call kVu(YMt)
    call wcs(.2, YMt, "when calling doPeriodically in Imp3DragonFortress, line 1627")
    set ASw = ASw - 1
endfunction
function UWu takes string EWu returns integer
    local integer ZWu
    set DSw[ASw] = EWu
    set ASw = ASw + 1
    if NX == 0 then
        if MX < 32768 then
            set MX = MX + 1
            set ZWu = MX
            set wC[ZWu] = 1006
        else
            call tNr("Out of memory: Could not create CallbackSingle_doAfter_addAction_Imp3DragonFortress.", "when calling error in Imp3DragonFortress, line 1496")
            set ZWu = 0
        endif
    else
        set NX = NX - 1
        set ZWu = BX[NX]
        set wC[ZWu] = 1006
    endif
    set ASw = ASw - 1
    return ZWu
endfunction
function X7w takes string L7w returns nothing
    set DSw[ASw] = L7w
    set ASw = ASw + 1
    if gR != null then
        call HLr(gR, "when calling release in Imp3DragonFortress, line 1614")
    endif
    set gR = ZPs("when calling getTimer in Imp3DragonFortress, line 1615")
    call nnr(gR, .1, cQw)
    if FR != null then
        call HLr(FR, "when calling release in Imp3DragonFortress, line 1619")
    endif
    set FR = ZPs("when calling getTimer in Imp3DragonFortress, line 1620")
    call AVt("when calling imp3MazeFireboltSpawn in Imp3DragonFortress, line 1621")
    call nnr(FR, 4., oQw)
    call EnableTrigger(hR)
    set ASw = ASw - 1
endfunction
function LEu takes string JEu returns integer
    local integer KEu
    set DSw[ASw] = JEu
    set ASw = ASw + 1
    if NX == 0 then
        if MX < 32768 then
            set MX = MX + 1
            set KEu = MX
            set wC[KEu] = 861
        else
            call tNr("Out of memory: Could not create CallbackSingle_doAfter_Imp3DragonFortress.", "when calling error in Imp3DragonFortress, line 1148")
            set KEu = 0
        endif
    else
        set NX = NX - 1
        set KEu = BX[NX]
        set wC[KEu] = 861
    endif
    set ASw = ASw - 1
    return KEu
endfunction
function LUs takes string JUs returns integer
    local integer KUs
    set DSw[ASw] = JUs
    set ASw = ASw + 1
    if NX == 0 then
        if MX < 32768 then
            set MX = MX + 1
            set KUs = MX
            set wC[KUs] = 862
        else
            call tNr("Out of memory: Could not create CallbackSingle_doAfter_Imp3DragonFortress.", "when calling error in Imp3DragonFortress, line 1170")
            set KUs = 0
        endif
    else
        set NX = NX - 1
        set KUs = BX[NX]
        set wC[KUs] = 862
    endif
    set ASw = ASw - 1
    return KUs
endfunction
function Y0i takes string f0i returns nothing
    local integer R0i
    local integer T0i
    set DSw[ASw] = f0i
    set ASw = ASw + 1
    call lTi(qG, YF)
    call lTi(aG, YF)
    call lTi(nG, YF)
    call lTi(dG, YF)
    call lTi(fG, YF)
    call lTi(eG, YF)
    call lTi(RG, YF)
    call lTi(TG, YF)
    call lTi(YG, YF)
    call lTi(OG, YF)
    call lTi(gG, YF)
    call lTi(GG, YF)
    call lTi(bG, YF)
    call lTi(lG, YF)
    call lTi(pG, YF)
    call lTi(yG, YF)
    set R0i = LEu("when calling alloc_CallbackSingle_doAfter_Imp3DragonFortress in Imp3DragonFortress, line 1148")
    call RUs(R0i)
    call Ybr(.3, R0i, "when calling doAfter in Imp3DragonFortress, line 1148")
    set T0i = LUs("when calling alloc_CallbackSingle_doAfter_Imp3DragonFortress in Imp3DragonFortress, line 1170")
    call RUs(T0i)
    call Ybr(.6, T0i, "when calling doAfter in Imp3DragonFortress, line 1170")
    set ASw = ASw - 1
endfunction
function q5s takes string e5s returns nothing
    set DSw[ASw] = e5s
    set ASw = ASw + 1
    if xR != null then
        call HLr(xR, "when calling release in Imp3DragonFortress, line 567")
    endif
    call GVw(eW, $00000001, $00000000, "when calling put in Imp3DragonFortress, line 569")
    set xR = ZPs("when calling getTimer in Imp3DragonFortress, line 570")
    call nnr(xR, GetRandomReal(1.5, 4.), sQw)
    set ASw = ASw - 1
endfunction
function NHu takes string AHu returns nothing
    local player DHu
    local integer HHu
    local integer JHu
    local unit KHu
    local string LHu
    local integer XHu
    local integer CHu
    local real VHu
    local real BHu
    set DSw[ASw] = AHu
    set ASw = ASw + 1
    set DHu = GetTriggerPlayer()
    set HHu = hgr(DHu)
    set JHu = xus(HHu, "when calling getCustomPlayer in Imp3DragonFortress, line 1483")
    set KHu = hqs(xMi(JHu, "when calling getCHero in Imp3DragonFortress, line 1484"), "when calling getHero in Imp3DragonFortress, line 1484")
    set LHu = GetEventPlayerChatString()
    if wds(gQ, "when calling size in Imp3DragonFortress, line 1487") <= 5 and hu[HHu] == false and(not Vgt(JHu, "when calling getCommandsDisabled in Imp3DragonFortress, line 1487")) then
        if hPs(fc[$0000000C]) == 0 then
            if LHu == "-tah" or LHu == "-testarrow" then
    call DDr(fc[$0000000C], KHu)
    call xxr(Rc[$0000000C], eDs(KHu))
    set EW = HHu
    call cMi(KHu, KHu, "when calling fusionHydraCastSlaveDodge in Imp3DragonFortress, line 1494")
    set XHu = UWu("when calling alloc_CallbackSingle_doAfter_addAction_Imp3DragonFortress in Imp3DragonFortress, line 1496")
    call RUs(XHu)
    set m9[XHu] = DHu
    set Q9[XHu] = KHu
    call Ybr(5., XHu, "when calling doAfter in Imp3DragonFortress, line 1496")
            elseif EW ==- 1 then
    if boS(KHu) >= 200 then
                    set CHu = ifi(Mes(LHu, $00000006))
                    if CHu >= 1 and CHu <= 4 and CAw(LHu, $00000000, $00000005) == "-maze" then
                        set VHu = ANw(KHu)
                        set BHu = XSw
                        set ZW = VHu
                        set UW = BHu
                        call X7w("when calling initTrapChecks in Imp3DragonFortress, line 1507")
                        call Y0i("when calling imp3MazeReInitMoveUnits in Imp3DragonFortress, line 1508")
                        call OLt("when calling imp3SpikesRunLoopRestart0 in Imp3DragonFortress, line 1509")
                        call q5s("when calling imp3SpikesRunLoopRestart1 in Imp3DragonFortress, line 1510")
                        call Bfi("when calling imp3SpikesRunLoopRestart2 in Imp3DragonFortress, line 1511")
                        call GMt("when calling imp3InitCleanup in Imp3DragonFortress, line 1513")
                        set EW = HHu
                        call DDr(fc[$0000000C], KHu)
                        call xxr(Rc[$0000000C], eDs(KHu))
                        call Cls(KHu, Snu(wps(DW, CHu, "when calling get in Imp3DragonFortress, line 1517"), "when calling rectFromIndex in Imp3DragonFortress, line 1517"), "when calling imp3InitPlayerLifesAndTimer in Imp3DragonFortress, line 1517")
                        call GZs(JHu, true, "when calling setCommandsDisabled in Imp3DragonFortress, line 1518")
                    endif
    else
                    call dii("You can enter maze only when having 200+ level!", 5., DHu)
    endif
            else
    call dii("Maze is in progress!", 5., DHu)
            endif
        else
            call dii("Dungeon is in progress!", 5., DHu)
        endif
    else
        call dii("Too many players ingame! Testing -tah/-maze works only in lobbies with 5 or less players!", 5., DHu)
    endif
    set ASw = ASw - 1
    set DHu = null
    set KHu = null
endfunction
function Vii takes nothing returns nothing
    set ASw = 0
    call NHu("via function reference Imp3DragonFortress, line 1480")
endfunction
function Vjt takes nothing returns nothing
    set Nt[1 + GetPlayerId(GetTriggerPlayer())] = GetEnumUnit()
endfunction
function Vku takes nothing returns nothing
    call ForceAddPlayer(gs, GetOwningPlayer(GetTriggerUnit()))
    call ForceAddPlayer(Cr, GetOwningPlayer(GetTriggerUnit()))
    call DisplayTextToForce(MwS(GetOwningPlayer(GetTriggerUnit())), "|cffffcc00Naisha|r : |cff87ceebAh, you have arrived for a letter of recommendation, isn't that right? Very well, it appears I have a small task for you. Near to us is a mountain dungeon. I want you to enter it and slay the centaurs in there. Kill 15 of them and you shall receive my recommendation.")
    call QuestSetDescription(Lr[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))], "I need to kill the centaurs inhabiting the Mountain Dungeon. Any of them will do, but I need to kill at least 15 of them.")
endfunction
function Vni takes nothing returns boolean
    return GetUnitTypeId(GetTriggerUnit()) == 1211117625 and GetOrderTargetUnit() == rG and GetHeroLevel(GetTriggerUnit()) >= 40 and IsUnitInGroup(GetTriggerUnit(), kpu(300., GetUnitLoc(GetOrderTargetUnit())))
endfunction
function gsi takes integer Gsi returns integer
    if Gsi >= 0 and Gsi <= 5 then
        return 1
    elseif Gsi >= 6 and Gsi <= 10 then
        return 2
    elseif Gsi >= 11 and Gsi <= 13 then
        return 3
    elseif Gsi >= 14 and Gsi <= 16 then
        return 4
    elseif Gsi >= 17 and Gsi <= 19 then
        return 5
    else
        return 0
    endif
endfunction
function GVi takes string qVi returns nothing
    local string aVi
    local player nVi
    local integer dVi
    local integer fVi
    local integer RVi
    local integer TVi
    local integer YVi
    set DSw[ASw] = qVi
    set ASw = ASw + 1
    set aVi = GetEventPlayerChatString()
    set nVi = GetTriggerPlayer()
    set dVi = hgr(nVi)
    set fVi = xus(dVi, "when calling getCustomPlayer in Critters, line 258")
    set RVi = xMi(fVi, "when calling getCHero in Critters, line 259")
    if aVi != Iji("-critter help", "when calling unObfuscate in Critters, line 260") then
        set TVi = ifi(SubString(aVi, $00000009, StringLength(aVi)))
        set YVi = gsi(TVi)
        if Mau(RVi, YVi, "when calling hasCritterTierUnlocked in Critters, line 264") and(not(YVi == 0)) then
            call i6t(RVi, TVi, "when calling applyCritterSkinScale in Critters, line 265")
        elseif YVi == 0 then
            call dii(Iji("Please select a valid Critter Id see "-critter help".", "when calling unObfuscate in Critters, line 267"), 5., nVi)
        else
            call dii(Iji("You must unlock Critter Tier ", "when calling unObfuscate in Critters, line 269") + rcS(YVi) + Iji(" in order to use Critter ", "when calling unObfuscate in Critters, line 269") + nPr(C_r(ZF, TVi, "when calling get in Critters, line 269"), "when calling stringFromIndex in Critters, line 269") + ".", 5., nVi)
        endif
    endif
    set ASw = ASw - 1
    set nVi = null
endfunction
function Vnu takes nothing returns nothing
    set ASw = 0
    call GVi("via function reference Critters, line 254")
endfunction
function NLw takes nothing returns boolean
    return GetUnitTypeId(GetEnumUnit()) != 1429221454 and GetUnitTypeId(GetEnumUnit()) != 1429221455
endfunction
function gNt takes nothing returns boolean
    return GetUnitTypeId(GetEnumUnit()) == 1429221455 and dO[$00000002] == 2
endfunction
function hus takes nothing returns boolean
    return GetPlayerController(GetOwningPlayer(GetEnumUnit())) == MAP_CONTROL_USER
endfunction
function wur takes nothing returns boolean
    return GetUnitTypeId(GetEnumUnit()) == 1429221454 and dO[$00000001] == 2
endfunction
function Vsi takes nothing returns nothing
    if lir() then
        if NLw() then
            call SetUnitInvulnerable(GetEnumUnit(), false)
            call PauseUnit(GetEnumUnit(), false)
        else
            if wur() then
    call SetUnitInvulnerable(GetEnumUnit(), false)
    call PauseUnit(GetEnumUnit(), false)
            else
    call PauseUnit(GetEnumUnit(), false)
            endif
            if gNt() then
    call SetUnitInvulnerable(GetEnumUnit(), false)
    call PauseUnit(GetEnumUnit(), false)
            else
    call PauseUnit(GetEnumUnit(), false)
            endif
        endif
    endif
    if not m9r(GetEnumUnit()) then
        if lir() then
            if hus() then
    call UnitDamageTargetBJ(GetTriggerUnit(), GetEnumUnit(), 6667. * I2R(GetUnitAbilityLevelSwapped($41303451, GetTriggerUnit())), ATTACK_TYPE_CHAOS, DAMAGE_TYPE_ENHANCED)
            else
    call UnitDamageTargetBJ(GetTriggerUnit(), GetEnumUnit(), 6667. * I2R(GetUnitAbilityLevelSwapped($41303451, GetTriggerUnit())), ATTACK_TYPE_CHAOS, DAMAGE_TYPE_UNIVERSAL)
            endif
        else
            call CreateNUnitsAtLoc($00000001, $68303437, GetOwningPlayer(GetTriggerUnit()), Vs[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))], bj_UNIT_FACING)
            call UnitDamageTargetBJ(GetTriggerUnit(), GetEnumUnit(), 4000000., ATTACK_TYPE_CHAOS, DAMAGE_TYPE_NORMAL)
        endif
    endif
endfunction
function Vsr takes nothing returns boolean
    return IsPlayerInForce(GetTriggerPlayer(), lt) == false and IsPlayerInForce(GetTriggerPlayer(), Kt) == false and IsPlayerInForce(GetTriggerPlayer(), Gi) == false and SubStringBJ(GetEventPlayerChatString(), $00000001, $00000005) == GetEventPlayerChatStringMatched() and StringLength(GetEventPlayerChatString()) > 5 and StringLength(GetEventPlayerChatString()) <= 7 and SubStringBJ(GetEventPlayerChatString(), $00000006, StringLength(GetEventPlayerChatString())) != I2S(1 + GetPlayerId(GetTriggerPlayer())) and SubStringBJ(GetEventPlayerChatString(), $00000006, StringLength(GetEventPlayerChatString())) != "0" and IsPlayerInForce(Player(- 1 + S2I(SubStringBJ(GetEventPlayerChatString(), $00000006, StringLength(GetEventPlayerChatString())))), lt) == false and IsPlayerInForce(Player(- 1 + S2I(SubStringBJ(GetEventPlayerChatString(), $00000006, StringLength(GetEventPlayerChatString())))), Kt) == false and IsPlayerInForce(GetTriggerPlayer(), iO) == false
endfunction
function Vur takes nothing returns boolean
    return GetOrderTargetUnit() == wG and IsUnitInGroup(GetTriggerUnit(), kpu(300., GetUnitLoc(GetOrderTargetUnit())))
endfunction
function QAt takes integer kAt, integer jAt, integer xAt returns integer
    local integer vAt = eI
    local integer mAt
    if kAt > vAt then
        set mAt = kAt
    else
        set mAt = vAt
    endif
    set vAt = mAt
    if jAt > vAt then
        set mAt = jAt
    else
        set mAt = vAt
    endif
    set vAt = mAt
    if xAt > vAt then
        set mAt = xAt
    else
        set mAt = vAt
    endif
    set vAt = mAt
    return vAt
endfunction
function Guu takes string fuu returns nothing
    local unit Ruu
    local integer Tuu
    local integer Yuu
    set DSw[ASw] = fuu
    set ASw = ASw + 1
    set Ruu = GetKillingUnit()
    if GpS(gQ, hgr(eDs(Ruu)), "when calling has in JobAdvancementQuestHandler, line 761") then
        set Tuu = QAt(JHt(Ruu, true), Q7t(Ruu, true), JHt(Ruu, true))
        set Yuu = QAt(JHt(Ruu, false), Q7t(Ruu, false), JHt(Ruu, false))
        if Udi(Ruu) >= 512 * 1024 or Yuu >= 3 * 4 * 1500 or Tuu >= 1024 * 19 or boS(Ruu) > 302 or t3i(Ruu) > 512 * 1024 then
            call uFr(Ruu)
            call dii(Iji("Your actions seems to come from hacking! You are a fool!", "when calling unObfuscate in JobAdvancementQuestHandler, line 766"), 5., eDs(Ruu))
        endif
    endif
    set ASw = ASw - 1
    set Ruu = null
endfunction
function W2r takes nothing returns nothing
    set ASw = 0
    call Guu("via function reference JobAdvancementQuestHandler, line 1216")
endfunction
function W3s takes nothing returns boolean
    return (GetItemTypeId(GetManipulatedItem()) == 1227895097 and IsUnitType(GetTriggerUnit(), UNIT_TYPE_HERO) and GetHeroLevel(GetTriggerUnit()) <= 15 and IsPlayerInForce(GetOwningPlayer(GetTriggerUnit()), IS[$00000002]) == false) != false
endfunction
function iDi takes item tDi returns boolean
    return IsItemVisible(tDi)
endfunction
function W3w takes nothing returns nothing
    if iDi(GetEnumItem()) then
        set bP[yP] = GetEnumItem()
        call jXt(bP[yP], false)
        set yP = yP + 1
    endif
endfunction
function W4r takes nothing returns nothing
    call RemoveItem(GetManipulatedItem())
    call ForceAddPlayer(IS[$00000005], GetOwningPlayer(GetTriggerUnit()))
    call PlaySoundAtPointBJ(be, 100., GetUnitLoc(GetTriggerUnit()), 0.)
    call DisplayTextToForce(MwS(GetOwningPlayer(GetTriggerUnit())), "|cffffcc00Skypper|r : I do not need to remind you how serious this matter is. The traveller wants absolute revenge, and he doesn't care how you do it. Kill 15 Bandits and grab their heads; the bloodier the better but not too gruesome until unrecognizable.")
    call T_i(GetOwningPlayer(GetTriggerUnit()), $00000000, "No Rest For the Wicked", "I must kill 15 Bandits and grab their heads.", "ReplaceableTextures\\CommandButtons\\BTNSacrificialSkull.blp")
    set cs[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))] = bj_lastCreatedQuest
endfunction
function W5w takes nothing returns nothing
    call ForceRemovePlayer(rt, GetOwningPlayer(GetTriggerUnit()))
    call ForceRemovePlayer(ii, GetOwningPlayer(GetTriggerUnit()))
    call DisplayTextToForce(MwS(GetOwningPlayer(GetTriggerUnit())), "|cffffcc00Vanessa|r : |cff87ceebGood, you show promise, young one. Very well, I shall teach you the greatest finisher moves ever known.")
    call DestroyQuest(st[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))])
    set st[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))] = null
    call SetHeroLevelBJ(GetTriggerUnit(), $00000001, false)
    call ReplaceUnitBJ(GetTriggerUnit(), $4830324D, $00000002)
    call SelectUnitForPlayerSingle(bj_lastReplacedUnit, GetOwningPlayer(GetTriggerUnit()))
    call SetHeroLevel(bj_lastReplacedUnit, $00000001, true)
    call UnitStripHeroLevel(bj_lastReplacedUnit, $00000001)
endfunction
function GYi takes string TYi returns integer
    local integer YYi
    set DSw[ASw] = TYi
    set ASw = ASw + 1
    if PC == 0 then
        if AC < 32768 then
            set AC = AC + 1
            set YYi = AC
            set DC[YYi] = 677
        else
            call tNr("Out of memory: Could not create CallbackPeriodic_doPeriodically_EffectCleaner.", "when calling error in EffectCleaner, line 231")
            set YYi = 0
        endif
    else
        set PC = PC - 1
        set YYi = IC[PC]
        set DC[YYi] = 677
    endif
    set ASw = ASw - 1
    return YYi
endfunction
function HuS takes string AuS returns integer
    local integer DuS
    set DSw[ASw] = AuS
    set ASw = ASw + 1
    if NX == 0 then
        if MX < 32768 then
            set MX = MX + 1
            set DuS = MX
            set wC[DuS] = 766
        else
            call tNr("Out of memory: Could not create CallbackSingle_doAfter_EffectCleaner.", "when calling error in EffectCleaner, line 185")
            set DuS = 0
        endif
    else
        set NX = NX - 1
        set DuS = BX[NX]
        set wC[DuS] = 766
    endif
    set ASw = ASw - 1
    return DuS
endfunction
function KAt takes string HAt returns integer
    local integer JAt
    set DSw[ASw] = HAt
    set ASw = ASw + 1
    if NX == 0 then
        if MX < 32768 then
            set MX = MX + 1
            set JAt = MX
            set wC[JAt] = 765
        else
            call tNr("Out of memory: Could not create CallbackSingle_doAfter_EffectCleaner.", "when calling error in EffectCleaner, line 183")
            set JAt = 0
        endif
    else
        set NX = NX - 1
        set JAt = BX[NX]
        set wC[JAt] = 765
    endif
    set ASw = ASw - 1
    return JAt
endfunction
function cGs takes string iGs returns integer
    local integer SGs
    set DSw[ASw] = iGs
    set ASw = ASw + 1
    if NX == 0 then
        if MX < 32768 then
            set MX = MX + 1
            set SGs = MX
            set wC[SGs] = 758
        else
            call tNr("Out of memory: Could not create CallbackSingle_doAfter_EffectCleaner.", "when calling error in EffectCleaner, line 33")
            set SGs = 0
        endif
    else
        set NX = NX - 1
        set SGs = BX[NX]
        set wC[SGs] = 758
    endif
    set ASw = ASw - 1
    return SGs
endfunction
function cfS takes string ifS returns integer
    local integer SfS
    set DSw[ASw] = ifS
    set ASw = ASw + 1
    if NX == 0 then
        if MX < 32768 then
            set MX = MX + 1
            set SfS = MX
            set wC[SfS] = 760
        else
            call tNr("Out of memory: Could not create CallbackSingle_doAfter_EffectCleaner.", "when calling error in EffectCleaner, line 66")
            set SfS = 0
        endif
    else
        set NX = NX - 1
        set SfS = BX[NX]
        set wC[SfS] = 760
    endif
    set ASw = ASw - 1
    return SfS
endfunction
function gBs takes string YBs returns integer
    local integer GBs
    set DSw[ASw] = YBs
    set ASw = ASw + 1
    if NX == 0 then
        if MX < 32768 then
            set MX = MX + 1
            set GBs = MX
            set wC[GBs] = 759
        else
            call tNr("Out of memory: Could not create CallbackSingle_doAfter_EffectCleaner.", "when calling error in EffectCleaner, line 56")
            set GBs = 0
        endif
    else
        set NX = NX - 1
        set GBs = BX[NX]
        set wC[GBs] = 759
    endif
    set ASw = ASw - 1
    return GBs
endfunction
function NTt takes string XTt returns nothing
    local integer CTt
    local integer VTt
    local integer BTt
    set DSw[ASw] = XTt
    set ASw = ASw + 1
    set CTt = cGs("when calling alloc_CallbackSingle_doAfter_EffectCleaner in EffectCleaner, line 33")
    call RUs(CTt)
    call Ybr(.5, CTt, "when calling doAfter in EffectCleaner, line 33")
    set VTt = gBs("when calling alloc_CallbackSingle_doAfter_EffectCleaner in EffectCleaner, line 56")
    call RUs(VTt)
    call Ybr(1., VTt, "when calling doAfter in EffectCleaner, line 56")
    set BTt = cfS("when calling alloc_CallbackSingle_doAfter_EffectCleaner in EffectCleaner, line 66")
    call RUs(BTt)
    call Ybr(0.1, BTt, "when calling doAfter in EffectCleaner, line 66")
    set ASw = ASw - 1
endfunction
function Y8r takes string R8r returns integer
    local integer T8r
    set DSw[ASw] = R8r
    set ASw = ASw + 1
    if NX == 0 then
        if MX < 32768 then
            set MX = MX + 1
            set T8r = MX
            set wC[T8r] = 764
        else
            call tNr("Out of memory: Could not create CallbackSingle_doAfter_EffectCleaner.", "when calling error in EffectCleaner, line 181")
            set T8r = 0
        endif
    else
        set NX = NX - 1
        set T8r = BX[NX]
        set wC[T8r] = 764
    endif
    set ASw = ASw - 1
    return T8r
endfunction
function aFi takes string qFi returns boolean
    return BlzLoadTOCFile(qFi)
endfunction
function bNu takes framehandle cNu, framepointtype oNu, real ONu, real lNu returns nothing
    call BlzFrameSetAbsPoint(cNu, oNu, ONu, lNu)
endfunction
function kpS takes string hpS returns integer
    local integer FpS
    set DSw[ASw] = hpS
    set ASw = ASw + 1
    if NX == 0 then
        if MX < 32768 then
            set MX = MX + 1
            set FpS = MX
            set wC[FpS] = 763
        else
            call tNr("Out of memory: Could not create CallbackSingle_doAfter_EffectCleaner.", "when calling error in EffectCleaner, line 179")
            set FpS = 0
        endif
    else
        set NX = NX - 1
        set FpS = BX[NX]
        set wC[FpS] = 763
    endif
    set ASw = ASw - 1
    return FpS
endfunction
function mOt takes framehandle vOt returns nothing
    call BlzFrameClearAllPoints(vOt)
endfunction
function pGs takes string yGs returns framehandle
    return BlzGetFrameByName(yGs, $00000000)
endfunction
function qQu takes string pQu returns integer
    local integer eQu
    set DSw[ASw] = pQu
    set ASw = ASw + 1
    if NX == 0 then
        if MX < 32768 then
            set MX = MX + 1
            set eQu = MX
            set wC[eQu] = 767
        else
            call tNr("Out of memory: Could not create CallbackSingle_doAfter_EffectCleaner.", "when calling error in EffectCleaner, line 192")
            set eQu = 0
        endif
    else
        set NX = NX - 1
        set eQu = BX[NX]
        set wC[eQu] = 767
    endif
    set ASw = ASw - 1
    return eQu
endfunction
function ujS takes string MkS returns integer
    local integer wjS
    set DSw[ASw] = MkS
    set ASw = ASw + 1
    if NX == 0 then
        if MX < 32768 then
            set MX = MX + 1
            set wjS = MX
            set wC[wjS] = 769
        else
            call tNr("Out of memory: Could not create CallbackSingle_doAfter_EffectCleaner.", "when calling error in EffectCleaner, line 216")
            set wjS = 0
        endif
    else
        set NX = NX - 1
        set wjS = BX[NX]
        set wC[wjS] = 769
    endif
    set ASw = ASw - 1
    return wjS
endfunction
function RXw takes framehandle fXw returns real
    return BlzFrameGetHeight(fXw)
endfunction
function vNu takes framehandle jNu, real xNu returns nothing
    call BlzFrameSetSize(jNu, xNu, RXw(jNu))
endfunction
function w6r takes string N5r returns integer
    local integer M5r
    set DSw[ASw] = N5r
    set ASw = ASw + 1
    if NX == 0 then
        if MX < 32768 then
            set MX = MX + 1
            set M5r = MX
            set wC[M5r] = 762
        else
            call tNr("Out of memory: Could not create CallbackSingle_doAfter_EffectCleaner.", "when calling error in EffectCleaner, line 177")
            set M5r = 0
        endif
    else
        set NX = NX - 1
        set M5r = BX[NX]
        set wC[M5r] = 762
    endif
    set ASw = ASw - 1
    return M5r
endfunction
function x6i takes string k6i returns integer
    local integer j6i
    set DSw[ASw] = k6i
    set ASw = ASw + 1
    if NX == 0 then
        if MX < 32768 then
            set MX = MX + 1
            set j6i = MX
            set wC[j6i] = 768
        else
            call tNr("Out of memory: Could not create CallbackSingle_doAfter_EffectCleaner.", "when calling error in EffectCleaner, line 210")
            set j6i = 0
        endif
    else
        set NX = NX - 1
        set j6i = BX[NX]
        set wC[j6i] = 768
    endif
    set ASw = ASw - 1
    return j6i
endfunction
function rFS takes string WhS returns boolean
    local trigger EhS
    local trigger ZhS
    local trigger UhS
    local trigger IhS
    local framehandle PhS
    local framehandle AhS
    local integer DhS
    local integer HhS
    local integer JhS
    local integer KhS
    local integer LhS
    local integer XhS
    local integer ChS
    local integer VhS
    local integer BhS
    local integer NhS
    local framehandle MhS
    local framehandle wFS
    local integer uFS
    set DSw[ASw] = WhS
    set ASw = ASw + 1
    set sv = 0.
    call jts("when calling new_HashMap in EffectCleaner, line 29")
    set EhS = CreateTrigger()
    call qYS(EhS, EVENT_GAME_LOADED)
    set ZhS = EhS
    call B2S(ZhS, rmw)
    set UhS = CreateTrigger()
    call qYS(UhS, EVENT_GAME_SAVE)
    set IhS = UhS
    call B2S(IhS, smw)
    set PhS = pGs("LoadingBarText")
    call mOt(PhS)
    set AhS = PhS
    call bNu(AhS, FRAMEPOINT_CENTER, 0., 0.)
    set tF = CreateUnit(aD[Vh], l2s(Iji("n004", "when calling unObfuscate in EffectCleaner, line 166"), "when calling fromRawCode in EffectCleaner, line 166"), 2432., - 13376., 270.)
    call aFi("ui\\framedef\\customframedef.toc")
    call ShowInterface(false, 0.)
    call Xau("Preloading various data, please wait ...", 2.)
    call NTt("when calling initQuests in EffectCleaner, line 175")
    set DhS = w6r("when calling alloc_CallbackSingle_doAfter_EffectCleaner in EffectCleaner, line 177")
    call RUs(DhS)
    call Ybr(.5, DhS, "when calling doAfter in EffectCleaner, line 177")
    set HhS = kpS("when calling alloc_CallbackSingle_doAfter_EffectCleaner in EffectCleaner, line 179")
    call RUs(HhS)
    call Ybr(1., HhS, "when calling doAfter in EffectCleaner, line 179")
    set JhS = Y8r("when calling alloc_CallbackSingle_doAfter_EffectCleaner in EffectCleaner, line 181")
    call RUs(JhS)
    call Ybr(1.5, JhS, "when calling doAfter in EffectCleaner, line 181")
    set KhS = KAt("when calling alloc_CallbackSingle_doAfter_EffectCleaner in EffectCleaner, line 183")
    call RUs(KhS)
    call Ybr(3., KhS, "when calling doAfter in EffectCleaner, line 183")
    set LhS = HuS("when calling alloc_CallbackSingle_doAfter_EffectCleaner in EffectCleaner, line 185")
    call RUs(LhS)
    call Ybr(5., LhS, "when calling doAfter in EffectCleaner, line 185")
    set XhS = 0
    set ChS = Lh
    loop
        exitwhen XhS > ChS
        call n1s(aD[XhS], oQu(AA), Gcw, 0.)
        set XhS = XhS + 1
    endloop
    set VhS = qQu("when calling alloc_CallbackSingle_doAfter_EffectCleaner in EffectCleaner, line 192")
    call RUs(VhS)
    call Ybr(.5, VhS, "when calling doAfter in EffectCleaner, line 192")
    set BhS = x6i("when calling alloc_CallbackSingle_doAfter_EffectCleaner in EffectCleaner, line 210")
    call RUs(BhS)
    call Ybr(1., BhS, "when calling doAfter in EffectCleaner, line 210")
    set NhS = ujS("when calling alloc_CallbackSingle_doAfter_EffectCleaner in EffectCleaner, line 216")
    call RUs(NhS)
    call Ybr(2., NhS, "when calling doAfter in EffectCleaner, line 216")
    set MhS = BlzFrameGetChild(pGs("ResourceBarFrame"), $00000003)
    call rit(MhS)
    set wFS = BlzGetFrameByName("ResourceBarSupplyText", $00000000)
    call Wrt(wFS, rnu())
    call mOt(wFS)
    call bNu(wFS, FRAMEPOINT_TOPLEFT, 0.584, 0.596)
    call vNu(wFS, 0.12)
    set uFS = GYi("when calling alloc_CallbackPeriodic_doPeriodically_EffectCleaner in EffectCleaner, line 231")
    call kVu(uFS)
    set W1[uFS] = wFS
    call wcs(1., uFS, "when calling doPeriodically in EffectCleaner, line 231")
    set ASw = ASw - 1
    set EhS = null
    set ZhS = null
    set UhS = null
    set IhS = null
    set PhS = null
    set AhS = null
    set MhS = null
    set wFS = null
    return true
endfunction
function W6i takes nothing returns boolean
    set ASw = 0
    return rFS("via function reference EffectCleaner, line 1")
endfunction
function pTi takes nothing returns boolean
    return GetUnitTypeId(GetDyingUnit()) == 1429221426
endfunction
function W7u takes nothing returns nothing
    if pTi() then
        set Ni = 4
        set Mi = 8
        call ForForce(Rc[$00000004], flw)
        call DisplayTimedTextToForce(Rc[$00000004], 10., "|cffffcc00You have completed the dungeon!|r Type -|c00ff0000d|r|c00ff1500o|r|c00ff3000n|r|c00ff4500e|r to exit the dungeon after looting your reward.")
        call DisplayTimedTextToForce(Rc[$00000004], 10., "|cffffcc00Type|r |c00ff0000-s2s X|r|cffffcc00 to send an item to your stash. (1-6)|r")
        call PolledWait(S)
        set pr[$00000001] = 1227895348
        set pr[$00000002] = 1227895127
        set pr[$00000003] = 1227895126
        set pr[$00000004] = 1227895117
        set pr[$00000005] = 1227895114
        set pr[$00000006] = 1227895113
        set pr[$00000007] = 1227895112
        set pr[$00000008] = 1227895115
        set Ni = 4
        set Mi = 8
        call ForForce(Rc[$00000004], vlw)
        call ForGroupBJ(fc[$00000004], mlw)
        call TriggerExecute(cw)
        call GroupClear(fc[$00000004])
        call ForceClear(Rc[$00000004])
        call DisableTrigger(GetTriggeringTrigger())
    endif
endfunction
function W8t takes nothing returns nothing
    call DisableTrigger(GetTriggeringTrigger())
endfunction
function P2t takes nothing returns boolean
    return GetTriggerUnit() != Fc[xc]
endfunction
function Tqs takes nothing returns boolean
    return IsUnitInGroup(GetAttacker(), gc[xc])
endfunction
function WBu takes nothing returns nothing
    set xc = LoadIntegerBJ($00000000, GetHandleIdBJ(GetAttacker()), jc)
    if Tqs() then
        if P2t() then
            call IssueTargetOrderById(GetAttacker(), $000D000F, Fc[xc])
        endif
    endif
endfunction
function Vlt takes string Jlt returns boolean
    local integer Klt
    local integer Llt
    local integer Xlt
    local integer Clt
    set DSw[ASw] = Jlt
    set ASw = ASw + 1
    set SF = "|cffffcc00"
    set Klt = 75
    set Llt = 0
    set Xlt = 130
    set Clt = 255
    set cF = Klt
    set oF = Llt
    set OF = Xlt
    set lF = Clt
    set bF = "|cffff0000"
    set yF = "|cff00BFFF"
    set pF = "|cff00FF00"
    set eF = "|r"
    call Iji("|cffffcc001st Job Change Area|r", "when calling unObfuscate in Constants, line 55")
    call Iji("Credits", "when calling unObfuscate in Constants, line 70")
    call Iji("Dungeon and Loot", "when calling unObfuscate in Constants, line 71")
    call Iji("Twilight's Eve ORPG has a dungeon system that acts like a party system. All you have to do is gather your - party members - outside a dungeon area and type |cffffcc00-enter|r, and it will transfer your party inside. When you finally kill the final boss, you will be teleported to an Item Generator room where a random item will spawn for you; its rarity and strength again depending on the difficulty of the dungeon.", "when calling unObfuscate in Constants, line 72")
    call Iji(" Once you've looted the item, type |cffff8c00-done|r to exit the room and be teleported to your last revival point. If you die while fighting a dungeon, you will not be able to re-enter the dungeon until your former party members have all left it. They can also choose to exit the dungeon via the -out command, though.
|cffffcc00There are 5 types of Dungeon Difficulties|r:
|cff87ceebEasy|r
|Cff00ff00Hard|r
|cffff8c00Nightmare|r
|cffff0000Hell|r
|cffB22222Impossible|r

", "when calling unObfuscate in Constants, line 73")
    call Iji("Twilight's Eve ORPG uses a random item generator interface when spawning items for players who complete a dungeon. Although loot depends on the difficulty of the dungeon, it should be known that there are 6 kinds of colours representing the rarity of items.
|cff8B8989Common|r
|Cff00ff00Uncommon|r
|cff009ACDRare|r
|cffA020F0Epic|r
|cffff0000Legendary|r
|cffFFD700Godly|r
Special Class of Items:
|cff8B4513Forged|r
", "when calling unObfuscate in Constants, line 80")
    call Iji("Your Stash", "when calling unObfuscate in Constants, line 92")
    call Iji("Now you can finally store items in your very own personal stash! Furthermore, your stash can store any item, including items your character class can't use. However, as items still bind on pickup, you cannot steal another player's item. 
Your item code will save all items and their respective item charges carried by both your Hero and your stash,", "when calling unObfuscate in Constants, line 93")
    call Iji(" so make full use of this advantage. Since PvP points are also saved separately as your Item code, it is possible to load2 without using the original -save. This makes using the Item code a very good way to test PvP builds.
 
The stash also provides a good way to store items as well, so people can't destroy your items and whatnot.|nYou can use '-s2s X' command in Dungeon reward area to send item from inventory to stash.", "when calling unObfuscate in Constants, line 94")
    call Iji("Limit Break System", "when calling unObfuscate in Constants, line 98")
    call Iji("Player Vs. Player Mode", "when calling unObfuscate in Constants, line 100")
    call Iji("Twilight's Eve features a unique player vs player (PvP) system. The most unique aspect of the PvP System is that battle can take place |cffff0000ANYWHERE|r, and not restricted to any given location (there are but a few exceptions).
To activate PvP, you must be within 200 range of the player's Hero and type -pvp [player number] to activate PvP mode. PvP can take place anywhere, except in a dungeon, or PvP-restricted areas. You can cancel the challenge by typing -cancel.
", "when calling unObfuscate in Constants, line 101")
    call Iji("In PvP, your base damage will be reduced by 85%, and certain skills have lesser effects. Winners gain 1 point, and Losers lose 1 point. Flawless Victories are victories won without losing any health. As such, Flawless Winners gain 2 points while the losers lose 2 points.

|cffffcc00The Rank system goes as follows|r:
", "when calling unObfuscate in Constants, line 104")
    call Iji("15: Pit Dog
30: Fighter
75: Myrmidon
100: Warrior
150: Knight
200: Crusader
300: Gladiator
500: Veteran
750: Commander
1000: General
1500: Marshal
2000: Hero
3000: Champion
5000: Grand Champion", "when calling unObfuscate in Constants, line 106")
    call Iji("Rite of Passage", "when calling unObfuscate in Constants, line 109")
    call Iji("The Rite of Passage is a dark place where only characters over |cffffcc00Level 100|r can attempt to transverse it. If the player is able to transverse the entire Rite of Passage until the end, she or he will be teleported to the Unknown Regions, where stronger monsters await. Only 1 player is able to transverse it at any time.", "when calling unObfuscate in Constants, line 110")
    call Iji(" The player will have to battle through hordes of monsters until she or he reaches the end.
In order to attempt to transverse the Rite of Passage, the player must speak to the Angel, Dawn, at the summit of Mount Twilight.
If the player wishes to exit the Unknown Regions, the player should speak to Dawn again and Dawn will teleport the player back to Mount Twilight.", "when calling unObfuscate in Constants, line 111")
    call Iji("Additional Information", "when calling unObfuscate in Constants, line 115")
    call Iji("Twilight's Eve uses a saved rez point system that saves the point where you will revive at, should your hero die. 
All you have to do is go within 500 range of an Inn in any town or city, and it will auto save your rez point for you, so if you die, you will be revived at that specific city or town you saved in. 
", "when calling unObfuscate in Constants, line 116")
    call Iji("Power Shards are used to forge items of immense power, comparable to that of |cffff0000Legendary|r items.
However, they can only be obtained by completing |cffff0000Hell|r or |cffB22222Impossible|r Difficulty Dungeons. Choosing to buy them is also possible, but at a price of 50,000 gold. Selling them is also possible, but for only 20,000 gold.", "when calling unObfuscate in Constants, line 118")
    call Iji("2nd Job Advancement", "when calling unObfuscate in Constants, line 122")
    call Iji("In order to change to 2nd Job, first of all you need to be a |cffffcc00Level 40|r 1st Job Class in order to do so. If you meet the requirements, then head to the City of New Lights and talk to your Class Trainer. (for e.g. if you are an Archer, then talk to the Hunter) If you do not know who your Class Trainer is, then check F9 on your specific class; your 1st, 2nd, 3rd and 4th jobs are all listed there. ", "when calling unObfuscate in Constants, line 123")
    call Iji("Once you talk to the Class Trainer, they will give you an advancement quest that you need to complete. After completing the quest, go back to your class trainer and right click on him or her, and you will successfully change your job. Bear in mind, however, that you will start at Level 1 again, but this is minor because you will be very strong, so leveling back would not pose much of a problem although it does take some time.", "when calling unObfuscate in Constants, line 124")
    call Iji("3rd Job Advancement", "when calling unObfuscate in Constants, line 127")
    call Iji("In order to advance to your 3rd Job Class, you must first of all be a |cffffcc00Level 99|r 2nd Job Class in order to do so. If you meet the requirements, then head to the City of New Lights and talk to your Class Trainer; the very same one you talked to when you advanced to 2nd job. They will direct you to other - masters - of the your class, in which you would have to choose which class you want to be. ", "when calling unObfuscate in Constants, line 128")
    call Iji("Finding these masters may or may not be easy depending on your Class, as some are scattered around the map and some aren't. Bear in mind that once you accept the advancement quest from a 3rd Job Class Trainer, you can no longer revert to choosing your other path so choose wisely. However, you can always load back your code if anything goes awry; quests are not saved.
|cffff0000You cannot save when you have a letter of recommendation.|r", "when calling unObfuscate in Constants, line 129")
    call Iji("4th Job Advancement", "when calling unObfuscate in Constants, line 132")
    call Iji("In order to advance to your 4th Job Class, you must be a |cffffcc00Level 150|r 3rd Job Class. The hard part is finding the - Master - of your class and completing the task given. Search around the map for hidden NPCs and try to talk to them. They will give you a quest that is difficult to complete; ", "when calling unObfuscate in Constants, line 133")
    call Iji("most classes will need to transverse the Rite of Passage to complete it. After completing the task, report back to your Class Master to change your job. Below is a list to aid players in finding their respective masters:
Wizard - Arthur the Seeker
Sage - Eve
Priest - The Ancient One
Matriarch - The Ancient One
Marksman - Luna
Tracker - Monster Master Delia
Champion - Rain
", "when calling unObfuscate in Constants, line 134")
    call Iji("Avenger - Siegfried the Avenger
Phantom Assassin - Raven
Master Stalker - Nazgul the Fallen
Shaman - Horazon
Shapeshifter - Fenrir
High Templar - Freya
Dark Templar - Dark ArchTemplar Vanessa
Witcher - Morden Tor
Inquisitor - Count Crowley the Grand Inquisitor", "when calling unObfuscate in Constants, line 142")
    call Iji("This map was originally made by GreeN_DaY_DaNcE and Asayaki_Zac at Lordaeron U.S. West of Clan TEvE [Twilight's Eve]. First version was made in December 2008.
Credits to |cffffcc00GreeN_DaY_DaNcE|r:
> SavingLoading
> Music and Sounds
> Loading Screen and Preview Picture
> All Units, Items, Abilities, and Triggers
> Quests
Credits to |cffffcc00Asayaki_Zac|r:
> Terrain Designing
> Unit Placement
> Quests
", "when calling unObfuscate in Constants, line 163")
    call Iji("|cffffcc00The Twilight's Eve 1.14d Team|r:
AjastagataRoma[at]Garena - Icon Designer
Lord_Zeppelin[at]Northrend - Code Optimizer
|cff87ceebTwilight's Eve spell made from scratch using GUI by GreeN_DaY_DaNcE. Inspired entirely by Golden Sun. Twilight's Eve ORPG is 95% made in GUI, with the remaining 5% in JASS.|r
|cffff8c00Based on the comic book - Twilight's Eve -, written and drawn by GreeN_DaY_DaNcE.|r
", "when calling unObfuscate in Constants, line 174")
    call Iji("To other |cffffcc00Indirect Contributors|r:
Thanks to all the members of Hive Workshop whose resources we used. Many thanks to the modellers of Nanoha Defence. Your magic circle models are AWESOME.", "when calling unObfuscate in Constants, line 179")
    call Iji("|cffff8c00R4 version brought to you by KryptonRazer#3935 and Donach#6231, developers of|r|cffff0000 TeveR.|r
|Cff00ff00Join us at discord.tever.xyz or on www.tever.xyz|r
Final version was created by normax on the approval of one of the creators.
Final R4 version was created just to give you guys something to play before we can all move on to TeveR.", "when calling unObfuscate in Constants, line 183")
    set qF = Iji("|cffff8c00We would like to give huge thanks to all our donators, you guys are the best!|r|n", "when calling unObfuscate in Constants, line 186")
    call Iji("Thanks to all Teve testers, that helped a LOT with the balancing and testing our changes, you guys are awesome!
Tedd0n
o_OAntsElectron
koltar
Caspa
Tabloid
KuroiHikari
banebu
MWRWarrior
Support-Chan
iQu.NumB
Nickwa203
Pistach
Shunlight
Trojanvirus
In july
dxdi
HailOfArrows
BANGPANIS
mentor42
", "when calling unObfuscate in Constants, line 188")
    call Iji("Thanks to all our awesome mods, who keep the community flowing!
koltar BOT
Tabloid
Tedd0n
Caspa
", "when calling unObfuscate in Constants, line 191")
    call Iji("Twilight's Eve ORPG uses a saved rez point system that saves the point where you will revive at, should your hero die.
All you have to do is go within 500 range of an Inn in any town or city, and it will auto save your rez point for you, so if you die, you will be revived at that specific city or town you saved in.
Power Shards are used to forge items of immense power, comparable to that of |cffff0000Legendary|r items.
", "when calling unObfuscate in Constants, line 193")
    call Iji("However, they can only be obtained by completing |cffff0000Hell|r or 
|cffB22222Impossible|r Difficulty Dungeons. Choosing to buy them is also possible, but at a price of 50,000 gold. Selling them is also possible, but for only 20,000 gold.", "when calling unObfuscate in Constants, line 196")
    call Iji("To take the quests, simply go to target NPC with question mark on top of it, and get the Quest at no cost. Information on how to do each quest will be given to you when you received it.
To turn in the quest, go back to the NPC who gave you it, and simply right click on the NPC. You will get rewarded for the quests.", "when calling unObfuscate in Constants, line 201")
    call Iji("To choose a Profession, simply find a Profession Trainer of your preferred Profession and talk to him/her. He/she will give you a simple "initiation" quest which you must complete in order to acquire your preferred Profession.
|cffff0000You can only choose ONE Profession. Your Profession and Profession Level are saved in your Hero Code so each Hero is binded to one Profession at any given time.|r
|cffffcc00To unlearn your current Profession, simply type -unlearn. ", "when calling unObfuscate in Constants, line 205")
    call Iji("Doing so will reset your Profession Level back to 0, even if you re-learn the same Profession you unlearned before. You also have to redo the "initiation" quest again.|r
There are 5 Profession Ranks:
|cff8B8989Apprentice|r - Levels 1-50
|Cff00ff00Journeyman|r - Levels 51-100
|cffffff00Expert|r - Levels 101-150
|cffff8c00Master|r - Levels 151-200
|cffff0000Legend|r - Levels 201-250", "when calling unObfuscate in Constants, line 208")
    set aF = "To get list of commands, use \"-help1\" or \"-help2\" or \"-help3\" or \"-help4\" \nIf you get lost, you can find a community guide at tevef-guide.tever.xyz.\nMake sure you are playing the latest version by visiting tever.xyz/maps/teveF"
    set nF = "-enter to enter dungeons.\n" + "-out to exit dungeons. There is a 8 second penalty.\n" + "-done to exit your Loot Location which you are teleported to after completing a dungeon.\n" + "-pvp # to challenge the [Entered Player #] to a duel.\n" + "-yes to accept a duel.\n" + "-no to decline a duel.\n" + "-cancel to cancel your PvP request.\n" + "-clear to clear the screen of text messages.\n"
    set dF = "-rankpvp / -rankfishing to show your PvP/Fishing Rank, as your playername (-rankclear to remove).\n" + "-save to save your character.\n" + "-load to load hero code.\n" + "-load2 to load item code.\n" + "-check [Hero Code] to check whether your hero code is valid.\n" + "-check2 [Item Code] to check whether your item code is valid.\n" + "-new to start with a new hero.\n" + "-repick to start with a new hero.\n" + "-ms to check your movement speed.\n" + "-stats to check your hero stats (HP, MP, MS, player-id).\n" + "-kill to kill your hero.\n" + "-remove # to remove an item in slot number (entered #)."
    set fF = "-fishing / -profession show current fishing stats.\n" + "-time print current game playing time.\n" + "-sendtostash # / -s2s # sends item in slot # (1-6) to your stash.\n" + "-enableglow / -disableglow activates or deactivates player-colored hero glow (donator only).\n" + "-disableProcs / -dProcs disables locally all godly item proc effects.\n" + "-disableOtherProcs / -dOProcs disables locally all other players godly item proc effects.\n" + "-enableProcs / -eProcs enables locally all godly item proc effects.\n" + "-enablefog / -fog enables fog locally.\n" + "-disablefog / -nofog disables fog locally.\n" + "-unform / if you get stuck in wrong form use this.\n" + "-camfollow -camunfollow or CTRL+L / To toggle camera following hero unit."
    set RF = "-testarrow to try arrow game from Imp3. Dungeon must be empty|n" + "'-maze X' to test maze 1-4. Dungeon must be empty and your hero needs level 200+.\n" + "'-critter help' to show info about critters.\n" + "'-critter X' to change to given critter.\n" + ""
    set TF = 851972
    set YF = 851973
    set GF = "head"
    set gF = "chest"
    set hF = "origin"
    set ASw = ASw - 1
    return true
endfunction
function WCt takes nothing returns boolean
    set ASw = 0
    return Vlt("via function reference Constants, line 12")
endfunction
function WDt takes nothing returns boolean
    set fQ = true
    set RQ = false
    set TQ = false
    return true
endfunction
function niu takes string aiu returns nothing
    set DSw[ASw] = aiu
    set ASw = ASw + 1
    if r_r(Srs()) then
        call g1s(Srs(), "when calling toUnitIndex in UnitIndexer, line 196")
    endif
    set ASw = ASw - 1
endfunction
function WEt takes nothing returns nothing
    set ASw = 0
    call niu("via function reference UnitIndexer, line 196")
endfunction
function WFs takes nothing returns nothing
    if not m9r(GetEnumUnit()) then
        set Qc = GetUnitLoc(GetEnumUnit())
        call CreateNUnitsAtLoc($00000001, $68303241, GetOwningPlayer(GetTriggerUnit()), Qc, 270.)
        call UnitDamageTargetBJ(GetTriggerUnit(), GetEnumUnit(), 900. * I2R(GetUnitAbilityLevelSwapped(GetSpellAbilityId(), GetTriggerUnit())), ATTACK_TYPE_CHAOS, DAMAGE_TYPE_NORMAL)
        call RemoveLocation(Qc)
    endif
endfunction
function WHs takes nothing returns nothing
    call SetUnitLifePercentBJ(GetEnumUnit(), 100.)
endfunction
function eJt takes nothing returns boolean
    return GetUnitTypeId(GetTriggerUnit()) == 1211117623
endfunction
function ovi takes nothing returns boolean
    return GetUnitTypeId(GetTriggerUnit()) == 1211117620
endfunction
function WKs takes nothing returns nothing
    call ForceRemovePlayer(Gr, GetOwningPlayer(GetTriggerUnit()))
    call DisplayTextToForce(MwS(GetOwningPlayer(GetTriggerUnit())), "|cffffcc00Class Trainer|r : |cff87ceebNicely done, my child. I sent you on that long run because I needed to know that you are really devoted to the light and would remain true to constant prayer. You have...\"passed\" my test, and shall henceforth be a Cleric, and spread the good word.")
    call PlaySoundBJ(re)
    call DestroyQuest(dr[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))])
    call SetHeroLevelBJ(GetTriggerUnit(), $00000001, false)
    if eJt() then
        call ReplaceUnitBJ(GetTriggerUnit(), $48303045, $00000002)
    endif
    if ovi() then
        call ReplaceUnitBJ(GetTriggerUnit(), $48303046, $00000002)
    endif
    call SelectUnitForPlayerSingle(bj_lastReplacedUnit, GetOwningPlayer(GetTriggerUnit()))
    call SetHeroLevel(bj_lastReplacedUnit, $00000001, true)
    call UnitStripHeroLevel(bj_lastReplacedUnit, $00000001)
endfunction
function WMi takes nothing returns boolean
    return GetUnitTypeId(GetEnteringUnit()) == 1211117618 and GetHeroLevel(GetEnteringUnit()) >= 10
endfunction
function WNr takes nothing returns nothing
    set bi = GetRectCenter(hb)
    call ForceRemovePlayer(Gi, GetOwningPlayer(GetTriggerUnit()))
    call SetUnitPositionLoc(GetEnteringUnit(), bi)
    call PanCameraToTimedLocForPlayer(GetOwningPlayer(GetEnteringUnit()), bi, 0.)
    call TriggerExecute(MT)
    call RemoveLocation(bi)
endfunction
function WOt takes nothing returns nothing
    call PanCameraToTimedLocForPlayer(GetEnumPlayer(), wo[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))], .0)
endfunction
function WUr takes nothing returns boolean
    return GetUnitTypeId(GetOrderTargetUnit()) == 1747989060 and IsPlayerInForce(GetOwningPlayer(GetTriggerUnit()), Tt) and IsPlayerInForce(GetOwningPlayer(GetTriggerUnit()), Gt) and IsPlayerInForce(GetOwningPlayer(GetTriggerUnit()), Yt) and IsPlayerInForce(GetOwningPlayer(GetTriggerUnit()), gt) and IsUnitInGroup(GetTriggerUnit(), kpu(300., GetUnitLoc(GetOrderTargetUnit())))
endfunction
function WVt takes nothing returns boolean
    set jg = 0.030
    set xg = 1097691750
    set vg = 1097625443
    set mg = aD[PLAYER_NEUTRAL_PASSIVE]
    return true
endfunction
function WZi takes nothing returns nothing
    call ForceAddPlayer(rt, GetOwningPlayer(GetTriggerUnit()))
    call ForceAddPlayer(Ot, GetOwningPlayer(GetTriggerUnit()))
    call DisplayTextToForce(MwS(GetOwningPlayer(GetTriggerUnit())), "|cffffcc00Arthur the Seeker|r : |cff87ceebYou have come, seeking answers...but it has a price. The knowledge of how to summon legendary gods are highly valued. I shall teach you them...if you can transverse the Rite of Passage successfully.")
    call PlaySoundBJ(Se)
    call T_i(GetOwningPlayer(GetTriggerUnit()), $00000000, "4th Job Advancement Quest", "I have to transverse the Rite of Passage successfully.", "ReplaceableTextures\\PassiveButtons\\PASBTNGenericSpellImmunity.blp")
    set st[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))] = bj_lastCreatedQuest
endfunction
function W_S takes nothing returns nothing
    call ForceAddPlayer(Kr, GetOwningPlayer(GetTriggerUnit()))
    call DisplayTextToForce(MwS(GetOwningPlayer(GetTriggerUnit())), "|cffffcc00Class Trainer|r : |cff87ceebVery good. You have achieved harmony and balance within your training, ArchDruid. But I am afraid this is nearly the end of your path. Based on the skills you've developed through your training, you would have to choose; is the path of the Shapeshifter the one you want? Or is the path of the Shaman the path you seek? It is not some great task that you must do to achieve it, but only that you seek to achieve it. Speak to the Shaman Maz'tha in the Dark Grove north of here; he shall guide you in your training to tame the storms. Or you may wish to speak to the Shapeshifter Firzen; he can be found in the Snowy Town due far southeast of the city. He has great knowledge in shapeshifting and is a disciple of the great Fenrir himself. Learn from him, and it will serve you well.")
    call PlaySoundBJ(Se)
    call T_i(GetOwningPlayer(GetTriggerUnit()), $00000000, "3rd Job Advancement Quest", "I need to choose - is the path of Lycanthropy the one I desire? Or is the path of Taming the Elements the one I seek? I will need to have maxed out my skills in that skill tree though.\n- Shaman Maz'tha can be found in the Dark Grove north of the city.\n- Shapeshifter Firzen can be found in the Snowy Town which I began my journey so long ago.", "ReplaceableTextures\\CommandButtons\\BTNSell.blp")
    set Lr[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))] = bj_lastCreatedQuest
    set ds[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))] = 0
endfunction
function uPt takes integer NIt, integer MIt, string wPt returns nothing
    set DSw[ASw] = wPt
    set ASw = ASw + 1
    if not CPw(EM[NIt], MIt, "when calling has in CustomHero, line 188") then
        call q9i(EM[NIt], MIt, "when calling add in CustomHero, line 189")
    endif
    set ASw = ASw - 1
endfunction
function sNt takes integer wNt, integer uNt, string rNt returns nothing
    set DSw[ASw] = rNt
    set ASw = ASw + 1
    if MC[wNt] == 0 then
        if wNt == 0 then
            call tNr("Nullpointer exception when calling CustomHero.onAbilityLeveld", "when calling error in CustomHero, line 187")
        else
            call tNr("Called CustomHero.onAbilityLeveld on invalid object.", "when calling error in CustomHero, line 187")
        endif
    endif
    call uPt(wNt, uNt, "when calling onAbilityLeveld in CustomHero, line 187")
    set ASw = ASw - 1
endfunction
function bii takes string oii returns nothing
    local unit Oii
    local player lii
    set DSw[ASw] = oii
    set ASw = ASw + 1
    set Oii = GetLearningUnit()
    set lii = eDs(Oii)
    call sNt(xMi(tOS(lii, "when calling getCustomPlayer in CustomHero, line 286"), "when calling getCHero in CustomHero, line 286"), GetLearnedSkill(), "when calling onAbilityLeveld in CustomHero, line 286")
    set ASw = ASw - 1
    set Oii = null
    set lii = null
endfunction
function W_s takes nothing returns nothing
    set ASw = 0
    call bii("via function reference CustomHero, line 104")
endfunction
function Bdi takes string Vdi returns nothing
    set DSw[ASw] = Vdi
    set ASw = ASw + 1
    call GZs(xus(hgr(GetEnumPlayer()), "when calling getCustomPlayer in Imp4, line 271"), false, "when calling setCommandsDisabled in Imp4, line 271")
    set ASw = ASw - 1
endfunction
function WaS takes nothing returns nothing
    set ASw = 0
    call Bdi("via function reference Imp4, line 270")
endfunction
function Wcs takes nothing returns boolean
    return GetUnitTypeId(GetTriggerUnit()) == 1211117642 and GetUnitTypeId(GetOrderTargetUnit()) == 1747988810 and IsPlayerInForce(GetOwningPlayer(GetTriggerUnit()), Kr) and IsPlayerInForce(GetOwningPlayer(GetTriggerUnit()), Cr) == false and IsUnitInGroup(GetTriggerUnit(), kpu(300., GetUnitLoc(GetOrderTargetUnit())))
endfunction
function Ecs takes nothing returns boolean
    return GetUnitTypeId(GetDyingUnit()) == 1848652109 and IsPlayerInForce(GetOwningPlayer(GetKillingUnit()), et) == false
endfunction
function HVu takes nothing returns boolean
    return GetUnitTypeId(GetDyingUnit()) == 1848652116 and IsPlayerInForce(GetOwningPlayer(GetKillingUnit()), yt) == false
endfunction
function pNu takes nothing returns boolean
    return GetUnitTypeId(GetDyingUnit()) == 1848652115 and IsPlayerInForce(GetOwningPlayer(GetKillingUnit()), pt) == false
endfunction
function Wei takes nothing returns nothing
    if pNu() then
        call ForceAddPlayer(pt, GetOwningPlayer(GetKillingUnit()))
        call QuestMessageBJ(MwS(GetOwningPlayer(GetKillingUnit())), $00000001, "|cffffcc00Obtained a fragment of the artifact from the Cemetery|r.")
    endif
    if Ecs() then
        call ForceAddPlayer(et, GetOwningPlayer(GetKillingUnit()))
        call QuestMessageBJ(MwS(GetOwningPlayer(GetKillingUnit())), $00000001, "|cffffcc00Obtained a fragment of the artifact from the Unknown Regions|r.")
    endif
    if HVu() then
        call ForceAddPlayer(yt, GetOwningPlayer(GetKillingUnit()))
        call QuestMessageBJ(MwS(GetOwningPlayer(GetKillingUnit())), $00000001, "|cffffcc00Obtained a fragment of the artifact from the Snoworc Camp|r.")
    endif
    if pNu() or Ecs() or HVu() then
        if IsPlayerInForce(GetOwningPlayer(GetKillingUnit()), pt) and IsPlayerInForce(GetOwningPlayer(GetKillingUnit()), et) and IsPlayerInForce(GetOwningPlayer(GetKillingUnit()), yt) then
            call DisplayTimedTextToPlayer(GetOwningPlayer(GetKillingUnit()), 0., 0., 20., "|cffffcc00Immortal's Final Breath|r Quest Requirement Completed.")
            if GetOwningPlayer(GetKillingUnit()) == GetLocalPlayer() then
    call StartSound(bj_questCompletedSound)
    call FlashQuestDialogButton()
            endif
        endif
    endif
endfunction
function Yxr takes string fxr returns nothing
    local player Rxr
    local integer Txr
    set DSw[ASw] = fxr
    set ASw = ASw + 1
    set Rxr = GetTriggerPlayer()
    set Txr = hgr(Rxr)
    call pnr(Txr, false, false, "when calling imp3EffectsResetForPlayer in Imp3DragonFortress, line 173")
    call rOi(Txr, false, "when calling imp3OnMazeEnd in Imp3DragonFortress, line 174")
    set ASw = ASw - 1
    set Rxr = null
endfunction
function Wer takes nothing returns nothing
    set ASw = 0
    call Yxr("via function reference Imp3DragonFortress, line 411")
endfunction
function Weu takes nothing returns boolean
    return GetUnitTypeId(GetTriggerUnit()) == 1211117878 and GetUnitTypeId(GetOrderTargetUnit()) == 1747989041 and IsPlayerInForce(GetOwningPlayer(GetTriggerUnit()), rt) == false and IsUnitInGroup(GetTriggerUnit(), kpu(300., GetUnitLoc(GetOrderTargetUnit()))) and GetHeroLevel(GetTriggerUnit()) >= 150
endfunction
function iDs takes integer tDs returns group
    set WG = CreateGroup()
    call GroupEnumUnitsOfType(WG, UnitId2String(tDs), ZG)
    return WG
endfunction
function vki takes nothing returns boolean
    return Dc
endfunction
function Whi takes nothing returns nothing
    if lr == 1 then
        call DisableTrigger(wR)
        call ForGroupBJ(iDs($6E303030), Gbw)
        call ForGroupBJ(iDs($6E303037), gbw)
        call ForGroupBJ(iDs($6E303036), hbw)
        call ForGroupBJ(iDs($55303030), Fbw)
    elseif lr == 2 then
        call DisableTrigger(uR)
        call DisableTrigger(HR)
        call ForGroupBJ(iDs($6E303054), kbw)
        call ForGroupBJ(iDs($55303031), jbw)
    elseif lr == 3 then
        call DisableTrigger(rR)
        call ForGroupBJ(iDs($6E303132), xbw)
        call ForGroupBJ(iDs($55303033), vbw)
    elseif lr == 4 then
        call DisableTrigger(sR)
        call ForGroupBJ(iDs($55303032), mbw)
    elseif lr == 5 then
        set qs = 0
        call DisableTrigger(tR)
        call ModifyGateBJ($00000000, kG)
        call ForGroupBJ(iDs($55303034), Qbw)
    elseif lr == 6 then
        call DisableTrigger(iR)
        call ForGroupBJ(iDs($55303036), Wbw)
        call ForGroupBJ(iDs($6E303159), Ebw)
        call ForGroupBJ(iDs($6E303230), Zbw)
    elseif lr == 7 then
        call DisableTrigger(SR)
        call ForGroupBJ(iDs($55303037), Ubw)
        call ForGroupBJ(iDs($6E30315A), Ibw)
    elseif lr == 8 then
        call DisableTrigger(cR)
        call ForGroupBJ(iDs($55303039), Pbw)
        call ForGroupBJ(iDs($6E303234), Abw)
    elseif lr == 9 then
        call DisableTrigger(oR)
        call ForGroupBJ(iDs($55303041), Dbw)
        call ForGroupBJ(iDs($6E303241), Hbw)
    elseif lr == 10 then
        call DisableTrigger(eR)
        call ForGroupBJ(iDs($55303042), Jbw)
    elseif lr == 11 then
        call DisableTrigger(qR)
        call DisableTrigger(nR)
        call EnableTrigger(aR)
    elseif lr == 12 then
        call DisableTrigger(GR)
        call DisableTrigger(hR)
        call TimerStart(gR, 0., false, null)
        call TimerStart(FR, 0., false, null)
        call TimerStart(jR, 0., false, null)
        call TimerStart(xR, 0., false, null)
        call TimerStart(vR, 0., false, null)
        if vki() then
            set Dc = false
            call StopMusic(false)
            call PlayMusicBJ(Ge)
        endif
    elseif lr == 13 then
        call TimerStart(mR, 0., false, null)
    endif
    set lr = 0
endfunction
function FoS takes nothing returns boolean
    return Io <= 5
endfunction
function Zwu takes nothing returns boolean
    return Po[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))] != 5
endfunction
function a5i takes nothing returns boolean
    return Po[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))] != 5
endfunction
function hTt takes nothing returns boolean
    return Io <= 80
endfunction
function mEu takes nothing returns boolean
    return UnitInventoryCount(GetTriggerUnit()) <= 4
endfunction
function Wji takes nothing returns nothing
    if mEu() then
        call TriggerExecute(Tu)
        call SetUnitFacing(GetTriggerUnit(), 0.)
        call ForceAddPlayer(iO, GetOwningPlayer(GetTriggerUnit()))
        call PauseUnit(GetTriggerUnit(), true)
        call SetUnitInvulnerable(GetTriggerUnit(), true)
        call DisplayTimedTextToForce(MwS(GetOwningPlayer(GetTriggerUnit())), 5., "|cffffcc00You swing your fishing line into the water.|r")
        call UnitAddAbility(GetTriggerUnit(), $41304144)
        call n6t(GetRandomReal(1., 2.5))
        if a5i() then
            set Io = GetRandomInt($00000001, $00000064)
            if FoS() then
    call KillUnit(GetTriggerUnit())
    call PauseUnit(GetTriggerUnit(), false)
    call SetUnitInvulnerable(GetTriggerUnit(), false)
    call ForceRemovePlayer(iO, GetOwningPlayer(GetTriggerUnit()))
    call UnitRemoveAbility(GetTriggerUnit(), $41304144)
    call DisplayTimedTextToForce(MwS(GetOwningPlayer(GetTriggerUnit())), 10., "|cffff0000KARMA! You have fallen into the river and drowned!|r\n|cff00ff00--- Courtesy of Wishing~|r")
    call TriggerExecute(Yu)
    return
            endif
        endif
        if Zwu() then
            set Io = GetRandomInt($00000001, $00000064)
            if hTt() then
    call DisplayTimedTextToForce(MwS(GetOwningPlayer(GetTriggerUnit())), 5., "|cffffcc00You feel a tug on your fishing rod!|r")
    call SetCameraTargetControllerNoZForPlayer(GetOwningPlayer(GetTriggerUnit()), GetTriggerUnit(), 0., 0., false)
    set SO[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))] = 0
    set uO = GetOwningPlayer(GetTriggerUnit())
    call TriggerExecute(cY)
            else
    call PauseUnit(GetTriggerUnit(), false)
    call SetUnitInvulnerable(GetTriggerUnit(), false)
    call ForceRemovePlayer(iO, GetOwningPlayer(GetTriggerUnit()))
    call UnitRemoveAbility(GetTriggerUnit(), $41304144)
    call DisplayTimedTextToForce(MwS(GetOwningPlayer(GetTriggerUnit())), 5., "|cffffcc00There seems to be no bite.|r")
    call TriggerExecute(Yu)
            endif
        else
            call DisplayTimedTextToForce(MwS(GetOwningPlayer(GetTriggerUnit())), 5., "|cffffcc00You feel a tug on your fishing rod!|r")
            call SetCameraTargetControllerNoZForPlayer(GetOwningPlayer(GetTriggerUnit()), GetTriggerUnit(), 0., 0., false)
            set SO[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))] = 0
            set uO = GetOwningPlayer(GetTriggerUnit())
            call TriggerExecute(cY)
        endif
    else
        call PlaySoundBJ(oe)
        call DisplayTimedTextToForce(MwS(GetOwningPlayer(GetTriggerUnit())), 5., "|cffff0000Inventory must have at least 2 empty slots in order to begin fishing.|r")
        call TriggerExecute(Yu)
    endif
endfunction
function r9S takes nothing returns boolean
    return Si[1 + GetPlayerId(GetOwningPlayer(GetKillingUnit()))] >= 40
endfunction
function Wot takes nothing returns nothing
    set Si[1 + GetPlayerId(GetOwningPlayer(GetKillingUnit()))] = Si[1 + GetPlayerId(GetOwningPlayer(GetKillingUnit()))] + 1
    if r9S() then
        call QuestMessageBJ(MwS(GetOwningPlayer(GetKillingUnit())), $00000002, "|cffffcc004th Job Advancement Quest Completed|r.")
        call ForceAddPlayer(ii, GetOwningPlayer(GetKillingUnit()))
    else
        call QuestMessageBJ(MwS(GetOwningPlayer(GetKillingUnit())), $00000001, I2S(Si[1 + GetPlayerId(GetOwningPlayer(GetKillingUnit()))]) + " Demon(s) killed.")
    endif
endfunction
function Wti takes nothing returns boolean
    return (IsUnitType(GetTriggerUnit(), UNIT_TYPE_HERO) and GetEventDamage() >= 3. / 100. * GetUnitStateSwap(UNIT_STATE_MAX_LIFE, GetTriggerUnit()) and sS[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))] >= 1) != false
endfunction
function Wur takes nothing returns boolean
    return true
endfunction
function Wys takes nothing returns boolean
    return IsUnitType(GetFilterUnit(), UNIT_TYPE_HERO) != false
endfunction
function Wyu takes nothing returns boolean
    return GetUnitTypeId(GetDyingUnit()) == 1848652086 and UnitHasItemOfTypeBJ(GetKillingUnit(), $49303131) == false and IsPlayerInForce(GetOwningPlayer(GetKillingUnit()), ns)
endfunction
function X2S takes nothing returns boolean
    local item L2S
    call Vqs(10.)
    set RJ = 2003790951
    set L2S = rgt(RJ, LJ, XJ)
    call jXt(L2S, false)
    call Rect(0., 0., 128., 128.)
    set TJ = P3w(KP - HP) / 128 + 1
    set YJ = P3w(LP - JP) / 128 + 1
    set L2S = null
    return true
endfunction
function X4s takes nothing returns boolean
    set LH = "0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ"
    set XH = "0123456789"
    call vQt(XH)
    call vQt(LH)
    return true
endfunction
function j4i takes nothing returns boolean
    return GetUnitTypeId(GetTriggerUnit()) == 1848652360 or GetUnitTypeId(GetTriggerUnit()) == 1848652361 or GetUnitTypeId(GetTriggerUnit()) == 1848652356 or GetUnitTypeId(GetTriggerUnit()) == 1848652358 or GetUnitTypeId(GetTriggerUnit()) == 1848652357 or GetUnitTypeId(GetTriggerUnit()) == 1848652359 or GetUnitTypeId(GetTriggerUnit()) == 1848652366 or GetUnitTypeId(GetTriggerUnit()) == 1848652365 or GetUnitTypeId(GetTriggerUnit()) == 1848652364 or GetUnitTypeId(GetTriggerUnit()) == 1848652367 or GetUnitTypeId(GetTriggerUnit()) == 1848652362 or GetUnitTypeId(GetTriggerUnit()) == 1848652363
endfunction
function X8S takes nothing returns boolean
    return j4i()
endfunction
function X9u takes nothing returns boolean
    return GetSpellAbilityId() == 1093678153 and IsPlayerInForce(GetOwningPlayer(GetTriggerUnit()), Gi)
endfunction
function BVw takes nothing returns boolean
    return Ri <= 50
endfunction
function Rsi takes nothing returns boolean
    return Ri <= 50
endfunction
function Soi takes string toi returns integer
    local integer ioi
    set DSw[ASw] = toi
    set ASw = ASw + 1
    if NX == 0 then
        if MX < 32768 then
            set MX = MX + 1
            set ioi = MX
            set wC[ioi] = 833
        else
            call tNr("Out of memory: Could not create CallbackSingle_doAfter_Imp2.", "when calling error in Imp2, line 51")
            set ioi = 0
        endif
    else
        set NX = NX - 1
        set ioi = BX[NX]
        set wC[ioi] = 833
    endif
    set ASw = ASw - 1
    return ioi
endfunction
function V2u takes nothing returns boolean
    return yi == 3
endfunction
function dqi takes nothing returns boolean
    return Ri <= 50
endfunction
function m4u takes nothing returns boolean
    return yi == 4
endfunction
function mGr takes nothing returns boolean
    return yi == 2
endfunction
function mIt takes nothing returns boolean
    return Ri <= 50
endfunction
function p0u takes nothing returns boolean
    return yi == 1
endfunction
function LMw takes string JMw returns nothing
    local integer KMw
    set DSw[ASw] = JMw
    set ASw = ASw + 1
    set Ti = 0
    set bw = false
    set yi = GetRandomInt($00000001, $00000004)
    set Ri = GetRandomInt($00000001, $00000064)
    call DisplayTimedTextToForce(Rc[$0000000B], 15., "|cffffcc00You now have " + fju(P3w(lW)) + " seconds to pick the correct portal or the stage will reset. Picking the wrong portal also resets the stage.|r")
    call StartTimerBJ(di, false, lW)
    call EnableTrigger(YR)
    set fi = CreateTimerDialogBJ(di, "|cffff0000Stage Reset in|r")
    call ForForce(Rc[$0000000B], Jmw)
    call EnableTrigger(dR)
    call EnableTrigger(fR)
    call EnableTrigger(RR)
    call EnableTrigger(TR)
    if m4u() then
        if dqi() then
            call DisplayTimedTextToForce(Rc[$0000000B], lW, "|cff87ceebClue|r: |Cff00ff00A has something but I have none, B has something but I have none, C has something but I have none. Yet I am the correct path though I have none.|r")
        else
            call DisplayTimedTextToForce(Rc[$0000000B], lW, "|cff87ceebClue|r: |Cff00ff00Repent and be saved.|r")
        endif
    endif
    if mGr() then
        if mIt() then
            call DisplayTimedTextToForce(Rc[$0000000B], lW, "|cff87ceebClue|r: |Cff00ff00A says the correct path's Northwest. B says its Southwest. C says its Southeast. Then A says C is lying, and C says A is lying. B says hes not lying. Which one is telling the truth?|r")
        else
            call DisplayTimedTextToForce(Rc[$0000000B], lW, "|cff87ceebClue|r: |Cff00ff00I am that which is closest to the buried dead.|r")
        endif
    endif
    if V2u() then
        if Rsi() then
            call DisplayTimedTextToForce(Rc[$0000000B], lW, "|cff87ceebClue|r: |Cff00ff00The correct path is the path which looks the most different from all the other wrong paths.|r")
        else
            call DisplayTimedTextToForce(Rc[$0000000B], lW, "|cff87ceebClue|r: |Cff00ff00ME BREAK YOU!|r")
        endif
    endif
    if p0u() then
        if BVw() then
            call DisplayTimedTextToForce(Rc[$0000000B], lW, "|cff87ceebClue|r: |Cff00ff00The Correct Path is Southeast.|r")
        else
            call DisplayTimedTextToForce(Rc[$0000000B], lW, "|cff87ceebClue|r: |Cff00ff00The correct path is near something unique. This something burns like the rest but is still unique. It is the closest to the correct path, like the rest.|r")
        endif
    endif
    set KMw = Soi("when calling alloc_CallbackSingle_doAfter_Imp2 in Imp2, line 51")
    call RUs(KMw)
    call Ybr(1., KMw, "when calling doAfter in Imp2, line 51")
    set ASw = ASw - 1
endfunction
function XAr takes nothing returns nothing
    set ASw = 0
    call LMw("via function reference Imp2, line 198")
endfunction
function XAt takes nothing returns nothing
    call PanCameraToTimedLocForPlayer(GetEnumPlayer(), vo, 0.)
    call TriggerExecute(MT)
endfunction
function rDr takes nothing returns boolean
    return GetItemTypeId(GetManipulatedItem()) == 1227895895 or GetItemTypeId(GetManipulatedItem()) == 1227895898 or GetItemTypeId(GetManipulatedItem()) == 1227895896 or GetItemTypeId(GetManipulatedItem()) == 1227895897 or GetItemTypeId(GetManipulatedItem()) == 1227895894
endfunction
function XHt takes nothing returns boolean
    return RectContainsUnit(cb, GetTriggerUnit()) and Zo[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))] == 1 and rDr() and IsPlayerInForce(GetOwningPlayer(GetTriggerUnit()), At) == false
endfunction
function Fgu takes string hgu returns boolean
    set DSw[ASw] = hgu
    set ASw = ASw + 1
    call jts("when calling new_HashMap in VertexCalculator, line 42")
    call jts("when calling new_HashMap in VertexCalculator, line 43")
    set ASw = ASw - 1
    return true
endfunction
function XKt takes nothing returns boolean
    set ASw = 0
    return Fgu("via function reference VertexCalculator, line 11")
endfunction
function XLt takes nothing returns nothing
    call PanCameraToTimedLocForPlayer(GetEnumPlayer(), br[1 + GetPlayerId(GetEnumPlayer())], 0.)
    set iw[GetPlayerId(GetEnumPlayer())] = GetPlayerId(GetEnumPlayer())
    set Sw[GetPlayerId(GetEnumPlayer())] = pr[wS[Ni * 100 + GetPlayerId(GetEnumPlayer())]]
endfunction
function s5S takes nothing returns boolean
    return ds[1 + GetPlayerId(GetOwningPlayer(GetKillingUnit()))] >= 15
endfunction
function XMi takes nothing returns nothing
    set ds[1 + GetPlayerId(GetOwningPlayer(GetKillingUnit()))] = ds[1 + GetPlayerId(GetOwningPlayer(GetKillingUnit()))] + 1
    if s5S() then
        call QuestMessageBJ(MwS(GetOwningPlayer(GetKillingUnit())), $00000002, "|cffffcc003rd Job Advancement Quest Completed|r.")
        call ForceAddPlayer(Vr, GetOwningPlayer(GetKillingUnit()))
    else
        call QuestMessageBJ(MwS(GetOwningPlayer(GetKillingUnit())), $00000001, I2S(ds[1 + GetPlayerId(GetOwningPlayer(GetKillingUnit()))]) + " Enraged Owlkin(s) killed.")
    endif
endfunction
function XZu takes nothing returns boolean
    return ar[1 + GetPlayerId(GetOwningPlayer(GetKillingUnit()))] == 1
endfunction
function n3i takes nothing returns boolean
    return ar[1 + GetPlayerId(GetOwningPlayer(GetKillingUnit()))] >= 15
endfunction
function XMw takes nothing returns nothing
    set ar[1 + GetPlayerId(GetOwningPlayer(GetKillingUnit()))] = ar[1 + GetPlayerId(GetOwningPlayer(GetKillingUnit()))] + 1
    if n3i() then
        call QuestMessageBJ(MwS(GetOwningPlayer(GetKillingUnit())), $00000002, "|cffffcc00Hunter In The Night|r Quest Requirement Completed.")
    else
        call QuestMessageBJ(MwS(GetOwningPlayer(GetKillingUnit())), $00000001, I2S(ar[1 + GetPlayerId(GetOwningPlayer(GetKillingUnit()))]) + " \"Shadow Witch(es)\" killed.")
    endif
    if XZu() then
        call DisplayTimedTextToForce(MwS(GetOwningPlayer(GetKillingUnit())), 12., "|cffffcc00" + GetPlayerName(GetOwningPlayer(GetKillingUnit())) + "|r : Hmm, so these \"Shadow Witches\" are just banshees preying on little children. What a misleading rumour...either way, I've got to get rid of 15 of them.")
    endif
endfunction
function XNs takes nothing returns nothing
endfunction
function XNw takes nothing returns boolean
    return GetUnitTypeId(GetTriggerUnit()) == 1211117640 and GetUnitTypeId(GetOrderTargetUnit()) == 1747988818 and UnitHasItemOfTypeBJ(GetTriggerUnit(), $49303133) == false and IsPlayerInForce(GetOwningPlayer(GetTriggerUnit()), Rs) and IsPlayerInForce(GetOwningPlayer(GetTriggerUnit()), Vr) and IsUnitInGroup(GetTriggerUnit(), kpu(300., GetUnitLoc(GetOrderTargetUnit())))
endfunction
function XOs takes nothing returns nothing
    set uO = Player($00000005)
    call TriggerExecute(OY)
endfunction
function XRr takes nothing returns nothing
    call SetUnitInvulnerable(GetEnumUnit(), true)
    call PauseUnit(GetEnumUnit(), true)
endfunction
function XTr takes nothing returns nothing
    call SetHeroLevelBJ(GetTriggerUnit(), $00000001, false)
    call ReplaceUnitBJ(GetEnteringUnit(), $48303042, $00000002)
    set Fu[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))] = bj_lastReplacedUnit
    call SetHeroLevel(Fu[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))], $00000001, true)
    call UnitStripHeroLevel(Fu[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))], $00000001)
    call DisplayTimedTextToForce(MwS(GetOwningPlayer(GetTriggerUnit())), 5., "|cffff8c00Congratulations! You have advanced to the 1st Job!|r")
    call SetUnitPositionLoc(Fu[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))], GetRectCenter(kO))
    call PanCameraToTimedLocForPlayer(GetOwningPlayer(GetTriggerUnit()), GetRectCenter(kO), 0.)
    call TriggerExecute(MT)
    call SelectUnitForPlayerSingle(Fu[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))], GetOwningPlayer(GetTriggerUnit()))
    call PlaySoundBJ(se)
endfunction
function XUs takes nothing returns boolean
    return (GetItemTypeId(GetManipulatedItem()) == 1227895107 and IsUnitType(GetTriggerUnit(), UNIT_TYPE_HERO) and GetHeroLevel(GetTriggerUnit()) >= 15 and IsPlayerInForce(GetOwningPlayer(GetTriggerUnit()), IS[$00000007]) == false and IsPlayerInForce(GetOwningPlayer(GetTriggerUnit()), PS[$00000007]) == false and rw[(1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))) * 1000 + fkS(GetTriggerUnit())] == false) != false
endfunction
function XXs takes nothing returns nothing
    call ForceAddPlayer(Rs, GetOwningPlayer(GetTriggerUnit()))
    call ForceAddPlayer(Cr, GetOwningPlayer(GetTriggerUnit()))
    call DisplayTextToForce(MwS(GetOwningPlayer(GetTriggerUnit())), "|cffffcc00Shaman Maz'tha|r : |cff87ceebYou are here. I know what it is you seek, Archdruid, but I cannot give it to you until you can prove your worth. Usually I would ask you to attempt to tame the storms of Vajima, but this is a special case. I am to purify this grove, but I cannot do so because of the native Owlkins here. They are driven to madness by the taint, and they must be put out of their suffering. Kill 15 of them for me, and you shall receive my recommendation.")
    call QuestSetDescription(Lr[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))], "I need to end the suffering of 15 of the Enraged Owlkins here.")
endfunction
function XYs takes nothing returns boolean
    return (IsUnitType(GetTriggerUnit(), UNIT_TYPE_HERO) and IsPlayerInForce(GetOwningPlayer(GetTriggerUnit()), Uo[$00000001]) and IsPlayerInForce(GetOwningPlayer(GetTriggerUnit()), Uo[$00000004]) == false and Zo[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))] == 0) != false
endfunction
function Xar takes nothing returns boolean
    return GetSpellAbilityId() == 1093677624
endfunction
function HUs takes nothing returns boolean
    return qs == 2
endfunction
function Xct takes nothing returns nothing
    if HUs() then
        call PlaySoundAtPointBJ(ae, 100., GetUnitLoc(GetTriggerUnit()), 0.)
        set qs = 3
        call ModifyGateBJ($00000001, kG)
        call DisplayTimedTextToForce(Rc[$00000005], 5., "|cffffcc00You hear the gate open. Must have been the correct pedal.|r")
    else
        set qs = 0
        call DisplayTimedTextToForce(Rc[$00000005], 5., "|cffff0000You hear a ringing sound. All pedals were reset!|r")
    endif
endfunction
function Wxu takes nothing returns boolean
    return qs == 4
endfunction
function Xdi takes nothing returns nothing
    if Wxu() then
        call PlaySoundBJ(ne)
        set qs = 5
        call DisplayTimedTextToForce(Rc[$00000005], 5., "|cffffcc00You hear a click sound and know you have stepped on the correct pedal.|r")
    else
        set qs = 0
        call DisplayTimedTextToForce(Rc[$00000005], 5., "|cffff0000You hear a ringing sound. All pedals were reset!|r")
    endif
endfunction
function Xdr takes nothing returns boolean
    set LD = 340282366920938000000000000000000000000.
    set XD =- 340282366920938000000000000000000000000.
    return true
endfunction
function QPu takes string vPu returns integer
    local integer mPu
    set DSw[ASw] = vPu
    set ASw = ASw + 1
    if NX == 0 then
        if MX < 32768 then
            set MX = MX + 1
            set mPu = MX
            set wC[mPu] = 1009
        else
            call tNr("Out of memory: Could not create CallbackSingle_doAfter_addAction_JobAdvancementQuestHandler.", "when calling error in JobAdvancementQuestHandler, line 939")
            set mPu = 0
        endif
    else
        set NX = NX - 1
        set mPu = BX[NX]
        set wC[mPu] = 1009
    endif
    set ASw = ASw - 1
    return mPu
endfunction
function ZGt takes string QGt returns nothing
    local dialog WGt
    local integer EGt
    set DSw[ASw] = QGt
    set ASw = ASw + 1
    set WGt = DialogCreate()
    call DialogDisplay(nD, WGt, true)
    set EGt = QPu("when calling alloc_CallbackSingle_doAfter_addAction_JobAdvancementQuestHandler in JobAdvancementQuestHandler, line 939")
    call RUs(EGt)
    set Tww_2159[EGt] = WGt
    call Ybr(0., EGt, "when calling doAfter in JobAdvancementQuestHandler, line 939")
    set ASw = ASw - 1
    set WGt = null
endfunction
function Xis takes nothing returns nothing
    set ASw = 0
    call ZGt("via function reference JobAdvancementQuestHandler, line 936")
endfunction
function BXu takes real CXu, real VXu returns integer
    return GetTerrainType(CXu, VXu)
endfunction
function FHs takes rect THs, string YHs returns nothing
    local group GHs
    local group gHs
    local unit hHs
    set DSw[ASw] = YHs
    set ASw = ASw + 1
    set GHs = Dit(THs, "when calling getUnitsInRect in Imp3DragonFortress, line 281")
    set gHs = XbS(GHs)
    loop
        exitwhen not hJw(gHs)
        set hHs = tPr(gHs)
        if t_u(hHs) and BXu(ANw(hHs), XSw) != l2s(Iji("Irbk", "when calling unObfuscate in Imp3DragonFortress, line 283"), "when calling fromRawCode in Imp3DragonFortress, line 283") then
            call uCi(hHs, "when calling imp3MazeCheckDeath in Imp3DragonFortress, line 284")
        endif
    endloop
    call lxs(gHs)
    call Sju(GHs, "when calling release in Imp3DragonFortress, line 285")
    set ASw = ASw - 1
    set GHs = null
    set gHs = null
    set hHs = null
endfunction
function oKr takes unit SKr, string cKr returns nothing
    set DSw[ASw] = cKr
    set ASw = ASw + 1
    call uCi(SKr, "when calling imp3MazeCheckDeath in Imp3DragonFortress, line 345")
    set ASw = ASw - 1
endfunction
function uuu takes string Jwu returns nothing
    local integer Kwu
    local unit Lwu
    local real Xwu
    local real Cwu
    local group Vwu
    local group Bwu
    local unit Nwu
    local real Mwu
    local real wuu
    set DSw[ASw] = Jwu
    set ASw = ASw + 1
    set Kwu = c5r(TW, "when calling iterator in Imp3DragonFortress, line 295")
    loop
        exitwhen not Tji(Kwu)
        set Lwu = iCu(LXi(Kwu), "when calling unitFromIndex in Imp3DragonFortress, line 295")
        if Lwu != null and yXu(Lwu) then
            set Mwu = ANw(Lwu)
            set wuu = XSw
            set Xwu = Mwu
            set Cwu = wuu
            set Vwu = LLt(Xwu, Cwu, 100., "when calling getUnitsInRange in Imp3DragonFortress, line 298")
            set Bwu = XbS(Vwu)
            loop
    exitwhen not hJw(Bwu)
    set Nwu = tPr(Bwu)
    if Nwu != null and t_u(Nwu) and yXu(Nwu) and Nwu != Lwu then
                    call oKr(Nwu, "when calling imp3MazeCheckDeathFireBolt in Imp3DragonFortress, line 302")
    endif
            endloop
            call lxs(Bwu)
            call Sju(Vwu, "when calling release in Imp3DragonFortress, line 303")
        endif
    endloop
    call vms(Kwu, "when calling close in Imp3DragonFortress, line 295")
    set ASw = ASw - 1
    set Lwu = null
    set Vwu = null
    set Bwu = null
    set Nwu = null
endfunction
function ABr takes string PBr returns nothing
    set DSw[ASw] = PBr
    set ASw = ASw + 1
    call FHs(Il, "when calling imp3MazeCheckHitTerrain in Imp3DragonFortress, line 288")
    call FHs(Pl, "when calling imp3MazeCheckHitTerrain in Imp3DragonFortress, line 289")
    call FHs(Al, "when calling imp3MazeCheckHitTerrain in Imp3DragonFortress, line 290")
    call FHs(Dl, "when calling imp3MazeCheckHitTerrain in Imp3DragonFortress, line 291")
    call uuu("when calling imp3MazeCheckHitFireBolt in Imp3DragonFortress, line 292")
    set ASw = ASw - 1
endfunction
function Xjt takes nothing returns nothing
    set ASw = 0
    call ABr("via function reference Imp3DragonFortress, line 1616")
endfunction
function Xor takes nothing returns nothing
    if u[0] != 0 or r[$00000000] != 0. or s[$00000000] != 0. or t[$00000000] != 0. or i[$00000000] != 0. then
        set du = false
    else
        set du = true
    endif
endfunction
function Xsi takes nothing returns boolean
    return IsUnitEnemy(GetFilterUnit(), GetOwningPlayer(GetTriggerUnit()))
endfunction
function sIr takes rect NUr, real MUr, string wIr returns nothing
    local unit uIr
    local timer rIr
    set DSw[ASw] = wIr
    set ASw = ASw + 1
    if Jyr(vW, Ici(NUr), "when calling has in Imp3DragonFortress, line 429") then
        set uIr = iCu(wps(vW, Ici(NUr), "when calling get in Imp3DragonFortress, line 430"), "when calling unitFromIndex in Imp3DragonFortress, line 430")
        if MUr >= yW then
            call dii(Iji("Your insanity has lead you to take your own life...", "when calling unObfuscate in Imp3DragonFortress, line 432"), 5., eDs(uIr))
            call Tri(uIr)
        elseif MUr == 30. then
            call dii(Iji("Better get outta here fast...", "when calling unObfuscate in Imp3DragonFortress, line 435"), 5., eDs(uIr))
        elseif MUr == 60. then
            call dii(Iji("You start to feel some discomfort being here...", "when calling unObfuscate in Imp3DragonFortress, line 437"), 5., eDs(uIr))
        elseif MUr == 90. then
            call dii(Iji("You hear voices in your head telling you you're never getting out...", "when calling unObfuscate in Imp3DragonFortress, line 439"), 5., eDs(uIr))
        endif
    else
        set rIr = HCs(wps(LW, Ici(NUr), "when calling get in Imp3DragonFortress, line 441"), "when calling timerFromIndex in Imp3DragonFortress, line 441")
        if rIr != null then
            call Hus(rIr)
            call GVw(KW, Ici(NUr), B5r(0.), "when calling put in Imp3DragonFortress, line 444")
        endif
    endif
    set ASw = ASw - 1
    set uIr = null
    set rIr = null
endfunction
function y3w takes string l3w returns nothing
    local real b3w
    set DSw[ASw] = l3w
    set ASw = ASw + 1
    set b3w = dMw(wps(KW, Ici(Al), "when calling get in Imp3DragonFortress, line 458"))
    call GVw(KW, Ici(Al), B5r(b3w + 1.), "when calling put in Imp3DragonFortress, line 459")
    call sIr(Al, b3w, "when calling imp3MazeCheckTimeout in Imp3DragonFortress, line 460")
    set ASw = ASw - 1
endfunction
function Xut takes nothing returns nothing
    set ASw = 0
    call y3w("via function reference Imp3DragonFortress, line 512")
endfunction
function Xvu takes nothing returns boolean
    return IsUnitType(GetFilterUnit(), UNIT_TYPE_HERO) != false
endfunction
function Xyu takes nothing returns boolean
    return true
endfunction
function Y1r takes nothing returns boolean
    return c8w(GetTriggerUnit(), ck) and GetSpellAbilityId() == Ak
endfunction
function Y4u takes nothing returns boolean
    return IsUnitType(GetFilterUnit(), UNIT_TYPE_HERO) == false
endfunction
function Y5r takes nothing returns nothing
    set vs[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))] = 2
    call DisplayTextToForce(MwS(GetOwningPlayer(GetTriggerUnit())), "|cffffcc00You have obtained some Holy Water from the fountain.|r")
    call QuestSetDescription(Lr[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))], "I need to get back to Priestess Shari.")
endfunction
function kVi takes nothing returns boolean
    return GetSpellAbilityId() == 1093677397 or GetSpellAbilityId() == 1093677653 or GetSpellAbilityId() == 1093678936
endfunction
function HEu takes nothing returns boolean
    return kVi()
endfunction
function MFS takes nothing returns boolean
    return IsUnitInGroup(GetTriggerUnit(), mo) == false
endfunction
function bnu takes nothing returns boolean
    return sS[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))] == 2 and oS[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))] == 1
endfunction
function mLw takes nothing returns boolean
    return GetSpellAbilityId() == 1093677396 or GetSpellAbilityId() == 1093677652 or GetSpellAbilityId() == 1093678935
endfunction
function s5u takes nothing returns boolean
    return mLw()
endfunction
function yEu takes nothing returns boolean
    return sS[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))] == 2 and oS[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))] == 1
endfunction
function Y6r takes nothing returns nothing
    call SetUnitAnimation(GetTriggerUnit(), "spell")
    call PauseUnit(GetTriggerUnit(), true)
    call n6t(.2)
    if HEu() then
        call ForceAddPlayer(us, GetOwningPlayer(GetTriggerUnit()))
        call SetPlayerAbilityAvailableBJ(false, $41303154, GetOwningPlayer(GetTriggerUnit()))
        call SetPlayerAbilityAvailableBJ(false, $41303254, GetOwningPlayer(GetTriggerUnit()))
        call SetPlayerAbilityAvailableBJ(false, $41303757, GetOwningPlayer(GetTriggerUnit()))
        if yEu() then
            call UnitAddAbility(GetTriggerUnit(), $41303854)
        endif
    endif
    if s5u() then
        call ForceAddPlayer(us, GetOwningPlayer(GetTriggerUnit()))
        call SetPlayerAbilityAvailableBJ(false, $41303155, GetOwningPlayer(GetTriggerUnit()))
        call SetPlayerAbilityAvailableBJ(false, $41303255, GetOwningPlayer(GetTriggerUnit()))
        call SetPlayerAbilityAvailableBJ(false, $41303758, GetOwningPlayer(GetTriggerUnit()))
        if bnu() then
            call UnitAddAbility(GetTriggerUnit(), $41303854)
        endif
    endif
    if MFS() then
        call PauseUnit(GetTriggerUnit(), false)
        call SetUnitAnimation(GetTriggerUnit(), "stand")
    endif
endfunction
function Y6t takes nothing returns nothing
    call PauseUnit(GetEnumUnit(), true)
    call SetUnitInvulnerable(GetEnumUnit(), true)
endfunction
function Y7i takes nothing returns boolean
    if Jc != 2 then
        set bS = lVs(GetTriggerPlayer(), Condition(Vyw))
        call GroupAddGroup(bS, Lc)
        call DestroyGroup(bS)
    endif
    return IsPlayerInForce(GetTriggerPlayer(), Rc[$0000000C]) and Jc == 2
endfunction
function YFs takes nothing returns boolean
    return GetUnitTypeId(GetTriggerUnit()) == 1848651832 and GetUnitTypeId(GetKillingUnit()) == 1211117634 and IsPlayerInForce(GetOwningPlayer(GetKillingUnit()), nr)
endfunction
function YGt takes nothing returns boolean
    return (GetItemTypeId(GetManipulatedItem()) == 1227895893 and IsUnitType(GetTriggerUnit(), UNIT_TYPE_HERO) and IsPlayerInForce(GetOwningPlayer(GetTriggerUnit()), Uo[$00000001]) == false and Zo[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))] == 1 and Po[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))] == 3 and Eo[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))] >= 125) != false
endfunction
function YHu takes nothing returns boolean
    return GetUnitTypeId(GetTriggerUnit()) == 1211117637 and IsPlayerInForce(GetOwningPlayer(GetTriggerUnit()), js) and vs[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))] == 4
endfunction
function YLu takes nothing returns nothing
    call ForceAddPlayer(ii, GetOwningPlayer(GetKillingUnit()))
    call QuestSetDescription(st[1 + GetPlayerId(GetOwningPlayer(GetKillingUnit()))], "I should get back to Nazgul and tell him I have killed Lord De Seis and am willing to lose my humanity...")
    call QuestMessageBJ(MwS(GetOwningPlayer(GetKillingUnit())), $00000002, "|cffffcc00I have killed Lord De Seis. I should get back to Nazgul|r.")
endfunction
function YMi takes nothing returns boolean
    return IsUnitType(GetFilterUnit(), UNIT_TYPE_HERO) == false
endfunction
function YMr takes nothing returns nothing
    call ForceAddPlayer(fs, GetOwningPlayer(GetTriggerUnit()))
    call ForceAddPlayer(Cr, GetOwningPlayer(GetTriggerUnit()))
    call DisplayTextToForce(MwS(GetOwningPlayer(GetTriggerUnit())), "|cffffcc00Master Ember|r : |cff87ceebYou managed to get this far...well done, mage. However, as you have seen, the Arcane Sanctuary is no longer as peaceful as it should be. It has been overrun with minions from another dimension and I want them gone. However, since you're here, it makes things easier abit. Kill 30 of the minions, and you shall earn my recommendation.")
    call QuestSetDescription(Lr[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))], "I need to kill 30 minions in the Arcane Sanctuary. Any of them will suffice.")
endfunction
function YNr takes nothing returns boolean
    return (UnitHasItemOfTypeBJ(GetEventDamageSource(), $4930325A) and IsUnitType(GetTriggerUnit(), UNIT_TYPE_STRUCTURE) == false) != false
endfunction
function YNs takes nothing returns boolean
    return IsUnitType(GetTriggerUnit(), UNIT_TYPE_HERO) != false
endfunction
function U4s takes string E4s returns integer
    local integer Z4s
    set DSw[ASw] = E4s
    set ASw = ASw + 1
    if NX == 0 then
        if MX < 32768 then
            set MX = MX + 1
            set Z4s = MX
            set wC[Z4s] = 1034
        else
            call tNr("Out of memory: Could not create CallbackSingle_doAfter_addAction_doAfter_FateDestinyUnlocker.", "when calling error in FateDestinyUnlocker, line 717")
            set Z4s = 0
        endif
    else
        set NX = NX - 1
        set Z4s = BX[NX]
        set wC[Z4s] = 1034
    endif
    set ASw = ASw - 1
    return Z4s
endfunction
function WHu takes string mHu returns integer
    local integer QHu
    set DSw[ASw] = mHu
    set ASw = ASw + 1
    if NX == 0 then
        if MX < 32768 then
            set MX = MX + 1
            set QHu = MX
            set wC[QHu] = 1033
        else
            call tNr("Out of memory: Could not create CallbackSingle_doAfter_addAction_doAfter_FateDestinyUnlocker.", "when calling error in FateDestinyUnlocker, line 711")
            set QHu = 0
        endif
    else
        set NX = NX - 1
        set QHu = BX[NX]
        set wC[QHu] = 1033
    endif
    set ASw = ASw - 1
    return QHu
endfunction
function pIu takes string bIu returns integer
    local integer yIu
    set DSw[ASw] = bIu
    set ASw = ASw + 1
    if NX == 0 then
        if MX < 32768 then
            set MX = MX + 1
            set yIu = MX
            set wC[yIu] = 1032
        else
            call tNr("Out of memory: Could not create CallbackSingle_doAfter_addAction_doAfter_FateDestinyUnlocker.", "when calling error in FateDestinyUnlocker, line 699")
            set yIu = 0
        endif
    else
        set NX = NX - 1
        set yIu = BX[NX]
        set wC[yIu] = 1032
    endif
    set ASw = ASw - 1
    return yIu
endfunction
function wei takes string Npi returns integer
    local integer Mpi
    set DSw[ASw] = Npi
    set ASw = ASw + 1
    if NX == 0 then
        if MX < 32768 then
            set MX = MX + 1
            set Mpi = MX
            set wC[Mpi] = 1035
        else
            call tNr("Out of memory: Could not create CallbackSingle_doAfter_addAction_doAfter_FateDestinyUnlocker.", "when calling error in FateDestinyUnlocker, line 720")
            set Mpi = 0
        endif
    else
        set NX = NX - 1
        set Mpi = BX[NX]
        set wC[Mpi] = 1035
    endif
    set ASw = ASw - 1
    return Mpi
endfunction
function nkt takes string ikt returns nothing
    local unit Skt
    local unit ckt
    local player okt
    local integer Okt
    local integer lkt
    local integer bkt
    local integer ykt
    local integer pkt
    local real ekt
    local real qkt
    local real akt
    set DSw[ASw] = ikt
    set ASw = ASw + 1
    set Skt = GetTriggerUnit()
    set ckt = GetOrderTargetUnit()
    set okt = eDs(Skt)
    if Skt != null and ckt != null and t_u(Skt) and boS(Skt) == 300 and ckt == NY and fYr(ANw(ckt), XSw, ANw(Skt), XSw) <= 300. and(not GpS(Lv, hgr(okt), "when calling has in FateDestinyUnlocker, line 693")) then
        call vwt(Lv, hgr(okt), "when calling add in FateDestinyUnlocker, line 694")
        if QUu(Skt, BF) then
            call dii(Iji("|cffffcc00The Angel of Clouds|r: You are never stopping to impress me, mortal. That which you wield, the Void Prism, is a legendary artifact. If my knowledge of legends does not elude me, it was said to hold an immense power, a corrupting power... Yet this that you hold seems to be like a shard of its past, the glow is very weak... You must find a way how to recharge its power to unlock its true potential... But be wary, don't get drunk on sensation of infinite power... ", "when calling unObfuscate in FateDestinyUnlocker, line 697"), 30., okt)
            set ekt = 10. + 5. + 1.
            set Okt = pIu("when calling alloc_CallbackSingle_doAfter_addAction_doAfter_FateDestinyUnlocker in FateDestinyUnlocker, line 699")
            call RUs(Okt)
            set Q7[Okt] = okt
            call Ybr(ekt, Okt, "when calling doAfter in FateDestinyUnlocker, line 699")
        elseif GpS(Mv, hgr(okt), "when calling has in FateDestinyUnlocker, line 702") and QUu(Skt, l2s(Iji(am, "when calling unObfuscate in FateDestinyUnlocker, line 702"), "when calling fromRawCode in FateDestinyUnlocker, line 702")) then
            set lkt = ict(Skt, l2s(Iji(am, "when calling unObfuscate in FateDestinyUnlocker, line 703"), "when calling fromRawCode in FateDestinyUnlocker, line 703"))
            if lkt > 0 and lkt <= 2 then
    call dii(Iji("|cffffcc00The Angel of Clouds|r: You hold the key to the greatest power known. Tread lightly such immense power it could spell the end of you.  Mere mortals could never wield its full power. Show me that you're ready to cast aside your mortal body and I will show you how to go beyond your limits.", "when calling unObfuscate in FateDestinyUnlocker, line 705"), 15., okt)
            elseif lkt >= 3 then
    call dii(Iji("|cffffcc00The Angel of Clouds|r: You have done what nobody could imagine. The source of the Void, in your hands. I will now show you the way to reach your true potential. Now reach the top of the world to cast aside the curse of mortality... shuffle off this mortal coil and awake from the dream that was.", "when calling unObfuscate in FateDestinyUnlocker, line 708"), 15., okt)
    call vwt(Nv, hgr(okt), "when calling add in FateDestinyUnlocker, line 709")
            endif
            set qkt = 15. + .5
            set bkt = WHu("when calling alloc_CallbackSingle_doAfter_addAction_doAfter_FateDestinyUnlocker in FateDestinyUnlocker, line 711")
            call RUs(bkt)
            set W7[bkt] = okt
            call Ybr(qkt, bkt, "when calling doAfter in FateDestinyUnlocker, line 711")
        elseif not QUu(Skt, l2s(Iji(am, "when calling unObfuscate in FateDestinyUnlocker, line 714"), "when calling fromRawCode in FateDestinyUnlocker, line 714")) then
            call dii(Iji("|cffffcc00The Angel of Clouds|r: You have grown so strong I can't teach you anything new my child. You may go, defeat the Hell's servant Doombringer, fight the fearless Doppelganger, slay the four Dragons and venture into the unknown on ships, searching for the legendary artifacts... Only then will you realize your full potential!", "when calling unObfuscate in FateDestinyUnlocker, line 715"), 10., okt)
            set ykt = U4s("when calling alloc_CallbackSingle_doAfter_addAction_doAfter_FateDestinyUnlocker in FateDestinyUnlocker, line 717")
            call RUs(ykt)
            set E7[ykt] = okt
            call Ybr(10., ykt, "when calling doAfter in FateDestinyUnlocker, line 717")
            set akt = 10. + 5. + 1.
            set pkt = wei("when calling alloc_CallbackSingle_doAfter_addAction_doAfter_FateDestinyUnlocker in FateDestinyUnlocker, line 720")
            call RUs(pkt)
            set Z7[pkt] = okt
            call Ybr(akt, pkt, "when calling doAfter in FateDestinyUnlocker, line 720")
        else
            call eys(Lv, hgr(okt), "when calling remove in FateDestinyUnlocker, line 723")
        endif
    endif
    set ASw = ASw - 1
    set Skt = null
    set ckt = null
    set okt = null
endfunction
function YVt takes nothing returns nothing
    set ASw = 0
    call nkt("via function reference FateDestinyUnlocker, line 688")
endfunction
function Yas takes nothing returns nothing
    call RemoveUnit(GetEnumUnit())
endfunction
function Yci takes nothing returns boolean
    return GetUnitTypeId(GetTriggerUnit()) == 1211117875 and GetUnitTypeId(GetOrderTargetUnit()) == 1747989078 and IsPlayerInForce(GetOwningPlayer(GetTriggerUnit()), rt) == false and IsUnitInGroup(GetTriggerUnit(), kpu(300., GetUnitLoc(GetOrderTargetUnit()))) and GetHeroLevel(GetTriggerUnit()) >= 150
endfunction
function ehs takes nothing returns boolean
    return UnitInventoryCount(GetTriggerUnit()) != 6
endfunction
function Ydi takes nothing returns nothing
    if ehs() then
        call PlaySoundBJ(ce)
        call ForceAddPlayer(Cr, GetOwningPlayer(GetTriggerUnit()))
        call DisplayTextToForce(MwS(GetOwningPlayer(GetTriggerUnit())), "|cffffcc00Emry the Crusader|r : |cff87ceebYou have arrived. Perfect. I assume you are ready to become a crusader and help the people of Silvasia. Usually I would task you with killing some monsters. But you have already killed much during your travels so I will test you no more. Take this letter with my blessings and go.")
        set lw[GetPlayerId(GetOwningPlayer(GetTriggerUnit()))] = 1227894870
        call TriggerExecute(ow)
        call QuestSetDescription(Lr[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))], "I obtained the letter from Emry. Its time to advance.")
        call PlaySoundAtPointBJ(Oe, 100., GetUnitLoc(GetTriggerUnit()), 0.)
        call n6t(10.)
        call PlaySoundAtPointBJ(le, 100., GetUnitLoc(GetTriggerUnit()), 0.)
    else
        call PlaySoundBJ(oe)
        call DisplayTimedTextToForce(MwS(GetOwningPlayer(GetTriggerUnit())), 7., "|cffff0000Inventory full! Cannot receive recommendation!|r")
    endif
endfunction
function Yks takes nothing returns boolean
    set ASw = 0
    return Ior("via function reference Imp3DragonFortress, line 1659")
endfunction
function jNr takes nothing returns boolean
    return IsUnitEnemy(GetFilterUnit(), GetOwningPlayer(GetEventDamageSource()))
endfunction
function x2r takes nothing returns boolean
    return IsUnitAliveBJ(GetFilterUnit())
endfunction
function Yoi takes nothing returns boolean
    return GetBooleanAnd(jNr(), x2r())
endfunction
function G5u takes nothing returns boolean
    return GetSpellAbilityId() == 1093678167
endfunction
function gms takes nothing returns boolean
    return GetSpellAbilityId() == 1093678925
endfunction
function qis takes nothing returns boolean
    return GetSpellAbilityId() == 1093678916
endfunction
function Ypi takes nothing returns nothing
    call GroupAddUnit(GO, GetTriggerUnit())
    if qis() then
        set mc = GetUnitLoc(GetTriggerUnit())
        set vc = UFS(600., mc, Condition(Xbw))
        call ForGroupBJ(vc, Cbw)
        call RemoveLocation(mc)
        call DestroyGroup(vc)
    endif
    if gms() then
        set mc = GetUnitLoc(GetTriggerUnit())
        set vc = UFS(600., mc, Condition(Vbw))
        call ForGroupBJ(vc, Bbw)
        call RemoveLocation(mc)
        call DestroyGroup(vc)
    endif
    if G5u() then
        set mc = GetUnitLoc(GetTriggerUnit())
        set vc = UFS(550., mc, Condition(Nbw))
        call ForGroupBJ(vc, Mbw)
        call RemoveLocation(mc)
        call DestroyGroup(vc)
    endif
    call GroupRemoveUnit(GO, GetTriggerUnit())
endfunction
function Yus takes nothing returns boolean
    return IsUnitType(GetFilterUnit(), UNIT_TYPE_HERO) == false
endfunction
function Yvu takes nothing returns nothing
    call SetHeroLevelBJ(GetTriggerUnit(), $00000001, false)
    call ReplaceUnitBJ(GetEnteringUnit(), $48303035, $00000002)
    set Fu[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))] = bj_lastReplacedUnit
    call SetHeroLevel(Fu[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))], $00000001, true)
    call UnitStripHeroLevel(Fu[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))], $00000001)
    call DisplayTimedTextToForce(MwS(GetOwningPlayer(GetTriggerUnit())), 5., "|cffff8c00Congratulations! You have advanced to the 1st Job!|r")
    call SetUnitPositionLoc(Fu[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))], GetRectCenter(kO))
    call PanCameraToTimedLocForPlayer(GetOwningPlayer(GetTriggerUnit()), GetRectCenter(kO), 0.)
    call TriggerExecute(MT)
    call SelectUnitForPlayerSingle(Fu[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))], GetOwningPlayer(GetTriggerUnit()))
    call PlaySoundBJ(se)
endfunction
function Yxu takes nothing returns nothing
    call ForceRemovePlayer(rt, GetOwningPlayer(GetTriggerUnit()))
    call ForceRemovePlayer(ti, GetOwningPlayer(GetTriggerUnit()))
    call DisplayTextToForce(MwS(GetOwningPlayer(GetTriggerUnit())), "|cffffcc00Raven|r : |cff87ceebImpressive. Here, take this phantom blade and use it. It'll serve you well in the hidden arts of assassination and the shadow. Remember; a phantom assassin is weak in direct combat. If you can't kill him in a hit, you're half-dead.")
    call DestroyQuest(st[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))])
    set st[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))] = null
    call SetHeroLevelBJ(GetTriggerUnit(), $00000001, false)
    call ReplaceUnitBJ(GetTriggerUnit(), $4830324E, $00000002)
    call SelectUnitForPlayerSingle(bj_lastReplacedUnit, GetOwningPlayer(GetTriggerUnit()))
    call SetHeroLevel(bj_lastReplacedUnit, $00000001, true)
    call UnitStripHeroLevel(bj_lastReplacedUnit, $00000001)
endfunction
function Yys takes nothing returns nothing
    call DisableTrigger(GetTriggeringTrigger())
endfunction
function Z4w takes nothing returns nothing
    call SetUnitLifePercentBJ(GetEnumUnit(), 100.)
endfunction
function Z6i takes nothing returns boolean
    return GetUnitTypeId(GetDyingUnit()) == 1848652121 and GetUnitTypeId(GetKillingUnit()) == 1211117881 and IsPlayerInForce(GetOwningPlayer(GetKillingUnit()), rt)
endfunction
function Z7S takes nothing returns nothing
    call SetUnitPositionLoc(GetEnumUnit(), vo)
endfunction
function Qti takes integer vti, integer mti returns integer
    return BlzBitXor(vti, mti)
endfunction
function initPows takes nothing returns nothing
    local integer allPows
    local integer i_1
    local integer temp
    local integer i_2
    local integer temp_1
    set Ug[$00000000] = 1
    set allPows = 1
    set i_1 = 1
    set temp = Zg - 1
    loop
        exitwhen i_1 > temp
        set Ug[i_1] = Ug[i_1 - 1] * 2
        set allPows = d4w(allPows, Ug[i_1])
        set i_1 = i_1 + 1
    endloop
    set i_2 = 0
    set temp_1 = Zg - 1
    loop
        exitwhen i_2 > temp_1
        call Qti(allPows, Ug[i_2])
        set i_2 = i_2 + 1
    endloop
endfunction
function ZBu takes nothing returns boolean
    set Zg = 32
    call initPows()
    return true
endfunction
function gWu takes nothing returns boolean
    return GetUnitTypeId(GetTriggerUnit()) == 1211118160 or GetUnitTypeId(GetTriggerUnit()) == 1211118161
endfunction
function EQu takes nothing returns boolean
    return gWu()
endfunction
function mji takes nothing returns boolean
    return GetUnitTypeId(GetTriggerUnit()) == 1211118157 or GetUnitTypeId(GetTriggerUnit()) == 1211118156
endfunction
function KyS takes nothing returns boolean
    return mji()
endfunction
function Yct takes nothing returns boolean
    return GetUnitTypeId(GetTriggerUnit()) == 1211118131 or GetUnitTypeId(GetTriggerUnit()) == 1211118132
endfunction
function PIt takes nothing returns boolean
    return Yct()
endfunction
function gpS takes nothing returns boolean
    return GetUnitTypeId(GetTriggerUnit()) == 1211118149 or GetUnitTypeId(GetTriggerUnit()) == 1211118150
endfunction
function QrS takes nothing returns boolean
    return gpS()
endfunction
function gKs takes nothing returns boolean
    return GetUnitTypeId(GetTriggerUnit()) == 1211118152 or GetUnitTypeId(GetTriggerUnit()) == 1211118155
endfunction
function Rju takes nothing returns boolean
    return gKs()
endfunction
function Pnr takes nothing returns boolean
    return GetUnitTypeId(GetTriggerUnit()) == 1211118162 or GetUnitTypeId(GetTriggerUnit()) == 1211118163 or GetUnitTypeId(GetTriggerUnit()) == 1211118164 or GetUnitTypeId(GetTriggerUnit()) == 1211118165
endfunction
function SGu takes nothing returns boolean
    return Pnr()
endfunction
function aJt takes nothing returns boolean
    return GetUnitTypeId(GetTriggerUnit()) == 1211118159 or GetUnitTypeId(GetTriggerUnit()) == 1211118158
endfunction
function SPr takes nothing returns boolean
    return aJt()
endfunction
function SHr takes nothing returns boolean
    return GetUnitTypeId(GetTriggerUnit()) == 1211118146 or GetUnitTypeId(GetTriggerUnit()) == 1211118147
endfunction
function nFr takes nothing returns boolean
    return SHr()
endfunction
function ZGi takes nothing returns nothing
    set FS[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))] = GetUnitTypeId(GetTriggerUnit())
    set kS[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))] = GetTriggerUnit()
    call DialogClear(tS)
    if Rju() then
        call DialogSetMessage(tS, "Swordman's Tier 1 Limit Break Skill Tree")
        call DialogAddButtonBJ(tS, "Devastator Strike")
        set iS[$00000001] = bj_lastCreatedButton
        call DialogAddButtonBJ(tS, "Skill Description")
        set iS[$00000002] = bj_lastCreatedButton
    endif
    if PIt() then
        call DialogSetMessage(tS, "Initiate's Tier 1 Limit Break Skill Tree")
        call DialogAddButtonBJ(tS, "Arcane Explosion")
        set iS[$00000001] = bj_lastCreatedButton
        call DialogAddButtonBJ(tS, "Skill Description")
        set iS[$00000002] = bj_lastCreatedButton
    endif
    if KyS() then
        call DialogSetMessage(tS, "Templar's Tier 1 Limit Break Skill Tree")
        call DialogAddButtonBJ(tS, "Supernova")
        set iS[$00000001] = bj_lastCreatedButton
        call DialogAddButtonBJ(tS, "Skill Description")
        set iS[$00000002] = bj_lastCreatedButton
    endif
    if SPr() then
        call DialogSetMessage(tS, "Thief's Tier 1 Limit Break Skill Tree")
        call DialogAddButtonBJ(tS, "Speed Freak")
        set iS[$00000001] = bj_lastCreatedButton
        call DialogAddButtonBJ(tS, "Skill Description")
        set iS[$00000002] = bj_lastCreatedButton
    endif
    if EQu() then
        call DialogSetMessage(tS, "Witch Hunter's Tier 1 Limit Break Skill Tree")
        call DialogAddButtonBJ(tS, "Mark of the Wolverine")
        set iS[$00000001] = bj_lastCreatedButton
        call DialogAddButtonBJ(tS, "Skill Description")
        set iS[$00000002] = bj_lastCreatedButton
    endif
    if QrS() then
        call DialogSetMessage(tS, "Archer's Tier 1 Limit Break Skill Tree")
        call DialogAddButtonBJ(tS, "Energy Rush")
        set iS[$00000001] = bj_lastCreatedButton
        call DialogAddButtonBJ(tS, "Skill Description")
        set iS[$00000002] = bj_lastCreatedButton
    endif
    if nFr() then
        call DialogSetMessage(tS, "Acolyte's Tier 1 Limit Break Skill Tree")
        call DialogAddButtonBJ(tS, "Lex Divina")
        set iS[$00000001] = bj_lastCreatedButton
        call DialogAddButtonBJ(tS, "Skill Description")
        set iS[$00000002] = bj_lastCreatedButton
    endif
    if SGu() then
        call DialogSetMessage(tS, "Druid's Tier 1 Limit Break Skill Tree")
        call DialogAddButtonBJ(tS, "Cybele")
        set iS[$00000001] = bj_lastCreatedButton
        call DialogAddButtonBJ(tS, "Skill Description")
        set iS[$00000002] = bj_lastCreatedButton
    endif
    call DialogDisplayBJ(true, tS, GetOwningPlayer(GetTriggerUnit()))
endfunction
function iqu takes nothing returns boolean
    return IsPlayerInForce(GetOwningPlayer(GetTriggerUnit()), US)
endfunction
function ZHt takes nothing returns nothing
    if iqu() then
        call ForceRemovePlayer(pc[$00000005], GetOwningPlayer(GetTriggerUnit()))
        call ForceAddPlayer(ec[$00000005], GetOwningPlayer(GetTriggerUnit()))
        call ForceRemovePlayer(US, GetOwningPlayer(GetTriggerUnit()))
        call DestroyQuest(QS[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))])
        call PlaySoundBJ(pe)
        call DisplayTimedTextToForce(MwS(GetOwningPlayer(GetOrderedUnit())), 5., "|cffffcc00You have completed the Quest|r.")
        call DisplayTimedTextToForce(MwS(GetOwningPlayer(GetOrderedUnit())), 20., "|cffffcc00Arnold|r : Good gracious! There's really a city? I can't believe it! This could be a great discovery, recruit! You hear what I'm saying? I'll need you to prepare youself and report back to me. I'll give you further instructions.")
        call AddHeroXPSwapped(v, GetTriggerUnit(), true)
        call AdjustPlayerStateBJ($00003FC0, GetOwningPlayer(GetTriggerUnit()), PLAYER_STATE_RESOURCE_GOLD)
        set ww[(1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))) * 1000 + fkS(GetTriggerUnit())] = true
    else
        call DisplayTimedTextToForce(MwS(GetOwningPlayer(GetTriggerUnit())), 5., "|cffffcc00Arnold|r : What are you still doing here? Lives are at stake so go! Go! Go!")
    endif
endfunction
function UOi takes string vOi returns nothing
    local integer mOi
    local integer QOi
    local integer WOi
    local integer EOi
    local unit ZOi
    set DSw[ASw] = vOi
    set ASw = ASw + 1
    set mOi = c5r(gQ, "when calling iterator in JobAdvancementQuestHandler, line 223")
    loop
        exitwhen not Tji(mOi)
        set QOi = LXi(mOi)
        set WOi = xus(QOi, "when calling getCustomPlayer in JobAdvancementQuestHandler, line 224")
        set EOi = xMi(WOi, "when calling getCHero in JobAdvancementQuestHandler, line 225")
        if EOi != 0 then
            set ZOi = hqs(EOi, "when calling getHero in JobAdvancementQuestHandler, line 227")
            if ZOi != null and yXu(ZOi) and t_u(ZOi) then
    if mks(ZOi, $00000001) > k6w("909090908317", "when calling unObfuscateInt in JobAdvancementQuestHandler, line 229") or Q7t(ZOi, true) > k6w("9090908317", "when calling unObfuscateInt in JobAdvancementQuestHandler, line 230") or Ges(ZOi) > k6w("909090909048", "when calling unObfuscateInt in JobAdvancementQuestHandler, line 231") or JHt(ZOi, true) > k6w("9090908317", "when calling unObfuscateInt in JobAdvancementQuestHandler, line 232") or aSr(ZOi) > k6w("909090909048", "when calling unObfuscateInt in JobAdvancementQuestHandler, line 233") or str(ZOi, true) > k6w("9090908317", "when calling unObfuscateInt in JobAdvancementQuestHandler, line 234") then
                    if ZOi != null then
                        call GYS(ZOi, xvt(k6w("909085", "when calling unObfuscateInt in JobAdvancementQuestHandler, line 238")))
                        call YYu(ZOi, k6w("909085", "when calling unObfuscateInt in JobAdvancementQuestHandler, line 239"))
                    endif
                    call dii(Iji("Your actions seems to come from hacking! You are a fool!       ", "when calling unObfuscate in JobAdvancementQuestHandler, line 240"), 5., eDs(ZOi))
    endif
            endif
        endif
    endloop
    call vms(mOi, "when calling close in JobAdvancementQuestHandler, line 223")
    set su = true
    set ASw = ASw - 1
    set ZOi = null
endfunction
function ZLu takes nothing returns nothing
    set ASw = 0
    call UOi("via function reference JobAdvancementQuestHandler, line 1207")
endfunction
function ZNr takes nothing returns nothing
    call SetHeroLevelBJ(GetTriggerUnit(), $00000001, false)
    call ReplaceUnitBJ(GetEnteringUnit(), $48303038, $00000002)
    set Fu[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))] = bj_lastReplacedUnit
    call SetHeroLevel(Fu[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))], $00000001, true)
    call UnitStripHeroLevel(Fu[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))], $00000001)
    call DisplayTimedTextToForce(MwS(GetOwningPlayer(GetTriggerUnit())), 5., "|cffff8c00Congratulations! You have advanced to the 1st Job!|r")
    call SetUnitPositionLoc(Fu[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))], GetRectCenter(kO))
    call PanCameraToTimedLocForPlayer(GetOwningPlayer(GetTriggerUnit()), GetRectCenter(kO), 0.)
    call TriggerExecute(MT)
    call SelectUnitForPlayerSingle(Fu[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))], GetOwningPlayer(GetTriggerUnit()))
    call PlaySoundBJ(se)
endfunction
function ZOr takes nothing returns nothing
    set ss = GetRectCenter(UO)
    call SetUnitPositionLocFacingBJ(GetTriggerUnit(), ss, 270.)
    call PanCameraToTimedLocForPlayer(GetOwningPlayer(GetTriggerUnit()), ss, 0.)
    call TriggerExecute(MT)
    call RemoveLocation(ss)
endfunction
function xdu takes string gdu returns boolean
    local trigger hdu
    local integer Fdu
    local integer kdu
    local integer jdu
    set DSw[ASw] = gdu
    set ASw = ASw + 1
    set CL = 75.
    set VL = XQt("when calling new_LinkedList in Voidless_mechanics, line 25")
    set BL = false
    set NL = xMr("when calling new_IterableMap in Voidless_mechanics, line 29")
    set ML = XQt("when calling new_LinkedList in Voidless_mechanics, line 30")
    set wX = XQt("when calling new_LinkedList in Voidless_mechanics, line 31")
    set uX = xMr("when calling new_IterableMap in Voidless_mechanics, line 32")
    set rX = xMr("when calling new_IterableMap in Voidless_mechanics, line 33")
    set sX = XQt("when calling new_LinkedList in Voidless_mechanics, line 34")
    set tX = xMr("when calling new_IterableMap in Voidless_mechanics, line 35")
    set iX = xMr("when calling new_IterableMap in Voidless_mechanics, line 36")
    set SX = 400.
    set cX = 0.010
    set oX = false
    set OX = 0
    set lX = xMr("when calling new_IterableMap in Voidless_mechanics, line 45")
    set bX = MNu(ORIGIN_FRAME_WORLD_FRAME, $00000000)
    set yX = null
    set pX = null
    set eX = null
    set qX = null
    set aX = null
    set nX = null
    set dX = null
    set fX = null
    set RX = XQt("when calling new_LinkedList in Voidless_mechanics, line 60")
    set TX = jts("when calling new_HashMap in Voidless_mechanics, line 61")
    set YX = jts("when calling new_HashMap in Voidless_mechanics, line 62")
    set GX = 0
    set gX = false
    set hdu = CreateTrigger()
    call B2S(hdu, EEw)
    set fX = hdu
    set Fdu = 0
    set kdu = Lh
    loop
        exitwhen Fdu > kdu
        call mii(fX, aD[Fdu], OSKEY_LEFT, $00000000, true)
        call mii(fX, aD[Fdu], OSKEY_RIGHT, $00000000, true)
        call mii(fX, aD[Fdu], OSKEY_UP, $00000000, true)
        call mii(fX, aD[Fdu], OSKEY_DOWN, $00000000, true)
        call mii(fX, aD[Fdu], OSKEY_OEM_PLUS, $00000000, true)
        call mii(fX, aD[Fdu], OSKEY_OEM_MINUS, $00000000, true)
        call mii(fX, aD[Fdu], OSKEY_ADD, $00000000, true)
        call mii(fX, aD[Fdu], OSKEY_SUBTRACT, $00000000, true)
        set Fdu = Fdu + 1
    endloop
    set jdu = 0
    loop
        exitwhen jdu > 99
        call vwt(ML, XQt("when calling new_LinkedList in Voidless_mechanics, line 866"), "when calling add in Voidless_mechanics, line 866")
        set jdu = jdu + 1
    endloop
    set ASw = ASw - 1
    set hdu = null
    return true
endfunction
function ZVr takes nothing returns boolean
    set ASw = 0
    return xdu("via function reference Voidless_mechanics, line 1")
endfunction
function ZVs takes nothing returns boolean
    if Jc != 4 then
        set bS = lVs(GetTriggerPlayer(), Condition(Vyw))
        call GroupAddGroup(bS, Lc)
        call DestroyGroup(bS)
    endif
    return IsPlayerInForce(GetTriggerPlayer(), Rc[$0000000C]) and Jc == 4
endfunction
function uBw takes string MVw returns boolean
    local boolean wBw
    set DSw[ASw] = MVw
    set ASw = ASw + 1
    set wBw = GetUnitTypeId(GetDyingUnit()) == l2s(Iji("n01Z", "when calling unObfuscate in Imp1_InitCooldown, line 7"), "when calling fromRawCode in Imp1_InitCooldown, line 7")
    set ASw = ASw - 1
    return wBw
endfunction
function ZXs takes nothing returns boolean
    set ASw = 0
    return uBw("via function reference Imp1_InitCooldown, line 24")
endfunction
function ZcS takes nothing returns boolean
    local real WcS = GetDestructableX(GetFilterDestructable()) - mG
    local real EcS = GetDestructableY(GetFilterDestructable()) - QG
    return WcS * WcS + EcS * EcS <= bj_enumDestructableRadius
endfunction
function initialize takes string w__wurst_stackPos returns nothing
    set DSw[ASw] = w__wurst_stackPos
    set ASw = ASw + 1
    call IbS(IQ, "when calling createGroups in GroupUtils, line 101")
    set ASw = ASw - 1
endfunction
function M1s takes string N1s returns boolean
    set DSw[ASw] = N1s
    set ASw = ASw + 1
    set UQ = 64
    set IQ = 64
    set PQ = jts("when calling new_HashMap in GroupUtils, line 30")
    set DQ = 0
    set HQ = 0
    set JQ = false
    call initialize("when calling initialize in GroupUtils, line 104")
    set KQ = false
    set ASw = ASw - 1
    return true
endfunction
function Zct takes nothing returns boolean
    set ASw = 0
    return M1s("via function reference GroupUtils, line 1")
endfunction
function x0u takes nothing returns boolean
    return GetUnitTypeId(GetDyingUnit()) == 1848652114 or GetUnitTypeId(GetDyingUnit()) == 1848652112
endfunction
function Zcu takes nothing returns boolean
    return x0u() and IsPlayerInForce(GetOwningPlayer(GetKillingUnit()), rt) and GetUnitTypeId(GetKillingUnit()) == 1211117873
endfunction
function ldi takes integer odi, string Odi returns nothing
    set DSw[ASw] = Odi
    set ASw = ASw + 1
    set u3[odi] = Xh
    call Gwt(odi, "when calling resetCameraZoomLevel in CustomPlayer, line 157")
    set ASw = ASw - 1
endfunction
function ATt takes integer ITt, string PTt returns nothing
    set DSw[ASw] = PTt
    set ASw = ASw + 1
    if bV[ITt] == 0 then
        if ITt == 0 then
            call tNr("Nullpointer exception when calling CustomPlayer.resetCameraZoomLevelToDefault", "when calling error in CustomPlayer, line 155")
        else
            call tNr("Called CustomPlayer.resetCameraZoomLevelToDefault on invalid object.", "when calling error in CustomPlayer, line 155")
        endif
    endif
    call ldi(ITt, "when calling resetCameraZoomLevelToDefault in CustomPlayer, line 155")
    set ASw = ASw - 1
endfunction
function Fxt takes unit gxt returns integer
    local integer hxt
    if mks(gxt, $00000000) >= mks(gxt, $00000001) then
        set hxt = 0
    else
        set hxt = 1
    endif
    return hxt
endfunction
function SVw takes integer LCw, integer XCw, string CCw returns nothing
    local player VCw
    local integer BCw
    local unit NCw
    local boolean MCw
    local integer wVw
    local integer uVw
    local unit rVw
    local group sVw
    local group tVw
    local unit iVw
    set DSw[ASw] = CCw
    set ASw = ASw + 1
    set VCw = DCr(LCw, "when calling getPlayer in MoveToStash, line 10")
    set BCw = xMi(LCw, "when calling getCHero in MoveToStash, line 11")
    set NCw = hqs(BCw, "when calling getHero in MoveToStash, line 12")
    if NCw != null then
        if XCw >= 1 and XCw <= 6 and ofi(NCw, XCw - 1) != null then
            set MCw = false
            set wVw = 1
            set uVw = ko
            loop
    exitwhen wVw > uVw
    if ONi(Rc[wVw], VCw) then
                    set MCw = true
                    exitwhen true
    endif
    set wVw = wVw + 1
            endloop
            if not MCw then
    if not(q3t(ofi(NCw, XCw - 1)) == ck and Jyr(UH, Aei(NCw), "when calling has in MoveToStash, line 22")) then
                    set rVw = null
                    set sVw = s3s(VCw, l2s(Iji("h02J", "when calling unObfuscate in MoveToStash, line 24"), "when calling fromRawCode in MoveToStash, line 24"))
                    set tVw = XbS(sVw)
                    loop
                        exitwhen not hJw(tVw)
                        set iVw = tPr(tVw)
                        if r5S(iVw) == l2s(Iji("h02J", "when calling unObfuscate in MoveToStash, line 26"), "when calling fromRawCode in MoveToStash, line 26") and eDs(iVw) == VCw then
                            set rVw = iVw
                            exitwhen true
                        endif
                    endloop
                    call lxs(tVw)
                    if rVw != null and kvi(rVw) <= 5 then
                        if AHt(ofi(NCw, XCw - 1)) != 125 then
                            call kmt(rVw, ofi(NCw, XCw - 1))
                            call dii(Iji("Your item has been send to your stash.", "when calling unObfuscate in MoveToStash, line 33"), 3., VCw)
                        else
                            call dii(Iji("You cannot send your letter of recommendation to the stash!", "when calling unObfuscate in MoveToStash, line 35"), 3., VCw)
                        endif
                    else
                        call dii(Iji("Your stash is already full with items!", "when calling unObfuscate in MoveToStash, line 37"), 3., VCw)
                    endif
                    call Z5u(sVw)
    else
                    call dii(Iji("This item is currently not sendable!", "when calling unObfuscate in MoveToStash, line 40"), 3., VCw)
    endif
            else
    call dii(Iji("Sending items to stash is not allowed in dungeons!", "when calling unObfuscate in MoveToStash, line 42"), 3., VCw)
            endif
        else
            call dii(Iji("You don't have any item in this slot!", "when calling unObfuscate in MoveToStash, line 44"), 3., VCw)
        endif
    endif
    set ASw = ASw - 1
    set VCw = null
    set NCw = null
    set rVw = null
    set sVw = null
    set tVw = null
    set iVw = null
endfunction
function SsS takes integer rsS, boolean ssS, boolean tsS, string isS returns nothing
    set DSw[ASw] = isS
    set ASw = ASw + 1
    if GpS(gQ, rsS, "when calling has in ToggleEffectProcs, line 24") then
        if ssS == false and(not GpS(jJ, rsS, "when calling has in ToggleEffectProcs, line 26")) then
            call vwt(jJ, rsS, "when calling add in ToggleEffectProcs, line 27")
            call dii("Disabled godly item effects from other players.", 5., aD[rsS])
        elseif ssS == true and GpS(jJ, rsS, "when calling has in ToggleEffectProcs, line 30") then
            call eys(jJ, rsS, "when calling remove in ToggleEffectProcs, line 31")
            call dii("Enabled godly item effects from other players.", 5., aD[rsS])
        endif
        if tsS == false and(not GpS(kJ, rsS, "when calling has in ToggleEffectProcs, line 34")) then
            call vwt(kJ, rsS, "when calling add in ToggleEffectProcs, line 35")
            call dii("Disabled godly item effects in general.", 5., aD[rsS])
        elseif tsS == true and GpS(kJ, rsS, "when calling has in ToggleEffectProcs, line 38") then
            call eys(kJ, rsS, "when calling remove in ToggleEffectProcs, line 39")
            call dii("Enabled godly item effects in general.", 5., aD[rsS])
        endif
    endif
    set ASw = ASw - 1
endfunction
function M8w takes unit C8w, string V8w returns boolean
    local boolean B8w
    local integer N8w
    set DSw[ASw] = V8w
    set ASw = ASw + 1
    set B8w = false
    if C8w != null then
        set N8w = hgr(eDs(C8w))
        if GpS(gQ, N8w, "when calling has in SuperSaiyan, line 258") and t_u(C8w) then
            set B8w = Jyr(yJ, err(ui[1 + N8w], "when calling stringToIndex in SuperSaiyan, line 259"), "when calling has in SuperSaiyan, line 259")
        endif
    endif
    set ASw = ASw - 1
    return B8w
endfunction
function e7i takes integer l7i, boolean b7i, string y7i returns boolean
    local boolean p7i
    set DSw[ASw] = y7i
    set ASw = ASw + 1
    set p7i = false
    if Jyr(pJ, l7i, "when calling has in SuperSaiyan, line 221") then
        call I7S(Aii(wps(pJ, l7i, "when calling get in SuperSaiyan, line 222"), "when calling effectFromIndex in SuperSaiyan, line 222"))
        call klS(pJ, l7i, "when calling remove in SuperSaiyan, line 223")
        set p7i = true
        if not b7i then
            call dii(Iji("Disabled hero glow.", "when calling unObfuscate in SuperSaiyan, line 227"), 5., aD[l7i])
        endif
    endif
    call eys(eJ, l7i, "when calling remove in SuperSaiyan, line 228")
    set ASw = ASw - 1
    return p7i
endfunction
function hCi takes string GCi returns integer
    local integer gCi
    set DSw[ASw] = GCi
    set ASw = ASw + 1
    if NX == 0 then
        if MX < 32768 then
            set MX = MX + 1
            set gCi = MX
            set wC[gCi] = 953
        else
            call tNr("Out of memory: Could not create CallbackSingle_doAfter_SuperSaiyan.", "when calling error in SuperSaiyan, line 245")
            set gCi = 0
        endif
    else
        set NX = NX - 1
        set gCi = BX[NX]
        set wC[gCi] = 953
    endif
    set ASw = ASw - 1
    return gCi
endfunction
function aUt takes unit OUt, string lUt returns nothing
    local integer bUt
    local integer yUt
    local real pUt
    local integer eUt
    local real qUt
    set DSw[ASw] = lUt
    set ASw = ASw + 1
    if OUt != null and M8w(OUt, "when calling beingSuperSaiyan_condition in SuperSaiyan, line 233") then
        set bUt = hgr(eDs(OUt))
        set yUt = wps(yJ, err(ui[1 + bUt], "when calling stringToIndex in SuperSaiyan, line 235"), "when calling get in SuperSaiyan, line 235")
        if yUt >= 5 and(not GpS(eJ, bUt, "when calling has in SuperSaiyan, line 237")) then
            set pUt = 0.
            if e7i(bUt, true, "when calling disableBeingSuperSaiyan in SuperSaiyan, line 239") then
    set pUt = 2.
            endif
            call vwt(eJ, bUt, "when calling add in SuperSaiyan, line 242")
            call dii(Iji("Enabled hero glow.", "when calling unObfuscate in SuperSaiyan, line 243"), 5., aD[bUt])
            set qUt = pUt
            set eUt = hCi("when calling alloc_CallbackSingle_doAfter_SuperSaiyan in SuperSaiyan, line 245")
            call RUs(eUt)
            set Zsw[eUt] = OUt
            set Usw[eUt] = bUt
            call Ybr(qUt, eUt, "when calling doAfter in SuperSaiyan, line 245")
        endif
    endif
    set ASw = ASw - 1
endfunction
function bcu takes integer Ocu, string lcu returns nothing
    set DSw[ASw] = lcu
    set ASw = ASw + 1
    call eTu(Ng, DCr(Ocu, "when calling getPlayer in CustomPlayer, line 182"), "when calling free in CustomPlayer, line 182")
    if s3[Ocu]then
        call dii(Iji("|cffffcc00Camera unlocked.|r", "when calling unObfuscate in CustomPlayer, line 184"), 3., DCr(Ocu, "when calling getPlayer in CustomPlayer, line 184"))
    endif
    set s3[Ocu] = false
    set ASw = ASw - 1
endfunction
function gSs takes integer YSs, string GSs returns nothing
    set DSw[ASw] = GSs
    set ASw = ASw + 1
    if bV[YSs] == 0 then
        if YSs == 0 then
            call tNr("Nullpointer exception when calling CustomPlayer.cameraUnlock", "when calling error in CustomPlayer, line 181")
        else
            call tNr("Called CustomPlayer.cameraUnlock on invalid object.", "when calling error in CustomPlayer, line 181")
        endif
    endif
    call bcu(YSs, "when calling cameraUnlock in CustomPlayer, line 181")
    set ASw = ASw - 1
endfunction
function hNi takes string GNi returns integer
    local integer gNi
    set DSw[ASw] = GNi
    set ASw = ASw + 1
    if NX == 0 then
        if MX < 32768 then
            set MX = MX + 1
            set gNi = MX
            set wC[gNi] = 931
        else
            call tNr("Out of memory: Could not create CallbackSingle_doAfter_PlayerCommands.", "when calling error in PlayerCommands, line 164")
            set gNi = 0
        endif
    else
        set NX = NX - 1
        set gNi = BX[NX]
        set wC[gNi] = 931
    endif
    set ASw = ASw - 1
    return gNi
endfunction
function hSt takes string GSt returns real
    local real gSt = S2R(GSt)
    if gSt < 1. then
        set gSt = 1650.
    elseif gSt > 3000. then
        set gSt = 3000.
    elseif gSt < 500. then
        set gSt = 500.
    endif
    return gSt
endfunction
function ohu takes string chu returns nothing
    set DSw[ASw] = chu
    set ASw = ASw + 1
    call lIt(GetTriggerPlayer(), false, false, "when calling repickResetPlayerStats in Repick, line 27")
    set ASw = ASw - 1
endfunction
function poi takes integer loi, string boi returns nothing
    local string yoi
    set DSw[ASw] = boi
    set ASw = ASw + 1
    set yoi = Wcr(loi, true, "when calling heroPvPRankToString in PlayerCommands, line 246")
    if yoi == Iji("None", "when calling unObfuscate in PlayerCommands, line 247") then
        call dii(Iji("|cffff0000Win at least 15 duels to be even ranked...|r", "when calling unObfuscate in PlayerCommands, line 248"), 8., aD[loi])
    else
        call SetPlayerName(aD[loi], Mt[1 + loi] + "|r (" + yoi + ")")
    endif
    set ASw = ASw - 1
endfunction
function sTu takes integer uTu, string rTu returns nothing
    set DSw[ASw] = rTu
    set ASw = ASw + 1
    call SetPlayerName(aD[uTu], Mt[1 + uTu] + "|r (" + ncu(uTu, true, "when calling heroFishingRankToString in PlayerCommands, line 243") + ")")
    set ASw = ASw - 1
endfunction
function x_s takes integer F_s, boolean k_s, string j_s returns nothing
    set DSw[ASw] = j_s
    set ASw = ASw + 1
    if GpS(gQ, F_s, "when calling has in ToggleEffectProcs, line 43") then
        if k_s and GpS(xJ, F_s, "when calling has in ToggleEffectProcs, line 44") then
            call eys(xJ, F_s, "when calling remove in ToggleEffectProcs, line 45")
            if aD[F_s] == nD then
    call FogMaskEnableOn()
            endif
            call dii("Enabled masked fog.", 4., aD[F_s])
        elseif (not k_s)and(not GpS(xJ, F_s, "when calling has in ToggleEffectProcs, line 49")) then
            call vwt(xJ, F_s, "when calling add in ToggleEffectProcs, line 50")
            if aD[F_s] == nD then
    call FogMaskEnableOff()
            endif
            call dii("Disabled masked fog.", 4., aD[F_s])
        endif
    endif
    set ASw = ASw - 1
endfunction
function Vhr takes string Yhr returns nothing
    local string Ghr
    local player ghr
    local integer hhr
    local integer Fhr
    local boolean khr
    local boolean jhr
    local integer xhr
    local unit vhr
    local integer mhr
    local integer Qhr
    local integer Whr
    local real Ehr
    local real Zhr
    local integer Uhr
    local integer Ihr
    local unit Phr
    local integer Ahr
    local unit Dhr
    local integer Hhr
    local integer Jhr
    local integer Khr
    local unit Lhr
    local integer Xhr
    local integer Chr
    set DSw[ASw] = Yhr
    set ASw = ASw + 1
    set Ghr = GetEventPlayerChatString()
    set ghr = GetTriggerPlayer()
    set hhr = hgr(ghr)
    set Fhr = xus(hhr, "when calling getCustomPlayer in PlayerCommands, line 39")
    set khr = Vgt(Fhr, "when calling getCommandsDisabled in PlayerCommands, line 40")
    set jhr = ONi(Xt, ghr)
    call GVw(AI, hhr, R9S(Ghr), "when calling put in PlayerCommands, line 43")
    call GVw(PI, R9S(Ghr), O_i(false), "when calling put in PlayerCommands, line 44")
    if not GpS(gQ, hhr, "when calling has in PlayerCommands, line 46") then
        set ASw = ASw - 1
        set ghr = null
        set vhr = null
        set Phr = null
        set Dhr = null
        set Lhr = null
        return
    endif
    if hUu(Ghr, Iji("-help", "when calling unObfuscate in PlayerCommands, line 49")) then
        if hUu(Ghr, Iji("-help1", "when calling unObfuscate in PlayerCommands, line 50")) then
            call dii(nF, 30., ghr)
        elseif hUu(Ghr, Iji("-help2", "when calling unObfuscate in PlayerCommands, line 52")) then
            call dii(dF, 30., ghr)
        elseif hUu(Ghr, Iji("-help3", "when calling unObfuscate in PlayerCommands, line 54")) then
            call dii(fF, 30., ghr)
        elseif hUu(Ghr, Iji("-help4", "when calling unObfuscate in PlayerCommands, line 56")) then
            call dii(RF, 30., ghr)
        else
            call dii(aF, 30., ghr)
        endif
    elseif hUu(Ghr, Iji("-xp", "when calling unObfuscate in PlayerCommands, line 60")) then
        call ott(hqs(xMi(xus(hhr, "when calling getCustomPlayer in PlayerCommands, line 61"), "when calling getCHero in PlayerCommands, line 61"), "when calling getHero in PlayerCommands, line 61"), true)
    elseif hUu(Ghr, Iji("-stats", "when calling unObfuscate in PlayerCommands, line 62")) then
        set xhr = xMi(Fhr, "when calling getCHero in PlayerCommands, line 63")
        if xhr != 0 then
            set vhr = hqs(xhr, "when calling getHero in PlayerCommands, line 65")
            if vhr != null then
    call dii("Your player-id is " + fju(hhr), 20., ghr)
    call dii("Current hero Hitpoints:  |cffff0000" + SUs(Udi(vhr), $00000000) + "/" + SUs(aSr(vhr), $00000000), 20., ghr)
    call dii("Current hero Manapoints: |cff0084ff" + SUs(t3i(vhr), $00000000) + "/" + SUs(Ges(vhr), $00000000), 20., ghr)
    call dii("Current hero Attack Cooldown: |cffffcc00" + Uru(BlzGetUnitAttackCooldown(vhr, Fxt(vhr))), 20., ghr)
    call dii("Current hero Movement Speed: |cffffcc00" + Uru(GetUnitMoveSpeed(vhr)), 20., ghr)
    call dii("PvP rank: " + Wcr(hhr, true, "when calling heroPvPRankToString in PlayerCommands, line 72") + " (Points: " + fju(Zt[1 + hhr]) + ")", 20., ghr)
    call dii("Fishing profession: " + ncu(hhr, true, "when calling heroFishingRankToString in PlayerCommands, line 73") + " (Points: " + fju(Po[1 + hhr]) + ")", 20., ghr)
            endif
        endif
    elseif hUu(Ghr, Iji("-profession", "when calling unObfuscate in PlayerCommands, line 74")) or hUu(Ghr, Iji("-fishing", "when calling unObfuscate in PlayerCommands, line 74")) then
        set mhr = Po[1 + hhr]
        set Qhr = Eo[1 + hhr]
        set Whr = cO[1 + hhr]
        call dii("Profession rank: " + ncu(hhr, true, "when calling heroFishingRankToString in PlayerCommands, line 79") + " (Rank: " + fju(mhr) + ")", 5., ghr)
        call dii("Profession level: " + fju(Qhr), 5., ghr)
        call dii("Profession xp: " + fju(Whr), 5., ghr)
    elseif Ghr == Iji("-cam", "when calling unObfuscate in PlayerCommands, line 83") or Ghr == Iji("-zoom", "when calling unObfuscate in PlayerCommands, line 83") then
        if not khr then
            call ATt(xus(hhr, "when calling getCustomPlayer in PlayerCommands, line 85"), "when calling resetCameraZoomLevelToDefault in PlayerCommands, line 85")
            call GVw(PI, R9S(Ghr), O_i(true), "when calling put in PlayerCommands, line 86")
        endif
    elseif hUu(Ghr, Iji("-cam ", "when calling unObfuscate in PlayerCommands, line 87")) then
        if not khr then
            set Ehr = hSt(SubString(Ghr, $00000005, StringLength(Ghr)))
            call Kcs(xus(hhr, "when calling getCustomPlayer in PlayerCommands, line 90"), Ehr, "when calling setCameraZoomLevel in PlayerCommands, line 90")
            call SetCameraFieldForPlayer(ghr, CAMERA_FIELD_TARGET_DISTANCE, Ehr, 0.)
            call GVw(PI, R9S(Ghr), O_i(true), "when calling put in PlayerCommands, line 92")
        endif
    elseif hUu(Ghr, Iji("-zoom ", "when calling unObfuscate in PlayerCommands, line 93")) then
        if not khr then
            set Zhr = hSt(SubString(Ghr, $00000006, StringLength(Ghr)))
            call Kcs(xus(hhr, "when calling getCustomPlayer in PlayerCommands, line 96"), Zhr, "when calling setCameraZoomLevel in PlayerCommands, line 96")
            call SetCameraFieldForPlayer(ghr, CAMERA_FIELD_TARGET_DISTANCE, Zhr, 0.)
            call GVw(PI, R9S(Ghr), O_i(true), "when calling put in PlayerCommands, line 98")
        endif
    elseif hUu(Ghr, Iji("-time", "when calling unObfuscate in PlayerCommands, line 99")) then
        call dii("Game is running for " + L7s(GQ, false), 8., ghr)
    elseif hUu(Ghr, Iji("-s2s", "when calling unObfuscate in PlayerCommands, line 101")) or hUu(Ghr, Iji("-sendtostash", "when calling unObfuscate in PlayerCommands, line 102")) then
        if not khr then
            set Uhr =- 1
            if vQt(Ghr) == 6 then
    set Uhr = ifi(SubString(Ghr, $00000005, StringLength(Ghr)))
            elseif vQt(Ghr) == 14 then
    set Uhr = ifi(SubString(Ghr, $0000000D, StringLength(Ghr)))
            endif
            call SVw(Fhr, Uhr, "when calling moveItemToStash in PlayerCommands, line 109")
        endif
    elseif hUu(Ghr, Iji("-disableglow", "when calling unObfuscate in PlayerCommands, line 110")) then
        call e7i(hhr, false, "when calling disableBeingSuperSaiyan in PlayerCommands, line 111")
    elseif hUu(Ghr, Iji("-enableglow", "when calling unObfuscate in PlayerCommands, line 112")) then
        set Ihr = xMi(Fhr, "when calling getCHero in PlayerCommands, line 113")
        if Ihr != 0 then
            set Phr = hqs(Ihr, "when calling getHero in PlayerCommands, line 115")
            if Phr != null then
    call aUt(Phr, "when calling enableBeingSuperSaiyan in PlayerCommands, line 117")
            endif
        endif
    elseif Ghr == Iji("-rank", "when calling unObfuscate in PlayerCommands, line 118") or hUu(Ghr, Iji("-rankpvp", "when calling unObfuscate in PlayerCommands, line 118")) then
        call poi(hhr, "when calling playerNameSetPvpRank in PlayerCommands, line 119")
    elseif hUu(Ghr, Iji("-rankfishing", "when calling unObfuscate in PlayerCommands, line 120")) then
        call sTu(hhr, "when calling playerNameSetFishingRank in PlayerCommands, line 121")
    elseif hUu(Ghr, Iji("-rankclear", "when calling unObfuscate in PlayerCommands, line 122")) then
        call SetPlayerName(aD[hhr], Mt[1 + hhr])
    elseif hUu(Ghr, Iji("-disableProcs", "when calling unObfuscate in PlayerCommands, line 124")) or hUu(Ghr, Iji("-dProcs", "when calling unObfuscate in PlayerCommands, line 124")) or hUu(Ghr, Iji("-disableprocs", "when calling unObfuscate in PlayerCommands, line 124")) or hUu(Ghr, Iji("-dprocs", "when calling unObfuscate in PlayerCommands, line 124")) then
        call SsS(hhr, false, false, "when calling toggleEffectProcsForPlayer in PlayerCommands, line 125")
    elseif hUu(Ghr, Iji("-disableOtherProcs", "when calling unObfuscate in PlayerCommands, line 126")) or hUu(Ghr, Iji("-dOProcs", "when calling unObfuscate in PlayerCommands, line 126")) or hUu(Ghr, Iji("-disableotherprocs", "when calling unObfuscate in PlayerCommands, line 126")) or hUu(Ghr, Iji("-doprocs", "when calling unObfuscate in PlayerCommands, line 126")) then
        call SsS(hhr, false, true, "when calling toggleEffectProcsForPlayer in PlayerCommands, line 127")
    elseif hUu(Ghr, Iji("-enableProcs", "when calling unObfuscate in PlayerCommands, line 128")) or hUu(Ghr, Iji("-eProcs", "when calling unObfuscate in PlayerCommands, line 128")) or hUu(Ghr, Iji("-enableprocs", "when calling unObfuscate in PlayerCommands, line 128")) or hUu(Ghr, Iji("-eprocs", "when calling unObfuscate in PlayerCommands, line 128")) then
        call SsS(hhr, true, true, "when calling toggleEffectProcsForPlayer in PlayerCommands, line 129")
    elseif Ghr == Iji("-enablefog", "when calling unObfuscate in PlayerCommands, line 130") or Ghr == Iji("-fog", "when calling unObfuscate in PlayerCommands, line 130") then
        call x_s(hhr, true, "when calling toggleFog in PlayerCommands, line 131")
    elseif Ghr == Iji("-disablefog", "when calling unObfuscate in PlayerCommands, line 132") or Ghr == Iji("-nofog", "when calling unObfuscate in PlayerCommands, line 132") then
        call x_s(hhr, false, "when calling toggleFog in PlayerCommands, line 133")
    elseif Ghr == Iji("-kill", "when calling unObfuscate in PlayerCommands, line 134") then
        if (not ONi(At, ghr))and(not ONi(iO, ghr)) then
            if not GpS(lD, hhr, "when calling has in PlayerCommands, line 136") then
    set Ahr = xMi(Fhr, "when calling getCHero in PlayerCommands, line 137")
    if Ahr != 0 then
                    set Dhr = hqs(Ahr, "when calling getHero in PlayerCommands, line 139")
                    if Dhr != null then
                        call Tri(Dhr)
                    endif
    endif
            else
    call dii(Iji("The suicide command cannot be used while morphing or shortly after finishing dungeon. Wait 1s.", "when calling unObfuscate in PlayerCommands, line 143"), 5., ghr)
            endif
        else
            call dii(Iji("The suicide command cannot be used while in pvp or fishing.", "when calling unObfuscate in PlayerCommands, line 145"), 5., ghr)
        endif
    elseif Ghr == Iji("-camfollow", "when calling unObfuscate in PlayerCommands, line 146") or Ghr == Iji("-camFollow", "when calling unObfuscate in PlayerCommands, line 146") then
        call WDr(Fhr, "when calling cameraLock in PlayerCommands, line 147")
    elseif Ghr == Iji("-camunfollow", "when calling unObfuscate in PlayerCommands, line 149") or Ghr == Iji("-camUnFollow", "when calling unObfuscate in PlayerCommands, line 149") then
        call gSs(Fhr, "when calling cameraUnlock in PlayerCommands, line 150")
    elseif Ghr == Iji("-unform", "when calling unObfuscate in PlayerCommands, line 152") and(not jhr) then
        set Hhr = hgr(GetTriggerPlayer())
        set Jhr = xus(Hhr, "when calling getCustomPlayer in PlayerCommands, line 154")
        set Khr = xMi(Jhr, "when calling getCHero in PlayerCommands, line 155")
        set Lhr = hqs(Khr, "when calling getHero in PlayerCommands, line 156")
        set Xhr = r5S(Lhr)
        if (not GpS(lD, Hhr, "when calling has in PlayerCommands, line 159"))and(not khr) then
            if GpS(pA, iCi(Khr, "when calling getHeroType in PlayerCommands, line 160"), "when calling has in PlayerCommands, line 160") or GpS(pA, Xhr, "when calling has in PlayerCommands, line 160") or Xhr == fk or Xhr == 1211117640 then
    call xvu(Lhr, "unravenform")
    call xvu(Lhr, "unbearform")
    set Chr = hNi("when calling alloc_CallbackSingle_doAfter_PlayerCommands in PlayerCommands, line 164")
    call RUs(Chr)
    set Srw[Chr] = Lhr
    call Ybr(0.25, Chr, "when calling doAfter in PlayerCommands, line 164")
            endif
        else
            call dii(Iji("The unform command cannot be used while morphing. Wait 1s.", "when calling unObfuscate in PlayerCommands, line 169"), 5., GetTriggerPlayer())
        endif
    elseif Ghr == Iji("-new", "when calling unObfuscate in PlayerCommands, line 171") or(Ghr == Iji("-repick", "when calling unObfuscate in PlayerCommands, line 171") and(not jhr)) then
        if not khr then
            call ohu("when calling repick in PlayerCommands, line 173")
        endif
    endif
    set ASw = ASw - 1
    set ghr = null
    set vhr = null
    set Phr = null
    set Dhr = null
    set Lhr = null
endfunction
function Zrs takes nothing returns nothing
    set ASw = 0
    call Vhr("via function reference PlayerCommands, line 267")
endfunction
function a2r takes nothing returns nothing
    call SetUnitPositionLoc(GetEnumUnit(), vo)
endfunction
function a5r takes nothing returns boolean
    return GetUnitTypeId(GetDyingUnit()) == 1747988570 and IsPlayerInForce(GetOwningPlayer(GetKillingUnit()), Xr) and IsPlayerInForce(GetOwningPlayer(GetKillingUnit()), Vr) == false
endfunction
function a7i takes nothing returns boolean
    return (GetUnitTypeId(GetOrderTargetUnit()) == sr and IsUnitType(GetTriggerUnit(), UNIT_TYPE_HERO) and IsUnitInGroup(GetTriggerUnit(), kpu(300., GetUnitLoc(GetOrderTargetUnit()))) and IsPlayerInForce(GetOwningPlayer(GetTriggerUnit()), Uo[$00000002]) and IsPlayerInForce(GetOwningPlayer(GetTriggerUnit()), Uo[$00000003]) == false and Zo[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))] == 0 and GetPlayerState(GetOwningPlayer(GetTriggerUnit()), PLAYER_STATE_RESOURCE_GOLD) >= 500) != false
endfunction
function w_r takes string L0r returns boolean
    local trigger X0r
    local trigger C0r
    local trigger V0r
    local trigger B0r
    local trigger N0r
    local trigger M0r
    set DSw[ASw] = L0r
    set ASw = ASw + 1
    set Mg = jts("when calling new_HashMap in Champion_AsuraStrike, line 10")
    set wh = "Unleashes the Trademark Finisher on the target, dealing massive universal damage equal to <Damage>. |n|n|cffffcc00In PvP, no additional <Additional> damage is dealt. Additional damage is dealt only if your mana is more than 50%.|n" + "|cffff0000Damage cannot exceed more than 400,000.|r|n|cffffcc00Consumes 3 Power Shards (not in PvP).|r"
    set uh = 35
    set rh = 5000
    set X0r = CreateTrigger()
    call l2w(X0r, EVENT_PLAYER_HERO_SKILL)
    set C0r = X0r
    call l2w(C0r, EVENT_PLAYER_HERO_LEVEL)
    set V0r = C0r
    call l2w(V0r, EVENT_PLAYER_UNIT_PICKUP_ITEM)
    set B0r = V0r
    call l2w(B0r, EVENT_PLAYER_UNIT_DROP_ITEM)
    set N0r = B0r
    call B2S(N0r, Zvw)
    set M0r = lT
    call B2S(M0r, Uvw)
    set ASw = ASw - 1
    set X0r = null
    set C0r = null
    set V0r = null
    set B0r = null
    set N0r = null
    set M0r = null
    return true
endfunction
function aDt takes nothing returns boolean
    set ASw = 0
    return w_r("via function reference Champion_AsuraStrike, line 1")
endfunction
function aFr takes nothing returns boolean
    return GetUnitTypeId(GetDyingUnit()) == 1848652087 and IsPlayerInForce(GetOwningPlayer(GetKillingUnit()), ks) and UnitHasItemOfTypeBJ(GetKillingUnit(), $49303137) == false
endfunction
function aFu takes nothing returns nothing
    set bj_forLoopAIndex = 1
    set bj_forLoopAIndexEnd = 10
    loop
        exitwhen bj_forLoopAIndex > bj_forLoopAIndexEnd
        call MultiboardSetItemValueBJ(bj_lastCreatedMultiboard, $00000002, bj_forLoopAIndex + 1, I2S(Zt[1 + GetPlayerId(Player(- 1 + bj_forLoopAIndex))]))
        call MultiboardSetItemValueBJ(bj_lastCreatedMultiboard, $00000003, bj_forLoopAIndex + 1, I2S(Eo[1 + GetPlayerId(Player(- 1 + bj_forLoopAIndex))]))
        set bj_forLoopAIndex = bj_forLoopAIndex + 1
    endloop
endfunction
function aLs takes nothing returns boolean
    return IsUnitAlly(GetAttacker(), GetOwningPlayer(GetTriggerUnit())) and GetUnitTypeId(GetTriggerUnit()) != 1747988570
endfunction
function aci takes nothing returns nothing
    call ForceRemovePlayer(Gi, GetEnumPlayer())
endfunction
function kri takes nothing returns boolean
    return IsPlayerInForce(GetOwningPlayer(GetTriggerUnit()), ec[$00000002]) and IsPlayerInForce(GetOwningPlayer(GetTriggerUnit()), ec[$00000003]) == false
endfunction
function ans takes nothing returns nothing
    call RemoveItem(GetManipulatedItem())
    if kri() then
        call ForceAddPlayer(pc[$00000003], GetOwningPlayer(GetTriggerUnit()))
        call DisplayTextToForce(MwS(GetOwningPlayer(GetTriggerUnit())), "|cffffcc00Arnold|r : Hey recruit! I recieved troubling news. Recently, a gang of goblins has taken over the abandoned gold mine that we are about to explore in the outskirts of the city. There's no way we can continue this expedition if the goblins are in control. I want you to eliminate their leader immediately.")
        call T_i(GetOwningPlayer(GetTriggerUnit()), $00000000, "Armoured Pride", "I got a new task from Arnold; I have to eliminate the goblin leader, in the gold mine at the outskirts of the city, so that the expedition team can continue their work in the gold mines.", "ReplaceableTextures\\CommandButtons\\BTNJunkGolem.blp")
        set rc[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))] = bj_lastCreatedQuest
    endif
endfunction
function aru takes nothing returns boolean
    return GetUnitTypeId(GetOrderTargetUnit()) == sr and IsPlayerInForce(GetOwningPlayer(GetTriggerUnit()), kr) and IsUnitInGroup(GetTriggerUnit(), kpu(300., GetUnitLoc(GetOrderTargetUnit())))
endfunction
function BOi takes nothing returns boolean
    return UnitHasItemOfTypeBJ(GetManipulatingUnit(), GetItemTypeId(bj_lastRemovedItem))
endfunction
function H_r takes nothing returns boolean
    return GetItemUserData(GetManipulatedItem()) == 1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))
endfunction
function MIu takes nothing returns boolean
    return GetItemUserData(GetManipulatedItem()) == 0
endfunction
function atu takes nothing returns nothing
    if MIu() then
        call UnitRemoveItemSwapped(GetManipulatedItem(), GetManipulatingUnit())
        set er[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))] = bj_lastRemovedItem
        if BOi() then
            call SetItemCharges(GetItemOfTypeFromUnitBJ(GetManipulatingUnit(), GetItemTypeId(er[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))])), GetItemCharges(GetItemOfTypeFromUnitBJ(GetTriggerUnit(), GetItemTypeId(er[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))]))) + GetItemCharges(er[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))]))
            call RemoveItem(er[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))])
        else
            call DisableTrigger(GetTriggeringTrigger())
            call UnitAddItem(GetManipulatingUnit(), er[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))])
            call EnableTrigger(GetTriggeringTrigger())
        endif
    elseif H_r() then
        call UnitRemoveItemSwapped(GetManipulatedItem(), GetManipulatingUnit())
        set er[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))] = bj_lastRemovedItem
        if BOi() then
            call SetItemCharges(GetItemOfTypeFromUnitBJ(GetManipulatingUnit(), GetItemTypeId(er[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))])), GetItemCharges(GetItemOfTypeFromUnitBJ(GetTriggerUnit(), GetItemTypeId(er[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))]))) + GetItemCharges(er[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))]))
            call RemoveItem(er[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))])
        else
            call DisableTrigger(GetTriggeringTrigger())
            call UnitAddItem(GetManipulatingUnit(), er[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))])
            call EnableTrigger(GetTriggeringTrigger())
        endif
    endif
endfunction
function Aci takes nothing returns boolean
    return VS[1 + GetPlayerId(GetOwningPlayer(GetKillingUnit()))] >= 100
endfunction
function Iyr takes nothing returns boolean
    return BS[1 + GetPlayerId(GetOwningPlayer(GetKillingUnit()))] >= 100
endfunction
function d6t takes nothing returns boolean
    return VS[1 + GetPlayerId(GetOwningPlayer(GetKillingUnit()))] >= 100
endfunction
function k6t takes nothing returns boolean
    return BS[1 + GetPlayerId(GetOwningPlayer(GetKillingUnit()))] >= 100
endfunction
function Wvs takes nothing returns boolean
    return GetBooleanAnd(k6t(), d6t())
endfunction
function pFS takes nothing returns boolean
    return GetUnitTypeId(GetDyingUnit()) == 1848652107
endfunction
function t1w takes nothing returns boolean
    return GetUnitTypeId(GetDyingUnit()) == 1848652098
endfunction
function b1s takes nothing returns nothing
    if pFS() then
        set BS[1 + GetPlayerId(GetOwningPlayer(GetKillingUnit()))] = BS[1 + GetPlayerId(GetOwningPlayer(GetKillingUnit()))] + 1
        if Iyr() then
            call QuestMessageBJ(MwS(GetOwningPlayer(GetKillingUnit())), $00000001, "|cffffcc00Quest Requirement Completed|r : 100 life essences of Enraged Spirit collected.")
        else
            call QuestMessageBJ(MwS(GetOwningPlayer(GetKillingUnit())), $00000001, I2S(BS[1 + GetPlayerId(GetOwningPlayer(GetKillingUnit()))]) + " life essence(s) of the Enraged Spirit(s) collected.")
        endif
    endif
    if t1w() then
        set VS[1 + GetPlayerId(GetOwningPlayer(GetKillingUnit()))] = VS[1 + GetPlayerId(GetOwningPlayer(GetKillingUnit()))] + 1
        if Aci() then
            call QuestMessageBJ(MwS(GetOwningPlayer(GetKillingUnit())), $00000001, "|cffffcc00Quest Requirement Completed|r : 100 Snap Dragon meat collected.")
        else
            call QuestMessageBJ(MwS(GetOwningPlayer(GetKillingUnit())), $00000001, I2S(VS[1 + GetPlayerId(GetOwningPlayer(GetKillingUnit()))]) + " chunk(s) of meat of collected.")
        endif
    endif
    if Wvs() then
        call QuestMessageBJ(MwS(GetOwningPlayer(GetKillingUnit())), $00000002, "|cffffcc00Stocking Up|r Quest Requirements Completed.")
    endif
endfunction
function b2u takes nothing returns boolean
    call CreateGroup()
    set gh = 0
    set hh = pI
    set Fh = 0
    call Filter(Hvw)
    call Rect(0., 0., 0., 0.)
    return true
endfunction
function D8s takes string P8s returns integer
    local integer A8s
    set DSw[ASw] = P8s
    set ASw = ASw + 1
    if BV == 0 then
        if NV < 32768 then
            set NV = NV + 1
            set A8s = NV
            set MV[A8s] = 1152
        else
            call tNr("Out of memory: Could not create ForForceCallback_execute_Voidless.", "when calling error in Voidless, line 284")
            set A8s = 0
        endif
    else
        set BV = BV - 1
        set A8s = VV[BV]
        set MV[A8s] = 1152
    endif
    set ASw = ASw - 1
    return A8s
endfunction
function Mps takes player Cps, player Vps returns nothing
    local integer Bps = hgr(Cps)
    local integer Nps = hgr(Vps)
    if Bps != Nps then
        call SetPlayerAlliance(aD[Bps], aD[Nps], ALLIANCE_SHARED_ADVANCED_CONTROL, true)
        call SetPlayerAlliance(aD[Bps], aD[Nps], ALLIANCE_SHARED_CONTROL, false)
        call SetPlayerAlliance(aD[Nps], aD[Bps], ALLIANCE_SHARED_ADVANCED_CONTROL, true)
        call SetPlayerAlliance(aD[Nps], aD[Bps], ALLIANCE_SHARED_CONTROL, false)
    endif
endfunction
function x7t takes player q7t, string a7t returns nothing
    local boolean n7t
    local group d7t
    local group f7t
    local unit R7t
    local integer T7t
    local integer Y7t
    local integer G7t
    local unit g7t
    local player h7t
    local integer F7t
    local integer k7t
    local integer j7t
    set DSw[ASw] = a7t
    set ASw = ASw + 1
    if OK <= 0 then
        call d4r("when calling voidlessCleanup in Voidless, line 240")
        set yK = true
        set n7t = false
        set d7t = Dit(fK, "when calling getUnitsInRect in Voidless, line 245")
        set f7t = XbS(d7t)
        loop
            exitwhen not hJw(f7t)
            set R7t = tPr(f7t)
            if GpS(gQ, hgr(eDs(R7t)), "when calling has in Voidless, line 247") then
    set T7t = xMi(GgS(eDs(R7t), "when calling getCustomPlayer in Voidless, line 248"), "when calling getCHero in Voidless, line 248")
    if T7t != 0 and(not GpS(eK, T7t, "when calling has in Voidless, line 249")) then
                    set n7t = true
                    exitwhen true
    endif
            endif
        endloop
        call lxs(f7t)
        call Sju(d7t, "when calling release in Voidless, line 252")
        if wds(SK, "when calling size in Voidless, line 254") != 0 or n7t then
            call dii("Some of you are not prepared yet.", 3., q7t)
        else
            set Y7t = c5r(eK, "when calling iterator in Voidless, line 257")
            loop
    exitwhen not Tji(Y7t)
    set G7t = LXi(Y7t)
    set g7t = hqs(G7t, "when calling getHero in Voidless, line 258")
    if g7t != null and yXu(g7t) and XYt(ANw(g7t), XSw, fK) then
                    call DDr(fc[MJ], g7t)
                    set vM[G7t] = MJ
                    call xxr(Rc[MJ], eDs(g7t))
                    call xxr(ws, eDs(g7t))
                    if not ONi(lt, eDs(g7t)) then
                        call xxr(lt, eDs(g7t))
                    endif
                    set hu[hgr(eDs(g7t))] = true
                    call Axu(g7t, false)
                    set h7t = eDs(g7t)
                    call BwS(h7t)
                    set F7t = c5r(eK, "when calling iterator in Voidless, line 276")
                    loop
                        exitwhen not Tji(F7t)
                        set k7t = LXi(F7t)
                        call Mps(h7t, eDs(hqs(k7t, "when calling getHero in Voidless, line 277")))
                    endloop
                    call vms(F7t, "when calling close in Voidless, line 276")
                    call w2u(hgr(h7t), true)
    endif
            endloop
            call vms(Y7t, "when calling close in Voidless, line 257")
            call Tgr(- 1, "when calling setStageToMinAllowed in Voidless, line 282")
            call u3w(eK, "when calling clear in Voidless, line 283")
            set j7t = D8s("when calling alloc_ForForceCallback_execute_Voidless in Voidless, line 284")
            call ggu(j7t, "when calling execute in Voidless, line 284")
        endif
    endif
    set ASw = ASw - 1
    set d7t = null
    set f7t = null
    set R7t = null
    set g7t = null
    set h7t = null
endfunction
function Ves takes string Des returns nothing
    local unit Hes
    local player Jes
    local integer Kes
    local integer Les
    local integer Xes
    local item Ces
    set DSw[ASw] = Des
    set ASw = ASw + 1
    set Hes = GetTriggerUnit()
    set Jes = eDs(Hes)
    set Kes = hgr(Jes)
    set Les = xus(hgr(Jes), "when calling getCustomPlayer in Voidless_triggers, line 304")
    set Xes = xMi(Les, "when calling getCHero in Voidless_triggers, line 305")
    set Ces = GetManipulatedItem()
    if q3t(Ces) == BF then
        if brs(Ces) != Ots(Ces, Kes, "when calling getChargesVirtual in Voidless_triggers, line 309") then
            call Rnu(Ces, Ots(Ces, Kes, "when calling getChargesVirtual in Voidless_triggers, line 310"))
        endif
        if OK == 0 and GpS(eK, Xes, "when calling has in Voidless_triggers, line 312") then
            call x7t(Jes, "when calling prepareRealDungeon in Voidless_triggers, line 313")
        elseif OK > 0 and J_i(fc[MJ], Hes) then
            call wBr(Hes, "when calling updateStabilizedVoidPrismIcon in Voidless_triggers, line 315")
        endif
    endif
    set ASw = ASw - 1
    set Hes = null
    set Jes = null
    set Ces = null
endfunction
function b2w takes nothing returns nothing
    set ASw = 0
    call Ves("via function reference Voidless_triggers, line 300")
endfunction
function b4t takes nothing returns nothing
    set Bc[1 + GetPlayerId(GetTriggerPlayer())] = Bc[1 + GetPlayerId(GetTriggerPlayer())] + 1
    set bS = lVs(GetTriggerPlayer(), Condition(wpw))
    call ForGroupBJ(bS, upw)
    call DestroyGroup(bS)
endfunction
function b7w takes nothing returns boolean
    local trigger o7w
    local trigger O7w
    local trigger l7w
    set jD = 300.
    set xD = 2.
    set vD = 1300.
    set mD = 0.2
    set o7w = CreateTrigger()
    call B2S(o7w, UWw)
    set O7w = o7w
    call dUs(O7w, Condition(IWw))
    set l7w = O7w
    call l2w(l7w, EVENT_PLAYER_UNIT_SPELL_EFFECT)
    set o7w = null
    set O7w = null
    set l7w = null
    return true
endfunction
function b9u takes nothing returns boolean
    return (GetItemTypeId(GetManipulatedItem()) == 1227895875 and IsUnitType(GetTriggerUnit(), UNIT_TYPE_HERO) and GetHeroLevel(GetTriggerUnit()) >= 205 and IsPlayerInForce(GetOwningPlayer(GetTriggerUnit()), pc[$00000006]) == false and uw[(1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))) * 1000 + fkS(GetTriggerUnit())] == false) != false
endfunction
function bBw takes nothing returns boolean
    return GetUnitTypeId(GetTriggerUnit()) == 1211117876 and GetUnitTypeId(GetOrderTargetUnit()) == 1747989063 and IsPlayerInForce(GetOwningPlayer(GetTriggerUnit()), rt) and IsPlayerInForce(GetOwningPlayer(GetTriggerUnit()), jt) and IsUnitInGroup(GetTriggerUnit(), kpu(300., GetUnitLoc(GetOrderTargetUnit())))
endfunction
function VJu takes framehandle CJu returns boolean
    return BlzFrameIsVisible(CJu)
endfunction
function XfS takes string KfS returns integer
    local integer LfS
    set DSw[ASw] = KfS
    set ASw = ASw + 1
    if LC == 0 then
        if XC < 32768 then
            set XC = XC + 1
            set LfS = XC
            set CC[LfS] = 1174
        else
            call tNr("Out of memory: Could not create ForGroupCallback_forEachIn_forEach_doAfter_Imp3DragonFortress.", "when calling error in Imp3DragonFortress, line 1324")
            set LfS = 0
        endif
    else
        set LC = LC - 1
        set LfS = KC[LC]
        set CC[LfS] = 1174
    endif
    set ASw = ASw - 1
    return LfS
endfunction
function abr takes string ebr returns integer
    local integer qbr
    set DSw[ASw] = ebr
    set ASw = ASw + 1
    if LC == 0 then
        if XC < 32768 then
            set XC = XC + 1
            set qbr = XC
            set CC[qbr] = 1175
        else
            call tNr("Out of memory: Could not create ForGroupCallback_forEachIn_forEach_doAfter_Imp3DragonFortress.", "when calling error in Imp3DragonFortress, line 1335")
            set qbr = 0
        endif
    else
        set LC = LC - 1
        set qbr = KC[LC]
        set CC[qbr] = 1175
    endif
    set ASw = ASw - 1
    return qbr
endfunction
function nJs takes string VHs returns nothing
    local player BHs
    local integer NHs
    local integer MHs
    local integer wJs
    local unit uJs
    local boolean rJs
    local boolean sJs
    local integer tJs
    local integer iJs
    local integer SJs
    local framehandle cJs
    local framehandle oJs
    local string OJs
    local framehandle lJs
    local framehandle bJs
    local framehandle yJs
    local framehandle pJs
    local framehandle eJs
    local group qJs
    local group aJs
    set DSw[ASw] = VHs
    set ASw = ASw + 1
    set BHs = GetEnumPlayer()
    set NHs = hgr(BHs)
    set MHs = tOS(BHs, "when calling getCustomPlayer in Imp3DragonFortress, line 1312")
    set wJs = xMi(MHs, "when calling getCHero in Imp3DragonFortress, line 1313")
    set uJs = hqs(wJs, "when calling getHero in Imp3DragonFortress, line 1314")
    set rJs = GetRandomInt($00000000, $00000063) == 0
    set sJs = GetRandomInt($00000000, $00002710) == 0
    if nPr(wps(QZ, NHs, "when calling get in Imp3DragonFortress, line 1318"), "when calling stringFromIndex in Imp3DragonFortress, line 1318") == nPr(wps(mZ, NHs, "when calling get in Imp3DragonFortress, line 1318"), "when calling stringFromIndex in Imp3DragonFortress, line 1318") or sJs and(not rJs) then
        call DDr(Vc, uJs)
        if sJs then
            call dii(pF + "Chronosphere tries to hit you, but you hide yourself behind a dragon egg.|r", 5., eDs(uJs))
            set qJs = fc[$0000000C]
            set tJs = XfS("when calling alloc_ForGroupCallback_forEachIn_forEach_doAfter_Imp3DragonFortress in Imp3DragonFortress, line 1324")
            set j9[tJs] = uJs
            call rou(qJs, tJs, "when calling forEachIn in Imp3DragonFortress, line 1324")
        endif
    else
        call DDr(Kc, uJs)
        if rJs then
            call dii(bF + "Chronosphere 'unluckily' hits you even tho you managed to dodge it!!!|r", 5., eDs(uJs))
            set aJs = fc[$0000000C]
            set iJs = abr("when calling alloc_ForGroupCallback_forEachIn_forEach_doAfter_Imp3DragonFortress in Imp3DragonFortress, line 1335")
            set x9[iJs] = uJs
            call rou(aJs, iJs, "when calling forEachIn in Imp3DragonFortress, line 1335")
            if nPr(wps(QZ, NHs, "when calling get in Imp3DragonFortress, line 1340"), "when calling stringFromIndex in Imp3DragonFortress, line 1340") == nPr(wps(mZ, NHs, "when calling get in Imp3DragonFortress, line 1340"), "when calling stringFromIndex in Imp3DragonFortress, line 1340") then
    set SJs = k6w("1766", "when calling unObfuscateInt in Imp3DragonFortress, line 1341")
    if EW !=- 1 then
                    set SJs = GetRandomInt($00000002, $00000004)
    endif
    call dii("You have found " + fju(SJs) + " power shards when attempting the Chronosphere!", 5., eDs(uJs))
    call N3r(aD[NHs], SJs)
    call Uai(aD[NHs], AOS(uJs, 260.), qcw, acw, 0.005, 0.005, "+" + fju(SJs) + " power shards", 8., 2., 0.75, cF, oF, OF, lF, "when calling createTag in Imp3DragonFortress, line 1346")
    call cFt(NHs, "when calling limitGoldAndShardsForPlayer in Imp3DragonFortress, line 1347")
            endif
        endif
    endif
    if BW != null then
        if VJu(BW) then
            if rJs and BHs == nD then
    call Wrt(NW, "")
    call Wrt(MW, "Unlucky fail!")
    call Wrt(wE, "")
    call Wrt(uE, "")
    call Wrt(rE, "")
            elseif sJs and BHs == nD then
    call Wrt(NW, "")
    set cJs = MW
    call Wrt(cJs, "Lucky success!")
    set oJs = cJs
    call NEi(oJs, $00000000, $000000FF, $00000000, $000000FF)
    call Wrt(wE, "")
    call Wrt(uE, "")
    call Wrt(rE, "")
            else
    set OJs = nPr(wps(QZ, NHs, "when calling get in Imp3DragonFortress, line 1365"), "when calling stringFromIndex in Imp3DragonFortress, line 1365")
    if BHs == nD then
                    if vQt(OJs) >= 0 and Dsi(OJs, $00000000) == Dsi(nPr(wps(mZ, NHs, "when calling get in Imp3DragonFortress, line 1368"), "when calling stringFromIndex in Imp3DragonFortress, line 1368"), $00000000) then
                        set lJs = NW
                        call NEi(lJs, $00000000, $000000FF, $00000000, $000000FF)
                    endif
                    if vQt(OJs) >= 1 and Dsi(OJs, $00000001) == Dsi(nPr(wps(mZ, NHs, "when calling get in Imp3DragonFortress, line 1370"), "when calling stringFromIndex in Imp3DragonFortress, line 1370"), $00000001) then
                        set bJs = MW
                        call NEi(bJs, $00000000, $000000FF, $00000000, $000000FF)
                    endif
                    if vQt(OJs) >= 2 and Dsi(OJs, $00000002) == Dsi(nPr(wps(mZ, NHs, "when calling get in Imp3DragonFortress, line 1372"), "when calling stringFromIndex in Imp3DragonFortress, line 1372"), $00000002) then
                        set yJs = wE
                        call NEi(yJs, $00000000, $000000FF, $00000000, $000000FF)
                    endif
                    if PW then
                        if vQt(OJs) >= 3 and Dsi(OJs, $00000003) == Dsi(nPr(wps(mZ, NHs, "when calling get in Imp3DragonFortress, line 1375"), "when calling stringFromIndex in Imp3DragonFortress, line 1375"), $00000003) then
                            set pJs = uE
                            call NEi(pJs, $00000000, $000000FF, $00000000, $000000FF)
                        endif
                        if vQt(OJs) >= 4 and Dsi(OJs, $00000004) == Dsi(nPr(wps(mZ, NHs, "when calling get in Imp3DragonFortress, line 1377"), "when calling stringFromIndex in Imp3DragonFortress, line 1377"), $00000004) then
                            set eJs = rE
                            call NEi(eJs, $00000000, $000000FF, $00000000, $000000FF)
                        endif
                    endif
    endif
            endif
        endif
    endif
    set ASw = ASw - 1
    set BHs = null
    set uJs = null
    set cJs = null
    set oJs = null
    set lJs = null
    set bJs = null
    set yJs = null
    set pJs = null
    set eJs = null
    set qJs = null
    set aJs = null
endfunction
function bEi takes nothing returns nothing
    set ASw = 0
    call nJs("via function reference Imp3DragonFortress, line 1309")
endfunction
function b2s takes nothing returns integer
    return Gh[gh - 1]
endfunction
function gPt takes unit YPt, string GPt returns nothing
    set DSw[ASw] = GPt
    set ASw = ASw + 1
    if Fh < hh then
        call jcS(b2s(), YPt, "when calling callback in ClosureForGroups, line 18")
    endif
    set Fh = Fh + 1
    set ASw = ASw - 1
endfunction
function bBr takes string lBr returns nothing
    set DSw[ASw] = lBr
    set ASw = ASw + 1
    call gPt(GetFilterUnit(), "when calling filterCallback in ClosureForGroups, line 14")
    set ASw = ASw - 1
endfunction
function bGs takes nothing returns nothing
    set ASw = 0
    call bBr("via function reference ClosureForGroups, line 14")
endfunction
function bGt takes nothing returns boolean
    return GetUnitTypeId(GetTriggerUnit()) == 1211117873 and GetUnitTypeId(GetOrderTargetUnit()) == 1747989080 and IsPlayerInForce(GetOwningPlayer(GetTriggerUnit()), rt) == false and IsUnitInGroup(GetTriggerUnit(), kpu(300., GetUnitLoc(GetOrderTargetUnit()))) and GetHeroLevel(GetTriggerUnit()) >= 150
endfunction
function bRi takes nothing returns boolean
    return GetUnitTypeId(GetTriggerUnit()) == 1211117891 and GetUnitTypeId(GetOrderTargetUnit()) == 1747989081 and IsPlayerInForce(GetOwningPlayer(GetTriggerUnit()), rt) and IsPlayerInForce(GetOwningPlayer(GetTriggerUnit()), ii) and IsUnitInGroup(GetTriggerUnit(), kpu(300., GetUnitLoc(GetOrderTargetUnit())))
endfunction
function wLr takes nothing returns boolean
    return GetSpellAbilityId() == 1093679157 or GetSpellAbilityId() == 1093679156 or GetSpellAbilityId() == 1093679158 or GetSpellAbilityId() == 1093679154
endfunction
function bTi takes nothing returns boolean
    return IsPlayerInForce(GetOwningPlayer(GetTriggerUnit()), do) == false and UnitHasItemOfTypeBJ(GetTriggerUnit(), $4930344F) and wLr()
endfunction
function bTs takes nothing returns boolean
    return GetUnitTypeId(GetTriggerUnit()) == 1211117639 and GetUnitTypeId(GetOrderTargetUnit()) == 1747988819 and UnitHasItemOfTypeBJ(GetTriggerUnit(), $4930305A) == false and IsPlayerInForce(GetOwningPlayer(GetTriggerUnit()), Vr) and IsPlayerInForce(GetOwningPlayer(GetTriggerUnit()), Gs) and IsUnitInGroup(GetTriggerUnit(), kpu(300., GetUnitLoc(GetOrderTargetUnit())))
endfunction
function RNr takes nothing returns boolean
    return si[1 + GetPlayerId(GetOwningPlayer(GetKillingUnit()))] >= 50
endfunction
function bWi takes nothing returns nothing
    set si[1 + GetPlayerId(GetOwningPlayer(GetKillingUnit()))] = si[1 + GetPlayerId(GetOwningPlayer(GetKillingUnit()))] + 1
    if RNr() then
        call QuestMessageBJ(MwS(GetOwningPlayer(GetKillingUnit())), $00000002, "|cffffcc004th Job Advancement Quest Completed|r.")
        call ForceAddPlayer(ti, GetOwningPlayer(GetKillingUnit()))
    else
        call QuestMessageBJ(MwS(GetOwningPlayer(GetKillingUnit())), $00000001, I2S(si[1 + GetPlayerId(GetOwningPlayer(GetKillingUnit()))]) + " Dark Elf/Elves killed.")
    endif
endfunction
function bYt takes nothing returns nothing
    call AdjustPlayerStateBJ($00000001, GetEnumPlayer(), PLAYER_STATE_RESOURCE_LUMBER)
    call PanCameraToTimedLocForPlayer(GetEnumPlayer(), br[1 + GetPlayerId(GetEnumPlayer())], 0.)
    set iw[GetPlayerId(GetEnumPlayer())] = GetPlayerId(GetEnumPlayer())
    set Sw[GetPlayerId(GetEnumPlayer())] = pr[wS[Ni * 100 + GetPlayerId(GetEnumPlayer())]]
endfunction
function bjs takes nothing returns boolean
    return IsUnitType(GetTriggerUnit(), UNIT_TYPE_HERO) != false
endfunction
function blS takes nothing returns boolean
    set WP = false
    return true
endfunction
function bli takes nothing returns nothing
    set ASw = 0
    call r_t("via function reference JobAdvancementQuestHandler, line 1019")
endfunction
function bni takes nothing returns nothing
    call PanCameraToTimedLocForPlayer(GetEnumPlayer(), vo, 0.)
    call TriggerExecute(MT)
endfunction
function bou takes nothing returns boolean
    return GetOwningPlayer(GetTriggerUnit()) == Player(PLAYER_NEUTRAL_AGGRESSIVE)
endfunction
function brS takes nothing returns nothing
    call ForceRemovePlayer(IS[$00000005], GetOwningPlayer(GetTriggerUnit()))
    call DestroyQuest(cs[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))])
    set cs[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))] = null
    set os[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))] = 0
    call PlaySoundBJ(pe)
    call DisplayTimedTextToForce(MwS(GetOwningPlayer(GetOrderedUnit())), 5., "|cffffcc00You have completed the Quest|r.")
    call AddHeroXPSwapped(n, GetTriggerUnit(), true)
    call AdjustPlayerStateBJ($00000DAC, GetOwningPlayer(GetTriggerUnit()), PLAYER_STATE_RESOURCE_GOLD)
endfunction
function o2u takes nothing returns boolean
    return qs == 0
endfunction
function bwt takes nothing returns nothing
    if o2u() then
        call PlaySoundBJ(ne)
        set qs = 1
        call DisplayTimedTextToForce(Rc[$00000005], 5., "|cffffcc00You hear a click sound and know you have stepped on the correct pedal.|r")
    else
        set qs = 0
        call DisplayTimedTextToForce(Rc[$00000005], 5., "|cffff0000You hear a ringing sound. All pedals were reset!|r")
    endif
endfunction
function S2t takes nothing returns boolean
    return GetUnitTypeId(GetTriggerUnit()) == 1211118157 or GetUnitTypeId(GetTriggerUnit()) == 1211118156
endfunction
function bxr takes nothing returns boolean
    return GetSpellAbilityId() == 1093679416 and GetPlayerState(GetOwningPlayer(GetTriggerUnit()), PLAYER_STATE_RESOURCE_FOOD_USED) == 100 and oS[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))] == 1 and S2t()
endfunction
function E6w takes string Q6w returns integer
    local integer W6w
    set DSw[ASw] = Q6w
    set ASw = ASw + 1
    if jB == 0 then
        if xB < 32768 then
            set xB = xB + 1
            set W6w = xB
            set vB[W6w] = 1277
        else
            call tNr("Out of memory: Could not create Table.", "when calling error in Table, line 6")
            set W6w = 0
        endif
    else
        set jB = jB - 1
        set W6w = kB[jB]
        set vB[W6w] = 1277
    endif
    set ASw = ASw - 1
    return W6w
endfunction
function VQs takes string XQs returns integer
    local integer CQs
    set DSw[ASw] = XQs
    set ASw = ASw + 1
    set CQs = E6w("when calling alloc_Table in Table, line 5")
    call Ect(CQs)
    set ASw = ASw - 1
    return CQs
endfunction
function Xks takes string Lks returns boolean
    set DSw[ASw] = Lks
    set ASw = ASw + 1
    call jts("when calling new_HashMap in EventHelper, line 7")
    call jts("when calling new_HashMap in EventHelper, line 8")
    call VQs("when calling new_Table in EventHelper, line 9")
    set ASw = ASw - 1
    return true
endfunction
function c2u takes nothing returns boolean
    set ASw = 0
    return Xks("via function reference EventHelper, line 1")
endfunction
function c2w takes nothing returns nothing
    set ps = GetRectCenter(Wy)
    call SetUnitPositionLocFacingBJ(GetTriggerUnit(), ps, 270.)
    call PanCameraToTimedLocForPlayer(GetOwningPlayer(GetTriggerUnit()), ps, 0.)
    call TriggerExecute(MT)
    call RemoveLocation(ps)
endfunction
function H2w takes nothing returns boolean
    return IsPlayerInForce(GetOwningPlayer(GetTriggerUnit()), ec[$00000003]) and IsPlayerInForce(GetOwningPlayer(GetTriggerUnit()), ec[$00000004]) == false
endfunction
function c3s takes nothing returns nothing
    call RemoveItem(GetManipulatedItem())
    if H2w() then
        call ForceAddPlayer(pc[$00000004], GetOwningPlayer(GetTriggerUnit()))
        call DisplayTextToForce(MwS(GetOwningPlayer(GetTriggerUnit())), "|cffffcc00Arnold|r : Good news! Recently, our expedition team found a new type of crystal. So I want you to do two tasks. Deliver a message to Master Ember and Kain. Tell Master Ember that new crystals has been found and will be sent to him soon, and tell Kain to deliver the materials I require as he's late again. You should know where Master Ember is and Kain is with Kiba in the Glacier Forest. You got your task, now off with you!")
        call T_i(GetOwningPlayer(GetTriggerUnit()), $00000000, "Research and Development", "I have two new tasks:\n|cffffcc00Deliver a message to Master Ember in the Arcane Sanctuary|r.\n|cffffcc00Deliver a message to Kain in Glacier Forest|r.\nThis should be an easy task.", "ReplaceableTextures\\CommandButtons\\BTNMechanicalCritter.blp")
        set ac[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))] = bj_lastCreatedQuest
    endif
endfunction
function c7S takes nothing returns boolean
    return t_u(GetDyingUnit())
endfunction
function c7w takes nothing returns boolean
    return GetUnitTypeId(GetDyingUnit()) == 1848652082 and IsPlayerInForce(GetOwningPlayer(GetKillingUnit()), IS[$00000008])
endfunction
function c9S takes nothing returns nothing
    call PanCameraToTimedLocForPlayer(GetEnumPlayer(), br[1 + GetPlayerId(GetEnumPlayer())], 0.)
    set iw[GetPlayerId(GetEnumPlayer())] = GetPlayerId(GetEnumPlayer())
    set Sw[GetPlayerId(GetEnumPlayer())] = pr[wS[Ni * 100 + GetPlayerId(GetEnumPlayer())]]
endfunction
function Ogr takes string tgr returns nothing
    local integer igr
    local unit Sgr
    local player cgr
    local integer ogr
    set DSw[ASw] = tgr
    set ASw = ASw + 1
    set igr = GetSpellAbilityId()
    set Sgr = GetTriggerUnit()
    set cgr = eDs(Sgr)
    set ogr = W3r(igr, "when calling getUltimateCost in Spells_Checks, line 88")
    if ogr > 0 and(not ONi(Xt, cgr)) then
        call Q5r(cgr, kbr(cgr) - W3r(igr, "when calling getUltimateCost in Spells_Checks, line 90"))
    endif
    set ASw = ASw - 1
    set Sgr = null
    set cgr = null
endfunction
function c9u takes nothing returns nothing
    set ASw = 0
    call Ogr("via function reference Spells_Checks, line 84")
endfunction
function wGu takes string MYu returns nothing
    set DSw[ASw] = MYu
    set ASw = ASw + 1
    call ggt("when calling generalEventCallback in ClosureEvents, line 294")
    set ASw = ASw - 1
endfunction
function cAw takes nothing returns nothing
    set ASw = 0
    call wGu("via function reference ClosureEvents, line 294")
endfunction
function QMs takes string vMs returns integer
    local integer mMs
    set DSw[ASw] = vMs
    set ASw = ASw + 1
    if NX == 0 then
        if MX < 32768 then
            set MX = MX + 1
            set mMs = MX
            set wC[mMs] = 1022
        else
            call tNr("Out of memory: Could not create CallbackSingle_doAfter_addAction_doAfter_FateDestinyUnlocker.", "when calling error in FateDestinyUnlocker, line 592")
            set mMs = 0
        endif
    else
        set NX = NX - 1
        set mMs = BX[NX]
        set wC[mMs] = 1022
    endif
    set ASw = ASw - 1
    return mMs
endfunction
function dgu takes string agu returns integer
    local integer ngu
    set DSw[ASw] = agu
    set ASw = ASw + 1
    if NX == 0 then
        if MX < 32768 then
            set MX = MX + 1
            set ngu = MX
            set wC[ngu] = 1023
        else
            call tNr("Out of memory: Could not create CallbackSingle_doAfter_addAction_doAfter_FateDestinyUnlocker.", "when calling error in FateDestinyUnlocker, line 595")
            set ngu = 0
        endif
    else
        set NX = NX - 1
        set ngu = BX[NX]
        set wC[ngu] = 1023
    endif
    set ASw = ASw - 1
    return ngu
endfunction
function fNr takes string nNr returns integer
    local integer dNr
    set DSw[ASw] = nNr
    set ASw = ASw + 1
    if NX == 0 then
        if MX < 32768 then
            set MX = MX + 1
            set dNr = MX
            set wC[dNr] = 1025
        else
            call tNr("Out of memory: Could not create CallbackSingle_doAfter_addAction_doAfter_FateDestinyUnlocker.", "when calling error in FateDestinyUnlocker, line 600")
            set dNr = 0
        endif
    else
        set NX = NX - 1
        set dNr = BX[NX]
        set wC[dNr] = 1025
    endif
    set ASw = ASw - 1
    return dNr
endfunction
function kIt takes player GIt, camerafield gIt, real hIt, real FIt returns nothing
    call SetCameraFieldForPlayer(GIt, gIt, hIt, FIt)
endfunction
function p5S takes string b5S returns integer
    local integer y5S
    set DSw[ASw] = b5S
    set ASw = ASw + 1
    if NX == 0 then
        if MX < 32768 then
            set MX = MX + 1
            set y5S = MX
            set wC[y5S] = 1029
        else
            call tNr("Out of memory: Could not create CallbackSingle_doAfter_addAction_doAfter_FateDestinyUnlocker.", "when calling error in FateDestinyUnlocker, line 660")
            set y5S = 0
        endif
    else
        set NX = NX - 1
        set y5S = BX[NX]
        set wC[y5S] = 1029
    endif
    set ASw = ASw - 1
    return y5S
endfunction
function p6S takes string b6S returns integer
    local integer y6S
    set DSw[ASw] = b6S
    set ASw = ASw + 1
    if NX == 0 then
        if MX < 32768 then
            set MX = MX + 1
            set y6S = MX
            set wC[y6S] = 1028
        else
            call tNr("Out of memory: Could not create CallbackSingle_doAfter_addAction_doAfter_FateDestinyUnlocker.", "when calling error in FateDestinyUnlocker, line 654")
            set y6S = 0
        endif
    else
        set NX = NX - 1
        set y6S = BX[NX]
        set wC[y6S] = 1028
    endif
    set ASw = ASw - 1
    return y6S
endfunction
function qYi takes string pYi returns integer
    local integer eYi
    set DSw[ASw] = pYi
    set ASw = ASw + 1
    if NX == 0 then
        if MX < 32768 then
            set MX = MX + 1
            set eYi = MX
            set wC[eYi] = 1027
        else
            call tNr("Out of memory: Could not create CallbackSingle_doAfter_addAction_doAfter_FateDestinyUnlocker.", "when calling error in FateDestinyUnlocker, line 608")
            set eYi = 0
        endif
    else
        set NX = NX - 1
        set eYi = BX[NX]
        set wC[eYi] = 1027
    endif
    set ASw = ASw - 1
    return eYi
endfunction
function sOt takes string uOt returns integer
    local integer rOt
    set DSw[ASw] = uOt
    set ASw = ASw + 1
    if NX == 0 then
        if MX < 32768 then
            set MX = MX + 1
            set rOt = MX
            set wC[rOt] = 1026
        else
            call tNr("Out of memory: Could not create CallbackSingle_doAfter_addAction_doAfter_FateDestinyUnlocker.", "when calling error in FateDestinyUnlocker, line 603")
            set rOt = 0
        endif
    else
        set NX = NX - 1
        set rOt = BX[NX]
        set wC[rOt] = 1026
    endif
    set ASw = ASw - 1
    return rOt
endfunction
function tsu takes string rsu returns integer
    local integer ssu
    set DSw[ASw] = rsu
    set ASw = ASw + 1
    if NX == 0 then
        if MX < 32768 then
            set MX = MX + 1
            set ssu = MX
            set wC[ssu] = 1024
        else
            call tNr("Out of memory: Could not create CallbackSingle_doAfter_addAction_doAfter_FateDestinyUnlocker.", "when calling error in FateDestinyUnlocker, line 598")
            set ssu = 0
        endif
    else
        set NX = NX - 1
        set ssu = BX[NX]
        set wC[ssu] = 1024
    endif
    set ASw = ASw - 1
    return ssu
endfunction
function bgS takes string PGS returns nothing
    local unit AGS
    local player DGS
    local integer HGS
    local integer JGS
    local integer KGS
    local integer LGS
    local integer XGS
    local real CGS
    local integer VGS
    local integer BGS
    local integer NGS
    local integer MGS
    local integer wgS
    local integer ugS
    local integer rgS
    local integer sgS
    local real tgS
    local real igS
    local real SgS
    local real cgS
    local real ogS
    local real OgS
    local real lgS
    set DSw[ASw] = PGS
    set ASw = ASw + 1
    set AGS = GetTriggerUnit()
    set DGS = eDs(AGS)
    set HGS = hgr(eDs(AGS))
    set JGS = q3t(GetManipulatedItem())
    if JGS == l2s(Iji(am, "when calling unObfuscate in FateDestinyUnlocker, line 573"), "when calling fromRawCode in FateDestinyUnlocker, line 573") or JGS == BF and(not GpS(Cv, HGS, "when calling has in FateDestinyUnlocker, line 573")) then
        set KGS = ict(AGS, l2s(Iji(am, "when calling unObfuscate in FateDestinyUnlocker, line 574"), "when calling fromRawCode in FateDestinyUnlocker, line 574"))
        if (KGS >= 3 and GpS(Nv, HGS, "when calling has in FateDestinyUnlocker, line 575"))or JGS == BF and(not um) and XYt(ANw(AGS), XSw, sm) then
            set LGS = xus(HGS, "when calling getCustomPlayer in FateDestinyUnlocker, line 576")
            set XGS = xMi(LGS, "when calling getCHero in FateDestinyUnlocker, line 577")
            if XGS != 0 and JGS == BF and x0S(DGS, "when calling getVoidlessMaxReachableStage in FateDestinyUnlocker, line 580") >= wK then
    set um = true
    set CGS = n8w(LGS, "when calling getCameraZoomLevel in FateDestinyUnlocker, line 583")
    call Kcs(LGS, 3000., "when calling setCameraZoomLevel in FateDestinyUnlocker, line 584")
    call k4t(Ng, DGS, ANw(AGS), XSw, "when calling lockAndPan in FateDestinyUnlocker, line 585")
    call kIt(DGS, CAMERA_FIELD_TARGET_DISTANCE, 3000., 2.)
    if nD == DGS then
                    call ShowInterface(false, 2.)
                    call ClearTextMessages()
    endif
    set VGS = QMs("when calling alloc_CallbackSingle_doAfter_addAction_doAfter_FateDestinyUnlocker in FateDestinyUnlocker, line 592")
    call RUs(VGS)
    set q7[VGS] = AGS
    call Ybr(1.5, VGS, "when calling doAfter in FateDestinyUnlocker, line 592")
    set tgS = 1.5 + oQ - 3.
    set BGS = dgu("when calling alloc_CallbackSingle_doAfter_addAction_doAfter_FateDestinyUnlocker in FateDestinyUnlocker, line 595")
    call RUs(BGS)
    set a7[BGS] = DGS
    call Ybr(tgS, BGS, "when calling doAfter in FateDestinyUnlocker, line 595")
    set igS = 1.5 + oQ - 2.
    set NGS = tsu("when calling alloc_CallbackSingle_doAfter_addAction_doAfter_FateDestinyUnlocker in FateDestinyUnlocker, line 598")
    call RUs(NGS)
    set n7[NGS] = DGS
    call Ybr(igS, NGS, "when calling doAfter in FateDestinyUnlocker, line 598")
    set SgS = 1.5 + oQ - 1.
    set MGS = fNr("when calling alloc_CallbackSingle_doAfter_addAction_doAfter_FateDestinyUnlocker in FateDestinyUnlocker, line 600")
    call RUs(MGS)
    set d7[MGS] = DGS
    call Ybr(SgS, MGS, "when calling doAfter in FateDestinyUnlocker, line 600")
    set cgS = 1.5 + oQ + 1.
    set wgS = sOt("when calling alloc_CallbackSingle_doAfter_addAction_doAfter_FateDestinyUnlocker in FateDestinyUnlocker, line 603")
    call RUs(wgS)
    set f7[wgS] = HGS
    set R7[wgS] = AGS
    set T7[wgS] = LGS
    call Ybr(cgS, wgS, "when calling doAfter in FateDestinyUnlocker, line 603")
    set ogS = 1.5 + oQ + 5.
    set ugS = qYi("when calling alloc_CallbackSingle_doAfter_addAction_doAfter_FateDestinyUnlocker in FateDestinyUnlocker, line 608")
    call RUs(ugS)
    set Y7[ugS] = AGS
    set G7[ugS] = HGS
    set g7[ugS] = LGS
    set h7[ugS] = DGS
    set F7[ugS] = CGS
    call Ybr(ogS, ugS, "when calling doAfter in FateDestinyUnlocker, line 608")
            elseif JGS == BF and brs(GetManipulatedItem()) < wK then
    call dii(fm, 8., DGS)
            else
    call vwt(Cv, HGS, "when calling add in FateDestinyUnlocker, line 652")
    call dii(dm, 8., DGS)
    set OgS = 8. + 1.
    set rgS = p6S("when calling alloc_CallbackSingle_doAfter_addAction_doAfter_FateDestinyUnlocker in FateDestinyUnlocker, line 654")
    call RUs(rgS)
    set j7[rgS] = HGS
    call Ybr(OgS, rgS, "when calling doAfter in FateDestinyUnlocker, line 654")
            endif
        elseif JGS != BF then
            call vwt(Cv, HGS, "when calling add in FateDestinyUnlocker, line 657")
            call dii(nm, 8., DGS)
            set lgS = 8. + 1.
            set sgS = p5S("when calling alloc_CallbackSingle_doAfter_addAction_doAfter_FateDestinyUnlocker in FateDestinyUnlocker, line 660")
            call RUs(sgS)
            set x7[sgS] = HGS
            call Ybr(lgS, sgS, "when calling doAfter in FateDestinyUnlocker, line 660")
        endif
    endif
    set ASw = ASw - 1
    set AGS = null
    set DGS = null
endfunction
function cBu takes nothing returns nothing
    set ASw = 0
    call bgS("via function reference FateDestinyUnlocker, line 566")
endfunction
function cDw takes nothing returns nothing
    call SetUnitPositionLoc(GetEnumUnit(), br[1 + GetPlayerId(GetOwningPlayer(GetEnumUnit()))])
endfunction
function cGi takes nothing returns nothing
    call ForceRemovePlayer(nr, GetOwningPlayer(GetTriggerUnit()))
    call ForceRemovePlayer(fr, GetOwningPlayer(GetTriggerUnit()))
    set Rr[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))] = 0
    call DisplayTextToForce(MwS(GetOwningPlayer(GetTriggerUnit())), "|cffffcc00Class Trainer|r : |cff87ceebHa ha! That'll teach those cunts a lesson not to mess with the Thieves' Guild indirectly! As for you, you have shown yourself to be truly capable, so I shall formally accept you into our Guild as a rogue. Work hard, and we'll probably meet each other again someday.")
    call PlaySoundBJ(re)
    call DestroyQuest(dr[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))])
    call SetHeroLevelBJ(GetTriggerUnit(), $00000001, false)
    call ReplaceUnitBJ(GetTriggerUnit(), $4830304C, $00000002)
    call SelectUnitForPlayerSingle(bj_lastReplacedUnit, GetOwningPlayer(GetTriggerUnit()))
    call SetHeroLevel(bj_lastReplacedUnit, $00000001, true)
    call UnitStripHeroLevel(bj_lastReplacedUnit, $00000001)
endfunction
function usS takes string MrS returns integer
    local integer wsS
    set DSw[ASw] = MrS
    set ASw = ASw + 1
    if NX == 0 then
        if MX < 32768 then
            set MX = MX + 1
            set wsS = MX
            set wC[wsS] = 1019
        else
            call tNr("Out of memory: Could not create CallbackSingle_doAfter_addAction_Spells_Checks.", "when calling error in Spells_Checks, line 127")
            set wsS = 0
        endif
    else
        set NX = NX - 1
        set wsS = BX[NX]
        set wC[wsS] = 1019
    endif
    set ASw = ASw - 1
    return wsS
endfunction
function K3u takes string W3u returns nothing
    local integer E3u
    local unit Z3u
    local integer U3u
    local unit I3u
    local integer P3u
    local real A3u
    local real D3u
    local integer H3u
    local real J3u
    set DSw[ASw] = W3u
    set ASw = ASw + 1
    set E3u = GetSpellAbilityId()
    set Z3u = GetTriggerUnit()
    set U3u = r5S(Z3u)
    set I3u = GetSpellTargetUnit()
    set P3u = r5S(I3u)
    if XYt(ANw(Z3u), XSw, Bx[hgr(eDs(Z3u))]) or XYt(ANw(Z3u), XSw, AA) then
        call lTi(Z3u, tD)
    elseif GpS(gQ, hgr(eDs(Z3u)), "when calling has in Spells_Checks, line 106") and E3u == Ak or E3u == sj then
        if E3u == sj then
            set Z3u = I3u
            set U3u = P3u
        endif
        set A3u =- 1.
        if U3u == 1211118155 then
            set A3u = 1.15
        elseif U3u == 1211118152 then
            set A3u = 1.45
        elseif U3u == 1211117617 or U3u == 1211117618 then
            set A3u = 1.25
        elseif U3u == 1747989066 then
            set A3u = 0.5
        endif
        if A3u !=- 1. then
            call GVw(UH, Aei(Z3u), B5r(A3u), "when calling put in Spells_Checks, line 124")
            call fmu(uwr(Z3u, ck), false)
            if E3u == sj then
    set D3u = 13.
            else
    set D3u = 10.
            endif
            set J3u = D3u
            set H3u = usS("when calling alloc_CallbackSingle_doAfter_addAction_Spells_Checks in Spells_Checks, line 127")
            call RUs(H3u)
            set dsw[H3u] = Z3u
            call Ybr(J3u, H3u, "when calling doAfter in Spells_Checks, line 127")
        endif
    endif
    set ASw = ASw - 1
    set Z3u = null
    set I3u = null
endfunction
function cHs takes nothing returns nothing
    set ASw = 0
    call K3u("via function reference Spells_Checks, line 96")
endfunction
function cHu takes nothing returns boolean
    return GetOrderTargetUnit() == rG and IsUnitInGroup(GetTriggerUnit(), kpu(300., GetUnitLoc(GetOrderTargetUnit())))
endfunction
function YKu takes string yKu returns nothing
    local unit pKu
    local player eKu
    local integer qKu
    local real aKu
    local real nKu
    local integer dKu
    local integer fKu
    local real RKu
    local real TKu
    set DSw[ASw] = yKu
    set ASw = ASw + 1
    set pKu = GetTriggerUnit()
    set eKu = eDs(pKu)
    set qKu = hgr(eKu)
    set RKu = ANw(pKu)
    set TKu = XSw
    set aKu = RKu
    set nKu = TKu
    set dKu = 1227895108
    set fKu = 20
    set HS[1 + qKu] = 0
    call ForceRemovePlayer(IS[$0000000F], eKu)
    call DestroyQuest(ZS[1 + qKu])
    set ZS[1 + qKu] = null
    call PlaySoundBJ(pe)
    call dii("|cffffcc00You have completed the Quest|r.", 5., eKu)
    call dii("|cffffcc00Squeaky|r : Good! I see you're coming back in one piece, means the Snoworcs are on pieces? Hahaha... Here, take this for your effort!", 10., eKu)
    call AddHeroXPSwapped(h, pKu, true)
    call wiS(qKu, dKu, aKu, nKu, eKu, fKu, pKu, "when calling addItemWithVirtualCharges in SqueakyQuestReward, line 117")
    set ASw = ASw - 1
    set pKu = null
    set eKu = null
endfunction
function cJu takes nothing returns nothing
    set ASw = 0
    call YKu("via function reference SqueakyQuestReward, line 126")
endfunction
function cJw takes nothing returns boolean
    set YQ = CreateTimer()
    call gNu(YQ, 100000., null)
    call nnr(CreateTimer(), jg, nmw)
    return true
endfunction
function cMw takes nothing returns boolean
    return GetSpellAbilityId() == xk
endfunction
function cNr takes nothing returns nothing
    call DisableTrigger(GetTriggeringTrigger())
endfunction
function cNt takes nothing returns boolean
    local trigger tNt
    local trigger iNt
    local trigger SNt
    set hg = 0.20
    set Fg = 0.50
    set kg = 2
    set tNt = CreateTrigger()
    call B2S(tNt, Wvw)
    set iNt = tNt
    call dUs(iNt, Condition(Evw))
    set SNt = iNt
    call l2w(SNt, EVENT_PLAYER_UNIT_SPELL_EFFECT)
    set tNt = null
    set iNt = null
    set SNt = null
    return true
endfunction
function J2t takes real A2t, real D2t, pathingtype H2t returns boolean
    return IsTerrainPathable(A2t, D2t, H2t)
endfunction
function mMu takes rect jMu, real xMu, real vMu returns nothing
    call MoveRectTo(jMu, xMu, vMu)
endfunction
function Qtt takes real Ytt, real Gtt, string gtt returns boolean
    local item htt
    local item Ftt
    local real ktt
    local real jtt
    local boolean xtt
    local real vtt
    local real mtt
    set DSw[ASw] = gtt
    set ASw = ASw + 1
    call mMu(lP, Ytt, Gtt)
    call EnumItemsInRect(lP, null, VQw)
    call e5u(OP, Ytt, Gtt)
    if OP == null or(nLw(OP) == 0. and oow == 0. and Ytt != 0. or Gtt != 0.) then
        set OP = null
        set htt = rgt(oP, LJ, XJ)
        call jXt(htt, false)
        set Ftt = htt
        call IOt(Ftt, aD[$00000000], false)
        set OP = Ftt
        call vwt(px, Xdu(OP), "when calling add in JobAdvancementQuestHandler, line 342")
        call e5u(OP, Ytt, Gtt)
    endif
    set vtt = nLw(OP)
    set mtt = oow
    set ktt = vtt
    set jtt = mtt
    call jXt(OP, false)
    loop
        exitwhen not(yP > 0)
        set yP = yP - 1
        call jXt(bP[yP], true)
        set bP[yP] = null
    endloop
    set xtt = (ktt - Ytt) * (ktt - Ytt) + (jtt - Gtt) * (jtt - Gtt) <= cP and(not J2t(Ytt, Gtt, PATHING_TYPE_WALKABILITY))
    set ASw = ASw - 1
    set htt = null
    set Ftt = null
    return xtt
endfunction
function U0u takes string v0u returns nothing
    local integer m0u
    local integer Q0u
    local integer W0u
    local integer E0u
    local unit Z0u
    set DSw[ASw] = v0u
    set ASw = ASw + 1
    set iu = true
    set m0u = c5r(gQ, "when calling iterator in JobAdvancementQuestHandler, line 364")
    loop
        exitwhen not Tji(m0u)
        set Q0u = LXi(m0u)
        set W0u = xus(Q0u, "when calling getCustomPlayer in JobAdvancementQuestHandler, line 365")
        set E0u = xMi(W0u, "when calling getCHero in JobAdvancementQuestHandler, line 366")
        if E0u != 0 then
            set Z0u = hqs(E0u, "when calling getHero in JobAdvancementQuestHandler, line 368")
            if Z0u != null and yXu(Z0u) then
    if (not Qtt(ANw(Z0u), XSw, "when calling isTerrainWalkable2 in JobAdvancementQuestHandler, line 370"))and(not J_i(fc[$0000000D], Z0u)) and(not GpS(Bv, Aei(Z0u), "when calling has in JobAdvancementQuestHandler, line 370")) then
                    if Z0u != null then
                        call Tri(Z0u)
                    endif
                    call dii(Iji("You've accidentally died on a non-walkable tile!", "when calling unObfuscate in JobAdvancementQuestHandler, line 375"), 5., eDs(Z0u))
    endif
            endif
        endif
    endloop
    call vms(m0u, "when calling close in JobAdvancementQuestHandler, line 364")
    set ASw = ASw - 1
    set Z0u = null
endfunction
function cTi takes nothing returns nothing
    set ASw = 0
    call U0u("via function reference JobAdvancementQuestHandler, line 1209")
endfunction
function XJw takes string mJw returns nothing
    local integer QJw
    local integer WJw
    local integer EJw
    local integer ZJw
    local integer UJw
    local player IJw
    local real PJw
    local real AJw
    local item DJw
    local item HJw
    local item JJw
    local real KJw
    local real LJw
    set DSw[ASw] = mJw
    set ASw = ASw + 1
    set QJw = 0
    set WJw = Lh
    loop
        exitwhen QJw > WJw
        set EJw = iw[QJw]
        set ZJw = Sw[QJw]
        if EJw !=- 1 and ZJw !=- 1 then
            set UJw = xus(EJw, "when calling getCustomPlayer in Items_Pickup_Drop, line 67")
            set IJw = DCr(UJw, "when calling getPlayer in Items_Pickup_Drop, line 68")
            set KJw = oQu(Bx[EJw])
            set LJw = Gcw
            set PJw = KJw
            set AJw = LJw
            call vwt(Zx, EJw, "when calling add in Items_Pickup_Drop, line 70")
            set HJw = CreateItem(ZJw, PJw, AJw)
            call IOt(HJw, IJw, true)
            set JJw = HJw
            call Rnu(JJw, $00000000)
            set DJw = JJw
            call vwt(px, Xdu(DJw), "when calling add in Items_Pickup_Drop, line 72")
            call GVw(ex, Xdu(DJw), EJw, "when calling put in Items_Pickup_Drop, line 73")
            set iw[QJw] =- 1
            set Sw[QJw] =- 1
        endif
        set QJw = QJw + 1
    endloop
    set ASw = ASw - 1
    set IJw = null
    set DJw = null
    set HJw = null
    set JJw = null
endfunction
function cVs takes nothing returns nothing
    set ASw = 0
    call XJw("via function reference Items_Pickup_Drop, line 769")
endfunction
function cVt takes nothing returns nothing
    call SetUnitOwner(GetEnumUnit(), Player(PLAYER_NEUTRAL_AGGRESSIVE), true)
endfunction
function cWt takes nothing returns nothing
    call DisplayTimedTextToForce(MwS(uO), 4., "|cff8A2BE2WORST")
    call ForceRemovePlayer(rO, uO)
    call ForceRemovePlayer(sO, uO)
endfunction
function jQt takes nothing returns boolean
    return GetSpellAbilityId() == 1093678916 or GetSpellAbilityId() == 1093678925 or GetSpellAbilityId() == 1093678167
endfunction
function cYS takes nothing returns boolean
    return jQt()
endfunction
function cYt takes nothing returns nothing
    call SetUnitInvulnerable(GetEnumUnit(), true)
    call PauseUnit(GetEnumUnit(), true)
endfunction
function Ksi takes string Hsi returns integer
    local integer Jsi
    set DSw[ASw] = Hsi
    set ASw = ASw + 1
    if LC == 0 then
        if XC < 32768 then
            set XC = XC + 1
            set Jsi = XC
            set CC[Jsi] = 1168
        else
            call tNr("Out of memory: Could not create ForGroupCallback_forEachIn_Imp3DragonFortress.", "when calling error in Imp3DragonFortress, line 996")
            set Jsi = 0
        endif
    else
        set LC = LC - 1
        set Jsi = KC[LC]
        set CC[Jsi] = 1168
    endif
    set ASw = ASw - 1
    return Jsi
endfunction
function L3s takes string J3s returns integer
    local integer K3s
    set DSw[ASw] = J3s
    set ASw = ASw + 1
    if NX == 0 then
        if MX < 32768 then
            set MX = MX + 1
            set K3s = MX
            set wC[K3s] = 859
        else
            call tNr("Out of memory: Could not create CallbackSingle_doAfter_Imp3DragonFortress.", "when calling error in Imp3DragonFortress, line 1045")
            set K3s = 0
        endif
    else
        set NX = NX - 1
        set K3s = BX[NX]
        set wC[K3s] = 859
    endif
    set ASw = ASw - 1
    return K3s
endfunction
function MKr takes string BKr returns integer
    local integer NKr
    set DSw[ASw] = BKr
    set ASw = ASw + 1
    if NX == 0 then
        if MX < 32768 then
            set MX = MX + 1
            set NKr = MX
            set wC[NKr] = 855
        else
            call tNr("Out of memory: Could not create CallbackSingle_doAfter_Imp3DragonFortress.", "when calling error in Imp3DragonFortress, line 1024")
            set NKr = 0
        endif
    else
        set NX = NX - 1
        set NKr = BX[NX]
        set wC[NKr] = 855
    endif
    set ASw = ASw - 1
    return NKr
endfunction
function U3w takes string E3w returns integer
    local integer Z3w
    set DSw[ASw] = E3w
    set ASw = ASw + 1
    if NX == 0 then
        if MX < 32768 then
            set MX = MX + 1
            set Z3w = MX
            set wC[Z3w] = 860
        else
            call tNr("Out of memory: Could not create CallbackSingle_doAfter_Imp3DragonFortress.", "when calling error in Imp3DragonFortress, line 1061")
            set Z3w = 0
        endif
    else
        set NX = NX - 1
        set Z3w = BX[NX]
        set wC[Z3w] = 860
    endif
    set ASw = ASw - 1
    return Z3w
endfunction
function Was takes string mas returns integer
    local integer Qas
    set DSw[ASw] = mas
    set ASw = ASw + 1
    if NX == 0 then
        if MX < 32768 then
            set MX = MX + 1
            set Qas = MX
            set wC[Qas] = 858
        else
            call tNr("Out of memory: Could not create CallbackSingle_doAfter_Imp3DragonFortress.", "when calling error in Imp3DragonFortress, line 1040")
            set Qas = 0
        endif
    else
        set NX = NX - 1
        set Qas = BX[NX]
        set wC[Qas] = 858
    endif
    set ASw = ASw - 1
    return Qas
endfunction
function bhi takes nothing returns boolean
    return GetUnitTypeId(GetDyingUnit()) == 1429221449
endfunction
function gPw takes nothing returns boolean
    return GetUnitTypeId(GetDyingUnit()) == 1429221445 or GetUnitTypeId(GetDyingUnit()) == 1429221447 or GetUnitTypeId(GetDyingUnit()) == 1429221446 or GetUnitTypeId(GetDyingUnit()) == 1429221448
endfunction
function gYr takes string YYr returns integer
    local integer GYr
    set DSw[ASw] = YYr
    set ASw = ASw + 1
    if NX == 0 then
        if MX < 32768 then
            set MX = MX + 1
            set GYr = MX
            set wC[GYr] = 856
        else
            call tNr("Out of memory: Could not create CallbackSingle_doAfter_Imp3DragonFortress.", "when calling error in Imp3DragonFortress, line 1029")
            set GYr = 0
        endif
    else
        set NX = NX - 1
        set GYr = BX[NX]
        set wC[GYr] = 856
    endif
    set ASw = ASw - 1
    return GYr
endfunction
function iJt takes string sJt returns integer
    local integer tJt
    set DSw[ASw] = sJt
    set ASw = ASw + 1
    if NX == 0 then
        if MX < 32768 then
            set MX = MX + 1
            set tJt = MX
            set wC[tJt] = 853
        else
            call tNr("Out of memory: Could not create CallbackSingle_doAfter_Imp3DragonFortress.", "when calling error in Imp3DragonFortress, line 1013")
            set tJt = 0
        endif
    else
        set NX = NX - 1
        set tJt = BX[NX]
        set wC[tJt] = 853
    endif
    set ASw = ASw - 1
    return tJt
endfunction
function qLs takes string pLs returns integer
    local integer eLs
    set DSw[ASw] = pLs
    set ASw = ASw + 1
    if rC == 0 then
        if sC < 32768 then
            set sC = sC + 1
            set eLs = sC
            set tC[eLs] = 651
        else
            call tNr("Out of memory: Could not create CallbackCounted_doPeriodicallyCounted_Imp3DragonFortress.", "when calling error in Imp3DragonFortress, line 200")
            set eLs = 0
        endif
    else
        set rC = rC - 1
        set eLs = uC[rC]
        set tC[eLs] = 651
    endif
    set ASw = ASw - 1
    return eLs
endfunction
function J_t takes effect G_t, real g_t, real h_t, boolean F_t, string k_t returns nothing
    local real j_t
    local real x_t
    local real v_t
    local real m_t
    local real Q_t
    local real W_t
    local boolean E_t
    local integer Z_t
    local real U_t
    local integer I_t
    local real P_t
    local real A_t
    local real D_t
    local real H_t
    set DSw[ASw] = k_t
    set ASw = ASw + 1
    if G_t != null then
        set P_t = g2r(G_t)
        set A_t = vcw
        set j_t = P_t
        set x_t = A_t
        set v_t = 50.
        set m_t = fYr(j_t, x_t, g_t, h_t)
        set Q_t = m_t / 500.
        set W_t = Atan2(h_t - x_t, g_t - j_t)
        set E_t = false
        if not F_t then
            call r7s(G_t, W_t)
        endif
        set U_t = iF
        set I_t = d0u(m_t / Q_t * 2.)
        set Z_t = qLs("when calling alloc_CallbackCounted_doPeriodicallyCounted_Imp3DragonFortress in Imp3DragonFortress, line 200")
        call Inr(Z_t)
        set w9[Z_t] = G_t
        set u9[Z_t] = W_t
        set D_t = g_t
        set H_t = h_t
        set r9[Z_t] = D_t
        set s9[Z_t] = H_t
        set t9[Z_t] = F_t
        set i9[Z_t] = Q_t
        set S9[Z_t] = v_t
        set c9[Z_t] = m_t
        set o9[Z_t] = E_t
        call l5s(U_t, I_t, Z_t, "when calling doPeriodicallyCounted in Imp3DragonFortress, line 200")
    endif
    set ASw = ASw - 1
endfunction
function kYt takes string YYt returns nothing
    local real GYt
    local real gYt
    local real hYt
    local real FYt
    set DSw[ASw] = YYt
    set ASw = ASw + 1
    set hYt = lOu(gZ)
    set FYt = hcw
    set GYt = hYt
    set gYt = FYt
    call J_t(aZ, GYt, gYt, true, "when calling moveTowards in Imp3DragonFortress, line 1458")
    call J_t(nZ, GYt, gYt, true, "when calling moveTowards in Imp3DragonFortress, line 1459")
    call J_t(dZ, GYt, gYt, true, "when calling moveTowards in Imp3DragonFortress, line 1460")
    call J_t(fZ, GYt, gYt, true, "when calling moveTowards in Imp3DragonFortress, line 1461")
    set ASw = ASw - 1
endfunction
function otu takes string Stu returns integer
    local integer ctu
    set DSw[ASw] = Stu
    set ASw = ASw + 1
    if NX == 0 then
        if MX < 32768 then
            set MX = MX + 1
            set ctu = MX
            set wC[ctu] = 854
        else
            call tNr("Out of memory: Could not create CallbackSingle_doAfter_Imp3DragonFortress.", "when calling error in Imp3DragonFortress, line 1017")
            set ctu = 0
        endif
    else
        set NX = NX - 1
        set ctu = BX[NX]
        set wC[ctu] = 854
    endif
    set ASw = ASw - 1
    return ctu
endfunction
function tpi takes string rpi returns integer
    local integer spi
    set DSw[ASw] = rpi
    set ASw = ASw + 1
    if NX == 0 then
        if MX < 32768 then
            set MX = MX + 1
            set spi = MX
            set wC[spi] = 857
        else
            call tNr("Out of memory: Could not create CallbackSingle_doAfter_Imp3DragonFortress.", "when calling error in Imp3DragonFortress, line 1035")
            set spi = 0
        endif
    else
        set NX = NX - 1
        set spi = BX[NX]
        set wC[spi] = 857
    endif
    set ASw = ASw - 1
    return spi
endfunction
function aeu takes string Jpu returns nothing
    local unit Kpu
    local integer Lpu
    local effect Xpu
    local real Cpu
    local integer Vpu
    local integer Bpu
    local integer Npu
    local rect Mpu
    local integer weu
    local integer ueu
    local integer reu
    local integer seu
    local integer teu
    local integer ieu
    local integer Seu
    local group ceu
    local real oeu
    local real Oeu
    local real leu
    local real beu
    local real yeu
    local real peu
    local real eeu
    local real qeu
    set DSw[ASw] = Jpu
    set ASw = ASw + 1
    set Kpu = GetDyingUnit()
    set Lpu = r5S(Kpu)
    if gPw() then
        set AW = AW + 1
        set Xpu = uSs(ANw(Kpu), XSw, "Units\\Human\\Phoenix\\PhoenixEgg.mdl")
        call Wwu(Xpu, 2.)
        if Lpu == 1429221445 then
            if aZ != null then
    call uRi(aZ)
            endif
            set aZ = Xpu
            set yZ = null
        elseif Lpu == 1429221447 then
            if nZ != null then
    call uRi(nZ)
            endif
            set nZ = Xpu
            set pZ = null
        elseif Lpu == 1429221446 then
            if dZ != null then
    call uRi(dZ)
            endif
            set dZ = Xpu
            set eZ = null
        elseif Lpu == 1429221448 then
            if fZ != null then
    call uRi(fZ)
            endif
            set fZ = Xpu
            set qZ = null
        endif
    endif
    if AW == 4 then
        set hZ = true
        call p5s(Rc[$0000000C], iQw)
        call StopMusic(false)
        set Dc = true
        set AW = 0
        set Cpu = 0.
        set ceu = fc[$0000000C]
        set Vpu = Ksi("when calling alloc_ForGroupCallback_forEachIn_Imp3DragonFortress in Imp3DragonFortress, line 996")
        call rou(ceu, Vpu, "when calling forEachIn in Imp3DragonFortress, line 996")
        call p5s(Rc[$0000000C], SQw)
        call kYt("when calling gatherDragonEggs in Imp3DragonFortress, line 1008")
        call DisplayTextToForce(Rc[$0000000C], Iji("|cffffcc00Dragon of Pure Darkness|r: Kimi wa hontou ni kachi sou wo kangaeteita?", "when calling unObfuscate in Imp3DragonFortress, line 1010"))
        set Cpu = Cpu + 3.
        set oeu = Cpu
        set Bpu = iJt("when calling alloc_CallbackSingle_doAfter_Imp3DragonFortress in Imp3DragonFortress, line 1013")
        call RUs(Bpu)
        call Ybr(oeu, Bpu, "when calling doAfter in Imp3DragonFortress, line 1013")
        set Cpu = Cpu + 2.
        set Oeu = Cpu
        set Npu = otu("when calling alloc_CallbackSingle_doAfter_Imp3DragonFortress in Imp3DragonFortress, line 1017")
        call RUs(Npu)
        call Ybr(Oeu, Npu, "when calling doAfter in Imp3DragonFortress, line 1017")
        set Mpu = RectFromCenterSizeBJ(gZ, 600., 600.)
        set Cpu = Cpu + 3.
        set weu = 1
        loop
            exitwhen weu > 8
            set Cpu = Cpu + .1 * weu
            set leu = Cpu
            set ueu = MKr("when calling alloc_CallbackSingle_doAfter_Imp3DragonFortress in Imp3DragonFortress, line 1024")
            call RUs(ueu)
            set q9[ueu] = Mpu
            call Ybr(leu, ueu, "when calling doAfter in Imp3DragonFortress, line 1024")
            set weu = weu + 1
        endloop
        set Cpu = Cpu + .1
        set beu = Cpu
        set reu = gYr("when calling alloc_CallbackSingle_doAfter_Imp3DragonFortress in Imp3DragonFortress, line 1029")
        call RUs(reu)
        call Ybr(beu, reu, "when calling doAfter in Imp3DragonFortress, line 1029")
        set yeu = Cpu + 1.5
        set seu = tpi("when calling alloc_CallbackSingle_doAfter_Imp3DragonFortress in Imp3DragonFortress, line 1035")
        call RUs(seu)
        call Ybr(yeu, seu, "when calling doAfter in Imp3DragonFortress, line 1035")
        set Cpu = Cpu + 3.
        set peu = Cpu
        set teu = Was("when calling alloc_CallbackSingle_doAfter_Imp3DragonFortress in Imp3DragonFortress, line 1040")
        call RUs(teu)
        call Ybr(peu, teu, "when calling doAfter in Imp3DragonFortress, line 1040")
        set eeu = Cpu + 1.
        set ieu = L3s("when calling alloc_CallbackSingle_doAfter_Imp3DragonFortress in Imp3DragonFortress, line 1045")
        call RUs(ieu)
        call Ybr(eeu, ieu, "when calling doAfter in Imp3DragonFortress, line 1045")
        set Cpu = Cpu + 1.5
        set qeu = Cpu
        set Seu = U3w("when calling alloc_CallbackSingle_doAfter_Imp3DragonFortress in Imp3DragonFortress, line 1061")
        call RUs(Seu)
        call Ybr(qeu, Seu, "when calling doAfter in Imp3DragonFortress, line 1061")
    endif
    if bhi() then
        call DisableTrigger(GetTriggeringTrigger())
        call DisableTrigger(hR)
        call TimerStart(gR, 0., false, null)
        call TimerStart(FR, 0., false, null)
        call TimerStart(jR, 0., false, null)
        call TimerStart(xR, 0., false, null)
        call TimerStart(vR, 0., false, null)
    endif
    set ASw = ASw - 1
    set Kpu = null
    set Xpu = null
    set Mpu = null
    set ceu = null
endfunction
function c_r takes nothing returns nothing
    set ASw = 0
    call aeu("via function reference Imp3DragonFortress, line 1649")
endfunction
function Uwu takes nothing returns boolean
    return Pu == false
endfunction
function cai takes nothing returns nothing
    set Lu = Cw
    set Eu = SubStringBJ(GetEventPlayerChatString(), $00000008, StringLength(GetEventPlayerChatString()))
    set Pu = ZKu(Eu)
    if Uwu() then
        set Lu = Lw
        set Eu = SubStringBJ(GetEventPlayerChatString(), $00000008, StringLength(GetEventPlayerChatString()))
        set Pu = ZKu(Eu)
        if Uwu() then
            set Lu = Jw
            set Eu = SubStringBJ(GetEventPlayerChatString(), $00000008, StringLength(GetEventPlayerChatString()))
            set Pu = ZKu(Eu)
            if Uwu() then
    set Lu = Dw
    set Eu = SubStringBJ(GetEventPlayerChatString(), $00000008, StringLength(GetEventPlayerChatString()))
    set Pu = ZKu(Eu)
    if Uwu() then
                    set Lu = Pw
                    set Eu = SubStringBJ(GetEventPlayerChatString(), $00000008, StringLength(GetEventPlayerChatString()))
                    set Pu = ZKu(Eu)
                    if Uwu() then
                        set Lu = Uw
                        set Eu = SubStringBJ(GetEventPlayerChatString(), $00000008, StringLength(GetEventPlayerChatString()))
                        set Pu = ZKu(Eu)
                        if Uwu() then
                            set Lu = Ew
                            set Eu = SubStringBJ(GetEventPlayerChatString(), $00000008, StringLength(GetEventPlayerChatString()))
                            set Pu = ZKu(Eu)
                            if not Uwu() then
                                call DisplayTextToForce(MwS(GetTriggerPlayer()), "|cffffcc00Your code is valid! (your code was used from a bugged version of Teve, some levels might be reduced)|r")
                            else
                                call DisplayTextToForce(MwS(GetTriggerPlayer()), "|cffffcc00Your code is not valid! Recheck your code!|r")
                            endif
                        else
                            call DisplayTextToForce(MwS(GetTriggerPlayer()), "|cffffcc00Your code is valid!|r")
                        endif
                    else
                        call DisplayTextToForce(MwS(GetTriggerPlayer()), "|cffffcc00Your code is valid!|r")
                    endif
    else
                    call DisplayTextToForce(MwS(GetTriggerPlayer()), "|cffffcc00Your code is valid!|r")
    endif
            else
    call DisplayTextToForce(MwS(GetTriggerPlayer()), "|cffffcc00Your code is valid!|r")
            endif
        else
            call DisplayTextToForce(MwS(GetTriggerPlayer()), "|cffffcc00Your code is valid!|r")
        endif
    else
        call DisplayTextToForce(MwS(GetTriggerPlayer()), "|cffffcc00Your code is valid!|r")
    endif
endfunction
function TNr takes nothing returns boolean
    return GetItemTypeId(GetManipulatedItem()) == 1227895601
endfunction
function Wlu takes nothing returns boolean
    return GetItemTypeId(GetManipulatedItem()) == 1227895602
endfunction
function cgt takes nothing returns nothing
    if Wlu() then
        call SetUnitLifePercentBJ(GetTriggerUnit(), GetUnitLifePercent(GetTriggerUnit()) + mw)
    endif
    if TNr() then
        call SetUnitManaPercentBJ(GetTriggerUnit(), GetUnitManaPercent(GetTriggerUnit()) + Qw)
    endif
endfunction
function YSt takes string ySt returns nothing
    local unit pSt
    local player eSt
    local integer qSt
    local real aSt
    local real nSt
    local integer dSt
    local integer fSt
    local real RSt
    local real TSt
    set DSw[ASw] = ySt
    set ASw = ASw + 1
    set pSt = GetTriggerUnit()
    set eSt = eDs(pSt)
    set qSt = hgr(eSt)
    set RSt = ANw(pSt)
    set TSt = XSw
    set aSt = RSt
    set nSt = TSt
    set dSt = 1227895108
    set fSt = 40
    set vS[1 + qSt] = 0
    call ForceRemovePlayer(IS[$0000000C], eSt)
    call DestroyQuest(xS[1 + qSt])
    set xS[1 + qSt] = null
    call PlaySoundBJ(pe)
    call dii("|cffffcc00You have completed the Quest|r.", 5., eSt)
    call dii("|cffffcc00Squeaky|r : Oh my god! I got all the ingredients! Fantastic! Thank you so much kind traveller, and as promised, I'll reward you. Thank you once again!", 10., eSt)
    call AddHeroXPSwapped(j, pSt, true)
    call wiS(qSt, dSt, aSt, nSt, eSt, fSt, pSt, "when calling addItemWithVirtualCharges in SqueakyQuestReward, line 77")
    set ASw = ASw - 1
    set pSt = null
    set eSt = null
endfunction
function chi takes nothing returns nothing
    set ASw = 0
    call YSt("via function reference SqueakyQuestReward, line 124")
endfunction
function chs takes nothing returns boolean
    return IsUnitType(GetTriggerUnit(), UNIT_TYPE_HERO) != false
endfunction
function l6r takes string O6r returns nothing
    set DSw[ASw] = O6r
    set ASw = ASw + 1
    call ggt("when calling generalEventCallback in ClosureEvents, line 293")
    set ASw = ASw - 1
endfunction
function cit takes nothing returns nothing
    set ASw = 0
    call l6r("via function reference ClosureEvents, line 293")
endfunction
function cju takes nothing returns nothing
    call SetHeroLevelBJ(GetTriggerUnit(), $00000001, false)
    call ReplaceUnitBJ(GetEnteringUnit(), $48303036, $00000002)
    set Fu[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))] = bj_lastReplacedUnit
    call SetHeroLevel(Fu[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))], $00000001, true)
    call UnitStripHeroLevel(Fu[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))], $00000001)
    call DisplayTimedTextToForce(MwS(GetOwningPlayer(GetTriggerUnit())), 5., "|cffff8c00Congratulations! You have advanced to the 1st Job!|r")
    call SetUnitPositionLoc(Fu[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))], GetRectCenter(kO))
    call PanCameraToTimedLocForPlayer(GetOwningPlayer(GetTriggerUnit()), GetRectCenter(kO), 0.)
    call TriggerExecute(MT)
    call SelectUnitForPlayerSingle(Fu[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))], GetOwningPlayer(GetTriggerUnit()))
    call PlaySoundBJ(se)
endfunction
function initTypecastData takes string w__wurst_stackPos returns nothing
    set DSw[ASw] = w__wurst_stackPos
    set ASw = ASw + 1
    call QCt(ZJ, $00000000, "", "when calling saveString in TypeCasting, line 12")
    set ASw = ASw - 1
endfunction
function osS takes string csS returns boolean
    set DSw[ASw] = csS
    set ASw = ASw + 1
    set ZJ = VQs("when calling new_Table in TypeCasting, line 7")
    set UJ = 1000.
    call initTypecastData("when calling initTypecastData in TypeCasting, line 15")
    set ASw = ASw - 1
    return true
endfunction
function cli takes nothing returns boolean
    set ASw = 0
    return osS("via function reference TypeCasting, line 1")
endfunction
function dli takes nothing returns boolean
    return qs == 5
endfunction
function cmi takes nothing returns nothing
    if dli() then
        call PlaySoundBJ(ne)
        set qs = 6
        call DisplayTimedTextToForce(Rc[$00000005], 5., "|cffffcc00You hear a click sound and know you have stepped on the correct pedal.|r")
    else
        set qs = 0
        call DisplayTimedTextToForce(Rc[$00000005], 5., "|cffff0000You hear a ringing sound. All pedals were reset!|r")
    endif
endfunction
function coi takes nothing returns boolean
    return GetUnitTypeId(GetOrderTargetUnit()) == mS and IsUnitInGroup(GetTriggerUnit(), kpu(300., GetUnitLoc(GetOrderTargetUnit()))) and IsPlayerInForce(GetOwningPlayer(GetTriggerUnit()), IS[$0000000D]) and AS[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))] >= 50
endfunction
function cri takes nothing returns nothing
    call PauseUnit(GetEnumUnit(), false)
    call SetUnitInvulnerable(GetEnumUnit(), false)
    call UnitDamageTargetBJ(pS[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))], GetEnumUnit(), 35000., ATTACK_TYPE_CHAOS, DAMAGE_TYPE_ENHANCED)
endfunction
function G0u takes integer R0u, unit T0u, unit Y0u returns nothing
endfunction
function Mbr takes integer Bbr, unit Nbr returns nothing
    call G0u(Bbr, Nbr, GetSpellTargetUnit())
endfunction
function qdu takes integer pdu, integer edu returns nothing
endfunction
function U2w takes integer E2w, unit Z2w returns nothing
    call qdu(E2w, GetSpellAbilityId())
endfunction
function ClS takes integer JlS, unit KlS, real LlS, real XlS returns nothing
endfunction
function aMw takes nothing returns real
    set Ecw = GetSpellTargetX()
    set Zcw = GetSpellTargetY()
    return Ecw
endfunction
function HIu takes nothing returns real
    set Ucw = aMw()
    set Icw = Zcw
    return Ucw
endfunction
function uVi takes integer MCi, unit wVi returns nothing
    call ClS(MCi, wVi, HIu(), Icw)
endfunction
function mjt takes integer jjt, unit xjt, string vjt returns nothing
    set DSw[ASw] = vjt
    set ASw = ASw + 1
    if JC[jjt] == 0 then
        if jjt == 0 then
            call tNr("Nullpointer exception when calling OnCastListener.fire", "when calling error in ClosureEvents, line 56")
        else
            call tNr("Called OnCastListener.fire on invalid object.", "when calling error in ClosureEvents, line 56")
        endif
    endif
    if JC[jjt] <= 1229 then
        if JC[jjt] <= 1228 then
            call U2w(jjt, xjt)
        else
            call uVi(jjt, xjt)
        endif
    else
        call Mbr(jjt, xjt)
    endif
    set ASw = ASw - 1
endfunction
function Cou takes string Aou returns nothing
    local unit Dou
    local integer Hou
    local integer Jou
    local integer Kou
    local integer Lou
    local integer Xou
    set DSw[ASw] = Aou
    set ASw = ASw + 1
    set Dou = GetTriggerUnit()
    set Hou = GetSpellAbilityId()
    if Jyr(fh, Aei(Dou), "when calling has in ClosureEvents, line 191") then
        set Jou = wps(fh, Aei(Dou), "when calling get in ClosureEvents, line 192")
        loop
            exitwhen not(Jou != 0)
            set Kou = YM[Jou]
            if gM[Jou] ==- 1 or gM[Jou] == Hou then
    call mjt(Jou, GetSpellAbilityUnit(), "when calling fire in ClosureEvents, line 196")
            endif
            set Jou = Kou
        endloop
    endif
    if Jyr(dh, Hou, "when calling has in ClosureEvents, line 198") then
        set Lou = wps(dh, Hou, "when calling get in ClosureEvents, line 199")
        loop
            exitwhen not(Lou != 0)
            set Xou = YM[Lou]
            if hM[Lou] == null or hM[Lou] == Dou then
    call mjt(Lou, GetSpellAbilityUnit(), "when calling fire in ClosureEvents, line 203")
            endif
            set Lou = Xou
        endloop
    endif
    set ASw = ASw - 1
    set Dou = null
endfunction
function LYs takes string KYs returns nothing
    set DSw[ASw] = KYs
    set ASw = ASw + 1
    call Cou("when calling onSpellEffect in ClosureEvents, line 310")
    set ASw = ASw - 1
endfunction
function crt takes nothing returns nothing
    set ASw = 0
    call LYs("via function reference ClosureEvents, line 310")
endfunction
function cui takes nothing returns boolean
    return IsUnitAlly(GetFilterUnit(), Player($0000000B)) == false
endfunction
function cwi takes nothing returns boolean
    local trigger twi
    local trigger iwi
    local trigger Swi
    set Tv = 300.
    set Yv = 200.
    set Gv = 50.
    set gv = 500.
    set hv = 60.
    set Fv = 750.
    set kv = 130.
    set jv = 850.
    set xv = 850.
    set twi = CreateTrigger()
    call B2S(twi, imw)
    set iwi = twi
    call dUs(iwi, Condition(Smw))
    set Swi = iwi
    call l2w(Swi, EVENT_PLAYER_UNIT_SPELL_EFFECT)
    set twi = null
    set iwi = null
    set Swi = null
    return true
endfunction
function pWu takes nothing returns boolean
    return GetPlayerController(GetOwningPlayer(GetTriggerUnit())) == MAP_CONTROL_USER
endfunction
function cwr takes nothing returns nothing
    call TriggerRegisterUnitEvent(jf, GetTriggerUnit(), EVENT_UNIT_DAMAGED)
    call TriggerRegisterUnitEvent(Me, GetTriggerUnit(), EVENT_UNIT_DAMAGED)
    call TriggerRegisterUnitEvent(kf, GetTriggerUnit(), EVENT_UNIT_DAMAGED)
    call TriggerRegisterUnitEvent(xf, GetTriggerUnit(), EVENT_UNIT_DAMAGED)
    call TriggerRegisterUnitEvent(vf, GetTriggerUnit(), EVENT_UNIT_DAMAGED)
    call TriggerRegisterUnitEvent(mf, GetTriggerUnit(), EVENT_UNIT_DAMAGED)
    call TriggerRegisterUnitEvent(Ef, GetTriggerUnit(), EVENT_UNIT_DAMAGED)
    if pWu() then
        call TriggerRegisterUnitEvent(RT, GetTriggerUnit(), EVENT_UNIT_DAMAGED)
    endif
endfunction
function d0i takes nothing returns nothing
    call DisableTrigger(GetTriggeringTrigger())
endfunction
function a_t takes nothing returns boolean
    return UnitInventoryCount(GetTriggerUnit()) != 6
endfunction
function d0s takes nothing returns nothing
    if a_t() then
        call ForceAddPlayer(Mr, GetOwningPlayer(GetTriggerUnit()))
        call PlaySoundBJ(ce)
        set lw[GetPlayerId(GetOwningPlayer(GetTriggerUnit()))] = 1227894869
        call TriggerExecute(ow)
        call DisplayTextToForce(MwS(GetOwningPlayer(GetTriggerUnit())), "|cffffcc00Stalker Raynor|r : |cff87ceebWell done, Rogue! Did you make him squeal like the pig he is? I bet you did. So, you fufilled the task as promised...so you shall have my...recommendation. Welcome to the TRUE Thieves' Guild...Stalker.")
        call QuestSetDescription(Lr[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))], "I have it! I have the recommendation! Now to get back to my Class Trainer...")
    else
        call PlaySoundBJ(oe)
        call DisplayTimedTextToForce(MwS(GetOwningPlayer(GetTriggerUnit())), 7., "|cffff0000Inventory full! Cannot receive recommendation!|r")
    endif
endfunction
function d3i takes nothing returns boolean
    if Jc != 1 then
        set bS = lVs(GetTriggerPlayer(), Condition(Vyw))
        call GroupAddGroup(bS, Lc)
        call DestroyGroup(bS)
    endif
    return IsPlayerInForce(GetTriggerPlayer(), Rc[$0000000C]) and Jc == 1
endfunction
function lri takes nothing returns boolean
    return bj_forLoopBIndex == 4 or bj_forLoopBIndex == 8 or bj_forLoopBIndex == 12
endfunction
function JrS takes nothing returns boolean
    return lri()
endfunction
function hGS takes nothing returns boolean
    return GetPlayerController(GetOwningPlayer(GetSpellTargetUnit())) != MAP_CONTROL_USER
endfunction
function d4s takes nothing returns nothing
    set Pr[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))] = GetSpellTargetUnit()
    set wo[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))] = GetUnitLoc(GetTriggerUnit())
    set ro[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))] = GetUnitLoc(GetSpellTargetUnit())
    set Wr = GetRectCenter(kb)
    set Zr = GetRectCenter(ul)
    set Dr[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))] = CreateGroup()
    call GroupAddUnit(Dr[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))], GetTriggerUnit())
    set Qr[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))] = UFS(700., ro[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))], Condition(wyw))
    if hGS() then
        call AdjustPlayerStateBJ((- (1 * GetUnitAbilityLevelSwapped(GetSpellAbilityId(), GetTriggerUnit()))) - 3, GetOwningPlayer(GetTriggerUnit()), PLAYER_STATE_RESOURCE_LUMBER)
    endif
    set hu[GetPlayerId(GetOwningPlayer(GetTriggerUnit()))] = true
    call ForGroupBJ(Dr[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))], uyw)
    call ForForce(bt[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))], ryw)
    call AddSpecialEffectTargetUnitBJ("left hand", GetTriggerUnit(), "Abilities\\Weapons\\DragonHawkMissile\\DragonHawkMissile.mdl")
    set Ur[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))] = bj_lastCreatedEffect
    call AddSpecialEffectTargetUnitBJ("right hand", GetTriggerUnit(), "Abilities\\Weapons\\DragonHawkMissile\\DragonHawkMissile.mdl")
    set Ir[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))] = bj_lastCreatedEffect
    call SetUnitAnimation(GetTriggerUnit(), "channel")
    call n6t(0.3)
    call AddSpecialEffectLocBJ(wo[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))], "Abilities\\Spells\\Human\\FlameStrike\\FlameStrikeTarget.mdl")
    call DestroyEffect(bj_lastCreatedEffect)
    call n6t(0.3)
    call AddSpecialEffectLocBJ(wo[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))], "Abilities\\Spells\\Human\\Thunderclap\\ThunderClapCaster.mdl")
    call DestroyEffect(bj_lastCreatedEffect)
    call n6t(0.3)
    call AddSpecialEffectLocBJ(wo[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))], "Abilities\\Spells\\Other\\Monsoon\\MonsoonBoltTarget.mdl")
    call DestroyEffect(bj_lastCreatedEffect)
    call n6t(0.3)
    call AddSpecialEffectLocBJ(wo[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))], "war3mapImported\\Great Lightning.mdx")
    call DestroyEffect(bj_lastCreatedEffect)
    call n6t(0.3)
    call SetUnitTimeScalePercent(GetTriggerUnit(), 40.)
    call SetUnitAnimation(GetTriggerUnit(), "spell")
    call CreateTextTagUnitBJ("|cff009ACDI call upon the highest of all Arcane magics, the embodiment of destruction, power enough to smash even those of gods! Twilight's Eve!!|r", GetTriggerUnit(), 0., 12., 100., 100., 100., 0.)
    set Ar[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))] = bj_lastCreatedTextTag
    call n6t(0.3)
    call CreateNUnitsAtLoc($00000001, $68303438, GetOwningPlayer(GetTriggerUnit()), wo[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))], 270.)
    set Mc[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))] = bj_lastCreatedUnit
    call SetUnitTimeScalePercent(Mc[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))], 40.)
    call SetTimeOfDay(24.)
    call AddWeatherEffectSaveLast(RectFromCenterSizeBJ(wo[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))], 3000., 3000.), $4C526D61)
    set Wo[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))] = bj_lastCreatedWeatherEffect
    call EnableWeatherEffect(Wo[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))], true)
    call SetUnitAnimation(GetTriggerUnit(), "channel")
    call ForForce(bt[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))], syw)
    set bj_forLoopBIndex = 1
    set bj_forLoopBIndexEnd = 12
    loop
        exitwhen bj_forLoopBIndex > bj_forLoopBIndexEnd
        set uo = GetRandomLocInRect(RectFromCenterSizeBJ(GetUnitLoc(GetTriggerUnit()), 800., 800.))
        call AddSpecialEffectLocBJ(uo, "Abilities\\Spells\\Human\\ReviveHuman\\ReviveHuman.mdl")
        call DestroyEffect(bj_lastCreatedEffect)
        call RemoveLocation(uo)
        set uo = GetRandomLocInRect(RectFromCenterSizeBJ(GetUnitLoc(GetTriggerUnit()), 800., 800.))
        call AddSpecialEffectLocBJ(uo, "Abilities\\Spells\\Other\\Monsoon\\MonsoonBoltTarget.mdl")
        call DestroyEffect(bj_lastCreatedEffect)
        call RemoveLocation(uo)
        set uo = GetRandomLocInRect(RectFromCenterSizeBJ(GetUnitLoc(GetTriggerUnit()), 800., 800.))
        call AddSpecialEffectLocBJ(uo, "Objects\\Spawnmodels\\Undead\\UCancelDeath\\UCancelDeath.mdl")
        call DestroyEffect(bj_lastCreatedEffect)
        call RemoveLocation(uo)
        set uo = GetRandomLocInRect(RectFromCenterSizeBJ(GetUnitLoc(GetTriggerUnit()), 800., 800.))
        call CreateNUnitsAtLoc($00000001, $68303056, GetOwningPlayer(GetTriggerUnit()), uo, 270.)
        call RemoveLocation(uo)
        call n6t(.1)
        set uo = GetRandomLocInRect(RectFromCenterSizeBJ(GetUnitLoc(GetTriggerUnit()), 800., 800.))
        call AddSpecialEffectLocBJ(uo, "Abilities\\Spells\\NightElf\\Starfall\\StarfallCaster.mdl")
        set Er[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))] = bj_lastCreatedEffect
        call RemoveLocation(uo)
        if JrS() then
            call AddSpecialEffectLocBJ(wo[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))], "war3mapImported\\Great Lightning.mdx")
            call DestroyEffect(bj_lastCreatedEffect)
            call AddSpecialEffectLocBJ(wo[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))], "Abilities\\Spells\\Human\\Thunderclap\\ThunderClapCaster.mdl")
            call DestroyEffect(bj_lastCreatedEffect)
            call AddSpecialEffectLocBJ(wo[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))], "Abilities\\Spells\\Orc\\WarStomp\\WarStompCaster.mdl")
            call DestroyEffect(bj_lastCreatedEffect)
        endif
        call DestroyEffect(Er[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))])
        set bj_forLoopBIndex = bj_forLoopBIndex + 1
    endloop
    call SetUnitTimeScalePercent(Mc[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))], 5.)
    call ForForce(bt[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))], tyw)
    call CreateNUnitsAtLoc($00000001, $68303054, GetOwningPlayer(GetTriggerUnit()), ro[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))], 270.)
    call SetUnitTimeScalePercent(bj_lastCreatedUnit, 70.)
    call n6t(0.3)
    call ForGroupBJ(Qr[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))], iyw)
    set Nc = 1
    loop
        exitwhen Nc > 10
        call n6t(0.1)
        set Yi = GetRandomLocInRect(RectFromCenterSizeBJ(GetUnitLoc(Pr[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))]), 800., 800.))
        call CreateNUnitsAtLoc($00000001, $68303053, GetOwningPlayer(GetTriggerUnit()), Yi, 270.)
        call RemoveLocation(Yi)
        set Nc = Nc + 1
    endloop
    call DestroyTextTag(Ar[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))])
    call CinematicFadeBJ($00000001, .4, "ReplaceableTextures\\CameraMasks\\Black_mask.blp", 0., 0., 0., 0.)
    call n6t(.5)
    call ForForce(bt[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))], Syw)
    call RemoveWeatherEffect(Wo[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))])
    call n6t(.4)
    call CinematicFadeBJ($00000000, .4, "ReplaceableTextures\\CameraMasks\\Black_mask.blp", 0., 0., 0., 0.)
    call CreateNUnitsAtLoc($00000001, $68303052, GetOwningPlayer(GetTriggerUnit()), Wr, 270.)
    set mr[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))] = bj_lastCreatedUnit
    call n6t(.05)
    call CreateNUnitsAtLoc($00000001, $68303057, GetOwningPlayer(GetTriggerUnit()), Zr, 230.)
    call SetUnitTimeScalePercent(bj_lastCreatedUnit, 40.)
    call DestroyEffect(Ur[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))])
    call DestroyEffect(Ir[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))])
    call CreateNUnitsAtLoc($00000001, $68303055, GetOwningPlayer(GetTriggerUnit()), Zr, 230.)
    call SetUnitTimeScalePercent(bj_lastCreatedUnit, 60.)
    call n6t(0.3)
    call CreateNUnitsAtLoc($00000001, $68303051, GetOwningPlayer(GetTriggerUnit()), Zr, 230.)
    call SetUnitTimeScalePercent(bj_lastCreatedUnit, 40.)
    call n6t(0.3)
    call CreateNUnitsAtLoc($00000001, $68303057, GetOwningPlayer(GetTriggerUnit()), Zr, 230.)
    call ForForce(bt[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))], cyw)
    call CinematicFadeBJ($00000001, .4, "ReplaceableTextures\\CameraMasks\\White_mask.blp", 100., 100., 100., 0.)
    call n6t(.1)
    call RemoveUnit(Mc[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))])
    call ForForce(bt[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))], oyw)
    call n6t(.1)
    call CinematicFadeBJ($00000000, .3, "ReplaceableTextures\\CameraMasks\\White_mask.blp", 100., 100., 100., 0.)
    call ResetUnitAnimation(GetTriggerUnit())
    call n6t(.03)
    call ForGroupBJ(Dr[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))], Oyw)
    call ForGroupBJ(Qr[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))], lyw)
    call SetUnitTimeScalePercent(GetTriggerUnit(), 100.)
    call ForceClear(bt[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))])
    call RemoveUnit(mr[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))])
    set Pr[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))] = null
    set mr[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))] = null
    set Mc[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))] = null
    call RemoveLocation(Wr)
    call RemoveLocation(Zr)
    call RemoveLocation(wo[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))])
    call RemoveLocation(ro[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))])
    call DestroyGroup(Dr[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))])
    call DestroyGroup(Qr[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))])
    set hu[GetPlayerId(GetOwningPlayer(GetTriggerUnit()))] = false
endfunction
function d8i takes nothing returns nothing
    set Ic[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))] = GetUnitLoc(GetTriggerUnit())
    call CreateNUnitsAtLoc($00000001, $68303348, GetOwningPlayer(GetTriggerUnit()), Ic[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))], bj_UNIT_FACING)
    call RemoveLocation(Ic[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))])
endfunction
function xnu takes string knu returns integer
    local integer jnu
    set DSw[ASw] = knu
    set ASw = ASw + 1
    if NX == 0 then
        if MX < 32768 then
            set MX = MX + 1
            set jnu = MX
            set wC[jnu] = 830
        else
            call tNr("Out of memory: Could not create CallbackSingle_doAfter_Hiero_Resurrection.", "when calling error in Hiero_Resurrection, line 126")
            set jnu = 0
        endif
    else
        set NX = NX - 1
        set jnu = BX[NX]
        set wC[jnu] = 830
    endif
    set ASw = ASw - 1
    return jnu
endfunction
function Tht takes string fht returns boolean
    local integer Rht
    set DSw[ASw] = fht
    set ASw = ASw + 1
    set SW = .1
    set Rht = xnu("when calling alloc_CallbackSingle_doAfter_Hiero_Resurrection in Hiero_Resurrection, line 126")
    call RUs(Rht)
    call Ybr(1., Rht, "when calling doAfter in Hiero_Resurrection, line 126")
    set ASw = ASw - 1
    return true
endfunction
function dAr takes nothing returns boolean
    set ASw = 0
    return Tht("via function reference Hiero_Resurrection, line 1")
endfunction
function y2r takes string l2r returns integer
    local integer b2r
    set DSw[ASw] = l2r
    set ASw = ASw + 1
    if NX == 0 then
        if MX < 32768 then
            set MX = MX + 1
            set b2r = MX
            set wC[b2r] = 938
        else
            call tNr("Out of memory: Could not create CallbackSingle_doAfter_Reinforce_Effect.", "when calling error in Reinforce_Effect, line 92")
            set b2r = 0
        endif
    else
        set NX = NX - 1
        set b2r = BX[NX]
        set wC[b2r] = 938
    endif
    set ASw = ASw - 1
    return b2r
endfunction
function Qlu takes string llu returns nothing
    local unit blu
    local unit ylu
    local player plu
    local integer elu
    local integer qlu
    local integer alu
    local string nlu
    local string dlu
    local integer flu
    local effect Rlu
    local effect Tlu
    local effect Ylu
    local effect Glu
    local effect glu
    local effect hlu
    local effect Flu
    local effect klu
    local integer jlu
    local integer xlu
    local integer vlu
    local real mlu
    set DSw[ASw] = llu
    set ASw = ASw + 1
    set blu = GetEventDamageSource()
    set ylu = GetTriggerUnit()
    if blu != null and ylu != null and GpS(gQ, hgr(eDs(blu)), "when calling has in Reinforce_Effect, line 22") and(not(r5S(blu) == 1211117617 or r5S(blu) == 1211117618)) and R9s(GetEventDamageSource(), GetTriggerUnit()) then
        call DisableTrigger(GetTriggeringTrigger())
        set plu = GetOwningPlayer(blu)
        set elu = hgr(plu)
        if not Jyr(uH, elu, "when calling has in Reinforce_Effect, line 27") then
            call GVw(uH, elu, O_i(true), "when calling put in Reinforce_Effect, line 28")
        endif
        set qlu = GetRandomInt($00000001, $00000064)
        if qlu <= 35 and TYt(wps(uH, elu, "when calling get in Reinforce_Effect, line 31")) then
            call GVw(uH, elu, O_i(false), "when calling put in Reinforce_Effect, line 32")
            call GroupAddUnit(GO, blu)
            set To = Mri(GPi(blu))
            set Ro = Shu(GetUnitLoc(blu), 40., To)
            set Yo = Shu(GetUnitLoc(blu), 70., To)
            set Go[$00000001] = GetRandomLocInRect(RectFromCenterSizeBJ(Yo, 300., 300.))
            set Go[$00000002] = GetRandomLocInRect(RectFromCenterSizeBJ(Yo, 300., 300.))
            set Go[$00000003] = GetRandomLocInRect(RectFromCenterSizeBJ(Yo, 300., 300.))
            set Go[$00000004] = GetRandomLocInRect(RectFromCenterSizeBJ(Yo, 300., 300.))
            set alu = bQs(NNs(ANw(blu), XSw, blu), Acw, Dcw, .03, .09, "|cffCFCFCFHræsvelgr!|r", 12., 3., $00000064, $00000064, $00000064, $00000000, null, "when calling _CreateTTExEntity_fading in Reinforce_Effect, line 42")
            set nlu = ""
            set dlu = ""
            if HEi(elu, hgr(nD), "when calling ifDisplayEffectProcs in Reinforce_Effect, line 45") then
    set nlu = "war3mapImported/GlaciarAura.mdl"
    set dlu = "war3mapImported/OrbitalRay.mdl"
            else
    call jRu(alu, false)
            endif
            set flu = 1
            loop
    exitwhen flu > 4
    set Rlu = uSs(lOu(Go[flu]), hcw, nlu)
    call iKw(Rlu, Mri(To), Deg2Rad(90.), 0.)
    set Tlu = Rlu
    call yYi(Tlu, 1.5, "when calling destrAdvTimed in Reinforce_Effect, line 52")
    set Ylu = Tlu
    call Wwu(Ylu, 2.5)
    set Glu = Ylu
    call vQs(Glu, wor(lOu(Go[flu]), hcw) + 250.)
    set glu = uSs(lOu(Go[flu]), hcw, dlu)
    call iKw(glu, Mri(To), Deg2Rad(90.), 0.)
    set hlu = glu
    call yYi(hlu, 2., "when calling destrAdvTimed in Reinforce_Effect, line 53")
    set Flu = hlu
    call Wwu(Flu, 2.)
    set klu = Flu
    call vQs(klu, wor(lOu(Go[flu]), hcw) + 280.)
    set flu = flu + 1
            endloop
            set so = GetUnitLoc(blu)
            set io = Shu(GetUnitLoc(blu), 300., To)
            set So = DistanceBetweenPoints(so, io)
            set co = AngleBetweenPoints(so, io)
            set bj_forLoopAIndex = 1
            set bj_forLoopAIndexEnd = R2I(So / 50.)
            set jlu = bj_forLoopAIndex
            set xlu = bj_forLoopAIndexEnd
            loop
    exitwhen jlu > xlu
    set oo = Shu(so, I2R(jlu * 50), co)
    set Oo = UFS(Yw, oo, Condition(NWw))
    call GroupAddGroup(Oo, lo)
    call RemoveLocation(oo)
    call DestroyGroup(Oo)
    set jlu = jlu + 1
            endloop
            call DisableTrigger(Me)
            call ForGroupBJ(lo, MWw)
            if IsPlayerInForce(plu, ic) then
    set lc[1 + GetPlayerId(plu)] = lc[1 + GetPlayerId(plu)] + 18000.
            endif
            call EnableTrigger(Me)
            call GroupClear(lo)
            call GroupRemoveUnit(GO, blu)
            call RemoveLocation(so)
            call RemoveLocation(io)
            call RemoveLocation(Ro)
            call RemoveLocation(Yo)
            call RemoveLocation(Go[$00000001])
            call RemoveLocation(Go[$00000002])
            call RemoveLocation(Go[$00000003])
            call RemoveLocation(Go[$00000004])
            set mlu = rH
            set vlu = y2r("when calling alloc_CallbackSingle_doAfter_Reinforce_Effect in Reinforce_Effect, line 92")
            call RUs(vlu)
            set grw[vlu] = elu
            call Ybr(mlu, vlu, "when calling doAfter in Reinforce_Effect, line 92")
        endif
        call EnableTrigger(GetTriggeringTrigger())
    endif
    set ASw = ASw - 1
    set blu = null
    set ylu = null
    set plu = null
    set Rlu = null
    set Tlu = null
    set Ylu = null
    set Glu = null
    set glu = null
    set hlu = null
    set Flu = null
    set klu = null
endfunction
function dHs takes nothing returns nothing
    set ASw = 0
    call Qlu("via function reference Reinforce_Effect, line 203")
endfunction
function A2r takes string P2r returns nothing
    set DSw[ASw] = P2r
    set ASw = ASw + 1
    call iuu("when calling onSeq in SeqWorker, line 13")
    set ASw = ASw - 1
endfunction
function dJs takes nothing returns nothing
    set ASw = 0
    call A2r("via function reference SeqWorker, line 13")
endfunction
function dNs takes nothing returns boolean
    return GetUnitTypeId(GetDyingUnit()) == 1848651853 and IsPlayerInForce(GetOwningPlayer(GetKillingUnit()), IS[$00000009])
endfunction
function dNt takes nothing returns boolean
    return (GetItemTypeId(GetManipulatedItem()) == 1227894832 and IsUnitType(GetTriggerUnit(), UNIT_TYPE_HERO) and GetHeroLevel(GetTriggerUnit()) <= 10 and IsPlayerInForce(GetOwningPlayer(GetTriggerUnit()), IS[$00000001]) == false) != false
endfunction
function OXr takes nothing returns boolean
    return IsPlayerInForce(GetOwningPlayer(GetTriggerUnit()), nc[$00000001]) == false
endfunction
function dOr takes nothing returns nothing
    if OXr() then
        call DisplayTextToForce(MwS(GetOwningPlayer(GetTriggerUnit())), "|cffffcc00Master Ember|r : Ahh, young traveller, I see you are sent by Arnold. He's found new pieces of an unknown crystal? Great! I'll be waiting for the package. Tell him that I got the message and will research on the crystals as soon as they arrive.")
        call ForceAddPlayer(nc[$00000001], GetOwningPlayer(GetTriggerUnit()))
    endif
endfunction
function dRs takes nothing returns nothing
    call PauseUnit(GetEnumUnit(), false)
    call SetUnitInvulnerable(GetEnumUnit(), false)
endfunction
function iNu takes nothing returns boolean
    return GetItemTypeId(GetManipulatedItem()) == 1227896130 or GetItemTypeId(GetManipulatedItem()) == 1227896131 or GetItemTypeId(GetManipulatedItem()) == 1227896132 or GetItemTypeId(GetManipulatedItem()) == 1227896133
endfunction
function dTS takes nothing returns boolean
    return (Zo[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))] == 1 and IsUnitType(GetTriggerUnit(), UNIT_TYPE_HERO) and iNu()) != false
endfunction
function dTi takes nothing returns nothing
    local unit eTi
    local unit qTi
    local integer aTi
    local integer nTi
    if GetTriggerUnit() == null then
        set qTi = GetEnteringUnit()
    else
        set qTi = GetTriggerUnit()
    endif
    set eTi = qTi
    set aTi = r5S(eTi)
    set nTi = aTi
    if nTi == Ok then
        if boS(eTi) >= 100 then
            if not gSr(eTi, Xk) then
    call V5S(eTi, Xk)
            endif
        else
            call Q_s(eTi, Xk)
        endif
    elseif nTi == bk then
        if boS(eTi) >= 150 then
            if not gSr(eTi, kk) then
    call V5S(eTi, kk)
            endif
        else
            call Q_s(eTi, kk)
        endif
    elseif nTi == dk then
        if boS(eTi) >= 150 then
            if not gSr(eTi, mk) then
    call V5S(eTi, mk)
            endif
        else
            call Q_s(eTi, mk)
        endif
    elseif nTi == yk then
        if boS(eTi) >= 150 then
            if not gSr(eTi, hk) then
    call V5S(eTi, hk)
            endif
        else
            call Q_s(eTi, hk)
        endif
    elseif nTi == qk then
        if boS(eTi) >= 150 then
            if not gSr(eTi, hk) then
    call V5S(eTi, hk)
            endif
        else
            call Q_s(eTi, hk)
        endif
    elseif nTi == ak then
        if boS(eTi) == 300 then
            if not gSr(eTi, Ck) then
    call V5S(eTi, Ck)
            endif
            call Fci(eTi, Ck, $00000003)
        elseif boS(eTi) >= 250 then
            if not gSr(eTi, Ck) then
    call V5S(eTi, Ck)
            endif
            call Fci(eTi, Ck, $00000002)
        elseif boS(eTi) >= 150 then
            if not gSr(eTi, Ck) then
    call V5S(eTi, Ck)
            endif
            call Fci(eTi, Ck, $00000001)
        else
            call Q_s(eTi, Ck)
        endif
    endif
    set eTi = null
    set qTi = null
endfunction
function dTr takes nothing returns boolean
    return (GetItemTypeId(GetManipulatedItem()) == 1227896145 and IsUnitType(GetTriggerUnit(), UNIT_TYPE_HERO) and GetHeroLevel(GetTriggerUnit()) >= 65 and IsPlayerInForce(GetOwningPlayer(GetTriggerUnit()), IS[$0000000F]) == false) != false
endfunction
function E_S takes nothing returns boolean
    return GetItemTypeId(GetManipulatedItem()) == 1227895898 or GetItemTypeId(GetManipulatedItem()) == 1227895896 or GetItemTypeId(GetManipulatedItem()) == 1227895897 or GetItemTypeId(GetManipulatedItem()) == 1227895894
endfunction
function dUi takes nothing returns boolean
    return RectContainsUnit(ob, GetTriggerUnit()) and Zo[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))] == 1 and E_S() and IsPlayerInForce(GetOwningPlayer(GetTriggerUnit()), At) == false
endfunction
function dXw takes nothing returns boolean
    return GetUnitTypeId(GetOrderTargetUnit()) == 1747988814 and UnitHasItemOfTypeBJ(GetTriggerUnit(), $49303131) == false and IsPlayerInForce(GetOwningPlayer(GetTriggerUnit()), ns) and IsPlayerInForce(GetOwningPlayer(GetTriggerUnit()), Vr) and IsUnitInGroup(GetTriggerUnit(), kpu(300., GetUnitLoc(GetOrderTargetUnit())))
endfunction
function SEi takes nothing returns boolean
    return GetUnitTypeId(GetDyingUnit()) == 1429221428
endfunction
function dYt takes nothing returns nothing
    if SEi() then
        set Ni = 5
        set Mi = 8
        call ForForce(Rc[$00000005], flw)
        call DisplayTimedTextToForce(Rc[$00000005], 10., "|cffffcc00You have completed the dungeon!|r Type -|c00ff0000d|r|c00ff1500o|r|c00ff3000n|r|c00ff4500e|r to exit the dungeon after looting your reward.")
        call DisplayTimedTextToForce(Rc[$00000005], 10., "|cffffcc00Type|r |c00ff0000-s2s X|r|cffffcc00 to send an item to your stash. (1-6)|r")
        call PolledWait(S)
        set pr[$00000001] = 1227895120
        set pr[$00000002] = 1227895119
        set pr[$00000003] = 1227895125
        set pr[$00000004] = 1227895123
        set pr[$00000005] = 1227895124
        set pr[$00000006] = 1227895121
        set pr[$00000007] = 1227895122
        set pr[$00000008] = 1227895118
        set Mi = 8
        set Ni = 5
        call ForForce(Rc[$00000005], Qlw)
        call ForGroupBJ(fc[$00000005], Wlw)
        call TriggerExecute(cw)
        call GroupClear(fc[$00000005])
        call ForceClear(Rc[$00000005])
        call DisableTrigger(GetTriggeringTrigger())
    endif
endfunction
function dbS takes nothing returns boolean
    return GetSpellAbilityId() == 1093678163
endfunction
function dgS takes nothing returns nothing
    call DisplayTimedTextToForce(MwS(GetOwningPlayer(GetTriggerUnit())), 4., "|cffff0000Not enough power shards|r.")
    call IssueImmediateOrderById(GetTriggerUnit(), $000D0004)
endfunction
function v2S takes string F2S returns boolean
    local trigger k2S
    local trigger j2S
    local trigger x2S
    set DSw[ASw] = F2S
    set ASw = ASw + 1
    set CH = 450.
    set VH = .9
    set BH = 0.3
    set NH = 1000.
    call jts("when calling new_HashMap in Summoner_LightningStorm, line 19")
    set k2S = CreateTrigger()
    call B2S(k2S, hEw)
    set j2S = k2S
    call dUs(j2S, Condition(FEw))
    set x2S = j2S
    call l2w(x2S, EVENT_PLAYER_UNIT_SPELL_EFFECT)
    set ASw = ASw - 1
    set k2S = null
    set j2S = null
    set x2S = null
    return true
endfunction
function dhr takes nothing returns boolean
    set ASw = 0
    return v2S("via function reference Summoner_LightningStorm, line 1")
endfunction
function Ihi takes string Zhi returns integer
    local integer Uhi
    set DSw[ASw] = Zhi
    set ASw = ASw + 1
    if NX == 0 then
        if MX < 32768 then
            set MX = MX + 1
            set Uhi = MX
            set wC[Uhi] = 822
        else
            call tNr("Out of memory: Could not create CallbackSingle_doAfter_GenericUnitRespawn.", "when calling error in GenericUnitRespawn, line 49")
            set Uhi = 0
        endif
    else
        set NX = NX - 1
        set Uhi = BX[NX]
        set wC[Uhi] = 822
    endif
    set ASw = ASw - 1
    return Uhi
endfunction
function X7S takes string J7S returns boolean
    local unit K7S
    local boolean L7S
    set DSw[ASw] = J7S
    set ASw = ASw + 1
    set K7S = GetTriggerUnit()
    set L7S = K7S != null and hgr(eDs(K7S)) == PLAYER_NEUTRAL_AGGRESSIVE and(not giS(K7S, UNIT_TYPE_SUMMONED)) and(not giS(K7S, UNIT_TYPE_HERO)) and(not GpS(FQ, r5S(K7S), "when calling has in GenericUnitRespawn, line 34"))
    set ASw = ASw - 1
    set K7S = null
    return L7S
endfunction
function jJi takes string hJi returns boolean
    local unit FJi
    local boolean kJi
    set DSw[ASw] = hJi
    set ASw = ASw + 1
    set FJi = GetTriggerUnit()
    set kJi = FJi != null and hgr(eDs(FJi)) == PLAYER_NEUTRAL_AGGRESSIVE and giS(FJi, UNIT_TYPE_HERO) and(not giS(FJi, UNIT_TYPE_ANCIENT)) and Jyr(kQ, r5S(FJi), "when calling has in GenericUnitRespawn, line 40")
    set ASw = ASw - 1
    set FJi = null
    return kJi
endfunction
function flr takes string ylr returns nothing
    local boolean plr
    local boolean elr
    local unit qlr
    local real alr
    local integer nlr
    local real dlr
    set DSw[ASw] = ylr
    set ASw = ASw + 1
    set plr = X7S("when calling genericUnitDeathRespawn_condition in GenericUnitRespawn, line 43")
    set elr = jJi("when calling bossRespawnOnDeath_condition in GenericUnitRespawn, line 44")
    if plr or elr then
        set qlr = GetTriggerUnit()
        if elr then
            set alr = 5.
        else
            set alr = Rw
        endif
        set dlr = alr
        set nlr = Ihi("when calling alloc_CallbackSingle_doAfter_GenericUnitRespawn in GenericUnitRespawn, line 49")
        call RUs(nlr)
        set B7[nlr] = elr
        set N7[nlr] = qlr
        set M7[nlr] = plr
        call Ybr(dlr, nlr, "when calling doAfter in GenericUnitRespawn, line 49")
    endif
    set ASw = ASw - 1
    set qlr = null
endfunction
function dht takes nothing returns nothing
    set ASw = 0
    call flr("via function reference GenericUnitRespawn, line 66")
endfunction
function dis takes nothing returns nothing
    set es = GetRectCenter(Zy)
    call SetUnitPositionLocFacingBJ(GetTriggerUnit(), es, 90.)
    call PanCameraToTimedLocForPlayer(GetOwningPlayer(GetTriggerUnit()), es, 0.)
    call TriggerExecute(MT)
    call RemoveLocation(es)
endfunction
function dks takes nothing returns boolean
    return GetUnitTypeId(GetOrderTargetUnit()) == 1747988813 and UnitHasItemOfTypeBJ(GetTriggerUnit(), $49303059) == false and IsPlayerInForce(GetOwningPlayer(GetTriggerUnit()), Vr) and IsPlayerInForce(GetOwningPlayer(GetTriggerUnit()), fs) and IsUnitInGroup(GetTriggerUnit(), kpu(300., GetUnitLoc(GetOrderTargetUnit())))
endfunction
function dkt takes nothing returns nothing
    call SetUnitLifePercentBJ(GetEnumUnit(), 100.)
endfunction
function xcu takes string kcu returns integer
    local integer jcu
    set DSw[ASw] = kcu
    set ASw = ASw + 1
    if NX == 0 then
        if MX < 32768 then
            set MX = MX + 1
            set jcu = MX
            set wC[jcu] = 1007
        else
            call tNr("Out of memory: Could not create CallbackSingle_doAfter_addAction_JobAdvancementQuestHandler.", "when calling error in JobAdvancementQuestHandler, line 792")
            set jcu = 0
        endif
    else
        set NX = NX - 1
        set jcu = BX[NX]
        set wC[jcu] = 1007
    endif
    set ASw = ASw - 1
    return jcu
endfunction
function ywi takes string lwi returns nothing
    local integer bwi
    set DSw[ASw] = lwi
    set ASw = ASw + 1
    set bwi = xcu("when calling alloc_CallbackSingle_doAfter_addAction_JobAdvancementQuestHandler in JobAdvancementQuestHandler, line 792")
    call RUs(bwi)
    call Ybr(.1, bwi, "when calling doAfter in JobAdvancementQuestHandler, line 792")
    set ASw = ASw - 1
endfunction
function doi takes nothing returns nothing
    set ASw = 0
    call ywi("via function reference JobAdvancementQuestHandler, line 791")
endfunction
function dus takes nothing returns nothing
    set Qc = GetUnitLoc(GetEnumUnit())
    call CreateNUnitsAtLoc($00000001, $68303346, GetOwningPlayer(GetTriggerUnit()), Qc, 270.)
    call UnitDamageTargetBJ(GetTriggerUnit(), GetEnumUnit(), 800. * I2R(GetUnitAbilityLevelSwapped(GetSpellAbilityId(), GetTriggerUnit())), ATTACK_TYPE_CHAOS, DAMAGE_TYPE_UNIVERSAL)
    call RemoveLocation(Qc)
endfunction
function Qmu takes string vmu returns integer
    local integer mmu
    set DSw[ASw] = vmu
    set ASw = ASw + 1
    if NX == 0 then
        if MX < 32768 then
            set MX = MX + 1
            set mmu = MX
            set wC[mmu] = 889
        else
            call tNr("Out of memory: Could not create CallbackSingle_doAfter_Items_Pickup_Drop.", "when calling error in Items_Pickup_Drop, line 553")
            set mmu = 0
        endif
    else
        set NX = NX - 1
        set mmu = BX[NX]
        set wC[mmu] = 889
    endif
    set ASw = ASw - 1
    return mmu
endfunction
function T4u takes string f4u returns integer
    local integer R4u
    set DSw[ASw] = f4u
    set ASw = ASw + 1
    if NX == 0 then
        if MX < 32768 then
            set MX = MX + 1
            set R4u = MX
            set wC[R4u] = 1101
        else
            call tNr("Out of memory: Could not create CallbackSingle_nullTimer_Items_Pickup_Drop.", "when calling error in Items_Pickup_Drop, line 651")
            set R4u = 0
        endif
    else
        set NX = NX - 1
        set R4u = BX[NX]
        set wC[R4u] = 1101
    endif
    set ASw = ASw - 1
    return R4u
endfunction
function YFu takes string RFu returns integer
    local integer TFu
    set DSw[ASw] = RFu
    set ASw = ASw + 1
    if NX == 0 then
        if MX < 32768 then
            set MX = MX + 1
            set TFu = MX
            set wC[TFu] = 890
        else
            call tNr("Out of memory: Could not create CallbackSingle_doAfter_Items_Pickup_Drop.", "when calling error in Items_Pickup_Drop, line 558")
            set TFu = 0
        endif
    else
        set NX = NX - 1
        set TFu = BX[NX]
        set wC[TFu] = 890
    endif
    set ASw = ASw - 1
    return TFu
endfunction
function Yru takes unit nru, integer dru returns boolean
    local boolean fru = false
    local integer Rru = 0
    local integer Tru = dcs(nru) - 1
    loop
        exitwhen Rru > Tru
        if RBt(ofi(nru, Rru)) and q3t(ofi(nru, Rru)) != dru then
            set fru = true
            exitwhen true
        endif
        set Rru = Rru + 1
    endloop
    return fru
endfunction
function lwS takes string L_S returns nothing
    local unit X_S
    local player C_S
    local integer V_S
    local item B_S
    local integer N_S
    local integer M_S
    local integer wwS
    local integer uwS
    local integer rwS
    local integer swS
    local integer twS
    local integer iwS
    local item SwS
    local integer cwS
    local boolean owS
    local integer OwS
    set DSw[ASw] = L_S
    set ASw = ASw + 1
    set X_S = GetTriggerUnit()
    set C_S = eDs(X_S)
    set V_S = hgr(C_S)
    set B_S = GetManipulatedItem()
    set N_S = q3t(B_S)
    set M_S = hgr(v9S(B_S))
    set wwS = brs(B_S)
    call GVw(QI, Xdu(B_S), B5r(GetOrderPointX()), "when calling put in Items_Pickup_Drop, line 544")
    call GVw(WI, Xdu(B_S), B5r(GetOrderPointY()), "when calling put in Items_Pickup_Drop, line 545")
    if BDs(B_S, "when calling isTheDestiny in Items_Pickup_Drop, line 547") and Jyr(Kv, Aei(X_S), "when calling has in Items_Pickup_Drop, line 547") then
        call I7S(Aii(wps(Kv, Aei(X_S), "when calling get in Items_Pickup_Drop, line 548"), "when calling effectFromIndex in Items_Pickup_Drop, line 548"))
        call klS(Kv, Aei(X_S), "when calling remove in Items_Pickup_Drop, line 549")
        call I7S(mXi(X_S, qm, dg))
        call wru(V_S, false)
    elseif C2r(B_S) then
        set uwS = Qmu("when calling alloc_CallbackSingle_doAfter_Items_Pickup_Drop in Items_Pickup_Drop, line 553")
        call RUs(uwS)
        set Z0w[uwS] = X_S
        set U0w[uwS] = N_S
        call Ybr(0.1, uwS, "when calling doAfter in Items_Pickup_Drop, line 553")
    endif
    if RBt(B_S) then
        set rwS = YFu("when calling alloc_CallbackSingle_doAfter_Items_Pickup_Drop in Items_Pickup_Drop, line 558")
        call RUs(rwS)
        set I0w[rwS] = B_S
        set P0w[rwS] = X_S
        set A0w[rwS] = V_S
        call Ybr(.1, rwS, "when calling doAfter in Items_Pickup_Drop, line 558")
    endif
    if ait(B_S, "when calling isStackable in Items_Pickup_Drop, line 564") then
        if not Jyr(C_r(RI, V_S, "when calling get in Items_Pickup_Drop, line 568"), Xdu(B_S), "when calling has in Items_Pickup_Drop, line 568") then
            call GVw(C_r(RI, V_S, "when calling get in Items_Pickup_Drop, line 569"), Xdu(B_S), $00000000, "when calling put in Items_Pickup_Drop, line 569")
        endif
        if M_S == V_S then
            set iwS = wps(C_r(RI, M_S, "when calling get in Items_Pickup_Drop, line 570"), Xdu(B_S), "when calling get in Items_Pickup_Drop, line 570")
        else
            if M_S > Lh then
    set twS = brs(B_S)
            else
    set twS = 0
            endif
            set iwS = twS
        endif
        set swS = iwS
        set SwS = uwr(X_S, N_S)
        set cwS = 0
        set owS = false
        if wwS == 1 then
            set owS = true
            if (SwS == B_S and brs(SwS) == 1 and Ots(B_S, V_S, "when calling getChargesVirtual in Items_Pickup_Drop, line 599") < 1)or yct(X_S, N_S) == 2 then
    set swS = 1
            else
    set swS = 0
            endif
            set cwS = 0
        endif
        set OwS = T4u("when calling alloc_CallbackSingle_nullTimer_Items_Pickup_Drop in Items_Pickup_Drop, line 651")
        call RUs(OwS)
        set D0w[OwS] = owS
        set H0w[OwS] = X_S
        set J0w[OwS] = B_S
        set K0w[OwS] = SwS
        set L0w[OwS] = wwS
        set X0w[OwS] = cwS
        set C0w[OwS] = swS
        set V0w[OwS] = N_S
        set B0w[OwS] = V_S
        set N0w[OwS] = C_S
        call ccr(OwS, "when calling nullTimer in Items_Pickup_Drop, line 651")
    endif
    if RBt(B_S) and giS(X_S, UNIT_TYPE_HERO) and q3t(B_S) != l2s(Iji("I05H", "when calling unObfuscate in Items_Pickup_Drop, line 681"), "when calling fromRawCode in Items_Pickup_Drop, line 681") and q3t(B_S) != l2s(Iji("I05O", "when calling unObfuscate in Items_Pickup_Drop, line 681"), "when calling fromRawCode in Items_Pickup_Drop, line 681") and (not Yru(X_S, l2s(Iji("I05H", "when calling unObfuscate in Items_Pickup_Drop, line 682"), "when calling fromRawCode in Items_Pickup_Drop, line 682")))and(not Yru(X_S, l2s(Iji("I05O", "when calling unObfuscate in Items_Pickup_Drop, line 682"), "when calling fromRawCode in Items_Pickup_Drop, line 682"))) then
        if Jyr(vI, V_S, "when calling has in Items_Pickup_Drop, line 683") and wps(vI, V_S, "when calling get in Items_Pickup_Drop, line 683") != 0 then
            call Q_s(X_S, wps(vI, V_S, "when calling get in Items_Pickup_Drop, line 684"))
            if Jyr(mI, V_S, "when calling has in Items_Pickup_Drop, line 685") then
    call I7S(Aii(wps(mI, V_S, "when calling get in Items_Pickup_Drop, line 686"), "when calling effectFromIndex in Items_Pickup_Drop, line 686"))
            endif
            call klS(vI, V_S, "when calling remove in Items_Pickup_Drop, line 687")
        endif
    endif
    set ASw = ASw - 1
    set X_S = null
    set C_S = null
    set B_S = null
    set SwS = null
endfunction
function dwt takes nothing returns nothing
    set ASw = 0
    call lwS("via function reference Items_Pickup_Drop, line 780")
endfunction
function dxi takes nothing returns boolean
    set yv = 60
    set pv =- 1
    set ev = InitHashtable()
    set qv = ""
    set av = false
    return true
endfunction
function dxt takes nothing returns nothing
    set vs[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))] = 5
    call DisplayTextToForce(MwS(GetOwningPlayer(GetTriggerUnit())), "|cffffcc00You pray silently and pour the holy water over the Altar before pouring it over your head. Instantly, you feel as if you are shining brightly like gold.|r")
    call QuestSetDescription(Lr[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))], "I need to get back to the High Priest Stendarr and tell him I have completed the Rites of the Highfather.")
endfunction
function dys takes nothing returns boolean
    return GetUnitTypeId(GetTriggerUnit()) == 1211117893 and GetUnitTypeId(GetOrderTargetUnit()) == 1747988811 and IsPlayerInForce(GetOwningPlayer(GetTriggerUnit()), rt) == false and IsUnitInGroup(GetTriggerUnit(), kpu(300., GetUnitLoc(GetOrderTargetUnit()))) and GetHeroLevel(GetTriggerUnit()) >= 150
endfunction
function e0s takes nothing returns nothing
    call SetUnitLifePercentBJ(GetEnumUnit(), 100.)
endfunction
function e1i takes nothing returns boolean
    return GetUnitTypeId(GetTriggerUnit()) == 1211117634 and GetOrderTargetUnit() == uG and GetHeroLevel(GetTriggerUnit()) >= 40 and IsPlayerInForce(GetOwningPlayer(GetTriggerUnit()), nr) == false and IsUnitInGroup(GetTriggerUnit(), kpu(300., GetUnitLoc(GetOrderTargetUnit())))
endfunction
function e3w takes nothing returns boolean
    set FD = 2
    set kD = 45.
    return true
endfunction
function e4s takes nothing returns boolean
    return GetSpellAbilityId() == 1093678933
endfunction
function e5S takes nothing returns boolean
    return (GetItemTypeId(GetManipulatedItem()) == 1227895881 and IsUnitType(GetTriggerUnit(), UNIT_TYPE_HERO) and GetHeroLevel(GetTriggerUnit()) >= 120 and IsPlayerInForce(GetOwningPlayer(GetTriggerUnit()), pc[$00000004]) == false and M[(1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))) * 1000 + fkS(GetTriggerUnit())] == false) != false
endfunction
function e5r takes nothing returns boolean
    return GetSpellAbilityId() == 1093678904
endfunction
function e6S takes nothing returns nothing
    call ForceAddPlayer(rt, GetOwningPlayer(GetTriggerUnit()))
    call ForceAddPlayer(Ot, GetOwningPlayer(GetTriggerUnit()))
    call DisplayTextToForce(MwS(GetOwningPlayer(GetTriggerUnit())), "|cffffcc00Eve|r : |cff87ceebI am impressed you have found me, fellow magician. But I will not impart to you my Arcane knowledges so easily. Prove yourself to me. Transverse the Rite of Passage - successfully, and I shall teach you the strongest arcane spell ever - Twilight's Eve.")
    call PlaySoundBJ(Se)
    call T_i(GetOwningPlayer(GetTriggerUnit()), $00000000, "4th Job Advancement Quest", "I have to transverse the Rite of Passage successfully.", "ReplaceableTextures\\PassiveButtons\\PASBTNGenericSpellImmunity.blp")
    set st[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))] = bj_lastCreatedQuest
    set kt[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))] = 0
endfunction
function e7t takes nothing returns nothing
    call ForceAddPlayer(rt, GetOwningPlayer(GetTriggerUnit()))
    call ForceAddPlayer(Ot, GetOwningPlayer(GetTriggerUnit()))
    call DisplayTextToForce(MwS(GetOwningPlayer(GetTriggerUnit())), "|cffffcc00Siegfried|r : |cff87ceebYou took so much trouble finding me just to become an Avenger? Very well...I shall grant you your wish. But first, I must know whether you have trained hard enough. Transverse the Rite of Passage successfully and return to me, so I may evaluate your skill.")
    call PlaySoundBJ(Se)
    call T_i(GetOwningPlayer(GetTriggerUnit()), $00000000, "4th Job Advancement Quest", "I have to transverse the Rite of Passage successfully.", "ReplaceableTextures\\PassiveButtons\\PASBTNGenericSpellImmunity.blp")
    set st[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))] = bj_lastCreatedQuest
    set kt[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))] = 0
endfunction
function Akr takes real Ukr, real Ikr, real Pkr returns rect
    return Rect(Ukr - Pkr, Ikr - Pkr, Ukr + Pkr, Ikr + Pkr)
endfunction
function Oxi takes string cxi returns integer
    local integer oxi
    set DSw[ASw] = cxi
    set ASw = ASw + 1
    if rC == 0 then
        if sC < 32768 then
            set sC = sC + 1
            set oxi = sC
            set tC[oxi] = 653
        else
            call tNr("Out of memory: Could not create CallbackCounted_doPeriodicallyCounted_ProfWitcher_Ulti.", "when calling error in ProfWitcher_Ulti, line 32")
            set oxi = 0
        endif
    else
        set rC = rC - 1
        set oxi = uC[rC]
        set tC[oxi] = 653
    endif
    set ASw = ASw - 1
    return oxi
endfunction
function b_i takes unit l_i returns real
    set pow = kEr(l_i)
    set eow = L1t(l_i)
    set qow = 0.
    return pow
endfunction
function a0S takes string L9S returns nothing
    local unit X9S
    local integer C9S
    local real V9S
    local real B9S
    local unit N9S
    local player M9S
    local integer w0S
    local rect u0S
    local boolean r0S
    local boolean s0S
    local integer t0S
    local texttag i0S
    local texttag S0S
    local texttag c0S
    local texttag o0S
    local texttag O0S
    local integer l0S
    local real b0S
    local real y0S
    local real p0S
    local real e0S
    local real q0S
    set DSw[ASw] = L9S
    set ASw = ASw + 1
    set X9S = GetTriggerUnit()
    set C9S = GetSpellAbilityId()
    set y0S = ANw(X9S)
    set p0S = XSw
    set V9S = y0S
    set B9S = p0S
    set N9S = GetSpellTargetUnit()
    set M9S = eDs(X9S)
    set w0S = hgr(M9S)
    set u0S = Akr(ANw(X9S), XSw, 500.)
    call GroupAddUnit(YO, GetTriggerUnit())
    set hu[w0S] = true
    set r0S = fRi(N9S)
    set s0S = n2u(N9S)
    call PauseUnit(X9S, true)
    call PauseUnit(N9S, true)
    call SetUnitInvulnerable(X9S, true)
    call SetUnitInvulnerable(N9S, true)
    set t0S = 0
    set S0S = d4i(b_i(N9S), eow, qow, .0064, .0090, fju(t0S) + " Hit!", 12., 1., $000000FF, $00000000, $00000000, $000000FF)
    call wfu(S0S, false)
    set c0S = S0S
    call Zkr(c0S, iF * 2. * 35. + 1.)
    set o0S = c0S
    call Usr(o0S, iF * 2. * 35. + 2.)
    set O0S = o0S
    call FBu(O0S, true)
    set i0S = O0S
    set b0S = iF * 2.
    set l0S = Oxi("when calling alloc_CallbackCounted_doPeriodicallyCounted_ProfWitcher_Ulti in ProfWitcher_Ulti, line 32")
    call Inr(l0S)
    set brw[l0S] = t0S
    set yrw[l0S] = u0S
    set e0S = V9S
    set q0S = B9S
    set prw[l0S] = e0S
    set erw[l0S] = q0S
    set qrw[l0S] = X9S
    set arw[l0S] = N9S
    set nrw[l0S] = i0S
    set drw[l0S] = s0S
    set frw[l0S] = r0S
    set Rrw[l0S] = C9S
    set Trw[l0S] = w0S
    call l5s(b0S, $00000023, l0S, "when calling doPeriodicallyCounted in ProfWitcher_Ulti, line 32")
    set ASw = ASw - 1
    set X9S = null
    set N9S = null
    set M9S = null
    set u0S = null
    set i0S = null
    set S0S = null
    set c0S = null
    set o0S = null
    set O0S = null
endfunction
function e8t takes nothing returns nothing
    set ASw = 0
    call a0S("via function reference ProfWitcher_Ulti, line 90")
endfunction
function eAu takes nothing returns nothing
    call GroupAddUnit(GO, GetTriggerUnit())
    set Ic[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))] = GetSpellTargetLoc()
    call n6t(.5)
    set Pc[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))] = UFS(600., Ic[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))], Condition(Kbw))
    call ForGroupBJ(Pc[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))], Lbw)
    call GroupRemoveUnit(GO, GetTriggerUnit())
    call DestroyGroup(Pc[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))])
    call RemoveLocation(Ic[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))])
endfunction
function eCw takes nothing returns nothing
    call ForceAddPlayer(Kr, GetOwningPlayer(GetTriggerUnit()))
    call DisplayTextToForce(MwS(GetOwningPlayer(GetTriggerUnit())), "|cffffcc00Class Trainer|r : |cff87ceebGreetings, fellow Hunter. It is good to see you again, but now is the time to choose. From here on out, you will shape your destiny into something much greater! Bring me a letter of recommendation from either the marksman Luna, who resides in Brokelyn Camp northwest of here, or the famed Tracker, Naisha, who is currently located somewhere in the Mountains. Choose your path well and may our destinies interwine someday.")
    call PlaySoundBJ(Se)
    call T_i(GetOwningPlayer(GetTriggerUnit()), $00000000, "3rd Job Advancement Quest", "I need to choose - the strong ranged strikes of the Marksman, or the fast agile path of the Tracker.\n- The Marksman Luna resides at the Brokelyn Camp northwest of here.\n- The Tracker Naisha is located somewhere in the mountains.", "ReplaceableTextures\\CommandButtons\\BTNSell.blp")
    set Lr[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))] = bj_lastCreatedQuest
    set ds[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))] = 0
endfunction
function Hqi takes nothing returns boolean
    return ds[1 + GetPlayerId(GetOwningPlayer(GetKillingUnit()))] >= 15
endfunction
function eDi takes nothing returns nothing
    set ds[1 + GetPlayerId(GetOwningPlayer(GetKillingUnit()))] = ds[1 + GetPlayerId(GetOwningPlayer(GetKillingUnit()))] + 1
    if Hqi() then
        call QuestMessageBJ(MwS(GetOwningPlayer(GetKillingUnit())), $00000002, "|cffffcc003rd Job Advancement Quest Completed|r.")
        call ForceAddPlayer(Vr, GetOwningPlayer(GetKillingUnit()))
    else
        call QuestMessageBJ(MwS(GetOwningPlayer(GetKillingUnit())), $00000001, I2S(ds[1 + GetPlayerId(GetOwningPlayer(GetKillingUnit()))]) + " Lizardman Sorcerer(s) killed.")
    endif
endfunction
function F0t takes nothing returns boolean
    return ms[1 + GetPlayerId(GetOwningPlayer(GetKillingUnit()))] >= 10
endfunction
function VOs takes nothing returns boolean
    return Qs[1 + GetPlayerId(GetOwningPlayer(GetKillingUnit()))] >= 10
endfunction
function qDi takes nothing returns boolean
    return GetUnitTypeId(GetDyingUnit()) == 1848652084
endfunction
function xyu takes nothing returns boolean
    return GetUnitTypeId(GetDyingUnit()) == 1848652085
endfunction
function eDr takes nothing returns nothing
    if xyu() then
        set ms[1 + GetPlayerId(GetOwningPlayer(GetKillingUnit()))] = ms[1 + GetPlayerId(GetOwningPlayer(GetKillingUnit()))] + 1
        if F0t() then
            call ForceAddPlayer(Es, GetOwningPlayer(GetKillingUnit()))
            call QuestMessageBJ(MwS(GetOwningPlayer(GetKillingUnit())), $00000002, "|cffffcc00I have the remains of 10 Wraiths|r.")
        else
            call QuestMessageBJ(MwS(GetOwningPlayer(GetKillingUnit())), $00000001, I2S(ms[1 + GetPlayerId(GetOwningPlayer(GetKillingUnit()))]) + " Wraith(s) killed.")
        endif
    endif
    if qDi() then
        set Qs[1 + GetPlayerId(GetOwningPlayer(GetKillingUnit()))] = Qs[1 + GetPlayerId(GetOwningPlayer(GetKillingUnit()))] + 1
        if VOs() then
            call ForceAddPlayer(Ws, GetOwningPlayer(GetKillingUnit()))
            call QuestMessageBJ(MwS(GetOwningPlayer(GetKillingUnit())), $00000002, "|cffffcc00I have the remains of 10 Spectres|r.")
        else
            call QuestMessageBJ(MwS(GetOwningPlayer(GetKillingUnit())), $00000001, I2S(Qs[1 + GetPlayerId(GetOwningPlayer(GetKillingUnit()))]) + " Spectre(s) killed.")
        endif
    endif
endfunction
function TOS takes nothing returns boolean
    return KS[1 + GetPlayerId(GetOwningPlayer(GetKillingUnit()))] == 1
endfunction
function VAs takes nothing returns boolean
    return KS[1 + GetPlayerId(GetOwningPlayer(GetKillingUnit()))] >= 50
endfunction
function eEs takes nothing returns nothing
    set KS[1 + GetPlayerId(GetOwningPlayer(GetKillingUnit()))] = KS[1 + GetPlayerId(GetOwningPlayer(GetKillingUnit()))] + 1
    if VAs() then
        call QuestMessageBJ(MwS(GetOwningPlayer(GetKillingUnit())), $00000002, "|cffffcc00Ghastly Appetite|r Quest Requirement Completed.")
    else
        call QuestMessageBJ(MwS(GetOwningPlayer(GetKillingUnit())), $00000001, I2S(KS[1 + GetPlayerId(GetOwningPlayer(GetKillingUnit()))]) + " Bloodthirsty Maniac(s) killed.")
    endif
    if TOS() and(not IsPlayerInForce(GetOwningPlayer(GetKillingUnit()), PS[$0000000B])) then
        call DisplayTimedTextToForce(MwS(GetOwningPlayer(GetKillingUnit())), 5., "Aha! I knew it! These Bloodthirsty Maniacs are behind all these. I'd better eliminate at least 50 of them to prevent any troubles from them in the future.")
    endif
endfunction
function E6i takes nothing returns boolean
    return RectContainsUnit(bb, yO)
endfunction
function EDt takes nothing returns boolean
    return OO <= 90
endfunction
function Gpu takes nothing returns boolean
    return OO <= 90
endfunction
function Opr takes nothing returns boolean
    return OO <= 90
endfunction
function Shr takes nothing returns boolean
    return OO <= 90
endfunction
function VNu takes nothing returns boolean
    return RectContainsUnit(cb, yO)
endfunction
function dZu takes nothing returns boolean
    return RectContainsUnit(lb, yO)
endfunction
function oeS takes nothing returns boolean
    return RectContainsUnit(ob, yO)
endfunction
function r3w takes nothing returns boolean
    return RectContainsUnit(Ob, yO)
endfunction
function vFS takes nothing returns boolean
    return OO <= 90
endfunction
function Fiu takes string giu returns nothing
    local unit hiu
    set DSw[ASw] = giu
    set ASw = ASw + 1
    call TriggerExecute(Yu)
    set hiu = hqs(xMi(tOS(GetTriggerPlayer(), "when calling getCustomPlayer in Fishing, line 174"), "when calling getCHero in Fishing, line 174"), "when calling getHero in Fishing, line 174")
    set yO = hiu
    set bO[1 + GetPlayerId(uO)] = 0
    if VNu() then
        set OO = GetRandomInt($00000001, $00000064)
        if Opr() then
            set oO = 2 * 2
            call qas(hiu, $49303541, $00000001, "when calling giveFish in Fishing, line 182")
        else
            set oO = 1 * 2
            call qas(hiu, $49303530, $00000001, "when calling giveFish in Fishing, line 185")
        endif
    elseif oeS() then
        set OO = GetRandomInt($00000001, $00000064)
        if Gpu() then
            set oO = 4 * 2
            call qas(hiu, $49303537, $00000001, "when calling giveFish in Fishing, line 191")
        else
            set oO = 3 * 2
            call qas(hiu, $49303531, $00000001, "when calling giveFish in Fishing, line 194")
        endif
    elseif r3w() then
        set OO = GetRandomInt($00000001, $00000064)
        if Shr() then
            set oO = 6 * 2
            call qas(hiu, $49303533, $00000001, "when calling giveFish in Fishing, line 201")
        else
            set oO = 5 * 2
            call qas(hiu, $49303538, $00000001, "when calling giveFish in Fishing, line 204")
        endif
    elseif dZu() then
        set OO = GetRandomInt($00000001, $00000064)
        if vFS() then
            set oO = 8 * 2
            call qas(hiu, $49303535, $00000001, "when calling giveFish in Fishing, line 210")
        else
            set oO = 7 * 2
            call qas(hiu, $49303536, $00000001, "when calling giveFish in Fishing, line 213")
        endif
    elseif E6i() then
        set OO = GetRandomInt($00000001, $00000064)
        if EDt() then
            set oO = 10 * 2
            call qas(hiu, $49303532, $00000001, "when calling giveFish in Fishing, line 219")
        else
            set oO = 9 * 2
            call qas(hiu, $49303539, $00000002, "when calling giveFish in Fishing, line 222")
        endif
    endif
    set ASw = ASw - 1
    set hiu = null
endfunction
function eFi takes nothing returns nothing
    set ASw = 0
    call Fiu("via function reference Fishing, line 301")
endfunction
function eHu takes nothing returns boolean
    return GetSpellAbilityId() == 1093678160 and GetPlayerState(GetOwningPlayer(GetTriggerUnit()), PLAYER_STATE_RESOURCE_LUMBER) < Z and GetPlayerController(GetOwningPlayer(GetSpellTargetUnit())) != MAP_CONTROL_USER
endfunction
function bVi takes string rVi returns boolean
    local integer sVi
    local integer tVi
    local integer iVi
    local integer SVi
    local integer cVi
    local integer oVi
    local integer OVi
    local integer lVi
    set DSw[ASw] = rVi
    set ASw = ASw + 1
    set KF = l2s(Iji("n00C", "when calling unObfuscate in CustomObjectIds, line 5"), "when calling fromRawCode in CustomObjectIds, line 5")
    set LF = l2s(Iji("n01L", "when calling unObfuscate in CustomObjectIds, line 6"), "when calling fromRawCode in CustomObjectIds, line 6")
    set XF = l2s(Iji("n02P", "when calling unObfuscate in CustomObjectIds, line 7"), "when calling fromRawCode in CustomObjectIds, line 7")
    set CF = l2s(Iji("n02R", "when calling unObfuscate in CustomObjectIds, line 8"), "when calling fromRawCode in CustomObjectIds, line 8")
    call l2s(Iji("h02J", "when calling unObfuscate in CustomObjectIds, line 9"), "when calling fromRawCode in CustomObjectIds, line 9")
    set VF = l2s(Iji("n003", "when calling unObfuscate in CustomObjectIds, line 10"), "when calling fromRawCode in CustomObjectIds, line 10")
    set BF = l2s(Iji("ICHV", "when calling unObfuscate in CustomObjectIds, line 16"), "when calling fromRawCode in CustomObjectIds, line 16")
    set NF = l2s(Iji("I02Z", "when calling unObfuscate in CustomObjectIds, line 17"), "when calling fromRawCode in CustomObjectIds, line 17")
    set MF = l2s(Iji("I046", "when calling unObfuscate in CustomObjectIds, line 18"), "when calling fromRawCode in CustomObjectIds, line 18")
    set wk = l2s(Iji("I05F", "when calling unObfuscate in CustomObjectIds, line 19"), "when calling fromRawCode in CustomObjectIds, line 19")
    set uk = l2s(Iji("I05H", "when calling unObfuscate in CustomObjectIds, line 20"), "when calling fromRawCode in CustomObjectIds, line 20")
    set rk = l2s(Iji("I05O", "when calling unObfuscate in CustomObjectIds, line 21"), "when calling fromRawCode in CustomObjectIds, line 21")
    set sk = l2s(Iji("I04N", "when calling unObfuscate in CustomObjectIds, line 22"), "when calling fromRawCode in CustomObjectIds, line 22")
    set tk = l2s(Iji("I04O", "when calling unObfuscate in CustomObjectIds, line 23"), "when calling fromRawCode in CustomObjectIds, line 23")
    set ik = l2s(Iji("I04P", "when calling unObfuscate in CustomObjectIds, line 24"), "when calling fromRawCode in CustomObjectIds, line 24")
    set Sk = l2s(Iji("I047", "when calling unObfuscate in CustomObjectIds, line 25"), "when calling fromRawCode in CustomObjectIds, line 25")
    set ck = l2s(Iji("I05G", "when calling unObfuscate in CustomObjectIds, line 26"), "when calling fromRawCode in CustomObjectIds, line 26")
    set ok = l2s(Iji("H02F", "when calling unObfuscate in CustomObjectIds, line 28"), "when calling fromRawCode in CustomObjectIds, line 28")
    set Ok = l2s(Iji("H02P", "when calling unObfuscate in CustomObjectIds, line 29"), "when calling fromRawCode in CustomObjectIds, line 29")
    set lk = l2s(Iji("H02K", "when calling unObfuscate in CustomObjectIds, line 30"), "when calling fromRawCode in CustomObjectIds, line 30")
    set bk = l2s(Iji("H02H", "when calling unObfuscate in CustomObjectIds, line 31"), "when calling fromRawCode in CustomObjectIds, line 31")
    set yk = l2s(Iji("H023", "when calling unObfuscate in CustomObjectIds, line 32"), "when calling fromRawCode in CustomObjectIds, line 32")
    set pk = l2s(Iji("H02C", "when calling unObfuscate in CustomObjectIds, line 33"), "when calling fromRawCode in CustomObjectIds, line 33")
    set ek = l2s(Iji("H02B", "when calling unObfuscate in CustomObjectIds, line 34"), "when calling fromRawCode in CustomObjectIds, line 34")
    set qk = l2s(Iji("H024", "when calling unObfuscate in CustomObjectIds, line 35"), "when calling fromRawCode in CustomObjectIds, line 35")
    set ak = l2s(Iji("H02E", "when calling unObfuscate in CustomObjectIds, line 37"), "when calling fromRawCode in CustomObjectIds, line 37")
    set nk = l2s(Iji("H02N", "when calling unObfuscate in CustomObjectIds, line 38"), "when calling fromRawCode in CustomObjectIds, line 38")
    set dk = l2s(Iji("H02O", "when calling unObfuscate in CustomObjectIds, line 39"), "when calling fromRawCode in CustomObjectIds, line 39")
    set fk = l2s(Iji("H02R", "when calling unObfuscate in CustomObjectIds, line 40"), "when calling fromRawCode in CustomObjectIds, line 40")
    set Rk = l2s(Iji("H02T", "when calling unObfuscate in CustomObjectIds, line 41"), "when calling fromRawCode in CustomObjectIds, line 41")
    set Tk = l2s(Iji("H02U", "when calling unObfuscate in CustomObjectIds, line 42"), "when calling fromRawCode in CustomObjectIds, line 42")
    call l2s(Iji("H02M", "when calling unObfuscate in CustomObjectIds, line 44"), "when calling fromRawCode in CustomObjectIds, line 44")
    call l2s(Iji("H02Q", "when calling unObfuscate in CustomObjectIds, line 45"), "when calling fromRawCode in CustomObjectIds, line 45")
    call l2s(Iji("H02L", "when calling unObfuscate in CustomObjectIds, line 46"), "when calling fromRawCode in CustomObjectIds, line 46")
    call l2s(Iji("H02S", "when calling unObfuscate in CustomObjectIds, line 47"), "when calling fromRawCode in CustomObjectIds, line 47")
    set Yk = l2s(Iji("AWAD", "when calling unObfuscate in CustomObjectIds, line 50"), "when calling fromRawCode in CustomObjectIds, line 50")
    set Gk = l2s(Iji("AWDD", "when calling unObfuscate in CustomObjectIds, line 51"), "when calling fromRawCode in CustomObjectIds, line 51")
    set gk = l2s(Iji("A0WS", "when calling unObfuscate in CustomObjectIds, line 52"), "when calling fromRawCode in CustomObjectIds, line 52")
    call l2s(Iji("U00Q", "when calling unObfuscate in CustomObjectIds, line 55"), "when calling fromRawCode in CustomObjectIds, line 55")
    set hk = l2s(Iji("A0CG", "when calling unObfuscate in CustomObjectIds, line 58"), "when calling fromRawCode in CustomObjectIds, line 58")
    set Fk = l2s(Iji("A06T", "when calling unObfuscate in CustomObjectIds, line 59"), "when calling fromRawCode in CustomObjectIds, line 59")
    set kk = l2s(Iji("A0C2", "when calling unObfuscate in CustomObjectIds, line 60"), "when calling fromRawCode in CustomObjectIds, line 60")
    set jk = l2s(Iji("A06U", "when calling unObfuscate in CustomObjectIds, line 61"), "when calling fromRawCode in CustomObjectIds, line 61")
    set xk = l2s(Iji("A085", "when calling unObfuscate in CustomObjectIds, line 63"), "when calling fromRawCode in CustomObjectIds, line 63")
    set vk = l2s(Iji("A0BU", "when calling unObfuscate in CustomObjectIds, line 65"), "when calling fromRawCode in CustomObjectIds, line 65")
    set mk = l2s(Iji("A0D8", "when calling unObfuscate in CustomObjectIds, line 66"), "when calling fromRawCode in CustomObjectIds, line 66")
    set sVi = xMr("when calling new_IterableMap in CustomObjectIds, line 68")
    call iUr(sVi, $41303534, $45747131, "when calling put in CustomObjectIds, line 71")
    set tVi = sVi
    call iUr(tVi, $41303530, $4F636C31, "when calling put in CustomObjectIds, line 72")
    set iVi = tVi
    call iUr(iVi, $41303831, $52656A31, "when calling put in CustomObjectIds, line 73")
    set SVi = iVi
    call iUr(SVi, $52656A31, $52656A32, "when calling put in CustomObjectIds, line 74")
    set Qk = SVi
    set cVi = xMr("when calling new_IterableMap in CustomObjectIds, line 76")
    call iUr(cVi, $41303534, B5r(16590.00), "when calling put in CustomObjectIds, line 79")
    set oVi = cVi
    call iUr(oVi, $41303530, B5r(12000.00), "when calling put in CustomObjectIds, line 80")
    set OVi = oVi
    call iUr(OVi, $41303831, B5r(18000.), "when calling put in CustomObjectIds, line 81")
    set lVi = OVi
    call iUr(lVi, $52656A32, B5r(21000.), "when calling put in CustomObjectIds, line 82")
    set Wk = lVi
    set Ek = l2s(Iji("A0AX", "when calling unObfuscate in CustomObjectIds, line 85"), "when calling fromRawCode in CustomObjectIds, line 85")
    set Zk = l2s(Iji("A0CF", "when calling unObfuscate in CustomObjectIds, line 87"), "when calling fromRawCode in CustomObjectIds, line 87")
    call l2s(Iji("A0C3", "when calling unObfuscate in CustomObjectIds, line 88"), "when calling fromRawCode in CustomObjectIds, line 88")
    set Uk = l2s(Iji("A050", "when calling unObfuscate in CustomObjectIds, line 89"), "when calling fromRawCode in CustomObjectIds, line 89")
    set Ik = l2s(Iji("A03H", "when calling unObfuscate in CustomObjectIds, line 90"), "when calling fromRawCode in CustomObjectIds, line 90")
    set Pk = l2s(Iji("A01A", "when calling unObfuscate in CustomObjectIds, line 91"), "when calling fromRawCode in CustomObjectIds, line 91")
    set Ak = l2s(Iji("A0DA", "when calling unObfuscate in CustomObjectIds, line 93"), "when calling fromRawCode in CustomObjectIds, line 93")
    set Dk = l2s(Iji("A0BP", "when calling unObfuscate in CustomObjectIds, line 95"), "when calling fromRawCode in CustomObjectIds, line 95")
    set Hk = l2s(Iji("A0BO", "when calling unObfuscate in CustomObjectIds, line 96"), "when calling fromRawCode in CustomObjectIds, line 96")
    set Jk = l2s(Iji("A0BN", "when calling unObfuscate in CustomObjectIds, line 97"), "when calling fromRawCode in CustomObjectIds, line 97")
    set Kk = l2s(Iji("A0BM", "when calling unObfuscate in CustomObjectIds, line 98"), "when calling fromRawCode in CustomObjectIds, line 98")
    set Lk = l2s(Iji("A082", "when calling unObfuscate in CustomObjectIds, line 100"), "when calling fromRawCode in CustomObjectIds, line 100")
    call l2s(Iji("A07S", "when calling unObfuscate in CustomObjectIds, line 102"), "when calling fromRawCode in CustomObjectIds, line 102")
    set Xk = l2s(Iji("A0C3", "when calling unObfuscate in CustomObjectIds, line 103"), "when calling fromRawCode in CustomObjectIds, line 103")
    set Ck = l2s(Iji("A0CN", "when calling unObfuscate in CustomObjectIds, line 105"), "when calling fromRawCode in CustomObjectIds, line 105")
    set Vk = l2s(Iji("A0CP", "when calling unObfuscate in CustomObjectIds, line 106"), "when calling fromRawCode in CustomObjectIds, line 106")
    set Bk = l2s(Iji("A07K", "when calling unObfuscate in CustomObjectIds, line 108"), "when calling fromRawCode in CustomObjectIds, line 108")
    call l2s(Iji("A07I", "when calling unObfuscate in CustomObjectIds, line 109"), "when calling fromRawCode in CustomObjectIds, line 109")
    set Nk = l2s(Iji("A04U", "when calling unObfuscate in CustomObjectIds, line 111"), "when calling fromRawCode in CustomObjectIds, line 111")
    set Mk = l2s(Iji("A0CW", "when calling unObfuscate in CustomObjectIds, line 112"), "when calling fromRawCode in CustomObjectIds, line 112")
    set wj = l2s(Iji("A02H", "when calling unObfuscate in CustomObjectIds, line 114"), "when calling fromRawCode in CustomObjectIds, line 114")
    set uj = l2s(Iji("A078", "when calling unObfuscate in CustomObjectIds, line 116"), "when calling fromRawCode in CustomObjectIds, line 116")
    set rj = l2s(Iji("A076", "when calling unObfuscate in CustomObjectIds, line 117"), "when calling fromRawCode in CustomObjectIds, line 117")
    set sj = l2s(Iji("A055", "when calling unObfuscate in CustomObjectIds, line 118"), "when calling fromRawCode in CustomObjectIds, line 118")
    set tj = l2s(Iji("A06Y", "when calling unObfuscate in CustomObjectIds, line 119"), "when calling fromRawCode in CustomObjectIds, line 119")
    call l2s(Iji("A04Z", "when calling unObfuscate in CustomObjectIds, line 120"), "when calling fromRawCode in CustomObjectIds, line 120")
    set ASw = ASw - 1
    return true
endfunction
function ePt takes nothing returns boolean
    set ASw = 0
    return bVi("via function reference CustomObjectIds, line 1")
endfunction
function R_u takes code f_u returns nothing
    call dUs(PJ, Condition(f_u))
endfunction
function WLw takes code QLw returns nothing
    call dUs(IJ, Condition(QLw))
endfunction
function egS takes string ygS returns integer
    local integer pgS
    set DSw[ASw] = ygS
    set ASw = ASw + 1
    if NX == 0 then
        if MX < 32768 then
            set MX = MX + 1
            set pgS = MX
            set wC[pgS] = 1093
        else
            call tNr("Out of memory: Could not create CallbackSingle_nullTimer_ClosureEvents.", "when calling error in ClosureEvents, line 292")
            set pgS = 0
        endif
    else
        set NX = NX - 1
        set pgS = BX[NX]
        set wC[pgS] = 1093
    endif
    set ASw = ASw - 1
    return pgS
endfunction
function D9r takes string P9r returns boolean
    local integer A9r
    set DSw[ASw] = P9r
    set ASw = ASw + 1
    set yh = ConvertPlayerEvent($00000060)
    set dh = jts("when calling new_HashMap in ClosureEvents, line 99")
    set fh = jts("when calling new_HashMap in ClosureEvents, line 100")
    set Yh = false
    set ph = CreateTrigger()
    set eh = CreateTrigger()
    set qh = CreateTrigger()
    set nh = 0
    call WLw(Pvw)
    call R_u(Avw)
    set A9r = egS("when calling alloc_CallbackSingle_nullTimer_ClosureEvents in ClosureEvents, line 292")
    call RUs(A9r)
    call ccr(A9r, "when calling nullTimer in ClosureEvents, line 292")
    set ASw = ASw - 1
    return true
endfunction
function eSs takes nothing returns boolean
    set ASw = 0
    return D9r("via function reference ClosureEvents, line 1")
endfunction
function eTs takes nothing returns nothing
    call ForceAddPlayer(Uo[$00000003], GetOwningPlayer(GetTriggerUnit()))
    call AdjustPlayerStateBJ(- 500, GetOwningPlayer(GetTriggerUnit()), PLAYER_STATE_RESOURCE_GOLD)
    call DisplayTextToForce(MwS(GetOwningPlayer(GetTriggerUnit())), "|cffff8c00Skypper|r : Great! Now show me the money and the fishing line is yours.")
    call DisplayTextToForce(MwS(GetOwningPlayer(GetTriggerUnit())), "|cffffcc00You've purchased a roll of Fishing Line.|r")
endfunction
function eUr takes nothing returns boolean
    return IsUnitType(GetTriggerUnit(), UNIT_TYPE_HERO) != false
endfunction
function eVi takes nothing returns boolean
    local trigger yVi = CreateTrigger()
    local trigger pVi
    call l2w(yVi, EVENT_PLAYER_UNIT_SPELL_CAST)
    set pVi = yVi
    call B2S(pVi, oEw)
    set yVi = null
    set pVi = null
    return true
endfunction
function Ljt takes nothing returns boolean
    return IsUnitGroupEmptyBJ(YS[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))])
endfunction
function vdu takes nothing returns boolean
    return IsUnitDeadBJ(gS[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))])
endfunction
function eXs takes nothing returns nothing
    set pS[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))] = GetTriggerUnit()
    call SetPlayerStateBJ(GetOwningPlayer(pS[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))]), PLAYER_STATE_RESOURCE_FOOD_USED, $00000000)
    set qS[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))] = GetUnitLoc(GetTriggerUnit())
    call PauseUnit(pS[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))], true)
    call SetUnitInvulnerable(pS[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))], true)
    set YS[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))] = UFS(700., qS[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))], Condition(hyw))
    call ForGroupBJ(YS[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))], Fyw)
    set nS[$00000001] = Shu(qS[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))], 600., 90.)
    set nS[$00000002] = Shu(qS[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))], 600., 160.)
    set nS[$00000003] = Shu(qS[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))], 600., 235.)
    set nS[$00000004] = Shu(qS[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))], 600., 305.)
    set nS[$00000005] = Shu(qS[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))], 600., 20.)
    call AddLightningLoc("DRAM", nS[$00000001], nS[$00000003])
    set dS[$00000001] = bj_lastCreatedLightning
    call AddLightningLoc("DRAM", nS[$00000005], nS[$00000003])
    set dS[$00000002] = bj_lastCreatedLightning
    call AddLightningLoc("DRAM", nS[$00000005], nS[$00000002])
    set dS[$00000003] = bj_lastCreatedLightning
    call AddLightningLoc("DRAM", nS[$00000002], nS[$00000004])
    set dS[$00000004] = bj_lastCreatedLightning
    call AddLightningLoc("DRAM", nS[$00000004], nS[$00000001])
    set dS[$00000005] = bj_lastCreatedLightning
    call AddLightningLoc("DRAM", nS[$00000001], nS[$00000003])
    set dS[$00000006] = bj_lastCreatedLightning
    call AddLightningLoc("DRAM", nS[$00000005], nS[$00000003])
    set dS[$00000007] = bj_lastCreatedLightning
    call AddLightningLoc("DRAM", nS[$00000005], nS[$00000002])
    set dS[$00000008] = bj_lastCreatedLightning
    call AddLightningLoc("DRAM", nS[$00000002], nS[$00000004])
    set dS[$00000009] = bj_lastCreatedLightning
    call AddLightningLoc("DRAM", nS[$00000004], nS[$00000001])
    set dS[$0000000A] = bj_lastCreatedLightning
    call n6t(.5)
    call AddSpecialEffectLocBJ(qS[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))], "Abilities\\Spells\\Orc\\WarStomp\\WarStompCaster.mdl")
    call DestroyEffect(bj_lastCreatedEffect)
    call CreateTextTagUnitBJ("LIMIT BREAK!!!", pS[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))], 0., 15., 100., .0, .0, 0.)
    set fS[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))] = bj_lastCreatedTextTag
    call n6t(2.5)
    set Cc = 1
    loop
        exitwhen Cc > 10
        call DestroyLightning(dS[Cc])
        set Cc = Cc + 1
    endloop
    call DestroyTextTag(fS[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))])
    call n6t(.2)
    call CreateTextTagUnitBJ("SPEED FREAK!!!", pS[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))], 0., 15., 100., .0, .0, 0.)
    call SetTextTagVelocityBJ(bj_lastCreatedTextTag, 64., 90.)
    call SetTextTagPermanentBJ(bj_lastCreatedTextTag, false)
    call SetTextTagFadepointBJ(bj_lastCreatedTextTag, 1.5)
    call SetTextTagLifespanBJ(bj_lastCreatedTextTag, 3.)
    call PlaySoundBJ(he)
    call n6t(1.2)
    set go = 1
    loop
        exitwhen go > 18
        if Ljt() then
            call SetUnitPositionLoc(pS[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))], qS[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))])
            call PauseUnit(pS[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))], false)
            call SetUnitInvulnerable(pS[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))], false)
            call IssueImmediateOrderById(pS[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))], $000D0004)
            call ResetUnitAnimation(pS[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))])
            call RemoveLocation(qS[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))])
            call DestroyGroup(YS[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))])
            return
        endif
        call TriggerSleepAction(.05)
        set gS[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))] = GroupPickRandomUnit(YS[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))])
        call GetPlayerId(GetOwningPlayer(GetTriggerUnit()))
        call GetOwningPlayer(gS[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))])
        set GS[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))] = GetUnitLoc(gS[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))])
        call SetUnitPositionLoc(pS[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))], GS[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))])
        call SetUnitAnimation(pS[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))], "attack")
        call SetUnitInvulnerable(gS[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))], false)
        call AddSpecialEffectLocBJ(GetUnitLoc(gS[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))]), "Abilities\\Spells\\Other\\Stampede\\StampedeMissileDeath.mdl")
        call DestroyEffect(bj_lastCreatedEffect)
        call UnitDamageTargetBJ(pS[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))], gS[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))], 5000., ATTACK_TYPE_CHAOS, DAMAGE_TYPE_ENHANCED)
        if vdu() then
            call GroupRemoveUnit(YS[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))], gS[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))])
        else
            call SetUnitInvulnerable(gS[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))], true)
        endif
        call RemoveLocation(GS[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))])
        set go = go + 1
    endloop
    call n6t(.1)
    call ForGroupBJ(YS[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))], kyw)
    call SetUnitPositionLoc(pS[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))], qS[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))])
    call PauseUnit(pS[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))], false)
    call SetUnitInvulnerable(pS[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))], false)
    call IssueImmediateOrderById(pS[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))], $000D0004)
    call ResetUnitAnimation(pS[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))])
    call RemoveLocation(qS[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))])
    call DestroyGroup(YS[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))])
endfunction
function L0u takes string I0u returns boolean
    local trigger P0u
    local trigger A0u
    local trigger D0u
    local trigger H0u
    local trigger J0u
    local trigger K0u
    set DSw[ASw] = I0u
    set ASw = ASw + 1
    set UH = jts("when calling new_HashMap in Spells_Checks, line 13")
    set P0u = CreateTrigger()
    call l2w(P0u, EVENT_PLAYER_UNIT_SPELL_CAST)
    set A0u = P0u
    call B2S(A0u, dEw)
    set D0u = CreateTrigger()
    call l2w(D0u, EVENT_PLAYER_UNIT_SPELL_EFFECT)
    set H0u = D0u
    call B2S(H0u, fEw)
    set J0u = CreateTrigger()
    call l2w(J0u, EVENT_PLAYER_UNIT_SPELL_EFFECT)
    set K0u = J0u
    call B2S(K0u, REw)
    set ASw = ASw - 1
    set P0u = null
    set A0u = null
    set D0u = null
    set H0u = null
    set J0u = null
    set K0u = null
    return true
endfunction
function eXu takes nothing returns boolean
    set ASw = 0
    return L0u("via function reference Spells_Checks, line 1")
endfunction
function Bni takes nothing returns boolean
    return sc[1 + GetPlayerId(GetOwningPlayer(GetKillingUnit()))] == 1
endfunction
function NDs takes nothing returns boolean
    return sc[1 + GetPlayerId(GetOwningPlayer(GetKillingUnit()))] > 1
endfunction
function ect takes nothing returns nothing
    set sc[1 + GetPlayerId(GetOwningPlayer(GetKillingUnit()))] = sc[1 + GetPlayerId(GetOwningPlayer(GetKillingUnit()))] + 1
    if Bni() then
        call QuestMessageBJ(MwS(GetOwningPlayer(GetKillingUnit())), $00000002, "|cffffcc00Armoured Pride|r Quest Requirement Completed.")
        call DisplayTimedTextToForce(MwS(GetOwningPlayer(GetKillingUnit())), 5., "I have destroyed the leader of the goblins. Time to report back to Arnold.")
    endif
    if NDs() then
        call DisplayTimedTextToForce(MwS(GetOwningPlayer(GetKillingUnit())), 5., "|cffffcc00Armoured Pride|r Quest Requirement has already been completed.")
    endif
endfunction
function XEu takes nothing returns boolean
    return IsUnitType(GetFilterUnit(), UNIT_TYPE_HERO) == false
endfunction
function uqi takes nothing returns boolean
    return IsUnitAliveBJ(GetFilterUnit())
endfunction
function pEs takes nothing returns boolean
    return GetBooleanAnd(uqi(), XEu())
endfunction
function tOt takes nothing returns boolean
    return IsUnitEnemy(GetFilterUnit(), GetOwningPlayer(pS[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))]))
endfunction
function edi takes nothing returns boolean
    return GetBooleanAnd(pEs(), tOt())
endfunction
function eht takes nothing returns boolean
    local trigger bht
    local trigger yht
    local trigger pht
    set EX = 10.0
    set bht = CreateTrigger()
    call B2S(bht, HEw)
    set yht = bht
    call dUs(yht, Condition(JEw))
    set pht = yht
    call l2w(pht, EVENT_PLAYER_UNIT_SPELL_EFFECT)
    set bht = null
    set yht = null
    set pht = null
    return true
endfunction
function ehu takes nothing returns nothing
    call RemoveUnit(GetEnumUnit())
endfunction
function eri takes nothing returns nothing
    call ForceRemovePlayer(nr, GetOwningPlayer(GetTriggerUnit()))
    call ForceRemovePlayer(Fr, GetOwningPlayer(GetTriggerUnit()))
    call ForceRemovePlayer(fr, GetOwningPlayer(GetTriggerUnit()))
    set hr[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))] = 0
    set gr[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))] = 0
    call DisplayTextToForce(MwS(GetOwningPlayer(GetTriggerUnit())), "|cffffcc00Class Trainer|r : |cff87ceebThat was a spectacular hunt! I didn't expect you to find them...and so deftly done as well! Very well, archer. You have proven your mantle and skill in hunting. From now onwards, you shall be a Hunter, and be part of the Hunters' Guild. I hope we meet again.")
    call PlaySoundBJ(re)
    call DestroyQuest(dr[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))])
    call SetHeroLevelBJ(GetTriggerUnit(), $00000001, false)
    call ReplaceUnitBJ(GetTriggerUnit(), $48303047, $00000002)
    call SelectUnitForPlayerSingle(bj_lastReplacedUnit, GetOwningPlayer(GetTriggerUnit()))
    call SetHeroLevel(bj_lastReplacedUnit, $00000001, true)
    call UnitStripHeroLevel(bj_lastReplacedUnit, $00000001)
endfunction
function ARt takes string ZRt returns nothing
    local unit URt
    local player IRt
    local integer PRt
    set DSw[ASw] = ZRt
    set ASw = ASw + 1
    set URt = GetTriggerUnit()
    set IRt = eDs(URt)
    set PRt = hgr(IRt)
    if IRt == GetTriggerPlayer() and t_u(URt) then
        call L5r(xMi(xus(PRt, "when calling getCustomPlayer in PlayerCommands, line 180"), "when calling getCHero in PlayerCommands, line 180"), URt, "when calling replaceHeroUnit in PlayerCommands, line 180")
    endif
    set ASw = ASw - 1
    set URt = null
    set IRt = null
endfunction
function ert takes nothing returns nothing
    set ASw = 0
    call ARt("via function reference PlayerCommands, line 289")
endfunction
function jdr takes string kdr returns nothing
    set DSw[ASw] = kdr
    set ASw = ASw + 1
    call FDt(Iji("A Player tried to save using built-in saving. Always find the newest version at Official Teve Discord |cff00FF00discord.tever.xyz|r", "when calling unObfuscate in EffectCleaner, line 129"))
    set ASw = ASw - 1
endfunction
function ett takes nothing returns nothing
    set ASw = 0
    call jdr("via function reference EffectCleaner, line 154")
endfunction
function exi takes nothing returns nothing
    call ForceAddPlayer(rt, GetOwningPlayer(GetTriggerUnit()))
    call DisplayTextToForce(MwS(GetOwningPlayer(GetTriggerUnit())), "|cffffcc00Morden Tor|r : |cff87ceebAh, you have come to learn the final styles of the witcher's blade then? Learning the styles is not the hard part - the hard part is to tune yourself with the blade. Go to Mount Twilight south of here and kill 80 ogres. Only then shall you receive any training.")
    call PlaySoundBJ(Se)
    call T_i(GetOwningPlayer(GetTriggerUnit()), $00000000, "4th Job Advancement Quest", "I have to kill 80 Ogres.", "ReplaceableTextures\\PassiveButtons\\PASBTNGenericSpellImmunity.blp")
    set st[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))] = bj_lastCreatedQuest
    set kt[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))] = 0
endfunction
function f0u takes nothing returns nothing
    call SetUnitPositionLoc(GetEnumUnit(), br[1 + GetPlayerId(GetOwningPlayer(GetEnumUnit()))])
endfunction
function s7w takes string r7w returns boolean
    set DSw[ASw] = r7w
    set ASw = ASw + 1
    set FP = jts("when calling new_HashMap in LocationRegistry, line 17")
    set kP =- 1
    set ASw = ASw - 1
    return true
endfunction
function f1i takes nothing returns boolean
    set ASw = 0
    return s7w("via function reference LocationRegistry, line 12")
endfunction
function UTr takes string ETr returns boolean
    local boolean ZTr
    set DSw[ASw] = ETr
    set ASw = ASw + 1
    set ZTr = (IsPlayerInForce(GetOwningPlayer(GetEventDamageSource()), do) == false and IsUnitInGroup(GetEventDamageSource(), fo) == false and UnitHasItemOfTypeBJ(GetEventDamageSource(), l2s(Iji("I04O", "when calling unObfuscate in Reinforce_Effect, line 16"), "when calling fromRawCode in Reinforce_Effect, line 16")) and IsUnitType(GetTriggerUnit(), UNIT_TYPE_STRUCTURE) == false) != false
    set ASw = ASw - 1
    return ZTr
endfunction
function f4i takes nothing returns boolean
    set ASw = 0
    return UTr("via function reference Reinforce_Effect, line 202")
endfunction
function f4s takes nothing returns boolean
    set JG = 0.017453293
    set KG = 57.295779513
    return true
endfunction
function RIr takes string qIr returns nothing
    local unit aIr
    local integer nIr
    local player dIr
    local integer fIr
    set DSw[ASw] = qIr
    set ASw = ASw + 1
    set aIr = GetTriggerUnit()
    if aIr != null then
        set nIr = r5S(aIr)
        set dIr = eDs(aIr)
        set fIr = hgr(dIr)
        if GpS(gQ, fIr, "when calling has in JobAdvancementQuestHandler, line 1113") and nIr == l2s(Iji("U000", "when calling unObfuscate in JobAdvancementQuestHandler, line 1114"), "when calling fromRawCode in JobAdvancementQuestHandler, line 1114") or nIr == l2s(Iji("U001", "when calling unObfuscate in JobAdvancementQuestHandler, line 1114"), "when calling fromRawCode in JobAdvancementQuestHandler, line 1114") or nIr == l2s(Iji("U003", "when calling unObfuscate in JobAdvancementQuestHandler, line 1114"), "when calling fromRawCode in JobAdvancementQuestHandler, line 1114") or nIr == l2s(Iji("U002", "when calling unObfuscate in JobAdvancementQuestHandler, line 1114"), "when calling fromRawCode in JobAdvancementQuestHandler, line 1114") or nIr == l2s(Iji("U004", "when calling unObfuscate in JobAdvancementQuestHandler, line 1114"), "when calling fromRawCode in JobAdvancementQuestHandler, line 1114") or nIr == l2s(Iji("U006", "when calling unObfuscate in JobAdvancementQuestHandler, line 1114"), "when calling fromRawCode in JobAdvancementQuestHandler, line 1114") or nIr == l2s(Iji("U009", "when calling unObfuscate in JobAdvancementQuestHandler, line 1114"), "when calling fromRawCode in JobAdvancementQuestHandler, line 1114") or nIr == l2s(Iji("U007", "when calling unObfuscate in JobAdvancementQuestHandler, line 1114"), "when calling fromRawCode in JobAdvancementQuestHandler, line 1114") or nIr == l2s(Iji("U00A", "when calling unObfuscate in JobAdvancementQuestHandler, line 1114"), "when calling fromRawCode in JobAdvancementQuestHandler, line 1114") or nIr == l2s(Iji("U00B", "when calling unObfuscate in JobAdvancementQuestHandler, line 1114"), "when calling fromRawCode in JobAdvancementQuestHandler, line 1114") or nIr == l2s(Iji("U00C", "when calling unObfuscate in JobAdvancementQuestHandler, line 1114"), "when calling fromRawCode in JobAdvancementQuestHandler, line 1114") or nIr == l2s(Iji("U00E", "when calling unObfuscate in JobAdvancementQuestHandler, line 1114"), "when calling fromRawCode in JobAdvancementQuestHandler, line 1114") or nIr == l2s(Iji("U00G", "when calling unObfuscate in JobAdvancementQuestHandler, line 1114"), "when calling fromRawCode in JobAdvancementQuestHandler, line 1114") or nIr == l2s(Iji("U00F", "when calling unObfuscate in JobAdvancementQuestHandler, line 1114"), "when calling fromRawCode in JobAdvancementQuestHandler, line 1114") or nIr == l2s(Iji("U00H", "when calling unObfuscate in JobAdvancementQuestHandler, line 1114"), "when calling fromRawCode in JobAdvancementQuestHandler, line 1114") or nIr == l2s(Iji("U00I", "when calling unObfuscate in JobAdvancementQuestHandler, line 1114"), "when calling fromRawCode in JobAdvancementQuestHandler, line 1114") or nIr == l2s(Iji("h04J", "when calling unObfuscate in JobAdvancementQuestHandler, line 1114"), "when calling fromRawCode in JobAdvancementQuestHandler, line 1114") or nIr == l2s(Iji("h04I", "when calling unObfuscate in JobAdvancementQuestHandler, line 1114"), "when calling fromRawCode in JobAdvancementQuestHandler, line 1114") or nIr == l2s(Iji("U00L", "when calling unObfuscate in JobAdvancementQuestHandler, line 1114"), "when calling fromRawCode in JobAdvancementQuestHandler, line 1114") or nIr == l2s(Iji("U00M", "when calling unObfuscate in JobAdvancementQuestHandler, line 1114"), "when calling fromRawCode in JobAdvancementQuestHandler, line 1114") or nIr == l2s(Iji("U00J", "when calling unObfuscate in JobAdvancementQuestHandler, line 1114"), "when calling fromRawCode in JobAdvancementQuestHandler, line 1114") or nIr == l2s(Iji("U00K", "when calling unObfuscate in JobAdvancementQuestHandler, line 1114"), "when calling fromRawCode in JobAdvancementQuestHandler, line 1114") or nIr == l2s(Iji("U00N", "when calling unObfuscate in JobAdvancementQuestHandler, line 1114"), "when calling fromRawCode in JobAdvancementQuestHandler, line 1114") or nIr == l2s(Iji("U00O", "when calling unObfuscate in JobAdvancementQuestHandler, line 1114"), "when calling fromRawCode in JobAdvancementQuestHandler, line 1114") or nIr == l2s(Iji("U00Q", "when calling unObfuscate in JobAdvancementQuestHandler, line 1114"), "when calling fromRawCode in JobAdvancementQuestHandler, line 1114") or nIr == l2s(Iji("U00R", "when calling unObfuscate in JobAdvancementQuestHandler, line 1114"), "when calling fromRawCode in JobAdvancementQuestHandler, line 1114") then
            call V5S(aIr, l2s(Iji("Aloc", "when calling unObfuscate in JobAdvancementQuestHandler, line 1115"), "when calling fromRawCode in JobAdvancementQuestHandler, line 1115"))
        endif
    endif
    set ASw = ASw - 1
    set aIr = null
    set dIr = null
endfunction
function f4w takes nothing returns nothing
    set ASw = 0
    call RIr("via function reference JobAdvancementQuestHandler, line 1107")
endfunction
function TBw takes string fBw returns nothing
    local real RBw
    set DSw[ASw] = fBw
    set ASw = ASw + 1
    set RBw = dMw(wps(KW, Ici(Pl), "when calling get in Imp3DragonFortress, line 453"))
    call GVw(KW, Ici(Pl), B5r(RBw + 1.), "when calling put in Imp3DragonFortress, line 454")
    call sIr(Pl, RBw, "when calling imp3MazeCheckTimeout in Imp3DragonFortress, line 455")
    set ASw = ASw - 1
endfunction
function f5w takes nothing returns nothing
    set ASw = 0
    call TBw("via function reference Imp3DragonFortress, line 510")
endfunction
function vur takes nothing returns boolean
    return IsPlayerInForce(GetOwningPlayer(GetTriggerUnit()), dc[$00000001]) == false
endfunction
function fAi takes nothing returns nothing
    if vur() then
        call DisplayTimedTextToForce(MwS(GetOwningPlayer(GetOrderedUnit())), 30., "|cffffcc00Wizard Hannah|r : What? It's Squeaky again? He is giving us a lot of problems lately; I'm sorry to see such a kind stranger being pulled into his troubles. Our previous deliveryman retired already and we had never hired a new one since. Our supply cart were sent to Squeaky by the use of magic. I believe I've told Squeaky this, but it looks like the message went into his stomach instead of his head. Perhaps our retired deliveryman could help you in your investigation? He currently lives in the City of New Lights.")
        call QuestSetDescription(JS[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))], "Hmm.. This is getting suspicious... My bet now is to find the retired deliveryman. However, Wizard Hannah did not provide me with his name. This is inconvenient.\nLooks like I have to ask around.")
        call DisplayTimedTextToForce(MwS(GetOwningPlayer(GetOrderedUnit())), 5., "|cffff0000Quest Log has been updated. Please check Quests[F9] for more details.|r")
        call ForceAddPlayer(dc[$00000001], GetOwningPlayer(GetTriggerUnit()))
    else
        call DisplayTimedTextToForce(MwS(GetOwningPlayer(GetOrderedUnit())), 5., "|cffffcc00Wizard Hannah|r : I hope you solve Squeaky's problems.")
    endif
endfunction
function fAr takes nothing returns nothing
    call SetUnitLifePercentBJ(GetEnumUnit(), 100.)
endfunction
function QhS takes nothing returns boolean
    return IsUnitAliveBJ(GetEnumUnit())
endfunction
function fAu takes nothing returns nothing
    call SetUnitInvulnerable(GetEnumUnit(), false)
    call UnitDamageTargetBJ(pS[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))], GetEnumUnit(), 10000., ATTACK_TYPE_CHAOS, DAMAGE_TYPE_ENHANCED)
    if QhS() then
        call SetUnitInvulnerable(GetEnumUnit(), true)
    endif
endfunction
function SQu takes nothing returns boolean
    return ur[1 + GetPlayerId(GetOwningPlayer(GetKillingUnit()))] >= 5
endfunction
function fDi takes nothing returns nothing
    set ur[1 + GetPlayerId(GetOwningPlayer(GetKillingUnit()))] = ur[1 + GetPlayerId(GetOwningPlayer(GetKillingUnit()))] + 1
    if SQu() then
        call QuestMessageBJ(MwS(GetOwningPlayer(GetKillingUnit())), $00000002, "|cffffcc00Ridding the Satyrs|r Quest Requirement Completed.")
    else
        call QuestMessageBJ(MwS(GetOwningPlayer(GetKillingUnit())), $00000001, I2S(ur[1 + GetPlayerId(GetOwningPlayer(GetKillingUnit()))]) + " Satyr(s) killed.")
    endif
endfunction
function Bpi takes string Cpi returns integer
    local integer Vpi
    set DSw[ASw] = Cpi
    set ASw = ASw + 1
    if NX == 0 then
        if MX < 32768 then
            set MX = MX + 1
            set Vpi = MX
            set wC[Vpi] = 1043
        else
            call tNr("Out of memory: Could not create CallbackSingle_doAfter_addAction_doAfter_NpcTalking.", "when calling error in NpcTalking, line 276")
            set Vpi = 0
        endif
    else
        set NX = NX - 1
        set Vpi = BX[NX]
        set wC[Vpi] = 1043
    endif
    set ASw = ASw - 1
    return Vpi
endfunction
function E4w takes string Q4w returns integer
    local integer W4w
    set DSw[ASw] = Q4w
    set ASw = ASw + 1
    if NX == 0 then
        if MX < 32768 then
            set MX = MX + 1
            set W4w = MX
            set wC[W4w] = 1044
        else
            call tNr("Out of memory: Could not create CallbackSingle_doAfter_addAction_doAfter_NpcTalking.", "when calling error in NpcTalking, line 280")
            set W4w = 0
        endif
    else
        set NX = NX - 1
        set W4w = BX[NX]
        set wC[W4w] = 1044
    endif
    set ASw = ASw - 1
    return W4w
endfunction
function K1r takes integer I1r, string P1r returns nothing
    local integer A1r
    local integer D1r
    local integer H1r
    local integer J1r
    set DSw[ASw] = P1r
    set ASw = ASw + 1
    set D1r = Hv
    set H1r = I1r
    set J1r = MaS(wps(Hv, I1r, "when calling get in FateDestinyUnlocker, line 170"), yQ)
    set A1r = J1r
    call GVw(D1r, H1r, A1r, "when calling put in FateDestinyUnlocker, line 170")
    call wrS(I1r, "when calling checkDestinyReached in FateDestinyUnlocker, line 173")
    set ASw = ASw - 1
endfunction
function QVt takes real jVt, real xVt, real vVt, real mVt returns real
    set fcw = Atan2(mVt - xVt, vVt - jVt)
    return fcw
endfunction
function ebS takes effect ybS, real pbS returns nothing
    call BlzSetSpecialEffectPitch(ybS, Mri(pbS))
endfunction
function res takes string wes returns integer
    local integer ues
    set DSw[ASw] = wes
    set ASw = ASw + 1
    if NX == 0 then
        if MX < 32768 then
            set MX = MX + 1
            set ues = MX
            set wC[ues] = 1042
        else
            call tNr("Out of memory: Could not create CallbackSingle_doAfter_addAction_doAfter_NpcTalking.", "when calling error in NpcTalking, line 263")
            set ues = 0
        endif
    else
        set NX = NX - 1
        set ues = BX[NX]
        set wC[ues] = 1042
    endif
    set ASw = ASw - 1
    return ues
endfunction
function wit takes real Itt, real Ptt, real Att, string Dtt, real Htt, integer Jtt, integer Ktt, integer Ltt, integer Xtt, string Ctt returns integer
    local real Vtt
    local real Btt
    local real Ntt
    local integer Mtt
    set DSw[ASw] = Ctt
    set ASw = ASw + 1
    set Vtt = 200.0
    set Btt = 5.5 * Htt
    set Ntt = RMinBJ(StringLength(Dtt) * Btt, Vtt)
    set Mtt = ADi(Itt - Ntt, Ptt, Att, 0., 0., 0., Dtt, Htt, 0., Jtt, Ktt, Ltt, Xtt, "when calling new_TextTagEntity in TextTagExtensions, line 36")
    set ASw = ASw - 1
    return Mtt
endfunction
function l4t takes string B1t returns nothing
    local unit N1t
    local player M1t
    local integer w4t
    local integer u4t
    local real r4t
    local real s4t
    local effect t4t
    local integer i4t
    local integer S4t
    local integer c4t
    local real o4t
    local real O4t
    set DSw[ASw] = B1t
    set ASw = ASw + 1
    set N1t = GetTriggerUnit()
    set M1t = eDs(N1t)
    set w4t = hgr(M1t)
    if GpS(gQ, w4t, "when calling has in NpcTalking, line 261") and(not ONi(Xt, M1t)) and(not JA) then
        set JA = true
        set u4t = res("when calling alloc_CallbackSingle_doAfter_addAction_doAfter_NpcTalking in NpcTalking, line 263")
        call RUs(u4t)
        call Ybr(30., u4t, "when calling doAfter in NpcTalking, line 263")
        set o4t = 416.
        set O4t =- 11016.
        set r4t = o4t
        set s4t = O4t
        set t4t = uSs(r4t, s4t, Iji("war3mapImported\DevAlex.mdl", "when calling unObfuscate in NpcTalking, line 267"))
        call ebS(t4t, QVt(r4t, s4t, ANw(N1t), XSw))
        call Y8w(t4t, ANIM_TYPE_ATTACK)
        call Tri(N1t)
        call K1r(w4t, "when calling onDestinyFinishKilledByDevAlex in NpcTalking, line 273")
        set i4t = wit(r4t, s4t, 100., Iji("No reason for you to sneak around here!", "when calling unObfuscate in NpcTalking, line 274"), 12., $000000AF, $00000032, $00000032, $000000FF, "when calling _CreateTTExEntityShift in NpcTalking, line 274")
        set S4t = Bpi("when calling alloc_CallbackSingle_doAfter_addAction_doAfter_NpcTalking in NpcTalking, line 276")
        call RUs(S4t)
        set Euw[S4t] = t4t
        set Zuw[S4t] = M1t
        call Ybr(2.666, S4t, "when calling doAfter in NpcTalking, line 276")
        set c4t = E4w("when calling alloc_CallbackSingle_doAfter_addAction_doAfter_NpcTalking in NpcTalking, line 280")
        call RUs(c4t)
        set Uuw[c4t] = i4t
        set Iuw[c4t] = t4t
        call Ybr(5., c4t, "when calling doAfter in NpcTalking, line 280")
    endif
    set ASw = ASw - 1
    set N1t = null
    set M1t = null
    set t4t = null
endfunction
function fDr takes nothing returns nothing
    set ASw = 0
    call l4t("via function reference NpcTalking, line 256")
endfunction
function DEs takes string PEs returns integer
    local integer AEs
    set DSw[ASw] = PEs
    set ASw = ASw + 1
    if pB == 0 then
        if eB < 32768 then
            set eB = eB + 1
            set AEs = eB
        else
            call tNr("Out of memory: Could not create BackIterator.", "when calling error in LinkedListModule, line 93")
            set AEs = 0
        endif
    else
        set pB = pB - 1
        set AEs = yB[pB]
    endif
    set ASw = ASw - 1
    return AEs
endfunction
function V8S takes integer C8S returns nothing
endfunction
function PrS takes integer UrS, boolean IrS returns nothing
    call V8S(UrS)
endfunction
function rdS takes boolean MnS, string wdS returns integer
    local integer udS
    set DSw[ASw] = wdS
    set ASw = ASw + 1
    set udS = DEs("when calling alloc_BackIterator in LinkedListModule, line 97")
    call PrS(udS, MnS)
    set ASw = ASw - 1
    return udS
endfunction
function WOr takes string QOr returns boolean
    set DSw[ASw] = QOr
    set ASw = ASw + 1
    set vv = XQt("when calling new_LinkedList in FText, line 33")
    set mv = 0
    set Qv = 0
    set Wv = 0
    call LWu(false, "when calling new_Iterator in LinkedListModule, line 55")
    call rdS(false, "when calling new_BackIterator in LinkedListModule, line 65")
    set ASw = ASw - 1
    return true
endfunction
function fHs takes nothing returns boolean
    set ASw = 0
    return WOr("via function reference FText, line 1")
endfunction
function mPs takes code vPs returns nothing
    call B2S(VA, vPs)
endfunction
function mZi takes code vZi returns nothing
    call dUs(VA, Filter(vZi))
endfunction
function fOr takes nothing returns boolean
    set IJ = CreateTrigger()
    set PJ = CreateTrigger()
    set DJ = 0
    call mZi(mEw)
    call mPs(QEw)
    return true
endfunction
function m9S takes nothing returns boolean
    return IsPlayerInForce(GetOwningPlayer(GetTriggerUnit()), lt) or IsPlayerInForce(GetOwningPlayer(GetTriggerUnit()), Ns) or IsPlayerInForce(GetOwningPlayer(GetTriggerUnit()), At)
endfunction
function fPw takes nothing returns boolean
    return GetSpellAbilityId() == 1093678153 and m9S()
endfunction
function fSs takes nothing returns nothing
    call ForceRemovePlayer(Rt, GetOwningPlayer(GetTriggerUnit()))
    call ForceRemovePlayer(IS[$00000008], GetOwningPlayer(GetTriggerUnit()))
    call ForceAddPlayer(PS[$00000008], GetOwningPlayer(GetTriggerUnit()))
    call DestroyQuest(ft[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))])
    set ft[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))] = null
    call PlaySoundBJ(pe)
    call DisplayTimedTextToForce(MwS(GetOwningPlayer(GetOrderedUnit())), 5., "|cffffcc00You have completed the Quest|r.")
    call AddHeroXPSwapped(R, GetTriggerUnit(), true)
    call AdjustPlayerStateBJ($00002710, GetOwningPlayer(GetTriggerUnit()), PLAYER_STATE_RESOURCE_GOLD)
    set tw[(1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))) * 1000 + fkS(GetTriggerUnit())] = true
endfunction
function uyS takes nothing returns nothing
    call ForceRemovePlayer(Yr, GetOwningPlayer(GetTriggerUnit()))
    call ForceAddPlayer(Gr, GetOwningPlayer(GetTriggerUnit()))
    call DisplayTextToForce(MwS(GetOwningPlayer(GetTriggerUnit())), "|cffffcc00Skypper|r : |cff87ceebHmm, back already? Must be tiring for you to run up and down, heh. Anyways, you've done what I asked. Tell the Father that you have \"done the Highfather's will\", as proof of the deed.")
    call QuestSetDescription(dr[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))], "I should go back to the Father, so I can advance my class.")
endfunction
function fTt takes nothing returns nothing
    local unit qTt = GetTriggerUnit()
    local integer aTt = r5S(qTt)
    local player nTt
    local integer dTt
    if aTt == 1211117637 or aTt == 1211117638 or aTt == 1211117620 or aTt == 1211117623 then
        set nTt = eDs(qTt)
        set dTt = hgr(nTt)
        if IsPlayerInForce(nTt, kr) then
            call QHs()
        endif
        if IsPlayerInForce(nTt, Yr) then
            call uyS()
        endif
        if IsPlayerInForce(nTt, js) and vs[1 + dTt] == 3 then
            call Qls()
        endif
    endif
    set qTt = null
    set nTt = null
endfunction
function fVt takes nothing returns nothing
    set uO = Player($00000009)
    call TriggerExecute(OY)
endfunction
function n0S takes nothing returns boolean
    return IsUnitType(GetFilterUnit(), UNIT_TYPE_STRUCTURE) == false
endfunction
function qct takes nothing returns boolean
    return IsUnitEnemy(GetFilterUnit(), GetOwningPlayer(GetTriggerUnit()))
endfunction
function fYt takes nothing returns boolean
    return GetBooleanAnd(n0S(), qct())
endfunction
function fZu takes nothing returns nothing
    call UnitRemoveAbility(GetEnumUnit(), $42303137)
    call SetUnitInvulnerable(GetEnumUnit(), false)
    call PauseUnit(GetEnumUnit(), false)
endfunction
function fbS takes nothing returns boolean
    return (GetItemTypeId(GetManipulatedItem()) == 1227895106 and IsUnitType(GetTriggerUnit(), UNIT_TYPE_HERO) and GetHeroLevel(GetTriggerUnit()) >= 30 and IsPlayerInForce(GetOwningPlayer(GetTriggerUnit()), IS[$00000006]) == false and IsPlayerInForce(GetOwningPlayer(GetTriggerUnit()), PS[$00000006]) == false and sw[(1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))) * 1000 + fkS(GetTriggerUnit())] == false) != false
endfunction
function fcs takes nothing returns boolean
    return GetUnitTypeId(GetDyingUnit()) == 1429221430 and GetUnitTypeId(GetKillingUnit()) == 1211117877 and IsPlayerInForce(GetOwningPlayer(GetKillingUnit()), rt) and(not IsPlayerInForce(GetOwningPlayer(GetKillingUnit()), Ft))
endfunction
function YIt takes string RIt returns integer
    local integer TIt
    set DSw[ASw] = RIt
    set ASw = ASw + 1
    if NX == 0 then
        if MX < 32768 then
            set MX = MX + 1
            set TIt = MX
            set wC[TIt] = 832
        else
            call tNr("Out of memory: Could not create CallbackSingle_doAfter_Imp1_InitCooldown.", "when calling error in Imp1_InitCooldown, line 18")
            set TIt = 0
        endif
    else
        set NX = NX - 1
        set TIt = BX[NX]
        set wC[TIt] = 832
    endif
    set ASw = ASw - 1
    return TIt
endfunction
function Miu takes string Xiu returns nothing
    local group Ciu
    local group Viu
    local unit Biu
    local integer Niu
    set DSw[ASw] = Xiu
    set ASw = ASw + 1
    call UOS($00000001, "when calling getGroup in Imp1_InitCooldown, line 13")
    set Ciu = pIw
    call GroupEnumUnitsOfPlayer(Ciu, ew, Condition(Zmw))
    set Viu = XbS(Ciu)
    loop
        exitwhen not hJw(Viu)
        set Biu = tPr(Viu)
        call RIu(Biu, l2s(Iji("A05R", "when calling unObfuscate in Imp1_InitCooldown, line 17"), "when calling fromRawCode in Imp1_InitCooldown, line 17"), true, false)
        set Niu = YIt("when calling alloc_CallbackSingle_doAfter_Imp1_InitCooldown in Imp1_InitCooldown, line 18")
        call RUs(Niu)
        set j8[Niu] = Biu
        call Ybr(3., Niu, "when calling doAfter in Imp1_InitCooldown, line 18")
    endloop
    call lxs(Viu)
    set ASw = ASw - 1
    set Ciu = null
    set Viu = null
    set Biu = null
endfunction
function fdS takes nothing returns nothing
    set ASw = 0
    call Miu("via function reference Imp1_InitCooldown, line 25")
endfunction
function fgS takes nothing returns boolean
    return (GetItemTypeId(GetManipulatedItem()) == 1227895351 and IsUnitType(GetTriggerUnit(), UNIT_TYPE_HERO) and GetHeroLevel(GetTriggerUnit()) >= 90 and IsPlayerInForce(GetOwningPlayer(GetTriggerUnit()), IS[$0000000A]) == false) != false
endfunction
function fii takes nothing returns nothing
    call DisableTrigger(GetTriggeringTrigger())
endfunction
function fiu takes nothing returns boolean
    local integer diu = GetSpellAbilityId()
    return diu == Fk or diu == kk or diu == vk or diu == mk
endfunction
function fks takes nothing returns boolean
    return (xo == 3 and IsUnitType(GetTriggerUnit(), UNIT_TYPE_HERO)) != false
endfunction
function KgS takes nothing returns boolean
    return IsPlayerInForce(GetOwningPlayer(GetTriggerUnit()), Ot) and IsPlayerInForce(GetOwningPlayer(GetTriggerUnit()), ot) == false
endfunction
function fkt takes nothing returns nothing
    call ForceRemovePlayer(Ns, GetOwningPlayer(GetTriggerUnit()))
    call DisplayTimedTextToForce(MwS(GetOwningPlayer(GetTriggerUnit())), 4., "Entering the |cffffcc00Unknown Regions...|r")
    set at = GetRectCenter(Op)
    call SetUnitPositionLoc(GetTriggerUnit(), at)
    call PanCameraToTimedLocForPlayer(GetOwningPlayer(GetTriggerUnit()), at, 0.)
    call TriggerExecute(MT)
    if KgS() then
        call ForceAddPlayer(ot, GetOwningPlayer(GetTriggerUnit()))
    endif
    set eO = EXt(Cl, Condition(Pyw))
    call ForGroupBJ(eO, Ayw)
    call DisableTrigger(UT)
    call DestroyTimerDialog(ht)
    call DestroyGroup(eO)
    call RemoveLocation(at)
endfunction
function fni takes nothing returns boolean
    local trigger yni
    local trigger pni
    local trigger eni
    local trigger qni
    local trigger ani
    local trigger nni
    local trigger dni
    set AH = "Stalks the target. After a period of time, the target will take damage equal to <Damage>.|n" + "|cffff0000Damage cannot exceed more than 400,000.|r|n|cffffcc00Consumes 3 Power Shards (not in PvP).|r"
    set yni = CreateTrigger()
    call l2w(yni, EVENT_PLAYER_HERO_LEVEL)
    set pni = yni
    call l2w(pni, EVENT_PLAYER_HERO_SKILL)
    set eni = pni
    call l2w(eni, EVENT_PLAYER_UNIT_DROP_ITEM)
    set qni = eni
    call l2w(qni, EVENT_PLAYER_UNIT_PICKUP_ITEM)
    set ani = qni
    call QYr(ani, sF, null)
    set nni = ani
    call dUs(nni, Condition(GEw))
    set dni = nni
    call B2S(dni, gEw)
    set yni = null
    set pni = null
    set eni = null
    set qni = null
    set ani = null
    set nni = null
    set dni = null
    return true
endfunction
function fps takes nothing returns boolean
    return GetUnitTypeId(GetKillingUnit()) == 1848652378
endfunction
function o0u takes string c0u returns nothing
    set DSw[ASw] = c0u
    set ASw = ASw + 1
    call GlS(GetTriggerUnit(), $00000001, false, "when calling onRevivalLocationEntered in RevivalLocations, line 124")
    set ASw = ASw - 1
endfunction
function fri takes nothing returns nothing
    set ASw = 0
    call o0u("via function reference RevivalLocations, line 123")
endfunction
function fxt takes nothing returns nothing
    call SetPlayerName(ew, "Bosses")
    call SetPlayerName(qw, "Silvasia Population")
    set Qo = 1
    loop
        exitwhen Qo > 10
        call SetPlayerAllianceStateBJ(Player(- 1 + Qo), Player($0000000B), $00000003)
        call SetPlayerAllianceStateBJ(Player($0000000B), Player(- 1 + Qo), $00000003)
        call SetPlayerAllianceStateBJ(Player(- 1 + Qo), Player($0000000A), $00000000)
        call SetPlayerAllianceStateBJ(Player($0000000A), Player(- 1 + Qo), $00000000)
        set Qo = Qo + 1
    endloop
    set Qo = 2
    loop
        exitwhen Qo > 10
        call SetPlayerAllianceStateBJ(Player(- 1 + Qo), Player($00000000), $00000003)
        call SetPlayerAllianceStateBJ(Player($00000000), Player(- 1 + Qo), $00000003)
        set Qo = Qo + 1
    endloop
    call EnableDawnDusk(true)
    call PlayMusicBJ(Ge)
    call FogEnableOn()
    call FogMaskEnableOn()
    set CS = 1848652369
    set OS = lVs(Player($0000000A), Condition(VOw))
    call ForGroupBJ(OS, BOw)
    call DestroyGroup(OS)
    set bj_forLoopAIndex = 1
    set bj_forLoopAIndexEnd = 10
    loop
        exitwhen bj_forLoopAIndex > bj_forLoopAIndexEnd
        set yr[bj_forLoopAIndex] = GetRectCenter(Sp)
        set Mt[bj_forLoopAIndex] = GetPlayerName(Player(- 1 + bj_forLoopAIndex))
        set bj_forLoopAIndex = bj_forLoopAIndex + 1
    endloop
    call EnumDestructablesInRectAll(GetWorldBounds(), NOw)
    set br[$00000001] = GetRectCenter(rp)
    set br[$00000002] = GetRectCenter(rl)
    set br[$00000003] = GetRectCenter(hp)
    set br[$00000004] = GetRectCenter(Ny)
    set br[$00000005] = GetRectCenter(Ap)
    set br[$00000006] = GetRectCenter(Cy)
    set br[$00000007] = GetRectCenter(Qb)
    set br[$00000008] = GetRectCenter(Vy)
    set br[$00000009] = GetRectCenter(mb)
    set br[$0000000A] = GetRectCenter(fy)
    call ForForce(bj_FORCE_ALL_PLAYERS, MOw)
    call CreateTextTagLocBJ("|cff009ACDSwordsman|r", GetRectCenter(gp), .0, 12., 100., 100., 100., 0.)
    call CreateTextTagLocBJ("|cff009ACDInitiate|r", GetRectCenter(py), .0, 12., 100., 100., 100., 0.)
    call CreateTextTagLocBJ("|cffFF69B4Archer|r", GetRectCenter(PO), .0, 12., 100., 100., 100., 0.)
    call CreateTextTagLocBJ("|cff009ACDThief|r", GetRectCenter(xp), .0, 12., 100., 100., 100., 0.)
    call CreateTextTagLocBJ("|cffFF69B4Templar|r", GetRectCenter(kp), .0, 12., 100., 100., 100., 0.)
    call CreateTextTagLocBJ("|Cff00ff00Acolyte|r", GetRectCenter(WO), .0, 12., 100., 100., 100., 0.)
    call CreateTextTagLocBJ("|cff009ACDWitch Hunter|r", GetRectCenter(Pp), .0, 12., 100., 100., 100., 0.)
    call CreateTextTagLocBJ("|cff009ACDDruid|r", GetRectCenter(Kl), .0, 12., 100., 100., 100., 0.)
    call CreateTextTagLocBJ("|cffffcc001st Job Change Area|r", GetRectCenter(jO), .0, 12., 100., 100., 100., 0.)
    set OS = lVs(Player($0000000B), Condition(wlw))
    call ForGroupBJ(OS, ulw)
    call DestroyGroup(OS)
    set OS = lVs(Player(PLAYER_NEUTRAL_PASSIVE), Condition(rlw))
    call ForGroupBJ(OS, slw)
    call DestroyGroup(OS)
    call SetPlayerAllianceStateBJ(Player($0000000A), Player(PLAYER_NEUTRAL_AGGRESSIVE), $00000002)
    call SetPlayerAllianceStateBJ(Player(PLAYER_NEUTRAL_AGGRESSIVE), Player($0000000A), $00000002)
    call SetTimeOfDay(6.)
    call SetTimeOfDayScalePercentBJ(50.)
    set lS = f1s(By)
    call ForGroupBJ(lS, tlw)
    call DestroyGroup(lS)
    call DestroyTrigger(GetTriggeringTrigger())
endfunction
function g0i takes nothing returns nothing
    call GroupAddUnit(GO, GetTriggerUnit())
    set xt = GetUnitLoc(GetTriggerUnit())
    set Zc = UFS(600., xt, Condition(eyw))
    call ForGroupBJ(Zc, qyw)
    call GroupRemoveUnit(GO, GetTriggerUnit())
    call RemoveLocation(xt)
    call DestroyGroup(Zc)
endfunction
function g4i takes nothing returns nothing
    call DisplayTextToForce(MwS(GetTriggerPlayer()), "Current Movement Speed: |cffffcc00" + R2S(GetUnitMoveSpeed(GetEnumUnit())))
endfunction
function g4w takes nothing returns boolean
    return GetSpellAbilityId() == 1093678681
endfunction
function mEi takes string xEi returns integer
    local integer vEi
    set DSw[ASw] = xEi
    set ASw = ASw + 1
    if NX == 0 then
        if MX < 32768 then
            set MX = MX + 1
            set vEi = MX
            set wC[vEi] = 942
        else
            call tNr("Out of memory: Could not create CallbackSingle_doAfter_RespawnHeroesEnterReg.", "when calling error in RespawnHeroesEnterReg, line 68")
            set vEi = 0
        endif
    else
        set NX = NX - 1
        set vEi = BX[NX]
        set wC[vEi] = 942
    endif
    set ASw = ASw - 1
    return vEi
endfunction
function kwu takes player Ywu, string Gwu returns nothing
    local integer gwu
    local integer hwu
    local integer Fwu
    set DSw[ASw] = Gwu
    set ASw = ASw + 1
    if Ywu != null then
        set gwu = hgr(Ywu)
        if GpS(gQ, gwu, "when calling has in RespawnHeroesEnterReg, line 66") then
            set hwu = xus(hgr(Ywu), "when calling getCustomPlayer in RespawnHeroesEnterReg, line 67")
            set Fwu = mEi("when calling alloc_CallbackSingle_doAfter_RespawnHeroesEnterReg in RespawnHeroesEnterReg, line 68")
            call RUs(Fwu)
            set xrw[Fwu] = hwu
            call Ybr(0.1, Fwu, "when calling doAfter in RespawnHeroesEnterReg, line 68")
        endif
    endif
    set ASw = ASw - 1
endfunction
function ZPr takes string WPr returns nothing
    local player EPr
    set DSw[ASw] = WPr
    set ASw = ASw + 1
    set EPr = GetEnumPlayer()
    if EPr == null and GetEnumUnit() != null then
        set EPr = eDs(GetEnumUnit())
    elseif EPr == null and GetTriggerPlayer() != null then
        set EPr = GetTriggerPlayer()
    elseif EPr == null and GetTriggerUnit() != null then
        set EPr = eDs(GetTriggerUnit())
    elseif EPr == null and GetEnteringUnit() != null then
        set EPr = eDs(GetEnteringUnit())
    endif
    call kwu(EPr, "when calling recoverPlayerCameraLockedState_action in RespawnHeroesEnterReg, line 107")
    set ASw = ASw - 1
    set EPr = null
endfunction
function g5u takes nothing returns nothing
    set ASw = 0
    call ZPr("via function reference RespawnHeroesEnterReg, line 95")
endfunction
function g6t takes nothing returns boolean
    return GetUnitTypeId(GetTriggerUnit()) == 1211117640 and GetUnitTypeId(GetOrderTargetUnit()) == 1747988817 and UnitHasItemOfTypeBJ(GetTriggerUnit(), $49303138) == false and IsPlayerInForce(GetOwningPlayer(GetTriggerUnit()), Ts) and IsPlayerInForce(GetOwningPlayer(GetTriggerUnit()), Vr) and IsUnitInGroup(GetTriggerUnit(), kpu(300., GetUnitLoc(GetOrderTargetUnit())))
endfunction
function mpr takes nothing returns boolean
    return GetUnitTypeId(GetTriggerUnit()) == 1211118146 or GetUnitTypeId(GetTriggerUnit()) == 1211118147 or GetUnitTypeId(GetTriggerUnit()) == 1211118162 or GetUnitTypeId(GetTriggerUnit()) == 1211118163 or GetUnitTypeId(GetTriggerUnit()) == 1211118159 or GetUnitTypeId(GetTriggerUnit()) == 1211118158
endfunction
function EPu takes nothing returns boolean
    return mpr()
endfunction
function B2u takes nothing returns boolean
    return GetUnitTypeId(GetTriggerUnit()) == 1211118160 or GetUnitTypeId(GetTriggerUnit()) == 1211118161 or GetUnitTypeId(GetTriggerUnit()) == 1211118149 or GetUnitTypeId(GetTriggerUnit()) == 1211118150 or GetUnitTypeId(GetTriggerUnit()) == 1211118152 or GetUnitTypeId(GetTriggerUnit()) == 1211118155
endfunction
function G0t takes nothing returns boolean
    return B2u()
endfunction
function NRt takes nothing returns boolean
    return GetUnitTypeId(GetTriggerUnit()) == 1211118157 or GetUnitTypeId(GetTriggerUnit()) == 1211118156 or GetUnitTypeId(GetTriggerUnit()) == 1211118131 or GetUnitTypeId(GetTriggerUnit()) == 1211118132
endfunction
function oui takes nothing returns boolean
    return NRt()
endfunction
function g7w takes nothing returns nothing
    call ForceAddPlayer(jS, GetOwningPlayer(GetTriggerUnit()))
    if oui() then
        call UnitAddAbility(GetTriggerUnit(), $41303938)
    endif
    if G0t() then
        call UnitAddAbility(GetTriggerUnit(), $41303947)
    endif
    if EPu() then
        call UnitAddAbility(GetTriggerUnit(), $41303854)
    endif
endfunction
function gAt takes nothing returns boolean
    local trigger TAt
    local trigger YAt
    local trigger GAt
    set nH = 10.
    set TAt = CreateTrigger()
    call B2S(TAt, aEw)
    set YAt = TAt
    call dUs(YAt, Condition(nEw))
    set GAt = YAt
    call l2w(GAt, EVENT_PLAYER_UNIT_SPELL_EFFECT)
    set TAt = null
    set YAt = null
    set GAt = null
    return true
endfunction
function gBi takes nothing returns boolean
    return IsUnitType(GetFilterUnit(), UNIT_TYPE_HERO) != false
endfunction
function gBw takes nothing returns boolean
    return GetUnitTypeId(GetEnteringUnit()) == 1211117618 and GetHeroLevel(GetEnteringUnit()) >= 10
endfunction
function gCr takes nothing returns boolean
    return GetUnitTypeId(GetOrderTargetUnit()) == sr and IsPlayerInForce(GetOwningPlayer(GetTriggerUnit()), ls) and IsUnitInGroup(GetTriggerUnit(), kpu(300., GetUnitLoc(GetOrderTargetUnit())))
endfunction
function gMi takes nothing returns nothing
    call SetItemUserData(GetManipulatedItem(), 1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit())))
endfunction
function gNr takes nothing returns nothing
    set uO = Player($00000006)
    call TriggerExecute(OY)
endfunction
function gNw takes nothing returns nothing
    call ForceRemovePlayer(rt, GetOwningPlayer(GetTriggerUnit()))
    call ForceRemovePlayer(ii, GetOwningPlayer(GetTriggerUnit()))
    call DisplayTextToForce(MwS(GetOwningPlayer(GetTriggerUnit())), "|cffffcc00Horazon|r : |cff87ceebYou fool! Killing her had nothing to do with learning how to tame the storms! Why don't you think properly next time?......But I guess I can't fault you much...at least you obeyed my instructions to the letter, even though it was pure foolishness. Hmm...since you have showed an impressive display of skill killing the Mistress, I think you are ready to learn the final arts of elemental summoning. Don't let me down.")
    call DestroyQuest(st[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))])
    set st[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))] = null
    call SetHeroLevelBJ(GetTriggerUnit(), $00000001, false)
    call ReplaceUnitBJ(GetTriggerUnit(), $48303253, $00000002)
    call SelectUnitForPlayerSingle(bj_lastReplacedUnit, GetOwningPlayer(GetTriggerUnit()))
    call SetHeroLevel(bj_lastReplacedUnit, $00000001, true)
    call UnitStripHeroLevel(bj_lastReplacedUnit, $00000001)
endfunction
function gSi takes nothing returns boolean
    return (IsUnitType(GetTriggerUnit(), UNIT_TYPE_HERO) and IsPlayerInForce(GetOwningPlayer(GetTriggerUnit()), pc[$00000005]) and IsPlayerInForce(GetOwningPlayer(GetTriggerUnit()), US) == false) != false
endfunction
function gYi takes nothing returns nothing
    set ASw = 0
    call BWr("via function reference JobAdvancementQuestHandler, line 1013")
endfunction
function gcS takes nothing returns nothing
    call SetUnitLifePercentBJ(GetEnumUnit(), 100.)
endfunction
function ghi takes nothing returns nothing
    call SetDestructableInvulnerable(GetEnumDestructable(), true)
endfunction
function git takes nothing returns boolean
    return GetUnitTypeId(GetOrderTargetUnit()) == 1747988815 and IsUnitInGroup(GetTriggerUnit(), kpu(300., GetUnitLoc(GetOrderTargetUnit()))) and IsPlayerInForce(GetOwningPlayer(GetTriggerUnit()), IS[$0000000B])
endfunction
function bbS takes nothing returns boolean
    return IsPlayerInForce(GetOwningPlayer(GetEventDamageSource()), ic)
endfunction
function mNs takes string xNs returns integer
    local integer vNs
    set DSw[ASw] = xNs
    set ASw = ASw + 1
    if NX == 0 then
        if MX < 32768 then
            set MX = MX + 1
            set vNs = MX
            set wC[vNs] = 818
        else
            call tNr("Out of memory: Could not create CallbackSingle_doAfter_Fate_Effect.", "when calling error in Fate_Effect, line 96")
            set vNs = 0
        endif
    else
        set NX = NX - 1
        set vNs = BX[NX]
        set wC[vNs] = 818
    endif
    set ASw = ASw - 1
    return vNs
endfunction
function pxi takes nothing returns boolean
    return IsPlayerInForce(GetOwningPlayer(GetEventDamageSource()), ic)
endfunction
function wVt takes string NCt returns integer
    local integer MCt
    set DSw[ASw] = NCt
    set ASw = ASw + 1
    if NX == 0 then
        if MX < 32768 then
            set MX = MX + 1
            set MCt = MX
            set wC[MCt] = 817
        else
            call tNr("Out of memory: Could not create CallbackSingle_doAfter_Fate_Effect.", "when calling error in Fate_Effect, line 33")
            set MCt = 0
        endif
    else
        set NX = NX - 1
        set MCt = BX[NX]
        set wC[MCt] = 817
    endif
    set ASw = ASw - 1
    return MCt
endfunction
function NKw takes string qKw returns nothing
    local unit aKw
    local unit nKw
    local integer dKw
    local real fKw
    local boolean RKw
    local integer TKw
    local real YKw
    local integer GKw
    local string gKw
    local string hKw
    local effect FKw
    local effect kKw
    local effect jKw
    local effect xKw
    local effect vKw
    local effect mKw
    local effect QKw
    local effect WKw
    local effect EKw
    local integer ZKw
    local integer UKw
    local boolean IKw
    local integer PKw
    local integer AKw
    local string DKw
    local effect HKw
    local effect JKw
    local effect KKw
    local effect LKw
    local boolean XKw
    local real CKw
    local boolean VKw
    local real BKw
    set DSw[ASw] = qKw
    set ASw = ASw + 1
    set aKw = GetEventDamageSource()
    set nKw = GetTriggerUnit()
    set dKw = hgr(eDs(aKw))
    set fKw = GetEventDamage()
    if aKw != null and nKw != null and GpS(gQ, hgr(eDs(aKw)), "when calling has in Fate_Effect, line 25") and(not(r5S(aKw) == 1211117617 or r5S(aKw) == 1211117618)) and R9s(GetEventDamageSource(), GetTriggerUnit()) and (Jyr(vQ, dKw, "when calling has in Fate_Effect, line 26") and xvt(wps(vQ, dKw, "when calling get in Fate_Effect, line 26")) != fKw)or(not Jyr(vQ, dKw, "when calling has in Fate_Effect, line 26")) then
        call DisableTrigger(GetTriggeringTrigger())
        call DisableTrigger(Me)
        call GroupAddUnit(GO, aKw)
        if GetRandomInt($00000001, $00000064) <= eQ then
            if Jyr(aQ, dKw, "when calling has in Fate_Effect, line 31") then
    set RKw = TYt(wps(aQ, dKw, "when calling get in Fate_Effect, line 31"))
            else
    set RKw = false
            endif
            set XKw = not RKw
        else
            set XKw = false
        endif
        if XKw then
            call GVw(aQ, dKw, O_i(true), "when calling put in Fate_Effect, line 32")
            set CKw = nQ
            set TKw = wVt("when calling alloc_CallbackSingle_doAfter_Fate_Effect in Fate_Effect, line 33")
            call RUs(TKw)
            set L7[TKw] = dKw
            call Ybr(CKw, TKw, "when calling doAfter in Fate_Effect, line 33")
            set Yc = GetUnitLoc(aKw)
            set YKw = Mri(GPi(aKw))
            set Gc = Shu(Yc, 60., YKw)
            set GKw = bQs(NNs(ANw(aKw), XSw, aKw), Acw, Dcw, .015, .030, "|cffffcc00Plasma Zanber Breaker!|r", 12., 2., $00000064, $00000064, $00000064, $00000000, null, "when calling _CreateTTExEntity_fading in Fate_Effect, line 39")
            set gKw = ""
            set hKw = ""
            if HEi(dKw, hgr(nD), "when calling ifDisplayEffectProcs in Fate_Effect, line 42") then
    set gKw = Iji("war3mapImported/Fate.mdl", "when calling unObfuscate in Fate_Effect, line 43")
    set hKw = Iji("Effects/revivehuman.mdl", "when calling unObfuscate in Fate_Effect, line 44")
            else
    call jRu(GKw, false)
            endif
            set FKw = AddSpecialEffectLoc(gKw, Gc)
            call yYi(FKw, 2.5, "when calling destrAdvTimed in Fate_Effect, line 47")
            set kKw = FKw
            call vQs(kKw, GetLocationZ(Gc) + 200.)
            set jKw = kKw
            call iKw(jKw, YKw, Deg2Rad(90.), 0.)
            set xKw = jKw
            call Wwu(xKw, 2.5)
            set vKw = AddSpecialEffectLoc(hKw, Gc)
            call iKw(vKw, YKw, Deg2Rad(90.), 0.)
            set mKw = vKw
            call yiu(mKw, $000000FA, $000000C8, $00000000)
            set QKw = mKw
            call vQs(QKw, GetLocationZ(Gc) + 200.)
            set WKw = QKw
            call Wwu(WKw, 3.)
            set EKw = WKw
            call yYi(EKw, 5., "when calling destrAdvTimed in Fate_Effect, line 48")
            set io = Shu(Yc, 350., YKw)
            set So = DistanceBetweenPoints(Yc, io)
            set co = AngleBetweenPoints(Yc, io)
            set bj_forLoopAIndex = 1
            set bj_forLoopAIndexEnd = R2I(So / 50.)
            set ZKw = 1
            set UKw = R2I(So / 50.)
            loop
    exitwhen ZKw > UKw
    set SS = Shu(Yc, I2R(bj_forLoopAIndex * 50), co)
    set kc = UFS(Tw, SS, Condition(bmw))
    call GroupAddGroup(kc, lo)
    call RemoveLocation(SS)
    call DestroyGroup(kc)
    set bj_forLoopAIndex = bj_forLoopAIndex + 1
    set ZKw = ZKw + 1
            endloop
            if bbS() then
    set lc[1 + GetPlayerId(GetOwningPlayer(aKw))] = lc[1 + GetPlayerId(GetOwningPlayer(aKw))] + 25000.
            endif
            call ForGroupBJ(lo, ymw)
            call RemoveLocation(Yc)
            call RemoveLocation(Gc)
            call RemoveLocation(io)
            call GroupClear(lo)
            call EnableTrigger(GetTriggeringTrigger())
            call EnableTrigger(Me)
        else
            if GetRandomInt($00000001, $00000064) <= qQ then
    if Jyr(aQ, dKw, "when calling has in Fate_Effect, line 94") then
                    set IKw = TYt(wps(aQ, dKw, "when calling get in Fate_Effect, line 94"))
    else
                    set IKw = false
    endif
    set VKw = not IKw
            else
    set VKw = false
            endif
            if VKw then
    call GVw(aQ, dKw, O_i(true), "when calling put in Fate_Effect, line 95")
    set BKw = nQ
    set PKw = mNs("when calling alloc_CallbackSingle_doAfter_Fate_Effect in Fate_Effect, line 96")
    call RUs(PKw)
    set X7[PKw] = dKw
    call Ybr(BKw, PKw, "when calling doAfter in Fate_Effect, line 96")
    set SS = GetUnitLoc(nKw)
    set AKw = bQs(NNs(ANw(aKw), XSw, aKw), Acw, Dcw, .015, .030, "|cffffcc00Jet Zanber!|r", 12., 2., $00000064, $00000064, $00000064, $00000000, null, "when calling _CreateTTExEntity_fading in Fate_Effect, line 100")
    set DKw = ""
    if HEi(dKw, hgr(nD), "when calling ifDisplayEffectProcs in Fate_Effect, line 102") then
                    set DKw = Iji("war3mapImported/Great Lightning.mdl", "when calling unObfuscate in Fate_Effect, line 103")
    else
                    call jRu(AKw, false)
    endif
    set HKw = AddSpecialEffectLoc(DKw, SS)
    call yiu(HKw, $000000FA, $000000DC, $00000000)
    set JKw = HKw
    call vQs(JKw, GetLocationZ(SS))
    set KKw = JKw
    call Wwu(KKw, 3.5)
    set LKw = KKw
    call yYi(LKw, 2., "when calling destrAdvTimed in Fate_Effect, line 106")
    if (not fRi(nKw))and(not gSr(nKw, l2s(Iji("AImx", "when calling unObfuscate in Fate_Effect, line 114"), "when calling fromRawCode in Fate_Effect, line 114"))) then
                    call UnitDamageTargetBJ(aKw, nKw, 20000., ATTACK_TYPE_HERO, DAMAGE_TYPE_ENHANCED)
    endif
    if pxi() then
                    set lc[1 + GetPlayerId(GetOwningPlayer(aKw))] = lc[1 + GetPlayerId(GetOwningPlayer(aKw))] + 20000.
    endif
    call RemoveLocation(SS)
            endif
        endif
        call GroupRemoveUnit(GO, aKw)
        call EnableTrigger(GetTriggeringTrigger())
        call EnableTrigger(Me)
    endif
    set ASw = ASw - 1
    set aKw = null
    set nKw = null
    set FKw = null
    set kKw = null
    set jKw = null
    set xKw = null
    set vKw = null
    set mKw = null
    set QKw = null
    set WKw = null
    set EKw = null
    set HKw = null
    set JKw = null
    set KKw = null
    set LKw = null
endfunction
function gks takes nothing returns nothing
    set ASw = 0
    call NKw("via function reference Fate_Effect, line 129")
endfunction
function HBt takes string PBt returns boolean
    local integer ABt
    local integer DBt
    set DSw[ASw] = PBt
    set ASw = ASw + 1
    set sh = l2s(Iji("AIA8", "when calling unObfuscate in Champion_DamageBonus, line 8"), "when calling fromRawCode in Champion_DamageBonus, line 8")
    set th = 8.
    set ABt = 1095577653
    set DBt = 1112354867
    set ih = ABt
    set Sh = DBt
    set ASw = ASw - 1
    return true
endfunction
function gnr takes nothing returns boolean
    set ASw = 0
    return HBt("via function reference Champion_DamageBonus, line 1")
endfunction
function goS takes nothing returns nothing
    set ASw = 0
    call nXs("via function reference JobAdvancementQuestHandler, line 1184")
endfunction
function gpi takes nothing returns boolean
    return IsPlayerInForce(GetOwningPlayer(GetKillingUnit()), IS[$0000000B]) and IsPlayerInForce(GetOwningPlayer(GetKillingUnit()), dc[$00000003]) and GetUnitTypeId(GetDyingUnit()) == 1848652103
endfunction
function PAw takes string UAw returns integer
    local integer IAw
    set DSw[ASw] = UAw
    set ASw = ASw + 1
    if NX == 0 then
        if MX < 32768 then
            set MX = MX + 1
            set IAw = MX
            set wC[IAw] = 971
        else
            call tNr("Out of memory: Could not create CallbackSingle_doAfter_Voidless.", "when calling error in Voidless, line 144")
            set IAw = 0
        endif
    else
        set NX = NX - 1
        set IAw = BX[NX]
        set wC[IAw] = 971
    endif
    set ASw = ASw - 1
    return IAw
endfunction
function b8r takes string O8r returns integer
    local integer l8r
    set DSw[ASw] = O8r
    set ASw = ASw + 1
    if NX == 0 then
        if MX < 32768 then
            set MX = MX + 1
            set l8r = MX
            set wC[l8r] = 973
        else
            call tNr("Out of memory: Could not create CallbackSingle_doAfter_Voidless.", "when calling error in Voidless, line 212")
            set l8r = 0
        endif
    else
        set NX = NX - 1
        set l8r = BX[NX]
        set wC[l8r] = 973
    endif
    set ASw = ASw - 1
    return l8r
endfunction
function mBt takes string xBt returns integer
    local integer vBt
    set DSw[ASw] = xBt
    set ASw = ASw + 1
    if NX == 0 then
        if MX < 32768 then
            set MX = MX + 1
            set vBt = MX
            set wC[vBt] = 972
        else
            call tNr("Out of memory: Could not create CallbackSingle_doAfter_Voidless.", "when calling error in Voidless, line 152")
            set vBt = 0
        endif
    else
        set NX = NX - 1
        set vBt = BX[NX]
        set wC[vBt] = 972
    endif
    set ASw = ASw - 1
    return vBt
endfunction
function Rqs takes integer Oqs, unit lqs, player bqs, string yqs returns nothing
    local boolean pqs
    local integer eqs
    local real qqs
    local integer aqs
    local integer nqs
    local integer dqs
    local real fqs
    set DSw[ASw] = yqs
    set ASw = ASw + 1
    call vwt(SK, hgr(bqs), "when calling add in Voidless, line 122")
    call dii("|cffff0000Entering the Sanctum...|r\n|cffB22222Dungeon Difficulty Level: Beyond Impossible|r", 7., bqs)
    call dii(Iji("A strange feeling ... something it is calling you .. draining your soul ...", "when calling unObfuscate in Voidless, line 124"), 8., bqs)
    call Xjr(iK, sK)
    call GZs(Oqs, true, "when calling setCommandsDisabled in Voidless, line 127")
    call Axu(lqs, false)
    set pqs = dVw(Oqs, "when calling getCameraIsLockedIn in Voidless, line 130")
    set eqs = hgr(bqs)
    set vM[xMi(Oqs, "when calling getCHero in Voidless, line 132")] = MJ
    if nD == bqs then
        call ShowInterface(false, 2.)
    endif
    set qqs = 3.5
    if QUu(lqs, BF) or((not QUu(lqs, uk))and(not QUu(lqs, rk))) or(not QUu(lqs, rk)) or kbr(bqs) < k6w("292929", "when calling unObfuscateInt in Voidless, line 141") then
        set qqs = 0.
    endif
    set aqs = PAw("when calling alloc_CallbackSingle_doAfter_Voidless in Voidless, line 144")
    call RUs(aqs)
    set Rtw[aqs] = lqs
    set Ttw[aqs] = bqs
    call Ybr(.5, aqs, "when calling doAfter in Voidless, line 144")
    set nqs = mBt("when calling alloc_CallbackSingle_doAfter_Voidless in Voidless, line 152")
    call RUs(nqs)
    set Ytw[nqs] = lqs
    set Gtw[nqs] = Oqs
    set gtw[nqs] = bqs
    set htw[nqs] = eqs
    call Ybr(1.5, nqs, "when calling doAfter in Voidless, line 152")
    set fqs = 1.5 + 2. + qqs
    set dqs = b8r("when calling alloc_CallbackSingle_doAfter_Voidless in Voidless, line 212")
    call RUs(dqs)
    set Ztw[dqs] = bqs
    set Utw[dqs] = Oqs
    set Itw[dqs] = pqs
    set Ptw[dqs] = lqs
    set Atw[dqs] = eqs
    call Ybr(fqs, dqs, "when calling doAfter in Voidless, line 212")
    set ASw = ASw - 1
endfunction
function Uyr takes unit Wyr, string Eyr returns boolean
    local boolean Zyr
    set DSw[ASw] = Eyr
    set ASw = ASw + 1
    set Zyr = OK <= 0 and Wyr != null and boS(Wyr) == 300 and QUu(Wyr, l2s(Iji(am, "when calling unObfuscate in Voidless_triggers, line 158"), "when calling fromRawCode in Voidless_triggers, line 158")) or QUu(Wyr, BF)
    set ASw = ASw - 1
    return Zyr
endfunction
function BTi takes string HTi returns nothing
    local unit JTi
    local player KTi
    local integer LTi
    local integer XTi
    local integer CTi
    local unit VTi
    set DSw[ASw] = HTi
    set ASw = ASw + 1
    set JTi = GetTriggerUnit()
    set KTi = eDs(JTi)
    set LTi = hgr(KTi)
    if GpS(gQ, LTi, "when calling has in Voidless_triggers, line 255") and t_u(JTi) then
        set XTi = tOS(KTi, "when calling getCustomPlayer in Voidless_triggers, line 256")
        set CTi = xMi(XTi, "when calling getCHero in Voidless_triggers, line 257")
        if CTi != 0 then
            set VTi = hqs(CTi, "when calling getHero in Voidless_triggers, line 260")
            if Uyr(VTi, "when calling voidlessCondition in Voidless_triggers, line 262") then
    call Rqs(XTi, VTi, KTi, "when calling voidlessEnter in Voidless_triggers, line 263")
            endif
        endif
    endif
    set ASw = ASw - 1
    set JTi = null
    set KTi = null
    set VTi = null
endfunction
function gpu takes nothing returns nothing
    set ASw = 0
    call BTi("via function reference Voidless_triggers, line 250")
endfunction
function Jeu takes nothing returns boolean
    return UnitHasItemOfTypeBJ(GetTriggerUnit(), $49303134)
endfunction
function bOu takes nothing returns boolean
    return UnitHasItemOfTypeBJ(GetTriggerUnit(), $49303136)
endfunction
function gqu takes nothing returns nothing
    if Jeu() then
        call ForceRemovePlayer(Kr, GetOwningPlayer(GetTriggerUnit()))
        call ForceRemovePlayer(Cr, GetOwningPlayer(GetTriggerUnit()))
        call ForceRemovePlayer(js, GetOwningPlayer(GetTriggerUnit()))
        call ForceRemovePlayer(Vr, GetOwningPlayer(GetTriggerUnit()))
        call PlaySoundBJ(ue)
        call SetHeroLevelBJ(GetTriggerUnit(), $00000001, false)
        call RemoveItem(GetItemOfTypeFromUnitBJ(GetTriggerUnit(), $49303134))
        call DisplayTextToForce(MwS(GetOwningPlayer(GetTriggerUnit())), "|cffffcc00Class Trainer|r : |cff87ceebThe High Priest Stendarr's recommendation himself! I can hardly believe my eyes! Welcome to the Church, Priest!")
        call ReplaceUnitBJ(GetTriggerUnit(), $48303142, $00000002)
        call SelectUnitForPlayerSingle(bj_lastReplacedUnit, GetOwningPlayer(GetTriggerUnit()))
        call DestroyQuest(Lr[1 + GetPlayerId(GetOwningPlayer(bj_lastReplacedUnit))])
        call SetHeroLevel(bj_lastReplacedUnit, $00000001, true)
        call UnitStripHeroLevel(bj_lastReplacedUnit, $00000001)
    endif
    if bOu() then
        call ForceRemovePlayer(Kr, GetOwningPlayer(GetTriggerUnit()))
        call ForceRemovePlayer(Cr, GetOwningPlayer(GetTriggerUnit()))
        call ForceRemovePlayer(xs, GetOwningPlayer(GetTriggerUnit()))
        call ForceRemovePlayer(Ws, GetOwningPlayer(GetTriggerUnit()))
        call ForceRemovePlayer(Es, GetOwningPlayer(GetTriggerUnit()))
        call ForceRemovePlayer(Zs, GetOwningPlayer(GetTriggerUnit()))
        call ForceRemovePlayer(Vr, GetOwningPlayer(GetTriggerUnit()))
        call PlaySoundBJ(ue)
        call SetHeroLevelBJ(GetTriggerUnit(), $00000001, false)
        call RemoveItem(GetItemOfTypeFromUnitBJ(GetTriggerUnit(), $49303136))
        call DisplayTextToForce(MwS(GetOwningPlayer(GetTriggerUnit())), "|cffffcc00Class Trainer|r : |cff87ceebOh my! B-Blessed and s-spoken to b-by Melitele herself?! What...an...honor! You are truly a child of the light to have been worthy of such honor. Go forth and spread the good news, Matriarch! For you have certainly earned the gods' favor today.")
        call ReplaceUnitBJ(GetTriggerUnit(), $48303141, $00000002)
        call SelectUnitForPlayerSingle(bj_lastReplacedUnit, GetOwningPlayer(GetTriggerUnit()))
        call DestroyQuest(Lr[1 + GetPlayerId(GetOwningPlayer(bj_lastReplacedUnit))])
        call SetHeroLevel(bj_lastReplacedUnit, $00000001, true)
        call UnitStripHeroLevel(bj_lastReplacedUnit, $00000001)
    endif
endfunction
function gru takes nothing returns boolean
    return GetUnitTypeId(GetTriggerUnit()) == 1211117633 and GetOrderTargetUnit() == SG and IsPlayerInForce(GetOwningPlayer(GetTriggerUnit()), fr) and IsUnitInGroup(GetTriggerUnit(), kpu(300., GetUnitLoc(GetOrderTargetUnit())))
endfunction
function hbr takes string Gbr returns integer
    local integer gbr
    set DSw[ASw] = Gbr
    set ASw = ASw + 1
    if NX == 0 then
        if MX < 32768 then
            set MX = MX + 1
            set gbr = MX
            set wC[gbr] = 819
        else
            call tNr("Out of memory: Could not create CallbackSingle_doAfter_Fishing.", "when calling error in Fishing, line 305")
            set gbr = 0
        endif
    else
        set NX = NX - 1
        set gbr = BX[NX]
        set wC[gbr] = 819
    endif
    set ASw = ASw - 1
    return gbr
endfunction
function bKu takes string tKu returns boolean
    local integer iKu
    local integer SKu
    local integer cKu
    local integer oKu
    local integer OKu
    local integer lKu
    set DSw[ASw] = tKu
    set ASw = ASw + 1
    if Kh then
        set iKu = 4
    else
        set iKu = 20
    endif
    set ku = iKu
    if Kh then
        set SKu = 2500
    else
        set SKu = 500
    endif
    set ju = SKu
    if Kh then
        set cKu = 1500
    else
        set cKu = 300
    endif
    set xu = cKu
    if Kh then
        set oKu = 500
    else
        set oKu = 100
    endif
    set vu = oKu
    if Kh then
        set OKu = 200
    else
        set OKu = 50
    endif
    set mu = OKu
    call TriggerAddAction(BT, pmw)
    call TriggerAddAction(CT, emw)
    call TriggerAddAction(VT, qmw)
    set lKu = hbr("when calling alloc_CallbackSingle_doAfter_Fishing in Fishing, line 305")
    call RUs(lKu)
    call Ybr(1., lKu, "when calling doAfter in Fishing, line 305")
    set ASw = ASw - 1
    return true
endfunction
function gur takes nothing returns boolean
    set ASw = 0
    return bKu("via function reference Fishing, line 1")
endfunction
function A5s takes nothing returns boolean
    return IsUnitInGroup(Qt[1 + GetPlayerId(GetTriggerPlayer())], UFS(800., GetUnitLoc(Wt[1 + GetPlayerId(GetTriggerPlayer())]), Condition(Spw))) and IsUnitAliveBJ(Wt[1 + GetPlayerId(GetTriggerPlayer())])
endfunction
function yDw takes nothing returns boolean
    return IsPlayerInForce(GetTriggerPlayer(), At) or IsPlayerInForce(Player(- 1 + S2I(SubStringBJ(GetEventPlayerChatString(), $00000006, $00000006))), At)
endfunction
function Y_S takes nothing returns boolean
    return yDw()
endfunction
function gus takes nothing returns nothing
    local integer Gus = StringLength(GetEventPlayerChatString())
    if Y_S() then
        call DisplayTimedTextToForce(MwS(GetTriggerPlayer()), 8., "|cffff0000You cannot challenge a player to a duel when you or the challenged player is in PvP.|r")
        return
    endif
    call ForGroupBJ(lVs(GetTriggerPlayer(), Condition(JOw)), KOw)
    call ForGroupBJ(lVs(Player(- 1 + S2I(SubStringBJ(GetEventPlayerChatString(), $00000006, Gus))), Condition(LOw)), XOw)
    if A5s() then
        call IssueImmediateOrder(Qt[1 + GetPlayerId(GetTriggerPlayer())], "stop")
        call IssueImmediateOrder(Wt[1 + GetPlayerId(GetTriggerPlayer())], "stop")
        set Jt[1 + GetPlayerId(GetTriggerPlayer())] = 1 + GetPlayerId(Player(- 1 + S2I(SubStringBJ(GetEventPlayerChatString(), $00000006, Gus))))
        set Qt[1 + GetPlayerId(GetTriggerPlayer())] = null
        set Wt[1 + GetPlayerId(GetTriggerPlayer())] = null
        set vt[1 + GetPlayerId(Player(- 1 + S2I(SubStringBJ(GetEventPlayerChatString(), $00000006, Gus))))] = GetTriggerPlayer()
        set Ht[1 + GetPlayerId(Player(- 1 + S2I(SubStringBJ(GetEventPlayerChatString(), $00000006, Gus))))] = Player(- 1 + S2I(SubStringBJ(GetEventPlayerChatString(), $00000006, Gus)))
        call DisplayTimedTextToForce(MwS(GetTriggerPlayer()), 10., "|cffffcc00You have challenged a player to a duel. Please wait for the player to accept or decline.|r")
        call ForceAddPlayer(mt, Player(- 1 + S2I(SubStringBJ(GetEventPlayerChatString(), $00000006, Gus))))
        call ForceAddPlayer(At, GetTriggerPlayer())
        call ForceAddPlayer(At, Player(- 1 + S2I(SubStringBJ(GetEventPlayerChatString(), $00000006, Gus))))
        call DisplayTimedTextToForce(MwS(Player(- 1 + S2I(SubStringBJ(GetEventPlayerChatString(), $00000006, Gus)))), 15., "|cffffcc00" + GetPlayerName(GetTriggerPlayer()) + "|r has challenged you to a |cffff0000duel|r. Type |cffffcc00-yes|r to accept or |cffffcc00-no|r to decline.")
    else
        set Qt[1 + GetPlayerId(GetTriggerPlayer())] = null
        set Wt[1 + GetPlayerId(GetTriggerPlayer())] = null
        call DisplayTimedTextToForce(MwS(GetTriggerPlayer()), 10., "|cffff0000Your Hero must be within 800 range of the challenged player's Hero in order to duel. Both heroes cannot be dead.|r")
    endif
endfunction
function R1r takes nothing returns boolean
    return os[1 + GetPlayerId(GetOwningPlayer(GetKillingUnit()))] >= 15
endfunction
function gyS takes nothing returns nothing
    set os[1 + GetPlayerId(GetOwningPlayer(GetKillingUnit()))] = os[1 + GetPlayerId(GetOwningPlayer(GetKillingUnit()))] + 1
    if R1r() then
        call QuestMessageBJ(MwS(GetOwningPlayer(GetKillingUnit())), $00000002, "|cffffcc00No Rest For the Wicked|r Quest Requirement Completed.")
    else
        call QuestMessageBJ(MwS(GetOwningPlayer(GetKillingUnit())), $00000001, I2S(os[1 + GetPlayerId(GetOwningPlayer(GetKillingUnit()))]) + " Bandit head(s) received.")
    endif
endfunction
function gyr takes nothing returns nothing
    call AdjustPlayerStateBJ(- 10000, GetOwningPlayer(GetTriggerUnit()), PLAYER_STATE_RESOURCE_GOLD)
    call ForceAddPlayer(Gt, GetOwningPlayer(GetTriggerUnit()))
    call DisplayTextToForce(MwS(GetOwningPlayer(GetTriggerUnit())), "|cffffcc00You left a huge sum of gold at the Shrine and received its blessing.|r")
endfunction
function h0s takes nothing returns boolean
    local player G0s
    local boolean g0s
    if GetDyingUnit() == null then
        set G0s = null
        return false
    endif
    set G0s = eDs(GetDyingUnit())
    set g0s = G0s == aD[PLAYER_NEUTRAL_AGGRESSIVE] or G0s == ew
    set G0s = null
    return g0s
endfunction
function LYu takes string JYu returns integer
    local integer KYu
    set DSw[ASw] = JYu
    set ASw = ASw + 1
    if EC == 0 then
        if ZC < 32768 then
            set ZC = ZC + 1
            set KYu = ZC
            set UC[KYu] = 1109
        else
            call tNr("Out of memory: Could not create Camera.", "when calling error in CameraUtils, line 21")
            set KYu = 0
        endif
    else
        set EC = EC - 1
        set KYu = WC[EC]
        set UC[KYu] = 1109
    endif
    set ASw = ASw - 1
    return KYu
endfunction
function gRi takes integer GRi returns nothing
endfunction
function aNr takes integer qNr returns nothing
    call gRi(qNr)
endfunction
function NGt takes string VGt returns integer
    local integer BGt
    set DSw[ASw] = VGt
    set ASw = ASw + 1
    set BGt = LYu("when calling alloc_Camera in CameraUtils, line 22")
    call aNr(BGt)
    set ASw = ASw - 1
    return BGt
endfunction
function fPr takes string dPr returns boolean
    set DSw[ASw] = dPr
    set ASw = ASw + 1
    set Ng = NGt("when calling new_Camera in CameraUtils, line 18")
    set ASw = ASw - 1
    return true
endfunction
function h3u takes nothing returns boolean
    set ASw = 0
    return fPr("via function reference CameraUtils, line 12")
endfunction
function h4w takes nothing returns boolean
    set Qg = 0
    return true
endfunction
function h8S takes nothing returns nothing
    call DisableTrigger(GetTriggeringTrigger())
endfunction
function hCr takes nothing returns nothing
    call ForceAddPlayer(nr, GetOwningPlayer(GetTriggerUnit()))
    call DisplayTextToForce(MwS(GetOwningPlayer(GetTriggerUnit())), "|cffffcc00Class Trainer|r : |cff87ceebWhat are you doing here, Thief? Auditioning to become a rogue? Hrrh, I must first give you a little test. See, I have this little problem; pesky little bandits outside the city and even outside of Espenia Town have been robbing travelers and innocent people of their money, and as a member of the Thieves Guild, I cannot stand by and let these bastards ruin our name. So YOU are going to get rid of 15 of them for me. If you do, I shall formally initiate you into our guild as one of our own.")
    call PlaySoundBJ(Se)
    call T_i(GetOwningPlayer(GetTriggerUnit()), $00000000, "2nd Job Advancement Quest", "Bandits are ruining the Thieves' Guild name by robbing innocent people. I must kill 15 Bandits, to teach them a lesson and to be initiated into the Guild.", "ReplaceableTextures\\CommandButtons\\BTNHire.blp")
    set dr[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))] = bj_lastCreatedQuest
endfunction
function hCt takes nothing returns nothing
    call SetUnitLifePercentBJ(GetEnumUnit(), 100.)
endfunction
function hCw takes nothing returns nothing
    set Bc[1 + GetPlayerId(GetTriggerPlayer())] = Bc[1 + GetPlayerId(GetTriggerPlayer())] + 1
    set bS = lVs(GetTriggerPlayer(), Condition(Nyw))
    call ForGroupBJ(bS, Myw)
    call DestroyGroup(bS)
endfunction
function xHs takes string jHs returns nothing
    set DSw[ASw] = jHs
    set ASw = ASw + 1
    call kwu(uO, "when calling recoverPlayerCameraLockedState_action in RespawnHeroesEnterReg, line 111")
    set ASw = ASw - 1
endfunction
function hGu takes nothing returns nothing
    set ASw = 0
    call xHs("via function reference RespawnHeroesEnterReg, line 110")
endfunction
function hMi takes nothing returns nothing
    call AddSpecialEffectTargetUnitBJ("overhead", GetEnumUnit(), "Abilities\\Spells\\Other\\TalkToMe\\TalkToMe.mdl")
endfunction
function GWu takes nothing returns boolean
    return UnitInventoryCount(GetTriggerUnit()) != 6
endfunction
function hNt takes nothing returns nothing
    if GWu() then
        call PlaySoundBJ(ce)
        set lw[GetPlayerId(GetOwningPlayer(GetTriggerUnit()))] = 1227895090
        call TriggerExecute(ow)
        call DisplayTextToForce(MwS(GetOwningPlayer(GetTriggerUnit())), "|cffffcc00Sinclaire the Dark One|r : |cff87ceebPerfectly done. You might just make a decent Dark Templar yet...Here's your letter of recommendation.")
        call QuestSetDescription(Lr[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))], "I have it! I have the recommendation! Now to get back to my Class Trainer...")
    else
        call PlaySoundBJ(oe)
        call DisplayTimedTextToForce(MwS(GetOwningPlayer(GetTriggerUnit())), 7., "|cffff0000Inventory full! Cannot receive recommendation!|r")
    endif
endfunction
function hNw takes nothing returns boolean
    return IsUnitType(GetTriggerUnit(), UNIT_TYPE_HERO) != false
endfunction
function hPw takes nothing returns boolean
    return GetUnitTypeId(GetTriggerUnit()) == 1211117619 and GetOrderTargetUnit() == sG and GetHeroLevel(GetTriggerUnit()) >= 40 and IsPlayerInForce(GetOwningPlayer(GetTriggerUnit()), nr) == false and IsUnitInGroup(GetTriggerUnit(), kpu(300., GetUnitLoc(GetOrderTargetUnit())))
endfunction
function SHu takes string tHu returns boolean
    local boolean iHu
    set DSw[ASw] = tHu
    set ASw = ASw + 1
    set iHu = GpS(jx, r5S(GetDyingUnit()), "when calling has in DungeonCmds, line 585")
    set ASw = ASw - 1
    return iHu
endfunction
function hRi takes nothing returns boolean
    set ASw = 0
    return SHu("via function reference DungeonCmds, line 965")
endfunction
function acs takes nothing returns boolean
    return UnitInventoryCount(GetTriggerUnit()) != 6
endfunction
function hRr takes nothing returns nothing
    if acs() then
        call PlaySoundBJ(ce)
        call ForceAddPlayer(Vr, GetOwningPlayer(GetTriggerUnit()))
        set lw[GetPlayerId(GetOwningPlayer(GetTriggerUnit()))] = 1227894868
        call TriggerExecute(ow)
        call DisplayTextToForce(MwS(GetOwningPlayer(GetTriggerUnit())), "|cffffcc00Jim the Assassin|r : |cff87ceebNicely done, rogue. Keep the dagger; I was merely testing your prowess...you have passed. Here is my recommendation. Welcome to the Assassins' Guild, guildmate.")
        call QuestSetDescription(Lr[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))], "I have it! I have the recommendation! Now to get back to my Class Trainer...")
    else
        call PlaySoundBJ(oe)
        call DisplayTimedTextToForce(MwS(GetOwningPlayer(GetTriggerUnit())), 7., "|cffff0000Inventory full! Cannot receive recommendation!|r")
    endif
endfunction
function INw takes nothing returns boolean
    return GetUnitTypeId(GetDyingUnit()) == 1848652353
endfunction
function OKw takes nothing returns boolean
    return GetUnitTypeId(GetDyingUnit()) == 1429221441
endfunction
function hRu takes nothing returns nothing
    if INw() then
        call DisplayTimedTextToForce(Rc[$00000009], 5., "|cffffcc00You are now transferred to the next level.|r")
        call PolledWait(c)
        set vo = GetRectCenter(pp)
        call ForGroupBJ(fc[$00000009], Clw)
        call ForForce(Rc[$00000009], Vlw)
        call RemoveLocation(vo)
    endif
    if OKw() then
        set Ni = 9
        set Mi = 8
        call ForForce(Rc[$00000009], flw)
        call ForForce(Rc[$00000009], Blw)
        call DisplayTimedTextToForce(Rc[$00000009], 10., "|cffffcc00You have completed the dungeon!|r Type -|c00ff0000d|r|c00ff1500o|r|c00ff3000n|r|c00ff4500e|r to exit the dungeon after looting your reward.")
        call DisplayTimedTextToForce(Rc[$00000009], 10., "|cffffcc00Type|r |c00ff0000-s2s X|r|cffffcc00 to send an item to your stash. (1-6)|r")
        call PolledWait(S)
        set pr[$00000001] = 1227895632
        set pr[$00000002] = 1227895631
        set pr[$00000003] = 1227895627
        set pr[$00000004] = 1227895629
        set pr[$00000005] = 1227895633
        set pr[$00000006] = 1227895634
        set pr[$00000007] = 1227895630
        set pr[$00000008] = 1227895628
        set Ni = 9
        set Mi = 8
        call ForForce(Rc[$00000009], Nlw)
        call ForGroupBJ(fc[$00000009], Mlw)
        call TriggerExecute(cw)
        call GroupClear(fc[$00000009])
        call ForceClear(Rc[$00000009])
        call DisableTrigger(GetTriggeringTrigger())
    endif
endfunction
function hSs takes nothing returns nothing
    call ForGroupBJ(f1s(bj_mapInitialPlayableArea), ypw)
endfunction
function hTS takes nothing returns nothing
    call ModifyGateBJ($00000001, xG)
    call DestroyTrigger(GetTriggeringTrigger())
endfunction
function hYi takes nothing returns nothing
    call ForceAddPlayer(Xr, GetOwningPlayer(GetTriggerUnit()))
    call ForceAddPlayer(Cr, GetOwningPlayer(GetTriggerUnit()))
    call DisplayTextToForce(MwS(GetOwningPlayer(GetTriggerUnit())), "|cffffcc00Stalker Raynor|r : |cff87ceebWell, well, well, what do we have here? Another hopeful? We don't just initiate anyone into the high-ups of the Thieves' Guild you know. Unlike the Assassins' Guild, we don't just kill; we take pleasure in the hunt itself. Prove yourself to me; hunt down and kill a villager called Rufio. Stalk him; stalk him and end his pathetic life...and only then shall you have my recommendation.")
    call QuestSetDescription(Lr[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))], "I need to find a villager named Rufio and kill him. I should search in the towns and cities.")
endfunction
function hYr takes nothing returns boolean
    call TriggerAddAction(SY, qQw)
    call B2S(jY, aQw)
    return true
endfunction
function bRu takes nothing returns boolean
    return IsUnitInGroup(GetTriggerUnit(), mo) == false
endfunction
function hdr takes nothing returns nothing
    set Ps[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))] = GetTriggerUnit()
    set Is[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))] = GetSpellTargetUnit()
    set Xs[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))] = GetUnitLoc(GetTriggerUnit())
    call GroupAddUnit(YO, GetTriggerUnit())
    call PauseUnit(Ps[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))], true)
    call SetUnitInvulnerable(Ps[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))], true)
    call PauseUnit(Is[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))], true)
    call SetUnitInvulnerable(Is[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))], true)
    call SetUnitVertexColorBJ(Ps[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))], 100., 100., 100., 60.)
    call AddSpecialEffectTargetUnitBJ("left hand", Ps[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))], "Abilities\\Weapons\\PhoenixMissile\\Phoenix_Missile.mdl")
    set As[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))] = bj_lastCreatedEffect
    call AddSpecialEffectTargetUnitBJ("right hand", Ps[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))], "Abilities\\Weapons\\PhoenixMissile\\Phoenix_Missile.mdl")
    set Ds[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))] = bj_lastCreatedEffect
    set ho = 1
    loop
        exitwhen ho > 8
        call TriggerSleepAction(.1)
        call SetUnitAnimation(Ps[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))], "attack")
        call SetUnitPositionLoc(Ps[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))], GetRandomLocInRect(RectFromCenterSizeBJ(GetUnitLoc(Is[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))]), 120., 120.)))
        call AddSpecialEffectLocBJ(GetUnitLoc(Ps[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))]), "Abilities\\Spells\\NightElf\\Blink\\BlinkCaster.mdl")
        call DestroyEffect(bj_lastCreatedEffect)
        call AddSpecialEffectLocBJ(GetUnitLoc(Is[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))]), "Abilities\\Spells\\Other\\Stampede\\StampedeMissileDeath.mdl")
        call DestroyEffect(bj_lastCreatedEffect)
        set ho = ho + 1
    endloop
    call SetUnitVertexColorBJ(Ps[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))], 100., 100., 100., .0)
    if bRu() then
        call PauseUnit(Ps[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))], false)
        call SetUnitPositionLoc(Ps[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))], Xs[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))])
    endif
    call SetUnitInvulnerable(Ps[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))], false)
    call PauseUnit(Is[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))], false)
    call SetUnitInvulnerable(Is[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))], false)
    call ResetUnitAnimation(Ps[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))])
    call UnitDamageTargetBJ(Ps[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))], Is[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))], 160. * I2R(GetUnitAbilityLevelSwapped($41303355, Ps[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))])), ATTACK_TYPE_HERO, DAMAGE_TYPE_UNIVERSAL)
    call DestroyEffect(As[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))])
    call DestroyEffect(Ds[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))])
    call GroupRemoveUnit(YO, GetTriggerUnit())
    call RemoveLocation(Xs[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))])
endfunction
function hlt takes nothing returns boolean
    return GetUnitTypeId(GetTriggerUnit()) == 1211117637 and GetUnitTypeId(GetOrderTargetUnit()) == 1747988807 and IsPlayerInForce(GetOwningPlayer(GetTriggerUnit()), Kr) and IsPlayerInForce(GetOwningPlayer(GetTriggerUnit()), Cr) == false and IsUnitInGroup(GetTriggerUnit(), kpu(300., GetUnitLoc(GetOrderTargetUnit())))
endfunction
function hnr takes nothing returns boolean
    return IsUnitType(GetFilterUnit(), UNIT_TYPE_HERO) != false
endfunction
function Qsr takes string msr returns boolean
    set DSw[ASw] = msr
    set ASw = ASw + 1
    set cW = l2s(Iji("B00B", "when calling unObfuscate in Hiero_Shield, line 10"), "when calling fromRawCode in Hiero_Shield, line 10")
    call k6w("17608585292983609085", "when calling unObfuscateInt in Hiero_Shield, line 11")
    set ASw = ASw - 1
    return true
endfunction
function hns takes nothing returns boolean
    set ASw = 0
    return Qsr("via function reference Hiero_Shield, line 1")
endfunction
function RFr takes string dFr returns integer
    local integer fFr
    set DSw[ASw] = dFr
    set ASw = ASw + 1
    if NX == 0 then
        if MX < 32768 then
            set MX = MX + 1
            set fFr = MX
            set wC[fFr] = 974
        else
            call tNr("Out of memory: Could not create CallbackSingle_doAfter_Voidless.", "when calling error in Voidless, line 450")
            set fFr = 0
        endif
    else
        set NX = NX - 1
        set fFr = BX[NX]
        set wC[fFr] = 974
    endif
    set ASw = ASw - 1
    return fFr
endfunction
function nrt takes string qrt returns integer
    local integer art
    set DSw[ASw] = qrt
    set ASw = ASw + 1
    if rC == 0 then
        if sC < 32768 then
            set sC = sC + 1
            set art = sC
            set tC[art] = 656
        else
            call tNr("Out of memory: Could not create CallbackCounted_doPeriodicallyCounted_Voidless.", "when calling error in Voidless, line 431")
            set art = 0
        endif
    else
        set rC = rC - 1
        set art = uC[rC]
        set tC[art] = 656
    endif
    set ASw = ASw - 1
    return art
endfunction
function qtS takes string ltS returns nothing
    local integer btS
    local group ytS
    local unit ptS
    local integer etS
    set DSw[ASw] = ltS
    set ASw = ASw + 1
    if OK > 0 then
        set btS = nrt("when calling alloc_CallbackCounted_doPeriodicallyCounted_Voidless in Voidless, line 431")
        call Inr(btS)
        call l5s(0.5, $0000000A, btS, "when calling doPeriodicallyCounted in Voidless, line 431")
        if smt(fc[MJ]) != 0 then
            set ytS = XbS(fc[MJ])
            loop
    exitwhen not hJw(ytS)
    set ptS = tPr(ytS)
    call dii("Sanctum stage " + fju(OK) + " cleared in " + L7s(oK, false) + " with " + fju(smt(fc[MJ])) + " adventurers.", 5., eDs(ptS))
            endloop
            call lxs(ytS)
        endif
        set etS = RFr("when calling alloc_CallbackSingle_doAfter_Voidless in Voidless, line 450")
        call RUs(etS)
        call Ybr(10., etS, "when calling doAfter in Voidless, line 450")
    endif
    set ASw = ASw - 1
    set ytS = null
    set ptS = null
endfunction
function mcS takes string vcS returns nothing
    set DSw[ASw] = vcS
    set ASw = ASw + 1
    if OK > 0 and(not yK) then
        set oK = oK + iF * 3.
        call E4r()
        if oK > cK + OK * 60 then
            call qtS("when calling onVoidlessFail in Voidless_triggers, line 196")
        endif
    endif
    set ASw = ASw - 1
endfunction
function hoS takes nothing returns nothing
    set ASw = 0
    call mcS("via function reference Voidless_triggers, line 189")
endfunction
function nou takes unit you, string pou returns nothing
    local integer eou
    local rect qou
    local unit aou
    set DSw[ASw] = pou
    set ASw = ASw + 1
    call eys(QW, Aei(you), "when calling remove in Imp3DragonFortress, line 795")
    set eou = gJi(vW, "when calling iterator in Imp3DragonFortress, line 797")
    loop
        exitwhen not slr(eou, "when calling hasNext in Imp3DragonFortress, line 797")
        set qou = Snu(Gjs(eou, "when calling next in Imp3DragonFortress, line 797"), "when calling rectFromIndex in Imp3DragonFortress, line 797")
        set aou = iCu(wps(vW, Ici(qou), "when calling get in Imp3DragonFortress, line 798"), "when calling unitFromIndex in Imp3DragonFortress, line 798")
        if aou == you and aou != null then
            call u5w(vW, Ici(qou), "when calling remove in Imp3DragonFortress, line 800")
        endif
    endloop
    call Ejr(eou, "when calling close in Imp3DragonFortress, line 797")
    set ASw = ASw - 1
    set qou = null
    set aou = null
endfunction
function d4u takes unit r4u, rect s4u, string t4u returns nothing
    local unit i4u
    local timer S4u
    local real c4u
    local string o4u
    local integer O4u
    local integer l4u
    local integer b4u
    local string y4u
    local string p4u
    local string e4u
    local string q4u
    local string a4u
    local string n4u
    set DSw[ASw] = t4u
    set ASw = ASw + 1
    set i4u = r4u
    set S4u = HCs(wps(LW, Ici(s4u), "when calling get in Imp3DragonFortress, line 897"), "when calling timerFromIndex in Imp3DragonFortress, line 897")
    set c4u = dMw(wps(KW, Ici(s4u), "when calling get in Imp3DragonFortress, line 898"))
    if S4u != null then
        call Hus(S4u)
    endif
    set o4u = "finished the " + nPr(wps(HW, Ici(s4u), "when calling get in Imp3DragonFortress, line 902"), "when calling stringFromIndex in Imp3DragonFortress, line 902") + " Maze in "
    set O4u = JGi(c4u / 3600.)
    set l4u = JGi((c4u - O4u * 3600) / 60.)
    set b4u = d0u(c4u - O4u * 3600 - l4u * 60)
    if O4u > 0 then
        set q4u = o4u
        set e4u = fju(O4u) + " hours "
        if l4u > 0 then
            set y4u = "and "
        else
            set y4u = "."
        endif
        set o4u = q4u + e4u + y4u
    endif
    if l4u > 0 or O4u == 0 then
        set n4u = o4u
        set a4u = fju(l4u) + " minutes "
        if b4u > 0 then
            set p4u = "and "
        else
            set p4u = "."
        endif
        set o4u = n4u + a4u + p4u
    endif
    if b4u > 0 or l4u == 0 then
        set o4u = o4u + fju(b4u) + " seconds."
    endif
    call DisplayTimedTextToForce(Rc[$0000000C], 8., "Player " + ZXr(eDs(i4u)) + " has " + o4u)
    call GVw(KW, Ici(s4u), B5r(0.), "when calling put in Imp3DragonFortress, line 916")
    call nou(i4u, "when calling on_imp3MazeNextAreaEnterRemoveFromMaps in Imp3DragonFortress, line 918")
    set ASw = ASw - 1
    set i4u = null
    set S4u = null
endfunction
function Blu takes unit Klu, rect Llu, rect Xlu, string Clu returns nothing
    local integer Vlu
    set DSw[ASw] = Clu
    set ASw = ASw + 1
    set Vlu = hgr(eDs(Klu))
    call d4u(Klu, Llu, "when calling on_imp3MazeFinish in Imp3DragonFortress, line 761")
    if EW == Vlu then
        call GLw(Klu, ZW, UW, "when calling heroUnitMove in Imp3DragonFortress, line 765")
        call GMt("when calling imp3InitCleanup in Imp3DragonFortress, line 766")
    else
        if not Jyr(RW, Vlu, "when calling has in Imp3DragonFortress, line 768") then
            call GVw(RW, Vlu, B5r(n8w(xus(Vlu, "when calling getCustomPlayer in Imp3DragonFortress, line 769"), "when calling getCameraZoomLevel in Imp3DragonFortress, line 769")), "when calling put in Imp3DragonFortress, line 769")
        endif
        call GLw(Klu, oQu(Xlu), Gcw, "when calling heroUnitMove in Imp3DragonFortress, line 771")
        call Gwt(GgS(eDs(Klu), "when calling getCustomPlayer in Imp3DragonFortress, line 772"), "when calling resetCameraZoomLevel in Imp3DragonFortress, line 772")
        call N3r(aD[Vlu], $00000002)
        call Uai(aD[Vlu], AOS(Klu, 260.), qcw, acw, 0.005, 0.005, "+2 power shards", 8., 2., 0.75, cF, oF, OF, lF, "when calling createTag in Imp3DragonFortress, line 778")
        call cFt(Vlu, "when calling limitGoldAndShardsForPlayer in Imp3DragonFortress, line 781")
        call dii(Iji("You found 2 power shards on the way out of the maze...", "when calling unObfuscate in Imp3DragonFortress, line 789"), 5., eDs(Klu))
    endif
    call pnr(Vlu, true, false, "when calling imp3EffectsResetForPlayer in Imp3DragonFortress, line 791")
    call rOi(Vlu, true, "when calling imp3OnMazeEnd in Imp3DragonFortress, line 792")
    set ASw = ASw - 1
endfunction
function OOi takes string cOi returns nothing
    local unit oOi
    set DSw[ASw] = cOi
    set ASw = ASw + 1
    set oOi = GetTriggerUnit()
    call Blu(oOi, Il, Ul, "when calling imp3MazeSetUnitToNewStage in Imp3DragonFortress, line 804")
    set ASw = ASw - 1
    set oOi = null
endfunction
function hqu takes nothing returns nothing
    set ASw = 0
    call OOi("via function reference Imp3DragonFortress, line 1655")
endfunction
function Byu takes nothing returns boolean
    return GetUnitTypeId(GetTriggerUnit()) == 1211118158 or GetUnitTypeId(GetTriggerUnit()) == 1211118159
endfunction
function hsi takes nothing returns boolean
    return GetSpellAbilityId() == 1093679188 and GetPlayerState(GetOwningPlayer(GetTriggerUnit()), PLAYER_STATE_RESOURCE_FOOD_USED) == 100 and oS[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))] == 1 and Byu()
endfunction
function hur takes nothing returns nothing
    call ForceRemovePlayer(rt, GetOwningPlayer(GetTriggerUnit()))
    call ForceRemovePlayer(ot, GetOwningPlayer(GetTriggerUnit()))
    call ForceRemovePlayer(Ot, GetOwningPlayer(GetTriggerUnit()))
    call DisplayTextToForce(MwS(GetOwningPlayer(GetTriggerUnit())), "|cffffcc00Eve|r : |cff87ceebYou have achieved an astounding feat by successfully transversing the Rite of Passage and I am pleased to teach you the strongest Arcane spells of all...including the ultimate spell, Twilight's Eve. However, you must have a very strong willpower in order to learn it. I wish you the best of luck, ArchSage.")
    call DestroyQuest(st[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))])
    set st[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))] = null
    call SetHeroLevelBJ(GetTriggerUnit(), $00000001, false)
    call ReplaceUnitBJ(GetTriggerUnit(), $48303233, $00000002)
    call SelectUnitForPlayerSingle(bj_lastReplacedUnit, GetOwningPlayer(GetTriggerUnit()))
    call SetHeroLevel(bj_lastReplacedUnit, $00000001, true)
    call UnitStripHeroLevel(bj_lastReplacedUnit, $00000001)
endfunction
function Qfi takes string vfi returns nothing
    local unit mfi
    set DSw[ASw] = vfi
    set ASw = ASw + 1
    set mfi = GetTriggerUnit()
    call Blu(mfi, Dl, Ul, "when calling imp3MazeSetUnitToNewStage in Imp3DragonFortress, line 816")
    set ASw = ASw - 1
    set mfi = null
endfunction
function hyr takes nothing returns nothing
    set ASw = 0
    call Qfi("via function reference Imp3DragonFortress, line 1670")
endfunction
function i0s takes nothing returns boolean
    return (GetItemTypeId(GetManipulatedItem()) == 1227894859 and IsUnitType(GetTriggerUnit(), UNIT_TYPE_HERO) and GetHeroLevel(GetTriggerUnit()) >= 15 and IsPlayerInForce(GetOwningPlayer(GetTriggerUnit()), IS[$00000009]) == false) != false
endfunction
function vqS takes nothing returns boolean
    return GetUnitAbilityLevelSwapped(Ju[bj_forLoopBIndex], GetEnumUnit()) > 0
endfunction
function i2r takes nothing returns nothing
    set Uu = Uu + 1
    set Qu = GetEnumUnit()
    set Zu[Uu] = fkS(Qu)
    set Uu = Uu + 1
    set Zu[Uu] = GetHeroXP(GetEnumUnit())
    set Uu = Uu + 1
    set Zu[Uu] = R2I(GetLocationX(GetUnitLoc(GetEnumUnit())))
    set Uu = Uu + 1
    set Zu[Uu] = R2I(GetLocationY(GetUnitLoc(GetEnumUnit())))
    set bj_forLoopBIndex = 1
    set bj_forLoopBIndexEnd = Ku
    loop
        exitwhen bj_forLoopBIndex > bj_forLoopBIndexEnd
        if vqS() then
            set Uu = Uu + 1
            set Zu[Uu] = bj_forLoopBIndex
            set Uu = Uu + 1
            set Zu[Uu] = GetUnitAbilityLevelSwapped(Ju[bj_forLoopBIndex], GetEnumUnit())
        endif
        set bj_forLoopBIndex = bj_forLoopBIndex + 1
    endloop
endfunction
function i2t takes nothing returns nothing
    call AdjustPlayerStateBJ(- 10000, GetOwningPlayer(GetTriggerUnit()), PLAYER_STATE_RESOURCE_GOLD)
    call ForceAddPlayer(Yt, GetOwningPlayer(GetTriggerUnit()))
    call DisplayTextToForce(MwS(GetOwningPlayer(GetTriggerUnit())), "|cffffcc00You left a huge sum of gold at the Altar and received its blessing.|r")
endfunction
function bOt takes string iOt returns nothing
    local integer SOt
    local integer cOt
    local integer oOt
    local integer OOt
    local integer lOt
    set DSw[ASw] = iOt
    set ASw = ASw + 1
    set SOt = hgr(eDs(GetTriggerUnit()))
    set oOt = Hv
    set OOt = SOt
    set lOt = MaS(wps(Hv, SOt, "when calling get in FateDestinyUnlocker, line 177"), OQ)
    set cOt = lOt
    call GVw(oOt, OOt, cOt, "when calling put in FateDestinyUnlocker, line 177")
    call wrS(SOt, "when calling checkDestinyReached in FateDestinyUnlocker, line 180")
    set ASw = ASw - 1
endfunction
function i3t takes nothing returns nothing
    set ASw = 0
    call bOt("via function reference FateDestinyUnlocker, line 725")
endfunction
function OIr takes string cIr returns integer
    local integer oIr
    set DSw[ASw] = cIr
    set ASw = ASw + 1
    if NX == 0 then
        if MX < 32768 then
            set MX = MX + 1
            set oIr = MX
            set wC[oIr] = 934
        else
            call tNr("Out of memory: Could not create CallbackSingle_doAfter_PlayerGoldAndShardLimit.", "when calling error in PlayerGoldAndShardLimit, line 23")
            set oIr = 0
        endif
    else
        set NX = NX - 1
        set oIr = BX[NX]
        set wC[oIr] = 934
    endif
    set ASw = ASw - 1
    return oIr
endfunction
function Nki takes string Vki returns boolean
    local integer Bki
    set DSw[ASw] = Vki
    set ASw = ASw + 1
    set bD = k6w("90859090859085", "when calling unObfuscateInt in PlayerGoldAndShardLimit, line 8")
    set yD = k6w("737366", "when calling unObfuscateInt in PlayerGoldAndShardLimit, line 9")
    set Bki = OIr("when calling alloc_CallbackSingle_doAfter_PlayerGoldAndShardLimit in PlayerGoldAndShardLimit, line 23")
    call RUs(Bki)
    call Ybr(1., Bki, "when calling doAfter in PlayerGoldAndShardLimit, line 23")
    set pD = k6w("90859090859085", "when calling unObfuscateInt in PlayerGoldAndShardLimit, line 28")
    set eD = k6w("737366", "when calling unObfuscateInt in PlayerGoldAndShardLimit, line 29")
    set ASw = ASw - 1
    return true
endfunction
function i5w takes nothing returns boolean
    set ASw = 0
    return Nki("via function reference PlayerGoldAndShardLimit, line 1")
endfunction
function i9i takes nothing returns boolean
    return IsUnitType(GetFilterUnit(), UNIT_TYPE_HERO) != false
endfunction
function Zci takes integer Qci, string Wci returns nothing
    local integer Eci
    set DSw[ASw] = Wci
    set ASw = ASw + 1
    set Eci = Qci
    if Eci == 0 then
        call xki(PE, AE, DE, HE, JE, KE, LE, XE, Fy, "when calling imp3MazeOnSpikesUnitHit in Imp3DragonFortress, line 732")
        call xki(PE, AE, DE, HE, JE, KE, LE, XE, ky, "when calling imp3MazeOnSpikesUnitHit in Imp3DragonFortress, line 733")
    elseif Eci == 1 then
        call xki(PE, AE, DE, HE, JE, KE, LE, XE, xy, "when calling imp3MazeOnSpikesUnitHit in Imp3DragonFortress, line 735")
        call xki(CE, VE, BE, NE, ME, wZ, uZ, rZ, wy, "when calling imp3MazeOnSpikesUnitHit in Imp3DragonFortress, line 736")
    elseif Eci == 2 then
        call xki(CE, VE, BE, NE, ME, wZ, uZ, rZ, ry, "when calling imp3MazeOnSpikesUnitHit in Imp3DragonFortress, line 738")
        call xki(CE, VE, BE, NE, ME, wZ, uZ, rZ, ty, "when calling imp3MazeOnSpikesUnitHit in Imp3DragonFortress, line 739")
    elseif Eci == 3 then
        call xki(sZ, tZ, iZ, SZ, cZ, oZ, OZ, lZ, Cb, "when calling imp3MazeOnSpikesUnitHit in Imp3DragonFortress, line 741")
        call xki(sZ, tZ, iZ, SZ, cZ, oZ, OZ, lZ, Bb, "when calling imp3MazeOnSpikesUnitHit in Imp3DragonFortress, line 742")
    endif
    set ASw = ASw - 1
endfunction
function WWr takes string kWr returns nothing
    local integer jWr
    local integer xWr
    local integer vWr
    local integer mWr
    local integer QWr
    set DSw[ASw] = kWr
    set ASw = ASw + 1
    if b8S($00000014) then
        call q5s("when calling imp3SpikesRunLoopRestart1 in Imp3DragonFortress, line 706")
    endif
    if Jyr(eW, $00000002, "when calling has in Imp3DragonFortress, line 708") then
        set xWr = wps(eW, $00000002, "when calling get in Imp3DragonFortress, line 708")
    else
        set xWr = 0
    endif
    set jWr = xWr
    if b8S($0000000A) then
        set jWr = GetRandomInt($00000000, $00000003)
    endif
    set QWr = eW
    if jWr == 3 then
        set vWr = 0
    else
        set vWr = jWr + 1
    endif
    call GVw(QWr, $00000002, vWr, "when calling put in Imp3DragonFortress, line 711")
    set mWr = jWr
    if mWr == 0 then
        call Zci($00000000, "when calling spikesRunLoop2_onTick in Imp3DragonFortress, line 715")
        call Zci($00000001, "when calling spikesRunLoop2_onTick in Imp3DragonFortress, line 716")
        call Zci($00000002, "when calling spikesRunLoop2_onTick in Imp3DragonFortress, line 717")
        call Zci($00000003, "when calling spikesRunLoop2_onTick in Imp3DragonFortress, line 718")
    elseif mWr == 1 then
        call Zci($00000000, "when calling spikesRunLoop2_onTick in Imp3DragonFortress, line 720")
        call Zci($00000002, "when calling spikesRunLoop2_onTick in Imp3DragonFortress, line 721")
    elseif mWr == 2 then
        call Zci($00000001, "when calling spikesRunLoop2_onTick in Imp3DragonFortress, line 723")
        call Zci($00000003, "when calling spikesRunLoop2_onTick in Imp3DragonFortress, line 724")
    elseif mWr == 3 then
        call Zci($00000002, "when calling spikesRunLoop2_onTick in Imp3DragonFortress, line 726")
        call Zci($00000003, "when calling spikesRunLoop2_onTick in Imp3DragonFortress, line 727")
    endif
    set ASw = ASw - 1
endfunction
function i9t takes nothing returns nothing
    set ASw = 0
    call WWr("via function reference Imp3DragonFortress, line 579")
endfunction
function D5r takes integer W5r, string E5r returns nothing
    local integer Z5r
    local integer U5r
    local unit I5r
    local integer P5r
    local unit A5r
    set DSw[ASw] = E5r
    set ASw = ASw + 1
    set Z5r = xus(W5r, "when calling getCustomPlayer in Voidless, line 97")
    set U5r = xMi(Z5r, "when calling getCHero in Voidless, line 98")
    set I5r = hqs(U5r, "when calling getHero in Voidless, line 99")
    if GpS(eK, U5r, "when calling has in Voidless, line 101") then
        call J7i(I5r, lOu(yr[1 + W5r]), hcw)
        call rOu(Ng, Z5r, ANw(I5r), XSw, 0., "when calling pan in Voidless, line 103")
        call Axu(I5r, true)
        call eys(eK, U5r, "when calling remove in Voidless, line 105")
        call yLt(lt, aD[W5r])
    else
        set P5r = gJi(uX, "when calling iterator in Voidless, line 108")
        loop
            exitwhen not slr(P5r, "when calling hasNext in Voidless, line 108")
            set A5r = iCu(Gjs(P5r, "when calling next in Voidless, line 108"), "when calling unitFromIndex in Voidless, line 108")
            if iCu(wps(uX, Aei(A5r), "when calling get in Voidless, line 109"), "when calling unitFromIndex in Voidless, line 109") == I5r then
    call ZdS(A5r, "when calling blackholeCleanup in Voidless, line 110")
    exitwhen true
            endif
        endloop
        call Ejr(P5r, "when calling close in Voidless, line 108")
        call Z7t(fc[MJ], I5r)
        call w2u(W5r, false)
        call D6i(aD[W5r])
    endif
    if smt(fc[MJ]) == 0 and wds(eK, "when calling size in Voidless, line 118") == 0 then
        call Rxi("when calling voidlessReset in Voidless, line 119")
    endif
    set ASw = ASw - 1
    set I5r = null
    set A5r = null
endfunction
function Yps takes string Rps returns integer
    local integer Tps
    set DSw[ASw] = Rps
    set ASw = ASw + 1
    if NX == 0 then
        if MX < 32768 then
            set MX = MX + 1
            set Tps = MX
            set wC[Tps] = 749
        else
            call tNr("Out of memory: Could not create CallbackSingle_doAfter_DungeonCmds.", "when calling error in DungeonCmds, line 552")
            set Tps = 0
        endif
    else
        set NX = NX - 1
        set Tps = BX[NX]
        set wC[Tps] = 749
    endif
    set ASw = ASw - 1
    return Tps
endfunction
function i1r takes nothing returns nothing
    set bS = lVs(GetTriggerPlayer(), Condition(POw))
    call ForGroupBJ(bS, AOw)
    call DestroyGroup(bS)
    call ForceRemovePlayer(lt, GetTriggerPlayer())
    call ForceRemovePlayer(ws, GetTriggerPlayer())
    call ForceRemovePlayer(Gi, GetTriggerPlayer())
    call PanCameraToTimedLocForPlayer(GetTriggerPlayer(), yr[1 + GetPlayerId(GetTriggerPlayer())], 0.)
    call ForceAddPlayer(Kt, GetTriggerPlayer())
    call n6t(fw)
    set bS = lVs(GetTriggerPlayer(), Condition(DOw))
    call ForGroupBJ(bS, HOw)
    call DestroyGroup(bS)
    call ForceRemovePlayer(Kt, GetTriggerPlayer())
endfunction
function nCi takes string SCi returns nothing
    local player cCi
    local integer oCi
    local integer OCi
    local integer lCi
    local unit bCi
    local integer yCi
    local integer pCi
    local unit eCi
    local unit qCi
    local integer aCi
    set DSw[ASw] = SCi
    set ASw = ASw + 1
    set cCi = GetTriggerPlayer()
    set oCi = hgr(cCi)
    set OCi = xus(oCi, "when calling getCustomPlayer in DungeonCmds, line 528")
    set lCi = xMi(OCi, "when calling getCHero in DungeonCmds, line 529")
    set bCi = hqs(lCi, "when calling getHero in DungeonCmds, line 530")
    set yCi = vM[xMi(OCi, "when calling getCHero in DungeonCmds, line 531")]
    if (not Vgt(OCi, "when calling getCommandsDisabled in DungeonCmds, line 533"))and(not GpS(qx, oCi, "when calling has in DungeonCmds, line 533")) then
        set pCi = yCi
        if pCi == fx then
            call pnr(oCi, false, false, "when calling imp3EffectsResetForPlayer in DungeonCmds, line 536")
        elseif pCi == Tx then
            call D5r(oCi, "when calling imp5ResetForPlayer in DungeonCmds, line 538")
        endif
        call Nor()
        call BwS(cCi)
        call dii(Iji("|cffffcc00Exiting the Dungeon will pause you for ", "when calling unObfuscate in DungeonCmds, line 542") + I2S(R2I(fw)) + Iji(" seconds.|r", "when calling unObfuscate in DungeonCmds, line 542"), 10., cCi)
        set eCi = hqs(xMi(OCi, "when calling getCHero in DungeonCmds, line 545"), "when calling getHero in DungeonCmds, line 545")
        call Axu(eCi, true)
        set qCi = eCi
        call Cys(qCi)
        set vM[xMi(OCi, "when calling getCHero in DungeonCmds, line 546")] =- 1
        call i1r()
        if r5S(bCi) == pk then
            call Ldi(bCi, l2s(Iji("A05I", "when calling unObfuscate in DungeonCmds, line 550"), "when calling fromRawCode in DungeonCmds, line 550"), false, "when calling disableAbilityCustom in DungeonCmds, line 550")
        endif
        set aCi = Yps("when calling alloc_CallbackSingle_doAfter_DungeonCmds in DungeonCmds, line 552")
        call RUs(aCi)
        set O1[aCi] = OCi
        call Ybr(0.25, aCi, "when calling doAfter in DungeonCmds, line 552")
    endif
    set ASw = ASw - 1
    set cCi = null
    set bCi = null
    set eCi = null
    set qCi = null
endfunction
function iEi takes nothing returns nothing
    set ASw = 0
    call nCi("via function reference DungeonCmds, line 912")
endfunction
function iHr takes nothing returns nothing
    local integer uHr = GetUnitAbilityLevel(GetTriggerUnit(), GetSpellAbilityId())
    local integer rHr = GetUnitAbilityLevel(GetTriggerUnit(), GetSpellAbilityId()) - 40
    local real sHr = 0.
    local real tHr = 0.
    if uHr < 40 then
        set uHr = 40
    endif
    if rHr < 0 then
        set rHr = 0
    endif
    set tHr = uHr * 2222.22
    set sHr = (100. * uHr + 400. * rHr) * (100. - GetUnitLifePercent(GetSpellTargetUnit()))
    if sHr < tHr then
        set sHr = tHr
    endif
    if sHr > pw then
        set sHr = pw
    endif
    call DestroyEffect(AddSpecialEffectLocBJ(GetUnitLoc(GetSpellTargetUnit()), "Abilities\\Spells\\Other\\Stampede\\StampedeMissileDeath.mdl"))
    call UnitDamageTarget(GetTriggerUnit(), GetSpellTargetUnit(), sHr, false, true, ATTACK_TYPE_CHAOS, DAMAGE_TYPE_UNIVERSAL, WEAPON_TYPE_WHOKNOWS)
endfunction
function iKr takes nothing returns boolean
    return (GetItemTypeId(GetManipulatedItem()) == 1227895352 and IsUnitType(GetTriggerUnit(), UNIT_TYPE_HERO) and GetHeroLevel(GetTriggerUnit()) >= 50 and IsPlayerInForce(GetOwningPlayer(GetTriggerUnit()), IS[$00000008]) == false and IsPlayerInForce(GetOwningPlayer(GetTriggerUnit()), PS[$00000008]) == false and tw[(1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))) * 1000 + fkS(GetTriggerUnit())] == false) != false
endfunction
function iPr takes nothing returns nothing
    set vs[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))] = 1
    call DisplayTextToForce(MwS(GetOwningPlayer(GetTriggerUnit())), "|cffffcc00Priestess Shari|r : |cff87ceebStendarr sent you to me? Well, I can't help you much my child. I only handle the female clerics...but if its the Rites of the Highfather you seek...well. There is a...fountain northwest of here. It is filled with holy water said to have been blessed by the Highfather himself! But it was also because of it that caused the town to be raided by power hungry bandits seeking the source of the Holy Water's power. But the Highfather does not tolerate such insolence, and so the legend goes that the bandits were struck down by holy light that fateful day. But the town remains scorched until today, a shadow of its former glory...and yet the fountain still brims! Bring me the Holy Water from that fountain, so we can perform the Rites.")
    call QuestSetDescription(Lr[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))], "I need to obtain Holy Water from a fountain that still brims with life in a scorched town. Priestess Shari said it was northwest of here, but that couldn't be right...could it?")
endfunction
function iVr takes nothing returns boolean
    return GetClickedButton() == iS[$00000001] and sS[1 + GetPlayerId(GetTriggerPlayer())] == 1
endfunction
function qLu takes string eLu returns boolean
    set DSw[ASw] = eLu
    set ASw = ASw + 1
    set gJ = 0
    set hJ = VQs("when calling new_Table in TimerUtils, line 13")
    set FJ = 679645218
    call jts("when calling new_HashMap in TimerUtils, line 59")
    set ASw = ASw - 1
    return true
endfunction
function ibs takes nothing returns boolean
    set ASw = 0
    return qLu("via function reference TimerUtils, line 1")
endfunction
function ics takes nothing returns nothing
    call ModifyGateBJ($00000001, jG)
    call DestroyTrigger(GetTriggeringTrigger())
endfunction
function idr takes nothing returns boolean
    return IsUnitType(GetFilterUnit(), UNIT_TYPE_HERO) != false
endfunction
function idu takes nothing returns nothing
    call SetUnitLifePercentBJ(GetEnumUnit(), 100.)
endfunction
function Ehu takes nothing returns integer
    return fv[Rv - 1]
endfunction
function kks takes string hks returns integer
    local integer Fks
    set DSw[ASw] = hks
    set ASw = ASw + 1
    if BV == 0 then
        if NV < 32768 then
            set NV = NV + 1
            set Fks = NV
            set MV[Fks] = 1153
        else
            call tNr("Out of memory: Could not create ForForceCallback_execute_Voidless.", "when calling error in Voidless, line 489")
            set Fks = 0
        endif
    else
        set BV = BV - 1
        set Fks = VV[BV]
        set MV[Fks] = 1153
    endif
    set ASw = ASw - 1
    return Fks
endfunction
function Xnr takes string Knr returns integer
    local integer Lnr
    set DSw[ASw] = Knr
    set ASw = ASw + 1
    if PC == 0 then
        if AC < 32768 then
            set AC = AC + 1
            set Lnr = AC
            set DC[Lnr] = 704
        else
            call tNr("Out of memory: Could not create CallbackPeriodic_doPeriodically_Voidless.", "when calling error in Voidless, line 349")
            set Lnr = 0
        endif
    else
        set PC = PC - 1
        set Lnr = IC[PC]
        set DC[Lnr] = 704
    endif
    set ASw = ASw - 1
    return Lnr
endfunction
function q4w takes unit B1w, string N1w returns nothing
    local integer M1w
    local real w4w
    local real u4w
    local real r4w
    local real s4w
    local real t4w
    local real i4w
    local real S4w
    local real c4w
    local real o4w
    local real O4w
    local real l4w
    local real b4w
    local real y4w
    local integer p4w
    local integer e4w
    set DSw[ASw] = N1w
    set ASw = ASw + 1
    set M1w = 13
    set w4w = GetRandomReal(.93, .99)
    set u4w = GetRandomReal(.85, .92)
    set r4w = GetRandomReal(.77, .84)
    set s4w = GetRandomReal(.69, .76)
    set t4w = GetRandomReal(.61, .68)
    set i4w = GetRandomReal(.53, .60)
    set S4w = GetRandomReal(.45, .52)
    set c4w = GetRandomReal(.37, .44)
    set o4w = GetRandomReal(.29, .36)
    set O4w = GetRandomReal(.21, .28)
    set l4w = GetRandomReal(.13, .20)
    set b4w = GetRandomReal(.05, .12)
    set y4w = GetRandomReal(.01, .04)
    set p4w = 0
    set e4w = Xnr("when calling alloc_CallbackPeriodic_doPeriodically_Voidless in Voidless, line 349")
    call kVu(e4w)
    set Htw[e4w] = B1w
    set Jtw[e4w] = p4w
    set Ktw[e4w] = M1w
    set Ltw[e4w] = u4w
    set Xtw[e4w] = w4w
    set Ctw[e4w] = r4w
    set Vtw[e4w] = s4w
    set Btw[e4w] = t4w
    set Ntw[e4w] = i4w
    set Mtw[e4w] = S4w
    set wiw[e4w] = c4w
    set uiw[e4w] = o4w
    set riw[e4w] = O4w
    set siw[e4w] = l4w
    set tiw[e4w] = b4w
    set iiw[e4w] = y4w
    call wcs(.5, e4w, "when calling doPeriodically in Voidless, line 349")
    set ASw = ASw - 1
endfunction
function RoS takes string doS returns nothing
    local integer foS
    set DSw[ASw] = doS
    set ASw = ASw + 1
    if lK > 0 and lK >= OK and lK <= wK then
        set OK = lK
    elseif lK > wK then
        set OK = wK
    else
        set OK = 1
    endif
    set uK = dps(aD[PLAYER_NEUTRAL_AGGRESSIVE], PK, TK, YK, 270.)
    if OK > 1 then
        call Yis(uK, OK, true)
    endif
    set bK = 0
    call GBw(bK)
    call lKs(uK, DK, $00000001)
    set yK = false
    call E4r()
    set Fx = GQ
    call q4w(uK, "when calling initBossesLifeCheck in Voidless, line 488")
    set foS = kks("when calling alloc_ForForceCallback_execute_Voidless in Voidless, line 489")
    call ggu(foS, "when calling execute in Voidless, line 489")
    if iK != null then
        call Xjr(iK, tK)
    endif
    set ASw = ASw - 1
endfunction
function FgS takes integer ggS, string hgS returns nothing
    set DSw[ASw] = hgS
    set ASw = ASw + 1
    call RoS("when calling initStages in Voidless, line 285")
    set ASw = ASw - 1
endfunction
function A7u takes integer E7u, integer Z7u, string U7u returns nothing
    local boolean I7u
    local boolean P7u
    if E7u == 0 then
        set DSw[ASw] = U7u
        set ASw = ASw + 1
        if uM[Z7u] == 0 and wM[Z7u] == 0 then
            set ASw = ASw - 1
            set aIw = true
            return
        else
            if uM[Z7u] != 0 then
    call A7u($00000001, uM[Z7u], "when calling clean in BigNum, line 43")
    set P7u = aIw
            else
    set P7u = false
            endif
            if P7u then
    call D2S(uM[Z7u], "when calling dispatch_BigNum_l_destroyBigNum_l in BigNum, line 44")
    set uM[Z7u] = 0
    set ASw = ASw - 1
    set aIw = wM[Z7u] == 0
    return
            else
    set ASw = ASw - 1
    set aIw = false
    return
            endif
        endif
    elseif E7u == 1 then
        set DSw[ASw] = U7u
        set ASw = ASw + 1
        if yC[Z7u] == 0 then
            if Z7u == 0 then
    call tNr("Nullpointer exception when calling BigNum_l.clean", "when calling error in BigNum, line 40")
            else
    call tNr("Called BigNum_l.clean on invalid object.", "when calling error in BigNum, line 40")
            endif
        endif
        call A7u($00000000, Z7u, "when calling clean in BigNum, line 40")
        set I7u = aIw
        set ASw = ASw - 1
        set aIw = I7u
        return
    endif
endfunction
function RKr takes integer dKr, string fKr returns nothing
    set DSw[ASw] = fKr
    set ASw = ASw + 1
    call A7u($00000001, NN[dKr], "when calling clean in BigNum, line 88")
    set ASw = ASw - 1
endfunction
function pMr takes integer bMr, string yMr returns nothing
    set DSw[ASw] = yMr
    set ASw = ASw + 1
    if oC[bMr] == 0 then
        if bMr == 0 then
            call tNr("Nullpointer exception when calling BigNum.clean", "when calling error in BigNum, line 87")
        else
            call tNr("Called BigNum.clean on invalid object.", "when calling error in BigNum, line 87")
        endif
    endif
    call RKr(bMr, "when calling clean in BigNum, line 87")
    set ASw = ASw - 1
endfunction
function X_u takes integer K_u, string L_u returns nothing
    set DSw[ASw] = L_u
    set ASw = ASw + 1
    call pMr(I1[K_u], "when calling clean in Encoder, line 41")
    set ASw = ASw - 1
endfunction
function LGu takes integer JGu, string KGu returns nothing
    set DSw[ASw] = KGu
    set ASw = ASw + 1
    if JV[JGu] == 0 then
        if JGu == 0 then
            call tNr("Nullpointer exception when calling Encoder.clean", "when calling error in Encoder, line 40")
        else
            call tNr("Called Encoder.clean on invalid object.", "when calling error in Encoder, line 40")
        endif
    endif
    call X_u(JGu, "when calling clean in Encoder, line 40")
    set ASw = ASw - 1
endfunction
function IKs takes integer ZKs, string UKs returns nothing
    set DSw[ASw] = UKs
    set ASw = ASw + 1
    call LGu(i4[ZKs], "when calling clean in Encoder, line 116")
    set ASw = ASw - 1
endfunction
function WVu takes string mVu returns integer
    local integer QVu
    set DSw[ASw] = mVu
    set ASw = ASw + 1
    if PC == 0 then
        if AC < 32768 then
            set AC = AC + 1
            set QVu = AC
            set DC[QVu] = 703
        else
            call tNr("Out of memory: Could not create CallbackPeriodic_doPeriodically_Voidless.", "when calling error in Voidless, line 294")
            set QVu = 0
        endif
    else
        set PC = PC - 1
        set QVu = IC[PC]
        set DC[QVu] = 703
    endif
    set ASw = ASw - 1
    return QVu
endfunction
function F8i takes string f8i returns nothing
    local integer R8i
    local integer T8i
    local integer Y8i
    local real G8i
    local real g8i
    local integer h8i
    set DSw[ASw] = f8i
    set ASw = ASw + 1
    if smt(fc[MJ]) >= 8 then
        set Y8i = 30
    else
        if smt(fc[MJ]) >= 4 then
            set T8i = 15
        else
            set T8i = 0
        endif
        set Y8i = T8i
    endif
    set R8i = Y8i
    set G8i = GetRandomReal(50. - OK - R8i, 70. - OK - R8i)
    if G8i < 10. then
        set g8i = 10.
    else
        set g8i = G8i
    endif
    set G8i = g8i
    set pK = GQ
    set h8i = WVu("when calling alloc_CallbackPeriodic_doPeriodically_Voidless in Voidless, line 294")
    call kVu(h8i)
    set Dtw[h8i] = G8i
    call wcs(1., h8i, "when calling doPeriodically in Voidless, line 294")
    set ASw = ASw - 1
endfunction
function Ntu takes integer Vtu, string Btu returns nothing
    set DSw[ASw] = Btu
    set ASw = ASw + 1
    call F8i("when calling initStageTimeCheck in Voidless, line 490")
    set ASw = ASw - 1
endfunction
function O3w takes integer i3w, string S3w returns nothing
    local integer c3w
    local integer o3w
    set DSw[ASw] = S3w
    set ASw = ASw + 1
    set HQ = HQ + s8[i3w]
    set c3w = 1
    set o3w = s8[i3w]
    loop
        exitwhen c3w > o3w
        call rsi(CreateGroup(), "when calling push in GroupUtils, line 93")
        set c3w = c3w + 1
    endloop
    set ASw = ASw - 1
endfunction
function sVt takes integer rVt returns real
    return U1[rVt]
endfunction
function meu takes integer jeu, string xeu returns real
    local real veu
    set DSw[ASw] = xeu
    set ASw = ASw + 1
    if JV[jeu] == 0 then
        if jeu == 0 then
            call tNr("Nullpointer exception when calling Encoder.length", "when calling error in Encoder, line 37")
        else
            call tNr("Called Encoder.length on invalid object.", "when calling error in Encoder, line 37")
        endif
    endif
    set veu = sVt(jeu)
    set ASw = ASw - 1
    return veu
endfunction
function rVu takes integer BCu, string NCu returns nothing
    local integer MCu
    local integer wVu
    local integer uVu
    set DSw[ASw] = NCu
    set ASw = ASw + 1
    set MCu = NN[I1[BCu]]
    set wVu = 0
    set uVu = R2I(1.0 + meu(BCu, "when calling length in Encoder, line 46"))
    loop
        exitwhen not(MCu != 0)
        set wVu = MCu
        set MCu = uM[MCu]
        set uVu = uVu - 1
    endloop
    loop
        exitwhen not(uVu > 0)
        set uM[wVu] = BAt("when calling new_BigNum_l in Encoder, line 54")
        set wVu = uM[wVu]
        set uVu = uVu - 1
    endloop
    set ASw = ASw - 1
endfunction
function m_u takes integer x_u, string v_u returns nothing
    set DSw[ASw] = v_u
    set ASw = ASw + 1
    if JV[x_u] == 0 then
        if x_u == 0 then
            call tNr("Nullpointer exception when calling Encoder.pad", "when calling error in Encoder, line 43")
        else
            call tNr("Called Encoder.pad on invalid object.", "when calling error in Encoder, line 43")
        endif
    endif
    call rVu(x_u, "when calling pad in Encoder, line 43")
    set ASw = ASw - 1
endfunction
function Pmt takes integer Umt, string Imt returns nothing
    set DSw[ASw] = Imt
    set ASw = ASw + 1
    call m_u(S4[Umt], "when calling pad in Encoder, line 118")
    set ASw = ASw - 1
endfunction
function XaS takes integer KaS, string LaS returns nothing
    set DSw[ASw] = LaS
    set ASw = ASw + 1
    call LGu(p4[KaS], "when calling clean in Encoder, line 133")
    set ASw = ASw - 1
endfunction
function DXr takes integer UXr returns integer
    local integer IXr
    local integer PXr
    local integer AXr
    call I9r("hash")
    set IXr = 0
    set AXr = NN[I1[UXr]]
    loop
        exitwhen not(AXr != 0)
        set PXr = wM[AXr]
        set IXr = ModuloInteger(IXr + 79 * IXr / (PXr + 1) + 293 * PXr / (1 + IXr - IXr / Z1[UXr] * Z1[UXr]) + 479, tv)
        set AXr = uM[AXr]
    endloop
    call I9r("hashed")
    return IXr
endfunction
function tAt takes integer uAt, string rAt returns integer
    local integer sAt
    set DSw[ASw] = rAt
    set ASw = ASw + 1
    if JV[uAt] == 0 then
        if uAt == 0 then
            call tNr("Nullpointer exception when calling Encoder.hash", "when calling error in Encoder, line 91")
        else
            call tNr("Called Encoder.hash on invalid object.", "when calling error in Encoder, line 91")
        endif
    endif
    set sAt = DXr(uAt)
    set ASw = ASw - 1
    return sAt
endfunction
function Yrt takes integer Rrt, string Trt returns nothing
    set DSw[ASw] = Trt
    set ASw = ASw + 1
    set P1[w4[Rrt]] = tAt(w4[Rrt], "when calling hash in Encoder, line 110")
    set ASw = ASw - 1
endfunction
function fyr takes integer nyr, string dyr returns nothing
    set DSw[ASw] = dyr
    set ASw = ASw + 1
    call vCi(t4[nyr], P1[t4[nyr]], tv, "when calling encode in Encoder, line 114")
    set ASw = ASw - 1
endfunction
function Ipr takes integer Upr returns nothing
endfunction
function kiS takes string hiS returns integer
    local integer FiS
    set DSw[ASw] = hiS
    set ASw = ASw + 1
    if BV == 0 then
        if NV < 32768 then
            set NV = NV + 1
            set FiS = NV
            set MV[FiS] = 1150
        else
            call tNr("Out of memory: Could not create ForForceCallback_execute_Execute.", "when calling error in Execute, line 111")
            set FiS = 0
        endif
    else
        set BV = BV - 1
        set FiS = VV[BV]
        set MV[FiS] = 1150
    endif
    set ASw = ASw - 1
    return FiS
endfunction
function Tct takes integer act, integer nct, integer dct, string fct returns nothing
    local integer Rct
    set DSw[ASw] = fct
    set ASw = ASw + 1
    set Rct = kiS("when calling alloc_ForForceCallback_execute_Execute in Execute, line 111")
    set g4[Rct] = nct
    set h4[Rct] = act
    set F4[Rct] = dct
    call ggu(Rct, "when calling execute in Execute, line 111")
    set ASw = ASw - 1
endfunction
function aOt takes integer qOt returns boolean
    return false
endfunction
function gXi takes integer TXi, string YXi returns nothing
    local integer GXi
    set DSw[ASw] = YXi
    set ASw = ASw + 1
    set GXi = 0
    loop
        exitwhen not(aOt(g4[TXi]) and GXi < h4[TXi])
        call Ipr(F4[TXi])
        set GXi = GXi + 1
    endloop
    if aOt(g4[TXi]) then
        call Tct(h4[TXi], g4[TXi], F4[TXi], "when calling executeWhileInternal in Execute, line 119")
    endif
    set ASw = ASw - 1
endfunction
function r5u takes integer w5u, string u5u returns nothing
    set DSw[ASw] = u5u
    set ASw = ASw + 1
    set D1[e4[w5u]] = tAt(e4[w5u], "when calling hash in Encoder, line 136")
    set ASw = ASw - 1
endfunction
function Pys takes string Uys returns integer
    local integer Iys
    set DSw[ASw] = Uys
    set ASw = ASw + 1
    if LV == 0 then
        if XV < 32768 then
            set XV = XV + 1
            set Iys = XV
            set CV[Iys] = 1249
        else
            call tNr("Out of memory: Could not create SeqCallback_doSeq_Encoder_Encoder.", "when calling error in Encoder, line 62")
            set Iys = 0
        endif
    else
        set LV = LV - 1
        set Iys = KV[LV]
        set CV[Iys] = 1249
    endif
    set ASw = ASw - 1
    return Iys
endfunction
function qVt takes integer OVt, integer lVt, integer bVt, string yVt returns nothing
    local integer pVt
    local integer eVt
    set DSw[ASw] = yVt
    set ASw = ASw + 1
    call I9r("toString digits: " + Uru(U1[OVt]))
    set pVt = NN[I1[OVt]]
    set eVt = Pys("when calling alloc_SeqCallback_doSeq_Encoder_Encoder in Encoder, line 62")
    call Vwr(eVt)
    set H1[eVt] = pVt
    set J1[eVt] = lVt
    set K1[eVt] = OVt
    set L1[eVt] = bVt
    call nZu(eVt, "when calling doSeq in Encoder, line 62")
    set ASw = ASw - 1
endfunction
function qru takes integer bru, integer yru, integer pru, string eru returns nothing
    set DSw[ASw] = eru
    set ASw = ASw + 1
    if JV[bru] == 0 then
        if bru == 0 then
            call tNr("Nullpointer exception when calling Encoder.toString", "when calling error in Encoder, line 59")
        else
            call tNr("Called Encoder.toString on invalid object.", "when calling error in Encoder, line 59")
        endif
    endif
    call qVt(bru, yru, pru, "when calling toString in Encoder, line 59")
    set ASw = ASw - 1
endfunction
function wbu takes integer Nlu, string Mlu returns nothing
    set DSw[ASw] = Mlu
    set ASw = ASw + 1
    call qru(c4[Nlu], o4[Nlu], O4[Nlu], "when calling toString in Encoder, line 120")
    set ASw = ASw - 1
endfunction
function wos takes integer Ncs, string Mcs returns nothing
    set DSw[ASw] = Mcs
    set ASw = ASw + 1
    set A1[y4[Ncs]] = fcr(y4[Ncs], tv, "when calling decode in Encoder, line 130")
    set ASw = ASw - 1
endfunction
function yhr takes integer lhr, string bhr returns nothing
    set DSw[ASw] = bhr
    set ASw = ASw + 1
    call LGu(M1[lhr], "when calling clean in Encoder, line 106")
    set ASw = ASw - 1
endfunction
function q_u takes integer p_u, string e_u returns nothing
    set DSw[ASw] = e_u
    set ASw = ASw + 1
    if MV[p_u] == 0 then
        if p_u == 0 then
            call tNr("Nullpointer exception when calling ForForceCallback.run", "when calling error in Execute, line 10")
        else
            call tNr("Called ForForceCallback.run on invalid object.", "when calling error in Execute, line 10")
        endif
    endif
    if MV[p_u] <= 1154 then
        if MV[p_u] <= 1151 then
            if MV[p_u] <= 1149 then
    if MV[p_u] <= 1148 then
                    call yhr(p_u, "when calling run_execute_Encoder_Encoder in Execute, line 10")
    else
                    call Yrt(p_u, "when calling run_execute_Encoder_Encoder in Execute, line 10")
    endif
            elseif MV[p_u] <= 1150 then
    call gXi(p_u, "when calling run_execute_Execute in Execute, line 10")
            else
    call O3w(p_u, "when calling run_execute_GroupUtils in Execute, line 10")
            endif
        elseif MV[p_u] <= 1153 then
            if MV[p_u] <= 1152 then
    call FgS(p_u, "when calling run_execute_Voidless in Execute, line 10")
            else
    call Ntu(p_u, "when calling run_execute_Voidless in Execute, line 10")
            endif
        else
            call wos(p_u, "when calling run_execute_fromString_Encoder_Encoder in Execute, line 10")
        endif
    elseif MV[p_u] <= 1157 then
        if MV[p_u] <= 1156 then
            if MV[p_u] <= 1155 then
    call XaS(p_u, "when calling run_execute_fromString_Encoder_Encoder in Execute, line 10")
            else
    call r5u(p_u, "when calling run_execute_fromString_Encoder_Encoder in Execute, line 10")
            endif
        else
            call fyr(p_u, "when calling run_execute_nullTimer_Encoder_Encoder in Execute, line 10")
        endif
    elseif MV[p_u] <= 1159 then
        if MV[p_u] <= 1158 then
            call IKs(p_u, "when calling run_execute_nullTimer_Encoder_Encoder in Execute, line 10")
        else
            call Pmt(p_u, "when calling run_execute_nullTimer_Encoder_Encoder in Execute, line 10")
        endif
    else
        call wbu(p_u, "when calling run_execute_nullTimer_Encoder_Encoder in Execute, line 10")
    endif
    set ASw = ASw - 1
endfunction
function vpu takes boolean xpu returns nothing
    set dv[Rv - 1] = xpu
endfunction
function fJw takes string dJw returns nothing
    set DSw[ASw] = dJw
    set ASw = ASw + 1
    set qv = ""
    call q_u(Ehu(), "when calling run in Execute, line 19")
    call vpu(true)
    set ASw = ASw - 1
endfunction
function ihS takes nothing returns nothing
    set ASw = 0
    call fJw("via function reference Execute, line 99")
endfunction
function ipi takes nothing returns boolean
    return GetUnitTypeId(GetTriggerUnit()) == 1211117875 and GetUnitTypeId(GetOrderTargetUnit()) == 1747989078 and IsPlayerInForce(GetOwningPlayer(GetTriggerUnit()), rt) and IsPlayerInForce(GetOwningPlayer(GetTriggerUnit()), ot) and IsUnitInGroup(GetTriggerUnit(), kpu(300., GetUnitLoc(GetOrderTargetUnit())))
endfunction
function eci takes nothing returns boolean
    return GetUnitTypeId(GetOrderTargetUnit()) == 1848652375 and IsPlayerInForce(GetOwningPlayer(GetTriggerUnit()), dc[$00000001]) and IsPlayerInForce(GetOwningPlayer(GetTriggerUnit()), dc[$00000002]) == false
endfunction
function iXw takes nothing returns boolean
    return GetUnitTypeId(GetOrderTargetUnit()) == 1848652373 and IsPlayerInForce(GetOwningPlayer(GetTriggerUnit()), dc[$00000001]) and IsPlayerInForce(GetOwningPlayer(GetTriggerUnit()), dc[$00000002]) == false
endfunction
function jOS takes nothing returns boolean
    return GetUnitTypeId(GetOrderTargetUnit()) == 1848652374 and IsPlayerInForce(GetOwningPlayer(GetTriggerUnit()), dc[$00000001]) and IsPlayerInForce(GetOwningPlayer(GetTriggerUnit()), dc[$00000002]) == false
endfunction
function rNw takes nothing returns boolean
    return GetUnitTypeId(GetOrderTargetUnit()) == 1848652377 and IsPlayerInForce(GetOwningPlayer(GetTriggerUnit()), dc[$00000001]) and IsPlayerInForce(GetOwningPlayer(GetTriggerUnit()), dc[$00000002]) == false
endfunction
function yYt takes nothing returns boolean
    return GetUnitTypeId(GetOrderTargetUnit()) == 1848652376 and IsPlayerInForce(GetOwningPlayer(GetTriggerUnit()), dc[$00000001]) and IsPlayerInForce(GetOwningPlayer(GetTriggerUnit()), dc[$00000002]) == false
endfunction
function iqi takes nothing returns nothing
    if iXw() then
        call DisplayTimedTextToForce(MwS(GetOwningPlayer(GetOrderedUnit())), 15., "|cffffcc00Harold|r : You looking for a deliveryman who used to work in the Wizard's Tower? There are many people who worked in the Wizard's Tower. I'm the previous deliveryman, retired out of old age.")
        call DisplayTimedTextToForce(MwS(GetOwningPlayer(GetOrderedUnit())), 5., "|cffff8c00You've found the man you're looking for!|r")
        call QuestSetDescription(JS[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))], "I've found the deliveryman. He looks old and not good in remembering things. Well, I don't know if I can get anything out from him but it is worth a shot.")
        call DisplayTimedTextToForce(MwS(GetOwningPlayer(GetOrderedUnit())), 5., "|cffff0000Quest Log has been updated. Please check Quests[F9] for more details.|r")
        call ForceAddPlayer(dc[$00000002], GetOwningPlayer(GetTriggerUnit()))
    endif
    if yYt() then
        call DisplayTextToForce(MwS(GetOwningPlayer(GetOrderedUnit())), "|cffffcc00Gregory|r : A deliveryman? I was one myself. Used to work for Skypper. Haha, he was a bossy person but then again, he pays for a good work done. I know it's unbelievable but it is true. Huh? You're looking for Wizard Hannah's deliveryman? Hmm, let's see... Oh yes! I remember Harold and I used to chat over drinks after our deliveries! I'm not sure if he worked for Wizard Hannah or not, but you may want to ask him. He usually stays near the bridge leading to the Trade Quarter these days.")
    endif
    if eci() then
        call DisplayTimedTextToForce(MwS(GetOwningPlayer(GetOrderedUnit())), 5., "|cffffcc00Pieter|r : I don't know much about this city. I just moved here. Sorry I can't be of much help.")
    endif
    if jOS() then
        call DisplayTimedTextToForce(MwS(GetOwningPlayer(GetOrderedUnit())), 12., "|cffffcc00Indigo|r : You're looking for a deliveryman? I don't know anyone here who has worked as a deliveryman before. You might want to try asking citizens near the Inn. They are well informed.")
    endif
    if rNw() then
        call DisplayTimedTextToForce(MwS(GetOwningPlayer(GetOrderedUnit())), 12., "|cffffcc00Sandra|r : My husband Gregory was a deliveryman once. I don't know about his colleagues or work areas but you might want to ask him to get more information.")
    endif
endfunction
function L3u takes nothing returns boolean
    return IsPlayerInForce(GetOwningPlayer(GetFilterUnit()), At) != true
endfunction
function o9u takes nothing returns boolean
    return IsUnitType(GetFilterUnit(), UNIT_TYPE_HERO) != false
endfunction
function irs takes nothing returns boolean
    return GetBooleanAnd(o9u(), L3u())
endfunction
function Fnu takes string Tnu returns nothing
    local player Ynu
    local integer Gnu
    local integer gnu
    local unit hnu
    set DSw[ASw] = Tnu
    set ASw = ASw + 1
    set Ynu = GetTriggerPlayer()
    set Gnu = hgr(Ynu)
    set gnu = xus(Gnu, "when calling getCustomPlayer in HeroRevive, line 43")
    set hnu = hqs(xMi(gnu, "when calling getCHero in HeroRevive, line 44"), "when calling getHero in HeroRevive, line 44")
    if not yXu(hnu) then
        call RBs(hnu, "when calling revivePreClear in HeroRevive, line 47")
        call RHt(hnu, Ynu, Gnu, "when calling reviveHeroParams in HeroRevive, line 48")
    endif
    set ASw = ASw - 1
    set Ynu = null
    set hnu = null
endfunction
function iti takes nothing returns nothing
    set ASw = 0
    call Fnu("via function reference HeroRevive, line 185")
endfunction
function HUi takes nothing returns boolean
    return RectContainsUnit(Ob, yO)
endfunction
function evu takes nothing returns boolean
    return RectContainsUnit(ob, yO)
endfunction
function jPu takes nothing returns boolean
    return RectContainsUnit(lb, yO)
endfunction
function mAr takes nothing returns boolean
    return RectContainsUnit(bb, yO)
endfunction
function sDi takes nothing returns boolean
    return RectContainsUnit(cb, yO)
endfunction
function wpu takes string Nyu returns nothing
    local unit Myu
    set DSw[ASw] = Nyu
    set ASw = ASw + 1
    call TriggerExecute(Yu)
    set Myu = hqs(xMi(tOS(GetTriggerPlayer(), "when calling getCustomPlayer in Fishing, line 227"), "when calling getCHero in Fishing, line 227"), "when calling getHero in Fishing, line 227")
    set yO = Myu
    set bO[1 + GetPlayerId(uO)] = 0
    if sDi() then
        set oO = 1
        call qas(Myu, $49303530, $00000001, "when calling giveFish in Fishing, line 234")
    elseif evu() then
        set oO = 3
        call qas(Myu, $49303531, $00000001, "when calling giveFish in Fishing, line 237")
    elseif HUi() then
        set oO = 5
        call qas(Myu, $49303538, $00000001, "when calling giveFish in Fishing, line 240")
    elseif jPu() then
        set oO = 7
        call qas(Myu, $49303536, $00000001, "when calling giveFish in Fishing, line 243")
    elseif mAr() then
        set oO = 9
        call qas(Myu, $49303539, $00000001, "when calling giveFish in Fishing, line 246")
    endif
    set ASw = ASw - 1
    set Myu = null
endfunction
function itr takes nothing returns nothing
    set ASw = 0
    call wpu("via function reference Fishing, line 300")
endfunction
function ixi takes nothing returns boolean
    return GetUnitTypeId(GetOrderTargetUnit()) == XS and IsUnitInGroup(GetTriggerUnit(), kpu(300., GetUnitLoc(GetOrderTargetUnit()))) and IsPlayerInForce(GetOwningPlayer(GetTriggerUnit()), pc[$00000007]) and BS[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))] >= 100 and VS[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))] >= 100
endfunction
function ixt takes nothing returns boolean
    return GetUnitTypeId(GetTriggerUnit()) == 1211117639 and GetUnitTypeId(GetOrderTargetUnit()) == 1747988820 and UnitHasItemOfTypeBJ(GetTriggerUnit(), $49303130) == false and IsPlayerInForce(GetOwningPlayer(GetTriggerUnit()), Vr) and IsPlayerInForce(GetOwningPlayer(GetTriggerUnit()), gs) and IsUnitInGroup(GetTriggerUnit(), kpu(300., GetUnitLoc(GetOrderTargetUnit())))
endfunction
function j2r takes nothing returns boolean
    return GetUnitTypeId(GetTriggerUnit()) == 1211117892 and GetUnitTypeId(GetOrderTargetUnit()) == 1747989300 and IsPlayerInForce(GetOwningPlayer(GetTriggerUnit()), rt) == false and IsUnitInGroup(GetTriggerUnit(), kpu(300., GetUnitLoc(GetOrderTargetUnit()))) and GetHeroLevel(GetTriggerUnit()) >= 150
endfunction
function j3i takes nothing returns boolean
    return IsUnitType(GetFilterUnit(), UNIT_TYPE_HERO) != false
endfunction
function JDr takes nothing returns boolean
    return UnitInventoryCount(GetTriggerUnit()) != 6
endfunction
function j4r takes nothing returns nothing
    if JDr() then
        call PlaySoundBJ(ce)
        set lw[GetPlayerId(GetOwningPlayer(GetTriggerUnit()))] = 1227895095
        call TriggerExecute(ow)
        call DisplayTextToForce(MwS(GetOwningPlayer(GetTriggerUnit())), "|cffffcc00Count Crowley|r : |cff87ceebBrilliant execution of those demons! Yes...yes...you might do. Very well, here is my recommendation! Never forget to vanquish all monsters and demons you find! Without exception!")
        call QuestSetDescription(Lr[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))], "I have it! I have the recommendation! Now to get back to my Class Trainer...")
    else
        call PlaySoundBJ(oe)
        call DisplayTimedTextToForce(MwS(GetOwningPlayer(GetTriggerUnit())), 7., "|cffff0000Inventory full! Cannot receive recommendation!|r")
    endif
endfunction
function j5r takes nothing returns nothing
    call IssueImmediateOrderById(GetTriggerUnit(), $000D0004)
endfunction
function j6w takes nothing returns nothing
    set bj_forLoopAIndex = 1
    set bj_forLoopAIndexEnd = 10
    loop
        exitwhen bj_forLoopAIndex > bj_forLoopAIndexEnd
        call SetPlayerAllianceBJ(Player($00000000), ALLIANCE_SHARED_CONTROL, false, Player(- 1 + bj_forLoopAIndex))
        call SetPlayerAllianceBJ(Player($00000001), ALLIANCE_SHARED_CONTROL, false, Player(- 1 + bj_forLoopAIndex))
        call SetPlayerAllianceBJ(Player($00000002), ALLIANCE_SHARED_CONTROL, false, Player(- 1 + bj_forLoopAIndex))
        call SetPlayerAllianceBJ(Player($00000003), ALLIANCE_SHARED_CONTROL, false, Player(- 1 + bj_forLoopAIndex))
        call SetPlayerAllianceBJ(Player($00000004), ALLIANCE_SHARED_CONTROL, false, Player(- 1 + bj_forLoopAIndex))
        call SetPlayerAllianceBJ(Player($00000005), ALLIANCE_SHARED_CONTROL, false, Player(- 1 + bj_forLoopAIndex))
        call SetPlayerAllianceBJ(Player($00000006), ALLIANCE_SHARED_CONTROL, false, Player(- 1 + bj_forLoopAIndex))
        call SetPlayerAllianceBJ(Player($00000007), ALLIANCE_SHARED_CONTROL, false, Player(- 1 + bj_forLoopAIndex))
        call SetPlayerAllianceBJ(Player($00000008), ALLIANCE_SHARED_CONTROL, false, Player(- 1 + bj_forLoopAIndex))
        call SetPlayerAllianceBJ(Player($00000009), ALLIANCE_SHARED_CONTROL, false, Player(- 1 + bj_forLoopAIndex))
        set bj_forLoopAIndex = bj_forLoopAIndex + 1
    endloop
endfunction
function Ubr takes nothing returns boolean
    return ds[1 + GetPlayerId(GetOwningPlayer(GetKillingUnit()))] >= 50
endfunction
function j7w takes nothing returns nothing
    set ds[1 + GetPlayerId(GetOwningPlayer(GetKillingUnit()))] = ds[1 + GetPlayerId(GetOwningPlayer(GetKillingUnit()))] + 1
    if Ubr() then
        call QuestMessageBJ(MwS(GetOwningPlayer(GetKillingUnit())), $00000002, "|cffffcc003rd Job Advancement Quest Completed|r.")
        call ForceAddPlayer(Vr, GetOwningPlayer(GetKillingUnit()))
    else
        call QuestMessageBJ(MwS(GetOwningPlayer(GetKillingUnit())), $00000001, I2S(ds[1 + GetPlayerId(GetOwningPlayer(GetKillingUnit()))]) + " Monster(s) killed.")
    endif
endfunction
function g5S takes nothing returns boolean
    return GetUnitTypeId(GetTriggerUnit()) == 1211117890
endfunction
function j9u takes nothing returns nothing
    call ForceRemovePlayer(rt, GetOwningPlayer(GetTriggerUnit()))
    call ForceRemovePlayer(Tt, GetOwningPlayer(GetTriggerUnit()))
    call ForceRemovePlayer(Gt, GetOwningPlayer(GetTriggerUnit()))
    call ForceRemovePlayer(Yt, GetOwningPlayer(GetTriggerUnit()))
    call ForceRemovePlayer(gt, GetOwningPlayer(GetTriggerUnit()))
    call DisplayTextToForce(MwS(GetOwningPlayer(GetTriggerUnit())), "|cffffcc00The Ancient One|r : |cff87ceebYou have completed your pilgrimage...well done. I can see the 4 Holy Blessings bestowed upon you. All right, I shall teach you the highest mysteries of Holy and Restoration spells...congratulations.")
    call DestroyQuest(st[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))])
    set st[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))] = null
    call SetHeroLevelBJ(GetTriggerUnit(), $00000001, false)
    if g5S() then
        call ReplaceUnitBJ(GetTriggerUnit(), $48303243, $00000002)
    else
        call ReplaceUnitBJ(GetTriggerUnit(), $48303242, $00000002)
    endif
    call SelectUnitForPlayerSingle(bj_lastReplacedUnit, GetOwningPlayer(GetTriggerUnit()))
    call SetHeroLevel(bj_lastReplacedUnit, $00000001, true)
    call UnitStripHeroLevel(bj_lastReplacedUnit, $00000001)
endfunction
function jBi takes nothing returns boolean
    return IsUnitType(GetTriggerUnit(), UNIT_TYPE_HERO) != false
endfunction
function jEi takes nothing returns nothing
    call PanCameraToTimedLocForPlayer(GetEnumPlayer(), br[1 + GetPlayerId(GetEnumPlayer())], 0.)
    set iw[GetPlayerId(GetEnumPlayer())] = GetPlayerId(GetEnumPlayer())
    set Sw[GetPlayerId(GetEnumPlayer())] = pr[wS[Ni * 100 + GetPlayerId(GetEnumPlayer())]]
endfunction
function jEr takes nothing returns boolean
    return GetSpellAbilityId() == 1093678647
endfunction
function RYS takes nothing returns boolean
    return GetSpellAbilityId() == 1093678161 or GetSpellAbilityId() == 1093679439
endfunction
function jEs takes nothing returns boolean
    return RYS()
endfunction
function b8s takes timerdialog l8s returns nothing
    call DestroyTimerDialog(l8s)
endfunction
function ekS takes integer pkS returns nothing
endfunction
function Ors takes integer crs, string ors returns nothing
    set DSw[ASw] = ors
    set ASw = ASw + 1
    if MC[crs] == 0 then
        if crs == 0 then
            call tNr("Nullpointer exception when calling CustomHero.resetStash", "when calling error in CustomHero, line 224")
        else
            call tNr("Called CustomHero.resetStash on invalid object.", "when calling error in CustomHero, line 224")
        endif
    endif
    call ekS(crs)
    set ASw = ASw - 1
endfunction
function ZTS takes unit vTS, integer mTS returns nothing
    local integer QTS = 0
    local integer WTS = dcs(vTS) - 1
    local item ETS
    loop
        exitwhen QTS > WTS
        set ETS = ofi(vTS, QTS)
        if ETS != null and hgr(v9S(ETS)) == mTS then
            call tdu(ETS)
        endif
        set QTS = QTS + 1
    endloop
    set ETS = null
endfunction
function V4u takes player J4u, string K4u returns nothing
    local integer L4u
    local integer X4u
    local unit C4u
    set DSw[ASw] = K4u
    set ASw = ASw + 1
    call EnumItemsInRectBJ(GetPlayableMapRect(), xWw)
    set L4u = c5r(gQ, "when calling iterator in PlayerUtils, line 41")
    loop
        exitwhen not Tji(L4u)
        set X4u = LXi(L4u)
        set C4u = hqs(xMi(xus(X4u, "when calling getCustomPlayer in PlayerUtils, line 42"), "when calling getCHero in PlayerUtils, line 42"), "when calling getHero in PlayerUtils, line 42")
        if C4u != null then
            call ZTS(C4u, hgr(J4u))
        endif
    endloop
    call vms(L4u, "when calling close in PlayerUtils, line 41")
    set ASw = ASw - 1
    set C4u = null
endfunction
function JaS takes integer DaS, string HaS returns nothing
    set DSw[ASw] = HaS
    set ASw = ASw + 1
    call V4u(MM[DaS], "when calling removeAllItems in CustomPlayer, line 226")
    set r3[DaS] = false
    call L5r(w3[DaS], null, "when calling replaceHeroUnit in CustomPlayer, line 233")
    call Ors(w3[DaS], "when calling resetStash in CustomPlayer, line 234")
    set ASw = ASw - 1
endfunction
function gns takes integer Yns, string Gns returns nothing
    set DSw[ASw] = Gns
    set ASw = ASw + 1
    if bV[Yns] == 0 then
        if Yns == 0 then
            call tNr("Nullpointer exception when calling CustomPlayer.resetHero", "when calling error in CustomPlayer, line 225")
        else
            call tNr("Called CustomPlayer.resetHero on invalid object.", "when calling error in CustomPlayer, line 225")
        endif
    endif
    call JaS(Yns, "when calling resetHero in CustomPlayer, line 225")
    set ASw = ASw - 1
endfunction
function ZYr takes integer WYr, string EYr returns nothing
    set DSw[ASw] = EYr
    set ASw = ASw + 1
    call gns(WYr, "when calling resetHero in CustomPlayer, line 239")
    set ASw = ASw - 1
endfunction
function kBi takes integer hBi, string FBi returns nothing
    set DSw[ASw] = FBi
    set ASw = ASw + 1
    if bV[hBi] == 0 then
        if hBi == 0 then
            call tNr("Nullpointer exception when calling CustomPlayer.onPlayerLeft", "when calling error in CustomPlayer, line 238")
        else
            call tNr("Called CustomPlayer.onPlayerLeft on invalid object.", "when calling error in CustomPlayer, line 238")
        endif
    endif
    call ZYr(hBi, "when calling onPlayerLeft in CustomPlayer, line 238")
    set ASw = ASw - 1
endfunction
function cdi takes player Nni, string Mni returns nothing
    local integer wdi
    local integer udi
    local integer rdi
    local group sdi
    local unit tdi
    local group idi
    local unit Sdi
    set DSw[ASw] = Mni
    set ASw = ASw + 1
    set wdi = hgr(Nni)
    call eys(gQ, wdi, "when calling remove in PlayerUtils, line 95")
    call kBi(GgS(Nni, "when calling getCustomPlayer in PlayerUtils, line 96"), "when calling onPlayerLeft in PlayerUtils, line 96")
    call FDt(cdr(Nni) + " has left the game.")
    call b8s(ai[1 + wdi])
    call yLt(lt, Nni)
    set Tc = lVs(Nni, Condition(vWw))
    set udi = 1
    set rdi = ko
    loop
        exitwhen udi > rdi
        if ONi(Rc[udi], Nni) then
            call yLt(Rc[udi], Nni)
            set sdi = XbS(Tc)
            loop
    exitwhen not hJw(sdi)
    set tdi = tPr(sdi)
    call Z7t(fc[udi], tdi)
            endloop
            call lxs(sdi)
            if CountUnitsInGroup(fc[udi]) == 0 then
    set lr = udi
    call lyS(LR)
            endif
        endif
        set udi = udi + 1
    endloop
    set idi = XbS(Tc)
    loop
        exitwhen not hJw(idi)
        set Sdi = tPr(idi)
        call uFr(Sdi)
    endloop
    call lxs(idi)
    if ONi(Ns, Nni) then
        call b8s(ht)
        call yLt(Ns, Nni)
        call SqS(UT)
    endif
    if ONi(At, Nni) then
        if ONi(mt, Nni) then
            set Dt = 1 + wdi
            call ForGroupBJ(lVs(vt[Dt], Condition(mWw)), QWw)
            call SetPlayerAllianceStateBJ(vt[Dt], Nni, $00000003)
            call yLt(It, vt[Dt])
            call yLt(mt, vt[Dt])
            call yLt(At, vt[Dt])
            set vt[Dt] = Player(PLAYER_NEUTRAL_PASSIVE)
        else
            set Dt = Jt[1 + wdi]
            call ForGroupBJ(lVs(Ht[Dt], Condition(WWw)), EWw)
            call SetPlayerAllianceStateBJ(Ht[Dt], Nni, $00000003)
            call yLt(It, Ht[Dt])
            call yLt(mt, Ht[Dt])
            call yLt(At, Ht[Dt])
            set Ht[Dt] = Player(PLAYER_NEUTRAL_PASSIVE)
        endif
    endif
    call Z5u(Tc)
    set ASw = ASw - 1
    set sdi = null
    set tdi = null
    set idi = null
    set Sdi = null
endfunction
function wYS takes string MTS returns nothing
    set DSw[ASw] = MTS
    set ASw = ASw + 1
    call cdi(GetTriggerPlayer(), "when calling onLeftGame in EffectCleaner, line 193")
    set ASw = ASw - 1
endfunction
function jHt takes nothing returns nothing
    set ASw = 0
    call wYS("via function reference EffectCleaner, line 193")
endfunction
function jNs takes nothing returns boolean
    local unit GNs
    local unit gNs
    local unit hNs
    local unit FNs
    local unit kNs
    set bI = 2016423985
    set yI = 1095577650
    set GNs = dps(mg, bI, KP, LP, 0.)
    call OJt(GNs, false)
    set gNs = GNs
    call V5S(gNs, xg)
    set hNs = gNs
    call Q_s(hNs, xg)
    set FNs = hNs
    call V5S(FNs, yI)
    set kNs = FNs
    call Q_s(kNs, yI)
    set GNs = null
    set gNs = null
    set hNs = null
    set FNs = null
    set kNs = null
    return true
endfunction
function SdS takes unit idS returns nothing
    if ocu(idS) then
        call VeS(ph, idS, EVENT_UNIT_DAMAGED)
    endif
endfunction
function jPs takes nothing returns nothing
    call SdS(Odr())
endfunction
function jQu takes nothing returns nothing
    call ForceAddPlayer(Fs, GetOwningPlayer(GetTriggerUnit()))
    call ForceAddPlayer(Cr, GetOwningPlayer(GetTriggerUnit()))
    call DisplayTextToForce(MwS(GetOwningPlayer(GetTriggerUnit())), "|cffffcc00Berengar the Witcher|r : |cff87ceebA letter of recommendation? Hmm, you might just do the trick... Very well, kill these monsters right here in the Forgotten Forest. Kill 50 of them, and I shall hand you a letter of recommendation.")
    call QuestSetDescription(Lr[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))], "I need to kill 50 monsters in the Forgotten Forest.")
endfunction
function jSu takes nothing returns nothing
    call ForceRemovePlayer(Tr, GetOwningPlayer(GetTriggerUnit()))
    call ForceAddPlayer(Yr, GetOwningPlayer(GetTriggerUnit()))
    call DisplayTextToForce(MwS(GetOwningPlayer(GetTriggerUnit())), "|cffffcc00Bob the Master Craftsman|r : |cff87ceebWhat? Skypper sent you? Oh it must be about that...well, go back to Skypper and tell him that I will complete it as soon as possible.")
    call QuestSetDescription(dr[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))], "I should go back to Skypper now.")
endfunction
function jUt takes nothing returns boolean
    return UnitHasBuffBJ(GetAttacker(), $42303138)
endfunction
function j_u takes nothing returns boolean
    return GetOrderTargetUnit() == SG and IsUnitInGroup(GetTriggerUnit(), kpu(300., GetUnitLoc(GetOrderTargetUnit())))
endfunction
function GcS takes string TcS returns integer
    local integer YcS
    set DSw[ASw] = TcS
    set ASw = ASw + 1
    if NX == 0 then
        if MX < 32768 then
            set MX = MX + 1
            set YcS = MX
            set wC[YcS] = 912
        else
            call tNr("Out of memory: Could not create CallbackSingle_doAfter_LockBosses.", "when calling error in LockBosses, line 50")
            set YcS = 0
        endif
    else
        set NX = NX - 1
        set YcS = BX[NX]
        set wC[YcS] = 912
    endif
    set ASw = ASw - 1
    return YcS
endfunction
function MDw takes string BDw returns boolean
    local integer NDw
    set DSw[ASw] = BDw
    set ASw = ASw + 1
    set jP = Rect(- 12416., - 5440., - 11168., - 4064.)
    set xP = Rect(- 13536., 5760., - 11648., 6912.)
    set NDw = GcS("when calling alloc_CallbackSingle_doAfter_LockBosses in LockBosses, line 50")
    call RUs(NDw)
    call Ybr(1., NDw, "when calling doAfter in LockBosses, line 50")
    set ASw = ASw - 1
    return true
endfunction
function jgs takes nothing returns boolean
    set ASw = 0
    return MDw("via function reference LockBosses, line 1")
endfunction
function jhS takes nothing returns nothing
    set Qt[1 + GetPlayerId(GetTriggerPlayer())] = GetEnumUnit()
endfunction
function jiu takes nothing returns boolean
    return GetUnitTypeId(GetEnteringUnit()) == 1211117617 and GetHeroLevel(GetEnteringUnit()) >= 10
endfunction
function xPr takes string hPr returns nothing
    local group FPr
    local group kPr
    local unit jPr
    set DSw[ASw] = hPr
    set ASw = ASw + 1
    set FPr = Dit(jP, "when calling getUnitsInRect in LockBosses, line 20")
    set kPr = XbS(FPr)
    loop
        exitwhen not hJw(kPr)
        set jPr = tPr(kPr)
        if r5S(jPr) == 1429221431 then
            call Q_s(jPr, $4176756C)
            call qaS(jPr)
        endif
    endloop
    call lxs(kPr)
    call Sju(FPr, "when calling release in LockBosses, line 25")
    set ASw = ASw - 1
    set FPr = null
    set kPr = null
    set jPr = null
endfunction
function jks takes nothing returns nothing
    set ASw = 0
    call xPr("via function reference LockBosses, line 54")
endfunction
function jni takes nothing returns nothing
    set ASw = 0
    call BWr("via function reference JobAdvancementQuestHandler, line 1005")
endfunction
function iCt takes nothing returns boolean
    return UnitInventoryCount(GetTriggerUnit()) != 6
endfunction
function jpu takes nothing returns nothing
    if iCt() then
        call PlaySoundBJ(ce)
        call AdjustPlayerStateBJ(- 1, GetOwningPlayer(GetTriggerUnit()), PLAYER_STATE_RESOURCE_LUMBER)
        set lw[GetPlayerId(GetOwningPlayer(GetTriggerUnit()))] = 1227894872
        call TriggerExecute(ow)
        call DisplayTextToForce(MwS(GetOwningPlayer(GetTriggerUnit())), "|cffffcc00Wizard Hannah|r : |cff87ceebWow, you managed to obtain a power shard eh? I'll just take that from you then. Well, you did what I asked, so I believe you earned this letter.")
        call QuestSetDescription(Lr[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))], "I have it! I have the recommendation! Now to get back to my Class Trainer...")
    else
        call PlaySoundBJ(oe)
        call DisplayTimedTextToForce(MwS(GetOwningPlayer(GetTriggerUnit())), 7., "|cffff0000Inventory full! Cannot receive recommendation!|r")
    endif
endfunction
function jrS takes nothing returns boolean
    return IsPlayerInForce(GetOwningPlayer(GetTriggerUnit()), jS) == false and sS[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))] == 2 and oS[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))] == 1
endfunction
function jrs takes nothing returns nothing
    call DisableTrigger(GetTriggeringTrigger())
endfunction
function jst takes nothing returns nothing
    call RemoveItem(GetManipulatedItem())
    call ForceAddPlayer(IS[$00000004], GetOwningPlayer(GetTriggerUnit()))
    call DisplayTextToForce(MwS(GetOwningPlayer(GetTriggerUnit())), "|cffffcc00Skypper|r : You're here to help me? Well, Im going to need 10 specimens of Water Elemental remains. I think they can be found in the Ice Dungeon, on level 2.")
    call T_i(GetOwningPlayer(GetTriggerUnit()), $00000000, "Waterworks", "Kill 10 Water Elementals and loot their watery specimen remains.", "ReplaceableTextures\\CommandButtons\\BTNSummonWaterElemental.blp")
    set oi[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))] = bj_lastCreatedQuest
endfunction
function Gxt takes nothing returns boolean
    return Po[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))] != 5
endfunction
function WPu takes nothing returns boolean
    return UnitInventoryCount(GetTriggerUnit()) <= 4
endfunction
function eWu takes nothing returns boolean
    return Po[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))] != 5
endfunction
function h5S takes nothing returns boolean
    return Io <= 80
endfunction
function oLu takes nothing returns boolean
    return Io <= 5
endfunction
function jys takes nothing returns nothing
    if WPu() then
        call TriggerExecute(Tu)
        call SetUnitFacing(GetTriggerUnit(), 180. * bj_DEGTORAD)
        call ForceAddPlayer(iO, GetOwningPlayer(GetTriggerUnit()))
        call PauseUnit(GetTriggerUnit(), true)
        call SetUnitInvulnerable(GetTriggerUnit(), true)
        call DisplayTimedTextToForce(MwS(GetOwningPlayer(GetTriggerUnit())), 5., "|cffffcc00You swing your fishing line into the water.|r")
        call UnitAddAbility(GetTriggerUnit(), $41304144)
        call n6t(GetRandomReal(1., 2.5))
        if Gxt() then
            set Io = GetRandomInt($00000001, $00000064)
            if oLu() then
    call KillUnit(GetTriggerUnit())
    call PauseUnit(GetTriggerUnit(), false)
    call SetUnitInvulnerable(GetTriggerUnit(), false)
    call ForceRemovePlayer(iO, GetOwningPlayer(GetTriggerUnit()))
    call UnitRemoveAbility(GetTriggerUnit(), $41304144)
    call DisplayTimedTextToForce(MwS(GetOwningPlayer(GetTriggerUnit())), 10., "|cffff0000KARMA! You have fallen into the river and drowned!|r\n|cff00ff00--- Courtesy of Wishing~|r")
    call TriggerExecute(Yu)
    return
            endif
        endif
        if eWu() then
            set Io = GetRandomInt($00000001, $00000064)
            if h5S() then
    call DisplayTimedTextToForce(MwS(GetOwningPlayer(GetTriggerUnit())), 5., "|cffffcc00You feel a tug on your fishing rod!|r")
    call SetCameraTargetControllerNoZForPlayer(GetOwningPlayer(GetTriggerUnit()), GetTriggerUnit(), 0., 0., false)
    set SO[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))] = 0
    set uO = GetOwningPlayer(GetTriggerUnit())
    call TriggerExecute(cY)
            else
    call PauseUnit(GetTriggerUnit(), false)
    call SetUnitInvulnerable(GetTriggerUnit(), false)
    call ForceRemovePlayer(iO, GetOwningPlayer(GetTriggerUnit()))
    call UnitRemoveAbility(GetTriggerUnit(), $41304144)
    call DisplayTimedTextToForce(MwS(GetOwningPlayer(GetTriggerUnit())), 5., "|cffffcc00There seems to be no bite.|r")
    call TriggerExecute(Yu)
            endif
        else
            call DisplayTimedTextToForce(MwS(GetOwningPlayer(GetTriggerUnit())), 5., "|cffffcc00You feel a tug on your fishing rod!|r")
            call SetCameraTargetControllerNoZForPlayer(GetOwningPlayer(GetTriggerUnit()), GetTriggerUnit(), 0., 0., false)
            set SO[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))] = 0
            set uO = GetOwningPlayer(GetTriggerUnit())
            call TriggerExecute(cY)
        endif
    else
        call PlaySoundBJ(oe)
        call DisplayTimedTextToForce(MwS(GetOwningPlayer(GetTriggerUnit())), 5., "|cffff0000Inventory must have at least 2 empty slots in order to begin fishing.|r")
        call TriggerExecute(Yu)
    endif
endfunction
function k3r takes nothing returns nothing
    call DisableTrigger(GetTriggeringTrigger())
endfunction
function k5w takes nothing returns boolean
    return GetUnitTypeId(GetDyingUnit()) == 1848652089 and IsPlayerInForce(GetOwningPlayer(GetKillingUnit()), IS[$0000000D])
endfunction
function kAr takes nothing returns boolean
    return GetUnitTypeId(GetOrderTargetUnit()) == 1747988808 and UnitHasItemOfTypeBJ(GetTriggerUnit(), $49303132) == false and IsPlayerInForce(GetOwningPlayer(GetTriggerUnit()), as) and IsPlayerInForce(GetOwningPlayer(GetTriggerUnit()), Vr) and IsUnitInGroup(GetTriggerUnit(), kpu(300., GetUnitLoc(GetOrderTargetUnit())))
endfunction
function Fnr takes nothing returns boolean
    return uc[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))] >= 40
endfunction
function WAt takes nothing returns boolean
    return qc[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))] >= 40
endfunction
function NTi takes nothing returns boolean
    return GetBooleanAnd(WAt(), Fnr())
endfunction
function kEs takes nothing returns nothing
    if NTi() then
        call ForceRemovePlayer(pc[$00000002], GetOwningPlayer(GetTriggerUnit()))
        call ForceAddPlayer(ec[$00000002], GetOwningPlayer(GetTriggerUnit()))
        call DestroyQuest(wc[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))])
        set wc[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))] = null
        call PlaySoundBJ(pe)
        call DisplayTimedTextToForce(MwS(GetOwningPlayer(GetOrderedUnit())), 5., "|cffffcc00You have completed the Quest|r.")
        call DisplayTimedTextToForce(MwS(GetOwningPlayer(GetOrderedUnit())), 25., "|cffffcc00Arnold|r : You did well, young adventurer! You've indeed proven yourself useful to the expedition team. Great! Everything is in order, and I have enough members. Get ready for our upcoming expedition and then report back to me.")
        call AddHeroXPSwapped(T, GetTriggerUnit(), true)
        call AdjustPlayerStateBJ($000013EC, GetOwningPlayer(GetTriggerUnit()), PLAYER_STATE_RESOURCE_GOLD)
        set B[(1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))) * 1000 + fkS(GetTriggerUnit())] = true
    else
        call DisplayTimedTextToForce(MwS(GetOwningPlayer(GetTriggerUnit())), 5., "|cffffcc00Arnold|r : What are you still doing here? Get a move on!")
    endif
endfunction
function kFi takes nothing returns nothing
    call SetUnitPositionLoc(GetEnumUnit(), vo)
endfunction
function mKr takes string xKr returns integer
    local integer vKr
    set DSw[ASw] = xKr
    set ASw = ASw + 1
    if rC == 0 then
        if sC < 32768 then
            set sC = sC + 1
            set vKr = sC
            set tC[vKr] = 649
        else
            call tNr("Out of memory: Could not create CallbackCounted_doPeriodicallyCounted_GrandTemplar_PsiDestruction.", "when calling error in GrandTemplar_PsiDestruction, line 47")
            set vKr = 0
        endif
    else
        set rC = rC - 1
        set vKr = uC[rC]
        set tC[vKr] = 649
    endif
    set ASw = ASw - 1
    return vKr
endfunction
function i5i takes string X2t returns nothing
    local unit C2t
    local player V2t
    local integer B2t
    local integer N2t
    local integer M2t
    local effect w5i
    local integer u5i
    local integer r5i
    local real s5i
    local integer t5i
    set DSw[ASw] = X2t
    set ASw = ASw + 1
    set C2t = GetTriggerUnit()
    set V2t = eDs(C2t)
    set B2t = hgr(V2t)
    set N2t = GetSpellAbilityId()
    set M2t = EQ + ZQ * (gir(C2t, N2t) - 1)
    if not Jyr(xQ, B2t, "when calling has in GrandTemplar_PsiDestruction, line 37") then
        call GVw(xQ, B2t, O_i(false), "when calling put in GrandTemplar_PsiDestruction, line 38")
        call GVw(vQ, B2t, $00000000, "when calling put in GrandTemplar_PsiDestruction, line 39")
    endif
    if Jyr(xQ, B2t, "when calling has in GrandTemplar_PsiDestruction, line 41") and(not TYt(wps(xQ, B2t, "when calling get in GrandTemplar_PsiDestruction, line 41"))) then
        call GVw(vQ, B2t, M2t, "when calling put in GrandTemplar_PsiDestruction, line 42")
        call GVw(xQ, B2t, O_i(true), "when calling put in GrandTemplar_PsiDestruction, line 43")
        set w5i = AddSpecialEffectTarget("Abilities/Spells/Orc/LightningShield/LightningShieldTarget.mdl", C2t, "overhead")
        call Tir(w5i, mQ, "when calling destrTimed in GrandTemplar_PsiDestruction, line 45")
        set s5i = QQ
        set t5i = aJi(mQ / QQ)
        set u5i = mKr("when calling alloc_CallbackCounted_doPeriodicallyCounted_GrandTemplar_PsiDestruction in GrandTemplar_PsiDestruction, line 47")
        call Inr(u5i)
        set w8[u5i] = C2t
        set u8[u5i] = V2t
        call l5s(s5i, t5i, u5i, "when calling doPeriodicallyCounted in GrandTemplar_PsiDestruction, line 47")
    elseif Jyr(xQ, B2t, "when calling has in GrandTemplar_PsiDestruction, line 121") and TYt(wps(xQ, B2t, "when calling get in GrandTemplar_PsiDestruction, line 121")) then
        set r5i = wps(vQ, B2t, "when calling get in GrandTemplar_PsiDestruction, line 122")
        call GVw(vQ, B2t, r5i * 2, "when calling put in GrandTemplar_PsiDestruction, line 123")
    endif
    set ASw = ASw - 1
    set C2t = null
    set V2t = null
    set w5i = null
endfunction
function kHs takes nothing returns nothing
    set ASw = 0
    call i5i("via function reference GrandTemplar_PsiDestruction, line 230")
endfunction
function kJs takes nothing returns boolean
    return IsUnitAlly(GetFilterUnit(), GetOwningPlayer(fO)) and IsUnitType(GetFilterUnit(), UNIT_TYPE_HERO) != false
endfunction
function FMr takes nothing returns nothing
    local integer GMr = 0
    local integer gMr = 0
    local integer hMr
    loop
        exitwhen not(gMr < 256)
        set hMr = 0
        loop
            exitwhen hMr > 15
            set gMr = gMr + 1
            set hMr = hMr + 1
        endloop
        set GMr = GMr + 1
    endloop
endfunction
function Geu takes nothing returns nothing
    local integer deu = 0
    local integer feu
    local integer Reu
    local integer Teu
    local integer Yeu
    loop
        exitwhen deu >= 256
        set feu = deu / 16
        set Reu = deu - feu * 16
        set Teu = feu - feu / 2 * 2
        set Yeu = Reu - Reu / 2 * 2
        set w[256 + deu] = Teu * Yeu
        set w[512 + deu] = Teu + Yeu - Teu * Yeu
        set w[768 + deu] = Teu + Yeu - 2 * Teu * Yeu
        set feu = feu / 2
        set Reu = Reu / 2
        set Teu = feu - feu / 2 * 2
        set Yeu = Reu - Reu / 2 * 2
        set w[256 + deu] = w[256 + deu] + 2 * Teu * Yeu
        set w[512 + deu] = w[512 + deu] + 2 * (Teu + Yeu - Teu * Yeu)
        set w[768 + deu] = w[768 + deu] + 2 * (Teu + Yeu - 2 * Teu * Yeu)
        set feu = feu / 2
        set Reu = Reu / 2
        set Teu = feu - feu / 2 * 2
        set Yeu = Reu - Reu / 2 * 2
        set w[256 + deu] = w[256 + deu] + 4 * Teu * Yeu
        set w[512 + deu] = w[512 + deu] + 4 * (Teu + Yeu - Teu * Yeu)
        set w[768 + deu] = w[768 + deu] + 4 * (Teu + Yeu - 2 * Teu * Yeu)
        set Teu = feu / 2
        set Yeu = Reu / 2
        set w[256 + deu] = w[256 + deu] + 8 * Teu * Yeu
        set w[512 + deu] = w[512 + deu] + 8 * (Teu + Yeu - Teu * Yeu)
        set w[768 + deu] = w[768 + deu] + 8 * (Teu + Yeu - 2 * Teu * Yeu)
        set deu = deu + 1
    endloop
    set deu = 1
    set w[$00000000] = 1
    loop
        exitwhen deu > 31
        set w[deu] = w[deu - 1] * 2
        set deu = deu + 1
    endloop
endfunction
function Njt takes nothing returns nothing
    local integer Bjt = 0
    loop
        exitwhen Bjt > 16
        set Bjt = Bjt + 1
    endloop
endfunction
function Xru takes nothing returns nothing
    local integer Kru = 0
    local integer Lru
    loop
        exitwhen not(Kru < 256)
        set Lru = 0
        loop
            exitwhen Lru > 15
            set Kru = Kru + 1
            set Lru = Lru + 1
        endloop
    endloop
endfunction
function kPs takes nothing returns boolean
    call FMr()
    call Xru()
    call Njt()
    call Geu()
    return true
endfunction
function kQt takes nothing returns nothing
    call ForceAddPlayer(Kr, GetOwningPlayer(GetTriggerUnit()))
    call DisplayTextToForce(MwS(GetOwningPlayer(GetTriggerUnit())), "|cffffcc00Class Trainer|r : |cff87ceebYou have come. I understand that you are ready, young one? Well, we shall see. Seek out the Witcher Berengar if you wish to become a Witcher. He can be found somewhere in the Forgotten Woods if I'm not wrong. If you seek to become an Inquisitor, speak to Count Crowley and you can join his fanatical group of demon-hunting slayers. He can be found in the Cathedral right here in this city. Find them, and bring back to me a letter of recommendation. I shall be waiting.")
    call PlaySoundBJ(Se)
    call T_i(GetOwningPlayer(GetTriggerUnit()), $00000000, "3rd Job Advancement Quest", "I need to choose - the ways of the Witcher or the ways of an Inquisitor.\n- Berengar the Witcher can be found somewhere in the forgotten woods.\n- Count Crowley the Grand Inquisitor can be found in the Cathedral next to the Knight Class Trainer in the city.", "ReplaceableTextures\\CommandButtons\\BTNSell.blp")
    set Lr[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))] = bj_lastCreatedQuest
    set ds[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))] = 0
endfunction
function lNi takes nothing returns integer
    return GetRandomInt($00000005, $00000007)
endfunction
function v8s takes unit j8s returns real
    local real x8s = 1.
    if c8w(j8s, BF) then
        set x8s = VU
    elseif c8w(j8s, rk) then
        set x8s = CU
    elseif c8w(j8s, uk) then
        set x8s = XU
    endif
    return x8s
endfunction
function YGr takes string uGr returns nothing
    local unit rGr
    local player sGr
    local integer tGr
    local unit iGr
    local real SGr
    local real cGr
    local real oGr
    local integer OGr
    local string lGr
    local effect bGr
    local effect yGr
    local effect pGr
    local effect eGr
    local integer qGr
    local integer aGr
    local group nGr
    local group dGr
    local unit fGr
    local real RGr
    local real TGr
    set DSw[ASw] = uGr
    set ASw = ASw + 1
    set rGr = GetEventDamageSource()
    set sGr = eDs(rGr)
    set tGr = hgr(sGr)
    set iGr = GetTriggerUnit()
    set RGr = ANw(iGr)
    set TGr = XSw
    set SGr = RGr
    set cGr = TGr
    if not Jyr(OI, tGr, "when calling has in Inspirit_Overvelde, line 78") then
        call GVw(OI, tGr, $00000000, "when calling put in Inspirit_Overvelde, line 79")
    endif
    if GetEventDamageSource() != null and GetTriggerUnit() != null and GpS(gQ, hgr(eDs(GetEventDamageSource())), "when calling has in Inspirit_Overvelde, line 81") and R9s(GetEventDamageSource(), GetTriggerUnit()) and rGr != GetTriggerUnit() and(not ESt(rGr, "when calling isStash in Inspirit_Overvelde, line 81")) then
        if wps(OI, tGr, "when calling get in Inspirit_Overvelde, line 82") == 0 then
            set oGr = v8s(rGr)
            call GVw(OI, tGr, lNi(), "when calling put in Inspirit_Overvelde, line 84")
            call Qpi(rGr, "when calling inspiritPrismUpdateIcon in Inspirit_Overvelde, line 85")
            if oGr == VU then
    call Ziu(rGr, 1000.)
            endif
            set OGr = bQs(NNs(ANw(rGr), XSw, rGr), Acw, Dcw, .03, .09, "|cff800080Overvelde!|r", 12., 2., $00000064, $00000064, $00000064, $00000000, null, "when calling _CreateTTExEntity_fading in Inspirit_Overvelde, line 90")
            set lGr = ""
            if HEi(tGr, hgr(nD), "when calling ifDisplayEffectProcs in Inspirit_Overvelde, line 92") then
    set lGr = "war3mapImported/DarkStar.mdl"
            else
    call jRu(OGr, false)
            endif
            set bGr = uSs(SGr, cGr, lGr)
            call yYi(bGr, 5., "when calling destrAdvTimed in Inspirit_Overvelde, line 96")
            set yGr = bGr
            call iNw(yGr, 4.2)
            set pGr = yGr
            call Wwu(pGr, .2)
            set eGr = pGr
            call vQs(eGr, wor(SGr, cGr) + 100.)
            set qGr = QAt(JHt(rGr, true), str(rGr, true), Q7t(rGr, true))
            set aGr = mks(rGr, $00000001)
            set nGr = LLt(SGr, cGr, LU, "when calling getUnitsInRange in Inspirit_Overvelde, line 100")
            set dGr = XbS(nGr)
            loop
    exitwhen not hJw(dGr)
    set fGr = tPr(dGr)
    if iBw(eDs(fGr), sGr) and yXu(fGr) and(not fRi(fGr)) and(not gSr(fGr, l2s(Iji("AImx", "when calling unObfuscate in Inspirit_Overvelde, line 102"), "when calling fromRawCode in Inspirit_Overvelde, line 102"))) then
                    call MSr(rGr, fGr, aGr + qGr * oGr, ATTACK_TYPE_CHAOS)
    endif
            endloop
            call lxs(dGr)
            call Sju(nGr, "when calling release in Inspirit_Overvelde, line 105")
        endif
    endif
    set ASw = ASw - 1
    set rGr = null
    set sGr = null
    set iGr = null
    set bGr = null
    set yGr = null
    set pGr = null
    set eGr = null
    set nGr = null
    set dGr = null
    set fGr = null
endfunction
function kQu takes nothing returns nothing
    set ASw = 0
    call YGr("via function reference Inspirit_Overvelde, line 124")
endfunction
function kVr takes nothing returns boolean
    return CountUnitsInGroup(SJw(ey, GetTriggerPlayer())) >= 1
endfunction
function kVt takes nothing returns nothing
    call n6t(20.)
    set Br = GetRectCenter(yp)
    call CreateNUnitsAtLoc($00000001, $6830305A, Player(PLAYER_NEUTRAL_PASSIVE), Br, 270.)
    call RemoveLocation(Br)
endfunction
function kYs takes nothing returns boolean
    return IsUnitType(GetFilterUnit(), UNIT_TYPE_HERO) != false
endfunction
function kZs takes nothing returns nothing
    set ASw = 0
    call C0t("via function reference SecurityUtils, line 24")
endfunction
function k_S takes nothing returns boolean
    return GetUnitTypeId(GetTriggerUnit()) == 1211117642 and GetOrderTargetUnit() == sG and GetHeroLevel(GetTriggerUnit()) >= 99 and IsPlayerInForce(GetOwningPlayer(GetTriggerUnit()), Kr) == false and IsUnitInGroup(GetTriggerUnit(), kpu(300., GetUnitLoc(GetOrderTargetUnit())))
endfunction
function FkS takes string gkS returns integer
    local integer hkS
    set DSw[ASw] = gkS
    set ASw = ASw + 1
    if PC == 0 then
        if AC < 32768 then
            set AC = AC + 1
            set hkS = AC
            set DC[hkS] = 711
        else
            call tNr("Out of memory: Could not create CallbackPeriodic_doPeriodically_addAction_Champion_AsuraStrike.", "when calling error in Champion_AsuraStrike, line 25")
            set hkS = 0
        endif
    else
        set PC = PC - 1
        set hkS = IC[PC]
        set DC[hkS] = 711
    endif
    set ASw = ASw - 1
    return hkS
endfunction
function dXr takes string pXr returns nothing
    local unit eXr
    local integer qXr
    local integer aXr
    local integer nXr
    set DSw[ASw] = pXr
    set ASw = ASw + 1
    set eXr = GetTriggerUnit()
    set qXr = YEi(eXr)
    if (not Jyr(Mg, qXr, "when calling has in Champion_AsuraStrike, line 24"))and r5S(eXr) == bk then
        set nXr = FkS("when calling alloc_CallbackPeriodic_doPeriodically_addAction_Champion_AsuraStrike in Champion_AsuraStrike, line 25")
        call kVu(nXr)
        set nM[nXr] = eXr
        set dM[nXr] = qXr
        set aXr = wcs(1., nXr, "when calling doPeriodically in Champion_AsuraStrike, line 25")
        call GVw(Mg, qXr, aXr, "when calling put in Champion_AsuraStrike, line 42")
    endif
    set ASw = ASw - 1
    set eXr = null
endfunction
function k_r takes nothing returns nothing
    set ASw = 0
    call dXr("via function reference Champion_AsuraStrike, line 21")
endfunction
function kbi takes nothing returns nothing
    call ForceAddPlayer(nr, GetOwningPlayer(GetTriggerUnit()))
    call DisplayTextToForce(MwS(GetOwningPlayer(GetTriggerUnit())), "|cffffcc00Class Trainer|r : |cff87ceebYoung one, I can feel the psionic potential within you. Do you wish to become an ArchTemplar and wield greater psionic powers and master a higher level of warp blade arts? If so, go out there and kill 15 bandits. Return to me when the deed is done.")
    call PlaySoundBJ(Se)
    call T_i(GetOwningPlayer(GetTriggerUnit()), $00000000, "2nd Job Advancement Quest ", "In order to become an ArchTemplar, I need to achieve perfection in my skills. I must kill 15 Bandits.", "ReplaceableTextures\\CommandButtons\\BTNHire.blp")
    set dr[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))] = bj_lastCreatedQuest
endfunction
function eMt takes string yMt returns boolean
    local boolean pMt
    set DSw[ASw] = yMt
    set ASw = ASw + 1
    set pMt = (IsPlayerInForce(GetOwningPlayer(GetEventDamageSource()), do) == false and UnitHasItemOfTypeBJ(GetEventDamageSource(), l2s(Iji("I046", "when calling unObfuscate in Fate_Effect, line 17"), "when calling fromRawCode in Fate_Effect, line 17")) and IsUnitInGroup(GetEventDamageSource(), Ec) == false and IsUnitType(GetTriggerUnit(), UNIT_TYPE_STRUCTURE) == false) != false
    set ASw = ASw - 1
    return pMt
endfunction
function kci takes nothing returns boolean
    set ASw = 0
    return eMt("via function reference Fate_Effect, line 128")
endfunction
function kcr takes nothing returns nothing
    call RemoveUnit(GetEnumUnit())
endfunction
function TMi takes string dMi returns boolean
    local trigger fMi
    local trigger RMi
    set DSw[ASw] = dMi
    set ASw = ASw + 1
    set BP = "90290958"
    set NP = l2s(Iji("A0AY", "when calling unObfuscate in NoviceMaxLevel, line 12"), "when calling fromRawCode in NoviceMaxLevel, line 12")
    set MP = l2s(Iji("A005", "when calling unObfuscate in NoviceMaxLevel, line 13"), "when calling fromRawCode in NoviceMaxLevel, line 13")
    set wA = l2s(Iji("B000", "when calling unObfuscate in NoviceMaxLevel, line 14"), "when calling fromRawCode in NoviceMaxLevel, line 14")
    set uA = "7725352735256752522767393567909090858067888727716784394067828827671965246704252587316770451545886752528710672534112735352767708439466704525245106725276731453587674052823971674088276782882767314535876740882767452584678827116784394067198839671039886731397043670470789090299090111179797979117867524515455267393567451187153909672527671684677188875252451545526740516752278735884535391667704516842567704588888767708439406782453411395288846745152765678439466770787725883987352752843527707188393290901111797979791178"
    set fMi = CreateTrigger()
    call l2w(fMi, EVENT_PLAYER_HERO_LEVEL)
    set RMi = fMi
    call B2S(RMi, uWw)
    set ASw = ASw - 1
    set fMi = null
    set RMi = null
    return true
endfunction
function kdi takes nothing returns boolean
    set ASw = 0
    return TMi("via function reference NoviceMaxLevel, line 1")
endfunction
function X1u takes nothing returns boolean
    return IsUnitType(GetEnumUnit(), UNIT_TYPE_HERO) != false
endfunction
function kgS takes nothing returns nothing
    if X1u() then
        set lr = lr + 1
        call SetUnitUserData(GetEnumUnit(), lr)
        set Hr[lr] = GetUnitX(GetEnumUnit())
        set Jr[lr] = GetUnitY(GetEnumUnit())
    endif
endfunction
function kgu takes nothing returns boolean
    return GetUnitTypeId(GetOrderTargetUnit()) == 1747988568 and IsPlayerInForce(GetOwningPlayer(GetTriggerUnit()), Nr) and IsPlayerInForce(GetOwningPlayer(GetTriggerUnit()), Vr) == false and UnitHasItemOfTypeBJ(GetTriggerUnit(), $4930304F) and IsUnitInGroup(GetTriggerUnit(), kpu(300., GetUnitLoc(GetOrderTargetUnit())))
endfunction
function u4u takes string M1u returns integer
    local integer w4u
    set DSw[ASw] = M1u
    set ASw = ASw + 1
    if NX == 0 then
        if MX < 32768 then
            set MX = MX + 1
            set w4u = MX
            set wC[w4u] = 770
        else
            call tNr("Out of memory: Could not create CallbackSingle_doAfter_EnumItemsInRect_doPeriodically_JobAdvancementQuestHandler.", "when calling error in JobAdvancementQuestHandler, line 887")
            set w4u = 0
        endif
    else
        set NX = NX - 1
        set w4u = BX[NX]
        set wC[w4u] = 770
    endif
    set ASw = ASw - 1
    return w4u
endfunction
function KXs takes string AXs returns nothing
    local item DXs
    local integer HXs
    local integer JXs
    set DSw[ASw] = AXs
    set ASw = ASw + 1
    set DXs = GetEnumItem()
    if DXs != null then
        set HXs = hgr(v9S(DXs))
        if (not GpS(Zx, HXs, "when calling has in JobAdvancementQuestHandler, line 886"))and HXs > Lh or(not GpS(px, Xdu(DXs), "when calling has in JobAdvancementQuestHandler, line 886")) then
            set JXs = u4u("when calling alloc_CallbackSingle_doAfter_EnumItemsInRect_doPeriodically_JobAdvancementQuestHandler in JobAdvancementQuestHandler, line 887")
            call RUs(JXs)
            set fww_3558[JXs] = HXs
            set Rww_1951[JXs] = DXs
            call Ybr(0.1, JXs, "when calling doAfter in JobAdvancementQuestHandler, line 887")
        endif
    endif
    set ASw = ASw - 1
    set DXs = null
endfunction
function khS takes nothing returns nothing
    set ASw = 0
    call KXs("via function reference JobAdvancementQuestHandler, line 878")
endfunction
function kis takes nothing returns boolean
    return GetUnitTypeId(GetTriggerUnit()) == 1211117624 and GetOrderTargetUnit() == tG and IsPlayerInForce(GetOwningPlayer(GetTriggerUnit()), fr) and IsUnitInGroup(GetTriggerUnit(), kpu(300., GetUnitLoc(GetOrderTargetUnit())))
endfunction
function AAt takes string IAt returns integer
    local integer PAt
    set DSw[ASw] = IAt
    set ASw = ASw + 1
    if NX == 0 then
        if MX < 32768 then
            set MX = MX + 1
            set PAt = MX
            set wC[PAt] = 737
        else
            call tNr("Out of memory: Could not create CallbackSingle_doAfter_DungeonCmds.", "when calling error in DungeonCmds, line 371")
            set PAt = 0
        endif
    else
        set NX = NX - 1
        set PAt = BX[NX]
        set wC[PAt] = 737
    endif
    set ASw = ASw - 1
    return PAt
endfunction
function CFs takes string LFs returns integer
    local integer XFs
    set DSw[ASw] = LFs
    set ASw = ASw + 1
    if NX == 0 then
        if MX < 32768 then
            set MX = MX + 1
            set XFs = MX
            set wC[XFs] = 738
        else
            call tNr("Out of memory: Could not create CallbackSingle_doAfter_DungeonCmds.", "when calling error in DungeonCmds, line 373")
            set XFs = 0
        endif
    else
        set NX = NX - 1
        set XFs = BX[NX]
        set wC[XFs] = 738
    endif
    set ASw = ASw - 1
    return XFs
endfunction
function E7S takes string Q7S returns integer
    local integer W7S
    set DSw[ASw] = Q7S
    set ASw = ASw + 1
    if NX == 0 then
        if MX < 32768 then
            set MX = MX + 1
            set W7S = MX
            set wC[W7S] = 739
        else
            call tNr("Out of memory: Could not create CallbackSingle_doAfter_DungeonCmds.", "when calling error in DungeonCmds, line 379")
            set W7S = 0
        endif
    else
        set NX = NX - 1
        set W7S = BX[NX]
        set wC[W7S] = 739
    endif
    set ASw = ASw - 1
    return W7S
endfunction
function H1w takes string A1w returns integer
    local integer D1w
    set DSw[ASw] = A1w
    set ASw = ASw + 1
    if rC == 0 then
        if sC < 32768 then
            set sC = sC + 1
            set D1w = sC
            set tC[D1w] = 648
        else
            call tNr("Out of memory: Could not create CallbackCounted_doPeriodicallyCounted_DungeonCmds.", "when calling error in DungeonCmds, line 387")
            set D1w = 0
        endif
    else
        set rC = rC - 1
        set D1w = uC[rC]
        set tC[D1w] = 648
    endif
    set ASw = ASw - 1
    return D1w
endfunction
function Ini takes string Zni returns integer
    local integer Uni
    set DSw[ASw] = Zni
    set ASw = ASw + 1
    if LC == 0 then
        if XC < 32768 then
            set XC = XC + 1
            set Uni = XC
            set CC[Uni] = 1167
        else
            call tNr("Out of memory: Could not create ForGroupCallback_forEachIn_DungeonCmds.", "when calling error in DungeonCmds, line 488")
            set Uni = 0
        endif
    else
        set LC = LC - 1
        set Uni = KC[LC]
        set CC[Uni] = 1167
    endif
    set ASw = ASw - 1
    return Uni
endfunction
function Inu takes string Znu returns integer
    local integer Unu
    set DSw[ASw] = Znu
    set ASw = ASw + 1
    if NX == 0 then
        if MX < 32768 then
            set MX = MX + 1
            set Unu = MX
            set wC[Unu] = 744
        else
            call tNr("Out of memory: Could not create CallbackSingle_doAfter_DungeonCmds.", "when calling error in DungeonCmds, line 422")
            set Unu = 0
        endif
    else
        set NX = NX - 1
        set Unu = BX[NX]
        set wC[Unu] = 744
    endif
    set ASw = ASw - 1
    return Unu
endfunction
function JyS takes string DyS returns integer
    local integer HyS
    set DSw[ASw] = DyS
    set ASw = ASw + 1
    if LC == 0 then
        if XC < 32768 then
            set XC = XC + 1
            set HyS = XC
            set CC[HyS] = 1166
        else
            call tNr("Out of memory: Could not create ForGroupCallback_forEachIn_DungeonCmds.", "when calling error in DungeonCmds, line 450")
            set HyS = 0
        endif
    else
        set LC = LC - 1
        set HyS = KC[LC]
        set CC[HyS] = 1166
    endif
    set ASw = ASw - 1
    return HyS
endfunction
function M7s takes string B7s returns integer
    local integer N7s
    set DSw[ASw] = B7s
    set ASw = ASw + 1
    if NX == 0 then
        if MX < 32768 then
            set MX = MX + 1
            set N7s = MX
            set wC[N7s] = 746
        else
            call tNr("Out of memory: Could not create CallbackSingle_doAfter_DungeonCmds.", "when calling error in DungeonCmds, line 461")
            set N7s = 0
        endif
    else
        set NX = NX - 1
        set N7s = BX[NX]
        set wC[N7s] = 746
    endif
    set ASw = ASw - 1
    return N7s
endfunction
function Wru takes string mru returns integer
    local integer Qru
    set DSw[ASw] = mru
    set ASw = ASw + 1
    if LC == 0 then
        if XC < 32768 then
            set XC = XC + 1
            set Qru = XC
            set CC[Qru] = 1164
        else
            call tNr("Out of memory: Could not create ForGroupCallback_forEachIn_DungeonCmds.", "when calling error in DungeonCmds, line 416")
            set Qru = 0
        endif
    else
        set LC = LC - 1
        set Qru = KC[LC]
        set CC[Qru] = 1164
    endif
    set ASw = ASw - 1
    return Qru
endfunction
function amt takes string emt returns integer
    local integer qmt
    set DSw[ASw] = emt
    set ASw = ASw + 1
    if NX == 0 then
        if MX < 32768 then
            set MX = MX + 1
            set qmt = MX
            set wC[qmt] = 736
        else
            call tNr("Out of memory: Could not create CallbackSingle_doAfter_DungeonCmds.", "when calling error in DungeonCmds, line 369")
            set qmt = 0
        endif
    else
        set NX = NX - 1
        set qmt = BX[NX]
        set wC[qmt] = 736
    endif
    set ASw = ASw - 1
    return qmt
endfunction
function eRu takes string yRu returns integer
    local integer pRu
    set DSw[ASw] = yRu
    set ASw = ASw + 1
    if NX == 0 then
        if MX < 32768 then
            set MX = MX + 1
            set pRu = MX
            set wC[pRu] = 740
        else
            call tNr("Out of memory: Could not create CallbackSingle_doAfter_DungeonCmds.", "when calling error in DungeonCmds, line 381")
            set pRu = 0
        endif
    else
        set NX = NX - 1
        set pRu = BX[NX]
        set wC[pRu] = 740
    endif
    set ASw = ASw - 1
    return pRu
endfunction
function iEu takes string sEu returns integer
    local integer tEu
    set DSw[ASw] = sEu
    set ASw = ASw + 1
    if NX == 0 then
        if MX < 32768 then
            set MX = MX + 1
            set tEu = MX
            set wC[tEu] = 742
        else
            call tNr("Out of memory: Could not create CallbackSingle_doAfter_DungeonCmds.", "when calling error in DungeonCmds, line 392")
            set tEu = 0
        endif
    else
        set NX = NX - 1
        set tEu = BX[NX]
        set wC[tEu] = 742
    endif
    set ASw = ASw - 1
    return tEu
endfunction
function i_r takes string s_r returns integer
    local integer t_r
    set DSw[ASw] = s_r
    set ASw = ASw + 1
    if NX == 0 then
        if MX < 32768 then
            set MX = MX + 1
            set t_r = MX
            set wC[t_r] = 745
        else
            call tNr("Out of memory: Could not create CallbackSingle_doAfter_DungeonCmds.", "when calling error in DungeonCmds, line 455")
            set t_r = 0
        endif
    else
        set NX = NX - 1
        set t_r = BX[NX]
        set wC[t_r] = 745
    endif
    set ASw = ASw - 1
    return t_r
endfunction
function lhi takes string ohi returns integer
    local integer Ohi
    set DSw[ASw] = ohi
    set ASw = ASw + 1
    if LC == 0 then
        if XC < 32768 then
            set XC = XC + 1
            set Ohi = XC
            set CC[Ohi] = 1165
        else
            call tNr("Out of memory: Could not create ForGroupCallback_forEachIn_DungeonCmds.", "when calling error in DungeonCmds, line 437")
            set Ohi = 0
        endif
    else
        set LC = LC - 1
        set Ohi = KC[LC]
        set CC[Ohi] = 1165
    endif
    set ASw = ASw - 1
    return Ohi
endfunction
function vTr takes string jTr returns integer
    local integer xTr
    set DSw[ASw] = jTr
    set ASw = ASw + 1
    if NX == 0 then
        if MX < 32768 then
            set MX = MX + 1
            set xTr = MX
            set wC[xTr] = 743
        else
            call tNr("Out of memory: Could not create CallbackSingle_doAfter_DungeonCmds.", "when calling error in DungeonCmds, line 410")
            set xTr = 0
        endif
    else
        set NX = NX - 1
        set xTr = BX[NX]
        set wC[xTr] = 743
    endif
    set ASw = ASw - 1
    return xTr
endfunction
function wct takes string LSt returns nothing
    local unit XSt
    local unit CSt
    local unit VSt
    local unit BSt
    local integer NSt
    local unit MSt
    set DSw[ASw] = LSt
    set ASw = ASw + 1
    call Hpi(vW, "when calling flush in Imp3DragonFortress, line 923")
    call u3w(QW, "when calling clear in Imp3DragonFortress, line 924")
    call u3w(gW, "when calling clear in Imp3DragonFortress, line 925")
    call yau(hW, "when calling flush in Imp3DragonFortress, line 926")
    call Hpi(mW, "when calling flush in Imp3DragonFortress, line 927")
    set AW = 0
    set XW = 0
    set kW = 0
    set jW = 0
    set xW = 0
    set PW = false
    set XSt = dps(aD[PLAYER_NEUTRAL_AGGRESSIVE], l2s(Iji("U00E", "when calling unObfuscate in Imp3DragonFortress, line 934"), "when calling fromRawCode in Imp3DragonFortress, line 934"), oQu(bl), Gcw, bj_UNIT_FACING)
    call Yis(XSt, $0000012C, false)
    set yZ = XSt
    set CSt = dps(aD[PLAYER_NEUTRAL_AGGRESSIVE], l2s(Iji("U00G", "when calling unObfuscate in Imp3DragonFortress, line 935"), "when calling fromRawCode in Imp3DragonFortress, line 935"), oQu(Ol), Gcw, bj_UNIT_FACING)
    call Yis(CSt, $0000012C, false)
    set pZ = CSt
    set VSt = dps(aD[PLAYER_NEUTRAL_AGGRESSIVE], l2s(Iji("U00F", "when calling unObfuscate in Imp3DragonFortress, line 936"), "when calling fromRawCode in Imp3DragonFortress, line 936"), oQu(ll), Gcw, bj_UNIT_FACING)
    call Yis(VSt, $0000012C, false)
    set eZ = VSt
    set BSt = dps(aD[PLAYER_NEUTRAL_AGGRESSIVE], l2s(Iji("U00H", "when calling unObfuscate in Imp3DragonFortress, line 937"), "when calling fromRawCode in Imp3DragonFortress, line 937"), oQu(ol), Gcw, bj_UNIT_FACING)
    call Yis(BSt, $0000012C, false)
    set qZ = BSt
    call aNt(gW, Aei(yZ), Aei(pZ), Aei(eZ), Aei(qZ), "when calling add in Imp3DragonFortress, line 938")
    set FW[$00000000] = yZ
    set FW[$00000001] = pZ
    set FW[$00000002] = eZ
    set FW[$00000003] = qZ
    call GVw(hW, r5S(yZ), Aei(yZ), "when calling put in Imp3DragonFortress, line 943")
    call GVw(hW, r5S(pZ), Aei(pZ), "when calling put in Imp3DragonFortress, line 944")
    call GVw(hW, r5S(eZ), Aei(eZ), "when calling put in Imp3DragonFortress, line 945")
    call GVw(hW, r5S(qZ), Aei(qZ), "when calling put in Imp3DragonFortress, line 946")
    set NSt = c5r(gW, "when calling iterator in Imp3DragonFortress, line 947")
    loop
        exitwhen not Tji(NSt)
        set MSt = iCu(LXi(NSt), "when calling unitFromIndex in Imp3DragonFortress, line 947")
        call YYu(MSt, WW)
        call GYS(MSt, xvt(WW))
    endloop
    call vms(NSt, "when calling close in Imp3DragonFortress, line 947")
    set ASw = ASw - 1
    set XSt = null
    set CSt = null
    set VSt = null
    set BSt = null
    set MSt = null
endfunction
function ytr takes string ltr returns integer
    local integer btr
    set DSw[ASw] = ltr
    set ASw = ASw + 1
    if NX == 0 then
        if MX < 32768 then
            set MX = MX + 1
            set btr = MX
            set wC[btr] = 741
        else
            call tNr("Out of memory: Could not create CallbackSingle_doAfter_DungeonCmds.", "when calling error in DungeonCmds, line 383")
            set btr = 0
        endif
    else
        set NX = NX - 1
        set btr = BX[NX]
        set wC[btr] = 741
    endif
    set ASw = ASw - 1
    return btr
endfunction
function gvt takes string mxt returns nothing
    local player Qxt
    local integer Wxt
    local integer Ext
    local integer Zxt
    local integer Uxt
    local group Ixt
    local group Pxt
    local unit Axt
    local boolean Dxt
    local rect Hxt
    local group Jxt
    local unit Kxt
    local integer Lxt
    local integer Xxt
    local integer Cxt
    local location Vxt
    local integer Bxt
    local integer Nxt
    local integer Mxt
    local integer wvt
    local integer uvt
    local integer rvt
    local integer svt
    local group tvt
    local unit ivt
    local integer Svt
    local integer cvt
    local group ovt
    local unit Ovt
    local integer lvt
    local integer bvt
    local integer yvt
    local group pvt
    local unit evt
    local player qvt
    local group avt
    local unit nvt
    local integer dvt
    local real fvt
    local group Rvt
    local group Tvt
    local group Yvt
    local group Gvt
    set DSw[ASw] = mxt
    set ASw = ASw + 1
    set Qxt = GetTriggerPlayer()
    set Wxt = hgr(Qxt)
    set Ext = xus(Wxt, "when calling getCustomPlayer in DungeonCmds, line 338")
    if not Vgt(Ext, "when calling getCommandsDisabled in DungeonCmds, line 340") then
        if not GpS(qx, Wxt, "when calling has in DungeonCmds, line 341") then
            call Nor()
            set Zxt = 1
            set Uxt = ko
            loop
    exitwhen Zxt > Uxt
    set bj_forLoopAIndex = Zxt
    if CountUnitsInGroup(SJw(Fo[Zxt], Qxt)) >= 1 and CountUnitsInGroup(fc[Zxt]) == 0 then
                    set Ixt = EXt(Fo[Zxt], Condition(Mvw))
                    set Pxt = XbS(Ixt)
                    loop
                        exitwhen not hJw(Pxt)
                        set Axt = tPr(Pxt)
                        if yXu(Axt) then
                            call GroupAddUnit(fc[Zxt], Axt)
                        endif
                    endloop
                    call lxs(Pxt)
                    if CountUnitsInGroup(fc[Zxt]) > 0 then
                        set lr = Zxt
                        set Dxt = true
                        if Zxt == nx or Zxt == dx then
                            set Hxt = null
                            if Zxt == nx then
                                set Hxt = Ox
                            elseif Zxt == dx then
                                set Hxt = lx
                            endif
                            if Hxt != null then
                                set Jxt = XbS(fc[Zxt])
                                loop
                                    exitwhen not hJw(Jxt)
                                    set Kxt = tPr(Jxt)
                                    if GpS(gQ, hgr(eDs(Kxt)), "when calling has in DungeonCmds, line 365") then
                                        call vwt(qx, hgr(eDs(Kxt)), "when calling add in DungeonCmds, line 366")
                                        call dii(Iji("Prepare yourself for the fight!", "when calling unObfuscate in DungeonCmds, line 367"), 3., eDs(Kxt))
                                        set Lxt = amt("when calling alloc_CallbackSingle_doAfter_DungeonCmds in DungeonCmds, line 369")
                                        call RUs(Lxt)
                                        set L3[Lxt] = Kxt
                                        call Ybr(.2, Lxt, "when calling doAfter in DungeonCmds, line 369")
                                        set Xxt = AAt("when calling alloc_CallbackSingle_doAfter_DungeonCmds in DungeonCmds, line 371")
                                        call RUs(Xxt)
                                        set X3[Xxt] = Kxt
                                        call Ybr(1.2, Xxt, "when calling doAfter in DungeonCmds, line 371")
                                        set Cxt = CFs("when calling alloc_CallbackSingle_doAfter_DungeonCmds in DungeonCmds, line 373")
                                        call RUs(Cxt)
                                        set C3[Cxt] = Kxt
                                        call Ybr(2.2, Cxt, "when calling doAfter in DungeonCmds, line 373")
                                    endif
                                endloop
                                call lxs(Jxt)
                                set Vxt = LMt(oQu(jo[Zxt]), Gcw)
                                set Bxt = E7S("when calling alloc_CallbackSingle_doAfter_DungeonCmds in DungeonCmds, line 379")
                                call RUs(Bxt)
                                set V3[Bxt] = Vxt
                                call Ybr(.2, Bxt, "when calling doAfter in DungeonCmds, line 379")
                                set Nxt = eRu("when calling alloc_CallbackSingle_doAfter_DungeonCmds in DungeonCmds, line 381")
                                call RUs(Nxt)
                                set B3[Nxt] = Vxt
                                call Ybr(1.2, Nxt, "when calling doAfter in DungeonCmds, line 381")
                                set Mxt = ytr("when calling alloc_CallbackSingle_doAfter_DungeonCmds in DungeonCmds, line 383")
                                call RUs(Mxt)
                                set N3[Mxt] = Vxt
                                call Ybr(2.2, Mxt, "when calling doAfter in DungeonCmds, line 383")
                                set fvt = 3. / 30.
                                set wvt = H1w("when calling alloc_CallbackCounted_doPeriodicallyCounted_DungeonCmds in DungeonCmds, line 387")
                                call Inr(wvt)
                                set M3[wvt] = Zxt
                                call l5s(fvt, $0000001E, wvt, "when calling doPeriodicallyCounted in DungeonCmds, line 387")
                                set uvt = iEu("when calling alloc_CallbackSingle_doAfter_DungeonCmds in DungeonCmds, line 392")
                                call RUs(uvt)
                                set w1[uvt] = Hxt
                                call Ybr(.4, uvt, "when calling doAfter in DungeonCmds, line 392")
                            endif
                        elseif Zxt == 10 then
                            set rvt = vTr("when calling alloc_CallbackSingle_doAfter_DungeonCmds in DungeonCmds, line 410")
                            call RUs(rvt)
                            call Ybr(3., rvt, "when calling doAfter in DungeonCmds, line 410")
                        elseif Zxt == fx then
                            if hZ then
                                call Z5u(Ixt)
                                set Rvt = fc[Zxt]
                                set svt = Wru("when calling alloc_ForGroupCallback_forEachIn_DungeonCmds in DungeonCmds, line 416")
                                call rou(Rvt, svt, "when calling forEachIn in DungeonCmds, line 416")
                                call ugu(fc[Zxt])
                                set ASw = ASw - 1
                                set Qxt = null
                                set Ixt = null
                                set Pxt = null
                                set Axt = null
                                set Hxt = null
                                set Jxt = null
                                set Kxt = null
                                set Vxt = null
                                set tvt = null
                                set ivt = null
                                set ovt = null
                                set Ovt = null
                                set pvt = null
                                set evt = null
                                set qvt = null
                                set avt = null
                                set nvt = null
                                set Rvt = null
                                set Tvt = null
                                set Yvt = null
                                set Gvt = null
                                return
                            endif
                            set tvt = XbS(fc[Zxt])
                            loop
                                exitwhen not hJw(tvt)
                                set ivt = tPr(tvt)
                                call vwt(qx, hgr(eDs(ivt)), "when calling add in DungeonCmds, line 421")
                                set Svt = Inu("when calling alloc_CallbackSingle_doAfter_DungeonCmds in DungeonCmds, line 422")
                                call RUs(Svt)
                                set s1[Svt] = ivt
                                call Ybr(3., Svt, "when calling doAfter in DungeonCmds, line 422")
                            endloop
                            call lxs(tvt)
                            call X7w("when calling initTrapChecks in DungeonCmds, line 426")
                            call Y0i("when calling imp3MazeReInitMoveUnits in DungeonCmds, line 427")
                            call OLt("when calling imp3SpikesRunLoopRestart0 in DungeonCmds, line 428")
                            call q5s("when calling imp3SpikesRunLoopRestart1 in DungeonCmds, line 429")
                            call Bfi("when calling imp3SpikesRunLoopRestart2 in DungeonCmds, line 430")
                            call GMt("when calling imp3InitCleanup in DungeonCmds, line 432")
                        elseif Zxt == Rx then
                            if uU then
                                call Z5u(Ixt)
                                set Tvt = fc[Zxt]
                                set cvt = lhi("when calling alloc_ForGroupCallback_forEachIn_DungeonCmds in DungeonCmds, line 437")
                                call rou(Tvt, cvt, "when calling forEachIn in DungeonCmds, line 437")
                                call ugu(fc[Zxt])
                                set ASw = ASw - 1
                                set Qxt = null
                                set Ixt = null
                                set Pxt = null
                                set Axt = null
                                set Hxt = null
                                set Jxt = null
                                set Kxt = null
                                set Vxt = null
                                set tvt = null
                                set ivt = null
                                set ovt = null
                                set Ovt = null
                                set pvt = null
                                set evt = null
                                set qvt = null
                                set avt = null
                                set nvt = null
                                set Rvt = null
                                set Tvt = null
                                set Yvt = null
                                set Gvt = null
                                return
                            endif
                            set ovt = XbS(fc[Zxt])
                            loop
                                exitwhen not hJw(ovt)
                                set Ovt = tPr(ovt)
                                if (not Jyr(mx, hgr(eDs(Ovt)), "when calling has in DungeonCmds, line 442"))or wps(mx, hgr(eDs(Ovt)), "when calling get in DungeonCmds, line 442") != Qx then
                                    set Dxt = false
                                    exitwhen true
                                endif
                            endloop
                            call lxs(ovt)
                            set vx = false
                            set xx = false
                        endif
                        if Dxt then
                            set vo = GetRectCenter(jo[Zxt])
                            set Yvt = fc[Zxt]
                            set lvt = JyS("when calling alloc_ForGroupCallback_forEachIn_DungeonCmds in DungeonCmds, line 450")
                            set t1[lvt] = Zxt
                            call rou(Yvt, lvt, "when calling forEachIn in DungeonCmds, line 450")
                            call TriggerExecute(KR)
                            call DisplayTimedTextToForce(Rc[Zxt], 5., Iji("|cff87ceebDungeon entered by: ", "when calling unObfuscate in DungeonCmds, line 452") + ZXr(Qxt) + "|r")
                            if Zxt == Rx then
                                set bvt = i_r("when calling alloc_CallbackSingle_doAfter_DungeonCmds in DungeonCmds, line 455")
                                call RUs(bvt)
                                call Ybr(.5, bvt, "when calling doAfter in DungeonCmds, line 455")
                            elseif Zxt == fx then
                                call wct("when calling on_imp3Enter in DungeonCmds, line 460")
                                set yvt = M7s("when calling alloc_CallbackSingle_doAfter_DungeonCmds in DungeonCmds, line 461")
                                call RUs(yvt)
                                call Ybr(.5, yvt, "when calling doAfter in DungeonCmds, line 461")
                            endif
                            set pvt = XbS(Ixt)
                            loop
                                exitwhen not hJw(pvt)
                                set evt = tPr(pvt)
                                set qvt = eDs(evt)
                                call BwS(qvt)
                                set avt = XbS(Ixt)
                                loop
                                    exitwhen not hJw(avt)
                                    set nvt = tPr(avt)
                                    call Mps(qvt, eDs(nvt))
                                endloop
                                call lxs(avt)
                            endloop
                            call lxs(pvt)
                            call RemoveLocation(vo)
                            if Zxt == nx then
                                set Yx = GQ
                            elseif Zxt == dx then
                                set Gx = GQ
                            elseif Zxt == fx then
                                set gx = GQ
                            elseif Zxt == Rx then
                                set hx = GQ
                            endif
                        else
                            set Gvt = fc[Zxt]
                            set dvt = Ini("when calling alloc_ForGroupCallback_forEachIn_DungeonCmds in DungeonCmds, line 488")
                            call rou(Gvt, dvt, "when calling forEachIn in DungeonCmds, line 488")
                            call ugu(fc[Zxt])
                        endif
                        call Z5u(Ixt)
                    else
                        call Z5u(Ixt)
                    endif
    endif
    set Zxt = Zxt + 1
            endloop
        endif
    endif
    set ASw = ASw - 1
    set Qxt = null
    set Ixt = null
    set Pxt = null
    set Axt = null
    set Hxt = null
    set Jxt = null
    set Kxt = null
    set Vxt = null
    set tvt = null
    set ivt = null
    set ovt = null
    set Ovt = null
    set pvt = null
    set evt = null
    set qvt = null
    set avt = null
    set nvt = null
    set Rvt = null
    set Tvt = null
    set Yvt = null
    set Gvt = null
endfunction
function kiu takes nothing returns nothing
    set ASw = 0
    call gvt("via function reference DungeonCmds, line 898")
endfunction
function Slt takes string tlt returns integer
    local integer ilt
    set DSw[ASw] = tlt
    set ASw = ASw + 1
    if NX == 0 then
        if MX < 32768 then
            set MX = MX + 1
            set ilt = MX
            set wC[ilt] = 750
        else
            call tNr("Out of memory: Could not create CallbackSingle_doAfter_DungeonCmds.", "when calling error in DungeonCmds, line 567")
            set ilt = 0
        endif
    else
        set NX = NX - 1
        set ilt = BX[NX]
        set wC[ilt] = 750
    endif
    set ASw = ASw - 1
    return ilt
endfunction
function mju takes integer gju, integer hju, string Fju returns nothing
    local integer kju
    local integer jju
    local integer xju
    local integer vju
    set DSw[ASw] = Fju
    set ASw = ASw + 1
    if hju >= lQ and hju <= bQ then
        set jju = Hv
        set xju = gju
        set vju = MaS(wps(Hv, gju, "when calling get in FateDestinyUnlocker, line 158"), hju)
        set kju = vju
        call GVw(jju, xju, kju, "when calling put in FateDestinyUnlocker, line 158")
        call wrS(gju, "when calling checkDestinyReached in FateDestinyUnlocker, line 161")
    endif
    set ASw = ASw - 1
endfunction
function aGS takes string bGS returns nothing
    local player yGS
    local group pGS
    local unit eGS
    local integer qGS
    set DSw[ASw] = bGS
    set ASw = ASw + 1
    set yGS = GetTriggerPlayer()
    call dii(Iji("Leaving loot area ...", "when calling unObfuscate in DungeonCmds, line 560"), 3., yGS)
    set bS = lVs(yGS, Condition(wmw))
    set pGS = XbS(bS)
    loop
        exitwhen not hJw(pGS)
        set eGS = tPr(pGS)
        call Ggr(eGS)
    endloop
    call lxs(pGS)
    call Z5u(bS)
    set qGS = Slt("when calling alloc_CallbackSingle_doAfter_DungeonCmds in DungeonCmds, line 567")
    call RUs(qGS)
    set l1[qGS] = yGS
    call Ybr(.5, qGS, "when calling doAfter in DungeonCmds, line 567")
    call BwS(yGS)
    call mju(hgr(yGS), vM[xMi(xus(hgr(yGS), "when calling getCustomPlayer in DungeonCmds, line 581"), "when calling getCHero in DungeonCmds, line 581")], "when calling onDestinyFinishDungeon in DungeonCmds, line 581")
    set vM[xMi(xus(hgr(yGS), "when calling getCustomPlayer in DungeonCmds, line 582"), "when calling getCHero in DungeonCmds, line 582")] =- 1
    set ASw = ASw - 1
    set yGS = null
    set pGS = null
    set eGS = null
endfunction
function knr takes nothing returns nothing
    set ASw = 0
    call aGS("via function reference DungeonCmds, line 904")
endfunction
function kor takes nothing returns boolean
    set ASw = 0
    return Ior("via function reference Imp3DragonFortress, line 1664")
endfunction
function kou takes nothing returns boolean
    return GetUnitTypeId(GetTriggerUnit()) == 1211117640 and GetUnitTypeId(GetOrderTargetUnit()) == 1747988817 and IsPlayerInForce(GetOwningPlayer(GetTriggerUnit()), Kr) and IsPlayerInForce(GetOwningPlayer(GetTriggerUnit()), Cr) == false and IsUnitInGroup(GetTriggerUnit(), kpu(300., GetUnitLoc(GetOrderTargetUnit())))
endfunction
function G6t takes nothing returns boolean
    return ds[1 + GetPlayerId(GetOwningPlayer(GetKillingUnit()))] >= 15
endfunction
function kps takes nothing returns nothing
    set ds[1 + GetPlayerId(GetOwningPlayer(GetKillingUnit()))] = ds[1 + GetPlayerId(GetOwningPlayer(GetKillingUnit()))] + 1
    if G6t() then
        call QuestMessageBJ(MwS(GetOwningPlayer(GetKillingUnit())), $00000002, "|cffffcc003rd Job Advancement Quest Completed|r.")
        call ForceAddPlayer(Vr, GetOwningPlayer(GetKillingUnit()))
    else
        call QuestMessageBJ(MwS(GetOwningPlayer(GetKillingUnit())), $00000001, I2S(ds[1 + GetPlayerId(GetOwningPlayer(GetKillingUnit()))]) + " Enraged Owlkin(s) slain.")
    endif
endfunction
function kst takes nothing returns boolean
    return GetUnitTypeId(GetDyingUnit()) == 1429221428 and IsPlayerInForce(GetOwningPlayer(GetKillingUnit()), Gs) and IsPlayerInForce(GetOwningPlayer(GetKillingUnit()), Vr) == false
endfunction
function oEs takes nothing returns boolean
    return GetUnitTypeId(GetDyingUnit()) == 1848652105 or GetUnitTypeId(GetDyingUnit()) == 1848652106
endfunction
function ktu takes nothing returns boolean
    return oEs() and IsPlayerInForce(GetOwningPlayer(GetKillingUnit()), rt) and GetUnitTypeId(GetKillingUnit()) == 1211117876 or GetUnitTypeId(GetKillingUnit()) == 1966092341
endfunction
function kur takes nothing returns nothing
    set Fc[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))] = GetTriggerUnit()
    set hc[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))] = GetUnitLoc(GetTriggerUnit())
    set gc[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))] = UFS(10. * I2R(GetUnitAbilityLevelSwapped(GetSpellAbilityId(), GetTriggerUnit())) + 210., GetUnitLoc(GetTriggerUnit()), Condition(byw))
    call InitHashtableBJ()
    set jc = GetLastCreatedHashtableBJ()
    call ForGroupBJ(gc[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))], yyw)
    call n6t(6.)
    call ForGroupBJ(gc[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))], pyw)
    set Fc[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))] = null
    call RemoveLocation(hc[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))])
    call DestroyGroup(gc[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))])
endfunction
function l0s takes nothing returns nothing
    if GetUnitTypeId(GetTriggerUnit()) == 1211117641 and GetUnitTypeId(GetOrderTargetUnit()) == 1747988815 and IsPlayerInForce(GetOwningPlayer(GetTriggerUnit()), Kr) and IsPlayerInForce(GetOwningPlayer(GetTriggerUnit()), Cr) == false and IsUnitInGroup(GetTriggerUnit(), kpu(300., GetUnitLoc(GetOrderTargetUnit()))) then
        call ForceAddPlayer(Ys, GetOwningPlayer(GetTriggerUnit()))
        call ForceAddPlayer(Cr, GetOwningPlayer(GetTriggerUnit()))
        call DisplayTextToForce(MwS(GetOwningPlayer(GetTriggerUnit())), "|cffffcc00Wizard Hannah|r : |cff87ceebGoodness me! You're here for a recommendation? Well, I can't just give away one, if you know what I mean. First off, I need you to do something for me. I need to acquire a certain...item, for my research. It is a power shard. Based on its powerful qualities, I can imagine that it will be difficult to obtain it, but I know that the Free Market sells some... As for its price, you will handle all payment. Think of it as...the price for a letter of recommendation.")
        call QuestSetDescription(Lr[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))], "I need to obtain a power shard. I can either buy it at the Free Market or obtain some by other means...")
    endif
endfunction
function l6t takes nothing returns nothing
    call ForceRemovePlayer(nr, GetOwningPlayer(GetTriggerUnit()))
    call ForceRemovePlayer(fr, GetOwningPlayer(GetTriggerUnit()))
    call DisplayTextToForce(MwS(GetOwningPlayer(GetTriggerUnit())), "|cffffcc00Class Trainer|r : |cff87ceebWell done! My men were secretly watching you; don't ask how. In any case, you are now fully initiated into our order! Congratulations...Knight. Perhaps one day when you are strong enough, we shall speak again.")
    call PlaySoundBJ(re)
    call DestroyQuest(dr[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))])
    call SetHeroLevelBJ(GetTriggerUnit(), $00000001, false)
    call ReplaceUnitBJ(GetTriggerUnit(), $4830304A, $00000002)
    call SelectUnitForPlayerSingle(bj_lastReplacedUnit, GetOwningPlayer(GetTriggerUnit()))
    call SetHeroLevel(bj_lastReplacedUnit, $00000001, true)
    call UnitStripHeroLevel(bj_lastReplacedUnit, $00000001)
endfunction
function lFu takes nothing returns boolean
    return IsUnitType(GetFilterUnit(), UNIT_TYPE_HERO) != false
endfunction
function Cdi takes nothing returns boolean
    return Po[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))] != 5
endfunction
function IlS takes nothing returns boolean
    return Io <= 5
endfunction
function ORs takes nothing returns boolean
    return Io <= 80
endfunction
function VOu takes nothing returns boolean
    return Po[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))] != 5
endfunction
function eii takes nothing returns boolean
    return UnitInventoryCount(GetTriggerUnit()) <= 4
endfunction
function lGt takes nothing returns nothing
    if eii() then
        call TriggerExecute(Tu)
        call SetUnitFacing(GetTriggerUnit(), 270. * bj_DEGTORAD)
        call ForceAddPlayer(iO, GetOwningPlayer(GetTriggerUnit()))
        call PauseUnit(GetTriggerUnit(), true)
        call SetUnitInvulnerable(GetTriggerUnit(), true)
        call DisplayTimedTextToForce(MwS(GetOwningPlayer(GetTriggerUnit())), 5., "|cffffcc00You swing your fishing line into the water.|r")
        call UnitAddAbility(GetTriggerUnit(), $41304144)
        call n6t(GetRandomReal(1., 2.5))
        if Cdi() then
            set Io = GetRandomInt($00000001, $00000064)
            if IlS() then
    call KillUnit(GetTriggerUnit())
    call PauseUnit(GetTriggerUnit(), false)
    call SetUnitInvulnerable(GetTriggerUnit(), false)
    call ForceRemovePlayer(iO, GetOwningPlayer(GetTriggerUnit()))
    call UnitRemoveAbility(GetTriggerUnit(), $41304144)
    call DisplayTimedTextToForce(MwS(GetOwningPlayer(GetTriggerUnit())), 10., "|cffff0000KARMA! You have fallen into the river and drowned!|r\n|cff00ff00--- Courtesy of Wishing~|r")
    call TriggerExecute(Yu)
    return
            endif
        endif
        if VOu() then
            set Io = GetRandomInt($00000001, $00000064)
            if ORs() then
    call DisplayTimedTextToForce(MwS(GetOwningPlayer(GetTriggerUnit())), 5., "|cffffcc00You feel a tug on your fishing rod!|r")
    call SetCameraTargetControllerNoZForPlayer(GetOwningPlayer(GetTriggerUnit()), GetTriggerUnit(), 0., 0., false)
    set SO[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))] = 0
    set uO = GetOwningPlayer(GetTriggerUnit())
    call TriggerExecute(cY)
            else
    call PauseUnit(GetTriggerUnit(), false)
    call SetUnitInvulnerable(GetTriggerUnit(), false)
    call ForceRemovePlayer(iO, GetOwningPlayer(GetTriggerUnit()))
    call UnitRemoveAbility(GetTriggerUnit(), $41304144)
    call DisplayTimedTextToForce(MwS(GetOwningPlayer(GetTriggerUnit())), 5., "|cffffcc00There seems to be no bite.|r")
    call TriggerExecute(Yu)
            endif
        else
            call DisplayTimedTextToForce(MwS(GetOwningPlayer(GetTriggerUnit())), 5., "|cffffcc00You feel a tug on your fishing rod!|r")
            call SetCameraTargetControllerNoZForPlayer(GetOwningPlayer(GetTriggerUnit()), GetTriggerUnit(), 0., 0., false)
            set SO[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))] = 0
            set uO = GetOwningPlayer(GetTriggerUnit())
            call TriggerExecute(cY)
        endif
    else
        call PlaySoundBJ(oe)
        call DisplayTimedTextToForce(MwS(GetOwningPlayer(GetTriggerUnit())), 5., "|cffff0000Inventory must have at least 2 empty slots in order to begin fishing.|r")
        call TriggerExecute(Yu)
    endif
endfunction
function lJt takes nothing returns boolean
    return GetUnitTypeId(GetTriggerUnit()) == 1429221425
endfunction
function lXu takes nothing returns nothing
    call ForceAddPlayer(Vr, GetOwningPlayer(GetTriggerUnit()))
    call DisplayTextToForce(MwS(GetOwningPlayer(GetTriggerUnit())), "|cffffcc00You pray silently and pour the Holy Water over your head after offering the remains of the foul creatures to the altar. Instantly, you hear Melitele speaking to you and saying, \"I bless you, my daughter, in the name of the father, the son, and the holy spirit.\"|r")
endfunction
function MLt takes string BLt returns integer
    local integer NLt
    set DSw[ASw] = BLt
    set ASw = ASw + 1
    if NX == 0 then
        if MX < 32768 then
            set MX = MX + 1
            set NLt = MX
            set wC[NLt] = 1037
        else
            call tNr("Out of memory: Could not create CallbackSingle_doAfter_addAction_doAfter_FateDestinyUnlocker.", "when calling error in FateDestinyUnlocker, line 771")
            set NLt = 0
        endif
    else
        set NX = NX - 1
        set NLt = BX[NX]
        set wC[NLt] = 1037
    endif
    set ASw = ASw - 1
    return NLt
endfunction
function SVu takes string sVu returns nothing
    local trigger tVu
    local integer iVu
    set DSw[ASw] = sVu
    set ASw = ASw + 1
    call dii(Iji("Only a true pit dog can reach his destiny.", "when calling unObfuscate in FateDestinyUnlocker, line 768"), 5., eDs(GetTriggerUnit()))
    set tVu = GetTriggeringTrigger()
    call SqS(tVu)
    set iVu = MLt("when calling alloc_CallbackSingle_doAfter_addAction_doAfter_FateDestinyUnlocker in FateDestinyUnlocker, line 771")
    call RUs(iVu)
    set I7[iVu] = tVu
    call Ybr(30., iVu, "when calling doAfter in FateDestinyUnlocker, line 771")
    set ASw = ASw - 1
    set tVu = null
endfunction
function lbr takes nothing returns nothing
    set ASw = 0
    call SVu("via function reference FateDestinyUnlocker, line 767")
endfunction
function leS takes nothing returns boolean
    set JF = 0
    return true
endfunction
function ljs takes nothing returns nothing
    call PanCameraToTimedLocForPlayer(GetEnumPlayer(), br[1 + GetPlayerId(GetEnumPlayer())], 0.)
    set iw[GetPlayerId(GetEnumPlayer())] = GetPlayerId(GetEnumPlayer())
    set Sw[GetPlayerId(GetEnumPlayer())] = pr[wS[Ni * 100 + GetPlayerId(GetEnumPlayer())]]
endfunction
function rri takes nothing returns boolean
    return GetUnitTypeId(GetTriggerUnit()) == 1211117890 or GetUnitTypeId(GetTriggerUnit()) == 1211117889
endfunction
function lrS takes nothing returns boolean
    return rri() and IsPlayerInForce(GetOwningPlayer(GetTriggerUnit()), rt) and IsPlayerInForce(GetOwningPlayer(GetTriggerUnit()), Yt) == false and GetPlayerState(GetOwningPlayer(GetTriggerUnit()), PLAYER_STATE_RESOURCE_GOLD) >= 10000
endfunction
function lrr takes nothing returns boolean
    return IsUnitType(GetTriggerUnit(), UNIT_TYPE_HERO) != false
endfunction
function gTr takes string YTr returns nothing
    local unit GTr
    set DSw[ASw] = YTr
    set ASw = ASw + 1
    set GTr = GetTriggerUnit()
    if Jyr(mH, Aei(GTr), "when calling has in AbilityMagicIcon, line 77") then
        call wHr(wps(mH, Aei(GTr), "when calling get in AbilityMagicIcon, line 78"), "when calling dispatch_CallbackPeriodic_destroyCallbackPeriodic in AbilityMagicIcon, line 78")
        call klS(mH, Aei(GTr), "when calling remove in AbilityMagicIcon, line 79")
    elseif GTr != null then
        call O7i(GTr, "when calling startGifAbilityAnimation in AbilityMagicIcon, line 82")
    endif
    set ASw = ASw - 1
    set GTr = null
endfunction
function lru takes nothing returns nothing
    set ASw = 0
    call gTr("via function reference AbilityMagicIcon, line 86")
endfunction
function nDt takes nothing returns boolean
    return hr[1 + GetPlayerId(GetOwningPlayer(GetKillingUnit()))] >= 5
endfunction
function lus takes nothing returns nothing
    set hr[1 + GetPlayerId(GetOwningPlayer(GetKillingUnit()))] = hr[1 + GetPlayerId(GetOwningPlayer(GetKillingUnit()))] + 1
    if nDt() then
        call QuestMessageBJ(MwS(GetOwningPlayer(GetKillingUnit())), $00000002, "|cffffcc00Furbolg Requirement Completed|r.")
        call ForceAddPlayer(fr, GetOwningPlayer(GetKillingUnit()))
    else
        call QuestMessageBJ(MwS(GetOwningPlayer(GetKillingUnit())), $00000001, I2S(hr[1 + GetPlayerId(GetOwningPlayer(GetKillingUnit()))]) + " Furbolg(s) killed.")
    endif
endfunction
function luu takes nothing returns boolean
    return (IsPlayerInForce(GetOwningPlayer(GetTriggerUnit()), At) == false and IsUnitType(GetTriggerUnit(), UNIT_TYPE_HERO)) != false
endfunction
function VVw takes string XVw returns integer
    local integer CVw
    set DSw[ASw] = XVw
    set ASw = ASw + 1
    if NX == 0 then
        if MX < 32768 then
            set MX = MX + 1
            set CVw = MX
            set wC[CVw] = 947
        else
            call tNr("Out of memory: Could not create CallbackSingle_doAfter_SpawnNeutralUnits.", "when calling error in SpawnNeutralUnits, line 76")
            set CVw = 0
        endif
    else
        set NX = NX - 1
        set CVw = BX[NX]
        set wC[CVw] = 947
    endif
    set ASw = ASw - 1
    return CVw
endfunction
function rPu takes string wPu returns boolean
    local integer uPu
    set DSw[ASw] = wPu
    set ASw = ASw + 1
    set uPu = VVw("when calling alloc_CallbackSingle_doAfter_SpawnNeutralUnits in SpawnNeutralUnits, line 76")
    call RUs(uPu)
    call Ybr(2., uPu, "when calling doAfter in SpawnNeutralUnits, line 76")
    set ASw = ASw - 1
    return true
endfunction
function lwt takes nothing returns boolean
    set ASw = 0
    return rPu("via function reference SpawnNeutralUnits, line 1")
endfunction
function I1w takes string Z1w returns integer
    local integer U1w
    set DSw[ASw] = Z1w
    set ASw = ASw + 1
    if NX == 0 then
        if MX < 32768 then
            set MX = MX + 1
            set U1w = MX
            set wC[U1w] = 869
        else
            call tNr("Out of memory: Could not create CallbackSingle_doAfter_Imp4.", "when calling error in Imp4, line 85")
            set U1w = 0
        endif
    else
        set NX = NX - 1
        set U1w = BX[NX]
        set wC[U1w] = 869
    endif
    set ASw = ASw - 1
    return U1w
endfunction
function yFS takes string sFS returns nothing
    local real tFS
    local real iFS
    local unit SFS
    local unit cFS
    local unit oFS
    local integer OFS
    local real lFS
    local real bFS
    set DSw[ASw] = sFS
    set ASw = ASw + 1
    set lFS = CKu(we)
    set bFS = Ccw
    set tFS = lFS
    set iFS = bFS
    set SFS = dps(aD[PLAYER_NEUTRAL_AGGRESSIVE], $65303035, tFS, iFS, bj_UNIT_FACING)
    set oFS = dps(aD[PLAYER_NEUTRAL_AGGRESSIVE], $65303034, tFS, iFS, bj_UNIT_FACING)
    call lTi(oFS, $000D0080)
    set cFS = oFS
    set OFS = I1w("when calling alloc_CallbackSingle_doAfter_Imp4 in Imp4, line 85")
    call RUs(OFS)
    set I9[OFS] = SFS
    set P9[OFS] = cFS
    call Ybr(5., OFS, "when calling doAfter in Imp4, line 85")
    set ASw = ASw - 1
    set SFS = null
    set cFS = null
    set oFS = null
endfunction
function lxi takes nothing returns nothing
    set ASw = 0
    call yFS("via function reference Imp4, line 62")
endfunction
function lxr takes nothing returns nothing
    call PlaySoundAtPointBJ(ie, 100., GetRectCenter(sp), 0.)
    call DisableTrigger(GetTriggeringTrigger())
    call TriggerSleepAction(30.)
    call EnableTrigger(GetTriggeringTrigger())
endfunction
function lxt takes nothing returns nothing
    set ASw = 0
    call jgr("via function reference JobAdvancementQuestHandler, line 1182")
endfunction
function Tii takes quest Rii returns integer
    return YEi(Rii)
endfunction
function AeS takes integer veS, item meS, string QeS returns nothing
    local player WeS
    local integer EeS
    local string ZeS
    local string UeS
    local string IeS
    local quest PeS
    set DSw[ASw] = QeS
    set ASw = ASw + 1
    if Jyr(CX, veS, "when calling has in WorldBoss_quests, line 27") then
        call dii("|cffffcc00The Angel of Clouds|r : I have already give you this task, now do it!", 5., aD[veS])
    else
        set WeS = aD[veS]
        set EeS = 0
        set ZeS = XRt(meS)
        set UeS = "The Angel of Clouds has asked me to release one of his brothers from the suffering. I saw some weird marks in various places, gotta search all of them..."
        set IeS = "ReplaceableTextures\\CommandButtons\\BTNNazgulRider.blp"
        set PeS = T_i(WeS, EeS, ZeS, UeS, IeS)
        call GVw(CX, veS, Tii(PeS), "when calling put in WorldBoss_quests, line 36")
        call dii("|cffffcc00The Angel of Clouds|r : Not all Angels are friendly to the man. Some have gone mad, turning against us, their brothers. I cannot kill a brother, and as much as it pains me, I fear for their fate, unless they are stopped. Now, find one of my Betrayed brothers and release him from his suffering!", 15., aD[veS])
    endif
    set ASw = ASw - 1
    set WeS = null
    set PeS = null
endfunction
function R6r takes string q6r returns nothing
    local item a6r
    local integer n6r
    local integer d6r
    local unit f6r
    set DSw[ASw] = q6r
    set ASw = ASw + 1
    set a6r = GetManipulatedItem()
    set n6r = q3t(a6r)
    set d6r = hgr(GetTriggerPlayer())
    set f6r = GetTriggerUnit()
    if n6r == XX and boS(f6r) == 300 then
        call AeS(d6r, a6r, "when calling startQuest_betrayedAngels in WorldBoss_quests, line 95")
    endif
    set ASw = ASw - 1
    set a6r = null
    set f6r = null
endfunction
function m2w takes nothing returns nothing
    set ASw = 0
    call R6r("via function reference WorldBoss_quests, line 88")
endfunction
function m5w takes nothing returns boolean
    return IsUnitType(GetFilterUnit(), UNIT_TYPE_HERO) != false
endfunction
function m8S takes nothing returns boolean
    return GetUnitTypeId(GetTriggerUnit()) == 1429221424 and GetUnitTypeId(GetKillingUnit()) == 1211117619 and IsPlayerInForce(GetOwningPlayer(GetKillingUnit()), nr)
endfunction
function m8i takes nothing returns boolean
    local trigger k8i
    local trigger j8i
    local integer x8i
    local integer v8i
    set ch = 900
    set oh = 3.
    set Oh = ch * 1. / 2 / oh
    set x8i = 1095577655
    set v8i = 1112354869
    set lh = x8i
    set bh = v8i
    set k8i = CreateTrigger()
    call l2w(k8i, EVENT_PLAYER_UNIT_SPELL_EFFECT)
    set j8i = k8i
    call B2S(j8i, Ivw)
    set k8i = null
    set j8i = null
    return true
endfunction
function mBu takes nothing returns nothing
    call PlaySoundAtPointBJ(qe, 100., GetRectCenter(Fl), 0.)
    call DisableTrigger(GetTriggeringTrigger())
    call TriggerSleepAction(30.)
    call EnableTrigger(GetTriggeringTrigger())
endfunction
function mFS takes nothing returns boolean
    return GetUnitTypeId(GetOrderTargetUnit()) == ct and IsUnitInGroup(GetTriggerUnit(), kpu(300., GetUnitLoc(GetOrderTargetUnit()))) and IsPlayerInForce(GetOwningPlayer(GetTriggerUnit()), pc[$00000003])
endfunction
function mFi takes nothing returns nothing
    call PauseUnit(GetEnumUnit(), false)
    call SetUnitInvulnerable(GetEnumUnit(), false)
    call UnitDamageTargetBJ(pS[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))], GetEnumUnit(), 26000., ATTACK_TYPE_CHAOS, DAMAGE_TYPE_UNIVERSAL)
    call GetPlayerId(GetOwningPlayer(GetTriggerUnit()))
    set gi = GetEnumUnit()
    set hi = 1
    set Fi = qS[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))]
    set ki = 6.
    set ji = 450.
    set xi[$00000001] = "Abilities\\Spells\\Human\\FlakCannons\\FlakTarget.mdl"
    set xi[$00000002] = "Abilities\\Weapons\\AncientProtectorMissile\\AncientProtectorMissile.mdl"
    set vi = false
    call ConditionalTriggerExecute(dT)
endfunction
function mGt takes nothing returns boolean
    return GetItemType(GetManipulatedItem()) != ITEM_TYPE_PURCHASABLE and GetItemUserData(GetManipulatedItem()) == 0
endfunction
function EXw takes integer jXw, integer xXw, integer vXw, integer mXw, string QXw returns nothing
    local integer WXw
    set DSw[ASw] = QXw
    set ASw = ASw + 1
    set WXw = xeS(xXw, Xww[wuw[jXw]], wuw[jXw], "when calling new_LLEntry in LinkedList, line 40")
    set Cww[Xww[wuw[jXw]]] = WXw
    set Xww[wuw[jXw]] = WXw
    set uuw[jXw] = uuw[jXw] + 1
    set WXw = xeS(vXw, Xww[wuw[jXw]], wuw[jXw], "when calling new_LLEntry in LinkedList, line 40")
    set Cww[Xww[wuw[jXw]]] = WXw
    set Xww[wuw[jXw]] = WXw
    set uuw[jXw] = uuw[jXw] + 1
    set WXw = xeS(mXw, Xww[wuw[jXw]], wuw[jXw], "when calling new_LLEntry in LinkedList, line 40")
    set Cww[Xww[wuw[jXw]]] = WXw
    set Xww[wuw[jXw]] = WXw
    set uuw[jXw] = uuw[jXw] + 1
    set ASw = ASw - 1
endfunction
function K6r takes integer P6r, integer A6r, integer D6r, integer H6r, string J6r returns nothing
    set DSw[ASw] = J6r
    set ASw = ASw + 1
    if yN[P6r] == 0 then
        if P6r == 0 then
            call tNr("Nullpointer exception when calling LinkedList.add", "when calling error in LinkedList, line 38")
        else
            call tNr("Called LinkedList.add on invalid object.", "when calling error in LinkedList, line 38")
        endif
    endif
    call EXw(P6r, A6r, D6r, H6r, "when calling add in LinkedList, line 38")
    set ASw = ASw - 1
endfunction
function IUi takes integer xUi, integer vUi, integer mUi, integer QUi, integer WUi, integer EUi, string ZUi returns nothing
    local integer UUi
    set DSw[ASw] = ZUi
    set ASw = ASw + 1
    set UUi = xeS(vUi, Xww[wuw[xUi]], wuw[xUi], "when calling new_LLEntry in LinkedList, line 40")
    set Cww[Xww[wuw[xUi]]] = UUi
    set Xww[wuw[xUi]] = UUi
    set uuw[xUi] = uuw[xUi] + 1
    set UUi = xeS(mUi, Xww[wuw[xUi]], wuw[xUi], "when calling new_LLEntry in LinkedList, line 40")
    set Cww[Xww[wuw[xUi]]] = UUi
    set Xww[wuw[xUi]] = UUi
    set uuw[xUi] = uuw[xUi] + 1
    set UUi = xeS(QUi, Xww[wuw[xUi]], wuw[xUi], "when calling new_LLEntry in LinkedList, line 40")
    set Cww[Xww[wuw[xUi]]] = UUi
    set Xww[wuw[xUi]] = UUi
    set uuw[xUi] = uuw[xUi] + 1
    set UUi = xeS(WUi, Xww[wuw[xUi]], wuw[xUi], "when calling new_LLEntry in LinkedList, line 40")
    set Cww[Xww[wuw[xUi]]] = UUi
    set Xww[wuw[xUi]] = UUi
    set uuw[xUi] = uuw[xUi] + 1
    set UUi = xeS(EUi, Xww[wuw[xUi]], wuw[xUi], "when calling new_LLEntry in LinkedList, line 40")
    set Cww[Xww[wuw[xUi]]] = UUi
    set Xww[wuw[xUi]] = UUi
    set uuw[xUi] = uuw[xUi] + 1
    set ASw = ASw - 1
endfunction
function LDw takes integer IDw, integer PDw, integer ADw, integer DDw, integer HDw, integer JDw, string KDw returns nothing
    set DSw[ASw] = KDw
    set ASw = ASw + 1
    if yN[IDw] == 0 then
        if IDw == 0 then
            call tNr("Nullpointer exception when calling LinkedList.add", "when calling error in LinkedList, line 38")
        else
            call tNr("Called LinkedList.add on invalid object.", "when calling error in LinkedList, line 38")
        endif
    endif
    call IUi(IDw, PDw, ADw, DDw, HDw, JDw, "when calling add in LinkedList, line 38")
    set ASw = ASw - 1
endfunction
function WTt takes string mTt returns integer
    local integer QTt
    set DSw[ASw] = mTt
    set ASw = ASw + 1
    if NX == 0 then
        if MX < 32768 then
            set MX = MX + 1
            set QTt = MX
            set wC[QTt] = 731
        else
            call tNr("Out of memory: Could not create CallbackSingle_doAfter_Critters.", "when calling error in Critters, line 222")
            set QTt = 0
        endif
    else
        set NX = NX - 1
        set QTt = BX[NX]
        set wC[QTt] = 731
    endif
    set ASw = ASw - 1
    return QTt
endfunction
function c_u takes string i_u returns integer
    local integer S_u
    set DSw[ASw] = i_u
    set ASw = ASw + 1
    if NX == 0 then
        if MX < 32768 then
            set MX = MX + 1
            set S_u = MX
            set wC[S_u] = 730
        else
            call tNr("Out of memory: Could not create CallbackSingle_doAfter_Critters.", "when calling error in Critters, line 127")
            set S_u = 0
        endif
    else
        set NX = NX - 1
        set S_u = BX[NX]
        set wC[S_u] = 730
    endif
    set ASw = ASw - 1
    return S_u
endfunction
function UDw takes integer pDw, integer eDw, integer qDw, integer aDw, integer nDw, integer dDw, integer fDw, integer RDw, integer TDw, integer YDw, integer GDw, integer gDw, integer hDw, integer FDw, integer kDw, integer jDw, integer xDw, integer vDw, integer mDw, integer QDw, integer WDw, string EDw returns nothing
    local integer ZDw
    set DSw[ASw] = EDw
    set ASw = ASw + 1
    set ZDw = xeS(eDw, Xww[wuw[pDw]], wuw[pDw], "when calling new_LLEntry in LinkedList, line 40")
    set Cww[Xww[wuw[pDw]]] = ZDw
    set Xww[wuw[pDw]] = ZDw
    set uuw[pDw] = uuw[pDw] + 1
    set ZDw = xeS(qDw, Xww[wuw[pDw]], wuw[pDw], "when calling new_LLEntry in LinkedList, line 40")
    set Cww[Xww[wuw[pDw]]] = ZDw
    set Xww[wuw[pDw]] = ZDw
    set uuw[pDw] = uuw[pDw] + 1
    set ZDw = xeS(aDw, Xww[wuw[pDw]], wuw[pDw], "when calling new_LLEntry in LinkedList, line 40")
    set Cww[Xww[wuw[pDw]]] = ZDw
    set Xww[wuw[pDw]] = ZDw
    set uuw[pDw] = uuw[pDw] + 1
    set ZDw = xeS(nDw, Xww[wuw[pDw]], wuw[pDw], "when calling new_LLEntry in LinkedList, line 40")
    set Cww[Xww[wuw[pDw]]] = ZDw
    set Xww[wuw[pDw]] = ZDw
    set uuw[pDw] = uuw[pDw] + 1
    set ZDw = xeS(dDw, Xww[wuw[pDw]], wuw[pDw], "when calling new_LLEntry in LinkedList, line 40")
    set Cww[Xww[wuw[pDw]]] = ZDw
    set Xww[wuw[pDw]] = ZDw
    set uuw[pDw] = uuw[pDw] + 1
    set ZDw = xeS(fDw, Xww[wuw[pDw]], wuw[pDw], "when calling new_LLEntry in LinkedList, line 40")
    set Cww[Xww[wuw[pDw]]] = ZDw
    set Xww[wuw[pDw]] = ZDw
    set uuw[pDw] = uuw[pDw] + 1
    set ZDw = xeS(RDw, Xww[wuw[pDw]], wuw[pDw], "when calling new_LLEntry in LinkedList, line 40")
    set Cww[Xww[wuw[pDw]]] = ZDw
    set Xww[wuw[pDw]] = ZDw
    set uuw[pDw] = uuw[pDw] + 1
    set ZDw = xeS(TDw, Xww[wuw[pDw]], wuw[pDw], "when calling new_LLEntry in LinkedList, line 40")
    set Cww[Xww[wuw[pDw]]] = ZDw
    set Xww[wuw[pDw]] = ZDw
    set uuw[pDw] = uuw[pDw] + 1
    set ZDw = xeS(YDw, Xww[wuw[pDw]], wuw[pDw], "when calling new_LLEntry in LinkedList, line 40")
    set Cww[Xww[wuw[pDw]]] = ZDw
    set Xww[wuw[pDw]] = ZDw
    set uuw[pDw] = uuw[pDw] + 1
    set ZDw = xeS(GDw, Xww[wuw[pDw]], wuw[pDw], "when calling new_LLEntry in LinkedList, line 40")
    set Cww[Xww[wuw[pDw]]] = ZDw
    set Xww[wuw[pDw]] = ZDw
    set uuw[pDw] = uuw[pDw] + 1
    set ZDw = xeS(gDw, Xww[wuw[pDw]], wuw[pDw], "when calling new_LLEntry in LinkedList, line 40")
    set Cww[Xww[wuw[pDw]]] = ZDw
    set Xww[wuw[pDw]] = ZDw
    set uuw[pDw] = uuw[pDw] + 1
    set ZDw = xeS(hDw, Xww[wuw[pDw]], wuw[pDw], "when calling new_LLEntry in LinkedList, line 40")
    set Cww[Xww[wuw[pDw]]] = ZDw
    set Xww[wuw[pDw]] = ZDw
    set uuw[pDw] = uuw[pDw] + 1
    set ZDw = xeS(FDw, Xww[wuw[pDw]], wuw[pDw], "when calling new_LLEntry in LinkedList, line 40")
    set Cww[Xww[wuw[pDw]]] = ZDw
    set Xww[wuw[pDw]] = ZDw
    set uuw[pDw] = uuw[pDw] + 1
    set ZDw = xeS(kDw, Xww[wuw[pDw]], wuw[pDw], "when calling new_LLEntry in LinkedList, line 40")
    set Cww[Xww[wuw[pDw]]] = ZDw
    set Xww[wuw[pDw]] = ZDw
    set uuw[pDw] = uuw[pDw] + 1
    set ZDw = xeS(jDw, Xww[wuw[pDw]], wuw[pDw], "when calling new_LLEntry in LinkedList, line 40")
    set Cww[Xww[wuw[pDw]]] = ZDw
    set Xww[wuw[pDw]] = ZDw
    set uuw[pDw] = uuw[pDw] + 1
    set ZDw = xeS(xDw, Xww[wuw[pDw]], wuw[pDw], "when calling new_LLEntry in LinkedList, line 40")
    set Cww[Xww[wuw[pDw]]] = ZDw
    set Xww[wuw[pDw]] = ZDw
    set uuw[pDw] = uuw[pDw] + 1
    set ZDw = xeS(vDw, Xww[wuw[pDw]], wuw[pDw], "when calling new_LLEntry in LinkedList, line 40")
    set Cww[Xww[wuw[pDw]]] = ZDw
    set Xww[wuw[pDw]] = ZDw
    set uuw[pDw] = uuw[pDw] + 1
    set ZDw = xeS(mDw, Xww[wuw[pDw]], wuw[pDw], "when calling new_LLEntry in LinkedList, line 40")
    set Cww[Xww[wuw[pDw]]] = ZDw
    set Xww[wuw[pDw]] = ZDw
    set uuw[pDw] = uuw[pDw] + 1
    set ZDw = xeS(QDw, Xww[wuw[pDw]], wuw[pDw], "when calling new_LLEntry in LinkedList, line 40")
    set Cww[Xww[wuw[pDw]]] = ZDw
    set Xww[wuw[pDw]] = ZDw
    set uuw[pDw] = uuw[pDw] + 1
    set ZDw = xeS(WDw, Xww[wuw[pDw]], wuw[pDw], "when calling new_LLEntry in LinkedList, line 40")
    set Cww[Xww[wuw[pDw]]] = ZDw
    set Xww[wuw[pDw]] = ZDw
    set uuw[pDw] = uuw[pDw] + 1
    set ASw = ASw - 1
endfunction
function k0r takes integer i0r, integer S0r, integer c0r, integer o0r, integer O0r, integer l0r, integer b0r, integer y0r, integer p0r, integer e0r, integer q0r, integer a0r, integer n0r, integer d0r, integer f0r, integer R0r, integer T0r, integer Y0r, integer G0r, integer g0r, integer h0r, string F0r returns nothing
    set DSw[ASw] = F0r
    set ASw = ASw + 1
    if yN[i0r] == 0 then
        if i0r == 0 then
            call tNr("Nullpointer exception when calling LinkedList.add", "when calling error in LinkedList, line 38")
        else
            call tNr("Called LinkedList.add on invalid object.", "when calling error in LinkedList, line 38")
        endif
    endif
    call UDw(i0r, S0r, c0r, o0r, O0r, l0r, b0r, y0r, p0r, e0r, q0r, a0r, n0r, d0r, f0r, R0r, T0r, Y0r, G0r, g0r, h0r, "when calling add in LinkedList, line 38")
    set ASw = ASw - 1
endfunction
function mVr takes string xVr returns integer
    local integer vVr
    set DSw[ASw] = xVr
    set ASw = ASw + 1
    if NX == 0 then
        if MX < 32768 then
            set MX = MX + 1
            set vVr = MX
            set wC[vVr] = 729
        else
            call tNr("Out of memory: Could not create CallbackSingle_doAfter_Critters.", "when calling error in Critters, line 123")
            set vVr = 0
        endif
    else
        set NX = NX - 1
        set vVr = BX[NX]
        set wC[vVr] = 729
    endif
    set ASw = ASw - 1
    return vVr
endfunction
function hZi takes integer aZi, integer nZi, integer dZi, integer fZi, integer RZi, integer TZi, integer YZi, string GZi returns nothing
    local integer gZi
    set DSw[ASw] = GZi
    set ASw = ASw + 1
    set gZi = xeS(nZi, Xww[wuw[aZi]], wuw[aZi], "when calling new_LLEntry in LinkedList, line 40")
    set Cww[Xww[wuw[aZi]]] = gZi
    set Xww[wuw[aZi]] = gZi
    set uuw[aZi] = uuw[aZi] + 1
    set gZi = xeS(dZi, Xww[wuw[aZi]], wuw[aZi], "when calling new_LLEntry in LinkedList, line 40")
    set Cww[Xww[wuw[aZi]]] = gZi
    set Xww[wuw[aZi]] = gZi
    set uuw[aZi] = uuw[aZi] + 1
    set gZi = xeS(fZi, Xww[wuw[aZi]], wuw[aZi], "when calling new_LLEntry in LinkedList, line 40")
    set Cww[Xww[wuw[aZi]]] = gZi
    set Xww[wuw[aZi]] = gZi
    set uuw[aZi] = uuw[aZi] + 1
    set gZi = xeS(RZi, Xww[wuw[aZi]], wuw[aZi], "when calling new_LLEntry in LinkedList, line 40")
    set Cww[Xww[wuw[aZi]]] = gZi
    set Xww[wuw[aZi]] = gZi
    set uuw[aZi] = uuw[aZi] + 1
    set gZi = xeS(TZi, Xww[wuw[aZi]], wuw[aZi], "when calling new_LLEntry in LinkedList, line 40")
    set Cww[Xww[wuw[aZi]]] = gZi
    set Xww[wuw[aZi]] = gZi
    set uuw[aZi] = uuw[aZi] + 1
    set gZi = xeS(YZi, Xww[wuw[aZi]], wuw[aZi], "when calling new_LLEntry in LinkedList, line 40")
    set Cww[Xww[wuw[aZi]]] = gZi
    set Xww[wuw[aZi]] = gZi
    set uuw[aZi] = uuw[aZi] + 1
    set ASw = ASw - 1
endfunction
function t7S takes integer V6S, integer B6S, integer N6S, integer M6S, integer w7S, integer u7S, integer r7S, string s7S returns nothing
    set DSw[ASw] = s7S
    set ASw = ASw + 1
    if yN[V6S] == 0 then
        if V6S == 0 then
            call tNr("Nullpointer exception when calling LinkedList.add", "when calling error in LinkedList, line 38")
        else
            call tNr("Called LinkedList.add on invalid object.", "when calling error in LinkedList, line 38")
        endif
    endif
    call hZi(V6S, B6S, N6S, M6S, w7S, u7S, r7S, "when calling add in LinkedList, line 38")
    set ASw = ASw - 1
endfunction
function PZr takes string xEr returns boolean
    local integer vEr
    local integer mEr
    local integer QEr
    local integer WEr
    local integer EEr
    local integer ZEr
    local integer UEr
    local integer IEr
    local integer PEr
    local integer AEr
    local integer DEr
    local integer HEr
    local integer JEr
    local integer KEr
    local integer LEr
    local integer XEr
    local integer CEr
    local integer VEr
    local integer BEr
    local integer NEr
    local integer MEr
    local integer wZr
    local integer uZr
    local integer rZr
    local integer sZr
    local integer tZr
    local integer iZr
    local integer SZr
    local integer cZr
    local integer oZr
    local integer OZr
    local integer lZr
    local integer bZr
    local integer yZr
    local integer pZr
    local integer eZr
    local integer qZr
    local integer aZr
    local integer nZr
    local integer dZr
    local integer fZr
    local integer RZr
    local integer TZr
    local integer YZr
    local integer GZr
    local integer gZr
    local integer hZr
    local string FZr
    local boolean kZr
    local string jZr
    local integer xZr
    local integer vZr
    local string mZr
    local string QZr
    local string WZr
    local integer EZr
    local string ZZr
    local string UZr
    local string IZr
    set DSw[ASw] = xEr
    set ASw = ASw + 1
    set FF = 1852010544
    set kF = 1852010545
    set jF = 1852011108
    set xF[$00000000] =- 1
    set xF[$00000001] = 1768322418
    set xF[$00000002] = 1769431412
    set xF[$00000003] = 1768319340
    set xF[$00000004] = 1768320121
    set xF[$00000005] = 1768386404
    set vF[$00000000] = 0
    set vF[$00000001] = 337
    set vF[$00000002] = 337
    set vF[$00000003] = 337
    set vF[$00000004] = 337
    set vF[$00000005] = 477
    set mF = xMr("when calling new_IterableMap in Critters, line 18")
    set QF = xMr("when calling new_IterableMap in Critters, line 19")
    set WF = xMr("when calling new_IterableMap in Critters, line 20")
    set EF = xMr("when calling new_IterableMap in Critters, line 21")
    set ZF = XQt("when calling new_LinkedList in Critters, line 22")
    set UF = "To summon or change a critter use following commands:"
    set IF = ""
    set vEr = mVr("when calling alloc_CallbackSingle_doAfter_Critters in Critters, line 123")
    call RUs(vEr)
    call Ybr(5., vEr, "when calling doAfter in Critters, line 123")
    set mEr = c_u("when calling alloc_CallbackSingle_doAfter_Critters in Critters, line 127")
    call RUs(mEr)
    call Ybr(2., mEr, "when calling doAfter in Critters, line 127")
    set QEr = 0
    set WEr = UUt($00000005)
    loop
        exitwhen QEr > WEr
        call iUr(mF, QEr, XQt("when calling new_LinkedList in Critters, line 143"), "when calling put in Critters, line 143")
        set QEr = QEr + 1
    endloop
    call t7S(wps(mF, $00000001, "when calling get in Critters, line 144"), $6E726163, $6E646572, $6E656372, $6E736865, $6E726174, $6E656368, "when calling add in Critters, line 144")
    call LDw(wps(mF, $00000002, "when calling get in Critters, line 145"), $6E637262, $6E686D63, $6E736561, $6E736B6B, $6E66726F, "when calling add in Critters, line 145")
    call K6r(wps(mF, $00000003, "when calling get in Critters, line 146"), $6E666272, $6E706967, $6E64776D, "when calling add in Critters, line 146")
    call K6r(wps(mF, $00000004, "when calling get in Critters, line 147"), $6E616C62, $6E736E6F, $6E76756C, "when calling add in Critters, line 147")
    call K6r(wps(mF, $00000005, "when calling get in Critters, line 148"), $6E706E67, $6E646F67, $6E736B65, "when calling add in Critters, line 148")
    set EEr = QF
    call iUr(EEr, $6E726163, B5r(1.), "when calling put in Critters, line 151")
    set ZEr = EEr
    call iUr(ZEr, $6E646572, B5r(0.6), "when calling put in Critters, line 152")
    set UEr = ZEr
    call iUr(UEr, $6E656372, B5r(1.), "when calling put in Critters, line 153")
    set IEr = UEr
    call iUr(IEr, $6E736865, B5r(1.), "when calling put in Critters, line 154")
    set PEr = IEr
    call iUr(PEr, $6E726174, B5r(1.), "when calling put in Critters, line 155")
    set AEr = PEr
    call iUr(AEr, $6E726163, B5r(1.), "when calling put in Critters, line 156")
    set DEr = AEr
    call iUr(DEr, $6E656368, B5r(1.), "when calling put in Critters, line 157")
    set HEr = DEr
    call iUr(HEr, $6E637262, B5r(1.), "when calling put in Critters, line 159")
    set JEr = HEr
    call iUr(JEr, $6E686D63, B5r(1.), "when calling put in Critters, line 160")
    set KEr = JEr
    call iUr(KEr, $6E736561, B5r(1.), "when calling put in Critters, line 161")
    set LEr = KEr
    call iUr(LEr, $6E736B6B, B5r(1.), "when calling put in Critters, line 162")
    set XEr = LEr
    call iUr(XEr, $6E66726F, B5r(1.), "when calling put in Critters, line 163")
    set CEr = XEr
    call iUr(CEr, $6E666272, B5r(0.7), "when calling put in Critters, line 165")
    set VEr = CEr
    call iUr(VEr, $6E706967, B5r(0.5), "when calling put in Critters, line 166")
    set BEr = VEr
    call iUr(BEr, $6E64776D, B5r(0.8), "when calling put in Critters, line 167")
    set NEr = BEr
    call iUr(NEr, $6E616C62, B5r(0.6), "when calling put in Critters, line 169")
    set MEr = NEr
    call iUr(MEr, $6E736E6F, B5r(0.6), "when calling put in Critters, line 170")
    set wZr = MEr
    call iUr(wZr, $6E76756C, B5r(0.6), "when calling put in Critters, line 171")
    set uZr = wZr
    call iUr(uZr, $6E706E67, B5r(1.), "when calling put in Critters, line 173")
    set rZr = uZr
    call iUr(rZr, $6E646F67, B5r(1.), "when calling put in Critters, line 174")
    set sZr = rZr
    call iUr(sZr, $6E736B65, B5r(0.6), "when calling put in Critters, line 175")
    set tZr = WF
    call iUr(tZr, $00000000, $6E726163, "when calling put in Critters, line 178")
    set iZr = tZr
    call iUr(iZr, $00000001, $6E646572, "when calling put in Critters, line 179")
    set SZr = iZr
    call iUr(SZr, $00000002, $6E656372, "when calling put in Critters, line 180")
    set cZr = SZr
    call iUr(cZr, $00000003, $6E736865, "when calling put in Critters, line 181")
    set oZr = cZr
    call iUr(oZr, $00000004, $6E726174, "when calling put in Critters, line 182")
    set OZr = oZr
    call iUr(OZr, $00000005, $6E656368, "when calling put in Critters, line 183")
    set lZr = OZr
    call iUr(lZr, $00000006, $6E637262, "when calling put in Critters, line 185")
    set bZr = lZr
    call iUr(bZr, $00000007, $6E686D63, "when calling put in Critters, line 186")
    set yZr = bZr
    call iUr(yZr, $00000008, $6E736561, "when calling put in Critters, line 187")
    set pZr = yZr
    call iUr(pZr, $00000009, $6E736B6B, "when calling put in Critters, line 188")
    set eZr = pZr
    call iUr(eZr, $0000000A, $6E66726F, "when calling put in Critters, line 189")
    set qZr = eZr
    call iUr(qZr, $0000000B, $6E666272, "when calling put in Critters, line 191")
    set aZr = qZr
    call iUr(aZr, $0000000C, $6E706967, "when calling put in Critters, line 192")
    set nZr = aZr
    call iUr(nZr, $0000000D, $6E64776D, "when calling put in Critters, line 193")
    set dZr = nZr
    call iUr(dZr, $0000000E, $6E616C62, "when calling put in Critters, line 195")
    set fZr = dZr
    call iUr(fZr, $0000000F, $6E736E6F, "when calling put in Critters, line 196")
    set RZr = fZr
    call iUr(RZr, $00000010, $6E76756C, "when calling put in Critters, line 197")
    set TZr = RZr
    call iUr(TZr, $00000011, $6E706E67, "when calling put in Critters, line 199")
    set YZr = TZr
    call iUr(YZr, $00000012, $6E646F67, "when calling put in Critters, line 200")
    set GZr = YZr
    call iUr(GZr, $00000013, $6E736B65, "when calling put in Critters, line 201")
    call k0r(ZF, err("Raccon", "when calling stringToIndex in Critters, line 203"), err("Deer", "when calling stringToIndex in Critters, line 203"), err("Rabbit", "when calling stringToIndex in Critters, line 203"), err("Sheep", "when calling stringToIndex in Critters, line 203"), err("Rat", "when calling stringToIndex in Critters, line 203"), err("Chicken", "when calling stringToIndex in Critters, line 203"), err("Crab", "when calling stringToIndex in Critters, line 203"), err("Hermit Crab", "when calling stringToIndex in Critters, line 203"), err("Seal", "when calling stringToIndex in Critters, line 203"), err("Skink", "when calling stringToIndex in Critters, line 203"), err("Frog", "when calling stringToIndex in Critters, line 203"), err("Fel Boar", "when calling stringToIndex in Critters, line 203"), err("Pig", "when calling stringToIndex in Critters, line 203"), err("Dune Worm", "when calling stringToIndex in Critters, line 203"), err("Albatros", "when calling stringToIndex in Critters, line 203"), err("Snowy Owl", "when calling stringToIndex in Critters, line 203"), err("Vulture", "when calling stringToIndex in Critters, line 203"), err("Penguin", "when calling stringToIndex in Critters, line 204"), err("Dog", "when calling stringToIndex in Critters, line 204"), err("Skeleton", "when calling stringToIndex in Critters, line 204"), "when calling add in Critters, line 203")
    set gZr = gJi(WF, "when calling iterator in Critters, line 206")
    loop
        exitwhen not slr(gZr, "when calling hasNext in Critters, line 206")
        set hZr = Gjs(gZr, "when calling next in Critters, line 206")
        call iUr(EF, wps(WF, hZr, "when calling get in Critters, line 207"), hZr, "when calling put in Critters, line 207")
    endloop
    call Ejr(gZr, "when calling close in Critters, line 206")
    set FZr = ""
    set jZr = "                                                                                                   "
    set xZr = 0
    set vZr = wds(ZF, "when calling size in Critters, line 212") - 1
    loop
        exitwhen xZr > vZr
        set mZr = nPr(C_r(ZF, xZr, "when calling get in Critters, line 213"), "when calling stringFromIndex in Critters, line 213")
        if ModuloReal(xZr, $00000002) == 1. then
            set kZr = true
        else
            set kZr = false
        endif
        set IZr = FZr
        set UZr = mZr + ": " + "-critter " + fju(xZr)
        if kZr then
            set WZr = "\n"
        else
            set ZZr = "          " + CAw(jZr, $00000000, JGi((9 - vQt(mZr)) * 1.5))
            if xZr >= 10 then
    set QZr = ""
            else
    set QZr = " "
            endif
            set WZr = ZZr + QZr
        endif
        set FZr = IZr + UZr + WZr
        set xZr = xZr + 1
    endloop
    set IF = IF + FZr
    set EZr = WTt("when calling alloc_CallbackSingle_doAfter_Critters in Critters, line 222")
    call RUs(EZr)
    call Ybr(2., EZr, "when calling doAfter in Critters, line 222")
    set ASw = ASw - 1
    return true
endfunction
function mHs takes nothing returns boolean
    set ASw = 0
    return PZr("via function reference Critters, line 1")
endfunction
function mNi takes nothing returns nothing
    call ForceRemovePlayer(rt, GetOwningPlayer(GetTriggerUnit()))
    call ForceRemovePlayer(ii, GetOwningPlayer(GetTriggerUnit()))
    call DisplayTextToForce(MwS(GetOwningPlayer(GetTriggerUnit())), "|cffffcc00Nazgul|r : |cff87ceebGood! Good...I see you are eager to give up your humanity for power...that is highly intriguing, for one such as you. Come, wear this cloak and become one with the darkness...")
    call DestroyQuest(st[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))])
    set st[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))] = null
    call SetHeroLevelBJ(GetTriggerUnit(), $00000001, false)
    call ReplaceUnitBJ(GetTriggerUnit(), $4830324F, $00000002)
    call SelectUnitForPlayerSingle(bj_lastReplacedUnit, GetOwningPlayer(GetTriggerUnit()))
    call SetHeroLevel(bj_lastReplacedUnit, $00000001, true)
    call UnitStripHeroLevel(bj_lastReplacedUnit, $00000001)
endfunction
function mOS takes nothing returns boolean
    return GetSpellAbilityId() == Dk or GetSpellAbilityId() == Hk or GetSpellAbilityId() == Jk or GetSpellAbilityId() == Kk
endfunction
function mQs takes nothing returns nothing
    call SetUnitInvulnerable(GetEnumUnit(), false)
    call PauseUnit(GetEnumUnit(), false)
endfunction
function mQt takes nothing returns nothing
    call RemoveItem(GetManipulatedItem())
    call ForceAddPlayer(IS[$0000000A], GetOwningPlayer(GetTriggerUnit()))
    call DisplayTextToForce(MwS(GetOwningPlayer(GetTriggerUnit())), "|cffffcc00Arnold|r : Hey stranger! Got a minute to spare? You see, I have troubles seeking a certain artifact due to my packed schedule here. Can you help me seek out three broken pieces of a powerful artifact and destroy it? The first fragment is located northeast, deep in the encampment of the Snoworcs. The second fragment is located in the cemetery behind the Wizard's Tower. The last fragment, I'm afraid, is beyond my knowledge. Find them and bring them back to me and I shall reward you handsomely for your efforts.")
    call T_i(GetOwningPlayer(GetTriggerUnit()), $00000000, "Immortal's Final Breath", "Arnold requires you to search out an ancient artifact scattered all over the regions and bring them back to him.\n|cffffcc00Clues:|r\nThe first fragment is located northeast of the city, deep in the encampment of the snoworcs. That fragment is guarded by an army of snoworcs.\nThe second fragment is located in the cemetery behind the Wizard's Tower, which is filled with bloodthirsty maniacs who will not hesitate to kill any living thing they see.\nThe third fragment is located somewhere in the Land of Silvasia...it might be quite a task to find it.", "ReplaceableTextures\\CommandButtons\\BTN3M3.blp")
    set St[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))] = bj_lastCreatedQuest
endfunction
function mWi takes nothing returns boolean
    local real FWi = 0.
    local real kWi = 0.
    local real jWi
    local real xWi
    local real vWi
    set LJ = FWi
    set XJ = kWi
    set jWi = 0.
    set xWi = 0.
    set vWi = 0.
    set CJ = jWi
    set VJ = xWi
    set BJ = vWi
    set NJ = Location(0., 0.)
    return true
endfunction
function mci takes nothing returns nothing
    call ForceAddPlayer(rt, GetOwningPlayer(GetTriggerUnit()))
    call DisplayTextToForce(MwS(GetOwningPlayer(GetTriggerUnit())), "|cffffcc00The Ancient One|r : |cff87ceebAre you surprised by my appearance, young one? I am blessed indeed to hold the the greatest secrets of Holy magic and be granted them by the Highfather himself. But secrets of such value has a price. I shall teach you the holiest of all magics, the greatest of all known restoration spells...if you go on the Holy Pilgrimage. Visit the Altar of Melitele, the Shrine of the Highfather, the Holy Fountain, the Statue of Peace and return to me. Oh, and don't forget to bring each of the holy sites a huge sum of gold for sacrificial purposes. Do this, and return to me.")
    call PlaySoundBJ(Se)
    call T_i(GetOwningPlayer(GetTriggerUnit()), $00000000, "4th Job Advancement Quest", "I need to visit 4 Holy sites and sacrifice a huge sum of gold at each of the sites.\n- The Altar of Melitele\n- The Shrine of the Highfather\n- The Holy Fountain\n- The Statue of Peace", "ReplaceableTextures\\PassiveButtons\\PASBTNGenericSpellImmunity.blp")
    set st[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))] = bj_lastCreatedQuest
    set kt[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))] = 0
endfunction
function AUu takes nothing returns boolean
    return IsUnitInGroup(GetTriggerUnit(), yo) == false
endfunction
function mdi takes nothing returns nothing
    set bo[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))] = bo[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))] + 1
    if AUu() then
        call GroupAddUnit(yo, GetTriggerUnit())
        call n6t(5.)
        set bo[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))] = 0
        call GroupRemoveUnit(yo, GetTriggerUnit())
    endif
endfunction
function mgu takes nothing returns boolean
    return IsUnitType(GetTriggerUnit(), UNIT_TYPE_HERO) != false
endfunction
function mhi takes nothing returns boolean
    return GetSpellAbilityId() == 1093678902
endfunction
function ger takes group Ter, player Yer, boolexpr Ger returns nothing
    call GroupEnumUnitsOfPlayer(Ter, Yer, Ger)
endfunction
function lSS takes group SSS, boolexpr cSS returns nothing
    local integer oSS = 0
    local integer OSS = bj_MAX_PLAYER_SLOTS - 1
    loop
        exitwhen oSS > OSS
        call ger(XQ, aD[oSS], cSS)
        call vci(SSS, XQ)
        set oSS = oSS + 1
    endloop
    call ugu(XQ)
endfunction
function mis takes nothing returns nothing
    local boolean jis = IsTriggerEnabled(qj)
    local integer xis
    local integer vis
    call SqS(qj)
    if aj != null then
        call bVr(aj)
    endif
    set aj = qj
    set qj = CreateTrigger()
    if not jis then
        call SqS(qj)
    endif
    call lSS(XQ, nj)
    set xis = 0
    set vis = ej - 1
    loop
        exitwhen xis > vis
        call dUs(qj, pj[xis])
        set xis = xis + 1
    endloop
endfunction
function mkr takes nothing returns nothing
    if not m9r(GetEnumUnit()) then
        set Uc = GetUnitLoc(GetEnumUnit())
        call CreateNUnitsAtLoc($00000001, $68303238, GetOwningPlayer(GetTriggerUnit()), Uc, 270.)
        call UnitDamageTargetBJ(GetTriggerUnit(), GetEnumUnit(), 1200. * I2R(GetUnitAbilityLevelSwapped(GetSpellAbilityId(), GetTriggerUnit())), ATTACK_TYPE_CHAOS, DAMAGE_TYPE_UNIVERSAL)
        call RemoveLocation(Uc)
    endif
endfunction
function mli takes nothing returns boolean
    return IsPlayerInForce(GetTriggerPlayer(), It) == false and IsPlayerInForce(GetTriggerPlayer(), mt)
endfunction
function DMt takes nothing returns boolean
    return GetItemCharges(GetItemOfTypeFromUnitBJ(GetTriggerUnit(), $49303541)) == 30
endfunction
function FPs takes nothing returns boolean
    return GetItemCharges(GetItemOfTypeFromUnitBJ(GetTriggerUnit(), $49303537)) == 35
endfunction
function HFS takes nothing returns boolean
    return GetItemCharges(GetItemOfTypeFromUnitBJ(GetTriggerUnit(), $49303531)) == 60
endfunction
function ITs takes nothing returns boolean
    return GetItemCharges(GetItemOfTypeFromUnitBJ(GetTriggerUnit(), $49303535)) == 80
endfunction
function Nwi takes nothing returns boolean
    return GetItemTypeId(GetManipulatedItem()) == 1227896130 and GetItemCharges(GetItemOfTypeFromUnitBJ(GetTriggerUnit(), $49303541)) >= 30 and UnitHasItemOfTypeBJ(GetTriggerUnit(), $49303457)
endfunction
function Pyi takes nothing returns boolean
    return GetItemCharges(GetItemOfTypeFromUnitBJ(GetTriggerUnit(), $49303533)) == 55
endfunction
function WrS takes nothing returns boolean
    return GetItemCharges(GetItemOfTypeFromUnitBJ(GetTriggerUnit(), $49303538)) == 55
endfunction
function cPr takes nothing returns boolean
    return GetItemCharges(GetItemOfTypeFromUnitBJ(GetTriggerUnit(), $49303531)) == 20
endfunction
function lei takes nothing returns boolean
    return GetItemTypeId(GetManipulatedItem()) == 1227896131 and GetItemCharges(GetItemOfTypeFromUnitBJ(GetTriggerUnit(), $49303537)) >= 35 and GetItemCharges(GetItemOfTypeFromUnitBJ(GetTriggerUnit(), $49303531)) >= 20 and UnitHasItemOfTypeBJ(GetTriggerUnit(), $4930345A)
endfunction
function nNt takes nothing returns boolean
    return GetItemTypeId(GetManipulatedItem()) == 1227896132 and GetItemCharges(GetItemOfTypeFromUnitBJ(GetTriggerUnit(), $49303533)) >= 55 and GetItemCharges(GetItemOfTypeFromUnitBJ(GetTriggerUnit(), $49303538)) >= 55 and GetItemCharges(GetItemOfTypeFromUnitBJ(GetTriggerUnit(), $49303541)) >= 65 and UnitHasItemOfTypeBJ(GetTriggerUnit(), $49303458)
endfunction
function oMr takes nothing returns boolean
    return GetItemCharges(GetItemOfTypeFromUnitBJ(GetTriggerUnit(), $49303541)) == 65
endfunction
function sDs takes nothing returns boolean
    return GetItemCharges(GetItemOfTypeFromUnitBJ(GetTriggerUnit(), $49303533)) == 40
endfunction
function v2w takes nothing returns boolean
    return GetItemCharges(GetItemOfTypeFromUnitBJ(GetTriggerUnit(), $49303538)) == 25
endfunction
function wVs takes nothing returns boolean
    return GetItemCharges(GetItemOfTypeFromUnitBJ(GetTriggerUnit(), $49303539)) == 40
endfunction
function xfi takes nothing returns boolean
    return GetItemTypeId(GetManipulatedItem()) == 1227896133 and GetItemCharges(GetItemOfTypeFromUnitBJ(GetTriggerUnit(), $49303539)) >= 40 and GetItemCharges(GetItemOfTypeFromUnitBJ(GetTriggerUnit(), $49303535)) >= 80 and GetItemCharges(GetItemOfTypeFromUnitBJ(GetTriggerUnit(), $49303533)) >= 40 and GetItemCharges(GetItemOfTypeFromUnitBJ(GetTriggerUnit(), $49303538)) >= 25 and GetItemCharges(GetItemOfTypeFromUnitBJ(GetTriggerUnit(), $49303531)) >= 60 and UnitHasItemOfTypeBJ(GetTriggerUnit(), $49303459)
endfunction
function Yqu takes string Tqu returns nothing
    set DSw[ASw] = Tqu
    set ASw = ASw + 1
    if Nwi() then
        if DMt() then
            call RemoveItem(GetItemOfTypeFromUnitBJ(GetTriggerUnit(), $49303541))
        else
            call SetItemCharges(GetItemOfTypeFromUnitBJ(GetTriggerUnit(), $49303541), GetItemCharges(GetItemOfTypeFromUnitBJ(GetTriggerUnit(), $49303541)) - 30)
        endif
        call BOt(GetItemOfTypeFromUnitBJ(GetTriggerUnit(), $49303541), - 30, hgr(eDs(GetTriggerUnit())), "when calling addChargesVirtual in Items_FishingRod_Upgrade, line 13")
        call RemoveItem(GetItemOfTypeFromUnitBJ(GetTriggerUnit(), $49303457))
        call ICw(GetTriggerUnit(), $4930345A, "when calling giveFishingRod in Items_FishingRod_Upgrade, line 16")
        call DisplayTimedTextToForce(MwS(GetOwningPlayer(GetTriggerUnit())), 5., "|cffff0000Traded fishes for a Good Fishing Rod.|r")
    endif
    if lei() then
        if FPs() then
            call RemoveItem(GetItemOfTypeFromUnitBJ(GetTriggerUnit(), $49303537))
        else
            call SetItemCharges(GetItemOfTypeFromUnitBJ(GetTriggerUnit(), $49303537), GetItemCharges(GetItemOfTypeFromUnitBJ(GetTriggerUnit(), $49303537)) - 35)
        endif
        call BOt(GetItemOfTypeFromUnitBJ(GetTriggerUnit(), $49303537), - 35, hgr(eDs(GetTriggerUnit())), "when calling addChargesVirtual in Items_FishingRod_Upgrade, line 24")
        if cPr() then
            call RemoveItem(GetItemOfTypeFromUnitBJ(GetTriggerUnit(), $49303531))
        else
            call SetItemCharges(GetItemOfTypeFromUnitBJ(GetTriggerUnit(), $49303531), GetItemCharges(GetItemOfTypeFromUnitBJ(GetTriggerUnit(), $49303531)) - 20)
        endif
        call BOt(GetItemOfTypeFromUnitBJ(GetTriggerUnit(), $49303531), - 20, hgr(eDs(GetTriggerUnit())), "when calling addChargesVirtual in Items_FishingRod_Upgrade, line 30")
        call RemoveItem(GetItemOfTypeFromUnitBJ(GetTriggerUnit(), $4930345A))
        call ICw(GetTriggerUnit(), $49303458, "when calling giveFishingRod in Items_FishingRod_Upgrade, line 33")
        call DisplayTimedTextToForce(MwS(GetOwningPlayer(GetTriggerUnit())), 5., "|cffff0000Traded fishes for a Silver Fishing Rod.|r")
    endif
    if nNt() then
        if Pyi() then
            call RemoveItem(GetItemOfTypeFromUnitBJ(GetTriggerUnit(), $49303533))
        else
            call SetItemCharges(GetItemOfTypeFromUnitBJ(GetTriggerUnit(), $49303533), GetItemCharges(GetItemOfTypeFromUnitBJ(GetTriggerUnit(), $49303533)) - 55)
        endif
        call BOt(GetItemOfTypeFromUnitBJ(GetTriggerUnit(), $49303533), - 55, hgr(eDs(GetTriggerUnit())), "when calling addChargesVirtual in Items_FishingRod_Upgrade, line 41")
        if WrS() then
            call RemoveItem(GetItemOfTypeFromUnitBJ(GetTriggerUnit(), $49303538))
        else
            call SetItemCharges(GetItemOfTypeFromUnitBJ(GetTriggerUnit(), $49303538), GetItemCharges(GetItemOfTypeFromUnitBJ(GetTriggerUnit(), $49303538)) - 55)
        endif
        call BOt(GetItemOfTypeFromUnitBJ(GetTriggerUnit(), $49303538), - 55, hgr(eDs(GetTriggerUnit())), "when calling addChargesVirtual in Items_FishingRod_Upgrade, line 47")
        if oMr() then
            call RemoveItem(GetItemOfTypeFromUnitBJ(GetTriggerUnit(), $49303541))
        else
            call SetItemCharges(GetItemOfTypeFromUnitBJ(GetTriggerUnit(), $49303541), GetItemCharges(GetItemOfTypeFromUnitBJ(GetTriggerUnit(), $49303541)) - 65)
        endif
        call BOt(GetItemOfTypeFromUnitBJ(GetTriggerUnit(), $49303541), - 65, hgr(eDs(GetTriggerUnit())), "when calling addChargesVirtual in Items_FishingRod_Upgrade, line 53")
        call RemoveItem(GetItemOfTypeFromUnitBJ(GetTriggerUnit(), $49303458))
        call ICw(GetTriggerUnit(), $49303459, "when calling giveFishingRod in Items_FishingRod_Upgrade, line 56")
        call DisplayTimedTextToForce(MwS(GetOwningPlayer(GetTriggerUnit())), 5., "|cffff0000Traded fishes for a Mystic Fishing Rod.|r")
    endif
    if xfi() then
        if wVs() then
            call RemoveItem(GetItemOfTypeFromUnitBJ(GetTriggerUnit(), $49303539))
        else
            call SetItemCharges(GetItemOfTypeFromUnitBJ(GetTriggerUnit(), $49303539), GetItemCharges(GetItemOfTypeFromUnitBJ(GetTriggerUnit(), $49303539)) - 40)
        endif
        call BOt(GetItemOfTypeFromUnitBJ(GetTriggerUnit(), $49303539), - 40, hgr(eDs(GetTriggerUnit())), "when calling addChargesVirtual in Items_FishingRod_Upgrade, line 64")
        if ITs() then
            call RemoveItem(GetItemOfTypeFromUnitBJ(GetTriggerUnit(), $49303535))
        else
            call SetItemCharges(GetItemOfTypeFromUnitBJ(GetTriggerUnit(), $49303535), GetItemCharges(GetItemOfTypeFromUnitBJ(GetTriggerUnit(), $49303535)) - 80)
        endif
        call BOt(GetItemOfTypeFromUnitBJ(GetTriggerUnit(), $49303535), - 80, hgr(eDs(GetTriggerUnit())), "when calling addChargesVirtual in Items_FishingRod_Upgrade, line 70")
        if sDs() then
            call RemoveItem(GetItemOfTypeFromUnitBJ(GetTriggerUnit(), $49303533))
        else
            call SetItemCharges(GetItemOfTypeFromUnitBJ(GetTriggerUnit(), $49303533), GetItemCharges(GetItemOfTypeFromUnitBJ(GetTriggerUnit(), $49303533)) - 40)
        endif
        call BOt(GetItemOfTypeFromUnitBJ(GetTriggerUnit(), $49303533), - 40, hgr(eDs(GetTriggerUnit())), "when calling addChargesVirtual in Items_FishingRod_Upgrade, line 76")
        if v2w() then
            call RemoveItem(GetItemOfTypeFromUnitBJ(GetTriggerUnit(), $49303538))
        else
            call SetItemCharges(GetItemOfTypeFromUnitBJ(GetTriggerUnit(), $49303538), GetItemCharges(GetItemOfTypeFromUnitBJ(GetTriggerUnit(), $49303538)) - 25)
        endif
        call BOt(GetItemOfTypeFromUnitBJ(GetTriggerUnit(), $49303538), - 25, hgr(eDs(GetTriggerUnit())), "when calling addChargesVirtual in Items_FishingRod_Upgrade, line 82")
        if HFS() then
            call RemoveItem(GetItemOfTypeFromUnitBJ(GetTriggerUnit(), $49303531))
        else
            call SetItemCharges(GetItemOfTypeFromUnitBJ(GetTriggerUnit(), $49303531), GetItemCharges(GetItemOfTypeFromUnitBJ(GetTriggerUnit(), $49303531)) - 60)
        endif
        call BOt(GetItemOfTypeFromUnitBJ(GetTriggerUnit(), $49303531), - 60, hgr(eDs(GetTriggerUnit())), "when calling addChargesVirtual in Items_FishingRod_Upgrade, line 88")
        call RemoveItem(GetItemOfTypeFromUnitBJ(GetTriggerUnit(), $49303459))
        call ICw(GetTriggerUnit(), $49303456, "when calling giveFishingRod in Items_FishingRod_Upgrade, line 91")
        call DisplayTimedTextToForce(MwS(GetOwningPlayer(GetTriggerUnit())), 5., "|cffff0000Traded fishes for a Mastercraft Fishing Rod.|r")
    endif
    call RemoveItem(GetManipulatedItem())
    set ASw = ASw - 1
endfunction
function mls takes nothing returns nothing
    set ASw = 0
    call Yqu("via function reference Items_FishingRod_Upgrade, line 111")
endfunction
function JQt takes nothing returns boolean
    return yi == 3
endfunction
function mpS takes nothing returns nothing
    call EnableTrigger(aR)
    call DisableTrigger(dR)
    call DisableTrigger(fR)
    call DisableTrigger(RR)
    call DisableTrigger(TR)
    call DestroyTimerDialog(fi)
    call PauseTimerBJ(true, di)
    set bw = true
    if JQt() then
        set ni = ni + 1
        call DisplayTimedTextToForce(Rc[$0000000B], 12., "|cffffcc00You have advanced to the next stage!|r")
    else
        call DisplayTimedTextToForce(Rc[$0000000B], 12., "|cffffcc00You have picked the wrong portal!|r")
    endif
    set vo = GetRectCenter(ly)
    call ForGroupBJ(fc[$0000000B], Obw)
    call ForForce(Rc[$0000000B], lbw)
    call RemoveLocation(vo)
endfunction
function oOu takes string SOu returns nothing
    local real cOu
    set DSw[ASw] = SOu
    set ASw = ASw + 1
    set cOu = dMw(wps(KW, Ici(Il), "when calling get in Imp3DragonFortress, line 447"))
    call GVw(KW, Ici(Il), B5r(cOu + 1.), "when calling put in Imp3DragonFortress, line 448")
    call sIr(Il, cOu, "when calling imp3MazeCheckTimeout in Imp3DragonFortress, line 449")
    set ASw = ASw - 1
endfunction
function mrS takes nothing returns nothing
    set ASw = 0
    call oOu("via function reference Imp3DragonFortress, line 508")
endfunction
function mrs takes nothing returns boolean
    return GetUnitTypeId(GetTriggerUnit()) == 1211117619 and GetOrderTargetUnit() == sG and IsPlayerInForce(GetOwningPlayer(GetTriggerUnit()), fr) and IsUnitInGroup(GetTriggerUnit(), kpu(300., GetUnitLoc(GetOrderTargetUnit())))
endfunction
function sMs takes nothing returns boolean
    return GetUnitTypeId(GetDyingUnit()) == 1848652114 or GetUnitTypeId(GetDyingUnit()) == 1848652112
endfunction
function mur takes nothing returns boolean
    return sMs() and IsPlayerInForce(GetOwningPlayer(GetKillingUnit()), rt) and GetUnitTypeId(GetKillingUnit()) == 1211117891
endfunction
function mvi takes nothing returns boolean
    set uD = 851983
    set rD = 852652
    set sD = 851990
    set tD = 851972
    return true
endfunction
function RLt takes string aLt returns nothing
    local group nLt
    local group dLt
    local unit fLt
    set DSw[ASw] = aLt
    set ASw = ASw + 1
    set nLt = Dit(xP, "when calling getUnitsInRect in LockBosses, line 36")
    set dLt = XbS(nLt)
    loop
        exitwhen not hJw(dLt)
        set fLt = tPr(dLt)
        if r5S(fLt) == 1429221442 then
            call Q_s(fLt, $4176756C)
            call qaS(fLt)
        endif
    endloop
    call lxs(dLt)
    call Sju(nLt, "when calling release in LockBosses, line 41")
    set ASw = ASw - 1
    set nLt = null
    set dLt = null
    set fLt = null
endfunction
function n8t takes nothing returns nothing
    set ASw = 0
    call RLt("via function reference LockBosses, line 59")
endfunction
function m4w takes string v4w returns boolean
    set DSw[ASw] = v4w
    set ASw = ASw + 1
    call jts("when calling new_HashMap in EnterLeaveRegionTrigger, line 20")
    set ASw = ASw - 1
    return true
endfunction
function nBr takes nothing returns boolean
    set ASw = 0
    return m4w("via function reference EnterLeaveRegionTrigger, line 12")
endfunction
function nHs takes nothing returns boolean
    return IsUnitType(GetDyingUnit(), UNIT_TYPE_HERO) != false
endfunction
function nKr takes nothing returns boolean
    return GetUnitTypeId(GetTriggerUnit()) == 1211117877 and GetUnitTypeId(GetOrderTargetUnit()) == 1747988819 and IsPlayerInForce(GetOwningPlayer(GetTriggerUnit()), rt) == false and IsUnitInGroup(GetTriggerUnit(), kpu(300., GetUnitLoc(GetOrderTargetUnit()))) and GetHeroLevel(GetTriggerUnit()) >= 150
endfunction
function Acr takes nothing returns real
    set MSw = GetCameraTargetPositionX()
    set wcw = GetCameraTargetPositionY()
    return MSw
endfunction
function nBt takes real eBt, real qBt, real aBt returns nothing
    call PanCameraToTimed(eBt, qBt, aBt)
endfunction
function W4t takes player j4t, real x4t, real v4t, real m4t returns nothing
    local real Q4t
    if nD == j4t then
        set Q4t = fYr(x4t, v4t, Acr(), wcw)
        if Q4t >= bj_SMARTPAN_TRESHOLD_SNAP then
            call nBt(x4t, v4t, 0.0)
        elseif Q4t >= bj_SMARTPAN_TRESHOLD_PAN then
            call nBt(x4t, v4t, m4t)
        endif
    endif
endfunction
function nMr takes nothing returns nothing
    local unit eMr = GetTriggerUnit()
    local player qMr = eDs(eMr)
    local integer aMr = hgr(qMr)
    if aMr <= Lh and t_u(eMr) then
        call W4t(qMr, ANw(eMr), XSw, 0.)
    endif
    set eMr = null
    set qMr = null
endfunction
function R5w takes nothing returns boolean
    return GetUnitTypeId(GetTriggerUnit()) == 1211117890 or GetUnitTypeId(GetTriggerUnit()) == 1211117889
endfunction
function nMs takes nothing returns boolean
    return R5w() and IsPlayerInForce(GetOwningPlayer(GetTriggerUnit()), rt) and IsPlayerInForce(GetOwningPlayer(GetTriggerUnit()), Gt) == false and GetPlayerState(GetOwningPlayer(GetTriggerUnit()), PLAYER_STATE_RESOURCE_GOLD) >= 10000
endfunction
function j0i takes nothing returns boolean
    return cO[1 + GetPlayerId(uO)] >= Eo[1 + GetPlayerId(uO)]
endfunction
function pMs takes nothing returns boolean
    return Po[1 + GetPlayerId(uO)] == 5
endfunction
function u9u takes nothing returns boolean
    return Eo[1 + GetPlayerId(uO)] < 50 * Po[1 + GetPlayerId(uO)]
endfunction
function nQs takes nothing returns nothing
    if u9u() then
        set cO[1 + GetPlayerId(uO)] = cO[1 + GetPlayerId(uO)] + oO
        if j0i() then
            set cO[1 + GetPlayerId(uO)] = 0
            set Eo[1 + GetPlayerId(uO)] = Eo[1 + GetPlayerId(uO)] + 1
            call DisplayTimedTextToForce(MwS(uO), 5., "|cff00ff00Your Profession Level has just increased by 1!|r")
        else
            call DisplayTimedTextToForce(MwS(uO), 5., "You earned |cffffcc00" + I2S(oO) + " Profession Experience Point(s)!|r")
        endif
    elseif pMs() then
        call DisplayTimedTextToForce(MwS(uO), 5., "|cff00ff00You have reached the highest level limit for your Profession.|r")
    else
        call DisplayTimedTextToForce(MwS(uO), 15., "|cffff0000You have reached the level limit for your current rank. You must be promoted to a higher rank in order to continue increasing your Profession Level.|r")
    endif
endfunction
function nSi takes nothing returns boolean
    return GetUnitTypeId(GetDyingUnit()) == 1848651829 and IsPlayerInForce(GetOwningPlayer(GetKillingUnit()), IS[$00000001])
endfunction
function nSr takes nothing returns nothing
    call PlaySoundAtPointBJ(ee, 100., GetUnitLoc(GetTriggerUnit()), 0.)
    set bj_forLoopAIndex = 1
    set bj_forLoopAIndexEnd = 3
    loop
        exitwhen bj_forLoopAIndex > bj_forLoopAIndexEnd
        call CreateNUnitsAtLoc($00000001, $6E677370, Player($0000000A), GetRandomLocInRect(RectFromCenterSizeBJ(GetUnitLoc(GetTriggerUnit()), 100., 100.)), bj_UNIT_FACING)
        call IssueTargetOrderById(bj_lastCreatedUnit, $000D0048, GroupPickRandomUnit(UFS(700., GetUnitLoc(bj_lastCreatedUnit), Condition(tpw))))
        set bj_forLoopAIndex = bj_forLoopAIndex + 1
    endloop
endfunction
function iSS takes integer QiS, integer WiS, integer EiS, integer ZiS, integer UiS, integer IiS, integer PiS, integer AiS, integer DiS, integer HiS, integer JiS, integer KiS, integer LiS, integer XiS, integer CiS, integer ViS, integer BiS, integer NiS, integer MiS, integer wSS, integer uSS, integer rSS, string sSS returns nothing
    local integer tSS
    set DSw[ASw] = sSS
    set ASw = ASw + 1
    set tSS = xeS(WiS, Xww[wuw[QiS]], wuw[QiS], "when calling new_LLEntry in LinkedList, line 40")
    set Cww[Xww[wuw[QiS]]] = tSS
    set Xww[wuw[QiS]] = tSS
    set uuw[QiS] = uuw[QiS] + 1
    set tSS = xeS(EiS, Xww[wuw[QiS]], wuw[QiS], "when calling new_LLEntry in LinkedList, line 40")
    set Cww[Xww[wuw[QiS]]] = tSS
    set Xww[wuw[QiS]] = tSS
    set uuw[QiS] = uuw[QiS] + 1
    set tSS = xeS(ZiS, Xww[wuw[QiS]], wuw[QiS], "when calling new_LLEntry in LinkedList, line 40")
    set Cww[Xww[wuw[QiS]]] = tSS
    set Xww[wuw[QiS]] = tSS
    set uuw[QiS] = uuw[QiS] + 1
    set tSS = xeS(UiS, Xww[wuw[QiS]], wuw[QiS], "when calling new_LLEntry in LinkedList, line 40")
    set Cww[Xww[wuw[QiS]]] = tSS
    set Xww[wuw[QiS]] = tSS
    set uuw[QiS] = uuw[QiS] + 1
    set tSS = xeS(IiS, Xww[wuw[QiS]], wuw[QiS], "when calling new_LLEntry in LinkedList, line 40")
    set Cww[Xww[wuw[QiS]]] = tSS
    set Xww[wuw[QiS]] = tSS
    set uuw[QiS] = uuw[QiS] + 1
    set tSS = xeS(PiS, Xww[wuw[QiS]], wuw[QiS], "when calling new_LLEntry in LinkedList, line 40")
    set Cww[Xww[wuw[QiS]]] = tSS
    set Xww[wuw[QiS]] = tSS
    set uuw[QiS] = uuw[QiS] + 1
    set tSS = xeS(AiS, Xww[wuw[QiS]], wuw[QiS], "when calling new_LLEntry in LinkedList, line 40")
    set Cww[Xww[wuw[QiS]]] = tSS
    set Xww[wuw[QiS]] = tSS
    set uuw[QiS] = uuw[QiS] + 1
    set tSS = xeS(DiS, Xww[wuw[QiS]], wuw[QiS], "when calling new_LLEntry in LinkedList, line 40")
    set Cww[Xww[wuw[QiS]]] = tSS
    set Xww[wuw[QiS]] = tSS
    set uuw[QiS] = uuw[QiS] + 1
    set tSS = xeS(HiS, Xww[wuw[QiS]], wuw[QiS], "when calling new_LLEntry in LinkedList, line 40")
    set Cww[Xww[wuw[QiS]]] = tSS
    set Xww[wuw[QiS]] = tSS
    set uuw[QiS] = uuw[QiS] + 1
    set tSS = xeS(JiS, Xww[wuw[QiS]], wuw[QiS], "when calling new_LLEntry in LinkedList, line 40")
    set Cww[Xww[wuw[QiS]]] = tSS
    set Xww[wuw[QiS]] = tSS
    set uuw[QiS] = uuw[QiS] + 1
    set tSS = xeS(KiS, Xww[wuw[QiS]], wuw[QiS], "when calling new_LLEntry in LinkedList, line 40")
    set Cww[Xww[wuw[QiS]]] = tSS
    set Xww[wuw[QiS]] = tSS
    set uuw[QiS] = uuw[QiS] + 1
    set tSS = xeS(LiS, Xww[wuw[QiS]], wuw[QiS], "when calling new_LLEntry in LinkedList, line 40")
    set Cww[Xww[wuw[QiS]]] = tSS
    set Xww[wuw[QiS]] = tSS
    set uuw[QiS] = uuw[QiS] + 1
    set tSS = xeS(XiS, Xww[wuw[QiS]], wuw[QiS], "when calling new_LLEntry in LinkedList, line 40")
    set Cww[Xww[wuw[QiS]]] = tSS
    set Xww[wuw[QiS]] = tSS
    set uuw[QiS] = uuw[QiS] + 1
    set tSS = xeS(CiS, Xww[wuw[QiS]], wuw[QiS], "when calling new_LLEntry in LinkedList, line 40")
    set Cww[Xww[wuw[QiS]]] = tSS
    set Xww[wuw[QiS]] = tSS
    set uuw[QiS] = uuw[QiS] + 1
    set tSS = xeS(ViS, Xww[wuw[QiS]], wuw[QiS], "when calling new_LLEntry in LinkedList, line 40")
    set Cww[Xww[wuw[QiS]]] = tSS
    set Xww[wuw[QiS]] = tSS
    set uuw[QiS] = uuw[QiS] + 1
    set tSS = xeS(BiS, Xww[wuw[QiS]], wuw[QiS], "when calling new_LLEntry in LinkedList, line 40")
    set Cww[Xww[wuw[QiS]]] = tSS
    set Xww[wuw[QiS]] = tSS
    set uuw[QiS] = uuw[QiS] + 1
    set tSS = xeS(NiS, Xww[wuw[QiS]], wuw[QiS], "when calling new_LLEntry in LinkedList, line 40")
    set Cww[Xww[wuw[QiS]]] = tSS
    set Xww[wuw[QiS]] = tSS
    set uuw[QiS] = uuw[QiS] + 1
    set tSS = xeS(MiS, Xww[wuw[QiS]], wuw[QiS], "when calling new_LLEntry in LinkedList, line 40")
    set Cww[Xww[wuw[QiS]]] = tSS
    set Xww[wuw[QiS]] = tSS
    set uuw[QiS] = uuw[QiS] + 1
    set tSS = xeS(wSS, Xww[wuw[QiS]], wuw[QiS], "when calling new_LLEntry in LinkedList, line 40")
    set Cww[Xww[wuw[QiS]]] = tSS
    set Xww[wuw[QiS]] = tSS
    set uuw[QiS] = uuw[QiS] + 1
    set tSS = xeS(uSS, Xww[wuw[QiS]], wuw[QiS], "when calling new_LLEntry in LinkedList, line 40")
    set Cww[Xww[wuw[QiS]]] = tSS
    set Xww[wuw[QiS]] = tSS
    set uuw[QiS] = uuw[QiS] + 1
    set tSS = xeS(rSS, Xww[wuw[QiS]], wuw[QiS], "when calling new_LLEntry in LinkedList, line 40")
    set Cww[Xww[wuw[QiS]]] = tSS
    set Xww[wuw[QiS]] = tSS
    set uuw[QiS] = uuw[QiS] + 1
    set ASw = ASw - 1
endfunction
function PWt takes integer qWt, integer aWt, integer nWt, integer dWt, integer fWt, integer RWt, integer TWt, integer YWt, integer GWt, integer gWt, integer hWt, integer FWt, integer kWt, integer jWt, integer xWt, integer vWt, integer mWt, integer QWt, integer WWt, integer EWt, integer ZWt, integer UWt, string IWt returns nothing
    set DSw[ASw] = IWt
    set ASw = ASw + 1
    if yN[qWt] == 0 then
        if qWt == 0 then
            call tNr("Nullpointer exception when calling LinkedList.add", "when calling error in LinkedList, line 38")
        else
            call tNr("Called LinkedList.add on invalid object.", "when calling error in LinkedList, line 38")
        endif
    endif
    call iSS(qWt, aWt, nWt, dWt, fWt, RWt, TWt, YWt, GWt, gWt, hWt, FWt, kWt, jWt, xWt, vWt, mWt, QWt, WWt, EWt, ZWt, UWt, "when calling add in LinkedList, line 38")
    set ASw = ASw - 1
endfunction
function hhs takes string Yhs returns boolean
    local integer Ghs
    local integer ghs
    set DSw[ASw] = Yhs
    set ASw = ASw + 1
    set Ig = l2s(Iji("AGMI", "when calling unObfuscate in Boss_Abilities, line 10"), "when calling fromRawCode in Boss_Abilities, line 10")
    set Pg = 10000000
    set Ag = 2000000
    set Dg = 1300000
    set Hg = "mirrorimage"
    set Jg = l2s(Iji("AGSP", "when calling unObfuscate in Boss_Abilities, line 23"), "when calling fromRawCode in Boss_Abilities, line 23")
    set Ghs = XQt("when calling new_LinkedList in Boss_Abilities, line 30")
    call PWt(Ghs, $41303842, $41303843, $41303844, $41303846, $41303847, $4130384D, $41304142, $4130394F, $4130394D, $41303233, $41303548, $4130384B, $41303950, $41303951, $41303645, $41303841, $41303644, $41303552, $41303839, $4130434C, $41304345, "when calling add in Boss_Abilities, line 30")
    set Kg = Ghs
    set ghs = XQt("when calling new_LinkedList in Boss_Abilities, line 31")
    call PWt(ghs, err("thunderbolt", "when calling stringToIndex in Boss_Abilities, line 31"), err("creepthunderclap", "when calling stringToIndex in Boss_Abilities, line 31"), err("roar", "when calling stringToIndex in Boss_Abilities, line 31"), err("creepthunderclap", "when calling stringToIndex in Boss_Abilities, line 31"), err("carrionswarm", "when calling stringToIndex in Boss_Abilities, line 31"), err("manaburn", "when calling stringToIndex in Boss_Abilities, line 31"), err("creepthunderbolt", "when calling stringToIndex in Boss_Abilities, line 31"), err("flamestrike", "when calling stringToIndex in Boss_Abilities, line 31"), err("firebolt", "when calling stringToIndex in Boss_Abilities, line 31"), err("breathoffire", "when calling stringToIndex in Boss_Abilities, line 31"), err("bash", "when calling stringToIndex in Boss_Abilities, line 31"), err("chainlightning", "when calling stringToIndex in Boss_Abilities, line 31"), err("creepthunderbolt", "when calling stringToIndex in Boss_Abilities, line 31"), err("rainoffire", "when calling stringToIndex in Boss_Abilities, line 31"), err("chainlightning", "when calling stringToIndex in Boss_Abilities, line 31"), err("stomp", "when calling stringToIndex in Boss_Abilities, line 31"), err("stomp", "when calling stringToIndex in Boss_Abilities, line 31"), err("creepthunderbolt", "when calling stringToIndex in Boss_Abilities, line 31"), err("divineshield", "when calling stringToIndex in Boss_Abilities, line 31"), err("stomp", "when calling stringToIndex in Boss_Abilities, line 31"), err("stomp", "when calling stringToIndex in Boss_Abilities, line 31"), "when calling add in Boss_Abilities, line 31")
    set Lg = ghs
    set ASw = ASw - 1
    return true
endfunction
function nUi takes nothing returns boolean
    set ASw = 0
    return hhs("via function reference Boss_Abilities, line 1")
endfunction
function FXw takes string gXw returns integer
    local integer hXw
    set DSw[ASw] = gXw
    set ASw = ASw + 1
    if NX == 0 then
        if MX < 32768 then
            set MX = MX + 1
            set hXw = MX
            set wC[hXw] = 1011
        else
            call tNr("Out of memory: Could not create CallbackSingle_doAfter_addAction_NoviceMaxLevel.", "when calling error in NoviceMaxLevel, line 57")
            set hXw = 0
        endif
    else
        set NX = NX - 1
        set hXw = BX[NX]
        set wC[hXw] = 1011
    endif
    set ASw = ASw - 1
    return hXw
endfunction
function F_S takes string g_S returns integer
    local integer h_S
    set DSw[ASw] = g_S
    set ASw = ASw + 1
    if NX == 0 then
        if MX < 32768 then
            set MX = MX + 1
            set h_S = MX
            set wC[h_S] = 1012
        else
            call tNr("Out of memory: Could not create CallbackSingle_doAfter_addAction_NoviceMaxLevel.", "when calling error in NoviceMaxLevel, line 64")
            set h_S = 0
        endif
    else
        set NX = NX - 1
        set h_S = BX[NX]
        set wC[h_S] = 1012
    endif
    set ASw = ASw - 1
    return h_S
endfunction
function JYr takes string DYr returns integer
    local integer HYr
    set DSw[ASw] = DYr
    set ASw = ASw + 1
    if NX == 0 then
        if MX < 32768 then
            set MX = MX + 1
            set HYr = MX
            set wC[HYr] = 1013
        else
            call tNr("Out of memory: Could not create CallbackSingle_doAfter_addAction_NoviceMaxLevel.", "when calling error in NoviceMaxLevel, line 67")
            set HYr = 0
        endif
    else
        set NX = NX - 1
        set HYr = BX[NX]
        set wC[HYr] = 1013
    endif
    set ASw = ASw - 1
    return HYr
endfunction
function Ztu takes string jtu returns nothing
    local unit xtu
    local player vtu
    local integer mtu
    local integer Qtu
    local integer Wtu
    local integer Etu
    set DSw[ASw] = jtu
    set ASw = ASw + 1
    set xtu = GetTriggerUnit()
    set vtu = GetTriggerPlayer()
    if lst(xtu) then
        call dii(Iji(uA, "when calling unObfuscate in NoviceMaxLevel, line 49"), 10., vtu)
        call Q_s(xtu, wA)
        call MQu(xtu, MP)
        set mtu = gir(xtu, MP)
        call Q_s(xtu, MP)
        set Qtu = FXw("when calling alloc_CallbackSingle_doAfter_addAction_NoviceMaxLevel in NoviceMaxLevel, line 57")
        call RUs(Qtu)
        set cuw[Qtu] = xtu
        call Ybr(.2, Qtu, "when calling doAfter in NoviceMaxLevel, line 57")
        set Wtu = F_S("when calling alloc_CallbackSingle_doAfter_addAction_NoviceMaxLevel in NoviceMaxLevel, line 64")
        call RUs(Wtu)
        set ouw[Wtu] = xtu
        set Ouw[Wtu] = mtu
        call Ybr(.3, Wtu, "when calling doAfter in NoviceMaxLevel, line 64")
        set Etu = JYr("when calling alloc_CallbackSingle_doAfter_addAction_NoviceMaxLevel in NoviceMaxLevel, line 67")
        call RUs(Etu)
        set luw[Etu] = xtu
        call Ybr(.5, Etu, "when calling doAfter in NoviceMaxLevel, line 67")
    endif
    set ASw = ASw - 1
    set xtu = null
    set vtu = null
endfunction
function nbr takes nothing returns nothing
    set ASw = 0
    call Ztu("via function reference NoviceMaxLevel, line 44")
endfunction
function ner takes nothing returns boolean
    return IsUnitInGroup(GetTriggerUnit(), kpu(300., GetUnitLoc(GetOrderTargetUnit()))) and IsPlayerInForce(GetOwningPlayer(GetTriggerUnit()), IS[$0000000B])
endfunction
function pvi takes string Ovi returns nothing
    local unit lvi
    local integer bvi
    local integer yvi
    set DSw[ASw] = Ovi
    set ASw = ASw + 1
    set lvi = GetEnteringUnit()
    set bvi = hgr(eDs(lvi))
    if GpS(gQ, bvi, "when calling has in DungeonCmds, line 947") then
        set yvi = tOS(eDs(lvi), "when calling getCustomPlayer in DungeonCmds, line 948")
        if hqs(xMi(yvi, "when calling getCHero in DungeonCmds, line 949"), "when calling getHero in DungeonCmds, line 949") == lvi then
            call Axu(hqs(xMi(yvi, "when calling getCHero in DungeonCmds, line 950"), "when calling getHero in DungeonCmds, line 950"), true)
            call GYS(lvi, aSr(lvi))
        endif
    endif
    set ASw = ASw - 1
    set lvi = null
endfunction
function neu takes nothing returns nothing
    set ASw = 0
    call pvi("via function reference DungeonCmds, line 943")
endfunction
function ngS takes nothing returns boolean
    return IsUnitType(GetTriggerUnit(), UNIT_TYPE_HERO) != false
endfunction
function nhS takes nothing returns boolean
    set ng = "overhead"
    set dg = "origin"
    return true
endfunction
function t3s takes nothing returns boolean
    return IsPlayerInForce(GetOwningPlayer(GetTriggerUnit()), ec[$00000006]) and IsPlayerInForce(GetOwningPlayer(GetTriggerUnit()), ec[$00000007]) == false
endfunction
function nhr takes nothing returns nothing
    call RemoveItem(GetManipulatedItem())
    if t3s() then
        call ForceAddPlayer(pc[$00000007], GetOwningPlayer(GetTriggerUnit()))
        call DisplayTextToForce(MwS(GetOwningPlayer(GetTriggerUnit())), "|cffffcc00Kiba|r : Ah! Ready as ever. Now listen carefully. We are running low on supplies, so I want you to help us stock up. My team and I will set up our equipment and gather the rare Oilberries for the equipment. You will help gather food and some medical supplies from nearby. Snap Dragon meat would do fine for food and life essences of the Enraged Spirits should be able to cover our medical supplies. 100 of each will do, so get on with it!")
        call T_i(GetOwningPlayer(GetTriggerUnit()), $00000000, "Stocking Up", "I have to help as part of the evacuation team. While the rest are at work, I have to gather 100 Snap Dragon meat and 100 life essences of the Enraged Spirits nearby. This should be a piece of cake.", "ReplaceableTextures\\CommandButtons\\BTNMonsterLure.blp")
        set NS[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))] = bj_lastCreatedQuest
    endif
endfunction
function phS takes integer lhS, string bhS returns nothing
    local integer yhS
    set DSw[ASw] = bhS
    set ASw = ASw + 1
    set yhS = lhS
    if yhS == 0 then
        call xki(SE, cE, oE, OE, lE, bE, yE, pE, sb, "when calling imp3MazeOnSpikesUnitHit in Imp3DragonFortress, line 693")
        call xki(SE, cE, oE, OE, lE, bE, yE, pE, tb, "when calling imp3MazeOnSpikesUnitHit in Imp3DragonFortress, line 694")
    elseif yhS == 1 then
        call xki(eE, qE, aE, nE, dE, fE, RE, TE, fl, "when calling imp3MazeOnSpikesUnitHit in Imp3DragonFortress, line 696")
        call xki(eE, qE, aE, nE, dE, fE, RE, TE, Rl, "when calling imp3MazeOnSpikesUnitHit in Imp3DragonFortress, line 697")
    elseif yhS == 2 then
        call xki(YE, GE, gE, hE, FE, kE, jE, xE, hy, "when calling imp3MazeOnSpikesUnitHit in Imp3DragonFortress, line 699")
        call xki(CE, VE, BE, NE, ME, wZ, uZ, rZ, iy, "when calling imp3MazeOnSpikesUnitHit in Imp3DragonFortress, line 700")
    elseif yhS == 3 then
        call xki(sZ, tZ, iZ, SZ, cZ, oZ, OZ, lZ, Mb, "when calling imp3MazeOnSpikesUnitHit in Imp3DragonFortress, line 702")
    endif
    set ASw = ASw - 1
endfunction
function Rkr takes string ekr returns nothing
    local integer qkr
    local integer akr
    local integer nkr
    local integer dkr
    local integer fkr
    set DSw[ASw] = ekr
    set ASw = ASw + 1
    if b8S($00000014) then
        call q5s("when calling imp3SpikesRunLoopRestart1 in Imp3DragonFortress, line 667")
    endif
    if Jyr(eW, $00000001, "when calling has in Imp3DragonFortress, line 669") then
        set akr = wps(eW, $00000001, "when calling get in Imp3DragonFortress, line 669")
    else
        set akr = 0
    endif
    set qkr = akr
    if b8S($0000000A) then
        set qkr = GetRandomInt($00000000, $00000003)
    endif
    set fkr = eW
    if qkr == 3 then
        set nkr = 0
    else
        set nkr = qkr + 1
    endif
    call GVw(fkr, $00000001, nkr, "when calling put in Imp3DragonFortress, line 672")
    set dkr = qkr
    if dkr == 0 then
        call phS($00000000, "when calling spikesRunLoop1_onTick in Imp3DragonFortress, line 676")
        call phS($00000001, "when calling spikesRunLoop1_onTick in Imp3DragonFortress, line 677")
        call phS($00000002, "when calling spikesRunLoop1_onTick in Imp3DragonFortress, line 678")
        call phS($00000003, "when calling spikesRunLoop1_onTick in Imp3DragonFortress, line 679")
    elseif dkr == 1 then
        call phS($00000001, "when calling spikesRunLoop1_onTick in Imp3DragonFortress, line 681")
        call phS($00000002, "when calling spikesRunLoop1_onTick in Imp3DragonFortress, line 682")
    elseif dkr == 2 then
        call phS($00000000, "when calling spikesRunLoop1_onTick in Imp3DragonFortress, line 684")
        call phS($00000003, "when calling spikesRunLoop1_onTick in Imp3DragonFortress, line 685")
    elseif dkr == 3 then
        call phS($00000001, "when calling spikesRunLoop1_onTick in Imp3DragonFortress, line 687")
        call phS($00000003, "when calling spikesRunLoop1_onTick in Imp3DragonFortress, line 688")
    endif
    set ASw = ASw - 1
endfunction
function nis takes nothing returns nothing
    set ASw = 0
    call Rkr("via function reference Imp3DragonFortress, line 571")
endfunction
function nit takes nothing returns nothing
    set Ut[1 + GetPlayerId(GetTriggerPlayer())] = GetEnumUnit()
endfunction
function initializeTable takes string w__wurst_stackPos returns nothing
    local integer i_1
    set DSw[ASw] = w__wurst_stackPos
    set ASw = ASw + 1
    set i_1 = 0
    loop
        exitwhen i_1 > 15
        call K_s(Hh, R9S(Dh[i_1]), i_1, "when calling saveInt in Colors, line 207")
        set i_1 = i_1 + 1
    endloop
    set ASw = ASw - 1
endfunction
function UOs takes string ios returns boolean
    local integer Sos
    local integer cos
    local integer oos
    local integer Oos
    local integer los
    local integer bos
    local integer yos
    local integer pos
    local integer eos
    local integer qos
    local integer aos
    local integer nos
    local integer dos
    local integer fos
    local integer Ros
    local integer Tos
    local integer Yos
    local integer Gos
    local integer gos
    local integer hos
    local integer Fos
    local integer kos
    local integer jos
    local integer xos
    local integer vos
    local integer mos
    local integer Qos
    local integer Wos
    local integer Eos
    local integer Zos
    local integer Uos
    local integer Ios
    local integer Pos
    local integer Aos
    local integer Dos
    local integer Hos
    local integer Jos
    local integer Kos
    local integer Los
    local integer Xos
    local integer Vos
    local integer Bos
    local integer Nos
    local integer Mos
    local integer wOs
    local integer uOs
    local integer rOs
    local integer sOs
    local integer tOs
    local integer iOs
    local integer SOs
    local integer cOs
    local integer oOs
    local integer OOs
    local integer lOs
    local integer bOs
    local integer yOs
    local integer pOs
    local integer eOs
    local integer qOs
    local integer aOs
    local integer nOs
    local integer dOs
    local integer fOs
    local integer ROs
    local integer TOs
    local integer YOs
    local integer GOs
    local integer gOs
    local integer hOs
    local integer FOs
    local integer kOs
    local integer jOs
    local integer xOs
    local integer vOs
    local integer mOs
    local integer QOs
    local integer WOs
    local integer EOs
    local integer ZOs
    set DSw[ASw] = ios
    set ASw = ASw + 1
    set Sos = 255
    set cos = 255
    set oos = 255
    set Oos = 255
    set jh = Sos
    set xh = cos
    set vh = oos
    set mh = Oos
    set los = 0
    set bos = 0
    set yos = 0
    set pos = 0
    set Qh = los
    set Wh = bos
    set Eh = yos
    set Zh = pos
    set Uh = 23
    set eos = 255
    set qos = 2
    set aos = 2
    set Ih[$00000000] = eos
    set Ph[$00000000] = qos
    set Ah[$00000000] = aos
    set nos = 0
    set dos = 65
    set fos = 255
    set Ih[$00000001] = nos
    set Ph[$00000001] = dos
    set Ah[$00000001] = fos
    set Ros = 27
    set Tos = 229
    set Yos = 184
    set Ih[$00000002] = Ros
    set Ph[$00000002] = Tos
    set Ah[$00000002] = Yos
    set Gos = 83
    set gos = 0
    set hos = 128
    set Ih[$00000003] = Gos
    set Ph[$00000003] = gos
    set Ah[$00000003] = hos
    set Fos = 255
    set kos = 252
    set jos = 0
    set Ih[$00000004] = Fos
    set Ph[$00000004] = kos
    set Ah[$00000004] = jos
    set xos = 254
    set vos = 137
    set mos = 13
    set Ih[$00000005] = xos
    set Ph[$00000005] = vos
    set Ah[$00000005] = mos
    set Qos = 31
    set Wos = 191
    set Eos = 0
    set Ih[$00000006] = Qos
    set Ph[$00000006] = Wos
    set Ah[$00000006] = Eos
    set Zos = 228
    set Uos = 90
    set Ios = 175
    set Ih[$00000007] = Zos
    set Ph[$00000007] = Uos
    set Ah[$00000007] = Ios
    set Pos = 148
    set Aos = 149
    set Dos = 150
    set Ih[$00000008] = Pos
    set Ph[$00000008] = Aos
    set Ah[$00000008] = Dos
    set Hos = 125
    set Jos = 190
    set Kos = 241
    set Ih[$00000009] = Hos
    set Ph[$00000009] = Jos
    set Ah[$00000009] = Kos
    set Los = 15
    set Xos = 97
    set Vos = 69
    set Ih[$0000000A] = Los
    set Ph[$0000000A] = Xos
    set Ah[$0000000A] = Vos
    set Bos = 77
    set Nos = 41
    set Mos = 3
    set Ih[$0000000B] = Bos
    set Ph[$0000000B] = Nos
    set Ah[$0000000B] = Mos
    set wOs = 155
    set uOs = 0
    set rOs = 0
    set Ih[$0000000C] = wOs
    set Ph[$0000000C] = uOs
    set Ah[$0000000C] = rOs
    set sOs = 0
    set tOs = 0
    set iOs = 195
    set Ih[$0000000D] = sOs
    set Ph[$0000000D] = tOs
    set Ah[$0000000D] = iOs
    set SOs = 0
    set cOs = 234
    set oOs = 255
    set Ih[$0000000E] = SOs
    set Ph[$0000000E] = cOs
    set Ah[$0000000E] = oOs
    set OOs = 190
    set lOs = 0
    set bOs = 254
    set Ih[$0000000F] = OOs
    set Ph[$0000000F] = lOs
    set Ah[$0000000F] = bOs
    set yOs = 235
    set pOs = 205
    set eOs = 135
    set Ih[$00000010] = yOs
    set Ph[$00000010] = pOs
    set Ah[$00000010] = eOs
    set qOs = 248
    set aOs = 164
    set nOs = 139
    set Ih[$00000011] = qOs
    set Ph[$00000011] = aOs
    set Ah[$00000011] = nOs
    set dOs = 191
    set fOs = 255
    set ROs = 128
    set Ih[$00000012] = dOs
    set Ph[$00000012] = fOs
    set Ah[$00000012] = ROs
    set TOs = 220
    set YOs = 185
    set GOs = 235
    set Ih[$00000013] = TOs
    set Ph[$00000013] = YOs
    set Ah[$00000013] = GOs
    set gOs = 40
    set hOs = 40
    set FOs = 40
    set Ih[$00000014] = gOs
    set Ph[$00000014] = hOs
    set Ah[$00000014] = FOs
    set kOs = 235
    set jOs = 240
    set xOs = 255
    set Ih[$00000015] = kOs
    set Ph[$00000015] = jOs
    set Ah[$00000015] = xOs
    set vOs = 0
    set mOs = 120
    set QOs = 30
    set Ih[$00000016] = vOs
    set Ph[$00000016] = mOs
    set Ah[$00000016] = QOs
    set WOs = 164
    set EOs = 111
    set ZOs = 51
    set Ih[$00000017] = WOs
    set Ph[$00000017] = EOs
    set Ah[$00000017] = ZOs
    set Dh[$00000000] = "0"
    set Dh[$00000001] = "1"
    set Dh[$00000002] = "2"
    set Dh[$00000003] = "3"
    set Dh[$00000004] = "4"
    set Dh[$00000005] = "5"
    set Dh[$00000006] = "6"
    set Dh[$00000007] = "7"
    set Dh[$00000008] = "8"
    set Dh[$00000009] = "9"
    set Dh[$0000000A] = "A"
    set Dh[$0000000B] = "B"
    set Dh[$0000000C] = "C"
    set Dh[$0000000D] = "D"
    set Dh[$0000000E] = "E"
    set Dh[$0000000F] = "F"
    set Hh = VQs("when calling new_Table in Colors, line 155")
    call initializeTable("when calling initializeTable in Colors, line 210")
    set ASw = ASw - 1
    return true
endfunction
function nli takes nothing returns boolean
    set ASw = 0
    return UOs("via function reference Colors, line 1")
endfunction
function YEu takes nothing returns boolean
    return IsPlayerInForce(GetOwningPlayer(GetTriggerUnit()), us)
endfunction
function nmt takes nothing returns nothing
    call ResetToGameCameraForPlayer(GetOwningPlayer(GetTriggerUnit()), 0.)
    call ForceAddPlayer(ws, GetOwningPlayer(GetTriggerUnit()))
    call ForceRemovePlayer(Wc, GetOwningPlayer(GetTriggerUnit()))
    call ForceRemovePlayer(lt, GetOwningPlayer(GetTriggerUnit()))
    if YEu() then
        call ForceRemovePlayer(us, GetOwningPlayer(GetTriggerUnit()))
        call SetPlayerAbilityAvailableBJ(true, $41303154, GetOwningPlayer(GetTriggerUnit()))
        call SetPlayerAbilityAvailableBJ(true, $41303254, GetOwningPlayer(GetTriggerUnit()))
        call SetPlayerAbilityAvailableBJ(true, $41303757, GetOwningPlayer(GetTriggerUnit()))
        call SetPlayerAbilityAvailableBJ(true, $41303155, GetOwningPlayer(GetTriggerUnit()))
        call SetPlayerAbilityAvailableBJ(true, $41303255, GetOwningPlayer(GetTriggerUnit()))
        call SetPlayerAbilityAvailableBJ(true, $41303758, GetOwningPlayer(GetTriggerUnit()))
    endif
endfunction
function noi takes nothing returns boolean
    return GetSpellAbilityId() == 1093679156
endfunction
function sXt takes string rXt returns nothing
    set DSw[ASw] = rXt
    set ASw = ASw + 1
    call ZAw()
    call L5S("when calling _CrashMapFunction2 in EffectCleaner, line 125")
    call C0t("when calling _CrashMapFunction3 in EffectCleaner, line 126")
    set ASw = ASw - 1
endfunction
function ntu takes nothing returns nothing
    set ASw = 0
    call sXt("via function reference EffectCleaner, line 150")
endfunction
function GBt takes string TBt returns integer
    local integer YBt
    set DSw[ASw] = TBt
    set ASw = ASw + 1
    if NX == 0 then
        if MX < 32768 then
            set MX = MX + 1
            set YBt = MX
            set wC[YBt] = 1000
        else
            call tNr("Out of memory: Could not create CallbackSingle_doAfter_Voidless_triggers.", "when calling error in Voidless_triggers, line 296")
            set YBt = 0
        endif
    else
        set NX = NX - 1
        set YBt = BX[NX]
        set wC[YBt] = 1000
    endif
    set ASw = ASw - 1
    return YBt
endfunction
function abs takes string ebs returns integer
    local integer qbs
    set DSw[ASw] = ebs
    set ASw = ASw + 1
    if NX == 0 then
        if MX < 32768 then
            set MX = MX + 1
            set qbs = MX
            set wC[qbs] = 999
        else
            call tNr("Out of memory: Could not create CallbackSingle_doAfter_Voidless_triggers.", "when calling error in Voidless_triggers, line 266")
            set qbs = 0
        endif
    else
        set NX = NX - 1
        set qbs = BX[NX]
        set wC[qbs] = 999
    endif
    set ASw = ASw - 1
    return qbs
endfunction
function h_s takes string s_s returns boolean
    local effect t_s
    local effect i_s
    local effect S_s
    local effect c_s
    local trigger o_s
    local trigger O_s
    local trigger l_s
    local trigger b_s
    local trigger y_s
    local trigger p_s
    local integer e_s
    local integer q_s
    local trigger a_s
    local trigger n_s
    local trigger d_s
    local trigger f_s
    local trigger R_s
    local trigger T_s
    local integer Y_s
    local trigger G_s
    local integer g_s
    set DSw[ASw] = s_s
    set ASw = ASw + 1
    set hX = K2S(fK)
    set FX = K2S(XO)
    set kX = K2S(VO)
    set jX = K2S(NO)
    set xX = K2S(JO)
    set vX = K2S(gK)
    call K2S(kK)
    set mX = jts("when calling new_HashMap in Voidless_triggers, line 31")
    set t_s = AddSpecialEffect("Objects\\InventoryItems\\CrystalShard\\CrystalShard.mdl", uys(dK), Bsu(dK))
    call vQs(t_s, wor(oQu(dK), Gcw) + 300.)
    set i_s = t_s
    call Wwu(i_s, 0.)
    set QX = i_s
    set S_s = AddSpecialEffect("war3mapImported\\VoidPortal.mdx", uys(dK), Bsu(dK) - 10.)
    call vQs(S_s, wor(oQu(dK), Gcw))
    set c_s = S_s
    call Wwu(c_s, 0.5)
    set WX = dps(aD[PLAYER_NEUTRAL_AGGRESSIVE], AK, oQu(FK), Gcw, 270. * JG)
    set o_s = CreateTrigger()
    call QYr(o_s, FX, null)
    set O_s = o_s
    call QYr(O_s, kX, null)
    set l_s = O_s
    call QYr(l_s, jX, null)
    set b_s = l_s
    call QYr(b_s, xX, null)
    set y_s = b_s
    call QYr(y_s, vX, null)
    set p_s = y_s
    call B2S(p_s, ZEw)
    set e_s = 0
    set q_s = Lh
    loop
        exitwhen e_s > q_s
        call GVw(mX, e_s, $00000000, "when calling put in Voidless_triggers, line 181")
        set e_s = e_s + 1
    endloop
    set a_s = CreateTrigger()
    call l2w(a_s, EVENT_PLAYER_UNIT_DEATH)
    set n_s = a_s
    call B2S(n_s, UEw)
    call nnr(CreateTimer(), iF * 3., IEw)
    set d_s = CreateTrigger()
    call aRS(d_s, hX, null)
    set f_s = d_s
    call B2S(f_s, PEw)
    set R_s = CreateTrigger()
    call QYr(R_s, K2S(dK), null)
    set T_s = R_s
    call B2S(T_s, AEw)
    set Y_s = abs("when calling alloc_CallbackSingle_doAfter_Voidless_triggers in Voidless_triggers, line 266")
    call RUs(Y_s)
    call Ybr(1., Y_s, "when calling doAfter in Voidless_triggers, line 266")
    set G_s = CreateTrigger()
    set g_s = GBt("when calling alloc_CallbackSingle_doAfter_Voidless_triggers in Voidless_triggers, line 296")
    call RUs(g_s)
    set ESw[g_s] = G_s
    call Ybr(1.2, g_s, "when calling doAfter in Voidless_triggers, line 296")
    set ASw = ASw - 1
    set t_s = null
    set i_s = null
    set S_s = null
    set c_s = null
    set o_s = null
    set O_s = null
    set l_s = null
    set b_s = null
    set y_s = null
    set p_s = null
    set a_s = null
    set n_s = null
    set d_s = null
    set f_s = null
    set R_s = null
    set T_s = null
    set G_s = null
    return true
endfunction
function nwt takes nothing returns boolean
    set ASw = 0
    return h_s("via function reference Voidless_triggers, line 1")
endfunction
function nys takes nothing returns nothing
    set ASw = 0
    call ggt("via function reference ClosureEvents, line 243")
endfunction
function o3s takes nothing returns boolean
    return CountPlayersInForceBJ(Ns) == 0 and GetOrderTargetUnit() == cG and GetHeroLevel(GetTriggerUnit()) >= 100 and IsUnitInGroup(GetTriggerUnit(), kpu(110., GetUnitLoc(GetOrderTargetUnit()))) and IsPlayerInForce(GetOwningPlayer(GetTriggerUnit()), At) == false
endfunction
function o6S takes nothing returns nothing
    call PanCameraToTimedLocForPlayer(GetEnumPlayer(), ro[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))], 0.)
endfunction
function o7t takes nothing returns boolean
    return GetUnitTypeId(GetEnteringUnit()) == 1211117618 and GetHeroLevel(GetEnteringUnit()) >= 10
endfunction
function oAr takes nothing returns boolean
    return false
endfunction
function oBr takes nothing returns boolean
    return GetUnitTypeId(GetTriggerUnit()) == 1211117622 and GetOrderTargetUnit() == wG and GetHeroLevel(GetTriggerUnit()) >= 40 and IsUnitInGroup(GetTriggerUnit(), kpu(300., GetUnitLoc(GetOrderTargetUnit())))
endfunction
function oDw takes nothing returns boolean
    return GetUnitTypeId(GetTriggerUnit()) == 1211117645 and GetUnitTypeId(GetOrderTargetUnit()) == 1747988811 and IsPlayerInForce(GetOwningPlayer(GetTriggerUnit()), Kr) and IsPlayerInForce(GetOwningPlayer(GetTriggerUnit()), Cr) == false and IsUnitInGroup(GetTriggerUnit(), kpu(300., GetUnitLoc(GetOrderTargetUnit())))
endfunction
function oFt takes nothing returns nothing
    set Bs = GetRectCenter(Up)
    call SetUnitPositionLocFacingBJ(GetTriggerUnit(), Bs, 180.)
    call PanCameraToTimedLocForPlayer(GetOwningPlayer(GetTriggerUnit()), Bs, 0.)
    call TriggerExecute(MT)
    call RemoveLocation(Bs)
endfunction
function oFu takes nothing returns nothing
    call SetUnitLifePercentBJ(GetEnumUnit(), 100.)
endfunction
function bju takes string oju returns nothing
    local integer Oju
    local integer lju
    set DSw[ASw] = oju
    set ASw = ASw + 1
    set Oju = c5r(gQ, "when calling iterator in PlayerGoldAndShardLimit, line 32")
    loop
        exitwhen not Tji(Oju)
        set lju = LXi(Oju)
        if ATu(aD[lju]) > pD then
            call dLu(aD[lju], pD)
        endif
        if kbr(aD[lju]) > eD then
            call Q5r(aD[lju], eD)
        endif
    endloop
    call vms(Oju, "when calling close in PlayerGoldAndShardLimit, line 32")
    set ASw = ASw - 1
endfunction
function oHu takes nothing returns nothing
    set ASw = 0
    call bju("via function reference PlayerGoldAndShardLimit, line 25")
endfunction
function oJu takes nothing returns boolean
    return GetUnitTypeId(GetTriggerUnit()) == 1848651857 and GetUnitTypeId(GetKillingUnit()) == 1211117624 and IsPlayerInForce(GetOwningPlayer(GetKillingUnit()), nr)
endfunction
function oLw takes nothing returns boolean
    return (xo == 1 and IsUnitType(GetTriggerUnit(), UNIT_TYPE_HERO)) != false
endfunction
function oMi takes nothing returns boolean
    return r5S(GetTriggerUnit()) == dk
endfunction
function oMw takes nothing returns boolean
    return GetUnitTypeId(GetTriggerUnit()) == 1211117881 and GetUnitTypeId(GetOrderTargetUnit()) == 1747989298 and IsPlayerInForce(GetOwningPlayer(GetTriggerUnit()), rt) and IsPlayerInForce(GetOwningPlayer(GetTriggerUnit()), ii) and IsUnitInGroup(GetTriggerUnit(), kpu(300., GetUnitLoc(GetOrderTargetUnit())))
endfunction
function ZXt takes nothing returns boolean
    return IsUnitEnemy(GetFilterUnit(), GetOwningPlayer(GetTriggerUnit()))
endfunction
function l4r takes nothing returns boolean
    return IsUnitAliveBJ(GetFilterUnit())
endfunction
function oNr takes nothing returns boolean
    return GetBooleanAnd(ZXt(), l4r())
endfunction
function oOS takes nothing returns nothing
    call ForceRemovePlayer(pc[$00000007], GetOwningPlayer(GetTriggerUnit()))
    call DestroyQuest(NS[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))])
    set NS[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))] = null
    set VS[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))] = 0
    set BS[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))] = 0
    call PlaySoundBJ(pe)
    call DisplayTimedTextToForce(MwS(GetOwningPlayer(GetOrderedUnit())), 5., "|cffffcc00You have completed the Quest|r.")
    call DisplayTimedTextToForce(MwS(GetOwningPlayer(GetOrderedUnit())), 10., "|cffffcc00Kiba|r : Great work recruit! I couldn't have done it any better myself. You did a great favour to the team!")
    call AddHeroXPSwapped(Q, GetTriggerUnit(), true)
    call AdjustPlayerStateBJ($0000C79C, GetOwningPlayer(GetTriggerUnit()), PLAYER_STATE_RESOURCE_GOLD)
endfunction
function f8r takes unit p8r, string e8r returns boolean
    local boolean q8r
    local integer a8r
    local integer n8r
    local integer d8r
    set DSw[ASw] = e8r
    set ASw = ASw + 1
    set q8r = false
    set a8r = 0
    set n8r = dcs(p8r) - 1
    loop
        exitwhen a8r > n8r
        set d8r = q3t(ofi(p8r, a8r))
        if Jyr(lI, d8r, "when calling has in Inspirit_Overvelde, line 45") then
            set q8r = true
        endif
        if q8r then
            exitwhen true
        endif
        set a8r = a8r + 1
    endloop
    set ASw = ASw - 1
    return q8r
endfunction
function E8S takes string Q8S returns boolean
    local boolean W8S
    set DSw[ASw] = Q8S
    set ASw = ASw + 1
    set W8S = (f8r(GetEventDamageSource(), "when calling overvelde_hasItem in Inspirit_Overvelde, line 68") and IsUnitType(GetTriggerUnit(), UNIT_TYPE_STRUCTURE) == false and IsUnitInGroup(GetEventDamageSource(), GO) == false and IsUnitInGroup(GetEventDamageSource(), Ec) == false) != false
    set ASw = ASw - 1
    return W8S
endfunction
function oRS takes nothing returns boolean
    set ASw = 0
    return E8S("via function reference Inspirit_Overvelde, line 123")
endfunction
function oVt takes nothing returns nothing
    call SetUnitPositionLoc(GetEnumUnit(), br[1 + GetPlayerId(GetOwningPlayer(GetEnumUnit()))])
endfunction
function o_r takes nothing returns boolean
    return GetUnitTypeId(GetTriggerUnit()) == 1211117633 and GetOrderTargetUnit() == SG and GetHeroLevel(GetTriggerUnit()) >= 40 and IsPlayerInForce(GetOwningPlayer(GetTriggerUnit()), nr) == false and IsUnitInGroup(GetTriggerUnit(), kpu(300., GetUnitLoc(GetOrderTargetUnit())))
endfunction
function o_u takes nothing returns nothing
    call ForceRemovePlayer(rt, GetOwningPlayer(GetTriggerUnit()))
    call ForceRemovePlayer(ii, GetOwningPlayer(GetTriggerUnit()))
    call DisplayTextToForce(MwS(GetOwningPlayer(GetTriggerUnit())), "|cffffcc00Morden Tor|r : |cff87ceebHow was it? Have you felt it yet? The feeling when you and your blade attack with instinct...without doubt...You no longer need your horse. Go out there and fight like a Witcher. A Monster Slayer.")
    call DestroyQuest(st[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))])
    set st[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))] = null
    call SetHeroLevelBJ(GetTriggerUnit(), $00000001, false)
    call ReplaceUnitBJ(GetTriggerUnit(), $48303250, $00000002)
    call SelectUnitForPlayerSingle(bj_lastReplacedUnit, GetOwningPlayer(GetTriggerUnit()))
    call SetHeroLevel(bj_lastReplacedUnit, $00000001, true)
    call UnitStripHeroLevel(bj_lastReplacedUnit, $00000001)
endfunction
function oit takes nothing returns boolean
    return GetUnitTypeId(GetTriggerUnit()) == 1211117879 and GetUnitTypeId(GetOrderTargetUnit()) == 1747989045 and IsPlayerInForce(GetOwningPlayer(GetTriggerUnit()), rt) and IsPlayerInForce(GetOwningPlayer(GetTriggerUnit()), ot) and IsUnitInGroup(GetTriggerUnit(), kpu(300., GetUnitLoc(GetOrderTargetUnit())))
endfunction
function oji takes nothing returns nothing
    call SetUnitPositionLoc(GetEnumUnit(), yr[1 + GetPlayerId(GetOwningPlayer(GetEnumUnit()))])
endfunction
function olu takes nothing returns boolean
    return IsPlayerInForce(GetOwningPlayer(GetKillingUnit()), IS[$0000000A])
endfunction
function eJw takes integer bJw, string yJw returns boolean
    local boolean pJw
    set DSw[ASw] = yJw
    set ASw = ASw + 1
    set pJw = GpS(iP, bJw, "when calling has in JobAdvancementQuestHandler, line 58")
    set ASw = ASw - 1
    return pJw
endfunction
function u7t takes integer N6t, string M6t returns boolean
    local boolean w7t
    set DSw[ASw] = M6t
    set ASw = ASw + 1
    set w7t = eJw(N6t, "when calling isGodlie in JobAdvancementQuestHandler, line 55") or GpS(Ux, N6t, "when calling has in JobAdvancementQuestHandler, line 55") or GpS(Ix, N6t, "when calling has in JobAdvancementQuestHandler, line 55") or GpS(Dx, N6t, "when calling has in JobAdvancementQuestHandler, line 55")
    set ASw = ASw - 1
    return w7t
endfunction
function FwS takes string GwS returns nothing
    local item gwS
    local integer hwS
    set DSw[ASw] = GwS
    set ASw = ASw + 1
    set gwS = GetEnumItem()
    if gwS != null then
        set hwS = hgr(v9S(gwS))
        if (not GpS(Zx, hwS, "when calling has in JobAdvancementQuestHandler, line 900"))and (not GpS(px, Xdu(gwS), "when calling has in JobAdvancementQuestHandler, line 900"))and u7t(q3t(gwS), "when calling isImp1To4Item in JobAdvancementQuestHandler, line 900") and hwS > Lh or (not Jyr(ex, Xdu(gwS), "when calling has in JobAdvancementQuestHandler, line 900"))or wps(ex, Xdu(gwS), "when calling get in JobAdvancementQuestHandler, line 900") != hgr(v9S(gwS)) then
            call jXt(gwS, false)
        endif
    endif
    set ASw = ASw - 1
    set gwS = null
endfunction
function ooi takes nothing returns nothing
    set ASw = 0
    call FwS("via function reference JobAdvancementQuestHandler, line 896")
endfunction
function ops takes nothing returns nothing
    set ASw = 0
    call BWr("via function reference PlayerCommands, line 268")
endfunction
function ori takes nothing returns boolean
    if ni == 7 then
        return Ti >= 31 and IsUnitInGroup(GetTriggerUnit(), f1s(Vl))
    else
        return Ti >= 19 and IsUnitInGroup(GetTriggerUnit(), f1s(Vl))
    endif
endfunction
function JuS takes nothing returns boolean
    return UnitHasItemOfTypeBJ(GetTriggerUnit(), $49303130)
endfunction
function T9i takes nothing returns boolean
    return UnitHasItemOfTypeBJ(GetTriggerUnit(), $4930305A)
endfunction
function ort takes nothing returns nothing
    if T9i() then
        call ForceRemovePlayer(Kr, GetOwningPlayer(GetTriggerUnit()))
        call ForceRemovePlayer(Cr, GetOwningPlayer(GetTriggerUnit()))
        call ForceRemovePlayer(Gs, GetOwningPlayer(GetTriggerUnit()))
        call ForceRemovePlayer(Vr, GetOwningPlayer(GetTriggerUnit()))
        call PlaySoundBJ(ue)
        call SetHeroLevelBJ(GetTriggerUnit(), $00000001, false)
        call RemoveItem(GetItemOfTypeFromUnitBJ(GetTriggerUnit(), $4930305A))
        call DisplayTextToForce(MwS(GetOwningPlayer(GetTriggerUnit())), "|cffffcc00Class Trainer|r : |cff87ceebYou...You got a letter of recommendation from Luna? You must be a peerless hunter...Luna hasn't given anyone a letter of recommendation in 5 years! Very impressive, Marksman.")
        call ReplaceUnitBJ(GetTriggerUnit(), $48303135, $00000002)
        call SelectUnitForPlayerSingle(bj_lastReplacedUnit, GetOwningPlayer(GetTriggerUnit()))
        call DestroyQuest(Lr[1 + GetPlayerId(GetOwningPlayer(bj_lastReplacedUnit))])
        call SetHeroLevel(bj_lastReplacedUnit, $00000001, true)
        call UnitStripHeroLevel(bj_lastReplacedUnit, $00000001)
    endif
    if JuS() then
        call ForceRemovePlayer(Kr, GetOwningPlayer(GetTriggerUnit()))
        call ForceRemovePlayer(Cr, GetOwningPlayer(GetTriggerUnit()))
        call ForceRemovePlayer(gs, GetOwningPlayer(GetTriggerUnit()))
        call ForceRemovePlayer(Vr, GetOwningPlayer(GetTriggerUnit()))
        call PlaySoundBJ(ue)
        call SetHeroLevelBJ(GetTriggerUnit(), $00000001, false)
        call RemoveItem(GetItemOfTypeFromUnitBJ(GetTriggerUnit(), $49303130))
        call DisplayTextToForce(MwS(GetOwningPlayer(GetTriggerUnit())), "|cffffcc00Class Trainer|r : |cff87ceebNicely done! Naisha must really respect your skills...you are now a Tracker; congratulations.")
        call ReplaceUnitBJ(GetTriggerUnit(), $48303134, $00000002)
        call SelectUnitForPlayerSingle(bj_lastReplacedUnit, GetOwningPlayer(GetTriggerUnit()))
        call DestroyQuest(Lr[1 + GetPlayerId(GetOwningPlayer(bj_lastReplacedUnit))])
        call SetHeroLevel(bj_lastReplacedUnit, $00000001, true)
        call UnitStripHeroLevel(bj_lastReplacedUnit, $00000001)
    endif
endfunction
function oru takes nothing returns nothing
    call ForceRemovePlayer(rt, GetOwningPlayer(GetTriggerUnit()))
    call ForceRemovePlayer(ot, GetOwningPlayer(GetTriggerUnit()))
    call ForceRemovePlayer(Ot, GetOwningPlayer(GetTriggerUnit()))
    call DisplayTextToForce(MwS(GetOwningPlayer(GetTriggerUnit())), "|cffffcc00Siegfried|r : |cff87ceebWell done, crusader. But you should know the way of an avenger is not like that of a champion. We protect our allies from battle, and we sacrifice ourselves if necessary. As such, I hope you use your skills to protect others, and follow the true path of an Avenger.")
    call DestroyQuest(st[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))])
    set st[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))] = null
    call SetHeroLevelBJ(GetTriggerUnit(), $00000001, false)
    call ReplaceUnitBJ(GetTriggerUnit(), $4830324B, $00000002)
    call SelectUnitForPlayerSingle(bj_lastReplacedUnit, GetOwningPlayer(GetTriggerUnit()))
    call SetHeroLevel(bj_lastReplacedUnit, $00000001, true)
    call UnitStripHeroLevel(bj_lastReplacedUnit, $00000001)
endfunction
function wSt takes nothing returns boolean
    return UnitInventoryCount(GetTriggerUnit()) != 6
endfunction
function ovu takes nothing returns nothing
    if wSt() then
        call PlaySoundBJ(ce)
        set lw[GetPlayerId(GetOwningPlayer(GetTriggerUnit()))] = 1227895094
        call TriggerExecute(ow)
        call DisplayTextToForce(MwS(GetOwningPlayer(GetTriggerUnit())), "|cffffcc00Priestess Shari|r : |cff87ceebYes, child. Melitele has blessed you and that is a good sign. Few of us have been blessed and spoken to by Melitele herself. After all that you did and all that has happened, I am pleased to welcome you to our humble Order and present you with this letter of recommendation. Go forth, sister, and spread the word!")
        call QuestSetDescription(Lr[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))], "I have it! I have the recommendation! Now to get back to my Class Trainer...")
    else
        call PlaySoundBJ(oe)
        call DisplayTimedTextToForce(MwS(GetOwningPlayer(GetTriggerUnit())), 7., "|cffff0000Inventory full! Cannot receive recommendation!|r")
    endif
endfunction
function owr takes nothing returns nothing
    call SetUnitPositionLoc(GetEnumUnit(), vo)
endfunction
function VPt takes string IPt returns nothing
    local unit PPt
    local player APt
    local integer DPt
    local real HPt
    local real JPt
    local integer KPt
    local integer LPt
    local real XPt
    local real CPt
    set DSw[ASw] = IPt
    set ASw = ASw + 1
    set PPt = GetTriggerUnit()
    set APt = eDs(PPt)
    set DPt = hgr(APt)
    set XPt = ANw(PPt)
    set CPt = XSw
    set HPt = XPt
    set JPt = CPt
    set KPt = 1227895108
    set LPt = 20
    set DS[1 + DPt] = 0
    call ForceRemovePlayer(IS[$0000000E], APt)
    call DestroyQuest(ES[1 + DPt])
    set ES[1 + DPt] = null
    call PlaySoundBJ(pe)
    call dii("|cffffcc00You have completed the Quest|r.", 5., APt)
    call dii("|cffffcc00Squeaky|r : There are really demons? Who would have thought!... It must be the magician, that studied the dark arts... Anyway, here's your reward!", 10., APt)
    call AddHeroXPSwapped(F, PPt, true)
    call wiS(DPt, KPt, HPt, JPt, APt, LPt, PPt, "when calling addItemWithVirtualCharges in SqueakyQuestReward, line 97")
    set ASw = ASw - 1
    set PPt = null
    set APt = null
endfunction
function p3w takes nothing returns nothing
    set ASw = 0
    call VPt("via function reference SqueakyQuestReward, line 125")
endfunction
function p5r takes nothing returns nothing
    set ASw = 0
    call nXs("via function reference JobAdvancementQuestHandler, line 1190")
endfunction
function JRt takes string DRt returns integer
    local integer HRt
    set DSw[ASw] = DRt
    set ASw = ASw + 1
    if NX == 0 then
        if MX < 32768 then
            set MX = MX + 1
            set HRt = MX
            set wC[HRt] = 727
        else
            call tNr("Out of memory: Could not create CallbackSingle_doAfter_Condition_addCondition_HeroRevive.", "when calling error in HeroRevive, line 169")
            set HRt = 0
        endif
    else
        set NX = NX - 1
        set HRt = BX[NX]
        set wC[HRt] = 727
    endif
    set ASw = ASw - 1
    return HRt
endfunction
function STi takes string wTi returns boolean
    local unit uTi
    local unit rTi
    local integer sTi
    local boolean tTi
    local real iTi
    set DSw[ASw] = wTi
    set ASw = ASw + 1
    set uTi = GetDyingUnit()
    set rTi = GetKillingUnit()
    if GetPlayerController(eDs(uTi)) == MAP_CONTROL_USER and(not yXu(uTi)) then
        set iTi = dw + 2. + 2.
        set sTi = JRt("when calling alloc_CallbackSingle_doAfter_Condition_addCondition_HeroRevive in HeroRevive, line 169")
        call RUs(sTi)
        set a8[sTi] = uTi
        call Ybr(iTi, sTi, "when calling doAfter in HeroRevive, line 169")
    endif
    set tTi = GetPlayerController(eDs(rTi)) != MAP_CONTROL_USER and GetPlayerController(eDs(uTi)) == MAP_CONTROL_USER and IsUnitType(uTi, UNIT_TYPE_HERO) and(not IsPlayerInForce(eDs(uTi), Lt))
    set ASw = ASw - 1
    set uTi = null
    set rTi = null
    return tTi
endfunction
function p7S takes nothing returns boolean
    set ASw = 0
    return STi("via function reference HeroRevive, line 164")
endfunction
function p8w takes nothing returns boolean
    return r5S(GetTriggerUnit()) == nk
endfunction
function p9r takes nothing returns boolean
    return (GetUnitTypeId(GetOrderTargetUnit()) == 1747989576 and IsUnitInGroup(GetTriggerUnit(), kpu(300., GetUnitLoc(GetOrderTargetUnit()))) and IsUnitType(GetTriggerUnit(), UNIT_TYPE_HERO) and Zo[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))] == 1 and Po[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))] == 4 and Eo[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))] >= 175 and UnitHasItemOfTypeBJ(GetTriggerUnit(), $49303534)) != false
endfunction
function pAu takes nothing returns nothing
    set Et[1 + GetPlayerId(GetTriggerPlayer())] = GetEnumUnit()
endfunction
function pIs takes nothing returns nothing
    call PanCameraToTimedLocForPlayer(GetEnumPlayer(), vo, 0.)
    call TriggerExecute(MT)
endfunction
function C6i takes string L6i returns nothing
    local unit X6i
    set DSw[ASw] = L6i
    set ASw = ASw + 1
    set X6i = GetTriggerUnit()
    call Blu(X6i, Al, Ul, "when calling imp3MazeSetUnitToNewStage in Imp3DragonFortress, line 812")
    set ASw = ASw - 1
    set X6i = null
endfunction
function pJi takes nothing returns nothing
    set ASw = 0
    call C6i("via function reference Imp3DragonFortress, line 1665")
endfunction
function pLu takes nothing returns boolean
    return IsPlayerInForce(GetOwningPlayer(GetTriggerUnit()), pt) and IsPlayerInForce(GetOwningPlayer(GetTriggerUnit()), et) and IsPlayerInForce(GetOwningPlayer(GetTriggerUnit()), yt) and GetUnitTypeId(GetOrderTargetUnit()) == ct and IsUnitInGroup(GetTriggerUnit(), kpu(300., GetUnitLoc(GetOrderTargetUnit())))
endfunction
function pMi takes nothing returns boolean
    set tv = 1000
    return true
endfunction
function pOu takes nothing returns nothing
    call ForGroupBJ(f1s(bj_mapInitialPlayableArea), bpw)
endfunction
function S5S takes nothing returns boolean
    return UnitInventoryCount(GetTriggerUnit()) != 6
endfunction
function pTs takes nothing returns nothing
    if S5S() then
        call PlaySoundBJ(ce)
        call ForceAddPlayer(Vr, GetOwningPlayer(GetTriggerUnit()))
        set vs[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))] = 0
        set lw[GetPlayerId(GetOwningPlayer(GetTriggerUnit()))] = 1227895092
        call TriggerExecute(ow)
        call DisplayTextToForce(MwS(GetOwningPlayer(GetTriggerUnit())), "|cffffcc00Stendarr|r : |cff87ceebI can see the Blessing of the Highfather on you. Well done. How did it feel; the power of the Highfather coming over you? Here is my recommendation. Bring it to your Class Trainer. You are ready to join the true Church, my friend.")
        call QuestSetDescription(Lr[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))], "I have it! I have the recommendation! Now to get back to my Class Trainer...")
    else
        call PlaySoundBJ(oe)
        call DisplayTimedTextToForce(MwS(GetOwningPlayer(GetTriggerUnit())), 7., "|cffff0000Inventory full! Cannot receive recommendation!|r")
    endif
endfunction
function GDi takes string TDi returns integer
    local integer YDi
    set DSw[ASw] = TDi
    set ASw = ASw + 1
    if NX == 0 then
        if MX < 32768 then
            set MX = MX + 1
            set YDi = MX
            set wC[YDi] = 933
        else
            call tNr("Out of memory: Could not create CallbackSingle_doAfter_PlayerCommands.", "when calling error in PlayerCommands, line 261")
            set YDi = 0
        endif
    else
        set NX = NX - 1
        set YDi = BX[NX]
        set wC[YDi] = 933
    endif
    set ASw = ASw - 1
    return YDi
endfunction
function Aju takes string Qju returns boolean
    local integer Wju
    local trigger Eju
    local trigger Zju
    local trigger Uju
    local trigger Iju
    local trigger Pju
    set DSw[ASw] = Qju
    set ASw = ASw + 1
    set lD = XQt("when calling new_LinkedList in PlayerCommands, line 22")
    set Wju = GDi("when calling alloc_CallbackSingle_doAfter_PlayerCommands in PlayerCommands, line 261")
    call RUs(Wju)
    call Ybr(1., Wju, "when calling doAfter in PlayerCommands, line 261")
    set Eju = CreateTrigger()
    call l2w(Eju, EVENT_PLAYER_UNIT_SELECTED)
    set Zju = Eju
    call B2S(Zju, hWw)
    set Uju = Tu
    call B2S(Uju, FWw)
    set Iju = Yu
    call B2S(Iju, kWw)
    set Pju = Gu
    call B2S(Pju, jWw)
    set ASw = ASw - 1
    set Eju = null
    set Zju = null
    set Uju = null
    set Iju = null
    set Pju = null
    return true
endfunction
function pUr takes nothing returns boolean
    set ASw = 0
    return Aju("via function reference PlayerCommands, line 1")
endfunction
function pXu takes nothing returns nothing
    call PanCameraToTimedLocForPlayer(GetEnumPlayer(), Wr, 0.)
endfunction
function pcS takes nothing returns boolean
    return GetUnitTypeId(GetTriggerUnit()) == 1211117644 and GetUnitTypeId(GetOrderTargetUnit()) == 1747988568 and IsPlayerInForce(GetOwningPlayer(GetTriggerUnit()), Kr) and IsPlayerInForce(GetOwningPlayer(GetTriggerUnit()), Cr) == false and IsUnitInGroup(GetTriggerUnit(), kpu(300., GetUnitLoc(GetOrderTargetUnit())))
endfunction
function pci takes nothing returns nothing
    call RemoveUnit(GetEnumUnit())
endfunction
function pct takes nothing returns boolean
    return GetItemType(GetManipulatedItem()) == ITEM_TYPE_POWERUP
endfunction
function pkr takes nothing returns nothing
    call IssuePointOrderByIdLoc(GetEnumUnit(), $000D000F, ut)
endfunction
function pqu takes nothing returns nothing
    call SetUnitLifePercentBJ(GetEnumUnit(), 100.)
endfunction
function bhu takes string Ohu returns integer
    local integer lhu
    set DSw[ASw] = Ohu
    set ASw = ASw + 1
    if NX == 0 then
        if MX < 32768 then
            set MX = MX + 1
            set lhu = MX
            set wC[lhu] = 975
        else
            call tNr("Out of memory: Could not create CallbackSingle_doAfter_Voidless.", "when calling error in Voidless, line 517")
            set lhu = 0
        endif
    else
        set NX = NX - 1
        set lhu = BX[NX]
        set wC[lhu] = 975
    endif
    set ASw = ASw - 1
    return lhu
endfunction
function rws takes string wws returns integer
    local integer uws
    set DSw[ASw] = wws
    set ASw = ASw + 1
    if NX == 0 then
        if MX < 32768 then
            set MX = MX + 1
            set uws = MX
            set wC[uws] = 976
        else
            call tNr("Out of memory: Could not create CallbackSingle_doAfter_Voidless.", "when calling error in Voidless, line 545")
            set uws = 0
        endif
    else
        set NX = NX - 1
        set uws = BX[NX]
        set wC[uws] = 976
    endif
    set ASw = ASw - 1
    return uws
endfunction
function JSu takes string ISu returns nothing
    local group PSu
    local unit ASu
    local integer DSu
    local integer HSu
    set DSw[ASw] = ISu
    set ASw = ASw + 1
    if smt(fc[MJ]) != 0 then
        set PSu = XbS(fc[MJ])
        loop
            exitwhen not hJw(PSu)
            set ASu = tPr(PSu)
            call dii("Sanctum stage " + fju(OK) + " cleared in " + L7s(oK, false) + " with " + fju(smt(fc[MJ])) + " adventurers.", 5., eDs(ASu))
            call GYS(ASu, aSr(ASu))
            call b9i(ASu, Ges(ASu))
            call UnitResetCooldown(ASu)
        endloop
        call lxs(PSu)
        set OK = OK + 1
        set oK = 0.
        set yK = true
        call ibr("when calling cleanupMechanics in Voidless, line 509")
        if uK != null then
            call uFr(uK)
            set uK = null
        endif
        call E4r()
        set DSu = bhu("when calling alloc_CallbackSingle_doAfter_Voidless in Voidless, line 517")
        call RUs(DSu)
        call Ybr(0.1, DSu, "when calling doAfter in Voidless, line 517")
        set HSu = rws("when calling alloc_CallbackSingle_doAfter_Voidless in Voidless, line 545")
        call RUs(HSu)
        call Ybr(5., HSu, "when calling doAfter in Voidless, line 545")
    endif
    set ASw = ASw - 1
    set PSu = null
    set ASu = null
endfunction
function RCw takes unit qCw, string aCw returns nothing
    local real nCw
    local integer dCw
    local unit fCw
    set DSw[ASw] = aCw
    set ASw = ASw + 1
    set nCw = 0.05 + JGi(OK * 1. / 2) * 1. / 30
    set dCw = gJi(NL, "when calling iterator in Voidless_triggers, line 149")
    loop
        exitwhen not slr(dCw, "when calling hasNext in Voidless_triggers, line 149")
        set fCw = iCu(Gjs(dCw, "when calling next in Voidless_triggers, line 149"), "when calling unitFromIndex in Voidless_triggers, line 149")
        if GpS(wps(NL, Aei(fCw), "when calling get in Voidless_triggers, line 150"), Aei(qCw), "when calling has in Voidless_triggers, line 150") then
            call eys(wps(NL, Aei(fCw), "when calling get in Voidless_triggers, line 151"), Aei(qCw), "when calling remove in Voidless_triggers, line 151")
            call uFr(qCw)
            call UNi(fCw, aSr(fCw) * nCw)
            call yYi(uSs(ANw(fCw), XSw, qm), 2., "when calling destrAdvTimed in Voidless_triggers, line 154")
            exitwhen true
        endif
    endloop
    call Ejr(dCw, "when calling close in Voidless_triggers, line 149")
    set ASw = ASw - 1
    set fCw = null
endfunction
function YJw takes string RJw returns integer
    local integer TJw
    set DSw[ASw] = RJw
    set ASw = ASw + 1
    if NX == 0 then
        if MX < 32768 then
            set MX = MX + 1
            set TJw = MX
            set wC[TJw] = 998
        else
            call tNr("Out of memory: Could not create CallbackSingle_doAfter_Voidless_triggers.", "when calling error in Voidless_triggers, line 103")
            set TJw = 0
        endif
    else
        set NX = NX - 1
        set TJw = BX[NX]
        set wC[TJw] = 998
    endif
    set ASw = ASw - 1
    return TJw
endfunction
function YVu takes string lVu returns nothing
    local unit bVu
    local integer yVu
    local integer pVu
    local group eVu
    local real qVu
    local real aVu
    local group nVu
    local unit dVu
    local integer fVu
    local real RVu
    local real TVu
    set DSw[ASw] = lVu
    set ASw = ASw + 1
    set bVu = GetDyingUnit()
    set yVu = r5S(bVu)
    if eDs(bVu) == aD[PLAYER_NEUTRAL_AGGRESSIVE]then
        set pVu = yVu
        if pVu == AK then
            set eVu = Dit(hK, "when calling getUnitsInRect in Voidless_triggers, line 94")
            set RVu = oQu(kK)
            set TVu = Gcw
            set qVu = RVu
            set aVu = TVu
            set nVu = XbS(eVu)
            loop
    exitwhen not hJw(nVu)
    set dVu = tPr(nVu)
    if hgr(eDs(dVu)) <= Lh then
                    call J7i(dVu, qVu, aVu)
                    call W4t(eDs(dVu), qVu, aVu, 0.)
    endif
            endloop
            call lxs(nVu)
            call Sju(eVu, "when calling release in Voidless_triggers, line 101")
            set fVu = YJw("when calling alloc_CallbackSingle_doAfter_Voidless_triggers in Voidless_triggers, line 103")
            call RUs(fVu)
            call Ybr(1., fVu, "when calling doAfter in Voidless_triggers, line 103")
        elseif pVu == PK then
            call p5s(Rc[MJ], DEw)
            if OK < wK then
    call JSu("when calling onNextStage in Voidless_triggers, line 126")
            else
    call qtS("when calling onVoidlessFail in Voidless_triggers, line 128")
            endif
        elseif pVu == JK then
            if Jyr(NL, Aei(bVu), "when calling has in Voidless_triggers, line 131") then
    call Dns(wps(NL, Aei(bVu), "when calling get in Voidless_triggers, line 132"), "when calling recycleRiftSpawnerLL in Voidless_triggers, line 132")
    call u5w(NL, Aei(bVu), "when calling remove in Voidless_triggers, line 133")
            endif
            call uFr(bVu)
        elseif pVu == KK then
            if GpS(wX, Aei(bVu), "when calling has in Voidless_triggers, line 136") then
    call eys(wX, Aei(bVu), "when calling remove in Voidless_triggers, line 137")
            endif
            call uFr(bVu)
        elseif pVu == LK then
            call ZdS(bVu, "when calling blackholeCleanup in Voidless_triggers, line 140")
        elseif pVu == XK then
            call RCw(bVu, "when calling imp5UnitAdsKilled in Voidless_triggers, line 142")
        elseif pVu == CK then
            call RCw(bVu, "when calling imp5UnitAdsKilled in Voidless_triggers, line 144")
        endif
    endif
    set ASw = ASw - 1
    set bVu = null
    set eVu = null
    set nVu = null
    set dVu = null
endfunction
function ptr takes nothing returns nothing
    set ASw = 0
    call YVu("via function reference Voidless_triggers, line 187")
endfunction
function ptt takes nothing returns boolean
    return GetUnitTypeId(GetTriggerUnit()) == 1211117638 and GetUnitTypeId(GetOrderTargetUnit()) == 1747988816 and IsPlayerInForce(GetOwningPlayer(GetTriggerUnit()), Vr) and UnitHasItemOfTypeBJ(GetTriggerUnit(), $49303136) == false and IsUnitInGroup(GetTriggerUnit(), kpu(300., GetUnitLoc(GetOrderTargetUnit())))
endfunction
function ptu takes nothing returns nothing
    local real Otu
    local real ltu
    local real btu
    local real ytu
    if GQ - sv > 900. then
        set sv = GQ
        set btu = ANw(GetDyingUnit())
        set ytu = XSw
        set Otu = btu
        set ltu = ytu
        call SetRandomSeed(P3w(GQ) + d0u(Otu * ltu))
    endif
endfunction
function q2u takes nothing returns boolean
    local trigger y2u
    local trigger p2u
    local trigger e2u
    set sW = 0.004774
    set tW = 0.10
    set iW = 100
    set y2u = CreateTrigger()
    call l2w(y2u, EVENT_PLAYER_HERO_LEVEL)
    set p2u = y2u
    call QYr(p2u, K2S(bj_mapInitialPlayableArea), null)
    set e2u = p2u
    call B2S(e2u, xmw)
    set y2u = null
    set p2u = null
    set e2u = null
    return true
endfunction
function q2w takes nothing returns nothing
    set uO = Player($00000002)
    call TriggerExecute(OY)
endfunction
function q5r takes nothing returns nothing
    set rs = GetRectCenter(ZO)
    call SetUnitPositionLocFacingBJ(GetTriggerUnit(), rs, 90.)
    call PanCameraToTimedLocForPlayer(GetOwningPlayer(GetTriggerUnit()), rs, 0.)
    call TriggerExecute(MT)
    call RemoveLocation(rs)
endfunction
function q7i takes nothing returns nothing
    call ForceRemovePlayer(IS[$00000003], GetOwningPlayer(GetTriggerUnit()))
    call DestroyQuest(ci[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))])
    set ci[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))] = null
    set Oi[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))] = 0
    call PlaySoundBJ(pe)
    call DisplayTimedTextToForce(MwS(GetOwningPlayer(GetOrderedUnit())), 5., "|cffffcc00You have completed the Quest|r.")
    call AddHeroXPSwapped(p, GetTriggerUnit(), true)
    call AdjustPlayerStateBJ($000004B0, GetOwningPlayer(GetTriggerUnit()), PLAYER_STATE_RESOURCE_GOLD)
endfunction
function q7w takes nothing returns nothing
    call PanCameraToTimedLocForPlayer(GetEnumPlayer(), vo, 0.)
    call TriggerExecute(MT)
endfunction
function oei takes nothing returns boolean
    return Si[1 + GetPlayerId(GetOwningPlayer(GetKillingUnit()))] >= 80
endfunction
function qAu takes nothing returns nothing
    set Si[1 + GetPlayerId(GetOwningPlayer(GetKillingUnit()))] = Si[1 + GetPlayerId(GetOwningPlayer(GetKillingUnit()))] + 1
    if oei() then
        call QuestMessageBJ(MwS(GetOwningPlayer(GetKillingUnit())), $00000002, "|cffffcc004th Job Advancement Quest Completed|r.")
        call ForceAddPlayer(ii, GetOwningPlayer(GetKillingUnit()))
    else
        call QuestMessageBJ(MwS(GetOwningPlayer(GetKillingUnit())), $00000001, I2S(Si[1 + GetPlayerId(GetOwningPlayer(GetKillingUnit()))]) + " Dark Elf/Elves killed.")
    endif
endfunction
function TTr takes string fTr returns integer
    local integer RTr
    set DSw[ASw] = fTr
    set ASw = ASw + 1
    if NX == 0 then
        if MX < 32768 then
            set MX = MX + 1
            set RTr = MX
            set wC[RTr] = 943
        else
            call tNr("Out of memory: Could not create CallbackSingle_doAfter_RespawnHeroesEnterReg.", "when calling error in RespawnHeroesEnterReg, line 71")
            set RTr = 0
        endif
    else
        set NX = NX - 1
        set RTr = BX[NX]
        set wC[RTr] = 943
    endif
    set ASw = ASw - 1
    return RTr
endfunction
function c6S takes string i6S returns boolean
    local integer S6S
    set DSw[ASw] = i6S
    set ASw = ASw + 1
    set S6S = TTr("when calling alloc_CallbackSingle_doAfter_RespawnHeroesEnterReg in RespawnHeroesEnterReg, line 71")
    call RUs(S6S)
    call Ybr(1., S6S, "when calling doAfter in RespawnHeroesEnterReg, line 71")
    set ASw = ASw - 1
    return true
endfunction
function qBr takes nothing returns boolean
    set ASw = 0
    return c6S("via function reference RespawnHeroesEnterReg, line 12")
endfunction
function qDr takes nothing returns nothing
    call ForceAddPlayer(rt, GetOwningPlayer(GetTriggerUnit()))
    call ForceAddPlayer(Ot, GetOwningPlayer(GetTriggerUnit()))
    call DisplayTextToForce(MwS(GetOwningPlayer(GetTriggerUnit())), "|cffffcc00Rain|r : |cff87ceebWhy do you interrupt my meditation? What? Champion? Why should I impart to you the strongest sword techniques in Silvasia? If you are so bent on becoming a champion, then transverse the Rite of Passage successfully and return to me.")
    call PlaySoundBJ(Se)
    call T_i(GetOwningPlayer(GetTriggerUnit()), $00000000, "4th Job Advancement Quest", "I have to transverse the Rite of Passage successfully.", "ReplaceableTextures\\PassiveButtons\\PASBTNGenericSpellImmunity.blp")
    set st[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))] = bj_lastCreatedQuest
    set kt[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))] = 0
endfunction
function d9r takes string q9r returns nothing
    local unit a9r
    local integer n9r
    set DSw[ASw] = q9r
    set ASw = ASw + 1
    set a9r = GetDyingUnit()
    set n9r = hgr(eDs(a9r))
    call pnr(hgr(eDs(a9r)), false, false, "when calling imp3EffectsResetForPlayer in Imp3DragonFortress, line 183")
    call rOi(n9r, false, "when calling imp3OnMazeEnd in Imp3DragonFortress, line 184")
    set ASw = ASw - 1
    set a9r = null
endfunction
function qEs takes nothing returns nothing
    set ASw = 0
    call d9r("via function reference Imp3DragonFortress, line 406")
endfunction
function EZi takes nothing returns boolean
    return GetItemTypeId(GetManipulatedItem()) == 1227895897 or GetItemTypeId(GetManipulatedItem()) == 1227895894
endfunction
function qFr takes nothing returns boolean
    return RectContainsUnit(lb, GetTriggerUnit()) and Zo[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))] == 1 and EZi() and IsPlayerInForce(GetOwningPlayer(GetTriggerUnit()), At) == false
endfunction
function Ers takes string Qrs returns integer
    local integer Wrs
    set DSw[ASw] = Qrs
    set ASw = ASw + 1
    if NX == 0 then
        if MX < 32768 then
            set MX = MX + 1
            set Wrs = MX
            set wC[Wrs] = 734
        else
            call tNr("Out of memory: Could not create CallbackSingle_doAfter_Dat_UltiIllusions.", "when calling error in Dat_UltiIllusions, line 86")
            set Wrs = 0
        endif
    else
        set NX = NX - 1
        set Wrs = BX[NX]
        set wC[Wrs] = 734
    endif
    set ASw = ASw - 1
    return Wrs
endfunction
function THu takes string fHu returns integer
    local integer RHu
    set DSw[ASw] = fHu
    set ASw = ASw + 1
    if rC == 0 then
        if sC < 32768 then
            set sC = sC + 1
            set RHu = sC
            set tC[RHu] = 647
        else
            call tNr("Out of memory: Could not create CallbackCounted_doPeriodicallyCounted_Dat_UltiIllusions.", "when calling error in Dat_UltiIllusions, line 54")
            set RHu = 0
        endif
    else
        set rC = rC - 1
        set RHu = uC[rC]
        set tC[RHu] = 647
    endif
    set ASw = ASw - 1
    return RHu
endfunction
function wtS takes string asS returns nothing
    local unit nsS
    local integer dsS
    local integer fsS
    local integer RsS
    local integer TsS
    local group YsS
    local integer GsS
    local integer gsS
    local real hsS
    local real FsS
    local unit ksS
    local unit jsS
    local unit xsS
    local unit vsS
    local unit msS
    local unit QsS
    local unit WsS
    local unit EsS
    local unit ZsS
    local unit UsS
    local unit IsS
    local unit PsS
    local unit AsS
    local unit DsS
    local integer HsS
    local integer JsS
    local integer KsS
    local integer LsS
    local real XsS
    local integer CsS
    local real VsS
    local real BsS
    local real NsS
    local real MsS
    set DSw[ASw] = asS
    set ASw = ASw + 1
    set nsS = GetTriggerUnit()
    set dsS = 1
    set fsS = Qj
    loop
        exitwhen dsS > fsS
        set RsS = MUu(Zj, $00000000, $00000006, $00000005, "when calling getRandomIntEx in Dat_UltiIllusions, line 28")
        set KsS = Zj
        if RsS >= 0 and RsS <= 6 then
            set TsS = RsS
        else
            set TsS = 0
        endif
        call vwt(KsS, TsS, "when calling add in Dat_UltiIllusions, line 29")
        set dsS = dsS + 1
    endloop
    call UOS($00000001, "when calling getGroup in Dat_UltiIllusions, line 31")
    set YsS = pIw
    set GsS = 1
    set gsS = Qj
    loop
        exitwhen GsS > gsS
        set NsS = ANw(nsS)
        set MsS = XSw
        set CsS = C_r(Zj, GsS - 1, "when calling get in Dat_UltiIllusions, line 33")
        set VsS = GLr(NsS, MsS, Wj[CsS], Ej[CsS])
        set BsS = dcw
        set hsS = VsS
        set FsS = BsS
        set jsS = dps(qw, l2s(Iji("h04L", "when calling unObfuscate in Dat_UltiIllusions, line 34"), "when calling fromRawCode in Dat_UltiIllusions, line 34"), hsS, FsS, QVt(hsS, FsS, ANw(nsS), XSw))
        call Yis(jsS, boS(nsS), false)
        set xsS = jsS
        call Q_s(xsS, l2s(Iji("AInv", "when calling unObfuscate in Dat_UltiIllusions, line 38"), "when calling fromRawCode in Dat_UltiIllusions, line 38"))
        set vsS = xsS
        call lKs(vsS, l2s(Iji("A07F", "when calling unObfuscate in Dat_UltiIllusions, line 39"), "when calling fromRawCode in Dat_UltiIllusions, line 39"), $0000001E)
        set msS = vsS
        call lKs(msS, l2s(Iji("A07H", "when calling unObfuscate in Dat_UltiIllusions, line 40"), "when calling fromRawCode in Dat_UltiIllusions, line 40"), $0000001E)
        set QsS = msS
        call lKs(QsS, l2s(Iji("A07G", "when calling unObfuscate in Dat_UltiIllusions, line 41"), "when calling fromRawCode in Dat_UltiIllusions, line 41"), $0000001E)
        set WsS = QsS
        call fjs(WsS, ifi(Iji("18000", "when calling unObfuscate in Dat_UltiIllusions, line 42")), $00000001)
        set EsS = WsS
        call V5S(EsS, l2s(Iji("AImx", "when calling unObfuscate in Dat_UltiIllusions, line 43"), "when calling fromRawCode in Dat_UltiIllusions, line 43"))
        set ZsS = EsS
        call V5S(ZsS, l2s(Iji("Aeth", "when calling unObfuscate in Dat_UltiIllusions, line 44"), "when calling fromRawCode in Dat_UltiIllusions, line 44"))
        set UsS = ZsS
        call V5S(UsS, l2s(Iji("Avul", "when calling unObfuscate in Dat_UltiIllusions, line 45"), "when calling fromRawCode in Dat_UltiIllusions, line 45"))
        set IsS = UsS
        call YYu(IsS, $00000539)
        set PsS = IsS
        call GYS(PsS, 1337.)
        set AsS = PsS
        call O6t(AsS, 1007.)
        set DsS = AsS
        call rZu(DsS, .5)
        set ksS = DsS
        call DDr(YsS, ksS)
        call vwt(Uj, Aei(ksS), "when calling add in Dat_UltiIllusions, line 51")
        set LsS = d0u(mj / .3)
        set HsS = THu("when calling alloc_CallbackCounted_doPeriodicallyCounted_Dat_UltiIllusions in Dat_UltiIllusions, line 54")
        call Inr(HsS)
        set q3[HsS] = nsS
        set a3[HsS] = ksS
        set n3[HsS] = YsS
        call l5s(.3, LsS, HsS, "when calling doPeriodicallyCounted in Dat_UltiIllusions, line 54")
        set GsS = GsS + 1
    endloop
    call u3w(Zj, "when calling clear in Dat_UltiIllusions, line 84")
    set XsS = mj + .333
    set JsS = Ers("when calling alloc_CallbackSingle_doAfter_Dat_UltiIllusions in Dat_UltiIllusions, line 86")
    call RUs(JsS)
    set d3[JsS] = YsS
    call Ybr(XsS, JsS, "when calling doAfter in Dat_UltiIllusions, line 86")
    set ASw = ASw - 1
    set nsS = null
    set YsS = null
    set ksS = null
    set jsS = null
    set xsS = null
    set vsS = null
    set msS = null
    set QsS = null
    set WsS = null
    set EsS = null
    set ZsS = null
    set UsS = null
    set IsS = null
    set PsS = null
    set AsS = null
    set DsS = null
endfunction
function qFu takes nothing returns nothing
    set ASw = 0
    call wtS("via function reference Dat_UltiIllusions, line 100")
endfunction
function qGt takes nothing returns nothing
    call RemoveItem(GetManipulatedItem())
    call ForceAddPlayer(IS[$00000001], GetOwningPlayer(GetTriggerUnit()))
    call DisplayTextToForce(MwS(GetOwningPlayer(GetTriggerUnit())), "|cffffcc00Skypper|r : Damn those noisy Satyrs! They're so noisy that their noise alone is enough to drive me crazy! Hey you, do me a favour and eliminate 5 of them for me. I might even reward you with some of my precious gold, so be quick about it!")
    call T_i(GetOwningPlayer(GetTriggerUnit()), $00000000, "Ridding the Satyrs", "Get rid of 5 Satyrs for Skypper. This may be off the record, but I don't think he's going to give me much of a reward.", "ReplaceableTextures\\CommandButtons\\BTNFelHound.blp")
    set rr[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))] = bj_lastCreatedQuest
endfunction
function qHu takes nothing returns boolean
    set PH = 115.00
    set pT = CreateTrigger()
    call TriggerRegisterAnyUnitEventBJ(pT, EVENT_PLAYER_UNIT_SPELL_EFFECT)
    call TriggerAddCondition(pT, Condition(TEw))
    call TriggerAddAction(pT, YEw)
    return true
endfunction
function qJt takes nothing returns boolean
    return IsPlayerInForce(GetTriggerPlayer(), us) == false and IsPlayerInForce(GetTriggerPlayer(), ws) == false and IsPlayerInForce(GetTriggerPlayer(), hs) == false and IsPlayerInForce(GetTriggerPlayer(), At) == false and IsPlayerInForce(GetTriggerPlayer(), Us)
endfunction
function Pwu takes string Iwu returns nothing
    set DSw[ASw] = Iwu
    set ASw = ASw + 1
    call aUt(GetTriggerUnit(), "when calling enableBeingSuperSaiyan in SuperSaiyan, line 251")
    set ASw = ASw - 1
endfunction
function qJu takes nothing returns nothing
    set ASw = 0
    call Pwu("via function reference SuperSaiyan, line 266")
endfunction
function qJw takes nothing returns boolean
    return GetUnitTypeId(GetTriggerUnit()) == 1211117874 and GetUnitTypeId(GetOrderTargetUnit()) == 1747989042 and IsPlayerInForce(GetOwningPlayer(GetTriggerUnit()), rt) and IsPlayerInForce(GetOwningPlayer(GetTriggerUnit()), ot) and IsUnitInGroup(GetTriggerUnit(), kpu(300., GetUnitLoc(GetOrderTargetUnit())))
endfunction
function k4r takes string g4r returns nothing
    local integer h4r
    local integer F4r
    set DSw[ASw] = g4r
    set ASw = ASw + 1
    set h4r = c5r(gQ, "when calling iterator in PlayerGoldAndShardLimit, line 19")
    loop
        exitwhen not Tji(h4r)
        set F4r = LXi(h4r)
        call cFt(F4r, "when calling limitGoldAndShardsForPlayer in PlayerGoldAndShardLimit, line 20")
    endloop
    call vms(h4r, "when calling close in PlayerGoldAndShardLimit, line 19")
    set ASw = ASw - 1
endfunction
function qLt takes nothing returns nothing
    set ASw = 0
    call k4r("via function reference PlayerGoldAndShardLimit, line 24")
endfunction
function qLw takes nothing returns nothing
    call TriggerRegisterUnitEvent(jf, GetEnumUnit(), EVENT_UNIT_DAMAGED)
    call TriggerRegisterUnitEvent(Me, GetEnumUnit(), EVENT_UNIT_DAMAGED)
    call TriggerRegisterUnitEvent(kf, GetEnumUnit(), EVENT_UNIT_DAMAGED)
    call TriggerRegisterUnitEvent(xf, GetEnumUnit(), EVENT_UNIT_DAMAGED)
    call TriggerRegisterUnitEvent(vf, GetEnumUnit(), EVENT_UNIT_DAMAGED)
    call TriggerRegisterUnitEvent(mf, GetEnumUnit(), EVENT_UNIT_DAMAGED)
    call TriggerRegisterUnitEvent(Ef, GetEnumUnit(), EVENT_UNIT_DAMAGED)
endfunction
function qOS takes nothing returns nothing
    local player eOS = uO
    if TimerGetElapsed(tO[1 + GetPlayerId(eOS)]) <= 1. then
        set SO[1 + GetPlayerId(eOS)] = SO[1 + GetPlayerId(eOS)] + ju
        call DisplayTimedTextToPlayer(eOS, 0., 0., 4., "|cffFFD700COOL")
    elseif TimerGetElapsed(tO[1 + GetPlayerId(eOS)]) <= 1.3 then
        set SO[1 + GetPlayerId(eOS)] = SO[1 + GetPlayerId(eOS)] + xu
        call DisplayTimedTextToPlayer(eOS, 0., 0., 4., "|cff1E90FFFINE")
    elseif TimerGetElapsed(tO[1 + GetPlayerId(eOS)]) <= 1.6 then
        set SO[1 + GetPlayerId(eOS)] = SO[1 + GetPlayerId(eOS)] + vu
        call DisplayTimedTextToPlayer(eOS, 0., 0., 4., "|cff00EE00SAFE")
    elseif TimerGetElapsed(tO[1 + GetPlayerId(eOS)]) <= 1.99 then
        set SO[1 + GetPlayerId(eOS)] = SO[1 + GetPlayerId(eOS)] + mu
        call DisplayTimedTextToPlayer(eOS, 0., 0., 4., "|cff0000FFSAD")
    elseif TimerGetElapsed(tO[1 + GetPlayerId(eOS)]) <= 2. then
        call DisplayTimedTextToPlayer(eOS, 0., 0., 4., "|cff8A2BE2WORST")
    endif
    set eOS = null
    set eOS = null
endfunction
function JXi takes nothing returns boolean
    return Si[1 + GetPlayerId(GetOwningPlayer(GetKillingUnit()))] >= 50
endfunction
function qRu takes nothing returns nothing
    set Si[1 + GetPlayerId(GetOwningPlayer(GetKillingUnit()))] = Si[1 + GetPlayerId(GetOwningPlayer(GetKillingUnit()))] + 1
    if JXi() then
        call QuestMessageBJ(MwS(GetOwningPlayer(GetKillingUnit())), $00000002, "|cffffcc004th Job Advancement Quest Completed|r.")
        call ForceAddPlayer(ii, GetOwningPlayer(GetKillingUnit()))
    else
        call QuestMessageBJ(MwS(GetOwningPlayer(GetKillingUnit())), $00000001, I2S(Si[1 + GetPlayerId(GetOwningPlayer(GetKillingUnit()))]) + " Ogre(s) killed.")
    endif
endfunction
function qTs takes nothing returns boolean
    return (GetItemTypeId(GetManipulatedItem()) == 1227895892 and IsUnitType(GetTriggerUnit(), UNIT_TYPE_HERO) and IsPlayerInForce(GetOwningPlayer(GetTriggerUnit()), wO) == false and Zo[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))] == 1 and Po[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))] == 4 and Eo[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))] >= 175) != false
endfunction
function m4r takes nothing returns boolean
    return GetUnitTypeId(GetDyingUnit()) == 1848651863 or GetUnitTypeId(GetDyingUnit()) == 1848651861 or GetUnitTypeId(GetDyingUnit()) == 1848651865
endfunction
function qTu takes nothing returns boolean
    return m4r() and IsPlayerInForce(GetOwningPlayer(GetKillingUnit()), gs) and UnitHasItemOfTypeBJ(GetKillingUnit(), $49303130) == false
endfunction
function qVs takes nothing returns nothing
    call ForceRemovePlayer(IS[$00000002], GetOwningPlayer(GetTriggerUnit()))
    call DestroyQuest(is[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))])
    set is[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))] = null
    set Ss[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))] = 0
    call PlaySoundBJ(pe)
    call DisplayTimedTextToForce(MwS(GetOwningPlayer(GetOrderedUnit())), 5., "|cffffcc00You have completed the Quest|r.")
    call AddHeroXPSwapped(y, GetTriggerUnit(), true)
    call AdjustPlayerStateBJ($00000190, GetOwningPlayer(GetTriggerUnit()), PLAYER_STATE_RESOURCE_GOLD)
endfunction
function qWu takes nothing returns boolean
    return Zo[1 + GetPlayerId(GetTriggerPlayer())] != 0
endfunction
function krs takes nothing returns boolean
    return Si[1 + GetPlayerId(GetOwningPlayer(GetKillingUnit()))] >= 80
endfunction
function qZt takes nothing returns nothing
    set Si[1 + GetPlayerId(GetOwningPlayer(GetKillingUnit()))] = Si[1 + GetPlayerId(GetOwningPlayer(GetKillingUnit()))] + 1
    if krs() then
        call QuestMessageBJ(MwS(GetOwningPlayer(GetKillingUnit())), $00000002, "|cffffcc004th Job Advancement Quest Completed|r.")
        call ForceAddPlayer(ii, GetOwningPlayer(GetKillingUnit()))
    else
        call QuestMessageBJ(MwS(GetOwningPlayer(GetKillingUnit())), $00000001, I2S(Si[1 + GetPlayerId(GetOwningPlayer(GetKillingUnit()))]) + " Ogre(s) killed.")
    endif
endfunction
function qci takes nothing returns nothing
    call TriggerExecute(pR)
endfunction
function qcs takes nothing returns boolean
    return GetUnitTypeId(GetTriggerUnit()) == 1211117642 and GetUnitTypeId(GetOrderTargetUnit()) == 1747988809 and IsPlayerInForce(GetOwningPlayer(GetTriggerUnit()), Kr) and IsPlayerInForce(GetOwningPlayer(GetTriggerUnit()), Cr) == false and IsUnitInGroup(GetTriggerUnit(), kpu(300., GetUnitLoc(GetOrderTargetUnit())))
endfunction
function AFt takes string IFt returns integer
    local integer PFt
    set DSw[ASw] = IFt
    set ASw = ASw + 1
    if NX == 0 then
        if MX < 32768 then
            set MX = MX + 1
            set PFt = MX
            set wC[PFt] = 885
        else
            call tNr("Out of memory: Could not create CallbackSingle_doAfter_Inspirit_Overvelde.", "when calling error in Inspirit_Overvelde, line 126")
            set PFt = 0
        endif
    else
        set NX = NX - 1
        set PFt = BX[NX]
        set wC[PFt] = 885
    endif
    set ASw = ASw - 1
    return PFt
endfunction
function Orr takes string crr returns integer
    local integer orr
    set DSw[ASw] = crr
    set ASw = ASw + 1
    if PC == 0 then
        if AC < 32768 then
            set AC = AC + 1
            set orr = AC
            set DC[orr] = 688
        else
            call tNr("Out of memory: Could not create CallbackPeriodic_doPeriodically_Inspirit_Overvelde.", "when calling error in Inspirit_Overvelde, line 130")
            set orr = 0
        endif
    else
        set PC = PC - 1
        set orr = IC[PC]
        set DC[orr] = 688
    endif
    set ASw = ASw - 1
    return orr
endfunction
function WHw takes string qHw returns boolean
    local integer aHw
    local integer nHw
    local integer dHw
    local integer fHw
    local integer RHw
    local integer THw
    local integer YHw
    local integer GHw
    local integer gHw
    local integer hHw
    local integer FHw
    local integer kHw
    local integer jHw
    local integer xHw
    local integer vHw
    local integer mHw
    local integer QHw
    set DSw[ASw] = qHw
    set ASw = ASw + 1
    set LU = 400.
    set XU = 1.5
    set CU = 2.5
    set VU = 3.2
    set BU = 1230194254
    set NU = 1230194243
    set MU = 1230194510
    set wI = 1230194499
    set uI = Iji("ReplaceableTextures/CommandButtons/BTNFadedInspiritNormal.blp", "when calling unObfuscate in Inspirit_Overvelde, line 29")
    set rI = Iji("ReplaceableTextures/CommandButtons/BTNFadedInspiritCharged.blp", "when calling unObfuscate in Inspirit_Overvelde, line 30")
    set sI = Iji("ReplaceableTextures/CommandButtons/BTNGlowingInspiritNormal.blp", "when calling unObfuscate in Inspirit_Overvelde, line 31")
    set tI = Iji("ReplaceableTextures/CommandButtons/BTNGlowingInspiritCharged.blp", "when calling unObfuscate in Inspirit_Overvelde, line 32")
    set iI = "|cffFFD700Faded Inspirit|r"
    set SI = "|cffFFD700Faded Inspirit|r (charged)"
    set cI = "|cffFFD700Glowing Inspirit|r"
    set oI = "|cffFFD700Glowing Inspirit|r (charged)"
    set OI = jts("when calling new_HashMap in Inspirit_Overvelde, line 38")
    set aHw = jts("when calling new_HashMap in Inspirit_Overvelde, line 39")
    call GVw(aHw, BF, O_i(true), "when calling put in Inspirit_Overvelde, line 39")
    set nHw = aHw
    call GVw(nHw, uk, O_i(true), "when calling put in Inspirit_Overvelde, line 39")
    set dHw = nHw
    call GVw(dHw, rk, O_i(true), "when calling put in Inspirit_Overvelde, line 39")
    set lI = dHw
    call dUs(Ef, Condition(pQw))
    call B2S(Ef, eQw)
    set fHw = AFt("when calling alloc_CallbackSingle_doAfter_Inspirit_Overvelde in Inspirit_Overvelde, line 126")
    call RUs(fHw)
    call Ybr(2., fHw, "when calling doAfter in Inspirit_Overvelde, line 126")
    set RHw = Orr("when calling alloc_CallbackPeriodic_doPeriodically_Inspirit_Overvelde in Inspirit_Overvelde, line 130")
    call kVu(RHw)
    call wcs(1., RHw, "when calling doPeriodically in Inspirit_Overvelde, line 130")
    set THw = XQt("when calling new_LinkedList in Inspirit_Overvelde, line 147")
    call vwt(THw, BU, "when calling add in Inspirit_Overvelde, line 147")
    set YHw = THw
    call vwt(YHw, NU, "when calling add in Inspirit_Overvelde, line 147")
    set GHw = YHw
    call vwt(GHw, MU, "when calling add in Inspirit_Overvelde, line 147")
    set gHw = GHw
    call vwt(gHw, wI, "when calling add in Inspirit_Overvelde, line 147")
    set hHw = jts("when calling new_HashMap in Inspirit_Overvelde, line 148")
    call GVw(hHw, BU, err(uI, "when calling stringToIndex in Inspirit_Overvelde, line 148"), "when calling put in Inspirit_Overvelde, line 148")
    set FHw = hHw
    call GVw(FHw, NU, err(rI, "when calling stringToIndex in Inspirit_Overvelde, line 148"), "when calling put in Inspirit_Overvelde, line 148")
    set kHw = FHw
    call GVw(kHw, MU, err(sI, "when calling stringToIndex in Inspirit_Overvelde, line 148"), "when calling put in Inspirit_Overvelde, line 148")
    set jHw = kHw
    call GVw(jHw, wI, err(tI, "when calling stringToIndex in Inspirit_Overvelde, line 148"), "when calling put in Inspirit_Overvelde, line 148")
    set xHw = jts("when calling new_HashMap in Inspirit_Overvelde, line 149")
    call GVw(xHw, BU, err(iI, "when calling stringToIndex in Inspirit_Overvelde, line 149"), "when calling put in Inspirit_Overvelde, line 149")
    set vHw = xHw
    call GVw(vHw, NU, err(SI, "when calling stringToIndex in Inspirit_Overvelde, line 149"), "when calling put in Inspirit_Overvelde, line 149")
    set mHw = vHw
    call GVw(mHw, MU, err(cI, "when calling stringToIndex in Inspirit_Overvelde, line 149"), "when calling put in Inspirit_Overvelde, line 149")
    set QHw = mHw
    call GVw(QHw, wI, err(oI, "when calling stringToIndex in Inspirit_Overvelde, line 149"), "when calling put in Inspirit_Overvelde, line 149")
    set ASw = ASw - 1
    return true
endfunction
function qkS takes nothing returns boolean
    set ASw = 0
    return WHw("via function reference Inspirit_Overvelde, line 1")
endfunction
function qri takes nothing returns boolean
    set kh = 200
    return true
endfunction
function qvu takes nothing returns boolean
    return GetUnitTypeId(GetOrderTargetUnit()) == mS and IsUnitInGroup(GetTriggerUnit(), kpu(300., GetUnitLoc(GetOrderTargetUnit()))) and IsPlayerInForce(GetOwningPlayer(GetTriggerUnit()), IS[$0000000C]) and vS[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))] >= 60
endfunction
function rAw takes nothing returns boolean
    local trigger MPw
    local trigger wAw
    local trigger uAw
    set WD = 500.
    set ED = 50.
    set ZD = 75.
    set UD = 400.
    set ID = 5
    set PD = 7
    set AD = 8
    set DD = .1
    set MPw = CreateTrigger()
    call B2S(MPw, DWw)
    set wAw = MPw
    call dUs(wAw, Condition(HWw))
    set uAw = wAw
    call l2w(uAw, EVENT_PLAYER_UNIT_SPELL_EFFECT)
    set MPw = null
    set wAw = null
    set uAw = null
    return true
endfunction
function rBr takes nothing returns nothing
    call ForceAddPlayer(kr, GetOwningPlayer(GetTriggerUnit()))
    call DisplayTextToForce(MwS(GetOwningPlayer(GetTriggerUnit())), "|cffffcc00Class Trainer|r : |cff87ceebAre you here to advance into a Cleric? My child, the path of light is easy to stray from, and being a faithful servant to the Highfather and Melitele is no easy task. That being said, I will need you to prove your devotion to the light. Seek out Skypper and follow his instructions. When you are done, return to me.")
    call PlaySoundBJ(Se)
    call T_i(GetOwningPlayer(GetTriggerUnit()), $00000000, "2nd Job Advancement Quest", "I must prove to the father that I will not stray from the righteous path and continue to be a faithful servant of the light. I must seek out Skypper and follow his instructions.", "ReplaceableTextures\\CommandButtons\\BTNHire.blp")
    set dr[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))] = bj_lastCreatedQuest
endfunction
function Ari takes integer jri, integer xri, integer vri, integer mri, integer Qri, integer Wri, integer Eri, integer Zri, integer Uri, string Iri returns nothing
    local integer Pri
    set DSw[ASw] = Iri
    set ASw = ASw + 1
    set Pri = xeS(xri, Xww[wuw[jri]], wuw[jri], "when calling new_LLEntry in LinkedList, line 40")
    set Cww[Xww[wuw[jri]]] = Pri
    set Xww[wuw[jri]] = Pri
    set uuw[jri] = uuw[jri] + 1
    set Pri = xeS(vri, Xww[wuw[jri]], wuw[jri], "when calling new_LLEntry in LinkedList, line 40")
    set Cww[Xww[wuw[jri]]] = Pri
    set Xww[wuw[jri]] = Pri
    set uuw[jri] = uuw[jri] + 1
    set Pri = xeS(mri, Xww[wuw[jri]], wuw[jri], "when calling new_LLEntry in LinkedList, line 40")
    set Cww[Xww[wuw[jri]]] = Pri
    set Xww[wuw[jri]] = Pri
    set uuw[jri] = uuw[jri] + 1
    set Pri = xeS(Qri, Xww[wuw[jri]], wuw[jri], "when calling new_LLEntry in LinkedList, line 40")
    set Cww[Xww[wuw[jri]]] = Pri
    set Xww[wuw[jri]] = Pri
    set uuw[jri] = uuw[jri] + 1
    set Pri = xeS(Wri, Xww[wuw[jri]], wuw[jri], "when calling new_LLEntry in LinkedList, line 40")
    set Cww[Xww[wuw[jri]]] = Pri
    set Xww[wuw[jri]] = Pri
    set uuw[jri] = uuw[jri] + 1
    set Pri = xeS(Eri, Xww[wuw[jri]], wuw[jri], "when calling new_LLEntry in LinkedList, line 40")
    set Cww[Xww[wuw[jri]]] = Pri
    set Xww[wuw[jri]] = Pri
    set uuw[jri] = uuw[jri] + 1
    set Pri = xeS(Zri, Xww[wuw[jri]], wuw[jri], "when calling new_LLEntry in LinkedList, line 40")
    set Cww[Xww[wuw[jri]]] = Pri
    set Xww[wuw[jri]] = Pri
    set uuw[jri] = uuw[jri] + 1
    set Pri = xeS(Uri, Xww[wuw[jri]], wuw[jri], "when calling new_LLEntry in LinkedList, line 40")
    set Cww[Xww[wuw[jri]]] = Pri
    set Xww[wuw[jri]] = Pri
    set uuw[jri] = uuw[jri] + 1
    set ASw = ASw - 1
endfunction
function GWi takes integer pWi, integer eWi, integer qWi, integer aWi, integer nWi, integer dWi, integer fWi, integer RWi, integer TWi, string YWi returns nothing
    set DSw[ASw] = YWi
    set ASw = ASw + 1
    if yN[pWi] == 0 then
        if pWi == 0 then
            call tNr("Nullpointer exception when calling LinkedList.add", "when calling error in LinkedList, line 38")
        else
            call tNr("Called LinkedList.add on invalid object.", "when calling error in LinkedList, line 38")
        endif
    endif
    call Ari(pWi, eWi, qWi, aWi, nWi, dWi, fWi, RWi, TWi, "when calling add in LinkedList, line 38")
    set ASw = ASw - 1
endfunction
function jAw takes integer pAw, integer eAw, integer qAw, integer aAw, integer nAw, integer dAw, integer fAw, integer RAw, integer TAw, integer YAw, integer GAw, integer gAw, integer hAw, string FAw returns nothing
    local integer kAw
    set DSw[ASw] = FAw
    set ASw = ASw + 1
    set kAw = xeS(eAw, Xww[wuw[pAw]], wuw[pAw], "when calling new_LLEntry in LinkedList, line 40")
    set Cww[Xww[wuw[pAw]]] = kAw
    set Xww[wuw[pAw]] = kAw
    set uuw[pAw] = uuw[pAw] + 1
    set kAw = xeS(qAw, Xww[wuw[pAw]], wuw[pAw], "when calling new_LLEntry in LinkedList, line 40")
    set Cww[Xww[wuw[pAw]]] = kAw
    set Xww[wuw[pAw]] = kAw
    set uuw[pAw] = uuw[pAw] + 1
    set kAw = xeS(aAw, Xww[wuw[pAw]], wuw[pAw], "when calling new_LLEntry in LinkedList, line 40")
    set Cww[Xww[wuw[pAw]]] = kAw
    set Xww[wuw[pAw]] = kAw
    set uuw[pAw] = uuw[pAw] + 1
    set kAw = xeS(nAw, Xww[wuw[pAw]], wuw[pAw], "when calling new_LLEntry in LinkedList, line 40")
    set Cww[Xww[wuw[pAw]]] = kAw
    set Xww[wuw[pAw]] = kAw
    set uuw[pAw] = uuw[pAw] + 1
    set kAw = xeS(dAw, Xww[wuw[pAw]], wuw[pAw], "when calling new_LLEntry in LinkedList, line 40")
    set Cww[Xww[wuw[pAw]]] = kAw
    set Xww[wuw[pAw]] = kAw
    set uuw[pAw] = uuw[pAw] + 1
    set kAw = xeS(fAw, Xww[wuw[pAw]], wuw[pAw], "when calling new_LLEntry in LinkedList, line 40")
    set Cww[Xww[wuw[pAw]]] = kAw
    set Xww[wuw[pAw]] = kAw
    set uuw[pAw] = uuw[pAw] + 1
    set kAw = xeS(RAw, Xww[wuw[pAw]], wuw[pAw], "when calling new_LLEntry in LinkedList, line 40")
    set Cww[Xww[wuw[pAw]]] = kAw
    set Xww[wuw[pAw]] = kAw
    set uuw[pAw] = uuw[pAw] + 1
    set kAw = xeS(TAw, Xww[wuw[pAw]], wuw[pAw], "when calling new_LLEntry in LinkedList, line 40")
    set Cww[Xww[wuw[pAw]]] = kAw
    set Xww[wuw[pAw]] = kAw
    set uuw[pAw] = uuw[pAw] + 1
    set kAw = xeS(YAw, Xww[wuw[pAw]], wuw[pAw], "when calling new_LLEntry in LinkedList, line 40")
    set Cww[Xww[wuw[pAw]]] = kAw
    set Xww[wuw[pAw]] = kAw
    set uuw[pAw] = uuw[pAw] + 1
    set kAw = xeS(GAw, Xww[wuw[pAw]], wuw[pAw], "when calling new_LLEntry in LinkedList, line 40")
    set Cww[Xww[wuw[pAw]]] = kAw
    set Xww[wuw[pAw]] = kAw
    set uuw[pAw] = uuw[pAw] + 1
    set kAw = xeS(gAw, Xww[wuw[pAw]], wuw[pAw], "when calling new_LLEntry in LinkedList, line 40")
    set Cww[Xww[wuw[pAw]]] = kAw
    set Xww[wuw[pAw]] = kAw
    set uuw[pAw] = uuw[pAw] + 1
    set kAw = xeS(hAw, Xww[wuw[pAw]], wuw[pAw], "when calling new_LLEntry in LinkedList, line 40")
    set Cww[Xww[wuw[pAw]]] = kAw
    set Xww[wuw[pAw]] = kAw
    set uuw[pAw] = uuw[pAw] + 1
    set ASw = ASw - 1
endfunction
function Rti takes integer Sti, integer cti, integer oti, integer Oti, integer lti, integer bti, integer yti, integer pti, integer eti, integer qti, integer ati, integer nti, integer dti, string fti returns nothing
    set DSw[ASw] = fti
    set ASw = ASw + 1
    if yN[Sti] == 0 then
        if Sti == 0 then
            call tNr("Nullpointer exception when calling LinkedList.add", "when calling error in LinkedList, line 38")
        else
            call tNr("Called LinkedList.add on invalid object.", "when calling error in LinkedList, line 38")
        endif
    endif
    call jAw(Sti, cti, oti, Oti, lti, bti, yti, pti, eti, qti, ati, nti, dti, "when calling add in LinkedList, line 38")
    set ASw = ASw - 1
endfunction
function TnS takes string fnS returns integer
    local integer RnS
    set DSw[ASw] = fnS
    set ASw = ASw + 1
    if NX == 0 then
        if MX < 32768 then
            set MX = MX + 1
            set RnS = MX
            set wC[RnS] = 733
        else
            call tNr("Out of memory: Could not create CallbackSingle_doAfter_DDS.", "when calling error in DDS, line 121")
            set RnS = 0
        endif
    else
        set NX = NX - 1
        set RnS = BX[NX]
        set wC[RnS] = 733
    endif
    set ASw = ASw - 1
    return RnS
endfunction
function f5s takes nothing returns nothing
    call EnableTrigger(qj)
endfunction
function OKi takes integer VJi, integer BJi, integer NJi, integer MJi, integer wKi, integer uKi, integer rKi, integer sKi, integer tKi, integer iKi, integer SKi, string cKi returns nothing
    local integer oKi
    set DSw[ASw] = cKi
    set ASw = ASw + 1
    set oKi = xeS(BJi, Xww[wuw[VJi]], wuw[VJi], "when calling new_LLEntry in LinkedList, line 40")
    set Cww[Xww[wuw[VJi]]] = oKi
    set Xww[wuw[VJi]] = oKi
    set uuw[VJi] = uuw[VJi] + 1
    set oKi = xeS(NJi, Xww[wuw[VJi]], wuw[VJi], "when calling new_LLEntry in LinkedList, line 40")
    set Cww[Xww[wuw[VJi]]] = oKi
    set Xww[wuw[VJi]] = oKi
    set uuw[VJi] = uuw[VJi] + 1
    set oKi = xeS(MJi, Xww[wuw[VJi]], wuw[VJi], "when calling new_LLEntry in LinkedList, line 40")
    set Cww[Xww[wuw[VJi]]] = oKi
    set Xww[wuw[VJi]] = oKi
    set uuw[VJi] = uuw[VJi] + 1
    set oKi = xeS(wKi, Xww[wuw[VJi]], wuw[VJi], "when calling new_LLEntry in LinkedList, line 40")
    set Cww[Xww[wuw[VJi]]] = oKi
    set Xww[wuw[VJi]] = oKi
    set uuw[VJi] = uuw[VJi] + 1
    set oKi = xeS(uKi, Xww[wuw[VJi]], wuw[VJi], "when calling new_LLEntry in LinkedList, line 40")
    set Cww[Xww[wuw[VJi]]] = oKi
    set Xww[wuw[VJi]] = oKi
    set uuw[VJi] = uuw[VJi] + 1
    set oKi = xeS(rKi, Xww[wuw[VJi]], wuw[VJi], "when calling new_LLEntry in LinkedList, line 40")
    set Cww[Xww[wuw[VJi]]] = oKi
    set Xww[wuw[VJi]] = oKi
    set uuw[VJi] = uuw[VJi] + 1
    set oKi = xeS(sKi, Xww[wuw[VJi]], wuw[VJi], "when calling new_LLEntry in LinkedList, line 40")
    set Cww[Xww[wuw[VJi]]] = oKi
    set Xww[wuw[VJi]] = oKi
    set uuw[VJi] = uuw[VJi] + 1
    set oKi = xeS(tKi, Xww[wuw[VJi]], wuw[VJi], "when calling new_LLEntry in LinkedList, line 40")
    set Cww[Xww[wuw[VJi]]] = oKi
    set Xww[wuw[VJi]] = oKi
    set uuw[VJi] = uuw[VJi] + 1
    set oKi = xeS(iKi, Xww[wuw[VJi]], wuw[VJi], "when calling new_LLEntry in LinkedList, line 40")
    set Cww[Xww[wuw[VJi]]] = oKi
    set Xww[wuw[VJi]] = oKi
    set uuw[VJi] = uuw[VJi] + 1
    set oKi = xeS(SKi, Xww[wuw[VJi]], wuw[VJi], "when calling new_LLEntry in LinkedList, line 40")
    set Cww[Xww[wuw[VJi]]] = oKi
    set Xww[wuw[VJi]] = oKi
    set uuw[VJi] = uuw[VJi] + 1
    set ASw = ASw - 1
endfunction
function wst takes integer Art, integer Drt, integer Hrt, integer Jrt, integer Krt, integer Lrt, integer Xrt, integer Crt, integer Vrt, integer Brt, integer Nrt, string Mrt returns nothing
    set DSw[ASw] = Mrt
    set ASw = ASw + 1
    if yN[Art] == 0 then
        if Art == 0 then
            call tNr("Nullpointer exception when calling LinkedList.add", "when calling error in LinkedList, line 38")
        else
            call tNr("Called LinkedList.add on invalid object.", "when calling error in LinkedList, line 38")
        endif
    endif
    call OKi(Art, Drt, Hrt, Jrt, Krt, Lrt, Xrt, Crt, Vrt, Brt, Nrt, "when calling add in LinkedList, line 38")
    set ASw = ASw - 1
endfunction
function mLu takes string gLu returns boolean
    local integer hLu
    local integer FLu
    local integer kLu
    local integer jLu
    local integer xLu
    local integer vLu
    set DSw[ASw] = gLu
    set ASw = ASw + 1
    set ij = jts("when calling new_HashMap in DDS, line 33")
    set Sj = true
    set hLu = XQt("when calling new_LinkedList in DDS, line 37")
    call Rti(hLu, l2s(Iji("H02F", "when calling unObfuscate in DDS, line 39"), "when calling fromRawCode in DDS, line 39"), l2s(Iji("H02P", "when calling unObfuscate in DDS, line 40"), "when calling fromRawCode in DDS, line 40"), l2s(Iji("H02K", "when calling unObfuscate in DDS, line 41"), "when calling fromRawCode in DDS, line 41"), l2s(Iji("H02H", "when calling unObfuscate in DDS, line 42"), "when calling fromRawCode in DDS, line 42"), l2s(Iji("H02E", "when calling unObfuscate in DDS, line 43"), "when calling fromRawCode in DDS, line 43"), l2s(Iji("H02N", "when calling unObfuscate in DDS, line 44"), "when calling fromRawCode in DDS, line 44"), l2s(Iji("H02O", "when calling unObfuscate in DDS, line 45"), "when calling fromRawCode in DDS, line 45"), l2s(Iji("H02M", "when calling unObfuscate in DDS, line 46"), "when calling fromRawCode in DDS, line 46"), l2s(Iji("H02Q", "when calling unObfuscate in DDS, line 47"), "when calling fromRawCode in DDS, line 47"), l2s(Iji("H02R", "when calling unObfuscate in DDS, line 48"), "when calling fromRawCode in DDS, line 48"), l2s(Iji("H02T", "when calling unObfuscate in DDS, line 49"), "when calling fromRawCode in DDS, line 49"), l2s(Iji("H02U", "when calling unObfuscate in DDS, line 50"), "when calling fromRawCode in DDS, line 50"), "when calling add in DDS, line 38")
    set cj = hLu
    set FLu = XQt("when calling new_LinkedList in DDS, line 52")
    call t7S(FLu, l2s(Iji("H02L", "when calling unObfuscate in DDS, line 54"), "when calling fromRawCode in DDS, line 54"), l2s(Iji("H02S", "when calling unObfuscate in DDS, line 55"), "when calling fromRawCode in DDS, line 55"), l2s(Iji("H023", "when calling unObfuscate in DDS, line 56"), "when calling fromRawCode in DDS, line 56"), l2s(Iji("H02C", "when calling unObfuscate in DDS, line 57"), "when calling fromRawCode in DDS, line 57"), l2s(Iji("H02B", "when calling unObfuscate in DDS, line 58"), "when calling fromRawCode in DDS, line 58"), l2s(Iji("H024", "when calling unObfuscate in DDS, line 59"), "when calling fromRawCode in DDS, line 59"), "when calling add in DDS, line 53")
    set oj = FLu
    set kLu = XQt("when calling new_LinkedList in DDS, line 61")
    call wst(kLu, l2s(Iji("n022", "when calling unObfuscate in DDS, line 63"), "when calling fromRawCode in DDS, line 63"), l2s(Iji("n025", "when calling unObfuscate in DDS, line 64"), "when calling fromRawCode in DDS, line 64"), l2s(Iji("n028", "when calling unObfuscate in DDS, line 65"), "when calling fromRawCode in DDS, line 65"), l2s(Iji("n01W", "when calling unObfuscate in DDS, line 66"), "when calling fromRawCode in DDS, line 66"), l2s(Iji("n01U", "when calling unObfuscate in DDS, line 67"), "when calling fromRawCode in DDS, line 67"), l2s(Iji("n02F", "when calling unObfuscate in DDS, line 68"), "when calling fromRawCode in DDS, line 68"), l2s(Iji("n02E", "when calling unObfuscate in DDS, line 69"), "when calling fromRawCode in DDS, line 69"), l2s(Iji("n02G", "when calling unObfuscate in DDS, line 70"), "when calling fromRawCode in DDS, line 70"), l2s(Iji("h04I", "when calling unObfuscate in DDS, line 71"), "when calling fromRawCode in DDS, line 71"), l2s(Iji("h04J", "when calling unObfuscate in DDS, line 72"), "when calling fromRawCode in DDS, line 72"), "when calling add in DDS, line 62")
    set Oj = kLu
    set jLu = XQt("when calling new_LinkedList in DDS, line 75")
    call GWi(jLu, l2s(Iji("n02M", "when calling unObfuscate in DDS, line 77"), "when calling fromRawCode in DDS, line 77"), l2s(Iji("n02N", "when calling unObfuscate in DDS, line 78"), "when calling fromRawCode in DDS, line 78"), l2s(Iji("U006", "when calling unObfuscate in DDS, line 79"), "when calling fromRawCode in DDS, line 79"), l2s(Iji("U00A", "when calling unObfuscate in DDS, line 80"), "when calling fromRawCode in DDS, line 80"), l2s(Iji("U009", "when calling unObfuscate in DDS, line 81"), "when calling fromRawCode in DDS, line 81"), l2s(Iji("n01Z", "when calling unObfuscate in DDS, line 82"), "when calling fromRawCode in DDS, line 82"), l2s(Iji("n024", "when calling unObfuscate in DDS, line 83"), "when calling fromRawCode in DDS, line 83"), l2s(Iji("u00P", "when calling unObfuscate in DDS, line 84"), "when calling fromRawCode in DDS, line 84"), "when calling add in DDS, line 76")
    set lj = jLu
    set xLu = XQt("when calling new_LinkedList in DDS, line 87")
    call k0r(xLu, l2s(Iji("U00N", "when calling unObfuscate in DDS, line 89"), "when calling fromRawCode in DDS, line 89"), l2s(Iji("U00O", "when calling unObfuscate in DDS, line 90"), "when calling fromRawCode in DDS, line 90"), l2s(Iji("U00J", "when calling unObfuscate in DDS, line 91"), "when calling fromRawCode in DDS, line 91"), l2s(Iji("U00K", "when calling unObfuscate in DDS, line 92"), "when calling fromRawCode in DDS, line 92"), l2s(Iji("U00L", "when calling unObfuscate in DDS, line 93"), "when calling fromRawCode in DDS, line 93"), l2s(Iji("U00M", "when calling unObfuscate in DDS, line 94"), "when calling fromRawCode in DDS, line 94"), l2s(Iji("n02O", "when calling unObfuscate in DDS, line 95"), "when calling fromRawCode in DDS, line 95"), l2s(Iji("n02L", "when calling unObfuscate in DDS, line 96"), "when calling fromRawCode in DDS, line 96"), l2s(Iji("n02K", "when calling unObfuscate in DDS, line 97"), "when calling fromRawCode in DDS, line 97"), l2s(Iji("n02J", "when calling unObfuscate in DDS, line 98"), "when calling fromRawCode in DDS, line 98"), l2s(Iji("U00Q", "when calling unObfuscate in DDS, line 99"), "when calling fromRawCode in DDS, line 99"), l2s(Iji("U00R", "when calling unObfuscate in DDS, line 100"), "when calling fromRawCode in DDS, line 100"), l2s(Iji("U00I", "when calling unObfuscate in DDS, line 101"), "when calling fromRawCode in DDS, line 101"), l2s(Iji("U00H", "when calling unObfuscate in DDS, line 102"), "when calling fromRawCode in DDS, line 102"), l2s(Iji("U00F", "when calling unObfuscate in DDS, line 103"), "when calling fromRawCode in DDS, line 103"), l2s(Iji("U00G", "when calling unObfuscate in DDS, line 104"), "when calling fromRawCode in DDS, line 104"), l2s(Iji("U00E", "when calling unObfuscate in DDS, line 105"), "when calling fromRawCode in DDS, line 105"), l2s(Iji("U00C", "when calling unObfuscate in DDS, line 106"), "when calling fromRawCode in DDS, line 106"), l2s(Iji("U007", "when calling unObfuscate in DDS, line 107"), "when calling fromRawCode in DDS, line 107"), l2s(Iji("U00B", "when calling unObfuscate in DDS, line 108"), "when calling fromRawCode in DDS, line 108"), "when calling add in DDS, line 88")
    set bj = xLu
    call f5s()
    set vLu = TnS("when calling alloc_CallbackSingle_doAfter_DDS in DDS, line 121")
    call RUs(vLu)
    call Ybr(2., vLu, "when calling doAfter in DDS, line 121")
    set ASw = ASw - 1
    return true
endfunction
function rDi takes nothing returns boolean
    set ASw = 0
    return mLu("via function reference DDS, line 1")
endfunction
function rJt takes nothing returns nothing
    call RemoveUnit(GetEnumUnit())
endfunction
function r_i takes string w_i returns integer
    local integer u_i
    set DSw[ASw] = w_i
    set ASw = ASw + 1
    if NX == 0 then
        if MX < 32768 then
            set MX = MX + 1
            set u_i = MX
            set wC[u_i] = 950
        else
            call tNr("Out of memory: Could not create CallbackSingle_doAfter_SqueakyQuestReward.", "when calling error in SqueakyQuestReward, line 121")
            set u_i = 0
        endif
    else
        set NX = NX - 1
        set u_i = BX[NX]
        set wC[u_i] = 950
    endif
    set ASw = ASw - 1
    return u_i
endfunction
function xrt takes string krt returns boolean
    local integer jrt
    set DSw[ASw] = krt
    set ASw = ASw + 1
    set jrt = r_i("when calling alloc_CallbackSingle_doAfter_SqueakyQuestReward in SqueakyQuestReward, line 121")
    call RUs(jrt)
    call Ybr(1., jrt, "when calling doAfter in SqueakyQuestReward, line 121")
    set ASw = ASw - 1
    return true
endfunction
function rMs takes nothing returns boolean
    set ASw = 0
    return xrt("via function reference SqueakyQuestReward, line 1")
endfunction
function rSs takes nothing returns boolean
    return (GetItemTypeId(GetManipulatedItem()) == 1227895876 and IsUnitType(GetTriggerUnit(), UNIT_TYPE_HERO) and GetHeroLevel(GetTriggerUnit()) >= 205 and IsPlayerInForce(GetOwningPlayer(GetTriggerUnit()), pc[$00000007]) == false) != false
endfunction
function rZi takes nothing returns nothing
    call ForceAddPlayer(xs, GetOwningPlayer(GetTriggerUnit()))
    call ForceAddPlayer(Cr, GetOwningPlayer(GetTriggerUnit()))
    call DisplayTextToForce(MwS(GetOwningPlayer(GetTriggerUnit())), "|cffffcc00Priestess Shari|r : |cff87ceebAh, child of Melitele, I have been awaiting your arrival. To enter our Order, you must first be blessed by Melitele herself. But Melitele also wants some proof of your devotion, dear. Collect the Holy Water from a fountain brimming with life northwest of here in a ruined town. Vanquish 10 Wraiths and Spectres and collect their remains. Once you have all of these, go to the Altar of Melitele near the road leading to the Mountain Dungeons. It is well hidden, but you should be able to find it. Once there, pray and pour the Holy Water over yourself after sacrificing the remains of the foul creatures. Return to me when you are done.")
    call QuestSetDescription(Lr[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))], "I need to do 3 things before praying at the Altar of Melitele near the road of leading to the Mountain Dungeon.\n- Kill 10 Wraiths\n- Kill 10 Spectres\n- Get some Holy Water from a fountain brimming with life in a ruined town northwest of here.")
endfunction
function rgs takes nothing returns boolean
    return SubStringBJ(GetEventPlayerChatString(), $00000001, $00000008) == GetEventPlayerChatStringMatched() and StringLength(GetEventPlayerChatString()) > 8
endfunction
function rls takes nothing returns nothing
    set tc = tc + .01
endfunction
function rps takes nothing returns boolean
    return GetSpellAbilityId() == Ek
endfunction
function rqS takes nothing returns nothing
    call SetUnitLifePercentBJ(GetEnumUnit(), 100.)
endfunction
function rrt takes nothing returns boolean
    set ASw = 0
    return Ior("via function reference Imp3DragonFortress, line 1669")
endfunction
function Sxr takes string txr returns integer
    local integer ixr
    set DSw[ASw] = txr
    set ASw = ASw + 1
    if NX == 0 then
        if MX < 32768 then
            set MX = MX + 1
            set ixr = MX
            set wC[ixr] = 1046
        else
            call tNr("Out of memory: Could not create CallbackSingle_doAfter_addAction_doAfter_RespawnHeroesEnterReg.", "when calling error in RespawnHeroesEnterReg, line 90")
            set ixr = 0
        endif
    else
        set NX = NX - 1
        set ixr = BX[NX]
        set wC[ixr] = 1046
    endif
    set ASw = ASw - 1
    return ixr
endfunction
function UEs takes string xEs returns nothing
    local unit vEs
    local player mEs
    local integer QEs
    local integer WEs
    local boolean EEs
    local integer ZEs
    set DSw[ASw] = xEs
    set ASw = ASw + 1
    set vEs = GetTriggerUnit()
    set mEs = eDs(vEs)
    set QEs = hgr(mEs)
    set WEs = GgS(mEs, "when calling getCustomPlayer in RespawnHeroesEnterReg, line 86")
    if GpS(gQ, QEs, "when calling has in RespawnHeroesEnterReg, line 88") then
        set EEs = dVw(WEs, "when calling getCameraIsLockedIn in RespawnHeroesEnterReg, line 89")
        set ZEs = Sxr("when calling alloc_CallbackSingle_doAfter_addAction_doAfter_RespawnHeroesEnterReg in RespawnHeroesEnterReg, line 90")
        call RUs(ZEs)
        set vrw[ZEs] = EEs
        set mrw[ZEs] = vEs
        set Qrw[ZEs] = WEs
        call Ybr(.1, ZEs, "when calling doAfter in RespawnHeroesEnterReg, line 90")
    endif
    set ASw = ASw - 1
    set vEs = null
    set mEs = null
endfunction
function rwi takes nothing returns nothing
    set ASw = 0
    call UEs("via function reference RespawnHeroesEnterReg, line 82")
endfunction
function rwr takes nothing returns nothing
    call SetUnitPositionLoc(GetEnumUnit(), br[1 + GetPlayerId(GetOwningPlayer(GetEnumUnit()))])
endfunction
function rxi takes nothing returns boolean
    return li[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))] >= 10 and GetUnitTypeId(GetOrderTargetUnit()) == sr and IsUnitInGroup(GetTriggerUnit(), kpu(300., GetUnitLoc(GetOrderTargetUnit())))
endfunction
function s3w takes nothing returns nothing
    call ForceRemovePlayer(IS[$00000004], GetOwningPlayer(GetTriggerUnit()))
    call DestroyQuest(oi[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))])
    set oi[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))] = null
    set li[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))] = 0
    call PlaySoundBJ(pe)
    call DisplayTimedTextToForce(MwS(GetOwningPlayer(GetOrderedUnit())), 5., "|cffffcc00You have completed the Quest|r.")
    call AddHeroXPSwapped(e, GetTriggerUnit(), true)
    call AdjustPlayerStateBJ($00000640, GetOwningPlayer(GetTriggerUnit()), PLAYER_STATE_RESOURCE_GOLD)
endfunction
function sEs takes nothing returns nothing
    call DDr(BQ, GetEnumUnit())
endfunction
function sIs takes nothing returns boolean
    return IsPlayerInForce(GetOwningPlayer(GetKillingUnit()), xs) and IsPlayerInForce(GetOwningPlayer(GetKillingUnit()), Vr) == false
endfunction
function sLs takes nothing returns nothing
    call ForceRemovePlayer(rt, GetOwningPlayer(GetTriggerUnit()))
    call ForceRemovePlayer(jt, GetOwningPlayer(GetTriggerUnit()))
    call DisplayTextToForce(MwS(GetOwningPlayer(GetTriggerUnit())), "|cffffcc00Delia|r : |cff87ceebWell done! I believe you are worthy of some new skills...")
    call DestroyQuest(st[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))])
    set st[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))] = null
    call SetHeroLevelBJ(GetTriggerUnit(), $00000001, false)
    call ReplaceUnitBJ(GetTriggerUnit(), $48303246, $00000002)
    call SelectUnitForPlayerSingle(bj_lastReplacedUnit, GetOwningPlayer(GetTriggerUnit()))
    call SetHeroLevel(bj_lastReplacedUnit, $00000001, true)
    call UnitStripHeroLevel(bj_lastReplacedUnit, $00000001)
endfunction
function o9i takes string S9i returns nothing
    local integer c9i
    set DSw[ASw] = S9i
    set ASw = ASw + 1
    set c9i = hgr(GetTriggerPlayer())
    call GVw(Hv, c9i, Dv, "when calling put in FateDestinyUnlocker, line 864")
    call wrS(c9i, "when calling checkDestinyReached in FateDestinyUnlocker, line 867")
    call vwt(Mv, c9i, "when calling add in FateDestinyUnlocker, line 868")
    set ASw = ASw - 1
endfunction
function sMw takes nothing returns nothing
    set ASw = 0
    call o9i("via function reference FateDestinyUnlocker, line 862")
endfunction
function N2s takes string D2s returns boolean
    local trigger H2s
    local trigger J2s
    local trigger K2s
    local trigger L2s
    local trigger X2s
    local trigger C2s
    local trigger V2s
    local trigger B2s
    set DSw[ASw] = D2s
    set ASw = ASw + 1
    set iH = XQt("when calling new_LinkedList in RevivalLocations, line 7")
    set SH = XQt("when calling new_LinkedList in RevivalLocations, line 8")
    set cH = XQt("when calling new_LinkedList in RevivalLocations, line 9")
    set oH = XQt("when calling new_LinkedList in RevivalLocations, line 10")
    set OH = XQt("when calling new_LinkedList in RevivalLocations, line 11")
    set lH = 500.
    set H2s = CreateTrigger()
    call dnS(H2s, CY, lH, null)
    set J2s = H2s
    call B2S(J2s, uEw)
    set K2s = CreateTrigger()
    call dnS(K2s, BY, lH, null)
    set L2s = K2s
    call B2S(L2s, rEw)
    set X2s = CreateTrigger()
    call dnS(X2s, VY, lH, null)
    set C2s = X2s
    call B2S(C2s, sEw)
    set V2s = CreateTrigger()
    call TriggerRegisterEnterRectSimple(V2s, Op)
    call B2S(V2s, tEw)
    set B2s = CreateTrigger()
    call TriggerRegisterEnterRectSimple(B2s, lp)
    call B2S(B2s, iEw)
    set ASw = ASw - 1
    set H2s = null
    set J2s = null
    set K2s = null
    set L2s = null
    set X2s = null
    set C2s = null
    set V2s = null
    set B2s = null
    return true
endfunction
function sPu takes nothing returns boolean
    set ASw = 0
    return N2s("via function reference RevivalLocations, line 1")
endfunction
function sRu takes nothing returns boolean
    return GetUnitTypeId(GetOrderTargetUnit()) == 1747988813 and IsUnitInGroup(GetTriggerUnit(), kpu(300., GetUnitLoc(GetOrderTargetUnit()))) and IsPlayerInForce(GetOwningPlayer(GetTriggerUnit()), pc[$00000004])
endfunction
function sSr takes nothing returns nothing
    call RemoveItem(GetManipulatedItem())
    call ForceAddPlayer(IS[$0000000D], GetOwningPlayer(GetTriggerUnit()))
    call DisplayTextToForce(MwS(GetOwningPlayer(GetTriggerUnit())), "|cffffcc00Squeaky|r : Hmm, you look parched. Luckily I have the right drink just for you! I can make you potions that are similar to those sold in the Inns, but at a cheaper rate. What? You'd rather have those in the Inns? Haha! I understand. I don't want any of your gold. You see, I'm currently researching on potions that make you immortal. Yes! Immortal as in living for all eternity. However, I'm lacking one single ingredient for this wonderful drink. Owlkin's blood. I require at least 50 bottles of it. Bring me the blood of Owlkins and I'll reward you!")
    call T_i(GetOwningPlayer(GetTriggerUnit()), $00000000, "Vampirism", "Researching on potions that give you eternal life is one thing, but to make it out of the blood of dead Owlkins is just repulsive. The idea of drinking blood from any animal is disgusting, let alone Owlkins...", "ReplaceableTextures\\CommandButtons\\BTNVampiricAura.blp")
    set WS[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))] = bj_lastCreatedQuest
endfunction
function Xvs takes string Kvs returns nothing
    local integer Lvs
    set DSw[ASw] = Kvs
    set ASw = ASw + 1
    set Lvs =- 1
    if GpS(gQ, hgr(GetEnumPlayer()), "when calling has in PlayerCommands, line 303") then
        set Lvs = hgr(GetEnumPlayer())
    elseif GpS(gQ, hgr(GetTriggerPlayer()), "when calling has in PlayerCommands, line 305") then
        set Lvs = hgr(GetTriggerPlayer())
    endif
    call GZs(xus(Lvs, "when calling getCustomPlayer in PlayerCommands, line 307"), false, "when calling setCommandsDisabled in PlayerCommands, line 307")
    set ASw = ASw - 1
endfunction
function sSu takes nothing returns nothing
    set ASw = 0
    call Xvs("via function reference PlayerCommands, line 301")
endfunction
function sUs takes nothing returns nothing
    call SetUnitAnimation(GetTriggerUnit(), "spell")
endfunction
function sXr takes nothing returns boolean
    return (GetUnitTypeId(GetOrderTargetUnit()) == 1747989576 and IsUnitInGroup(GetTriggerUnit(), kpu(300., GetUnitLoc(GetOrderTargetUnit()))) and IsUnitType(GetTriggerUnit(), UNIT_TYPE_HERO) and IsPlayerInForce(GetOwningPlayer(GetTriggerUnit()), Uo[$00000001]) and Zo[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))] == 1 and Po[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))] == 3 and Eo[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))] >= 125 and GetItemCharges(GetItemOfTypeFromUnitBJ(GetTriggerUnit(), $49303535)) >= 5) != false
endfunction
function sZi takes nothing returns boolean
    return IsUnitType(GetTriggerUnit(), UNIT_TYPE_HERO) != false
endfunction
function myS takes string jyS returns nothing
    local item xyS
    local unit vyS
    set DSw[ASw] = jyS
    set ASw = ASw + 1
    set xyS = GetSoldItem()
    set vyS = GetBuyingUnit()
    if GpS(gQ, hgr(eDs(vyS)), "when calling has in JobAdvancementQuestHandler, line 848") then
        if not GpS(px, Xdu(xyS), "when calling has in JobAdvancementQuestHandler, line 849") then
            call vwt(px, Xdu(xyS), "when calling add in JobAdvancementQuestHandler, line 850")
        endif
        if not Jyr(ex, Xdu(xyS), "when calling has in JobAdvancementQuestHandler, line 851") then
            call GVw(ex, Xdu(xyS), hgr(eDs(vyS)), "when calling put in JobAdvancementQuestHandler, line 852")
        endif
        call IOt(xyS, eDs(vyS), false)
    endif
    set ASw = ASw - 1
    set xyS = null
    set vyS = null
endfunction
function s_t takes nothing returns nothing
    set ASw = 0
    call myS("via function reference JobAdvancementQuestHandler, line 844")
endfunction
function aBr takes nothing returns boolean
    return ds[1 + GetPlayerId(GetOwningPlayer(GetKillingUnit()))] >= 30
endfunction
function sci takes nothing returns nothing
    set ds[1 + GetPlayerId(GetOwningPlayer(GetKillingUnit()))] = ds[1 + GetPlayerId(GetOwningPlayer(GetKillingUnit()))] + 1
    if aBr() then
        call QuestMessageBJ(MwS(GetOwningPlayer(GetKillingUnit())), $00000002, "|cffffcc003rd Job Advancement Quest Completed|r.")
        call ForceAddPlayer(Vr, GetOwningPlayer(GetKillingUnit()))
    else
        call QuestMessageBJ(MwS(GetOwningPlayer(GetKillingUnit())), $00000001, I2S(ds[1 + GetPlayerId(GetOwningPlayer(GetKillingUnit()))]) + " Minion(s) killed.")
    endif
endfunction
function sdS takes nothing returns boolean
    return GetUnitTypeId(GetOrderTargetUnit()) == CS and IsUnitInGroup(GetTriggerUnit(), kpu(300., GetUnitLoc(GetOrderTargetUnit()))) and IsPlayerInForce(GetOwningPlayer(GetTriggerUnit()), pc[$00000004])
endfunction
function ses takes nothing returns boolean
    return IsUnitType(GetTriggerUnit(), UNIT_TYPE_HERO) != false
endfunction
function sgt takes nothing returns boolean
    return GetUnitTypeId(GetTriggerUnit()) == 1211117624 and GetOrderTargetUnit() == tG and GetHeroLevel(GetTriggerUnit()) >= 40 and IsPlayerInForce(GetOwningPlayer(GetTriggerUnit()), nr) == false and IsUnitInGroup(GetTriggerUnit(), kpu(300., GetUnitLoc(GetOrderTargetUnit())))
endfunction
function sht takes nothing returns boolean
    return (GetItemTypeId(GetManipulatedItem()) == 1227896146 and IsUnitType(GetTriggerUnit(), UNIT_TYPE_HERO) and GetHeroLevel(GetTriggerUnit()) >= 65 and IsPlayerInForce(GetOwningPlayer(GetTriggerUnit()), IS[$0000000E]) == false) != false
endfunction
function iTt takes nothing returns boolean
    return Bc[1 + GetPlayerId(GetOwningPlayer(GetEnumUnit()))] == 4 and IsUnitInGroup(GetEnumUnit(), Lc) == false
endfunction
function ocr takes nothing returns boolean
    return IsUnitInGroup(GetEnumUnit(), Kc) == false and IsUnitInGroup(GetEnumUnit(), Vc) == false and IsUnitInGroup(GetEnumUnit(), Lc) == false
endfunction
function sku takes nothing returns nothing
    if ocr() then
        call GroupAddUnit(Kc, GetEnumUnit())
        call CreateTextTagUnitBJ("|cffffcc00Nice Dodge!|r", GetEnumUnit(), 0., 14., 100., 100., 100., 0.)
        call SetTextTagVelocityBJ(bj_lastCreatedTextTag, 45., 90.)
        call SetTextTagPermanentBJ(bj_lastCreatedTextTag, false)
        call SetTextTagFadepointBJ(bj_lastCreatedTextTag, 1.5)
        call SetTextTagLifespanBJ(bj_lastCreatedTextTag, 2.5)
    elseif iTt() then
        call GroupRemoveUnit(Kc, GetEnumUnit())
        call GroupAddUnit(Vc, GetEnumUnit())
        call CreateTextTagUnitBJ("|cffff0000Overdodge!|r", GetEnumUnit(), 0., 15., 100., 100., 100., 0.)
        call SetTextTagVelocityBJ(bj_lastCreatedTextTag, 45., 90.)
        call SetTextTagPermanentBJ(bj_lastCreatedTextTag, false)
        call SetTextTagFadepointBJ(bj_lastCreatedTextTag, 1.5)
        call SetTextTagLifespanBJ(bj_lastCreatedTextTag, 2.5)
    endif
endfunction
function ust takes nothing returns boolean
    return IsUnitEnemy(GetFilterUnit(), GetOwningPlayer(GetTriggerUnit()))
endfunction
function xcS takes nothing returns boolean
    return IsUnitAliveBJ(GetFilterUnit())
endfunction
function sls takes nothing returns boolean
    return GetBooleanAnd(xcS(), ust())
endfunction
function sou takes nothing returns nothing
    call SetUnitPositionLoc(GetEnumUnit(), vo)
endfunction
function sqS takes nothing returns nothing
    call CameraClearNoiseForPlayer(GetEnumPlayer())
endfunction
function srS takes nothing returns nothing
    call PanCameraToTimedLocForPlayer(GetEnumPlayer(), vo, 0.)
    call TriggerExecute(MT)
endfunction
function sri takes nothing returns nothing
    set Bc[1 + GetPlayerId(GetTriggerPlayer())] = Bc[1 + GetPlayerId(GetTriggerPlayer())] + 1
    set bS = lVs(GetTriggerPlayer(), Condition(rpw))
    call ForGroupBJ(bS, spw)
    call DestroyGroup(bS)
endfunction
function ykr takes string lkr returns integer
    local integer bkr
    set DSw[ASw] = lkr
    set ASw = ASw + 1
    if NX == 0 then
        if MX < 32768 then
            set MX = MX + 1
            set bkr = MX
            set wC[bkr] = 1103
        else
            call tNr("Out of memory: Could not create CallbackSingle_nullTimer_OnUnitEnterLeave.", "when calling error in OnUnitEnterLeave, line 63")
            set bkr = 0
        endif
    else
        set NX = NX - 1
        set bkr = BX[NX]
        set wC[bkr] = 1103
    endif
    set ASw = ASw - 1
    return bkr
endfunction
function lEu takes string SEu returns boolean
    local integer cEu
    local integer oEu
    local integer OEu
    set DSw[ASw] = SEu
    set ASw = ASw + 1
    set VA = CreateTrigger()
    set BA = CreateGroup()
    set MA = 0
    set wD = 1095577649
    set cEu = 0
    set oEu = bj_MAX_PLAYER_SLOTS - 1
    loop
        exitwhen cEu > oEu
        call qsS(aD[cEu], wD, false)
        set cEu = cEu + 1
    endloop
    set OEu = ykr("when calling alloc_CallbackSingle_nullTimer_OnUnitEnterLeave in OnUnitEnterLeave, line 63")
    call RUs(OEu)
    call ccr(OEu, "when calling nullTimer in OnUnitEnterLeave, line 63")
    set ASw = ASw - 1
    return true
endfunction
function ssi takes nothing returns boolean
    set ASw = 0
    return lEu("via function reference OnUnitEnterLeave, line 1")
endfunction
function sts takes nothing returns boolean
    return (GetItemTypeId(GetManipulatedItem()) == 1227895879 and IsUnitType(GetTriggerUnit(), UNIT_TYPE_HERO) and GetHeroLevel(GetTriggerUnit()) >= 60 and IsPlayerInForce(GetOwningPlayer(GetTriggerUnit()), pc[$00000003]) == false and N[(1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))) * 1000 + fkS(GetTriggerUnit())] == false) != false
endfunction
function uMs takes string MNs returns nothing
    local integer wMs
    set DSw[ASw] = MNs
    set ASw = ASw + 1
    set wMs =- 1
    if GpS(gQ, hgr(GetEnumPlayer()), "when calling has in PlayerCommands, line 312") then
        set wMs = hgr(GetEnumPlayer())
    elseif GpS(gQ, hgr(GetTriggerPlayer()), "when calling has in PlayerCommands, line 314") then
        set wMs = hgr(GetTriggerPlayer())
    endif
    call Z6r(wMs, S * 2., "when calling disableKillCmdTimed in PlayerCommands, line 317")
    set ASw = ASw - 1
endfunction
function suS takes nothing returns nothing
    set ASw = 0
    call uMs("via function reference PlayerCommands, line 310")
endfunction
function AXu takes string xXu returns nothing
    local unit vXu
    local player mXu
    local integer QXu
    local real WXu
    local real EXu
    local integer ZXu
    local integer UXu
    local real IXu
    local real PXu
    set DSw[ASw] = xXu
    set ASw = ASw + 1
    set vXu = GetTriggerUnit()
    set mXu = eDs(vXu)
    set QXu = hgr(mXu)
    set IXu = ANw(vXu)
    set PXu = XSw
    set WXu = IXu
    set EXu = PXu
    set ZXu = 1227895108
    set UXu = 10
    set AS[1 + QXu] = 0
    call ForceRemovePlayer(IS[$0000000D], mXu)
    call DestroyQuest(WS[1 + QXu])
    set WS[1 + QXu] = null
    call PlaySoundBJ(pe)
    call dii("|cffffcc00You have completed the Quest|r.", 5., mXu)
    call dii("|cffffcc00Squeaky|r : Thanks a lot young adventurer! Here are the potions as promised.", 7., mXu)
    call AddHeroXPSwapped(g, vXu, true)
    call wiS(QXu, ZXu, WXu, EXu, mXu, UXu, vXu, "when calling addItemWithVirtualCharges in SqueakyQuestReward, line 32")
    set ASw = ASw - 1
    set vXu = null
    set mXu = null
endfunction
function swr takes nothing returns nothing
    set ASw = 0
    call AXu("via function reference SqueakyQuestReward, line 122")
endfunction
function sws takes nothing returns nothing
    call ForceRemovePlayer(IS[$0000000A], GetOwningPlayer(GetTriggerUnit()))
    call ForceRemovePlayer(pt, GetOwningPlayer(GetTriggerUnit()))
    call ForceRemovePlayer(et, GetOwningPlayer(GetTriggerUnit()))
    call ForceRemovePlayer(yt, GetOwningPlayer(GetTriggerUnit()))
    call DestroyQuest(St[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))])
    set St[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))] = null
    call PlaySoundBJ(pe)
    call DisplayTimedTextToForce(MwS(GetOwningPlayer(GetOrderedUnit())), 5., "|cffffcc00You have completed the Quest|r.")
    call AddHeroXPSwapped(k, GetTriggerUnit(), true)
    call AdjustPlayerStateBJ($000061A8, GetOwningPlayer(GetTriggerUnit()), PLAYER_STATE_RESOURCE_GOLD)
endfunction
function sys takes nothing returns nothing
    call DisableTrigger(GetTriggeringTrigger())
endfunction
function t0r takes nothing returns boolean
    return GetUnitTypeId(GetTriggerUnit()) == 1211117621 and GetOrderTargetUnit() == MY and GetHeroLevel(GetTriggerUnit()) >= 40 and IsUnitInGroup(GetTriggerUnit(), kpu(300., GetUnitLoc(GetOrderTargetUnit())))
endfunction
function t0s takes nothing returns boolean
    return GetUnitTypeId(GetTriggerUnit()) == 1211117644 and GetUnitTypeId(GetOrderTargetUnit()) == 1747988569 and IsPlayerInForce(GetOwningPlayer(GetTriggerUnit()), Kr) and IsPlayerInForce(GetOwningPlayer(GetTriggerUnit()), Cr) == false and IsUnitInGroup(GetTriggerUnit(), kpu(300., GetUnitLoc(GetOrderTargetUnit())))
endfunction
function bmi takes unit omi, string Omi returns real
    local real lmi
    set DSw[ASw] = Omi
    set ASw = ASw + 1
    set lmi = 1.0
    if Jyr(FL, Aei(omi), "when calling has in Voidless_extensions, line 95") then
        set lmi = dMw(wps(FL, Aei(omi), "when calling get in Voidless_extensions, line 96"))
    endif
    set ASw = ASw - 1
    return lmi
endfunction
function k8s takes string a8s returns nothing
    local unit n8s
    local player d8s
    local unit f8s
    local integer R8s
    local integer T8s
    local real Y8s
    local integer G8s
    local group g8s
    local group h8s
    local unit F8s
    set DSw[ASw] = a8s
    set ASw = ASw + 1
    set n8s = GetTriggerUnit()
    set d8s = eDs(n8s)
    set f8s = GetSpellTargetUnit()
    set R8s = GetSpellAbilityId()
    set T8s = GetUnitAbilityLevel(n8s, R8s) - 1
    set Y8s = 0.
    set G8s = R8s
    if G8s == Kk then
        set Y8s = Yv + Gv * T8s
    elseif G8s == Jk then
        set Y8s = gv + hv * T8s
    elseif G8s == Hk then
        set Y8s = Fv + kv * T8s
    elseif G8s == Dk then
        set Y8s = (jv + xv * T8s) * bmi(n8s, "when calling getPrismHealMultiplier in FHealer_SingleTargetHeal, line 58")
    endif
    set g8s = LLt(ANw(f8s), XSw, Tv, "when calling getUnitsInRange in FHealer_SingleTargetHeal, line 60")
    set h8s = XbS(g8s)
    loop
        exitwhen not hJw(h8s)
        set F8s = tPr(h8s)
        if iBw(d8s, eDs(F8s)) and(not n2u(F8s)) and(not fRi(F8s)) and(not gSr(F8s, l2s(Iji("Avul", "when calling unObfuscate in FHealer_SingleTargetHeal, line 62"), "when calling fromRawCode in FHealer_SingleTargetHeal, line 62"))) and(not gSr(F8s, l2s(Iji("AImx", "when calling unObfuscate in FHealer_SingleTargetHeal, line 62"), "when calling fromRawCode in FHealer_SingleTargetHeal, line 62"))) then
            call MSr(n8s, F8s, Y8s / 3., ATTACK_TYPE_CHAOS)
        endif
    endloop
    call lxs(h8s)
    call Sju(g8s, "when calling release in FHealer_SingleTargetHeal, line 65")
    call S5u(f8s, Y8s)
    set ASw = ASw - 1
    set n8s = null
    set d8s = null
    set f8s = null
    set g8s = null
    set h8s = null
    set F8s = null
endfunction
function t2r takes nothing returns nothing
    set ASw = 0
    call k8s("via function reference FHealer_SingleTargetHeal, line 70")
endfunction
function Jhu takes nothing returns boolean
    return sc[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))] >= 1
endfunction
function t3w takes nothing returns nothing
    if Jhu() then
        call ForceRemovePlayer(pc[$00000003], GetOwningPlayer(GetTriggerUnit()))
        call ForceAddPlayer(ec[$00000003], GetOwningPlayer(GetTriggerUnit()))
        call DestroyQuest(rc[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))])
        set rc[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))] = null
        call PlaySoundBJ(pe)
        call DisplayTimedTextToForce(MwS(GetOwningPlayer(GetOrderedUnit())), 5., "|cffffcc00You have completed the Quest|r.")
        call DisplayTimedTextToForce(MwS(GetOwningPlayer(GetOrderedUnit())), 5., "|cffffcc00Arnold|r : Fantastic! Now with the goblins out of the way, we can carry on with our expedition.")
        call AddHeroXPSwapped(Y, GetTriggerUnit(), true)
        call AdjustPlayerStateBJ($00004E20, GetOwningPlayer(GetTriggerUnit()), PLAYER_STATE_RESOURCE_GOLD)
        set N[(1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))) * 1000 + fkS(GetTriggerUnit())] = true
    else
        call DisplayTimedTextToForce(MwS(GetOwningPlayer(GetTriggerUnit())), 5., "|cffffcc00Arnold|r : Have you killed the leader yet? No? Then get on with it.")
    endif
endfunction
function t7w takes nothing returns nothing
    set Cs = GetRectCenter(dp)
    call SetUnitPositionLocFacingBJ(GetTriggerUnit(), Cs, 180.)
    call PanCameraToTimedLocForPlayer(GetOwningPlayer(GetTriggerUnit()), Cs, 0.)
    call TriggerExecute(MT)
    call RemoveLocation(Cs)
endfunction
function Gmt takes string dmt returns nothing
    local unit fmt
    local integer Rmt
    local unit Tmt
    local integer Ymt
    set DSw[ASw] = dmt
    set ASw = ASw + 1
    set fmt = GetTriggerUnit()
    set Rmt = GetSpellAbilityId()
    set Tmt = GetSpellTargetUnit()
    if r5S(fmt) == bk and Rmt == 1093678679 and R9s(Tmt, fmt) then
        set Ymt = gir(fmt, GetSpellAbilityId())
        call hMs(Tmt, fmt, oh, Oh * Ymt, lh, bh, "when calling apply_DOT_Timed in Champion_Smite, line 20")
    endif
    set ASw = ASw - 1
    set fmt = null
    set Tmt = null
endfunction
function t9S takes nothing returns nothing
    set ASw = 0
    call Gmt("via function reference Champion_Smite, line 14")
endfunction
function t9t takes nothing returns nothing
    call PanCameraToTimedLocForPlayer(GetEnumPlayer(), br[1 + GetPlayerId(GetEnumPlayer())], 0.)
    set iw[GetPlayerId(GetEnumPlayer())] = GetPlayerId(GetEnumPlayer())
    set Sw[GetPlayerId(GetEnumPlayer())] = pr[wS[Ni * 100 + GetPlayerId(GetEnumPlayer())]]
endfunction
function tCw takes nothing returns nothing
    call ForceRemovePlayer(rt, GetOwningPlayer(GetTriggerUnit()))
    call ForceRemovePlayer(ii, GetOwningPlayer(GetTriggerUnit()))
    call DisplayTextToForce(MwS(GetOwningPlayer(GetTriggerUnit())), "|cffffcc00Count Crowley|r : |cff87ceebPerfect! You killed all of them...Well done! Alright, I shall teach you stronger arts in the Inquisitor line...go forth and never stop killing demons!")
    call DestroyQuest(st[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))])
    set st[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))] = null
    call SetHeroLevelBJ(GetTriggerUnit(), $00000001, false)
    call ReplaceUnitBJ(GetTriggerUnit(), $48303251, $00000002)
    call SelectUnitForPlayerSingle(bj_lastReplacedUnit, GetOwningPlayer(GetTriggerUnit()))
    call SetHeroLevel(bj_lastReplacedUnit, $00000001, true)
    call UnitStripHeroLevel(bj_lastReplacedUnit, $00000001)
endfunction
function tFt takes nothing returns nothing
    call RemoveItem(GetManipulatedItem())
    call ForceAddPlayer(IS[$0000000F], GetOwningPlayer(GetTriggerUnit()))
    call DisplayTextToForce(MwS(GetOwningPlayer(GetTriggerUnit())), "|cffffcc00Squeaky|r : People travelling between cities have started to disappear. Since bandits are now mostly under control, it must be noone else than the damned Snow Orcs. They seem to be spreading too far south from the mountains. Show them where they belong!")
    call T_i(GetOwningPlayer(GetTriggerUnit()), $00000000, "Blood and Snow", "In the northern mountains, the Snow Orcs have emerged, spreading far too south. I must make sure they are taken care of!", "ReplaceableTextures\\CommandButtons\\BTNGrunt.blp")
    set ZS[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))] = bj_lastCreatedQuest
endfunction
function tFu takes nothing returns nothing
    call TriggerExecute(pR)
endfunction
function B7S takes string C7S returns integer
    local integer V7S
    set DSw[ASw] = C7S
    set ASw = ASw + 1
    if NX == 0 then
        if MX < 32768 then
            set MX = MX + 1
            set V7S = MX
            set wC[V7S] = 956
        else
            call tNr("Out of memory: Could not create CallbackSingle_doAfter_SuperSaiyan.", "when calling error in SuperSaiyan, line 281")
            set V7S = 0
        endif
    else
        set NX = NX - 1
        set V7S = BX[NX]
        set wC[V7S] = 956
    endif
    set ASw = ASw - 1
    return V7S
endfunction
function C_i takes string L_i returns integer
    local integer X_i
    set DSw[ASw] = L_i
    set ASw = ASw + 1
    if NX == 0 then
        if MX < 32768 then
            set MX = MX + 1
            set X_i = MX
            set wC[X_i] = 954
        else
            call tNr("Out of memory: Could not create CallbackSingle_doAfter_SuperSaiyan.", "when calling error in SuperSaiyan, line 263")
            set X_i = 0
        endif
    else
        set NX = NX - 1
        set X_i = BX[NX]
        set wC[X_i] = 954
    endif
    set ASw = ASw - 1
    return X_i
endfunction
function qks takes string pks returns integer
    local integer eks
    set DSw[ASw] = pks
    set ASw = ASw + 1
    if NX == 0 then
        if MX < 32768 then
            set MX = MX + 1
            set eks = MX
            set wC[eks] = 955
        else
            call tNr("Out of memory: Could not create CallbackSingle_doAfter_SuperSaiyan.", "when calling error in SuperSaiyan, line 278")
            set eks = 0
        endif
    else
        set NX = NX - 1
        set eks = BX[NX]
        set wC[eks] = 955
    endif
    set ASw = ASw - 1
    return eks
endfunction
function oRs takes string tds returns boolean
    local integer ids
    local integer Sds
    local integer cds
    local integer ods
    local integer Ods
    local integer lds
    local integer bds
    local integer yds
    local integer pds
    local integer eds
    local integer qds
    local integer ads
    local integer nds
    local integer dds
    local integer fds
    local integer Rds
    local integer Tds
    local integer Yds
    local integer Gds
    local integer gds
    local integer hds
    local integer Fds
    local integer kds
    local integer jds
    local integer xds
    local integer vds
    local integer mds
    local integer Qds
    local integer Wds
    local integer Eds
    local integer Zds
    local integer Uds
    local integer Ids
    local integer Pds
    local integer Ads
    local integer Dds
    local integer Hds
    local integer Jds
    local integer Kds
    local integer Lds
    local integer Xds
    local integer Cds
    local integer Vds
    local integer Bds
    local integer Nds
    local integer Mds
    local integer wfs
    local integer ufs
    local integer rfs
    local integer sfs
    local integer tfs
    local integer ifs
    local integer Sfs
    local integer cfs
    local integer ofs
    local integer Ofs
    local integer lfs
    local integer bfs
    local string yfs
    local integer pfs
    local string efs
    local integer qfs
    local string afs
    local integer nfs
    local integer dfs
    local integer ffs
    local integer Rfs
    local real Tfs
    local real Yfs
    local integer Gfs
    local integer gfs
    local integer hfs
    local integer Ffs
    local integer kfs
    local integer jfs
    local integer xfs
    local integer vfs
    local integer mfs
    local integer Qfs
    local integer Wfs
    local integer Efs
    local integer Zfs
    local integer Ufs
    local integer Ifs
    local integer Pfs
    local integer Afs
    local integer Dfs
    local integer Hfs
    local integer Jfs
    local integer Kfs
    local integer Lfs
    local integer Xfs
    local integer Cfs
    local integer Vfs
    local integer Bfs
    local integer Nfs
    local integer Mfs
    local integer wRs
    local integer uRs
    local integer rRs
    local integer sRs
    local integer tRs
    local integer iRs
    local integer SRs
    local integer cRs
    set DSw[ASw] = tds
    set ASw = ASw + 1
    set Gfs = 255
    set gfs = 255
    set hfs = 255
    set Ffs = 255
    set oJ[$00000000] = Gfs
    set OJ[$00000000] = gfs
    set lJ[$00000000] = hfs
    set bJ[$00000000] = Ffs
    set kfs = 93
    set jfs = 225
    set xfs = 255
    set vfs = 255
    set oJ[$00000001] = kfs
    set OJ[$00000001] = jfs
    set lJ[$00000001] = xfs
    set bJ[$00000001] = vfs
    set mfs = 17
    set Qfs = 128
    set Wfs = 106
    set Efs = 255
    set oJ[$00000002] = mfs
    set OJ[$00000002] = Qfs
    set lJ[$00000002] = Wfs
    set bJ[$00000002] = Efs
    set Zfs = 31
    set Ufs = 139
    set Ifs = 76
    set Pfs = 255
    set oJ[$00000003] = Zfs
    set OJ[$00000003] = Ufs
    set lJ[$00000003] = Ifs
    set bJ[$00000003] = Pfs
    set Afs = 32
    set Dfs = 102
    set Hfs = 148
    set Jfs = 255
    set oJ[$00000004] = Afs
    set OJ[$00000004] = Dfs
    set lJ[$00000004] = Hfs
    set bJ[$00000004] = Jfs
    set Kfs = 113
    set Lfs = 54
    set Xfs = 138
    set Cfs = 255
    set oJ[$00000005] = Kfs
    set OJ[$00000005] = Lfs
    set lJ[$00000005] = Xfs
    set bJ[$00000005] = Cfs
    set Vfs = 194
    set Bfs = 124
    set Nfs = 14
    set Mfs = 255
    set oJ[$00000006] = Vfs
    set OJ[$00000006] = Bfs
    set lJ[$00000006] = Nfs
    set bJ[$00000006] = Mfs
    set wRs = 168
    set uRs = 67
    set rRs = 0
    set sRs = 255
    set oJ[$00000007] = wRs
    set OJ[$00000007] = uRs
    set lJ[$00000007] = rRs
    set bJ[$00000007] = sRs
    set tRs = 168
    set iRs = 67
    set SRs = 0
    set cRs = 255
    set oJ[$00000008] = tRs
    set OJ[$00000008] = iRs
    set lJ[$00000008] = SRs
    set bJ[$00000008] = cRs
    set ids = xMr("when calling new_IterableMap in SuperSaiyan, line 87")
    call iUr(ids, err(Iji("peterkirk", "when calling unObfuscate in SuperSaiyan, line 88"), "when calling stringToIndex in SuperSaiyan, line 88"), k6w("85", "when calling unObfuscateInt in SuperSaiyan, line 88"), "when calling put in SuperSaiyan, line 88")
    set Sds = ids
    call iUr(Sds, err(Iji("dodi", "when calling unObfuscate in SuperSaiyan, line 89"), "when calling stringToIndex in SuperSaiyan, line 89"), k6w("85", "when calling unObfuscateInt in SuperSaiyan, line 89"), "when calling put in SuperSaiyan, line 89")
    set cds = Sds
    call iUr(cds, err(Iji("BayKas", "when calling unObfuscate in SuperSaiyan, line 90"), "when calling stringToIndex in SuperSaiyan, line 90"), k6w("85", "when calling unObfuscateInt in SuperSaiyan, line 90"), "when calling put in SuperSaiyan, line 90")
    set ods = cds
    call iUr(ods, err(Iji("Tazzad", "when calling unObfuscate in SuperSaiyan, line 92"), "when calling stringToIndex in SuperSaiyan, line 92"), k6w("17", "when calling unObfuscateInt in SuperSaiyan, line 92"), "when calling put in SuperSaiyan, line 92")
    set Ods = ods
    call iUr(Ods, err(Iji("Peaky", "when calling unObfuscate in SuperSaiyan, line 93"), "when calling stringToIndex in SuperSaiyan, line 93"), k6w("17", "when calling unObfuscateInt in SuperSaiyan, line 93"), "when calling put in SuperSaiyan, line 93")
    set lds = Ods
    call iUr(lds, err(Iji("DezyMMO", "when calling unObfuscate in SuperSaiyan, line 94"), "when calling stringToIndex in SuperSaiyan, line 94"), k6w("17", "when calling unObfuscateInt in SuperSaiyan, line 94"), "when calling put in SuperSaiyan, line 94")
    set bds = lds
    call iUr(bds, err(Iji("seeyaa32", "when calling unObfuscate in SuperSaiyan, line 95"), "when calling stringToIndex in SuperSaiyan, line 95"), k6w("17", "when calling unObfuscateInt in SuperSaiyan, line 95"), "when calling put in SuperSaiyan, line 95")
    set yds = bds
    call iUr(yds, err(Iji("Toches", "when calling unObfuscate in SuperSaiyan, line 96"), "when calling stringToIndex in SuperSaiyan, line 96"), k6w("17", "when calling unObfuscateInt in SuperSaiyan, line 96"), "when calling put in SuperSaiyan, line 96")
    set pds = yds
    call iUr(pds, err(Iji("yxfabi95xy", "when calling unObfuscate in SuperSaiyan, line 97"), "when calling stringToIndex in SuperSaiyan, line 97"), k6w("17", "when calling unObfuscateInt in SuperSaiyan, line 97"), "when calling put in SuperSaiyan, line 97")
    set eds = pds
    call iUr(eds, err(Iji("nebojsazak", "when calling unObfuscate in SuperSaiyan, line 98"), "when calling stringToIndex in SuperSaiyan, line 98"), k6w("17", "when calling unObfuscateInt in SuperSaiyan, line 98"), "when calling put in SuperSaiyan, line 98")
    set qds = eds
    call iUr(qds, err(Iji("AOEHD", "when calling unObfuscate in SuperSaiyan, line 99"), "when calling stringToIndex in SuperSaiyan, line 99"), k6w("17", "when calling unObfuscateInt in SuperSaiyan, line 99"), "when calling put in SuperSaiyan, line 99")
    set ads = qds
    call iUr(ads, err(Iji("Mecho_pux", "when calling unObfuscate in SuperSaiyan, line 100"), "when calling stringToIndex in SuperSaiyan, line 100"), k6w("17", "when calling unObfuscateInt in SuperSaiyan, line 100"), "when calling put in SuperSaiyan, line 100")
    set nds = ads
    call iUr(nds, err(Iji("BigLonFokGuy", "when calling unObfuscate in SuperSaiyan, line 101"), "when calling stringToIndex in SuperSaiyan, line 101"), k6w("17", "when calling unObfuscateInt in SuperSaiyan, line 101"), "when calling put in SuperSaiyan, line 101")
    set dds = nds
    call iUr(dds, err(Iji("Farothaer", "when calling unObfuscate in SuperSaiyan, line 102"), "when calling stringToIndex in SuperSaiyan, line 102"), k6w("29", "when calling unObfuscateInt in SuperSaiyan, line 102"), "when calling put in SuperSaiyan, line 102")
    set fds = dds
    call iUr(fds, err(Iji("Vakarlan", "when calling unObfuscate in SuperSaiyan, line 103"), "when calling stringToIndex in SuperSaiyan, line 103"), k6w("29", "when calling unObfuscateInt in SuperSaiyan, line 103"), "when calling put in SuperSaiyan, line 103")
    set Rds = fds
    call iUr(Rds, err(Iji("Billy", "when calling unObfuscate in SuperSaiyan, line 104"), "when calling stringToIndex in SuperSaiyan, line 104"), k6w("29", "when calling unObfuscateInt in SuperSaiyan, line 104"), "when calling put in SuperSaiyan, line 104")
    set Tds = Rds
    call iUr(Tds, err(Iji("MetalUpa", "when calling unObfuscate in SuperSaiyan, line 105"), "when calling stringToIndex in SuperSaiyan, line 105"), k6w("29", "when calling unObfuscateInt in SuperSaiyan, line 105"), "when calling put in SuperSaiyan, line 105")
    set Yds = Tds
    call iUr(Yds, err(Iji("KuroiHikari", "when calling unObfuscate in SuperSaiyan, line 106"), "when calling stringToIndex in SuperSaiyan, line 106"), k6w("29", "when calling unObfuscateInt in SuperSaiyan, line 106"), "when calling put in SuperSaiyan, line 106")
    set Gds = Yds
    call iUr(Gds, err(Iji("Po", "when calling unObfuscate in SuperSaiyan, line 107"), "when calling stringToIndex in SuperSaiyan, line 107"), k6w("29", "when calling unObfuscateInt in SuperSaiyan, line 107"), "when calling put in SuperSaiyan, line 107")
    set gds = Gds
    call iUr(gds, err(Iji("Dharks", "when calling unObfuscate in SuperSaiyan, line 108"), "when calling stringToIndex in SuperSaiyan, line 108"), k6w("29", "when calling unObfuscateInt in SuperSaiyan, line 108"), "when calling put in SuperSaiyan, line 108")
    set hds = gds
    call iUr(hds, err(Iji("ShadowBlade", "when calling unObfuscate in SuperSaiyan, line 109"), "when calling stringToIndex in SuperSaiyan, line 109"), k6w("29", "when calling unObfuscateInt in SuperSaiyan, line 109"), "when calling put in SuperSaiyan, line 109")
    set Fds = hds
    call iUr(Fds, err(Iji("Pistach", "when calling unObfuscate in SuperSaiyan, line 110"), "when calling stringToIndex in SuperSaiyan, line 110"), k6w("29", "when calling unObfuscateInt in SuperSaiyan, line 110"), "when calling put in SuperSaiyan, line 110")
    set kds = Fds
    call iUr(kds, err(Iji("Thermal", "when calling unObfuscate in SuperSaiyan, line 111"), "when calling stringToIndex in SuperSaiyan, line 111"), k6w("29", "when calling unObfuscateInt in SuperSaiyan, line 111"), "when calling put in SuperSaiyan, line 111")
    set jds = kds
    call iUr(jds, err(Iji("SinZ", "when calling unObfuscate in SuperSaiyan, line 112"), "when calling stringToIndex in SuperSaiyan, line 112"), k6w("66", "when calling unObfuscateInt in SuperSaiyan, line 112"), "when calling put in SuperSaiyan, line 112")
    set xds = jds
    call iUr(xds, err(Iji("N3mesis", "when calling unObfuscate in SuperSaiyan, line 113"), "when calling stringToIndex in SuperSaiyan, line 113"), k6w("66", "when calling unObfuscateInt in SuperSaiyan, line 113"), "when calling put in SuperSaiyan, line 113")
    set vds = xds
    call iUr(vds, err(Iji("Mattsterman", "when calling unObfuscate in SuperSaiyan, line 114"), "when calling stringToIndex in SuperSaiyan, line 114"), k6w("66", "when calling unObfuscateInt in SuperSaiyan, line 114"), "when calling put in SuperSaiyan, line 114")
    set mds = vds
    call iUr(mds, err(Iji("Alright", "when calling unObfuscate in SuperSaiyan, line 115"), "when calling stringToIndex in SuperSaiyan, line 115"), k6w("66", "when calling unObfuscateInt in SuperSaiyan, line 115"), "when calling put in SuperSaiyan, line 115")
    set Qds = mds
    call iUr(Qds, err(Iji("nicti", "when calling unObfuscate in SuperSaiyan, line 116"), "when calling stringToIndex in SuperSaiyan, line 116"), k6w("66", "when calling unObfuscateInt in SuperSaiyan, line 116"), "when calling put in SuperSaiyan, line 116")
    set Wds = Qds
    call iUr(Wds, err(Iji("kartaxt", "when calling unObfuscate in SuperSaiyan, line 117"), "when calling stringToIndex in SuperSaiyan, line 117"), k6w("66", "when calling unObfuscateInt in SuperSaiyan, line 117"), "when calling put in SuperSaiyan, line 117")
    set Eds = Wds
    call iUr(Eds, err(Iji("Clarynaa", "when calling unObfuscate in SuperSaiyan, line 118"), "when calling stringToIndex in SuperSaiyan, line 118"), k6w("66", "when calling unObfuscateInt in SuperSaiyan, line 118"), "when calling put in SuperSaiyan, line 118")
    set Zds = Eds
    call iUr(Zds, err(Iji("Vendic", "when calling unObfuscate in SuperSaiyan, line 119"), "when calling stringToIndex in SuperSaiyan, line 119"), k6w("66", "when calling unObfuscateInt in SuperSaiyan, line 119"), "when calling put in SuperSaiyan, line 119")
    set Uds = Zds
    call iUr(Uds, err(Iji("Misko", "when calling unObfuscate in SuperSaiyan, line 120"), "when calling stringToIndex in SuperSaiyan, line 120"), k6w("66", "when calling unObfuscateInt in SuperSaiyan, line 120"), "when calling put in SuperSaiyan, line 120")
    set Ids = Uds
    call iUr(Ids, err(Iji("dennwii1", "when calling unObfuscate in SuperSaiyan, line 121"), "when calling stringToIndex in SuperSaiyan, line 121"), k6w("83", "when calling unObfuscateInt in SuperSaiyan, line 121"), "when calling put in SuperSaiyan, line 121")
    set Pds = Ids
    call iUr(Pds, err(Iji("ilidaan", "when calling unObfuscate in SuperSaiyan, line 122"), "when calling stringToIndex in SuperSaiyan, line 122"), k6w("83", "when calling unObfuscateInt in SuperSaiyan, line 122"), "when calling put in SuperSaiyan, line 122")
    set Ads = Pds
    call iUr(Ads, err(Iji("masterickey", "when calling unObfuscate in SuperSaiyan, line 123"), "when calling stringToIndex in SuperSaiyan, line 123"), k6w("83", "when calling unObfuscateInt in SuperSaiyan, line 123"), "when calling put in SuperSaiyan, line 123")
    set Dds = Ads
    call iUr(Dds, err(Iji("Tedd0n", "when calling unObfuscate in SuperSaiyan, line 124"), "when calling stringToIndex in SuperSaiyan, line 124"), k6w("83", "when calling unObfuscateInt in SuperSaiyan, line 124"), "when calling put in SuperSaiyan, line 124")
    set Hds = Dds
    call iUr(Hds, err(Iji("AntsElectron", "when calling unObfuscate in SuperSaiyan, line 125"), "when calling stringToIndex in SuperSaiyan, line 125"), k6w("83", "when calling unObfuscateInt in SuperSaiyan, line 125"), "when calling put in SuperSaiyan, line 125")
    set Jds = Hds
    call iUr(Jds, err(Iji("RedHerring", "when calling unObfuscate in SuperSaiyan, line 126"), "when calling stringToIndex in SuperSaiyan, line 126"), k6w("83", "when calling unObfuscateInt in SuperSaiyan, line 126"), "when calling put in SuperSaiyan, line 126")
    set Kds = Jds
    call iUr(Kds, err(Iji("shaNix", "when calling unObfuscate in SuperSaiyan, line 127"), "when calling stringToIndex in SuperSaiyan, line 127"), k6w("83", "when calling unObfuscateInt in SuperSaiyan, line 127"), "when calling put in SuperSaiyan, line 127")
    set Lds = Kds
    call iUr(Lds, err(Iji("Yasharan73", "when calling unObfuscate in SuperSaiyan, line 128"), "when calling stringToIndex in SuperSaiyan, line 128"), k6w("83", "when calling unObfuscateInt in SuperSaiyan, line 128"), "when calling put in SuperSaiyan, line 128")
    set Xds = Lds
    call iUr(Xds, err(Iji("Amtai", "when calling unObfuscate in SuperSaiyan, line 129"), "when calling stringToIndex in SuperSaiyan, line 129"), k6w("83", "when calling unObfuscateInt in SuperSaiyan, line 129"), "when calling put in SuperSaiyan, line 129")
    set Cds = Xds
    call iUr(Cds, err(Iji("Crau", "when calling unObfuscate in SuperSaiyan, line 130"), "when calling stringToIndex in SuperSaiyan, line 130"), k6w("48", "when calling unObfuscateInt in SuperSaiyan, line 130"), "when calling put in SuperSaiyan, line 130")
    set Vds = Cds
    call iUr(Vds, err(Iji("Brave_Sp1r1t", "when calling unObfuscate in SuperSaiyan, line 131"), "when calling stringToIndex in SuperSaiyan, line 131"), k6w("48", "when calling unObfuscateInt in SuperSaiyan, line 131"), "when calling put in SuperSaiyan, line 131")
    set Bds = Vds
    call iUr(Bds, err(Iji("Purger", "when calling unObfuscate in SuperSaiyan, line 132"), "when calling stringToIndex in SuperSaiyan, line 132"), k6w("48", "when calling unObfuscateInt in SuperSaiyan, line 132"), "when calling put in SuperSaiyan, line 132")
    set Nds = Bds
    call iUr(Nds, err(Iji("AssassinxDrake", "when calling unObfuscate in SuperSaiyan, line 133"), "when calling stringToIndex in SuperSaiyan, line 133"), k6w("73", "when calling unObfuscateInt in SuperSaiyan, line 133"), "when calling put in SuperSaiyan, line 133")
    set Mds = Nds
    call iUr(Mds, err(Iji("TheDeeTs", "when calling unObfuscate in SuperSaiyan, line 134"), "when calling stringToIndex in SuperSaiyan, line 134"), k6w("73", "when calling unObfuscateInt in SuperSaiyan, line 134"), "when calling put in SuperSaiyan, line 134")
    set wfs = Mds
    call iUr(wfs, err(Iji("Paragon707", "when calling unObfuscate in SuperSaiyan, line 135"), "when calling stringToIndex in SuperSaiyan, line 135"), k6w("73", "when calling unObfuscateInt in SuperSaiyan, line 135"), "when calling put in SuperSaiyan, line 135")
    set ufs = wfs
    call iUr(ufs, err(Iji("TDV", "when calling unObfuscate in SuperSaiyan, line 136"), "when calling stringToIndex in SuperSaiyan, line 136"), k6w("73", "when calling unObfuscateInt in SuperSaiyan, line 136"), "when calling put in SuperSaiyan, line 136")
    set rfs = ufs
    call iUr(rfs, err(Iji("Sheepherder", "when calling unObfuscate in SuperSaiyan, line 137"), "when calling stringToIndex in SuperSaiyan, line 137"), k6w("73", "when calling unObfuscateInt in SuperSaiyan, line 137"), "when calling put in SuperSaiyan, line 137")
    set sfs = rfs
    call iUr(sfs, err(Iji("Rurisk", "when calling unObfuscate in SuperSaiyan, line 138"), "when calling stringToIndex in SuperSaiyan, line 138"), k6w("73", "when calling unObfuscateInt in SuperSaiyan, line 138"), "when calling put in SuperSaiyan, line 138")
    set tfs = sfs
    call iUr(tfs, err(Iji("Tabloid", "when calling unObfuscate in SuperSaiyan, line 139"), "when calling stringToIndex in SuperSaiyan, line 139"), k6w("60", "when calling unObfuscateInt in SuperSaiyan, line 139"), "when calling put in SuperSaiyan, line 139")
    set ifs = tfs
    call iUr(ifs, err(Iji("Caspazett", "when calling unObfuscate in SuperSaiyan, line 140"), "when calling stringToIndex in SuperSaiyan, line 140"), k6w("60", "when calling unObfuscateInt in SuperSaiyan, line 140"), "when calling put in SuperSaiyan, line 140")
    set Sfs = ifs
    call iUr(Sfs, err(Iji("Koltar", "when calling unObfuscate in SuperSaiyan, line 141"), "when calling stringToIndex in SuperSaiyan, line 141"), k6w("9085", "when calling unObfuscateInt in SuperSaiyan, line 141"), "when calling put in SuperSaiyan, line 141")
    set cfs = Sfs
    call iUr(cfs, err(Iji("liviat", "when calling unObfuscate in SuperSaiyan, line 142"), "when calling stringToIndex in SuperSaiyan, line 142"), k6w("9085", "when calling unObfuscateInt in SuperSaiyan, line 142"), "when calling put in SuperSaiyan, line 142")
    set ofs = cfs
    call iUr(ofs, err(Iji("KryptonRazer", "when calling unObfuscate in SuperSaiyan, line 143"), "when calling stringToIndex in SuperSaiyan, line 143"), k6w("8585", "when calling unObfuscateInt in SuperSaiyan, line 143"), "when calling put in SuperSaiyan, line 143")
    set Ofs = ofs
    call iUr(Ofs, err(Iji("Argon", "when calling unObfuscate in SuperSaiyan, line 144"), "when calling stringToIndex in SuperSaiyan, line 144"), k6w("8585", "when calling unObfuscateInt in SuperSaiyan, line 144"), "when calling put in SuperSaiyan, line 144")
    set lfs = Ofs
    call iUr(lfs, err(Iji("Donach", "when calling unObfuscate in SuperSaiyan, line 145"), "when calling stringToIndex in SuperSaiyan, line 145"), k6w("8585", "when calling unObfuscateInt in SuperSaiyan, line 145"), "when calling put in SuperSaiyan, line 145")
    set yJ = lfs
    set pJ = jts("when calling new_HashMap in SuperSaiyan, line 215")
    set eJ = XQt("when calling new_LinkedList in SuperSaiyan, line 216")
    set bfs = C_i("when calling alloc_CallbackSingle_doAfter_SuperSaiyan in SuperSaiyan, line 263")
    call RUs(bfs)
    call Ybr(2., bfs, "when calling doAfter in SuperSaiyan, line 263")
    set yfs = ""
    set pfs = gJi(yJ, "when calling iterator in SuperSaiyan, line 269")
    loop
        exitwhen not slr(pfs, "when calling hasNext in SuperSaiyan, line 269")
        set efs = nPr(Gjs(pfs, "when calling next in SuperSaiyan, line 269"), "when calling stringFromIndex in SuperSaiyan, line 269")
        set qfs = wps(yJ, err(efs, "when calling stringToIndex in SuperSaiyan, line 270"), "when calling get in SuperSaiyan, line 270")
        if qfs >= 1 and qfs <= 7 then
            set afs = R7w(oJ[qfs], OJ[qfs], lJ[qfs], bJ[qfs]) + efs + "|r"
            set yfs = afs + "|n" + yfs
        endif
    endloop
    call Ejr(pfs, "when calling close in SuperSaiyan, line 269")
    set qF = qF + yfs
    set nfs = c5r(gQ, "when calling iterator in SuperSaiyan, line 276")
    loop
        exitwhen not Tji(nfs)
        set dfs = LXi(nfs)
        if Jyr(yJ, err(ui[1 + dfs], "when calling stringToIndex in SuperSaiyan, line 277"), "when calling has in SuperSaiyan, line 277") then
            set Tfs = 15. + dfs
            set ffs = qks("when calling alloc_CallbackSingle_doAfter_SuperSaiyan in SuperSaiyan, line 278")
            call RUs(ffs)
            set Isw[ffs] = dfs
            call Ybr(Tfs, ffs, "when calling doAfter in SuperSaiyan, line 278")
        else
            set Yfs = 20. + Lh
            set Rfs = B7S("when calling alloc_CallbackSingle_doAfter_SuperSaiyan in SuperSaiyan, line 281")
            call RUs(Rfs)
            set Psw[Rfs] = dfs
            call Ybr(Yfs, Rfs, "when calling doAfter in SuperSaiyan, line 281")
        endif
    endloop
    call vms(nfs, "when calling close in SuperSaiyan, line 276")
    set ASw = ASw - 1
    return true
endfunction
function tKs takes nothing returns boolean
    set ASw = 0
    return oRs("via function reference SuperSaiyan, line 9")
endfunction
function Oxr takes string cxr returns integer
    local integer oxr
    set DSw[ASw] = cxr
    set ASw = ASw + 1
    if NX == 0 then
        if MX < 32768 then
            set MX = MX + 1
            set oxr = MX
            set wC[oxr] = 1005
        else
            call tNr("Out of memory: Could not create CallbackSingle_doAfter_WorldBoss_quests.", "when calling error in WorldBoss_quests, line 99")
            set oxr = 0
        endif
    else
        set NX = NX - 1
        set oxr = BX[NX]
        set wC[oxr] = 1005
    endif
    set ASw = ASw - 1
    return oxr
endfunction
function eJu takes string OJu returns boolean
    local trigger lJu
    local trigger bJu
    local trigger yJu
    local integer pJu
    set DSw[ASw] = OJu
    set ASw = ASw + 1
    set XX = 1227896147
    set CX = jts("when calling new_HashMap in WorldBoss_quests, line 14")
    set VX = jts("when calling new_HashMap in WorldBoss_quests, line 15")
    set lJu = CreateTrigger()
    call l2w(lJu, EVENT_PLAYER_UNIT_PICKUP_ITEM)
    set bJu = lJu
    call B2S(bJu, VEw)
    set yJu = CreateTrigger()
    set pJu = Oxr("when calling alloc_CallbackSingle_doAfter_WorldBoss_quests in WorldBoss_quests, line 99")
    call RUs(pJu)
    set PSw[pJu] = yJu
    call Ybr(1.2, pJu, "when calling doAfter in WorldBoss_quests, line 99")
    set ASw = ASw - 1
    set lJu = null
    set bJu = null
    set yJu = null
    return true
endfunction
function tTt takes nothing returns boolean
    set ASw = 0
    return eJu("via function reference WorldBoss_quests, line 1")
endfunction
function VLt takes string CLt returns nothing
    set DSw[ASw] = CLt
    set ASw = ASw + 1
    call GZs(xus(hgr(GetEnumPlayer()), "when calling getCustomPlayer in Imp4, line 224"), true, "when calling setCommandsDisabled in Imp4, line 224")
    set ASw = ASw - 1
endfunction
function tUt takes nothing returns nothing
    set ASw = 0
    call VLt("via function reference Imp4, line 223")
endfunction
function W9u takes string Q9u returns nothing
    set DSw[ASw] = Q9u
    set ASw = ASw + 1
    call SJu(GetEnumUnit(), "when calling ac_addRandomDebuff2 in JobAdvancementQuestHandler, line 1073")
    set ASw = ASw - 1
endfunction
function tVr takes nothing returns nothing
    set ASw = 0
    call W9u("via function reference JobAdvancementQuestHandler, line 1072")
endfunction
function tci takes nothing returns nothing
    call PanCameraToTimedLocForPlayer(GetEnumPlayer(), br[1 + GetPlayerId(GetEnumPlayer())], 0.)
    set iw[GetPlayerId(GetEnumPlayer())] = GetPlayerId(GetEnumPlayer())
    set Sw[GetPlayerId(GetEnumPlayer())] = pr[wS[Ni * 100 + GetPlayerId(GetEnumPlayer())]]
endfunction
function tdS takes nothing returns nothing
    call AddSpecialEffectTargetUnitBJ("overhead", GetTriggerUnit(), "Abilities\\Spells\\Other\\Levelup\\LevelupCaster.mdl")
    call DestroyEffect(bj_lastCreatedEffect)
    call ForceRemovePlayer(Uo[$00000001], GetOwningPlayer(GetTriggerUnit()))
    call DisplayTextToForce(MwS(GetOwningPlayer(GetTriggerUnit())), "|cffff8c00Fisherman's Friend|r : Congratulations! You're now promoted to a Master Fisherman! Keep the Thunderfishes; they're your reward for going through such a difficult ordeal!")
    call DestroyQuest(Ao[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))])
    call DestroyTimerDialog(Mo[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))])
    set Po[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))] = 4
endfunction
function tdr takes nothing returns boolean
    return GetUnitTypeId(GetDyingUnit()) == 1848651847 and IsPlayerInForce(GetOwningPlayer(GetKillingUnit()), IS[$00000004])
endfunction
function tiS takes nothing returns nothing
    if not m9r(GetEnumUnit()) then
        call UnitDamageTargetBJ(GetEventDamageSource(), GetEnumUnit(), 3. * I2R(GetHeroStatBJ($00000000, GetEventDamageSource(), true)), ATTACK_TYPE_HERO, DAMAGE_TYPE_UNIVERSAL)
    endif
endfunction
function tis takes nothing returns nothing
    call ForceRemovePlayer(nr, GetOwningPlayer(GetTriggerUnit()))
    call ForceRemovePlayer(fr, GetOwningPlayer(GetTriggerUnit()))
    set Rr[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))] = 0
    call DisplayTextToForce(MwS(GetOwningPlayer(GetTriggerUnit())), "|cffffcc00Class Trainer|r : |cff87ceebYou did extremely well, padawan. From here on out, you shall be an ArchTemplar. Bear in mind, however, that you should choose your skills wisely, according to which 3rd job class you want to be. Not having the required skills needed of you when you try to advance will result in failure.")
    call PlaySoundBJ(re)
    call DestroyQuest(dr[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))])
    call SetHeroLevelBJ(GetTriggerUnit(), $00000001, false)
    call ReplaceUnitBJ(GetTriggerUnit(), $4830304B, $00000002)
    call SelectUnitForPlayerSingle(bj_lastReplacedUnit, GetOwningPlayer(GetTriggerUnit()))
    call SetHeroLevel(bj_lastReplacedUnit, $00000001, true)
    call UnitStripHeroLevel(bj_lastReplacedUnit, $00000001)
endfunction
function tou takes nothing returns nothing
    call ForceRemovePlayer(pc[$00000001], GetOwningPlayer(GetTriggerUnit()))
    call ForceAddPlayer(ec[$00000001], GetOwningPlayer(GetTriggerUnit()))
    call DestroyQuest(MS[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))])
    call PlaySoundBJ(pe)
    call DisplayTimedTextToForce(MwS(GetOwningPlayer(GetOrderedUnit())), 5., "|cffffcc00You have completed the Quest|r.")
    call DisplayTimedTextToForce(MwS(GetOwningPlayer(GetOrderedUnit())), 20., "|cffffcc00Arnold|r : You are a new adventurer sent by Skypper huh? I hope you are no random stranger that he pulled out from the streets. No matter, you still have to prove yourself worthy for the team. Ready yourself and then report back to me.")
    call AddHeroXPSwapped(f, GetTriggerUnit(), true)
    call AdjustPlayerStateBJ($000000C8, GetOwningPlayer(GetTriggerUnit()), PLAYER_STATE_RESOURCE_GOLD)
    set V[(1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))) * 1000 + fkS(GetTriggerUnit())] = true
endfunction
function VMr takes nothing returns boolean
    return FS[1 + GetPlayerId(GetTriggerPlayer())] == 1211118158 or FS[1 + GetPlayerId(GetTriggerPlayer())] == 1211118159
endfunction
function Fdr takes nothing returns boolean
    return VMr()
endfunction
function ttr takes nothing returns boolean
    return FS[1 + GetPlayerId(GetTriggerPlayer())] == 1211118156 or FS[1 + GetPlayerId(GetTriggerPlayer())] == 1211118157
endfunction
function Phi takes nothing returns boolean
    return ttr()
endfunction
function WNi takes nothing returns boolean
    return FS[1 + GetPlayerId(GetTriggerPlayer())] == 1211118162 or FS[1 + GetPlayerId(GetTriggerPlayer())] == 1211118163 or FS[1 + GetPlayerId(GetTriggerPlayer())] == 1211118164 or FS[1 + GetPlayerId(GetTriggerPlayer())] == 1211118165
endfunction
function QcS takes nothing returns boolean
    return WNi()
endfunction
function kxt takes nothing returns boolean
    return FS[1 + GetPlayerId(GetTriggerPlayer())] == 1211118150 or FS[1 + GetPlayerId(GetTriggerPlayer())] == 1211118149
endfunction
function Tni takes nothing returns boolean
    return kxt()
endfunction
function H_S takes nothing returns boolean
    return FS[1 + GetPlayerId(GetTriggerPlayer())] == 1211118131 or FS[1 + GetPlayerId(GetTriggerPlayer())] == 1211118132
endfunction
function Zur takes nothing returns boolean
    return H_S()
endfunction
function amu takes nothing returns boolean
    return FS[1 + GetPlayerId(GetTriggerPlayer())] == 1211118160 or FS[1 + GetPlayerId(GetTriggerPlayer())] == 1211118161
endfunction
function aWu takes nothing returns boolean
    return amu()
endfunction
function i1w takes nothing returns boolean
    return FS[1 + GetPlayerId(GetTriggerPlayer())] == 1211118146 or FS[1 + GetPlayerId(GetTriggerPlayer())] == 1211118147
endfunction
function gIi takes nothing returns boolean
    return i1w()
endfunction
function agt takes nothing returns boolean
    return FS[1 + GetPlayerId(GetTriggerPlayer())] == 1211118152 or FS[1 + GetPlayerId(GetTriggerPlayer())] == 1211118155
endfunction
function vOu takes nothing returns boolean
    return agt()
endfunction
function tqS takes nothing returns nothing
    if vOu() then
        call DisplayTextToForce(MwS(GetTriggerPlayer()), "|cffffcc00Devastator Strike|r - Charges up power, then teleports to the enemy and strike the target with the charged force, dealing 50,000 universal damage and knocking the unit back.")
    endif
    if Zur() then
        call DisplayTextToForce(MwS(GetTriggerPlayer()), "|cffffcc00Arcane Explosion|r - Unleashes 6 powerful arcane explosions in the targetted area, dealing 10,000 chaos damage to every unit caught in each blast.")
    endif
    if Phi() then
        call DisplayTextToForce(MwS(GetTriggerPlayer()), "|cffffcc00Supernova|r - Unleashes supernovas in the targetted area, dealing 26,000 universal damage and knocking the units back in an area of 700.")
    endif
    if Fdr() then
        call DisplayTextToForce(MwS(GetTriggerPlayer()), "|cffffcc00Speed Freak|r - Turns amazingly fast, becoming invulnerable and striking a random target in an area of 700. Does not strike Bosses. Each strike deals 5000 chaos damage. Strikes 18 times.")
    endif
    if aWu() then
        call DisplayTextToForce(MwS(GetTriggerPlayer()), "|cffffcc00Mark of the Wolverine|r - Becomes imbued with the power of the Wolverine, striking the target 8 times with incredible speed, knocking back the target with every hit. Deals 40,000 universal damage at the end of the 8 hits.")
    endif
    if Tni() then
        call DisplayTextToForce(MwS(GetTriggerPlayer()), "|cffffcc00Energy Rush|r - Charges up amazing force into the weapon, unleashing it in a powerful burst of energy, dealing 45,000 universal damage to the target and knocking it back.")
    endif
    if gIi() then
        call DisplayTextToForce(MwS(GetTriggerPlayer()), "|cffffcc00Lex Divina|r - Unleashes holy power unto an area of 700, dealing 20,000 universal damage to all enemies and healing all allies, including the caster, to full health.")
    endif
    if QcS() then
        call DisplayTextToForce(MwS(GetTriggerPlayer()), "|cffffcc00Cybele|r - Summons the might of the greek god, Cybele, causing powerful thorns to pierce enemies from below, dealing 35,000 chaos damage to all enemies in an area of 700.")
    endif
endfunction
function Exs takes string mxs returns nothing
    local player Qxs
    local integer Wxs
    set DSw[ASw] = mxs
    set ASw = ASw + 1
    set Qxs = GetTriggerPlayer()
    set Wxs = xus(hgr(Qxs), "when calling getCustomPlayer in Voidless_triggers, line 291")
    if GpS(eK, xMi(Wxs, "when calling getCHero in Voidless_triggers, line 292"), "when calling has in Voidless_triggers, line 292") then
        call x7t(Qxs, "when calling prepareRealDungeon in Voidless_triggers, line 293")
    endif
    set ASw = ASw - 1
    set Qxs = null
endfunction
function tqu takes nothing returns nothing
    set ASw = 0
    call Exs("via function reference Voidless_triggers, line 289")
endfunction
function tuS takes nothing returns nothing
    call RemoveItem(GetManipulatedItem())
    call ForceAddPlayer(IS[$00000009], GetOwningPlayer(GetTriggerUnit()))
    call DisplayTextToForce(MwS(GetOwningPlayer(GetTriggerUnit())), "|cffffcc00Skypper|r : Why are my deliveries always late? I hope my delivery boy did not disappear like the others. Many of my delivery boys are disappearing when they make deliveries in the night. I have heard that there is a rumour that says that there are Shadow Witches in the creepy forest north of here that feasts on souls of the living at night to stay alive. Perhaps they are responsible? Find out for me if its true. If it is true, slay 15 of them for me; I don't want them disrupting my business.")
    call T_i(GetOwningPlayer(GetTriggerUnit()), $00000000, "Hunter In The Night", "Skypper's delivery boys had been disappearing ever since they started making night deliveries through the creepy forest up north. He said something about a rumour of 15 witches feasting on souls of the living at night to stay alive, but he never believed that. Seems that he's either too lazy or he's just too scared to go and find out on his own. Either way, I should slay 15 of these \"witches\" should I come across them.", "ReplaceableTextures\\CommandButtons\\BTNAnimateDead.blp")
    set qr[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))] = bj_lastCreatedQuest
endfunction
function T5r takes real d5r, real f5r, real R5r returns real
    set Oow = d5r * R5r
    return Oow
endfunction
function Wpu takes region mpu, rect Qpu returns nothing
    call RegionAddRect(mpu, Qpu)
endfunction
function initMapBounds takes nothing returns nothing
    local rect cond_result
    local region receiver
    local rect cond_result_1
    local region receiver_1
    local real tuple_temp
    local real tuple_temp_1
    local real tuple_temp_2
    local real tuple_temp_3
    local real tuple_temp_4
    local real tuple_temp_5
    local real tuple_temp_6
    local real tuple_temp_7
    if WP then
        set cond_result = Rect(- 1024., - 1024., 1024., 1024.)
    else
        set cond_result = GetPlayableMapRect()
    endif
    set EP = cond_result
    set receiver = CreateRegion()
    call Wpu(receiver, EP)
    if WP then
        set cond_result_1 = Rect(- 1536., - 1536., 1536., 1536.)
    else
        set cond_result_1 = GetWorldBounds()
    endif
    set ZP = cond_result_1
    set receiver_1 = CreateRegion()
    call Wpu(receiver_1, ZP)
    set UP = receiver_1
    set tuple_temp = ATr(EP)
    set tuple_temp_1 = EUu(EP)
    set IP = tuple_temp
    set PP = tuple_temp_1
    set tuple_temp_2 = o2t(EP)
    set tuple_temp_3 = mxr(EP)
    set AP = tuple_temp_2
    set DP = tuple_temp_3
    set tuple_temp_4 = ATr(ZP)
    set tuple_temp_5 = EUu(ZP)
    set HP = tuple_temp_4
    set JP = tuple_temp_5
    set tuple_temp_6 = o2t(ZP)
    set tuple_temp_7 = mxr(ZP)
    set KP = tuple_temp_6
    set LP = tuple_temp_7
    call T5r(GLr(IP, PP, AP, DP), dcw, .5)
    call T5r(GLr(HP, JP, KP, LP), dcw, .5)
endfunction
function tws takes nothing returns boolean
    call initMapBounds()
    return true
endfunction
function u1s takes nothing returns nothing
    local player w1s = GetTriggerPlayer()
    call dii(UF, 30., w1s)
    call dii(IF, 30., w1s)
    set w1s = null
endfunction
function iJi takes nothing returns boolean
    return Oi[1 + GetPlayerId(GetOwningPlayer(GetKillingUnit()))] >= 10
endfunction
function u3t takes nothing returns nothing
    set Oi[1 + GetPlayerId(GetOwningPlayer(GetKillingUnit()))] = Oi[1 + GetPlayerId(GetOwningPlayer(GetKillingUnit()))] + 1
    if iJi() then
        call QuestMessageBJ(MwS(GetOwningPlayer(GetKillingUnit())), $00000002, "|cffffcc00Head Hunter|r Quest Requirement Completed.")
    else
        call QuestMessageBJ(MwS(GetOwningPlayer(GetKillingUnit())), $00000001, I2S(Oi[1 + GetPlayerId(GetOwningPlayer(GetKillingUnit()))]) + " Ice Troll Head(s) received.")
    endif
endfunction
function u6r takes nothing returns boolean
    return GetUnitTypeId(GetTriggerUnit()) == 1211117880 and GetUnitTypeId(GetOrderTargetUnit()) == 1747989297 and IsPlayerInForce(GetOwningPlayer(GetTriggerUnit()), rt) and IsPlayerInForce(GetOwningPlayer(GetTriggerUnit()), ii) and IsUnitInGroup(GetTriggerUnit(), kpu(300., GetUnitLoc(GetOrderTargetUnit())))
endfunction
function u9S takes nothing returns nothing
    call ForceAddPlayer(Zs, GetOwningPlayer(GetTriggerUnit()))
    call DisplayTextToForce(MwS(GetOwningPlayer(GetTriggerUnit())), "|cffffcc00You have obtained some Holy Water from the fountain.|r")
endfunction
function eGi takes multiboard pGi returns boolean
    return IsMultiboardDisplayed(pGi)
endfunction
function swi takes nothing returns nothing
    call nnr(CreateTimer(), 1., Bvw)
endfunction
function uBr takes nothing returns nothing
    if Xj then
        set Xj = false
        call swi()
    endif
    if GetLocalPlayer() == GetTriggerPlayer() then
        call ruS(Ij, not eGi(Ij))
    endif
endfunction
function WYu takes string mYu returns integer
    local integer QYu
    set DSw[ASw] = mYu
    set ASw = ASw + 1
    if NX == 0 then
        if MX < 32768 then
            set MX = MX + 1
            set QYu = MX
            set wC[QYu] = 1105
        else
            call tNr("Out of memory: Could not create CallbackSingle_nullTimer_Voidless_infotags.", "when calling error in Voidless_infotags, line 135")
            set QYu = 0
        endif
    else
        set NX = NX - 1
        set QYu = BX[NX]
        set wC[QYu] = 1105
    endif
    set ASw = ASw - 1
    return QYu
endfunction
function oUu takes string SUu returns boolean
    local integer cUu
    set DSw[ASw] = SUu
    set ASw = ASw + 1
    set EL = "Sanctum"
    set ZL = "Stage: 0/?"
    set UL = "0"
    set IL = "VoidPsy\n"
    set PL = "00:00/15:00"
    set AL = "<mechanic>"
    set DL = BlzCreateFrameByType("TEXT", "tt_dungeonName", BlzGetFrameByName("ConsoleUIBackdrop", $00000000), "", $00000000)
    set HL = BlzCreateFrameByType("TEXT", "tt_dungeonStageTime", DL, "", $00000000)
    set JL = BlzCreateFrameByType("TEXT", "tt_psynergyLeft", DL, "", $00000000)
    set KL = BlzCreateFrameByType("TEXT", "tt_Mechanic", DL, "", $00000000)
    set LL = BlzCreateFrameByType("TEXT", "tt_Stage", DL, "", $00000000)
    set XL = BlzCreateFrameByType("TEXT", "tt_Mode", DL, "", $00000000)
    set cUu = WYu("when calling alloc_CallbackSingle_nullTimer_Voidless_infotags in Voidless_infotags, line 135")
    call RUs(cUu)
    call ccr(cUu, "when calling nullTimer in Voidless_infotags, line 135")
    set ASw = ASw - 1
    return true
endfunction
function uDr takes nothing returns boolean
    set ASw = 0
    return oUu("via function reference Voidless_infotags, line 1")
endfunction
function uEu takes nothing returns nothing
    call ForceAddPlayer(ii, GetOwningPlayer(GetKillingUnit()))
    call QuestSetDescription(st[1 + GetPlayerId(GetOwningPlayer(GetKillingUnit()))], "I should get back to Horazon and tell him I have completed the deed.")
    call QuestMessageBJ(MwS(GetOwningPlayer(GetKillingUnit())), $00000002, "|cffffcc00I have killed the Mistress of the Tides|r.")
endfunction
function uFt takes nothing returns boolean
    set HH = " and "
    return true
endfunction
function uLr takes nothing returns boolean
    return IsUnitType(GetFilterUnit(), UNIT_TYPE_HERO) != false and GetPlayerController(GetOwningPlayer(GetFilterUnit())) == MAP_CONTROL_USER
endfunction
function UlS takes nothing returns boolean
    return IsUnitInGroup(GetTriggerUnit(), mo) == false
endfunction
function uLt takes nothing returns nothing
    local location wLt = GetUnitLoc(GetTriggerUnit())
    call GroupAddUnit(YO, GetTriggerUnit())
    set hu[GetPlayerId(GetOwningPlayer(GetTriggerUnit()))] = true
    set Js[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))] = GetTriggerUnit()
    set Ks[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))] = GetSpellTargetUnit()
    call PauseUnit(Js[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))], true)
    call PauseUnit(Ks[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))], true)
    call SetUnitInvulnerable(Js[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))], true)
    call SetUnitInvulnerable(Ks[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))], true)
    set bj_forLoopBIndex = 1
    set bj_forLoopBIndexEnd = 3
    loop
        exitwhen bj_forLoopBIndex > bj_forLoopBIndexEnd
        call SetUnitVertexColorBJ(Js[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))], 100., 100., 100., 100.)
        call n6t(.2)
        call SetUnitPositionLocFacingLocBJ(Js[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))], GetRandomLocInRect(RectFromCenterSizeBJ(GetUnitLoc(Ks[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))]), 60., 60.)), GetUnitLoc(Ks[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))]))
        call n6t(.2)
        call SetUnitVertexColorBJ(Js[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))], 100., 100., 100., .0)
        call n6t(.2)
        set bj_forLoopBIndex = bj_forLoopBIndex + 1
    endloop
    call SetUnitAnimation(Js[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))], "attack")
    call n6t(.2)
    if UlS() then
        call PauseUnit(Js[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))], false)
    endif
    call PauseUnit(Ks[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))], false)
    call GroupRemoveUnit(YO, GetTriggerUnit())
    call SetUnitInvulnerable(Js[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))], false)
    call SetUnitInvulnerable(Ks[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))], false)
    call SetUnitPositionLoc(GetTriggerUnit(), wLt)
    call RemoveLocation(wLt)
    set wLt = null
    set ri = I2R(GetHeroStatBJ($00000001, Js[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))], true)) * 2. * I2R(GetUnitAbilityLevelSwapped(GetSpellAbilityId(), Js[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))]))
    if ri > pw then
        set ri = pw
    endif
    call UnitDamageTargetBJ(Js[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))], Ks[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))], ri, ATTACK_TYPE_CHAOS, DAMAGE_TYPE_UNIVERSAL)
    set hu[GetPlayerId(GetOwningPlayer(GetTriggerUnit()))] = false
    set wLt = null
endfunction
function uNw takes nothing returns nothing
    call ForceAddPlayer(Ft, GetOwningPlayer(GetKillingUnit()))
    call QuestSetDescription(st[1 + GetPlayerId(GetOwningPlayer(GetKillingUnit()))], "I should get back to Luna and tell her I have killed the Abominable Hydra.")
    call QuestMessageBJ(MwS(GetOwningPlayer(GetKillingUnit())), $00000002, "|cffffcc00I have killed the Leviathan. Now to return to Luna|r.")
endfunction
function uPr takes nothing returns boolean
    return GetOrderTargetUnit() == tG and IsUnitInGroup(GetTriggerUnit(), kpu(300., GetUnitLoc(GetOrderTargetUnit())))
endfunction
function uRS takes nothing returns boolean
    set NQ = InitHashtable()
    set MQ = InitHashtable()
    return true
endfunction
function uUu takes nothing returns nothing
    call RemoveUnit(GetEnumUnit())
endfunction
function uVt takes nothing returns boolean
    return ur[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))] >= 5 and GetUnitTypeId(GetOrderTargetUnit()) == sr and IsUnitInGroup(GetTriggerUnit(), kpu(300., GetUnitLoc(GetOrderTargetUnit())))
endfunction
function ubS takes nothing returns nothing
    set ASw = 0
    call Rqu("via function reference JobAdvancementQuestHandler, line 1208")
endfunction
function ECt takes nothing returns boolean
    return UnitHasItemOfTypeBJ(GetTriggerUnit(), $49303131)
endfunction
function N7t takes nothing returns boolean
    return UnitHasItemOfTypeBJ(GetTriggerUnit(), $49303132)
endfunction
function uci takes nothing returns nothing
    if N7t() then
        call ForceRemovePlayer(Kr, GetOwningPlayer(GetTriggerUnit()))
        call ForceRemovePlayer(Cr, GetOwningPlayer(GetTriggerUnit()))
        call ForceRemovePlayer(as, GetOwningPlayer(GetTriggerUnit()))
        call ForceRemovePlayer(Vr, GetOwningPlayer(GetTriggerUnit()))
        call PlaySoundBJ(ue)
        call SetHeroLevelBJ(GetTriggerUnit(), $00000001, true)
        call RemoveItem(GetItemOfTypeFromUnitBJ(GetTriggerUnit(), $49303132))
        call DisplayTextToForce(MwS(GetOwningPlayer(GetTriggerUnit())), "|cffffcc00Class Trainer|r : |cff87ceebSinclaire has never given a letter of recommendation to anyone for a very long time now...I believe she must think that you are truly worthy. Welcome, Dark Templar.")
        call ReplaceUnitBJ(GetTriggerUnit(), $48303143, $00000002)
        call SelectUnitForPlayerSingle(bj_lastReplacedUnit, GetOwningPlayer(GetTriggerUnit()))
        call DestroyQuest(Lr[1 + GetPlayerId(GetOwningPlayer(bj_lastReplacedUnit))])
        call SetHeroLevel(bj_lastReplacedUnit, $00000001, true)
        call UnitStripHeroLevel(bj_lastReplacedUnit, $00000001)
    endif
    if ECt() then
        call ForceRemovePlayer(Kr, GetOwningPlayer(GetTriggerUnit()))
        call ForceRemovePlayer(Cr, GetOwningPlayer(GetTriggerUnit()))
        call ForceRemovePlayer(ns, GetOwningPlayer(GetTriggerUnit()))
        call ForceRemovePlayer(Vr, GetOwningPlayer(GetTriggerUnit()))
        call PlaySoundBJ(ue)
        call SetHeroLevelBJ(GetTriggerUnit(), $00000001, false)
        call RemoveItem(GetItemOfTypeFromUnitBJ(GetTriggerUnit(), $49303131))
        call DisplayTextToForce(MwS(GetOwningPlayer(GetTriggerUnit())), "|cffffcc00Class Trainer|r : |cff87ceebOh my...You have Eva's recommendation? Very nicely done! Eva has been known to hold nothing back whenever handing a fellow Templar a task. I believe that an advancement is in order...")
        call ReplaceUnitBJ(GetTriggerUnit(), $48303144, $00000002)
        call SelectUnitForPlayerSingle(bj_lastReplacedUnit, GetOwningPlayer(GetTriggerUnit()))
        call DestroyQuest(Lr[1 + GetPlayerId(GetOwningPlayer(bj_lastReplacedUnit))])
        call SetHeroLevel(bj_lastReplacedUnit, $00000001, true)
        call UnitStripHeroLevel(bj_lastReplacedUnit, $00000001)
    endif
endfunction
function DCw takes string PCw returns integer
    local integer ACw
    set DSw[ASw] = PCw
    set ASw = ASw + 1
    if NX == 0 then
        if MX < 32768 then
            set MX = MX + 1
            set ACw = MX
            set wC[ACw] = 935
        else
            call tNr("Out of memory: Could not create CallbackSingle_doAfter_Reforged_Init.", "when calling error in Reforged_Init, line 59")
            set ACw = 0
        endif
    else
        set NX = NX - 1
        set ACw = BX[NX]
        set wC[ACw] = 935
    endif
    set ASw = ASw - 1
    return ACw
endfunction
function FLr takes string gLr returns integer
    local integer hLr
    set DSw[ASw] = gLr
    set ASw = ASw + 1
    if NX == 0 then
        if MX < 32768 then
            set MX = MX + 1
            set hLr = MX
            set wC[hLr] = 936
        else
            call tNr("Out of memory: Could not create CallbackSingle_doAfter_Reforged_Init.", "when calling error in Reforged_Init, line 64")
            set hLr = 0
        endif
    else
        set NX = NX - 1
        set hLr = BX[NX]
        set wC[hLr] = 936
    endif
    set ASw = ASw - 1
    return hLr
endfunction
function Ths takes string dhs returns boolean
    local integer fhs
    local integer Rhs
    set DSw[ASw] = dhs
    set ASw = ASw + 1
    set CD = "#"
    set VD = CreateTrigger()
    set fhs = DCw("when calling alloc_CallbackSingle_doAfter_Reforged_Init in Reforged_Init, line 59")
    call RUs(fhs)
    call Ybr(0., fhs, "when calling doAfter in Reforged_Init, line 59")
    set Rhs = FLr("when calling alloc_CallbackSingle_doAfter_Reforged_Init in Reforged_Init, line 64")
    call RUs(Rhs)
    call Ybr(0.1, Rhs, "when calling doAfter in Reforged_Init, line 64")
    set ASw = ASw - 1
    return true
endfunction
function ukr takes nothing returns boolean
    set ASw = 0
    return Ths("via function reference Reforged_Init, line 1")
endfunction
function odr takes nothing returns boolean
    return IsPlayerInForce(GetOwningPlayer(GetEnumUnit()), wO)
endfunction
function uls takes nothing returns nothing
    if odr() then
        set lw[GetPlayerId(GetOwningPlayer(GetEnumUnit()))] = 1227896116
        call TriggerExecute(Ow)
        call ForceRemovePlayer(wO, GetOwningPlayer(GetEnumUnit()))
        call DisplayTimedTextToForce(MwS(GetOwningPlayer(GetEnumUnit())), 8., "|cffffcc00I've defeated the legendary Flying Wish Fish and caught it as a result!|r")
        call QuestSetDescription(Ao[1 + GetPlayerId(GetOwningPlayer(GetEnumUnit()))], "|cffff0000Fishing Profession Advancement Quest|r\n|cff00ff00Legend|r\nI've finally defeated and caught the legendary Flying Wish Fish! Time to report back to Fisherman's Friend to get my promotion.")
    else
        set lw[GetPlayerId(GetOwningPlayer(GetEnumUnit()))] = 1227896116
        call TriggerExecute(Ow)
        call DisplayTimedTextToForce(MwS(GetOwningPlayer(GetEnumUnit())), 8., "|cffffcc00I've defeated the legendary Flying Wish Fish and caught it as a result!|r")
    endif
endfunction
function ulu takes nothing returns boolean
    local trigger BOu = CreateTrigger()
    local trigger NOu
    local trigger MOu
    local trigger wlu
    call l2w(BOu, EVENT_PLAYER_HERO_LEVEL)
    set NOu = BOu
    call QYr(NOu, sF, null)
    set MOu = NOu
    call dUs(MOu, Condition(dmw))
    set wlu = MOu
    call B2S(wlu, fmw)
    set BOu = null
    set NOu = null
    set MOu = null
    set wlu = null
    return true
endfunction
function unr takes nothing returns nothing
    call ForForce(Rc[$0000000A], rbw)
    set Ni = 10
    set Mi = 8
    call ForForce(Rc[$0000000A], flw)
    call DisplayTimedTextToForce(Rc[$0000000A], 10., "|cffffcc00You have completed the dungeon!|r Type -|c00ff0000d|r|c00ff1500o|r|c00ff3000n|r|c00ff4500e|r to exit the dungeon after looting your reward.")
    call DisplayTimedTextToForce(Rc[$0000000A], 10., "|cffffcc00Type|r |c00ff0000-s2s X|r|cffffcc00 to send an item to your stash. (1-6)|r")
    call PolledWait(S)
    set pr[$00000001] = 1227895635
    set pr[$00000002] = 1227895606
    set pr[$00000003] = 1227895638
    set pr[$00000004] = 1227895636
    set pr[$00000005] = 1227895641
    set pr[$00000006] = 1227895640
    set pr[$00000007] = 1227895639
    set pr[$00000008] = 1227895642
    set Ni = 10
    set Mi = 8
    call ForForce(Rc[$0000000A], sbw)
    call ForGroupBJ(fc[$0000000A], tbw)
    call TriggerExecute(cw)
    call GroupClear(fc[$0000000A])
    call ForceClear(Rc[$0000000A])
    call DisableTrigger(GetTriggeringTrigger())
endfunction
function unu takes nothing returns nothing
    call ForForce(bj_FORCE_ALL_PLAYERS, Slw)
endfunction
function WGu takes integer xGu, integer vGu, string mGu returns unit
    local unit QGu
    if vGu < 0 or vGu >= 6 then
        call tNr("Index out of Bounds", mGu)
    elseif vGu <= 2 then
        if vGu <= 1 then
            if vGu <= 0 then
    set QGu = YOw[xGu]
            else
    set QGu = GOw[xGu]
            endif
        else
            set QGu = gOw[xGu]
        endif
    elseif vGu <= 4 then
        if vGu <= 3 then
            set QGu = hOw[xGu]
        else
            set QGu = FOw[xGu]
        endif
    else
        set QGu = kOw[xGu]
    endif
    set wPw = QGu
    set QGu = null
    return wPw
endfunction
function GBi takes integer TBi, string YBi returns unit
    set DSw[ASw] = YBi
    set ASw = ASw + 1
    if D3[TBi] > 0 then
        set D3[TBi] = D3[TBi] - 1
        set P3[TBi] = ModuloInteger(P3[TBi] + 1, ix)
        set ASw = ASw - 1
        return WGu(TBi, P3[TBi], "when reading array ArrayQueue_units in  in DummyRecycler, line 79")
    else
        call tNr("Queue empty", "when calling error in DummyRecycler, line 81")
        set ASw = ASw - 1
        return null
    endif
endfunction
function ult takes integer NOt, string MOt returns unit
    local unit wlt
    set DSw[ASw] = MOt
    set ASw = ASw + 1
    if UV[NOt] == 0 then
        if NOt == 0 then
            call tNr("Nullpointer exception when calling ArrayQueue.dequeue", "when calling error in DummyRecycler, line 75")
        else
            call tNr("Called ArrayQueue.dequeue on invalid object.", "when calling error in DummyRecycler, line 75")
        endif
    endif
    set wlt = GBi(NOt, "when calling dequeue in DummyRecycler, line 75")
    set ASw = ASw - 1
    set iPw = wlt
    set wlt = null
    return iPw
endfunction
function qCu takes real SCu, real cCu, real oCu, string OCu returns unit
    local integer lCu
    local unit bCu
    local unit yCu
    local unit pCu
    local unit eCu
    set DSw[ASw] = OCu
    set ASw = ASw + 1
    set lCu = P3w(P3w(ModuloReal(Nbs(oCu), 360.)) / tx)
    if D3[ox[lCu]] > 0 then
        set bCu = ult(ox[lCu], "when calling dequeue in DummyRecycler, line 39")
        call grS(bCu, SCu, cCu)
        set yCu = bCu
        call qaS(yCu)
        set eCu = yCu
        set ASw = ASw - 1
        set cPw = eCu
        set bCu = null
        set yCu = null
        set pCu = null
        set eCu = null
        return cPw
    else
        set pCu = dqS(SCu, cCu, mg, oCu)
        set ASw = ASw - 1
        set oPw = pCu
        set bCu = null
        set yCu = null
        set pCu = null
        set eCu = null
        return oPw
    endif
endfunction
function tkr takes real rkr, real skr returns boolean
    return rkr > HP and rkr < KP and skr > JP and skr < LP
endfunction
function soS takes real uoS, real roS returns boolean
    return tkr(uoS, roS)
endfunction
function Sau takes integer Mqu, integer wau, integer uau, string rau returns unit
    local unit sau
    local unit tau
    local unit iau
    set DSw[ASw] = rau
    set ASw = ASw + 1
    set sau = qCu(Q3[Mqu], W3[Mqu], 0., "when calling get in DummyCaster, line 78")
    if soS(Q3[Mqu], W3[Mqu]) then
        call grS(sau, Q3[Mqu], W3[Mqu])
    endif
    set tau = sau
    call V5S(tau, wau)
    set iau = tau
    call b9i(iau, 1000000.)
    if uau > 1 then
        call Fci(sau, wau, uau)
    endif
    call g9u(sau, E3[Mqu], false)
    set ASw = ASw - 1
    set nIw = sau
    set sau = null
    set tau = null
    set iau = null
    return nIw
endfunction
function sir takes integer Ntr, integer Mtr, integer wir, string uir returns unit
    local unit rir
    set DSw[ASw] = uir
    set ASw = ASw + 1
    if QV[Ntr] == 0 then
        if Ntr == 0 then
            call tNr("Nullpointer exception when calling DummyCaster.prepare", "when calling error in DummyCaster, line 77")
        else
            call tNr("Called DummyCaster.prepare on invalid object.", "when calling error in DummyCaster, line 77")
        endif
    endif
    set rir = Sau(Ntr, Mtr, wir, "when calling prepare in DummyCaster, line 77")
    set ASw = ASw - 1
    set IIw = rir
    set rir = null
    return IIw
endfunction
function iGt takes string sGt returns integer
    local integer tGt
    set DSw[ASw] = sGt
    set ASw = ASw + 1
    if NX == 0 then
        if MX < 32768 then
            set MX = MX + 1
            set tGt = MX
            set wC[tGt] = 735
        else
            call tNr("Out of memory: Could not create CallbackSingle_doAfter_DummyCaster_DummyCaster.", "when calling error in DummyCaster, line 89")
            set tGt = 0
        endif
    else
        set NX = NX - 1
        set tGt = BX[NX]
        set wC[tGt] = 735
    endif
    set ASw = ASw - 1
    return tGt
endfunction
function O9r takes integer s9r, unit t9r, integer i9r, string S9r returns nothing
    local integer c9r
    local real o9r
    set DSw[ASw] = S9r
    set ASw = ASw + 1
    set m3[s9r] = m3[s9r] + 1
    set o9r = v3[s9r]
    set c9r = iGt("when calling alloc_CallbackSingle_doAfter_DummyCaster_DummyCaster in DummyCaster, line 89")
    call RUs(c9r)
    set Z3[c9r] = t9r
    set U3[c9r] = i9r
    set I3[c9r] = s9r
    call Ybr(o9r, c9r, "when calling doAfter in DummyCaster, line 89")
    set ASw = ASw - 1
endfunction
function yfu takes integer ofu, unit Ofu, integer lfu, string bfu returns nothing
    set DSw[ASw] = bfu
    set ASw = ASw + 1
    if QV[ofu] == 0 then
        if ofu == 0 then
            call tNr("Nullpointer exception when calling DummyCaster.finish", "when calling error in DummyCaster, line 87")
        else
            call tNr("Called DummyCaster.finish on invalid object.", "when calling error in DummyCaster, line 87")
        endif
    endif
    call O9r(ofu, Ofu, lfu, "when calling finish in DummyCaster, line 87")
    set ASw = ASw - 1
endfunction
function Wes takes integer ges, integer hes, integer Fes, integer kes, real jes, real xes, string ves returns unit
    local unit mes
    local boolean Qes
    set DSw[ASw] = ves
    set ASw = ASw + 1
    set mes = sir(ges, hes, Fes, "when calling prepare in DummyCaster, line 69")
    call hVu(mes, k5r(ANw(mes), XSw, jes, xes))
    set Qes = Yrr(mes, kes, jes, xes)
    call yfu(ges, mes, hes, "when calling finish in DummyCaster, line 72")
    if not Qes then
        set mes = null
    endif
    set ASw = ASw - 1
    set VIw = mes
    set mes = null
    return VIw
endfunction
function Bci takes integer Dci, integer Hci, integer Jci, integer Kci, real Lci, real Xci, string Cci returns unit
    local unit Vci
    set DSw[ASw] = Cci
    set ASw = ASw + 1
    if QV[Dci] == 0 then
        if Dci == 0 then
            call tNr("Nullpointer exception when calling DummyCaster.castPoint", "when calling error in DummyCaster, line 68")
        else
            call tNr("Called DummyCaster.castPoint on invalid object.", "when calling error in DummyCaster, line 68")
        endif
    endif
    set Vci = Wes(Dci, Hci, Jci, Kci, Lci, Xci, "when calling castPoint in DummyCaster, line 68")
    set ASw = ASw - 1
    set AIw = Vci
    set Vci = null
    return AIw
endfunction
function Xcr takes integer Kcr, real Lcr returns nothing
    set v3[Kcr] = Lcr
endfunction
function Ewt takes integer mwt, real Qwt, string Wwt returns nothing
    set DSw[ASw] = Wwt
    set ASw = ASw + 1
    if QV[mwt] == 0 then
        if mwt == 0 then
            call tNr("Nullpointer exception when calling DummyCaster.delay", "when calling error in DummyCaster, line 45")
        else
            call tNr("Called DummyCaster.delay on invalid object.", "when calling error in DummyCaster, line 45")
        endif
    endif
    call Xcr(mwt, Qwt)
    set ASw = ASw - 1
endfunction
function FVi takes string gVi returns integer
    local integer hVi
    set DSw[ASw] = gVi
    set ASw = ASw + 1
    if NX == 0 then
        if MX < 32768 then
            set MX = MX + 1
            set hVi = MX
            set wC[hVi] = 772
        else
            call tNr("Out of memory: Could not create CallbackSingle_doAfter_Faith_Effect.", "when calling error in Faith_Effect, line 57")
            set hVi = 0
        endif
    else
        set NX = NX - 1
        set hVi = BX[NX]
        set wC[hVi] = 772
    endif
    set ASw = ASw - 1
    return hVi
endfunction
function uZt takes integer MEt, player wZt returns nothing
    set E3[MEt] = wZt
endfunction
function G9t takes integer R9t, player T9t, string Y9t returns nothing
    set DSw[ASw] = Y9t
    set ASw = ASw + 1
    if QV[R9t] == 0 then
        if R9t == 0 then
            call tNr("Nullpointer exception when calling DummyCaster.owner", "when calling error in DummyCaster, line 40")
        else
            call tNr("Called DummyCaster.owner on invalid object.", "when calling error in DummyCaster, line 40")
        endif
    endif
    call uZt(R9t, T9t)
    set ASw = ASw - 1
endfunction
function Msr takes string Bsr returns integer
    local integer Nsr
    set DSw[ASw] = Bsr
    set ASw = ASw + 1
    if vV == 0 then
        if mV < 32768 then
            set mV = mV + 1
            set Nsr = mV
            set QV[Nsr] = 1127
        else
            call tNr("Out of memory: Could not create DummyCaster.", "when calling error in DummyCaster, line 28")
            set Nsr = 0
        endif
    else
        set vV = vV - 1
        set Nsr = xV[vV]
        set QV[Nsr] = 1127
    endif
    set ASw = ASw - 1
    return Nsr
endfunction
function RBi takes integer nBi returns nothing
    local real dBi
    local real fBi
    set v3[nBi] = 5.0
    set m3[nBi] = 0
    set dBi = LJ
    set fBi = XJ
    set Q3[nBi] = dBi
    set W3[nBi] = fBi
    set E3[nBi] = mg
endfunction
function bts takes integer lts returns nothing
    call RBi(lts)
endfunction
function T9r takes string f9r returns integer
    local integer R9r
    set DSw[ASw] = f9r
    set ASw = ASw + 1
    set R9r = Msr("when calling alloc_DummyCaster in DummyCaster, line 34")
    call bts(R9r)
    set ASw = ASw - 1
    return R9r
endfunction
function U2s takes integer m2s, real Q2s, real W2s returns nothing
    local real E2s = Q2s
    local real Z2s = W2s
    set Q3[m2s] = E2s
    set W3[m2s] = Z2s
endfunction
function ixu takes integer uxu, real rxu, real sxu, string txu returns nothing
    set DSw[ASw] = txu
    set ASw = ASw + 1
    if QV[uxu] == 0 then
        if uxu == 0 then
            call tNr("Nullpointer exception when calling DummyCaster.origin", "when calling error in DummyCaster, line 36")
        else
            call tNr("Called DummyCaster.origin on invalid object.", "when calling error in DummyCaster, line 36")
        endif
    endif
    call U2s(uxu, rxu, sxu)
    set ASw = ASw - 1
endfunction
function Aui takes string eui returns nothing
    local unit qui
    local unit aui
    local player nui
    local integer dui
    local real fui
    local real Rui
    local real Tui
    local real Yui
    local real Gui
    local group gui
    local integer hui
    local integer Fui
    local integer kui
    local integer jui
    local integer xui
    local integer vui
    local real mui
    local group Qui
    local unit Wui
    local real Eui
    local real Zui
    local real Uui
    local real Iui
    local real Pui
    set DSw[ASw] = eui
    set ASw = ASw + 1
    set qui = GetEventDamageSource()
    set aui = GetTriggerUnit()
    if qui != null and YNr() then
        set nui = eDs(qui)
        set dui = hgr(nui)
        if not Jyr(Ev, dui, "when calling has in Faith_Effect, line 36") then
            call GVw(Ev, dui, O_i(true), "when calling put in Faith_Effect, line 37")
        endif
        if not Jyr(Zv, dui, "when calling has in Faith_Effect, line 39") then
            call GVw(Zv, dui, $00000000, "when calling put in Faith_Effect, line 40")
        endif
        if GetRandomInt($00000001, $00000064) <= Uv + wps(Zv, dui, "when calling get in Faith_Effect, line 42") then
            if qui != null and aui != null then
    if GpS(gQ, hgr(eDs(qui)), "when calling has in Faith_Effect, line 49") and aui != null and R9s(qui, aui) and qui != aui then
                    if TYt(wps(Ev, dui, "when calling get in Faith_Effect, line 50")) then
                        call GVw(Zv, dui, $00000000, "when calling put in Faith_Effect, line 51")
                        call GVw(Ev, dui, O_i(false), "when calling put in Faith_Effect, line 52")
                        set Zui = ANw(aui)
                        set Uui = XSw
                        set fui = Zui
                        set Rui = Uui
                        set Iui = ANw(qui)
                        set Pui = XSw
                        set Tui = Iui
                        set Yui = Pui
                        set Gui = GetRandomReal(3., 5.)
                        call UOS($00000001, "when calling getGroup in Faith_Effect, line 56")
                        set gui = pIw
                        set Eui = Gui
                        set hui = FVi("when calling alloc_CallbackSingle_doAfter_Faith_Effect in Faith_Effect, line 57")
                        call RUs(hui)
                        set U4[hui] = dui
                        call Ybr(Eui, hui, "when calling doAfter in Faith_Effect, line 57")
                        call GroupAddGroupEnum()
                        call GroupEnumUnitsInRange(gui, fui, Rui, Pv, null)
                        set Fui = T9r("when calling new_DummyCaster in Faith_Effect, line 62")
                        call ixu(Fui, Tui, Yui, "when calling origin in Faith_Effect, line 63")
                        set kui = Fui
                        call G9t(kui, nui, "when calling owner in Faith_Effect, line 64")
                        set jui = kui
                        call Ewt(jui, 3., "when calling delay in Faith_Effect, line 65")
                        set xui = jui
                        call Bci(xui, Av, $00000001, rD, fui, Rui, "when calling castPoint in Faith_Effect, line 66")
                        set vui = bQs(NNs(Tui, Yui, qui), Acw, Dcw, .03, .09, "|cffff0000Rain of Arrows!|r", 12., 2., $00000064, $00000064, $00000064, $00000000, null, "when calling _CreateTTExEntity_fading in Faith_Effect, line 68")
                        if not HEi(dui, hgr(nD), "when calling ifDisplayEffectProcs in Faith_Effect, line 69") then
                            call jRu(vui, false)
                        endif
                        set mui = Iv * I2R(GetHeroAgi(qui, true))
                        set Qui = XbS(gui)
                        loop
                            exitwhen not hJw(Qui)
                            set Wui = tPr(Qui)
                            if PGi(Wui, nui) and(not fRi(Wui)) then
                                if G0S(Wui) then
                                    set mui = mui * 5.
                                endif
                                call hMs(Wui, qui, 1., mui / 10., $00000000, $00000000, "when calling apply_DOT_Timed in Faith_Effect, line 77")
                            endif
                        endloop
                        call lxs(Qui)
                        call Sju(gui, "when calling release in Faith_Effect, line 78")
                    endif
    elseif wps(Zv, dui, "when calling get in Faith_Effect, line 79") < 80 then
                    call GVw(Zv, dui, wps(Zv, dui, "when calling get in Faith_Effect, line 80") + 10, "when calling put in Faith_Effect, line 80")
    endif
            endif
        endif
    endif
    set ASw = ASw - 1
    set qui = null
    set aui = null
    set nui = null
    set gui = null
    set Qui = null
    set Wui = null
endfunction
function ups takes nothing returns nothing
    set ASw = 0
    call Aui("via function reference Faith_Effect, line 84")
endfunction
function uru takes nothing returns boolean
    return IsPlayerInForce(GetTriggerPlayer(), ic) == false
endfunction
function uvi takes nothing returns nothing
    call IssueImmediateOrderById(GetAttacker(), $000D0004)
endfunction
function eTt takes nothing returns boolean
    return UnitInventoryCount(GetTriggerUnit()) != 6
endfunction
function uxr takes nothing returns nothing
    if eTt() then
        call PlaySoundBJ(ce)
        set lw[GetPlayerId(GetOwningPlayer(GetTriggerUnit()))] = 1227895096
        call TriggerExecute(ow)
        call DisplayTextToForce(MwS(GetOwningPlayer(GetTriggerUnit())), "|cffffcc00Firzen|r : |cff87ceebNot bad. It was an easy task, but I am a man of my word. Take this, but don't expect to become great just because you're a shapeshifter. You must be one with your form to truly shine.")
        call QuestSetDescription(Lr[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))], "I have it! I have the recommendation! Now to get back to my Class Trainer...")
    else
        call PlaySoundBJ(oe)
        call DisplayTimedTextToForce(MwS(GetOwningPlayer(GetTriggerUnit())), 7., "|cffff0000Inventory full! Cannot receive recommendation!|r")
    endif
endfunction
function v2s takes nothing returns nothing
    call ForceRemovePlayer(mt, GetTriggerPlayer())
    call ForceRemovePlayer(At, GetTriggerPlayer())
    call ForceRemovePlayer(At, vt[1 + GetPlayerId(GetTriggerPlayer())])
    call DisplayTimedTextToForce(MwS(GetTriggerPlayer()), 5., "|cffffcc00You have declined the duel challenge.|r")
    call DisplayTimedTextToForce(MwS(vt[1 + GetPlayerId(GetTriggerPlayer())]), 10., "|cffffcc00" + GetPlayerName(GetTriggerPlayer()) + "|r has declined your challenge.")
endfunction
function v4r takes nothing returns boolean
    return GetUnitTypeId(GetDyingUnit()) == 1848652089 and UnitHasItemOfTypeBJ(GetKillingUnit(), $49303132) == false and IsPlayerInForce(GetOwningPlayer(GetKillingUnit()), as)
endfunction
function vAr takes nothing returns boolean
    return IsUnitType(GetFilterUnit(), UNIT_TYPE_HERO) != false
endfunction
function vAw takes nothing returns nothing
    call RemoveItem(GetManipulatedItem())
    call ForceAddPlayer(IS[$00000006], GetOwningPlayer(GetTriggerUnit()))
    call DisplayTextToForce(MwS(GetOwningPlayer(GetTriggerUnit())), "|cffffcc00Skypper|r : Ah! This...sensitive contract. A shame, I knew the man's daughter; she was a good lass. Tell you what, if you successfully kill Stitches and bring me back his hook, I'll throw you in a little bonus, apart from the already enormous sum of money that is offered.")
    call T_i(GetOwningPlayer(GetTriggerUnit()), $00000000, "The Enemy of my Enemy", "Kill Stitches and bring back his hook.", "ReplaceableTextures\\CommandButtons\\BTNAbomination.blp")
    set Os[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))] = bj_lastCreatedQuest
endfunction
function vGt takes nothing returns nothing
    set GQ = GQ + jg
endfunction
function vHs takes nothing returns boolean
    return GetUnitTypeId(GetOrderTargetUnit()) == ct and IsUnitInGroup(GetTriggerUnit(), kpu(300., GetUnitLoc(GetOrderTargetUnit()))) and IsPlayerInForce(GetOwningPlayer(GetTriggerUnit()), pc[$00000005])
endfunction
function vHu takes nothing returns boolean
    return GetUnitTypeId(GetDyingUnit()) == 1429221424 and IsPlayerInForce(GetOwningPlayer(GetKillingUnit()), IS[$00000007])
endfunction
function Sri takes string tri returns boolean
    local boolean iri
    set DSw[ASw] = tri
    set ASw = ASw + 1
    set iri = GpS(tP, r5S(GetDyingUnit()), "when calling has in JobAdvancementQuestHandler, line 64")
    set ASw = ASw - 1
    return iri
endfunction
function vJt takes nothing returns boolean
    set ASw = 0
    return Sri("via function reference JobAdvancementQuestHandler, line 1181")
endfunction
function vLw takes nothing returns nothing
    call SetUnitPositionLoc(GetEnumUnit(), br[1 + GetPlayerId(GetOwningPlayer(GetEnumUnit()))])
endfunction
function iyS takes nothing returns boolean
    return GetUnitTypeId(GetEnumUnit()) == 1429221431
endfunction
function vOS takes nothing returns nothing
    if iyS() then
        call SetUnitInvulnerable(GetEnumUnit(), false)
        call DisableTrigger(GetTriggeringTrigger())
        call EnableTrigger(XY)
    endif
endfunction
function uMu takes nothing returns boolean
    return GetUnitAbilityLevelSwapped($41303158, GetTriggerUnit()) == 30 and GetUnitAbilityLevelSwapped($4130315A, GetTriggerUnit()) == 30
endfunction
function vSu takes nothing returns nothing
    if uMu() then
        call ForceAddPlayer(ns, GetOwningPlayer(GetTriggerUnit()))
        call ForceAddPlayer(Cr, GetOwningPlayer(GetTriggerUnit()))
        call DisplayTextToForce(MwS(GetOwningPlayer(GetTriggerUnit())), "|cffffcc00Eva of the High Council|r : |cff87ceebI can feel your psionic powers, fellow Templar. Now is the time to put them to the test. Kill 20 of the Lizardmen here and you shall receive my recommendation.")
        call QuestSetDescription(Lr[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))], "I need to kill 20 Lizardmen.")
    else
        call DisplayTextToForce(MwS(GetOwningPlayer(GetTriggerUnit())), "|cffffcc00Eva of the High Council|r : |cffff0000No, you are not ready yet, fellow Templar. You need to master all of your Psionic Arts first before returning to me.")
    endif
endfunction
function vas takes nothing returns boolean
    local trigger kas = CreateTrigger()
    local trigger jas
    local trigger xas
    call l2w(kas, EVENT_PLAYER_UNIT_DEATH)
    set jas = kas
    call dUs(jas, Condition(Wmw))
    set xas = jas
    call B2S(xas, Emw)
    set kas = null
    set jas = null
    set xas = null
    return true
endfunction
function vcu takes nothing returns nothing
    call DisableTrigger(GetTriggeringTrigger())
    set ei = GetSpellTargetUnit()
    call AddSpecialEffectTargetUnitBJ("overhead", ei, "Abilities\\Spells\\Items\\AIil\\AIilTarget.mdl")
    call DestroyEffect(bj_lastCreatedEffect)
    call UnitRemoveAbility(ei, pi)
    set pi = GetSpellAbilityId()
    set qi = GetUnitAbilityLevelSwapped(GetSpellAbilityId(), GetTriggerUnit())
    call UnitAddAbility(ei, pi)
    call SetUnitAbilityLevelSwapped(pi, ei, qi)
    call n6t(30.)
    call EnableTrigger(GetTriggeringTrigger())
endfunction
function vdi takes nothing returns nothing
    call CameraSetEQNoiseForPlayer(GetEnumPlayer(), 13.)
endfunction
function vli takes nothing returns boolean
    return (GetUnitTypeId(GetOrderTargetUnit()) == sr and IsUnitType(GetTriggerUnit(), UNIT_TYPE_HERO) and IsUnitInGroup(GetTriggerUnit(), kpu(300., GetUnitLoc(GetOrderTargetUnit()))) and IsPlayerInForce(GetOwningPlayer(GetTriggerUnit()), Uo[$00000001]) and IsPlayerInForce(GetOwningPlayer(GetTriggerUnit()), Uo[$00000002]) == false and Zo[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))] == 0) != false
endfunction
function vpr takes nothing returns boolean
    return IsUnitType(GetFilterUnit(), UNIT_TYPE_HERO) != false
endfunction
function vrt takes nothing returns nothing
    call ForceAddPlayer(Kr, GetOwningPlayer(GetTriggerUnit()))
    call DisplayTextToForce(MwS(GetOwningPlayer(GetTriggerUnit())), "|cffffcc00Class Trainer|r : |cff87ceebSo we meet again, fellow Templar. I am afraid I cannot advance you unless I receive a letter of recommendation from some of our Masters. But now is the time to choose, young one. Will you follow the path of the light and become a powerful spellcasting High Templar? Eva is waiting for you in the marshlands. Or will you follow the path of darkness and become a double Warp blader; a Dark Templar? Sinclaire is meditating in the dark grove north of here. Your decision will change you forever and you will draw upon the psionic powers of the light or dark based on it. Choose well.")
    call PlaySoundBJ(Se)
    call T_i(GetOwningPlayer(GetTriggerUnit()), $00000000, "3rd Job Advancement Quest", "I need to choose - the path of the High Templar or the path of the Dark Templar. I must max out my skills in the Warp Blade arts if I wish to go for the path of the Dark Templar. I must max out my skills in the Psionic Arts if I choose to go for the path of the High Templar.\n- I must speak to Eva to become a High Templar. She can be found in the marshlands.\n- I must speak to Sinclaire to become a Dark Templar. She is meditating in the dark grove north of here.", "ReplaceableTextures\\CommandButtons\\BTNSell.blp")
    set Lr[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))] = bj_lastCreatedQuest
    set ds[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))] = 0
endfunction
function vru takes nothing returns boolean
    set XQ = CreateGroup()
    set CQ = 0
    set VQ = null
    return true
endfunction
function vtr takes nothing returns boolean
    local integer jtr
    local integer xtr
    set vP[$00000000] = 0
    set vP[$00000001] = 1096433969
    set vP[$00000002] = 1096433970
    set vP[$00000003] = 1096433971
    set vP[$00000004] = 1096433972
    set jtr = 1095577656
    set xtr = 1112354870
    set mP = jtr
    set QP = xtr
    return true
endfunction
function vvt takes nothing returns nothing
    call ForceAddPlayer(rt, GetOwningPlayer(GetTriggerUnit()))
    call DisplayTextToForce(MwS(GetOwningPlayer(GetTriggerUnit())), "|cffffcc00Luna|r : |cff87ceebYou again? Hmm, you look as if you are an accomplished marksman. Very well... I shall give you a simple test. Head over to the Summit of Mount Twilight and enter the Rite of Passage. Complete it and you will reach the Unknown Regions. Thats not all, young one. What I want is for you to kill the Abominable Hydra...and return to me. Good luck.")
    call PlaySoundBJ(Se)
    call T_i(GetOwningPlayer(GetTriggerUnit()), $00000000, "4th Job Advancement Quest", "I have to kill the Abominable Hydra.", "ReplaceableTextures\\PassiveButtons\\PASBTNGenericSpellImmunity.blp")
    set st[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))] = bj_lastCreatedQuest
    set kt[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))] = 0
endfunction
function vwu takes nothing returns nothing
    set uO = Player($00000000)
    call TriggerExecute(OY)
endfunction
function vyu takes nothing returns boolean
    return GetUnitTypeId(GetTriggerUnit()) == 1211117637 and IsPlayerInForce(GetOwningPlayer(GetTriggerUnit()), js) and vs[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))] == 1
endfunction
function LOs takes nothing returns boolean
    return IsUnitEnemy(GetFilterUnit(), GetOwningPlayer(pS[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))]))
endfunction
function vrr takes nothing returns boolean
    return IsUnitAliveBJ(GetFilterUnit())
endfunction
function w0r takes nothing returns boolean
    return GetBooleanAnd(vrr(), LOs())
endfunction
function w2s takes nothing returns nothing
    if IsSuspendedXP(GetTriggerUnit()) then
        call DisplayTimedTextToForce(MwS(GetOwningPlayer(GetTriggerUnit())), 5., "Experience is re-enabled...")
    endif
    call SuspendHeroXPBJ(true, GetTriggerUnit())
endfunction
function w3s takes nothing returns boolean
    return GetUnitTypeId(GetTriggerUnit()) == 1211117638 and IsPlayerInForce(GetOwningPlayer(GetTriggerUnit()), xs) and IsPlayerInForce(GetOwningPlayer(GetTriggerUnit()), Zs) == false
endfunction
function w5r takes nothing returns boolean
    return GetUnitTypeId(GetDyingUnit()) == 1429221425 and IsPlayerInForce(GetOwningPlayer(GetKillingUnit()), IS[$00000006])
endfunction
function frt takes string drt returns nothing
    set DSw[ASw] = drt
    set ASw = ASw + 1
    call GZs(xus(hgr(GetEnumPlayer()), "when calling getCustomPlayer in Imp3DragonFortress, line 988"), true, "when calling setCommandsDisabled in Imp3DragonFortress, line 988")
    set ASw = ASw - 1
endfunction
function w5s takes nothing returns nothing
    set ASw = 0
    call frt("via function reference Imp3DragonFortress, line 987")
endfunction
function w8S takes nothing returns boolean
    return GetUnitTypeId(GetTriggerUnit()) == 1211117640 and GetUnitTypeId(GetOrderTargetUnit()) == 1747988818 and IsPlayerInForce(GetOwningPlayer(GetTriggerUnit()), Kr) and IsPlayerInForce(GetOwningPlayer(GetTriggerUnit()), Cr) == false and IsUnitInGroup(GetTriggerUnit(), kpu(300., GetUnitLoc(GetOrderTargetUnit())))
endfunction
function w8t takes nothing returns boolean
    return GetUnitTypeId(GetTriggerUnit()) == 1211117643 and GetOrderTargetUnit() == SG and GetHeroLevel(GetTriggerUnit()) >= 99 and IsPlayerInForce(GetOwningPlayer(GetTriggerUnit()), Kr) == false and IsUnitInGroup(GetTriggerUnit(), kpu(300., GetUnitLoc(GetOrderTargetUnit())))
endfunction
function nTr takes string bTr returns nothing
    local integer yTr
    local integer pTr
    local integer eTr
    local integer qTr
    local unit aTr
    set DSw[ASw] = bTr
    set ASw = ASw + 1
    set yTr = c5r(gQ, "when calling iterator in JobAdvancementQuestHandler, line 176")
    loop
        exitwhen not Tji(yTr)
        set pTr = LXi(yTr)
        set eTr = xus(pTr, "when calling getCustomPlayer in JobAdvancementQuestHandler, line 177")
        set qTr = xMi(eTr, "when calling getCHero in JobAdvancementQuestHandler, line 178")
        if qTr != 0 then
            set aTr = hqs(qTr, "when calling getHero in JobAdvancementQuestHandler, line 181")
            if aTr != null and yXu(aTr) and t_u(aTr) then
    if aSr(aTr) > k6w("909090909048", "when calling unObfuscateInt in JobAdvancementQuestHandler, line 183") or Ges(aTr) > k6w("909090909048", "when calling unObfuscateInt in JobAdvancementQuestHandler, line 184") or mks(aTr, $00000001) > k6w("909090908317", "when calling unObfuscateInt in JobAdvancementQuestHandler, line 185") or str(aTr, true) > k6w("9090908317", "when calling unObfuscateInt in JobAdvancementQuestHandler, line 186") or Q7t(aTr, true) > k6w("9090908317", "when calling unObfuscateInt in JobAdvancementQuestHandler, line 187") or JHt(aTr, true) > k6w("9090908317", "when calling unObfuscateInt in JobAdvancementQuestHandler, line 188") then
                    if aTr != null then
                        call Tri(aTr)
                    endif
                    call dii(Iji("Your actions seems to come from hacking! You are a fool!    ", "when calling unObfuscate in JobAdvancementQuestHandler, line 193"), 5., eDs(aTr))
    endif
            endif
        endif
    endloop
    call vms(yTr, "when calling close in JobAdvancementQuestHandler, line 176")
    set uu = true
    set ASw = ASw - 1
    set aTr = null
endfunction
function w9u takes nothing returns nothing
    set ASw = 0
    call nTr("via function reference JobAdvancementQuestHandler, line 1205")
endfunction
function wEs takes nothing returns boolean
    return IsUnitType(GetFilterUnit(), UNIT_TYPE_HERO) != false
endfunction
function wGr takes nothing returns nothing
    set Zo[1 + GetPlayerId(GetTriggerPlayer())] = 0
    set Eo[1 + GetPlayerId(GetTriggerPlayer())] = 0
    set Po[1 + GetPlayerId(GetTriggerPlayer())] = 0
    call DisplayTimedTextToForce(MwS(GetTriggerPlayer()), 8., "|cffffcc00You have successfully unlearned your current Profession.|r")
endfunction
function wHs takes nothing returns nothing
    call ForceAddPlayer(nr, GetOwningPlayer(GetTriggerUnit()))
    call DisplayTextToForce(MwS(GetOwningPlayer(GetTriggerUnit())), "|cffffcc00Class Trainer|r : |cff87ceebHello there, fellow archer. I see you are pretty skilled in the ways of the bow. Hold on there, though; I won't let you into the Hunters' Guild so easily. You've got to prove that you can hunt. I'll tell you what, I'll go easy on you and not ask you to bring back proof of the deed, but I'll be sending some of my members to watch you from afar while you perform the task. Hunt down 5 Frost Wolves and 5 Polar Furbolgs. Do not ask where to find them; a skilled Hunter is able to track down her prey in any situation.")
    call PlaySoundBJ(Se)
    call T_i(GetOwningPlayer(GetTriggerUnit()), $00000000, "2nd Job Advancement Quest", "I need to hunt down 5 Polar Furbolgs and 5 Frost Wolves. Where can I find them? Probably somewhere cold, hence the name...", "ReplaceableTextures\\CommandButtons\\BTNHire.blp")
    set dr[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))] = bj_lastCreatedQuest
endfunction
function wIu takes nothing returns nothing
    call ForceRemovePlayer(Gi, GetOwningPlayer(GetTriggerUnit()))
endfunction
function wNu takes nothing returns boolean
    return GetUnitTypeId(GetTriggerUnit()) == 1211117872 and GetUnitTypeId(GetOrderTargetUnit()) == 1747989079 and IsPlayerInForce(GetOwningPlayer(GetTriggerUnit()), rt) == false and IsUnitInGroup(GetTriggerUnit(), kpu(300., GetUnitLoc(GetOrderTargetUnit()))) and GetHeroLevel(GetTriggerUnit()) >= 150
endfunction
function wOS takes nothing returns nothing
    call TriggerSleepAction(10.)
    call DisableTrigger(GetTriggeringTrigger())
    call EnableTrigger(KY)
    call TriggerExecute(DY)
endfunction
function EVs takes string QVs returns integer
    local integer WVs
    set DSw[ASw] = QVs
    set ASw = ASw + 1
    if NX == 0 then
        if MX < 32768 then
            set MX = MX + 1
            set WVs = MX
            set wC[WVs] = 719
        else
            call tNr("Out of memory: Could not create CallbackSingle_doAfter_Archsage_WhiteWhizard_ArcaneManaBond.", "when calling error in Archsage_WhiteWhizard_ArcaneManaBond, line 83")
            set WVs = 0
        endif
    else
        set NX = NX - 1
        set WVs = BX[NX]
        set wC[WVs] = 719
    endif
    set ASw = ASw - 1
    return WVs
endfunction
function hYu takes string GYu returns integer
    local integer gYu
    set DSw[ASw] = GYu
    set ASw = ASw + 1
    if NX == 0 then
        if MX < 32768 then
            set MX = MX + 1
            set gYu = MX
            set wC[gYu] = 720
        else
            call tNr("Out of memory: Could not create CallbackSingle_doAfter_Archsage_WhiteWhizard_ArcaneManaBond.", "when calling error in Archsage_WhiteWhizard_ArcaneManaBond, line 88")
            set gYu = 0
        endif
    else
        set NX = NX - 1
        set gYu = BX[NX]
        set wC[gYu] = 720
    endif
    set ASw = ASw - 1
    return gYu
endfunction
function Oxu takes string cxu returns integer
    local integer oxu
    set DSw[ASw] = cxu
    set ASw = ASw + 1
    if rC == 0 then
        if sC < 32768 then
            set sC = sC + 1
            set oxu = sC
            set tC[oxu] = 664
        else
            call tNr("Out of memory: Could not create CallbackCounted_doPeriodicallyTimed_Archsage_WhiteWhizard_ArcaneManaBond.", "when calling error in Archsage_WhiteWhizard_ArcaneManaBond, line 127")
            set oxu = 0
        endif
    else
        set rC = rC - 1
        set oxu = uC[rC]
        set tC[oxu] = 664
    endif
    set ASw = ASw - 1
    return oxu
endfunction
function i4r takes unit B1r, unit N1r, real M1r, real w4r, boolean u4r, string r4r returns nothing
    local integer s4r
    local real t4r
    set DSw[ASw] = r4r
    set ASw = ASw + 1
    if N1r != null and yXu(N1r) then
        call CJi(N1r, qg, ag, w4r, "when calling applyBuffTimed in Archsage_WhiteWhizard_ArcaneManaBond, line 125")
        set t4r = w4r
        set s4r = Oxu("when calling alloc_CallbackCounted_doPeriodicallyTimed_Archsage_WhiteWhizard_ArcaneManaBond in Archsage_WhiteWhizard_ArcaneManaBond, line 127")
        call Inr(s4r)
        set DN[s4r] = N1r
        set HN[s4r] = u4r
        set JN[s4r] = M1r
        set KN[s4r] = B1r
        call UYt(1., t4r, s4r, "when calling doPeriodicallyTimed in Archsage_WhiteWhizard_ArcaneManaBond, line 127")
    endif
    set ASw = ASw - 1
endfunction
function kkt takes group Gkt, real gkt, real hkt, real Fkt returns nothing
    call GroupEnumUnitsInRange(Gkt, gkt, hkt, Fkt, null)
endfunction
function kSu takes string bSu returns nothing
    local unit ySu
    local integer pSu
    local boolean eSu
    local group qSu
    local integer aSu
    local group nSu
    local unit dSu
    local group fSu
    local group RSu
    local group TSu
    local unit YSu
    local integer GSu
    local integer gSu
    local real hSu
    local real FSu
    set DSw[ASw] = bSu
    set ASw = ASw + 1
    set ySu = GetTriggerUnit()
    set pSu = GetSpellAbilityId()
    if not GpS(CG, Aei(ySu), "when calling has in Archsage_WhiteWhizard_ArcaneManaBond, line 53") then
        set eSu = false
        if r5S(ySu) == yk and pSu == Nk and t3i(ySu) <= Ges(ySu) * wg then
            set eSu = true
            call i4r(ySu, ySu, MG, VG, false, "when calling as_applyManaRegen in Archsage_WhiteWhizard_ArcaneManaBond, line 58")
            set qSu = LLt(ANw(ySu), XSw, NG, "when calling getUnitsInRange in Archsage_WhiteWhizard_ArcaneManaBond, line 60")
            set aSu = BG
            set nSu = XbS(qSu)
            loop
    exitwhen not hJw(nSu)
    set dSu = tPr(nSu)
    if aSu > 0 then
                    if yXu(dSu) and dSu != ySu and t_u(dSu) and(not R9s(dSu, ySu)) and GpS(gQ, hgr(eDs(dSu)), "when calling has in Archsage_WhiteWhizard_ArcaneManaBond, line 64") and t3i(dSu) <= Ges(dSu) * rg then
                        set aSu = aSu - 1
                        call i4r(ySu, dSu, MG, VG, true, "when calling as_applyManaRegen in Archsage_WhiteWhizard_ArcaneManaBond, line 66")
                    endif
    else
                    exitwhen true
    endif
            endloop
            call lxs(nSu)
            call Sju(qSu, "when calling release in Archsage_WhiteWhizard_ArcaneManaBond, line 69")
        elseif r5S(ySu) == qk and pSu == Mk then
            set eSu = true
            call vwt(og, Aei(ySu), "when calling add in Archsage_WhiteWhizard_ArcaneManaBond, line 72")
            if Ges(ySu) - t3i(ySu) < Ges(ySu) * lg then
    call UOS($00000001, "when calling getGroup in Archsage_WhiteWhizard_ArcaneManaBond, line 75")
    set RSu = pIw
    call kkt(RSu, ANw(ySu), XSw, cg)
    set fSu = RSu
    set TSu = XbS(fSu)
    loop
                    exitwhen not hJw(TSu)
                    set YSu = tPr(TSu)
                    if R9s(YSu, ySu) then
                        call OCt(YSu, "attack", ySu)
                    endif
    endloop
    call lxs(TSu)
    call Sju(fSu, "when calling release in Archsage_WhiteWhizard_ArcaneManaBond, line 79")
            endif
            call CJi(ySu, qg, ag, tg, "when calling applyBuffTimed in Archsage_WhiteWhizard_ArcaneManaBond, line 81")
            set hSu = tg
            set GSu = EVs("when calling alloc_CallbackSingle_doAfter_Archsage_WhiteWhizard_ArcaneManaBond in Archsage_WhiteWhizard_ArcaneManaBond, line 83")
            call RUs(GSu)
            set IN[GSu] = ySu
            call Ybr(hSu, GSu, "when calling doAfter in Archsage_WhiteWhizard_ArcaneManaBond, line 83")
        endif
        if eSu then
            call vwt(CG, Aei(ySu), "when calling add in Archsage_WhiteWhizard_ArcaneManaBond, line 87")
            set FSu = XG
            set gSu = hYu("when calling alloc_CallbackSingle_doAfter_Archsage_WhiteWhizard_ArcaneManaBond in Archsage_WhiteWhizard_ArcaneManaBond, line 88")
            call RUs(gSu)
            set PN[gSu] = ySu
            call Ybr(FSu, gSu, "when calling doAfter in Archsage_WhiteWhizard_ArcaneManaBond, line 88")
        endif
    endif
    set ASw = ASw - 1
    set ySu = null
    set qSu = null
    set nSu = null
    set dSu = null
    set fSu = null
    set RSu = null
    set TSu = null
    set YSu = null
endfunction
function wUr takes nothing returns nothing
    set ASw = 0
    call kSu("via function reference Archsage_WhiteWhizard_ArcaneManaBond, line 145")
endfunction
function wWt takes nothing returns nothing
    call SetUnitPositionLoc(GetEnumUnit(), vo)
endfunction
function GBu takes string dBu returns nothing
    local player fBu
    local integer RBu
    local integer TBu
    local integer YBu
    set DSw[ASw] = dBu
    set ASw = ASw + 1
    set fBu = GetEnumPlayer()
    call ResetToGameCameraForPlayer(fBu, 0.)
    set RBu = hgr(fBu)
    if GpS(gQ, RBu, "when calling has in Imp3DragonFortress, line 1391") then
        set TBu = xus(hgr(fBu), "when calling getCustomPlayer in Imp3DragonFortress, line 1392")
        if TBu != 0 then
            set YBu = xMi(TBu, "when calling getCHero in Imp3DragonFortress, line 1395")
            if YBu != 0 and hqs(YBu, "when calling getHero in Imp3DragonFortress, line 1396") != null then
    call krS(TBu, "when calling cameraCheckLock in Imp3DragonFortress, line 1397")
            endif
        endif
    endif
    set ASw = ASw - 1
    set fBu = null
endfunction
function wcr takes nothing returns nothing
    set ASw = 0
    call GBu("via function reference Imp3DragonFortress, line 1385")
endfunction
function whr takes nothing returns nothing
    call ForceRemovePlayer(rt, GetOwningPlayer(GetTriggerUnit()))
    call ForceRemovePlayer(ot, GetOwningPlayer(GetTriggerUnit()))
    call ForceRemovePlayer(Ot, GetOwningPlayer(GetTriggerUnit()))
    call DisplayTextToForce(MwS(GetOwningPlayer(GetTriggerUnit())), "|cffffcc00Arthur the Seeker|r : |cff87ceebYou've done it. I am amazed. Very well, I shall impart to you magical knowledge even Kings can't buy. Welcome to a much longer road, White Wizard.")
    call DestroyQuest(st[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))])
    set st[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))] = null
    call SetHeroLevelBJ(GetTriggerUnit(), $00000001, false)
    call ReplaceUnitBJ(GetTriggerUnit(), $48303234, $00000002)
    call SelectUnitForPlayerSingle(bj_lastReplacedUnit, GetOwningPlayer(GetTriggerUnit()))
    call SetHeroLevel(bj_lastReplacedUnit, $00000001, true)
    call UnitStripHeroLevel(bj_lastReplacedUnit, $00000001)
endfunction
function DMr takes string AMr returns boolean
    set DSw[ASw] = AMr
    set ASw = ASw + 1
    set eQ = 30
    set qQ = 25
    set aQ = jts("when calling new_HashMap in Fate_Effect, line 13")
    set nQ = 0.5
    set jf = CreateTrigger()
    call TriggerAddCondition(jf, Condition(Omw))
    call TriggerAddAction(jf, lmw)
    set ASw = ASw - 1
    return true
endfunction
function wkr takes nothing returns boolean
    set ASw = 0
    return DMr("via function reference Fate_Effect, line 1")
endfunction
function wnS takes nothing returns nothing
    call tei(GetFilterUnit())
endfunction
function fli takes nothing returns boolean
    return GetUnitTypeId(GetDyingUnit()) == 1848652120 or GetUnitTypeId(GetDyingUnit()) == 1848652113
endfunction
function wnu takes nothing returns boolean
    return fli() and IsPlayerInForce(GetOwningPlayer(GetKillingUnit()), rt) and GetUnitTypeId(GetKillingUnit()) == 1211117894
endfunction
function wtr takes nothing returns boolean
    return GetClickedButton() == iS[$00000002] and sS[1 + GetPlayerId(GetTriggerPlayer())] == 1
endfunction
function wxu takes nothing returns boolean
    return (GetUnitTypeId(GetOrderTargetUnit()) == 1747989576 and IsUnitInGroup(GetTriggerUnit(), kpu(300., GetUnitLoc(GetOrderTargetUnit()))) and IsUnitType(GetTriggerUnit(), UNIT_TYPE_HERO) and Zo[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))] == 0 and IsPlayerInForce(GetOwningPlayer(GetTriggerUnit()), Uo[$00000001]) and IsPlayerInForce(GetOwningPlayer(GetTriggerUnit()), Uo[$00000002]) and IsPlayerInForce(GetOwningPlayer(GetTriggerUnit()), Uo[$00000003]) and IsPlayerInForce(GetOwningPlayer(GetTriggerUnit()), Uo[$00000004])) != false
endfunction
function RYi takes unit aYi, string nYi, real dYi, real fYi returns boolean
    return IssuePointOrder(aYi, nYi, dYi, fYi)
endfunction
function mkS takes string xkS returns integer
    local integer vkS
    set DSw[ASw] = xkS
    set ASw = ASw + 1
    if rC == 0 then
        if sC < 32768 then
            set sC = sC + 1
            set vkS = sC
            set tC[vkS] = 646
        else
            call tNr("Out of memory: Could not create CallbackCounted_doPeriodicallyCounted_Avenger_Champ_MS_RM_Taunt.", "when calling error in Avenger_Champ_MS_RM_Taunt, line 70")
            set vkS = 0
        endif
    else
        set rC = rC - 1
        set vkS = uC[rC]
        set tC[vkS] = 646
    endif
    set ASw = ASw - 1
    return vkS
endfunction
function HJu takes unit fJu, unit RJu, string TJu returns boolean
    local boolean YJu
    local integer GJu
    local integer gJu
    local integer hJu
    local texttag FJu
    local texttag kJu
    local texttag jJu
    local texttag xJu
    local integer array vJu
    local integer mJu
    local integer QJu
    local integer WJu
    local integer EJu
    local integer ZJu
    local string UJu
    local effect IJu
    local integer PJu
    local real AJu
    local integer DJu
    set DSw[ASw] = TJu
    set ASw = ASw + 1
    set YJu = false
    if Jyr(gg, Aei(RJu), "when calling has in Avenger_Champ_MS_RM_Taunt, line 27") then
        call klS(gg, Aei(RJu), "when calling remove in Avenger_Champ_MS_RM_Taunt, line 28")
    endif
    set GJu = GetRandomInt($00000000, $00000063)
    set gJu = r5S(RJu)
    set hJu = Gg - JGi(boS(fJu) * 1. / 10)
    if GJu <= hJu then
        set FJu = CreateTextTagUnitBJ("|cff008b84Taunt Fail!|r", fJu, D3w(fJu), 13., 0., 0., 0., 0.)
        call Hot(FJu, .015, .04)
        set kJu = FJu
        call wfu(kJu, false)
        set jJu = kJu
        call Zkr(jJu, 1.)
        set xJu = jJu
        call Usr(xJu, 3.)
        if gJu >= 1429221424 and gJu <= 1429221466 then
            set mJu = 0
            set QJu = c5r(Kg, "when calling iterator in Avenger_Champ_MS_RM_Taunt, line 42")
            loop
    exitwhen not Tji(QJu)
    set WJu = LXi(QJu)
    if gSr(RJu, WJu) then
                    set vJu[mJu] = WJu
                    set mJu = mJu + 1
    endif
            endloop
            call vms(QJu, "when calling close in Avenger_Champ_MS_RM_Taunt, line 42")
            if vJu[$00000000] != 0 then
    set EJu = GetRandomInt($00000000, mJu - 1)
    set ZJu = vJu[EJu]
    set UJu = nPr(C_r(Lg, EJu, "when calling get in Avenger_Champ_MS_RM_Taunt, line 50"), "when calling stringFromIndex in Avenger_Champ_MS_RM_Taunt, line 50")
    call MQu(RJu, ZJu)
    if not xvu(RJu, UJu) then
                    if not OCt(RJu, UJu, fJu) then
                        call RYi(RJu, UJu, ANw(fJu), XSw)
                    endif
    endif
            endif
        endif
    else
        set YJu = true
        call GVw(gg, Aei(RJu), Aei(fJu), "when calling put in Avenger_Champ_MS_RM_Taunt, line 62")
        set IJu = AddSpecialEffectTarget("Abilities/Spells/Orc/StasisTrap/StasisTotemTarget.mdl", RJu, "overhead")
        if Jyr(gg, Aei(RJu), "when calling has in Avenger_Champ_MS_RM_Taunt, line 65") and iCu(wps(gg, Aei(RJu), "when calling get in Avenger_Champ_MS_RM_Taunt, line 65"), "when calling unitFromIndex in Avenger_Champ_MS_RM_Taunt, line 65") == fJu then
            call OCt(RJu, "attack", fJu)
            if A4s(RJu) then
    call Iwr(RJu)
            endif
        endif
        set AJu = Yg
        set DJu = aJi(Tg / Yg)
        set PJu = mkS("when calling alloc_CallbackCounted_doPeriodicallyCounted_Avenger_Champ_MS_RM_Taunt in Avenger_Champ_MS_RM_Taunt, line 70")
        call Inr(PJu)
        set XN[PJu] = RJu
        set CN[PJu] = fJu
        set VN[PJu] = IJu
        call l5s(AJu, DJu, PJu, "when calling doPeriodicallyCounted in Avenger_Champ_MS_RM_Taunt, line 70")
    endif
    set ASw = ASw - 1
    set FJu = null
    set kJu = null
    set jJu = null
    set xJu = null
    set IJu = null
    return YJu
endfunction
function u6S takes string M5S returns integer
    local integer w6S
    set DSw[ASw] = M5S
    set ASw = ASw + 1
    if NX == 0 then
        if MX < 32768 then
            set MX = MX + 1
            set w6S = MX
            set wC[w6S] = 723
        else
            call tNr("Out of memory: Could not create CallbackSingle_doAfter_Avenger_Champ_MS_RM_Taunt.", "when calling error in Avenger_Champ_MS_RM_Taunt, line 112")
            set w6S = 0
        endif
    else
        set NX = NX - 1
        set w6S = BX[NX]
        set wC[w6S] = 723
    endif
    set ASw = ASw - 1
    return w6S
endfunction
function OXu takes string JLu returns nothing
    local unit KLu
    local player LLu
    local integer XLu
    local real CLu
    local real VLu
    local group BLu
    local boolean NLu
    local group MLu
    local unit wXu
    local integer uXu
    local real rXu
    local real sXu
    local real tXu
    local integer iXu
    local real SXu
    local real cXu
    local real oXu
    set DSw[ASw] = JLu
    set ASw = ASw + 1
    set KLu = GetTriggerUnit()
    set LLu = eDs(KLu)
    set XLu = GetSpellAbilityId()
    set cXu = ANw(KLu)
    set oXu = XSw
    set CLu = cXu
    set VLu = oXu
    set BLu = LLt(CLu, VLu, Rg, "when calling getUnitsInRange in Avenger_Champ_MS_RM_Taunt, line 93")
    set NLu = false
    set MLu = XbS(BLu)
    loop
        exitwhen not hJw(MLu)
        set wXu = tPr(MLu)
        if yXu(wXu) and PGi(wXu, LLu) and(not G0S(wXu)) then
            set NLu = HJu(KLu, wXu, "when calling onTaunt in Avenger_Champ_MS_RM_Taunt, line 98")
        endif
        if XLu == Fk then
            if NLu and(not n2u(wXu)) and(not fRi(wXu)) and(not gSr(wXu, l2s(Iji("Avul", "when calling unObfuscate in Avenger_Champ_MS_RM_Taunt, line 101"), "when calling fromRawCode in Avenger_Champ_MS_RM_Taunt, line 101"))) and(not gSr(wXu, l2s(Iji("AImx", "when calling unObfuscate in Avenger_Champ_MS_RM_Taunt, line 101"), "when calling fromRawCode in Avenger_Champ_MS_RM_Taunt, line 101"))) and PGi(wXu, LLu) then
    set uXu = Q7t(KLu, true)
    set rXu = fg * uXu
    call d1i(KLu, wXu, rXu)
            endif
        elseif XLu == kk then
            if GpS(gQ, hgr(eDs(wXu)), "when calling has in Avenger_Champ_MS_RM_Taunt, line 106") and(not n2u(wXu)) and(not fRi(wXu)) and(not gSr(wXu, l2s(Iji("Avul", "when calling unObfuscate in Avenger_Champ_MS_RM_Taunt, line 106"), "when calling fromRawCode in Avenger_Champ_MS_RM_Taunt, line 106"))) and(not gSr(wXu, l2s(Iji("AImx", "when calling unObfuscate in Avenger_Champ_MS_RM_Taunt, line 106"), "when calling fromRawCode in Avenger_Champ_MS_RM_Taunt, line 106"))) then
    if wXu == KLu then
                    set tXu = th
    else
                    set tXu = th / 2.
    endif
    set sXu = tXu
    call lKs(wXu, sh, $00000001)
    call CJi(wXu, ih, Sh, sXu, "when calling applyBuffTimed in Avenger_Champ_MS_RM_Taunt, line 110")
    set SXu = sXu
    set iXu = u6S("when calling alloc_CallbackSingle_doAfter_Avenger_Champ_MS_RM_Taunt in Avenger_Champ_MS_RM_Taunt, line 112")
    call RUs(iXu)
    set BN[iXu] = wXu
    call Ybr(SXu, iXu, "when calling doAfter in Avenger_Champ_MS_RM_Taunt, line 112")
            else
    call Z7t(BLu, wXu)
            endif
        else
            call Z7t(BLu, wXu)
        endif
    endloop
    call lxs(MLu)
    call Sju(BLu, "when calling release in Avenger_Champ_MS_RM_Taunt, line 118")
    set ASw = ASw - 1
    set KLu = null
    set LLu = null
    set BLu = null
    set MLu = null
    set wXu = null
endfunction
function x2s takes nothing returns nothing
    set ASw = 0
    call OXu("via function reference Avenger_Champ_MS_RM_Taunt, line 122")
endfunction
function x4r takes nothing returns boolean
    return true
endfunction
function Tmu takes string Rmu returns boolean
    set DSw[ASw] = Rmu
    set ASw = ASw + 1
    set vJ = jts("when calling new_HashMap in Tooth_Effect, line 14")
    set mJ = jts("when calling new_HashMap in Tooth_Effect, line 15")
    set QJ = 10
    set WJ = 3.
    set EJ = 300.
    call TriggerAddCondition(vf, Condition(xEw))
    call TriggerAddAction(vf, vEw)
    set ASw = ASw - 1
    return true
endfunction
function x4w takes nothing returns boolean
    set ASw = 0
    return Tmu("via function reference Tooth_Effect, line 1")
endfunction
function BEt takes nothing returns boolean
    return IsPlayerInForce(GetTriggerPlayer(), rO)
endfunction
function DHw takes nothing returns boolean
    return IsPlayerInForce(GetTriggerPlayer(), sO)
endfunction
function x5r takes nothing returns boolean
    return GetBooleanOr(BEt(), DHw())
endfunction
function x9r takes nothing returns boolean
    return GetOrderTargetUnit() == MY and IsUnitInGroup(GetTriggerUnit(), kpu(300., GetUnitLoc(GetOrderTargetUnit())))
endfunction
function xAw takes nothing returns nothing
    call PanCameraToTimedLocForPlayer(GetEnumPlayer(), br[1 + GetPlayerId(GetEnumPlayer())], 0.)
    set iw[GetPlayerId(GetEnumPlayer())] = GetPlayerId(GetEnumPlayer())
    set Sw[GetPlayerId(GetEnumPlayer())] = pr[wS[Ni * 100 + GetPlayerId(GetEnumPlayer())]]
endfunction
function xEu takes nothing returns boolean
    return GetUnitTypeId(GetTriggerUnit()) == 1211117637 and GetUnitTypeId(GetOrderTargetUnit()) == 1747988816 and IsPlayerInForce(GetOwningPlayer(GetTriggerUnit()), js) and vs[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))] == 2 and IsUnitInGroup(GetTriggerUnit(), kpu(300., GetUnitLoc(GetOrderTargetUnit())))
endfunction
function xFu takes nothing returns boolean
    return GetUnitTypeId(GetDyingUnit()) == 1429221427 and IsPlayerInForce(GetOwningPlayer(GetKillingUnit()), pc[$00000003])
endfunction
function BQs takes nothing returns boolean
    return sS[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))] == 2 and oS[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))] == 1
endfunction
function SYt takes nothing returns boolean
    return IsUnitInGroup(GetTriggerUnit(), mo) == false
endfunction
function Wsr takes nothing returns boolean
    return sS[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))] == 2 and oS[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))] == 1
endfunction
function Sai takes nothing returns boolean
    return GetSpellAbilityId() == 1093677397 or GetSpellAbilityId() == 1093677653 or GetSpellAbilityId() == 1093678936
endfunction
function fqi takes nothing returns boolean
    return Sai()
endfunction
function FNw takes nothing returns boolean
    return GetSpellAbilityId() == 1093677396 or GetSpellAbilityId() == 1093677652 or GetSpellAbilityId() == 1093678935
endfunction
function kjr takes nothing returns boolean
    return FNw()
endfunction
function xJt takes nothing returns nothing
    call SetUnitAnimation(GetTriggerUnit(), "spell")
    call PauseUnit(GetTriggerUnit(), true)
    call n6t(.2)
    if fqi() then
        call ForceRemovePlayer(us, GetOwningPlayer(GetTriggerUnit()))
        call SetPlayerAbilityAvailableBJ(true, $41303154, GetOwningPlayer(GetTriggerUnit()))
        call SetPlayerAbilityAvailableBJ(true, $41303254, GetOwningPlayer(GetTriggerUnit()))
        call SetPlayerAbilityAvailableBJ(true, $41303757, GetOwningPlayer(GetTriggerUnit()))
        if Wsr() then
            call UnitAddAbility(GetTriggerUnit(), $41303854)
        endif
    endif
    if kjr() then
        call ForceRemovePlayer(us, GetOwningPlayer(GetTriggerUnit()))
        call SetPlayerAbilityAvailableBJ(true, $41303155, GetOwningPlayer(GetTriggerUnit()))
        call SetPlayerAbilityAvailableBJ(true, $41303255, GetOwningPlayer(GetTriggerUnit()))
        call SetPlayerAbilityAvailableBJ(true, $41303758, GetOwningPlayer(GetTriggerUnit()))
        if BQs() then
            call UnitAddAbility(GetTriggerUnit(), $41303854)
        endif
    endif
    if SYt() then
        call PauseUnit(GetTriggerUnit(), false)
        call SetUnitAnimation(GetTriggerUnit(), "stand")
    endif
endfunction
function Tgu takes string fgu returns nothing
    local unit Rgu
    set DSw[ASw] = fgu
    set ASw = ASw + 1
    set Rgu = GetTriggerUnit()
    call Blu(Rgu, Pl, Ul, "when calling imp3MazeSetUnitToNewStage in Imp3DragonFortress, line 808")
    set ASw = ASw - 1
    set Rgu = null
endfunction
function xMw takes nothing returns nothing
    set ASw = 0
    call Tgu("via function reference Imp3DragonFortress, line 1660")
endfunction
function xOS takes nothing returns boolean
    return GetUnitTypeId(GetDyingUnit()) == 1848652088 or GetUnitTypeId(GetDyingUnit()) == 1848652097 and IsPlayerInForce(GetOwningPlayer(GetKillingUnit()), IS[$0000000E])
endfunction
function xPs takes nothing returns boolean
    set nP = "-0123456789"
    set dP = "abcdefghijklmnopqrstuvwxyz"
    return true
endfunction
function xPu takes nothing returns nothing
    call RemoveItem(GetManipulatedItem())
    call ForceAddPlayer(IS[$00000002], GetOwningPlayer(GetTriggerUnit()))
    call DisplayTextToForce(MwS(GetOwningPlayer(GetTriggerUnit())), "|cffffcc00Skypper|r : So, you're here for the King's contract then? Well, the details are all there so get to it! Kill 3 Aggressive Satyrs and come back to me.")
    call T_i(GetOwningPlayer(GetTriggerUnit()), $00000000, "Satyr Extermination", "Get rid of 3 Aggressive Satyrs for Skypper.", "ReplaceableTextures\\CommandButtons\\BTNSatyr.blp")
    set is[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))] = bj_lastCreatedQuest
endfunction
function xPw takes nothing returns boolean
    return (GetItemTypeId(GetManipulatedItem()) == 1227895873 and IsUnitType(GetTriggerUnit(), UNIT_TYPE_HERO) and GetHeroLevel(GetTriggerUnit()) >= 199 and IsPlayerInForce(GetOwningPlayer(GetTriggerUnit()), pc[$00000005]) == false and ww[(1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))) * 1000 + fkS(GetTriggerUnit())] == false) != false
endfunction
function Kni takes string Hni returns nothing
    local real Jni
    set DSw[ASw] = Hni
    set ASw = ASw + 1
    set Jni = dMw(wps(KW, Ici(Dl), "when calling get in Imp3DragonFortress, line 463"))
    call GVw(KW, Ici(Dl), B5r(Jni + 1.), "when calling put in Imp3DragonFortress, line 464")
    call sIr(Dl, Jni, "when calling imp3MazeCheckTimeout in Imp3DragonFortress, line 465")
    set ASw = ASw - 1
endfunction
function xSu takes nothing returns nothing
    set ASw = 0
    call Kni("via function reference Imp3DragonFortress, line 514")
endfunction
function xTS takes nothing returns boolean
    return GetUnitTypeId(GetTriggerUnit()) == 1211117892 and GetUnitTypeId(GetOrderTargetUnit()) == 1747989300 and IsPlayerInForce(GetOwningPlayer(GetTriggerUnit()), rt) and IsPlayerInForce(GetOwningPlayer(GetTriggerUnit()), ot) and IsUnitInGroup(GetTriggerUnit(), kpu(300., GetUnitLoc(GetOrderTargetUnit())))
endfunction
function xZi takes nothing returns boolean
    local integer kZi
    local integer jZi
    set yj = 600.
    set ej = 0
    set qj = null
    set aj = null
    set nj = Filter(Jvw)
    set qj = CreateTrigger()
    set kZi = 0
    set jZi = ej - 1
    loop
        exitwhen kZi > jZi
        call dUs(qj, pj[kZi])
        set kZi = kZi + 1
    endloop
    call mZi(Kvw)
    call nnr(CreateTimer(), yj, Lvw)
    return true
endfunction
function xbs takes nothing returns boolean
    return GetSpellAbilityId() == 1093678136
endfunction
function Jjs takes string Djs returns integer
    local integer Hjs
    set DSw[ASw] = Djs
    set ASw = ASw + 1
    if NX == 0 then
        if MX < 32768 then
            set MX = MX + 1
            set Hjs = MX
            set wC[Hjs] = 1014
        else
            call tNr("Out of memory: Could not create CallbackSingle_doAfter_addAction_PA_Assassinate.", "when calling error in PA_Assassinate, line 21")
            set Hjs = 0
        endif
    else
        set NX = NX - 1
        set Hjs = BX[NX]
        set wC[Hjs] = 1014
    endif
    set ASw = ASw - 1
    return Hjs
endfunction
function MGu takes string XGu returns nothing
    local unit CGu
    local integer VGu
    local integer BGu
    local real NGu
    set DSw[ASw] = XGu
    set ASw = ASw + 1
    set CGu = GetTriggerUnit()
    set VGu = gir(CGu, uj)
    set NGu = iF
    set BGu = Jjs("when calling alloc_CallbackSingle_doAfter_addAction_PA_Assassinate in PA_Assassinate, line 21")
    call RUs(BGu)
    set Vuw[BGu] = CGu
    set Buw[BGu] = VGu
    call Ybr(NGu, BGu, "when calling doAfter in PA_Assassinate, line 21")
    set ASw = ASw - 1
    set CGu = null
endfunction
function xgS takes nothing returns nothing
    set ASw = 0
    call MGu("via function reference PA_Assassinate, line 18")
endfunction
function xit takes nothing returns nothing
    local unit hit = GetEnteringUnit()
    local player Fit = eDs(hit)
    local integer kit = hgr(Fit)
    local item jit = GetEnumItem()
    if eP[kit] != pP[kit]then
        call tdu(jit)
    endif
    set eP[kit] = eP[kit] + 1
    set hit = null
    set Fit = null
    set jit = null
endfunction
function xiu takes nothing returns boolean
    return true
endfunction
function xru takes nothing returns nothing
    call UnitRemoveAbility(GetManipulatingUnit(), $42303146)
    call UnitRemoveAbility(GetManipulatingUnit(), $42303147)
    call UnitRemoveAbility(GetManipulatingUnit(), $42303145)
endfunction
function xti takes nothing returns nothing
    call ForceAddPlayer(hs, GetOwningPlayer(GetTriggerUnit()))
endfunction
function xvs takes nothing returns nothing
    call PanCameraToTimedLocForPlayer(GetEnumPlayer(), vo, 0.)
    call TriggerExecute(MT)
endfunction
function xwu takes nothing returns nothing
    local unit jwu = GetTriggerUnit()
    if gir(jwu, wD) == 0 then
        call M3w(jwu)
        call lyS(VA)
        call e7S()
    endif
    set jwu = null
endfunction
function B5S takes nothing returns boolean
    return GetOwningPlayer(GetTriggerUnit()) == Player($00000003)
endfunction
function C0i takes nothing returns boolean
    return GetOwningPlayer(GetTriggerUnit()) == Player($00000002)
endfunction
function Ivt takes nothing returns boolean
    return GetOwningPlayer(GetTriggerUnit()) == Player($00000004)
endfunction
function QKs takes nothing returns boolean
    return GetOwningPlayer(GetTriggerUnit()) == Player($00000000)
endfunction
function V4r takes nothing returns boolean
    return GetOwningPlayer(GetTriggerUnit()) == Player($00000009)
endfunction
function glt takes nothing returns boolean
    return GetOwningPlayer(GetTriggerUnit()) == Player($00000005)
endfunction
function i7S takes nothing returns boolean
    return GetOwningPlayer(GetTriggerUnit()) == Player($00000006)
endfunction
function l9u takes nothing returns boolean
    return GetOwningPlayer(GetTriggerUnit()) == Player($00000001)
endfunction
function qdi takes nothing returns boolean
    return IsPlayerInForce(GetOwningPlayer(GetTriggerUnit()), Uo[$00000001])
endfunction
function vit takes nothing returns boolean
    return GetOwningPlayer(GetTriggerUnit()) == Player($00000007)
endfunction
function wFt takes nothing returns boolean
    return GetOwningPlayer(GetTriggerUnit()) == Player($00000008)
endfunction
function xys takes nothing returns nothing
    call RemoveItem(GetManipulatedItem())
    call ForceAddPlayer(Uo[$00000001], GetOwningPlayer(GetTriggerUnit()))
    call DisplayTextToForce(MwS(GetOwningPlayer(GetTriggerUnit())), "|cffff8c00Fisherman's Friend|r : Aha! Great to see you again! It seems like only yesterday that you were learning how to fish, and now you are already ready to take on bigger challenges. Alright, you know the drill. Catch five Thunderfishes within five minutes to prove yourself worthy enough to become a Master Fisherman!")
    call T_i(GetOwningPlayer(GetTriggerUnit()), $00000000, "Profession Advancement", "|cffff0000Fishing Profession Advancement Quest|r\n|cff00ff00Master|r\nI'm able to advance to a Master Fisherman if I'm able to catch five Thunderfishes within five minutes... ", "ReplaceableTextures\\CommandButtons\\BTNStatUp.blp")
    set Ao[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))] = bj_lastCreatedQuest
    if QKs() then
        call StartTimerBJ(Do, false, 300.)
    endif
    if l9u() then
        call StartTimerBJ(Ho, false, 300.)
    endif
    if C0i() then
        call StartTimerBJ(Jo, false, 300.)
    endif
    if B5S() then
        call StartTimerBJ(Ko, false, 300.)
    endif
    if Ivt() then
        call StartTimerBJ(Lo, false, 300.)
    endif
    if glt() then
        call StartTimerBJ(Xo, false, 300.)
    endif
    if i7S() then
        call StartTimerBJ(Co, false, 300.)
    endif
    if vit() then
        call StartTimerBJ(Vo, false, 300.)
    endif
    if wFt() then
        call StartTimerBJ(Bo, false, 300.)
    endif
    if V4r() then
        call StartTimerBJ(No, false, 300.)
    endif
    call CreateTimerDialogBJ(bj_lastStartedTimer, "Master Advancement")
    set Mo[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))] = bj_lastCreatedTimerDialog
    call TimerDialogDisplay(Mo[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))], true)
    call n6t(300.)
    call DestroyTimerDialog(Mo[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))])
    if qdi() then
        call DestroyQuest(Ao[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))])
        call ForceRemovePlayer(Uo[$00000001], GetOwningPlayer(GetTriggerUnit()))
        call DisplayTimedTextToForce(MwS(GetOwningPlayer(GetTriggerUnit())), 5., "|cffff0000You've failed to pass the requirements for Master Profession.|r")
    endif
endfunction
function y1s takes nothing returns nothing
    set vs[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))] = 3
    call DisplayTextToForce(MwS(GetOwningPlayer(GetTriggerUnit())), "|cffffcc00Priestess Shari|r : |cff87ceebWell done...this holy water will be the covenant in which to bless you. But that is not enough. We need one more...talk to Skypper. He will provide you with details in which to find the Altar of the Highfather. Oh and, don't forget to pray and pour the holy water over the altar first before pouring it over your head. Do it correctly and return to the Highfather.")
    call QuestSetDescription(Lr[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))], "I need to talk to Skypper to find the location of the Altar of the Highfather.")
endfunction
function y8r takes nothing returns nothing
    call RemoveUnit(GetEnumUnit())
endfunction
function eMu takes string lMu returns nothing
    local player bMu
    local integer yMu
    local integer pMu
    set DSw[ASw] = lMu
    set ASw = ASw + 1
    set bMu = GetTriggerPlayer()
    set yMu = hgr(bMu)
    if GpS(gQ, yMu, "when calling has in PlayerCommands, line 278") then
        set pMu = xus(yMu, "when calling getCustomPlayer in PlayerCommands, line 279")
        if pMu != 0 and(not Vgt(pMu, "when calling getCommandsDisabled in PlayerCommands, line 281")) then
            if dVw(pMu, "when calling getCameraIsLockedIn in PlayerCommands, line 282") then
    call gSs(pMu, "when calling cameraUnlock in PlayerCommands, line 283")
            else
    call WDr(pMu, "when calling cameraLock in PlayerCommands, line 285")
            endif
        endif
    endif
    set ASw = ASw - 1
    set bMu = null
endfunction
function y8s takes nothing returns nothing
    set ASw = 0
    call eMu("via function reference PlayerCommands, line 274")
endfunction
function y9t takes nothing returns nothing
    call dii("|cff00BFFFDon't forget about real life when enjoying Teve R4! Share the time with your family and friends! :)|r", 30., eDs(GetTriggerUnit()))
endfunction
function y9u takes nothing returns nothing
    set pS[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))] = GetTriggerUnit()
    call SetPlayerStateBJ(GetOwningPlayer(pS[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))]), PLAYER_STATE_RESOURCE_FOOD_USED, $00000000)
    set qS[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))] = GetUnitLoc(GetTriggerUnit())
    set YS[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))] = UFS(700., qS[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))], Condition(fyw))
    call ForGroupBJ(YS[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))], Ryw)
    set nS[$00000001] = Shu(qS[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))], 600., 90.)
    set nS[$00000002] = Shu(qS[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))], 600., 160.)
    set nS[$00000003] = Shu(qS[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))], 600., 235.)
    set nS[$00000004] = Shu(qS[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))], 600., 305.)
    set nS[$00000005] = Shu(qS[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))], 600., 20.)
    call AddLightningLoc("DRAM", nS[$00000001], nS[$00000003])
    set dS[$00000001] = bj_lastCreatedLightning
    call AddLightningLoc("DRAM", nS[$00000005], nS[$00000003])
    set dS[$00000002] = bj_lastCreatedLightning
    call AddLightningLoc("DRAM", nS[$00000005], nS[$00000002])
    set dS[$00000003] = bj_lastCreatedLightning
    call AddLightningLoc("DRAM", nS[$00000002], nS[$00000004])
    set dS[$00000004] = bj_lastCreatedLightning
    call AddLightningLoc("DRAM", nS[$00000004], nS[$00000001])
    set dS[$00000005] = bj_lastCreatedLightning
    call AddLightningLoc("DRAM", nS[$00000001], nS[$00000003])
    set dS[$00000006] = bj_lastCreatedLightning
    call AddLightningLoc("DRAM", nS[$00000005], nS[$00000003])
    set dS[$00000007] = bj_lastCreatedLightning
    call AddLightningLoc("DRAM", nS[$00000005], nS[$00000002])
    set dS[$00000008] = bj_lastCreatedLightning
    call AddLightningLoc("DRAM", nS[$00000002], nS[$00000004])
    set dS[$00000009] = bj_lastCreatedLightning
    call AddLightningLoc("DRAM", nS[$00000004], nS[$00000001])
    set dS[$0000000A] = bj_lastCreatedLightning
    call n6t(.5)
    call SetUnitAnimation(pS[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))], "spell")
    call SetUnitTimeScalePercent(pS[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))], 50.)
    call n6t(.1)
    call AddSpecialEffectLocBJ(qS[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))], "Abilities\\Spells\\Orc\\WarStomp\\WarStompCaster.mdl")
    call DestroyEffect(bj_lastCreatedEffect)
    call CreateTextTagUnitBJ("LIMIT BREAK!!!", pS[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))], 0., 15., 100., .0, .0, 0.)
    set fS[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))] = bj_lastCreatedTextTag
    call n6t(2.5)
    set Cc = 1
    loop
        exitwhen Cc > 10
        call DestroyLightning(dS[Cc])
        set Cc = Cc + 1
    endloop
    call DestroyTextTag(fS[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))])
    call n6t(.2)
    call CreateTextTagUnitBJ("LEX DIVINA!!!", pS[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))], 0., 15., 100., .0, .0, 0.)
    call SetTextTagVelocityBJ(bj_lastCreatedTextTag, 64., 90.)
    call SetTextTagPermanentBJ(bj_lastCreatedTextTag, false)
    call SetTextTagFadepointBJ(bj_lastCreatedTextTag, 1.5)
    call SetTextTagLifespanBJ(bj_lastCreatedTextTag, 3.)
    call AddSpecialEffectTargetUnitBJ("overhead", pS[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))], "Abilities\\Spells\\Human\\Resurrect\\ResurrectCaster.mdl")
    set TS[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))] = bj_lastCreatedEffect
    call n6t(1.)
    call CreateNUnitsAtLoc($00000001, $68303343, GetOwningPlayer(pS[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))]), qS[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))], 270.)
    call UnitApplyTimedLifeBJ(1., $42544C46, bj_lastCreatedUnit)
    call SetUnitTimeScalePercent(bj_lastCreatedUnit, 40.)
    call n6t(.25)
    call ForGroupBJ(YS[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))], Tyw)
    call DestroyEffect(TS[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))])
    call SetUnitTimeScalePercent(pS[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))], 100.)
    call IssueImmediateOrderById(pS[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))], $000D0004)
    call RemoveLocation(qS[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))])
    call DestroyGroup(YS[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))])
endfunction
function yEi takes nothing returns nothing
    call ForceAddPlayer(fr, GetOwningPlayer(GetKillingUnit()))
    call QuestMessageBJ(MwS(GetOwningPlayer(GetKillingUnit())), $00000002, "|cffffcc002nd Job Advancement Quest Completed|r.")
endfunction
function yFi takes nothing returns boolean
    return IsUnitType(GetFilterUnit(), UNIT_TYPE_HERO) != false
endfunction
function yKi takes nothing returns boolean
    return GetOrderTargetUnit() == sG and IsUnitInGroup(GetTriggerUnit(), kpu(300., GetUnitLoc(GetOrderTargetUnit())))
endfunction
function R3t takes nothing returns boolean
    return GetUnitTypeId(GetEnumUnit()) == 1429221431
endfunction
function yNu takes nothing returns nothing
    if R3t() then
        call SetUnitInvulnerable(GetEnumUnit(), true)
        call DisableTrigger(GetTriggeringTrigger())
        call EnableTrigger(LY)
    endif
endfunction
function yOu takes nothing returns nothing
    call SetUnitPositionLoc(GetEnumUnit(), vo)
endfunction
function BAw takes nothing returns boolean
    return UnitHasItemOfTypeBJ(GetTriggerUnit(), $49303137)
endfunction
function pbs takes nothing returns boolean
    return UnitHasItemOfTypeBJ(GetTriggerUnit(), $49303135)
endfunction
function yPs takes nothing returns nothing
    if pbs() then
        call ForceRemovePlayer(Kr, GetOwningPlayer(GetTriggerUnit()))
        call ForceRemovePlayer(Cr, GetOwningPlayer(GetTriggerUnit()))
        call ForceRemovePlayer(Fs, GetOwningPlayer(GetTriggerUnit()))
        call ForceRemovePlayer(Vr, GetOwningPlayer(GetTriggerUnit()))
        call PlaySoundBJ(ue)
        call SetHeroLevelBJ(GetTriggerUnit(), $00000001, false)
        call RemoveItem(GetItemOfTypeFromUnitBJ(GetTriggerUnit(), $49303135))
        call DisplayTextToForce(MwS(GetOwningPlayer(GetTriggerUnit())), "|cffffcc00Class Trainer|r : |cff87ceebBerengar handed you a letter of recommendation, eh? Nicely done...Witcher.")
        call ReplaceUnitBJ(GetTriggerUnit(), $48303146, $00000002)
        call SelectUnitForPlayerSingle(bj_lastReplacedUnit, GetOwningPlayer(GetTriggerUnit()))
        call DestroyQuest(Lr[1 + GetPlayerId(GetOwningPlayer(bj_lastReplacedUnit))])
        call SetHeroLevel(bj_lastReplacedUnit, $00000001, true)
        call UnitStripHeroLevel(bj_lastReplacedUnit, $00000001)
    endif
    if BAw() then
        call ForceRemovePlayer(Kr, GetOwningPlayer(GetTriggerUnit()))
        call ForceRemovePlayer(Cr, GetOwningPlayer(GetTriggerUnit()))
        call ForceRemovePlayer(ks, GetOwningPlayer(GetTriggerUnit()))
        call ForceRemovePlayer(Vr, GetOwningPlayer(GetTriggerUnit()))
        call PlaySoundBJ(ue)
        call SetHeroLevelBJ(GetTriggerUnit(), $00000001, false)
        call RemoveItem(GetItemOfTypeFromUnitBJ(GetTriggerUnit(), $49303137))
        call DisplayTextToForce(MwS(GetOwningPlayer(GetTriggerUnit())), "|cffffcc00Class Trainer|r : |cff87ceebYou completed a task for Count Crowley? Just between you and me, the Count's a pretty insane man. He's a demon-hunting fanatic and would do anything to vanquish evil. I hope you know what you're doing; joining his ranks as an Inquisitor yourself.")
        call ReplaceUnitBJ(GetTriggerUnit(), $48303145, $00000002)
        call SelectUnitForPlayerSingle(bj_lastReplacedUnit, GetOwningPlayer(GetTriggerUnit()))
        call DestroyQuest(Lr[1 + GetPlayerId(GetOwningPlayer(bj_lastReplacedUnit))])
        call SetHeroLevel(bj_lastReplacedUnit, $00000001, true)
        call UnitStripHeroLevel(bj_lastReplacedUnit, $00000001)
    endif
endfunction
function yQu takes nothing returns nothing
    call DisplayTimedTextToForce(Rc[$0000000A], 5., "|cffffcc00You are now transferred to the next level.|r")
    call PolledWait(c)
    set vo = GetRectCenter(mO)
    call ForGroupBJ(fc[$0000000A], wbw)
    call ForForce(Rc[$0000000A], ubw)
    call RemoveLocation(vo)
endfunction
function yRS takes nothing returns nothing
    call RemoveItem(GetManipulatedItem())
    set Po[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))] = 2
    call AddSpecialEffectTargetUnitBJ("overhead", GetTriggerUnit(), "Abilities\\Spells\\Other\\Levelup\\LevelupCaster.mdl")
    call DestroyEffect(bj_lastCreatedEffect)
    call DisplayTextToForce(MwS(GetOwningPlayer(GetTriggerUnit())), "|cffffcc00You are now successfully promoted to Journeyman Fisherman.|r")
endfunction
function yTi takes nothing returns boolean
    return true
endfunction
function Hju takes nothing returns boolean
    return GetSpellAbilityId() == 1093677397 or GetSpellAbilityId() == 1093677653 or GetSpellAbilityId() == 1093678936 or GetSpellAbilityId() == 1093677396 or GetSpellAbilityId() == 1093677652 or GetSpellAbilityId() == 1093678935
endfunction
function yUi takes nothing returns boolean
    return IsPlayerInForce(GetOwningPlayer(GetTriggerUnit()), us) == false and Hju()
endfunction
function F5w takes nothing returns boolean
    return GetUnitTypeId(GetEnumUnit()) == 1429221442
endfunction
function yWi takes nothing returns nothing
    if F5w() then
        call SetUnitInvulnerable(GetEnumUnit(), false)
        call DisableTrigger(GetTriggeringTrigger())
        call EnableTrigger(JY)
    endif
endfunction
function B4u takes nothing returns boolean
    return IsPlayerInForce(GetOwningPlayer(GetEventDamageSource()), Sc) == false
endfunction
function n9s takes nothing returns boolean
    return IsPlayerInForce(GetOwningPlayer(GetEventDamageSource()), ic)
endfunction
function yWu takes nothing returns nothing
    if n9s() then
        if B4u() then
            call ForceAddPlayer(Sc, GetOwningPlayer(GetEventDamageSource()))
            set oc[1 + GetPlayerId(GetOwningPlayer(GetEventDamageSource()))] = tc
            set lc[1 + GetPlayerId(GetOwningPlayer(GetEventDamageSource()))] = lc[1 + GetPlayerId(GetOwningPlayer(GetEventDamageSource()))] + GetEventDamage()
        else
            call ForceRemovePlayer(Sc, GetOwningPlayer(GetEventDamageSource()))
            call ForceRemovePlayer(ic, GetOwningPlayer(GetEventDamageSource()))
            set cc[1 + GetPlayerId(GetOwningPlayer(GetEventDamageSource()))] = tc - oc[1 + GetPlayerId(GetOwningPlayer(GetEventDamageSource()))]
            set Oc[1 + GetPlayerId(GetOwningPlayer(GetEventDamageSource()))] = lc[1 + GetPlayerId(GetOwningPlayer(GetEventDamageSource()))] + GetEventDamage()
            set bc[1 + GetPlayerId(GetOwningPlayer(GetEventDamageSource()))] = Oc[1 + GetPlayerId(GetOwningPlayer(GetEventDamageSource()))] / 2.
            call DisplayTimedTextToForce(MwS(GetOwningPlayer(GetEventDamageSource())), 8., "|cffffcc00Damage Dealt|r: " + R2S(bc[1 + GetPlayerId(GetOwningPlayer(GetEventDamageSource()))]))
            call DisplayTimedTextToForce(MwS(GetOwningPlayer(GetEventDamageSource())), 8., "|cffffcc00Time Taken|r: " + R2S(cc[1 + GetPlayerId(GetOwningPlayer(GetEventDamageSource()))]))
            set yc[1 + GetPlayerId(GetOwningPlayer(GetEventDamageSource()))] = bc[1 + GetPlayerId(GetOwningPlayer(GetEventDamageSource()))] / cc[1 + GetPlayerId(GetOwningPlayer(GetEventDamageSource()))]
            call DisplayTimedTextToForce(MwS(GetOwningPlayer(GetEventDamageSource())), 8., "|cffffcc00Damage Per Second|r: " + R2S(yc[1 + GetPlayerId(GetOwningPlayer(GetEventDamageSource()))]))
            set lc[1 + GetPlayerId(GetOwningPlayer(GetEventDamageSource()))] = .0
        endif
    endif
endfunction
function Wns takes string mns returns integer
    local integer Qns
    set DSw[ASw] = mns
    set ASw = ASw + 1
    if NX == 0 then
        if MX < 32768 then
            set MX = MX + 1
            set Qns = MX
            set wC[Qns] = 952
        else
            call tNr("Out of memory: Could not create CallbackSingle_doAfter_Summoner_Tornado.", "when calling error in Summoner_Tornado, line 40")
            set Qns = 0
        endif
    else
        set NX = NX - 1
        set Qns = BX[NX]
        set wC[Qns] = 952
    endif
    set ASw = ASw - 1
    return Qns
endfunction
function dLr takes string iLr returns nothing
    local unit SLr
    local location cLr
    local real oLr
    local real OLr
    local integer lLr
    local real bLr
    local real yLr
    local real pLr
    local group eLr
    local integer qLr
    local real aLr
    local real nLr
    set DSw[ASw] = iLr
    set ASw = ASw + 1
    set SLr = GetTriggerUnit()
    set cLr = GetSpellTargetLoc()
    set aLr = lOu(cLr)
    set nLr = hcw
    set oLr = aLr
    set OLr = nLr
    call xVi(cLr)
    set lLr = gir(SLr, xk)
    set bLr = wJ + uJ * lLr
    set yLr = MH * lLr
    set pLr = lLr * tJ * iJ
    set eLr = qRr(SLr, rJ + sJ, sJ, Mri(QVt(ANw(SLr), XSw, oLr, OLr)), false, null, "when calling getUnitsInDirection in Summoner_Tornado, line 39")
    set qLr = Wns("when calling alloc_CallbackSingle_doAfter_Summoner_Tornado in Summoner_Tornado, line 40")
    call RUs(qLr)
    set vsw[qLr] = eLr
    set msw[qLr] = SLr
    set Qsw[qLr] = yLr
    set Wsw[qLr] = bLr
    set Esw[qLr] = pLr
    call Ybr(.33, qLr, "when calling doAfter in Summoner_Tornado, line 40")
    set ASw = ASw - 1
    set SLr = null
    set cLr = null
    set eLr = null
endfunction
function yYS takes nothing returns nothing
    set ASw = 0
    call dLr("via function reference Summoner_Tornado, line 50")
endfunction
function Eqs takes string Qqs returns integer
    local integer Wqs
    set DSw[ASw] = Qqs
    set ASw = ASw + 1
    if NX == 0 then
        if MX < 32768 then
            set MX = MX + 1
            set Wqs = MX
            set wC[Wqs] = 843
        else
            call tNr("Out of memory: Could not create CallbackSingle_doAfter_Imp2.", "when calling error in Imp2, line 158")
            set Wqs = 0
        endif
    else
        set NX = NX - 1
        set Wqs = BX[NX]
        set wC[Wqs] = 843
    endif
    set ASw = ASw - 1
    return Wqs
endfunction
function G4s takes string T4s returns integer
    local integer Y4s
    set DSw[ASw] = T4s
    set ASw = ASw + 1
    if NX == 0 then
        if MX < 32768 then
            set MX = MX + 1
            set Y4s = MX
            set wC[Y4s] = 836
        else
            call tNr("Out of memory: Could not create CallbackSingle_doAfter_Imp2.", "when calling error in Imp2, line 117")
            set Y4s = 0
        endif
    else
        set NX = NX - 1
        set Y4s = BX[NX]
        set wC[Y4s] = 836
    endif
    set ASw = ASw - 1
    return Y4s
endfunction
function Hmt takes string Amt returns integer
    local integer Dmt
    set DSw[ASw] = Amt
    set ASw = ASw + 1
    if NX == 0 then
        if MX < 32768 then
            set MX = MX + 1
            set Dmt = MX
            set wC[Dmt] = 847
        else
            call tNr("Out of memory: Could not create CallbackSingle_doAfter_Imp2.", "when calling error in Imp2, line 172")
            set Dmt = 0
        endif
    else
        set NX = NX - 1
        set Dmt = BX[NX]
        set wC[Dmt] = 847
    endif
    set ASw = ASw - 1
    return Dmt
endfunction
function Hpu takes nothing returns boolean
    return ni == 1
endfunction
function ILr takes string ZLr returns integer
    local integer ULr
    set DSw[ASw] = ZLr
    set ASw = ASw + 1
    if NX == 0 then
        if MX < 32768 then
            set MX = MX + 1
            set ULr = MX
            set wC[ULr] = 841
        else
            call tNr("Out of memory: Could not create CallbackSingle_doAfter_Imp2.", "when calling error in Imp2, line 144")
            set ULr = 0
        endif
    else
        set NX = NX - 1
        set ULr = BX[NX]
        set wC[ULr] = 841
    endif
    set ASw = ASw - 1
    return ULr
endfunction
function KZr takes nothing returns boolean
    return ni == 7
endfunction
function OLs takes string cLs returns integer
    local integer oLs
    set DSw[ASw] = cLs
    set ASw = ASw + 1
    if NX == 0 then
        if MX < 32768 then
            set MX = MX + 1
            set oLs = MX
            set wC[oLs] = 839
        else
            call tNr("Out of memory: Could not create CallbackSingle_doAfter_Imp2.", "when calling error in Imp2, line 132")
            set oLs = 0
        endif
    else
        set NX = NX - 1
        set oLs = BX[NX]
        set wC[oLs] = 839
    endif
    set ASw = ASw - 1
    return oLs
endfunction
function QMi takes string vMi returns integer
    local integer mMi
    set DSw[ASw] = vMi
    set ASw = ASw + 1
    if NX == 0 then
        if MX < 32768 then
            set MX = MX + 1
            set mMi = MX
            set wC[mMi] = 842
        else
            call tNr("Out of memory: Could not create CallbackSingle_doAfter_Imp2.", "when calling error in Imp2, line 156")
            set mMi = 0
        endif
    else
        set NX = NX - 1
        set mMi = BX[NX]
        set wC[mMi] = 842
    endif
    set ASw = ASw - 1
    return mMi
endfunction
function RSS takes nothing returns boolean
    return ni == 6
endfunction
function W2w takes nothing returns boolean
    return ni == 2
endfunction
function Xmt takes string Kmt returns integer
    local integer Lmt
    set DSw[ASw] = Kmt
    set ASw = ASw + 1
    if NX == 0 then
        if MX < 32768 then
            set MX = MX + 1
            set Lmt = MX
            set wC[Lmt] = 838
        else
            call tNr("Out of memory: Could not create CallbackSingle_doAfter_Imp2.", "when calling error in Imp2, line 127")
            set Lmt = 0
        endif
    else
        set NX = NX - 1
        set Lmt = BX[NX]
        set wC[Lmt] = 838
    endif
    set ASw = ASw - 1
    return Lmt
endfunction
function aNu takes string eNu returns integer
    local integer qNu
    set DSw[ASw] = eNu
    set ASw = ASw + 1
    if NX == 0 then
        if MX < 32768 then
            set MX = MX + 1
            set qNu = MX
            set wC[qNu] = 837
        else
            call tNr("Out of memory: Could not create CallbackSingle_doAfter_Imp2.", "when calling error in Imp2, line 122")
            set qNu = 0
        endif
    else
        set NX = NX - 1
        set qNu = BX[NX]
        set wC[qNu] = 837
    endif
    set ASw = ASw - 1
    return qNu
endfunction
function lSt takes nothing returns boolean
    return ni == 4
endfunction
function lTu takes nothing returns boolean
    return ni == 3
endfunction
function q5i takes string p5i returns integer
    local integer e5i
    set DSw[ASw] = p5i
    set ASw = ASw + 1
    if NX == 0 then
        if MX < 32768 then
            set MX = MX + 1
            set e5i = MX
            set wC[e5i] = 835
        else
            call tNr("Out of memory: Could not create CallbackSingle_doAfter_Imp2.", "when calling error in Imp2, line 112")
            set e5i = 0
        endif
    else
        set NX = NX - 1
        set e5i = BX[NX]
        set wC[e5i] = 835
    endif
    set ASw = ASw - 1
    return e5i
endfunction
function q9u takes string p9u returns integer
    local integer e9u
    set DSw[ASw] = p9u
    set ASw = ASw + 1
    if NX == 0 then
        if MX < 32768 then
            set MX = MX + 1
            set e9u = MX
            set wC[e9u] = 844
        else
            call tNr("Out of memory: Could not create CallbackSingle_doAfter_Imp2.", "when calling error in Imp2, line 160")
            set e9u = 0
        endif
    else
        set NX = NX - 1
        set e9u = BX[NX]
        set wC[e9u] = 844
    endif
    set ASw = ASw - 1
    return e9u
endfunction
function qfu takes string pfu returns integer
    local integer efu
    set DSw[ASw] = pfu
    set ASw = ASw + 1
    if NX == 0 then
        if MX < 32768 then
            set MX = MX + 1
            set efu = MX
            set wC[efu] = 840
        else
            call tNr("Out of memory: Could not create CallbackSingle_doAfter_Imp2.", "when calling error in Imp2, line 140")
            set efu = 0
        endif
    else
        set NX = NX - 1
        set efu = BX[NX]
        set wC[efu] = 840
    endif
    set ASw = ASw - 1
    return efu
endfunction
function vSi takes string jSi returns integer
    local integer xSi
    set DSw[ASw] = jSi
    set ASw = ASw + 1
    if NX == 0 then
        if MX < 32768 then
            set MX = MX + 1
            set xSi = MX
            set wC[xSi] = 848
        else
            call tNr("Out of memory: Could not create CallbackSingle_doAfter_Imp2.", "when calling error in Imp2, line 181")
            set xSi = 0
        endif
    else
        set NX = NX - 1
        set xSi = BX[NX]
        set wC[xSi] = 848
    endif
    set ASw = ASw - 1
    return xSi
endfunction
function vkr takes string jkr returns integer
    local integer xkr
    set DSw[ASw] = jkr
    set ASw = ASw + 1
    if rC == 0 then
        if sC < 32768 then
            set sC = sC + 1
            set xkr = sC
            set tC[xkr] = 650
        else
            call tNr("Out of memory: Could not create CallbackCounted_doPeriodicallyCounted_Imp2.", "when calling error in Imp2, line 176")
            set xkr = 0
        endif
    else
        set rC = rC - 1
        set xkr = uC[rC]
        set tC[xkr] = 650
    endif
    set ASw = ASw - 1
    return xkr
endfunction
function was takes string Nqs returns integer
    local integer Mqs
    set DSw[ASw] = Nqs
    set ASw = ASw + 1
    if NX == 0 then
        if MX < 32768 then
            set MX = MX + 1
            set Mqs = MX
            set wC[Mqs] = 846
        else
            call tNr("Out of memory: Could not create CallbackSingle_doAfter_Imp2.", "when calling error in Imp2, line 170")
            set Mqs = 0
        endif
    else
        set NX = NX - 1
        set Mqs = BX[NX]
        set wC[Mqs] = 846
    endif
    set ASw = ASw - 1
    return Mqs
endfunction
function woi takes string Nci returns integer
    local integer Mci
    set DSw[ASw] = Nci
    set ASw = ASw + 1
    if NX == 0 then
        if MX < 32768 then
            set MX = MX + 1
            set Mci = MX
            set wC[Mci] = 834
        else
            call tNr("Out of memory: Could not create CallbackSingle_doAfter_Imp2.", "when calling error in Imp2, line 107")
            set Mci = 0
        endif
    else
        set NX = NX - 1
        set Mci = BX[NX]
        set wC[Mci] = 834
    endif
    set ASw = ASw - 1
    return Mci
endfunction
function xFS takes nothing returns boolean
    return ni == 5
endfunction
function yIs takes string lIs returns integer
    local integer bIs
    set DSw[ASw] = lIs
    set ASw = ASw + 1
    if NX == 0 then
        if MX < 32768 then
            set MX = MX + 1
            set bIs = MX
            set wC[bIs] = 845
        else
            call tNr("Out of memory: Could not create CallbackSingle_doAfter_Imp2.", "when calling error in Imp2, line 168")
            set bIs = 0
        endif
    else
        set NX = NX - 1
        set bIs = BX[NX]
        set wC[bIs] = 845
    endif
    set ASw = ASw - 1
    return bIs
endfunction
function tWi takes string Wmi returns nothing
    local real Emi
    local real Zmi
    local integer Umi
    local integer Imi
    local unit Pmi
    local unit Ami
    local integer Dmi
    local integer Hmi
    local unit Jmi
    local unit Kmi
    local integer Lmi
    local integer Xmi
    local unit Cmi
    local unit Vmi
    local integer Bmi
    local integer Nmi
    local unit Mmi
    local unit wQi
    local integer uQi
    local integer rQi
    local unit sQi
    local unit tQi
    local integer iQi
    local integer SQi
    local unit cQi
    local unit oQi
    local integer OQi
    local integer lQi
    local integer bQi
    local unit yQi
    local unit pQi
    local unit eQi
    local group qQi
    local group aQi
    local unit nQi
    local player dQi
    local integer fQi
    local integer RQi
    local integer TQi
    local location YQi
    local integer GQi
    local integer gQi
    local integer hQi
    local integer FQi
    local integer kQi
    local real jQi
    local real xQi
    local real vQi
    local real mQi
    local real QQi
    local real WQi
    local real EQi
    local real ZQi
    local real UQi
    local real IQi
    local real PQi
    local real AQi
    local real DQi
    local real HQi
    local real JQi
    local real KQi
    local real LQi
    local real XQi
    local real CQi
    local real VQi
    local real BQi
    local real NQi
    local real MQi
    local real wWi
    local real uWi
    local real rWi
    local real sWi
    set DSw[ASw] = Wmi
    set ASw = ASw + 1
    call DisableTrigger(GetTriggeringTrigger())
    call DisableTrigger(YR)
    call Hus(di)
    set Ti = 0
    set IQi = oQu(by)
    set PQi = Gcw
    set Emi = IQi
    set Zmi = PQi
    if Hpu() then
        set Umi = 0
        loop
            exitwhen Umi > 17
            set jQi = .05 * Umi
            set Imi = woi("when calling alloc_CallbackSingle_doAfter_Imp2 in Imp2, line 107")
            call RUs(Imi)
            set AQi = Emi
            set DQi = Zmi
            set x8[Imi] = AQi
            set v8[Imi] = DQi
            call Ybr(jQi, Imi, "when calling doAfter in Imp2, line 107")
            set Umi = Umi + 1
        endloop
        set Pmi = dps(aD[PLAYER_NEUTRAL_AGGRESSIVE], l2s(Iji("n02N", "when calling unObfuscate in Imp2, line 109"), "when calling fromRawCode in Imp2, line 109"), oQu(oy), Gcw, bj_UNIT_FACING)
        call Ggr(Pmi)
        set Ami = Pmi
        call v0r(Ami, true)
    elseif W2w() then
        set Dmi = 0
        loop
            exitwhen Dmi > 17
            set xQi = .05 * Dmi
            set Hmi = q5i("when calling alloc_CallbackSingle_doAfter_Imp2 in Imp2, line 112")
            call RUs(Hmi)
            set HQi = Emi
            set JQi = Zmi
            set m8[Hmi] = HQi
            set Q8[Hmi] = JQi
            call Ybr(xQi, Hmi, "when calling doAfter in Imp2, line 112")
            set Dmi = Dmi + 1
        endloop
        set Jmi = dps(aD[PLAYER_NEUTRAL_AGGRESSIVE], l2s(Iji("n02M", "when calling unObfuscate in Imp2, line 114"), "when calling fromRawCode in Imp2, line 114"), oQu(oy), Gcw, bj_UNIT_FACING)
        call Ggr(Jmi)
        set Kmi = Jmi
        call v0r(Kmi, true)
    elseif lTu() then
        set Lmi = 0
        loop
            exitwhen Lmi > 17
            set vQi = .05 * Lmi
            set Xmi = G4s("when calling alloc_CallbackSingle_doAfter_Imp2 in Imp2, line 117")
            call RUs(Xmi)
            set KQi = Emi
            set LQi = Zmi
            set W8[Xmi] = KQi
            set E8[Xmi] = LQi
            call Ybr(vQi, Xmi, "when calling doAfter in Imp2, line 117")
            set Lmi = Lmi + 1
        endloop
        set Cmi = dps(aD[PLAYER_NEUTRAL_AGGRESSIVE], l2s(Iji("n02L", "when calling unObfuscate in Imp2, line 119"), "when calling fromRawCode in Imp2, line 119"), oQu(oy), Gcw, bj_UNIT_FACING)
        call Ggr(Cmi)
        set Vmi = Cmi
        call v0r(Vmi, true)
    elseif lSt() then
        set Bmi = 0
        loop
            exitwhen Bmi > 17
            set mQi = .05 * Bmi
            set Nmi = aNu("when calling alloc_CallbackSingle_doAfter_Imp2 in Imp2, line 122")
            call RUs(Nmi)
            set XQi = Emi
            set CQi = Zmi
            set Z8[Nmi] = XQi
            set U8[Nmi] = CQi
            call Ybr(mQi, Nmi, "when calling doAfter in Imp2, line 122")
            set Bmi = Bmi + 1
        endloop
        set Mmi = dps(aD[PLAYER_NEUTRAL_AGGRESSIVE], l2s(Iji("n02O", "when calling unObfuscate in Imp2, line 124"), "when calling fromRawCode in Imp2, line 124"), oQu(oy), Gcw, bj_UNIT_FACING)
        call Ggr(Mmi)
        set wQi = Mmi
        call v0r(wQi, true)
    elseif xFS() then
        set uQi = 0
        loop
            exitwhen uQi > 17
            set QQi = .05 * uQi
            set rQi = Xmt("when calling alloc_CallbackSingle_doAfter_Imp2 in Imp2, line 127")
            call RUs(rQi)
            set VQi = Emi
            set BQi = Zmi
            set I8[rQi] = VQi
            set P8[rQi] = BQi
            call Ybr(QQi, rQi, "when calling doAfter in Imp2, line 127")
            set uQi = uQi + 1
        endloop
        set sQi = dps(aD[PLAYER_NEUTRAL_AGGRESSIVE], l2s(Iji("n02J", "when calling unObfuscate in Imp2, line 129"), "when calling fromRawCode in Imp2, line 129"), oQu(oy), Gcw, bj_UNIT_FACING)
        call Ggr(sQi)
        set tQi = sQi
        call v0r(tQi, true)
    elseif RSS() then
        set iQi = 0
        loop
            exitwhen iQi > 17
            set WQi = .05 * iQi
            set SQi = OLs("when calling alloc_CallbackSingle_doAfter_Imp2 in Imp2, line 132")
            call RUs(SQi)
            set NQi = Emi
            set MQi = Zmi
            set A8[SQi] = NQi
            set D8[SQi] = MQi
            call Ybr(WQi, SQi, "when calling doAfter in Imp2, line 132")
            set iQi = iQi + 1
        endloop
        set cQi = dps(aD[PLAYER_NEUTRAL_AGGRESSIVE], l2s(Iji("n02K", "when calling unObfuscate in Imp2, line 134"), "when calling fromRawCode in Imp2, line 134"), oQu(oy), Gcw, bj_UNIT_FACING)
        call Ggr(cQi)
        set oQi = cQi
        call v0r(oQi, true)
    elseif KZr() then
        call DisplayTimedTextToForce(Rc[$0000000B], 10., "|cffffcc00You have successfully completed the 6 stages! Prepare for the final battle!|r")
        call DisableTrigger(nR)
        set OQi = 0
        loop
            exitwhen OQi > 4
            set EQi = .05 * OQi
            set lQi = qfu("when calling alloc_CallbackSingle_doAfter_Imp2 in Imp2, line 140")
            call RUs(lQi)
            set wWi = Emi
            set uWi = Zmi
            set H8[lQi] = wWi
            set J8[lQi] = uWi
            call Ybr(EQi, lQi, "when calling doAfter in Imp2, line 140")
            set ZQi = .05 * OQi + 4. * .05
            set bQi = ILr("when calling alloc_CallbackSingle_doAfter_Imp2 in Imp2, line 144")
            call RUs(bQi)
            set rWi = Emi
            set sWi = Zmi
            set K8[bQi] = rWi
            set L8[bQi] = sWi
            call Ybr(ZQi, bQi, "when calling doAfter in Imp2, line 144")
            set OQi = OQi + 1
        endloop
        set yQi = dps(aD[PLAYER_NEUTRAL_AGGRESSIVE], l2s(Iji("U00C", "when calling unObfuscate in Imp2, line 149"), "when calling fromRawCode in Imp2, line 149"), oQu(oy), Gcw, bj_UNIT_FACING)
        call Yis(yQi, $00000118, false)
        set pQi = yQi
        call Ggr(pQi)
        set eQi = pQi
        call v0r(eQi, true)
        set qQi = Dit(lx, "when calling getUnitsInRect in Imp2, line 151")
        set aQi = XbS(qQi)
        loop
            exitwhen not hJw(aQi)
            set nQi = tPr(aQi)
            set dQi = eDs(nQi)
            if GpS(gQ, hgr(dQi), "when calling has in Imp2, line 154") then
    call dii("Prepare yourself for the fight!", 3., eDs(nQi))
    set fQi = QMi("when calling alloc_CallbackSingle_doAfter_Imp2 in Imp2, line 156")
    call RUs(fQi)
    set X8[fQi] = nQi
    call Ybr(.2, fQi, "when calling doAfter in Imp2, line 156")
    set RQi = Eqs("when calling alloc_CallbackSingle_doAfter_Imp2 in Imp2, line 158")
    call RUs(RQi)
    set C8[RQi] = nQi
    call Ybr(1.2, RQi, "when calling doAfter in Imp2, line 158")
    set TQi = q9u("when calling alloc_CallbackSingle_doAfter_Imp2 in Imp2, line 160")
    call RUs(TQi)
    set V8[TQi] = nQi
    call Ybr(2.2, TQi, "when calling doAfter in Imp2, line 160")
            else
    call Ggr(nQi)
    call v0r(nQi, true)
            endif
        endloop
        call lxs(aQi)
        call Sju(qQi, "when calling release in Imp2, line 165")
        set YQi = LMt(oQu(jo[$0000000B]), Gcw)
        set GQi = yIs("when calling alloc_CallbackSingle_doAfter_Imp2 in Imp2, line 168")
        call RUs(GQi)
        set B8[GQi] = YQi
        call Ybr(.2, GQi, "when calling doAfter in Imp2, line 168")
        set gQi = was("when calling alloc_CallbackSingle_doAfter_Imp2 in Imp2, line 170")
        call RUs(gQi)
        set N8[gQi] = YQi
        call Ybr(1.2, gQi, "when calling doAfter in Imp2, line 170")
        set hQi = Hmt("when calling alloc_CallbackSingle_doAfter_Imp2 in Imp2, line 172")
        call RUs(hQi)
        set M8[hQi] = YQi
        call Ybr(2.2, hQi, "when calling doAfter in Imp2, line 172")
        set UQi = 3. / 30.
        set FQi = vkr("when calling alloc_CallbackCounted_doPeriodicallyCounted_Imp2 in Imp2, line 176")
        call Inr(FQi)
        call l5s(UQi, $0000001E, FQi, "when calling doPeriodicallyCounted in Imp2, line 176")
    endif
    set kQi = vSi("when calling alloc_CallbackSingle_doAfter_Imp2 in Imp2, line 181")
    call RUs(kQi)
    call Ybr(3., kQi, "when calling doAfter in Imp2, line 181")
    set ASw = ASw - 1
    set Pmi = null
    set Ami = null
    set Jmi = null
    set Kmi = null
    set Cmi = null
    set Vmi = null
    set Mmi = null
    set wQi = null
    set sQi = null
    set tQi = null
    set cQi = null
    set oQi = null
    set yQi = null
    set pQi = null
    set eQi = null
    set qQi = null
    set aQi = null
    set nQi = null
    set dQi = null
    set YQi = null
endfunction
function ybs takes nothing returns nothing
    set ASw = 0
    call tWi("via function reference Imp2, line 192")
endfunction
function h2w takes string a2w returns nothing
    local unit n2w
    local player d2w
    local integer f2w
    local item R2w
    local item T2w
    local item Y2w
    local item G2w
    local item g2w
    set DSw[ASw] = a2w
    set ASw = ASw + 1
    set n2w = GetTriggerUnit()
    set d2w = eDs(n2w)
    set f2w = hgr(d2w)
    set R2w = GetOrderTargetItem()
    if Jyr(fI, f2w, "when calling has in Items_Pickup_Drop, line 841") then
        call tdu(s2r(wps(fI, f2w, "when calling get in Items_Pickup_Drop, line 842"), "when calling itemFromIndex in Items_Pickup_Drop, line 842"))
        call GVw(fI, f2w, Xdu(null), "when calling put in Items_Pickup_Drop, line 843")
    endif
    if Jyr(dI, f2w, "when calling has in Items_Pickup_Drop, line 844") then
        call GVw(dI, f2w, Xdu(null), "when calling put in Items_Pickup_Drop, line 845")
    endif
    if R2w != null and ait(R2w, "when calling isStackable in Items_Pickup_Drop, line 847") then
        call GVw(dI, f2w, Xdu(R2w), "when calling put in Items_Pickup_Drop, line 848")
        set Y2w = rgt(q3t(R2w), 0., 0.)
        call Rnu(Y2w, wps(C_r(RI, f2w, "when calling get in Items_Pickup_Drop, line 849"), Xdu(R2w), "when calling get in Items_Pickup_Drop, line 849"))
        set G2w = Y2w
        call jXt(G2w, false)
        set g2w = G2w
        call IOt(g2w, v9S(R2w), true)
        set T2w = g2w
        call GVw(C_r(RI, f2w, "when calling get in Items_Pickup_Drop, line 850"), Xdu(T2w), brs(T2w), "when calling put in Items_Pickup_Drop, line 850")
        call GVw(fI, f2w, Xdu(T2w), "when calling put in Items_Pickup_Drop, line 851")
    endif
    set ASw = ASw - 1
    set n2w = null
    set d2w = null
    set R2w = null
    set T2w = null
    set Y2w = null
    set G2w = null
    set g2w = null
endfunction
function yfS takes nothing returns nothing
    set ASw = 0
    call h2w("via function reference Items_Pickup_Drop, line 836")
endfunction
function lpS takes string OpS returns nothing
    set DSw[ASw] = OpS
    set ASw = ASw + 1
    call uCi(GetTriggerUnit(), "when calling imp3MazeCheckDeath in Imp3DragonFortress, line 342")
    set ASw = ASw - 1
endfunction
function yfi takes nothing returns nothing
    set ASw = 0
    call lpS("via function reference Imp3DragonFortress, line 1644")
endfunction
function ygt takes nothing returns boolean
    return GetUnitTypeId(GetOrderTargetUnit()) == mS and IsUnitInGroup(GetTriggerUnit(), kpu(300., GetUnitLoc(GetOrderTargetUnit()))) and IsPlayerInForce(GetOwningPlayer(GetTriggerUnit()), IS[$0000000F]) and HS[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))] >= 50
endfunction
function KEi takes string JEi returns boolean
    set DSw[ASw] = JEi
    set ASw = ASw + 1
    set ZX = jts("when calling new_HashMap in Whirlwind_Effect, line 10")
    set UX = jts("when calling new_HashMap in Whirlwind_Effect, line 11")
    set IX = 3.
    set PX = 20
    call TriggerAddCondition(xf, Condition(KEw))
    call TriggerAddAction(xf, LEw)
    set ASw = ASw - 1
    return true
endfunction
function yhi takes nothing returns boolean
    set ASw = 0
    return KEi("via function reference Whirlwind_Effect, line 1")
endfunction
function yot takes nothing returns nothing
    call ForceRemovePlayer(rt, GetOwningPlayer(GetTriggerUnit()))
    call ForceRemovePlayer(ii, GetOwningPlayer(GetTriggerUnit()))
    call DisplayTextToForce(MwS(GetOwningPlayer(GetTriggerUnit())), "|cffffcc00Fenrir|r : |cff87ceebNicely done. Very well, I shall teach you the secrets of runic shapeshifting, and the highest level of animalism techniques as well. Be cautious though; strength is more than just killing. You must be able to employ your skills correctly, for when you shapeshift into a wolf, you will no longer be able to shapeshift into a bear until your wolf timer ends, which may place you in danger should you come face to face with a terrible boss.")
    call DestroyQuest(st[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))])
    set st[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))] = null
    call SetHeroLevelBJ(GetTriggerUnit(), $00000001, false)
    call ReplaceUnitBJ(GetTriggerUnit(), $48303252, $00000002)
    call SelectUnitForPlayerSingle(bj_lastReplacedUnit, GetOwningPlayer(GetTriggerUnit()))
    call SetHeroLevel(bj_lastReplacedUnit, $00000001, true)
    call UnitStripHeroLevel(bj_lastReplacedUnit, $00000001)
endfunction
function P5s takes nothing returns boolean
    return IsUnitEnemy(GetFilterUnit(), GetOwningPlayer(pS[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))]))
endfunction
function rys takes nothing returns boolean
    return IsUnitAliveBJ(GetFilterUnit())
endfunction
function yps takes nothing returns boolean
    return GetBooleanAnd(P5s(), rys())
endfunction
function yst takes nothing returns nothing
    set bS = lVs(GetTriggerPlayer(), Condition(clw))
    call ForGroupBJ(bS, olw)
    call DestroyGroup(bS)
endfunction
function yts takes nothing returns boolean
    set pI = 2147483647
    set eI =- 2147483648
    return true
endfunction
function Xii takes nothing returns nothing
    set S = 0.
    set c = 0.
    set O = 0.85
    set l = 1. - O
    set b = 1000
    set y = 1800
    set p = 3500
    set e = 4750
    set q = 7500
    set a = 30000
    set n = 11000
    set d = 60000
    set f = 5000
    set R = 80000
    set T = 50000
    set Y = 90000
    set G = 55000
    set g = 40000
    set h = 60000
    set F = 60000
    set k = 110000
    set j = 150000
    set x = 60000
    set v = 150000
    set m = 60000
    set Q = 210000
    set W = 3
    set E = 3
    set Z = 8
    set U = 3
    set I = 2
    set P = 2
    set A = 5
    set D = 1
    set H = 3
    set J = 3
    set K = 2
    set L = 3
    set X = 4
    set C = 3
    set bw = false
    set yw = 1095331192
    set pw = 0
    set ew = Player($0000000A)
    set qw = Player($0000000B)
    set aw = "|cff00BFFFTwilight's Eve " + "R4.18.4"
    set nw = "TeveF_R4"
    set dw = 0.
    set fw = 0.
    set Rw = 0.
    set Tw = 0.
    set Yw = 0.
    set Gw = 0.
    set gw = 0.
    set hw = 0.
    set Fw = 0.
    set kw = 0
    set jw = 0
    set xw = 0
    set vw = 8000
    set mw = 20.
    set Qw = 20.
    set Ww = InitGameCache("twaf.w3v")
    set Ew = ""
    set Zw = ""
    set Uw = ""
    set Iw = ""
    set Pw = ""
    set Aw = ""
    set Dw = ""
    set Hw = ""
    set Jw = ""
    set Kw = ""
    set Lw = ""
    set Xw = ""
    set Cw = ""
    set Vw = ""
    set Bw = false
    set Nw = false
    set Mw = false
    set wu = false
    set uu = false
    set ru = false
    set su = false
    set tu = false
    set iu = false
    set Su = false
    set cu = false
    set ou = false
    set Ou = false
    set lu = false
    set bu = true
    set yu = false
    set pu = false
    set eu = false
    set qu = false
    set au = false
    set nu = false
    set du = false
    set fu = false
    set Ru = false
    call CreateTrigger()
    set Tu = CreateTrigger()
    set Yu = CreateTrigger()
    set Gu = CreateTrigger()
    set Qu = null
    set Wu = null
    set Eu = ""
    set Uu = 0
    set Pu = false
    set Ku = 0
    set Lu = ""
    set Xu = false
    set Cu = false
    set Vu = 0
    set Bu = 0
    set Nu = null
    set Mu = 0
    set wr = false
    set sr = 0
    set tr = null
    set ir = 0
    set lr = 0
    set nr = null
    set fr = null
    set Tr = null
    set Yr = null
    set Gr = null
    set Fr = null
    set kr = null
    set jr = null
    set Wr = null
    set Zr = null
    set Kr = null
    set Xr = null
    set Cr = null
    set Vr = null
    set Br = null
    set Nr = null
    set Mr = null
    set ws = null
    set us = null
    set rs = null
    set ss = null
    set ts = null
    set ls = null
    set ys = null
    set ps = null
    set es = null
    set qs = 0
    set as = null
    set ns = null
    set fs = null
    set Rs = null
    set Ts = null
    set Ys = null
    set Gs = null
    set gs = null
    set hs = null
    set Fs = null
    set ks = null
    set js = null
    set xs = null
    set Ws = null
    set Es = null
    set Zs = null
    set Us = CreateForce()
    set Cs = null
    set Bs = null
    set Ns = null
    set Ms = null
    set wt = null
    set ut = null
    set rt = null
    set tt = null
    set ct = 0
    set ot = null
    set Ot = null
    set lt = null
    set yt = null
    set pt = null
    set et = null
    set qt = null
    set at = null
    set nt = null
    set Rt = null
    set Tt = null
    set Yt = null
    set Gt = null
    set gt = null
    set ht = null
    set Ft = null
    set jt = null
    set xt = null
    set mt = null
    set It = null
    set At = null
    set Dt = 0
    set Kt = null
    set Lt = null
    set Xt = null
    set Ct = null
    set Vt = null
    set ri = 0.
    set ti = null
    set ii = null
    set bi = null
    set yi = 0
    set pi = 0
    set ei = null
    set qi = 0
    set ni = 0
    set di = null
    set fi = null
    set Ri = 0
    set Ti = 0
    set Yi = null
    set Gi = null
    set gi = null
    set hi = 0
    set Fi = null
    set ki = 0.
    set ji = 0.
    set vi = false
    set mi = null
    set Qi = 0
    set Ei = 0
    set Ni = 0
    set Mi = 0
    set uS = null
    set rS = null
    set tS = null
    set SS = null
    set cS = null
    set OS = null
    set lS = null
    set bS = null
    set yS = null
    set jS = null
    set mS = 0
    set US = null
    set XS = 0
    set CS = 0
    set tc = 0.
    set ic = null
    set Sc = null
    set Tc = null
    set Yc = null
    set Gc = null
    set kc = null
    set jc = null
    set xc = 0
    set vc = null
    set mc = null
    set Qc = null
    set Wc = null
    set Ec = null
    set Zc = null
    set Uc = null
    set Dc = false
    set Jc = 0
    set Kc = null
    set Lc = null
    set Xc = null
    set Cc = 0
    set Vc = null
    set Nc = 0
    set uo = null
    set so = null
    set io = null
    set So = 0.
    set co = 0.
    set oo = null
    set Oo = null
    set lo = null
    set yo = null
    set do = null
    set fo = null
    set Ro = null
    set To = 0.
    set Yo = null
    set go = 0
    set ho = 0
    set ko = 0
    set xo = 0
    set vo = null
    set mo = null
    set Qo = 0
    set Io = 0
    set Do = null
    set Ho = null
    set Jo = null
    set Ko = null
    set Lo = null
    set Xo = null
    set Co = null
    set Vo = null
    set Bo = null
    set No = null
    set wO = null
    set uO = null
    set rO = null
    set sO = null
    set iO = null
    set oO = 0
    set OO = 0
    set lO = 0
    set yO = null
    set pO = null
    set eO = null
    set qO = 0
    set aO = null
    set nO = null
    set fO = null
    set TO = null
    set YO = null
    set GO = null
    set gO = null
    set hO = null
    set FO = null
    set kO = null
    set jO = null
    set xO = null
    set vO = null
    set mO = null
    set QO = null
    set WO = null
    set EO = null
    set ZO = null
    set UO = null
    set IO = null
    set PO = null
    set AO = null
    set DO = null
    set HO = null
    set JO = null
    set KO = null
    set LO = null
    set XO = null
    set CO = null
    set VO = null
    set BO = null
    set NO = null
    set MO = null
    set wl = null
    set ul = null
    set rl = null
    set sl = null
    set tl = null
    set il = null
    set Sl = null
    set cl = null
    set ol = null
    set Ol = null
    set ll = null
    set bl = null
    set yl = null
    set pl = null
    set el = null
    set ql = null
    set al = null
    set nl = null
    set dl = null
    set fl = null
    set Rl = null
    set Tl = null
    set Yl = null
    set Gl = null
    set gl = null
    set hl = null
    set Fl = null
    set kl = null
    set jl = null
    set xl = null
    set vl = null
    set ml = null
    set Ql = null
    set Wl = null
    set El = null
    set Zl = null
    set Ul = null
    set Il = null
    set Pl = null
    set Al = null
    set Dl = null
    set Hl = null
    set Jl = null
    set Kl = null
    set Ll = null
    set Xl = null
    set Cl = null
    set Vl = null
    set Bl = null
    set Nl = null
    set Ml = null
    set wb = null
    set ub = null
    set rb = null
    set sb = null
    set tb = null
    set ib = null
    set Sb = null
    set cb = null
    set ob = null
    set Ob = null
    set lb = null
    set bb = null
    set yb = null
    set pb = null
    set eb = null
    set qb = null
    set ab = null
    set nb = null
    set db = null
    set fb = null
    set Rb = null
    set Tb = null
    set Yb = null
    set Gb = null
    set gb = null
    set hb = null
    set Fb = null
    set kb = null
    set jb = null
    set xb = null
    set vb = null
    set mb = null
    set Qb = null
    set Wb = null
    set Eb = null
    set Zb = null
    set Ub = null
    set Ib = null
    set Pb = null
    set Ab = null
    set Db = null
    set Hb = null
    set Jb = null
    set Kb = null
    set Lb = null
    set Xb = null
    set Cb = null
    set Vb = null
    set Bb = null
    set Nb = null
    set Mb = null
    set wy = null
    set uy = null
    set ry = null
    set sy = null
    set ty = null
    set iy = null
    set Sy = null
    set cy = null
    set oy = null
    set Oy = null
    set ly = null
    set by = null
    set yy = null
    set py = null
    set ey = null
    set qy = null
    set ay = null
    set ny = null
    set dy = null
    set fy = null
    set Ry = null
    set Ty = null
    set Yy = null
    set Gy = null
    set gy = null
    set hy = null
    set Fy = null
    set ky = null
    set jy = null
    set xy = null
    set vy = null
    set my = null
    set Qy = null
    set Wy = null
    set Ey = null
    set Zy = null
    set Uy = null
    set Iy = null
    set Py = null
    set Ay = null
    set Dy = null
    set Hy = null
    set Jy = null
    set Ky = null
    set Ly = null
    set Xy = null
    set Cy = null
    set Vy = null
    set By = null
    set Ny = null
    set My = null
    set wp = null
    set up = null
    set rp = null
    set sp = null
    set tp = null
    set ip = null
    set Sp = null
    set cp = null
    set op = null
    set Op = null
    set lp = null
    set bp = null
    set yp = null
    set pp = null
    set ep = null
    set qp = null
    set ap = null
    set np = null
    set dp = null
    set fp = null
    set Rp = null
    set Tp = null
    set Yp = null
    set Gp = null
    set gp = null
    set hp = null
    set Fp = null
    set kp = null
    set jp = null
    set xp = null
    set vp = null
    set mp = null
    set Qp = null
    set Wp = null
    set Ep = null
    set Zp = null
    set Up = null
    set Ip = null
    set Pp = null
    set Ap = null
    set Dp = null
    set Hp = null
    set Jp = null
    set Kp = null
    set Lp = null
    set Xp = null
    set Cp = null
    set Vp = null
    set Bp = null
    set Np = null
    set Mp = null
    set we = null
    set ue = null
    set re = null
    set se = null
    set te = null
    set ie = null
    set Se = null
    set ce = null
    set oe = null
    set Oe = null
    set le = null
    set be = null
    set ye = null
    set pe = null
    set ee = null
    set qe = null
    set ae = null
    set ne = null
    set de = null
    set fe = null
    set Re = null
    set Te = null
    set Ye = null
    set Ge = "Sound\\Music\\mp3Music\\Orc3.mp3"
    set ge = null
    set he = null
    set Fe = null
    set ke = null
    set je = "war3mapImported\\54 Battle! [Doom Dragon].mp3"
    set xe = null
    set ve = null
    set me = null
    set Qe = null
    set We = null
    set Ee = null
    set Ze = null
    set Ue = null
    set Ie = null
    set Pe = null
    set Ae = null
    set De = null
    set He = null
    set Je = null
    set Ke = null
    set Le = null
    set Xe = null
    set Ce = null
    set Ve = null
    set Be = null
    set Ne = null
    set Me = null
    set wq = null
    set uq = null
    set rq = null
    set sq = null
    set tq = null
    set iq = null
    set Sq = null
    set cq = null
    set oq = null
    set Oq = null
    set lq = null
    set bq = null
    set yq = null
    set pq = null
    set eq = null
    set qq = null
    set aq = null
    set nq = null
    set dq = null
    set fq = null
    set Rq = null
    set Tq = null
    set Yq = null
    set Gq = null
    set gq = null
    set hq = null
    set Fq = null
    set kq = null
    set jq = null
    set xq = null
    set vq = null
    set mq = null
    set Qq = null
    set Wq = null
    set Eq = null
    set Zq = null
    set Uq = null
    set Iq = null
    set Pq = null
    set Aq = null
    set Dq = null
    set Hq = null
    set Jq = null
    set Kq = null
    set Lq = null
    set Xq = null
    set Cq = null
    set Vq = null
    set Bq = null
    set Nq = null
    set Mq = null
    set wa = null
    set ua = null
    set ra = null
    set sa = null
    set ta = null
    set ia = null
    set Sa = null
    set ca = null
    set oa = null
    set Oa = null
    set la = null
    set ba = null
    set ya = null
    set pa = null
    set ea = null
    set qa = null
    set aa = null
    set na = null
    set da = null
    set fa = null
    set Ra = null
    set Ta = null
    set Ya = null
    set Ga = null
    set ga = null
    set ha = null
    set Fa = null
    set ka = null
    set ja = null
    set xa = null
    set va = null
    set ma = null
    set Qa = null
    set Wa = null
    set Ea = null
    set Za = null
    set Ua = null
    set Ia = null
    set Pa = null
    set Aa = null
    set Da = null
    set Ha = null
    set Ja = null
    set Ka = null
    set La = null
    set Xa = null
    set Ca = null
    set Va = null
    set Ba = null
    set Na = null
    set Ma = null
    set wn = null
    set un = null
    set rn = null
    set sn = null
    set tn = null
    set Sn = null
    set cn = null
    set on = null
    set On = null
    set ln = null
    set bn = null
    set yn = null
    set pn = null
    set en = null
    set qn = null
    set an = null
    set nn = null
    set dn = null
    set fn = null
    set Rn = null
    set Tn = null
    set Yn = null
    set Gn = null
    set gn = null
    set hn = null
    set Fn = null
    set kn = null
    set jn = null
    set xn = null
    set vn = null
    set mn = null
    set Qn = null
    set Wn = null
    set En = null
    set Zn = null
    set Un = null
    set In = null
    set Pn = null
    set An = null
    set Dn = null
    set Hn = null
    set Jn = null
    set Kn = null
    set Ln = null
    set Xn = null
    set Cn = null
    set Vn = null
    set Bn = null
    set Nn = null
    set Mn = null
    set wd = null
    set ud = null
    set rd = null
    set sd = null
    set td = null
    set id = null
    set Sd = null
    set cd = null
    set od = null
    set Od = null
    set ld = null
    set bd = null
    set yd = null
    set pd = null
    set ed = null
    set qd = null
    set ad = null
    set nd = null
    set dd = null
    set fd = null
    set Rd = null
    set Td = null
    set Yd = null
    set Gd = null
    set gd = null
    set hd = null
    set Fd = null
    set kd = null
    set jd = null
    set xd = null
    set vd = null
    set md = null
    set Qd = null
    set Wd = null
    set Ed = null
    set Zd = null
    set Ud = null
    set Id = null
    set Pd = null
    set Ad = null
    set Dd = null
    set Hd = null
    set Jd = null
    set Kd = null
    set Ld = null
    set Xd = null
    set Cd = null
    set Vd = null
    set Bd = null
    set Nd = null
    set Md = null
    set wf = null
    set uf = null
    set rf = null
    set sf = null
    set tf = null
    set Sf = null
    set cf = null
    set of = null
    set Of = null
    set lf = null
    set bf = null
    set yf = null
    set pf = null
    set ef = null
    set qf = null
    set af = null
    set nf = null
    set df = null
    set ff = null
    set Rf = null
    set Tf = null
    set Yf = null
    set Gf = null
    set gf = null
    set hf = null
    set Ff = null
    set kf = null
    set jf = null
    set xf = CreateTrigger()
    set vf = CreateTrigger()
    set mf = CreateTrigger()
    set Qf = null
    set Wf = null
    set Ef = CreateTrigger()
    set Zf = null
    set Uf = null
    set If = null
    set Pf = null
    set Af = null
    set Df = null
    set Hf = null
    set Jf = null
    set Kf = null
    set Lf = null
    set Xf = null
    set Cf = null
    set Vf = null
    set Bf = null
    set Nf = null
    set Mf = null
    set wR = null
    set uR = null
    set rR = null
    set sR = null
    set tR = null
    set iR = null
    set SR = null
    set cR = null
    set oR = null
    set OR = null
    set lR = null
    set bR = null
    set yR = null
    set pR = null
    set eR = null
    set qR = null
    set aR = null
    set nR = null
    set dR = null
    set fR = null
    set RR = null
    set TR = null
    set YR = null
    set GR = null
    set gR = null
    set hR = null
    set FR = null
    set kR = null
    set jR = null
    set xR = null
    set vR = null
    set mR = null
    set QR = null
    set WR = null
    set ER = null
    set ZR = null
    set UR = null
    set IR = null
    set PR = null
    set AR = null
    set DR = null
    set HR = null
    set JR = null
    set KR = null
    set LR = null
    set XR = null
    set CR = null
    set VR = null
    set BR = null
    set NR = null
    set MR = null
    set wT = null
    set uT = null
    set rT = null
    set sT = null
    set tT = null
    set iT = null
    set ST = null
    set cT = null
    set oT = null
    set OT = null
    set lT = null
    set bT = null
    set yT = null
    set pT = null
    set eT = null
    set qT = null
    set aT = null
    set nT = null
    set dT = null
    set fT = null
    set RT = null
    set TT = null
    set YT = null
    set GT = null
    set gT = null
    set hT = null
    set FT = null
    set kT = null
    set jT = null
    set xT = null
    set vT = null
    set mT = null
    set QT = null
    set WT = null
    set ET = null
    set ZT = null
    set UT = null
    set IT = null
    set PT = null
    set AT = null
    set DT = null
    set HT = null
    set JT = null
    set KT = null
    set LT = null
    set XT = null
    set CT = null
    set VT = null
    set BT = null
    set NT = null
    set MT = null
    set wY = null
    set uY = null
    set rY = null
    set sY = null
    set tY = null
    set iY = null
    set SY = null
    set cY = null
    set oY = null
    set OY = null
    set lY = null
    set bY = null
    set yY = null
    set pY = null
    set eY = null
    set qY = null
    set aY = null
    set nY = null
    set dY = null
    set fY = null
    set RY = null
    set TY = null
    set YY = null
    set GY = null
    set gY = null
    set hY = null
    set FY = null
    set kY = null
    set jY = null
    set xY = null
    set vY = null
    set mY = null
    set QY = null
    set WY = null
    set EY = null
    set ZY = null
    set UY = null
    set IY = null
    set PY = null
    set AY = null
    set DY = null
    set HY = null
    set JY = null
    set KY = null
    set LY = null
    set XY = null
    set CY = null
    set VY = null
    set BY = null
    set NY = null
    set MY = null
    set wG = null
    set uG = null
    set rG = null
    set sG = null
    set tG = null
    set iG = null
    set SG = null
    set cG = null
    set oG = null
    set OG = null
    set lG = null
    set bG = null
    set yG = null
    set pG = null
    set eG = null
    set qG = null
    set aG = null
    set nG = null
    set dG = null
    set fG = null
    set RG = null
    set TG = null
    set YG = null
    set GG = null
    set gG = null
    set hG = null
    set FG = null
    set kG = null
    set jG = null
    set xG = null
    set vG = null
    set mG = .0
    set QG = .0
    set WG = null
    set EG = null
    set ZG = null
    set NX = 0
    set MX = 0
    set rC = 0
    set sC = 0
    set SC = 0
    set cC = 0
    set lC = 0
    set bC = 0
    set eC = 0
    set qC = 0
    set dC = 0
    set fC = 0
    set YC = 0
    set GC = 0
    set hC = 0
    set jC = 0
    set xC = 0
    set mC = 0
    set QC = 0
    set EC = 0
    set ZC = 0
    set PC = 0
    set AC = 0
    set HC = 0
    set LC = 0
    set XC = 0
    set BC = 0
    set NC = 0
    set uV = 0
    set rV = 0
    set iV = 0
    set SV = 0
    set OV = 0
    set lV = 0
    set pV = 0
    set eV = 0
    set aV = 0
    set nV = 0
    set RV = 0
    set TV = 0
    set gV = 0
    set hV = 0
    set kV = 0
    set jV = 0
    set vV = 0
    set mV = 0
    set EV = 0
    set ZV = 0
    set IV = 0
    set DV = 0
    set HV = 0
    set LV = 0
    set XV = 0
    set BV = 0
    set NV = 0
    set uB = 0
    set rB = 0
    set iB = 0
    set SB = 0
    set OB = 0
    set lB = 0
    set pB = 0
    set eB = 0
    set aB = 0
    set nB = 0
    set RB = 0
    set TB = 0
    set gB = 0
    set hB = 0
    set jB = 0
    set xB = 0
    set QB = 0
    set WB = 0
    set ZB = 0
    set UB = 0
    set AB = 0
    set DB = 0
    set XB = 0
    set CB = 0
    set BB = 0
    set NB = 0
    set MB = 0
    set rN = 0
    set sN = 0
    set SN = 0
    set cN = 0
    set lN = 0
    set bN = 0
    set eN = 0
    set qN = 0
    set dN = 0
    set fN = 0
    set TN = 0
    set YN = 0
    set gN = 0
    set hN = 0
    set kN = 0
    set jN = 0
    set mN = 0
    set QN = 0
    set ZN = 0
    set UN = 0
    set POw = function idr
    set AOw = function Cbs
    set DOw = function Xvu
    set HOw = function TVs
    set JOw = function Q2w
    set KOw = function jhS
    set LOw = function V_s
    set XOw = function IXs
    set COw = function dOu
    set VOw = function LAi
    set BOw = function cVt
    set NOw = function ghi
    set MOw = function N5w
    set wlw = function yFi
    set ulw = function Cju
    set rlw = function UXs
    set slw = function hMi
    set tlw = function FUu
    set ilw = function qLw
    set Slw = function PZi
    set clw = function M0i
    set olw = function g4i
    set Olw = function UGt
    set llw = function kgS
    set blw = function IZi
    set ylw = function UYr
    set plw = function P1w
    set elw = function DAr
    set qlw = function wWt
    set alw = function bni
    set nlw = function sou
    set dlw = function srS
    set flw = function PMw
    set Rlw = function jEi
    set Tlw = function f0u
    set Ylw = function Gdi
    set Glw = function ONr
    set glw = function ljs
    set hlw = function cDw
    set Flw = function PQu
    set klw = function C7i
    set jlw = function t9t
    set xlw = function rwr
    set vlw = function XLt
    set mlw = function Equ
    set Qlw = function c9S
    set Wlw = function Dai
    set Elw = function Jsr
    set Zlw = function HpS
    set Ulw = function Mfu
    set Ilw = function O6i
    set Plw = function tci
    set Alw = function vLw
    set Dlw = function M2s
    set Hlw = function DUu
    set Jlw = function SBw
    set Klw = function CBi
    set Llw = function bYt
    set Xlw = function Gru
    set Clw = function Z7S
    set Vlw = function U6r
    set Blw = function H3w
    set Nlw = function xAw
    set Mlw = function oVt
    set wbw = function a2r
    set ubw = function XAt
    set rbw = function aci
    set sbw = function Ems
    set tbw = function KHt
    set ibw = function owr
    set Sbw = function q7w
    set cbw = function BYS
    set obw = function xvs
    set Obw = function kFi
    set lbw = function R1i
    set bbw = function yOu
    set ybw = function PuS
    set pbw = function PCt
    set ebw = function pIs
    set qbw = function Yas
    set abw = function ehu
    set nbw = function kcr
    set dbw = function pci
    set fbw = function uUu
    set Rbw = function POt
    set Tbw = function y8r
    set Ybw = function Vcu
    set Gbw = function ABs
    set gbw = function Z4w
    set hbw = function H4s
    set Fbw = function VNw
    set kbw = function oFu
    set jbw = function rqS
    set xbw = function pqu
    set vbw = function Kjt
    set mbw = function dkt
    set Qbw = function MMi
    set Wbw = function gcS
    set Ebw = function FEt
    set Zbw = function J6i
    set Ubw = function WHs
    set Ibw = function fAr
    set Pbw = function Qhi
    set Abw = function e0s
    set Dbw = function Ctu
    set Hbw = function hCt
    set Jbw = function idu
    set Kbw = function sls
    set Lbw = function G4w
    set Xbw = function MEu
    set Cbw = function dus
    set Vbw = function IJi
    set Bbw = function Bvt
    set Nbw = function oNr
    set Mbw = function WFs
    set wyw = function Xsi
    set uyw = function Ooi
    set ryw = function WOt
    set syw = function vdi
    set tyw = function o6S
    set iyw = function BMr
    set Syw = function pXu
    set cyw = function sqS
    set oyw = function Uyi
    set Oyw = function Sqi
    set lyw = function Qli
    set byw = function fYt
    set yyw = function Twr
    set pyw = function JKr
    set eyw = function ERt
    set qyw = function mkr
    set ayw = function Ttt
    set nyw = function Y6t
    set dyw = function Vsi
    set fyw = function Sbs
    set Ryw = function cYt
    set Tyw = function B_s
    set Yyw = function Gur
    set Gyw = function B6t
    set gyw = function cri
    set hyw = function edi
    set Fyw = function Nfi
    set kyw = function mQs
    set jyw = function w0r
    set xyw = function Ptu
    set vyw = function mFi
    set myw = function DPi
    set Qyw = function XRr
    set Wyw = function yps
    set Eyw = function fAu
    set Zyw = function dRs
    set Uyw = function Y4u
    set Iyw = function pkr
    set Pyw = function G0i
    set Ayw = function rJt
    set Dyw = function Yus
    set Hyw = function MTr
    set Jyw = function OLu
    set Kyw = function oji
    set Lyw = function YMi
    set Xyw = function SVs
    set Cyw = function GLu
    set Vyw = function kYs
    set Byw = function sku
    set Nyw = function m5w
    set Myw = function PFS
    set wpw = function Wys
    set upw = function ENr
    set rpw = function KKt
    set spw = function Ekt
    set tpw = function uLr
    set ipw = function NYS
    set Spw = function HXr
    set cpw = function j3i
    set opw = function pAu
    set Opw = function wEs
    set lpw = function nit
    set bpw = function AUs
    set ypw = function yWi
    set ppw = function yNu
    set epw = function vOS
    set qpw = function Fyr
    set apw = function ZcS
    set npw = function CKr
    set dpw = function fxt
    set fpw = function MZr
    set Rpw = function TPt
    set Tpw = function KSS
    set Ypw = function unu
    set Gpw = function aLs
    set gpw = function uvi
    set hpw = function aFu
    set Fpw = function UVs
    set kpw = function xti
    set jpw = function pct
    set xpw = function Ayi
    set vpw = function j6w
    set mpw = function BQt
    set Qpw = function qWu
    set Wpw = function wGr
    set Epw = function XNs
    set Zpw = function yst
    set Upw = function Qxu
    set Ipw = function FWr
    set Ppw = function cai
    set Apw = function Ftu
    set Dpw = function IKr
    set Hpw = function rls
    set Jpw = function GCr
    set Kpw = function yWu
    set Lpw = function uru
    set Xpw = function RTt
    set Cpw = function C7w
    set Vpw = function KSr
    set Bpw = function RVs
    set Npw = function UNw
    set Mpw = function gBw
    set wew = function I6i
    set uew = function WMi
    set rew = function Yvu
    set sew = function I8s
    set tew = function XTr
    set iew = function KeS
    set Sew = function ZNr
    set cew = function jiu
    set oew = function T7i
    set Oew = function FQt
    set lew = function COs
    set bew = function TAr
    set yew = function LHt
    set pew = function o7t
    set eew = function cju
    set qew = function hPw
    set aew = function TOr
    set dew = function m8S
    set few = function yEi
    set Rew = function mrs
    set Tew = function l6t
    set Yew = function o_r
    set Gew = function kbi
    set gew = function M_s
    set hew = function FJs
    set Few = function gru
    set kew = function tis
    set jew = function sgt
    set xew = function hCr
    set vew = function oJu
    set mew = function HMt
    set Qew = function kis
    set Wew = function cGi
    set Eew = function e1i
    set Zew = function wHs
    set Uew = function OVr
    set Iew = function VZu
    set Pew = function YFs
    set Aew = function lus
    set Dew = function AJt
    set Hew = function eri
    set Jew = function PVs
    set Kew = function rBr
    set Lew = function aru
    set Xew = function QHs
    set Cew = function JYs
    set Vew = function jSu
    set Bew = function HXi
    set New = function uyS
    set Mew = function Thr
    set wqw = function WKs
    set uqw = function oBr
    set rqw = function USr
    set sqw = function t0r
    set tqw = function U2S
    set iqw = function Vni
    set Sqw = function APi
    set cqw = function SNu
    set oqw = function V_i
    set Oqw = function t0s
    set lqw = function hYi
    set bqw = function a5r
    set yqw = function Utu
    set pqw = function JNi
    set eqw = function d0s
    set qqw = function pcS
    set aqw = function Kks
    set nqw = function kgu
    set dqw = function hRr
    set fqw = function k_S
    set Rqw = function Txu
    set Tqw = function qcs
    set Yqw = function V0s
    set Gqw = function Wcs
    set gqw = function Ydi
    set hqw = function w8t
    set Fqw = function vrt
    set kqw = function Tiu
    set jqw = function QQt
    set xqw = function v4r
    set vqw = function XMi
    set mqw = function kAr
    set Qqw = function hNt
    set Wqw = function SHs
    set Eqw = function vSu
    set Zqw = function Wyu
    set Uqw = function Ays
    set Iqw = function dXw
    set Pqw = function NrS
    set Aqw = function Q7u
    set Dqw = function Jpi
    set Hqw = function l0s
    set Jqw = function J9i
    set Kqw = function jpu
    set Lqw = function ILt
    set Xqw = function YMr
    set Cqw = function AKu
    set Vqw = function sci
    set Bqw = function dks
    set Nqw = function AHs
    set Mqw = function IYs
    set waw = function kQt
    set uaw = function IQu
    set raw = function jQu
    set saw = function U2u
    set taw = function j7w
    set iaw = function GMi
    set Saw = function AIu
    set caw = function oDw
    set oaw = function UPt
    set Oaw = function aFr
    set law = function eDi
    set baw = function NMr
    set yaw = function j4r
    set paw = function UTs
    set eaw = function Q9r
    set qaw = function hlt
    set aaw = function Smt
    set naw = function VKr
    set daw = function iPr
    set faw = function vyu
    set Raw = function Y5r
    set Taw = function xEu
    set Yaw = function y1s
    set Gaw = function FVt
    set gaw = function Qls
    set haw = function YHu
    set Faw = function dxt
    set kaw = function A9s
    set jaw = function pTs
    set xaw = function K2t
    set vaw = function rZi
    set maw = function sIs
    set Qaw = function eDr
    set Waw = function w3s
    set Eaw = function u9S
    set Zaw = function BPw
    set Uaw = function lXu
    set Iaw = function ptt
    set Paw = function ovu
    set Aaw = function NXu
    set Daw = function W_S
    set Haw = function w8S
    set Jaw = function XXs
    set Kaw = function OGt
    set Law = function kps
    set Xaw = function XNw
    set Caw = function Bhs
    set Vaw = function kou
    set Baw = function R_S
    set Naw = function NMw
    set Maw = function Mki
    set wnw = function g6t
    set unw = function uxr
    set rnw = function M2u
    set snw = function eCw
    set tnw = function D_r
    set inw = function AOu
    set Snw = function kst
    set cnw = function VCu
    set onw = function bTs
    set Onw = function Gqu
    set lnw = function Ngs
    set bnw = function Vku
    set ynw = function qTu
    set pnw = function TUs
    set enw = function ixt
    set qnw = function Nei
    set anw = function uPr
    set nnw = function CMi
    set dnw = function yKi
    set fnw = function Uxs
    set Rnw = function j_u
    set Tnw = function uci
    set Ynw = function x9r
    set Gnw = function Qyr
    set gnw = function Vur
    set hnw = function Lvi
    set Fnw = function Mkr
    set knw = function ort
    set jnw = function Eeu
    set xnw = function gqu
    set vnw = function cHu
    set mnw = function yPs
    set Qnw = function Weu
    set Wnw = function e6S
    set Enw = function BOs
    set Znw = function hur
    set Unw = function ICs
    set Inw = function WZi
    set Pnw = function oit
    set Anw = function whr
    set Dnw = function RJi
    set Hnw = function mci
    set Jnw = function IEt
    set Knw = function C1r
    set Lnw = function nMs
    set Xnw = function gyr
    set Cnw = function Fji
    set Vnw = function Dlr
    set Bnw = function lrS
    set Nnw = function i2t
    set Mnw = function WUr
    set wdw = function j9u
    set udw = function nKr
    set rdw = function vvt
    set sdw = function fcs
    set tdw = function uNw
    set idw = function K_i
    set Sdw = function Ldr
    set cdw = function EFs
    set odw = function L2t
    set Odw = function ktu
    set ldw = function KYi
    set bdw = function bBw
    set ydw = function sLs
    set pdw = function D4s
    set edw = function qDr
    set qdw = function qJw
    set adw = function DVu
    set ndw = function Yci
    set ddw = function e7t
    set fdw = function ipi
    set Rdw = function oru
    set Tdw = function bGt
    set Ydw = function Fur
    set Gdw = function Zcu
    set gdw = function bWi
    set hdw = function Hct
    set Fdw = function Yxu
    set kdw = function wNu
    set jdw = function Ier
    set xdw = function DVt
    set vdw = function YLu
    set mdw = function NEt
    set Qdw = function mNi
    set Wdw = function B7w
    set Edw = function exi
    set Zdw = function wnu
    set Udw = function qZt
    set Idw = function Pci
    set Pdw = function o_u
    set Adw = function dys
    set Ddw = function Qur
    set Hdw = function LAt
    set Jdw = function Wot
    set Kdw = function Eur
    set Ldw = function tCw
    set Xdw = function j2r
    set Cdw = function Err
    set Vdw = function xTS
    set Bdw = function PLt
    set Ndw = function RNu
    set Mdw = function Oru
    set wfw = function mur
    set ufw = function qAu
    set rfw = function bRi
    set sfw = function W5w
    set tfw = function FRi
    set ifw = function V1w
    set Sfw = function Z6i
    set cfw = function uEu
    set ofw = function oMw
    set Ofw = function gNw
    set lfw = function QGr
    set bfw = function Its
    set yfw = function OSt
    set pfw = function qRu
    set efw = function u6r
    set qfw = function yot
    set afw = function QBu
    set nfw = function ALu
    set dfw = function hTS
    set ffw = function ics
    set Rfw = function Kyr
    set Tfw = function q5r
    set Yfw = function mgu
    set Gfw = function ZOr
    set gfw = function M6r
    set hfw = function c2w
    set Ffw = function Gdu
    set kfw = function dis
    set jfw = function eUr
    set xfw = function t7w
    set vfw = function YNs
    set mfw = function DXu
    set Qfw = function DTt
    set Wfw = function Owi
    set Efw = function ngS
    set Zfw = function oFt
    set Ufw = function ROr
    set Ifw = function S5i
    set Pfw = function GEi
    set Afw = function w2s
    set Dfw = function luu
    set Hfw = function Sxu
    set Jfw = function QIt
    set Kfw = function WNr
    set Lfw = function dNt
    set Xfw = function qGt
    set Cfw = function nSi
    set Vfw = function fDi
    set Bfw = function uVt
    set Nfw = function IBt
    set Mfw = function W3s
    set wRw = function xPu
    set uRw = function Cuu
    set rRw = function AQu
    set sRw = function DFs
    set tRw = function qVs
    set iRw = function Gxu
    set SRw = function Jtu
    set cRw = function Qct
    set oRw = function u3t
    set ORw = function QBt
    set lRw = function q7i
    set bRw = function NGs
    set yRw = function jst
    set pRw = function tdr
    set eRw = function IUt
    set qRw = function rxi
    set aRw = function s3w
    set nRw = function T6r
    set dRw = function W4r
    set fRw = function HXu
    set RRw = function gyS
    set TRw = function GJw
    set YRw = function brS
    set GRw = function fbS
    set gRw = function vAw
    set hRw = function w5r
    set FRw = function QDs
    set kRw = function gCr
    set jRw = function DIu
    set xRw = function XUs
    set vRw = function LNu
    set mRw = function vHu
    set QRw = function Urs
    set WRw = function Mor
    set ERw = function GNr
    set ZRw = function iKr
    set URw = function J4r
    set IRw = function c7w
    set PRw = function CEs
    set ARw = function Iru
    set DRw = function fSs
    set HRw = function i0s
    set JRw = function tuS
    set KRw = function dNs
    set LRw = function XMw
    set XRw = function QZi
    set CRw = function Jqi
    set VRw = function fgS
    set BRw = function mQt
    set NRw = function olu
    set MRw = function Wei
    set wTw = function pLu
    set uTw = function sws
    set rTw = function QEu
    set sTw = function M7S
    set tTw = function B_i
    set iTw = function tou
    set STw = function H6i
    set cTw = function QNr
    set oTw = function PLr
    set OTw = function Khs
    set lTw = function TKr
    set bTw = function kEs
    set yTw = function sts
    set pTw = function ans
    set eTw = function xFu
    set qTw = function ect
    set aTw = function mFS
    set nTw = function t3w
    set dTw = function e5S
    set fTw = function c3s
    set RTw = function sRu
    set TTw = function dOr
    set YTw = function sdS
    set GTw = function RDi
    set gTw = function Bku
    set hTw = function HVw
    set FTw = function xPw
    set kTw = function Qpr
    set jTw = function gSi
    set xTw = function Fst
    set vTw = function vHs
    set mTw = function ZHt
    set QTw = function b9u
    set WTw = function JBr
    set ETw = function TNi
    set ZTw = function Dvs
    set UTw = function rSs
    set ITw = function nhr
    set PTw = function QOt
    set ATw = function b1s
    set DTw = function ixi
    set HTw = function oOS
    set JTw = function P6i
    set KTw = function NKt
    set LTw = function git
    set XTw = function fAi
    set CTw = function ner
    set VTw = function iqi
    set BTw = function OUu
    set NTw = function LSr
    set MTw = function gpi
    set wYw = function eEs
    set uYw = function Gnr
    set rYw = function DwS
    set sYw = function LnS
    set tYw = function I1s
    set iYw = function SKs
    set SYw = function qvu
    set cYw = function KNi
    set oYw = function sSr
    set OYw = function sht
    set lYw = function IaS
    set bYw = function dTr
    set yYw = function tFt
    set pYw = function k5w
    set eYw = function C3i
    set qYw = function xOS
    set aYw = function Itu
    set nYw = function Qkr
    set dYw = function Fjr
    set fYw = function coi
    set RYw = function Lqu
    set TYw = function ygt
    set YYw = function N_s
    set GYw = function E3r
    set gYw = function kVt
    set hYw = function cwr
    set FYw = function d0i
    set kYw = function jrs
    set jYw = function fii
    set xYw = function Yys
    set vYw = function h8S
    set mYw = function Iyi
    set QYw = function cNr
    set WYw = function OBr
    set EYw = function sys
    set ZYw = function k3r
    set UYw = function W8t
    set IYw = function cgt
    set PYw = function LYi
    set AYw = function Ius
    set DYw = function mGt
    set HYw = function gMi
    set JYw = function NYu
    set KYw = function O_u
    set LYw = function rgs
    set XYw = function BNw
    set CYw = function Keu
    set VYw = function atu
    set BYw = function SWt
    set NYw = function AZi
    set MYw = function BWu
    set wGw = function W7u
    set uGw = function dYt
    set rGw = function Kqi
    set sGw = function JCt
    set tGw = function TiS
    set iGw = function hRu
    set SGw = function oLw
    set cGw = function Eyu
    set oGw = function A7S
    set OGw = function qci
    set lGw = function fks
    set bGw = function VEt
    set yGw = function Qeu
    set pGw = function tFu
    set eGw = function yQu
    set qGw = function SFi
    set aGw = function unr
    set nGw = function X8S
    set dGw = function Gpi
    set fGw = function lrr
    set RGw = function S0s
    set TGw = function Q1r
    set YGw = function PYs
    set GGw = function bjs
    set gGw = function mpS
    set hGw = function GFu
    set FGw = function Tas
    set kGw = function bou
    set jGw = function PNi
    set xGw = function Sct
    set vGw = function bwt
    set mGw = function jBi
    set QGw = function LNw
    set WGw = function chs
    set EGw = function Xct
    set ZGw = function Bgu
    set UGw = function Ewu
    set IGw = function hNw
    set PGw = function Xdi
    set AGw = function sZi
    set DGw = function cmi
    set HGw = function ses
    set JGw = function Aus
    set KGw = function lxr
    set LGw = function mBu
    set XGw = function lJt
    set CGw = function JIt
    set VGw = function nHs
    set BGw = function DHi
    set NGw = function IJt
    set MGw = function Whi
    set wgw = function Vhu
    set ugw = function nmt
    set rgw = function fPw
    set sgw = function H3s
    set tgw = function X9u
    set igw = function wIu
    set Sgw = function yUi
    set cgw = function Y6r
    set ogw = function sUs
    set Ogw = function NAt
    set lgw = function xJt
    set bgw = function DXi
    set ygw = function eAu
    set pgw = function noi
    set egw = function d8i
    set qgw = function cYS
    set agw = function Ypi
    set ngw = function U4w
    set dgw = function GSi
    set fgw = function PPu
    set Rgw = function hdr
    set Tgw = function jEr
    set Ygw = function iHr
    set Ggw = function Fas
    set ggw = function BBu
    set hgw = function xbs
    set Fgw = function KBr
    set kgw = function Vht
    set jgw = function d4s
    set xgw = function eHu
    set vgw = function dgS
    set mgw = function g4w
    set Qgw = function GPr
    set Wgw = function kur
    set Egw = function jUt
    set Zgw = function WBu
    set Ugw = function mhi
    set Igw = function uLt
    set Pgw = function e5r
    set Agw = function MOr
    set Dgw = function dbS
    set Hgw = function g0i
    set Jgw = function jEs
    set Kgw = function Dju
    set Lgw = function GHu
    set Xgw = function jrS
    set Cgw = function g7w
    set Vgw = function Wti
    set Bgw = function VRu
    set Ngw = function oAr
    set Mgw = function ZGi
    set whw = function wtr
    set uhw = function tqS
    set rhw = function iVr
    set shw = function ERi
    set thw = function GIu
    set ihw = function j5r
    set Shw = function TPs
    set chw = function ITu
    set ohw = function Bhu
    set Ohw = function O0t
    set lhw = function K_S
    set bhw = function y9u
    set yhw = function Pus
    set phw = function OlS
    set ehw = function hsi
    set qhw = function eXs
    set ahw = function bxr
    set nhw = function B4i
    set dhw = function Iot
    set fhw = function Eei
    set Rhw = function Bcs
    set Thw = function Lys
    set Yhw = function Liu
    set Ghw = function KDr
    set ghw = function o3s
    set hhw = function ELw
    set Fhw = function JDt
    set khw = function IEs
    set jhw = function EBu
    set xhw = function N_i
    set vhw = function fkt
    set mhw = function Dnr
    set Qhw = function K4r
    set Whw = function Hlu
    set Ehw = function d3i
    set Zhw = function Cii
    set Uhw = function Y7i
    set Ihw = function hCw
    set Phw = function QFS
    set Ahw = function b4t
    set Dhw = function ZVs
    set Hhw = function sri
    set Jhw = function Xar
    set Khw = function nSr
    set Lhw = function Str
    set Xhw = function vcu
    set Chw = function nQs
    set Vhw = function XHt
    set Bhw = function N2u
    set Nhw = function dUi
    set Mhw = function GKs
    set wFw = function Q_S
    set uFw = function jys
    set rFw = function qFr
    set sFw = function Wji
    set tFw = function Gau
    set iFw = function lGt
    set SFw = function dTS
    set cFw = function H4u
    set oFw = function qOS
    set OFw = function cWt
    set lFw = function vwu
    set bFw = function Mei
    set yFw = function q2w
    set pFw = function CNw
    set eFw = function Qcs
    set qFw = function XOs
    set aFw = function gNr
    set nFw = function Eti
    set dFw = function Ghi
    set fFw = function fVt
    set RFw = function Rhr
    set TFw = function Eru
    set YFw = function x5r
    set GFw = function LKt
    set gFw = function Tku
    set hFw = function fps
    set FFw = function L8S
    set kFw = function Nfu
    set jFw = function K_t
    set xFw = function vli
    set vFw = function NQt
    set mFw = function a7i
    set QFw = function eTs
    set WFw = function XYs
    set EFw = function Sit
    set ZFw = function wxu
    set UFw = function Tts
    set IFw = function yRS
    set PFw = function Iut
    set AFw = function IVr
    set DFw = function YGt
    set HFw = function xys
    set JFw = function sXr
    set KFw = function tdS
    set LFw = function qTs
    set XFw = function Crr
    set CFw = function p9r
    set VFw = function DQu
    set BFw = function T1r
    set NFw = function mdi
    set MFw = function xru
    set wkw = function pOu
    set ukw = function hSs
    set rkw = function F2w
    set skw = function N8s
    set tkw = function Flt
    set ikw = function Jjt
    set Skw = function K6i
    set ckw = function wOS
    set okw = function Xdr
    set Okw = function yts
    set lkw = function f4s
    set bkw = function X4s
    set ykw = function mWi
    set pkw = function Fxr
    set ekw = function e3w
    set qkw = function WVt
    set akw = function cJw
    set nkw = function blS
    set dkw = function dxi
    set fkw = function yTi
    set Rkw = function Xyu
    set Tkw = function Iqi
    set Ykw = function AIr
    set Gkw = function KYr
    set gkw = function Q4r
    set hkw = function nli
    set Fkw = function vru
    set kkw = function x4r
    set jkw = function IQs
    set xkw = function IqS
    set vkw = function cli
    set mkw = function uRS
    set Qkw = function ibs
    set Wkw = function qri
    set Ekw = function N2S
    set Zkw = function AAw
    set Ukw = function b2u
    set Ikw = function Avt
    set Pkw = function G6S
    set Akw = function M3i
    set Dkw = function ZBu
    set Hkw = function xiu
    set Jkw = function CEt
    set Kkw = function h3u
    set Lkw = function tws
    set Xkw = function R4s
    set Ckw = function DPs
    set Vkw = function Blt
    set Bkw = function C4r
    set Nkw = function N7w
    set Mkw = function P7i
    set wjw = function SDi
    set ujw = function Zct
    set rjw = function c2u
    set sjw = function NTS
    set tjw = function ssi
    set ijw = function fOr
    set Sjw = function eSs
    set cjw = function U9i
    set ojw = function WCt
    set Ojw = function ePt
    set ljw = function HYt
    set bjw = function EKs
    set yjw = function Ott
    set pjw = function APu
    set ejw = function leS
    set qjw = function f1i
    set ajw = function Q4u
    set njw = function VPi
    set djw = function DEu
    set fjw = function PHs
    set Rjw = function Ult
    set Tjw = function U6i
    set Yjw = function X2S
    set Gjw = function Wur
    set gjw = function FGS
    set hjw = function VPw
    set Fjw = function fHs
    set kjw = function WDt
    set jjw = function MLr
    set xjw = function MJr
    set vjw = function Jwr
    set mjw = function i5w
    set Qjw = function ANs
    set Wjw = function mvi
    set Ejw = function eXu
    set Zjw = function jgs
    set Ujw = function GeS
    set Ijw = function PcS
    set Pjw = function nUi
    set Ajw = function jNs
    set Djw = function HEs
    set Hjw = function RAr
    set Jjw = function uFt
    set Kjw = function I4s
    set Ljw = function nhS
    set Xjw = function Jcu
    set Cjw = function LMi
    set Vjw = function MDu
    set Bjw = function HHw
    set Njw = function gnr
    set Mjw = function QNi
    set wxw = function GEs
    set uxw = function Sks
    set rxw = function Kir
    set sxw = function cNt
    set txw = function h4w
    set ixw = function REt
    set Sxw = function kPs
    set cxw = function aDt
    set oxw = function m8i
    set Oxw = function mHs
    set lxw = function xZi
    set bxw = function vtr
    set yxw = function MYS
    set pxw = function HBr
    set exw = function SJt
    set qxw = function DFr
    set axw = function sPu
    set nxw = function LoS
    set dxw = function CZu
    set fxw = function Kdr
    set Rxw = function hns
    set Txw = function ZVr
    set Yxw = function uDr
    set Gxw = function PKr
    set gxw = function rDi
    set hxw = function Ouu
    set Fxw = function W6i
    set kxw = function pMi
    set jxw = function nBr
    set xxw = function PZs
    set vxw = function cwi
    set mxw = function Csr
    set Qxw = function wkr
    set Wxw = function gur
    set Exw = function ulu
    set Zxw = function FZi
    set Uxw = function SHt
    set Ixw = function q2u
    set Pxw = function dAr
    set Axw = function B7t
    set Dxw = function vas
    set Hxw = function Q4i
    set Jxw = function qkS
    set Kxw = function hYr
    set Lxw = function Oei
    set Xxw = function Mbs
    set Cxw = function xPs
    set Vxw = function kdi
    set Bxw = function OMu
    set Nxw = function tKs
    set Mxw = function pUr
    set wvw = function QaS
    set uvw = function b7w
    set rvw = function Mfi
    set svw = function rAw
    set tvw = function C6S
    set ivw = function tTt
    set Svw = function R5s
    set cvw = function Jlu
    set ovw = function ukr
    set Ovw = function CAr
    set lvw = function HDr
    set bvw = function qBr
    set yvw = function Kkr
    set pvw = function eVi
    set evw = function gAt
    set qvw = function lwt
    set avw = function rMs
    set nvw = function qHu
    set dvw = function fni
    set fvw = function L2w
    set Rvw = function dhr
    set Tvw = function QBr
    set Yvw = function x4w
    set Gvw = function XKt
    set gvw = function nwt
    set hvw = function eht
    set Fvw = function yhi
    set kvw = function lru
    set jvw = function Olu
    set xvw = function wUr
    set vvw = function MQt
    set mvw = function x2s
    set Qvw = function fiu
    set Wvw = function QDt
    set Evw = function Ens
    set Zvw = function k_r
    set Uvw = function U4u
    set Ivw = function t9S
    set Pvw = function jPs
    set Avw = function ELu
    set Dvw = function nys
    set Hvw = function bGs
    set Jvw = function MDs
    set Kvw = function QUr
    set Lvw = function mis
    set Xvw = function qFu
    set Cvw = function NPw
    set Vvw = function uBr
    set Bvw = function S5w
    set Nvw = function S_r
    set Mvw = function irs
    set wmw = function vAr
    set umw = function DTS
    set rmw = function ntu
    set smw = function ett
    set tmw = function ihS
    set imw = function t2r
    set Smw = function mOS
    set cmw = function YNr
    set omw = function ups
    set Omw = function kci
    set lmw = function gks
    set bmw = function Yoi
    set ymw = function IPw
    set pmw = function NkS
    set emw = function itr
    set qmw = function eFi
    set amw = function uls
    set nmw = function vGt
    set dmw = function Qnu
    set fmw = function dTi
    set Rmw = function dht
    set Tmw = function rps
    set Ymw = function kHs
    set Gmw = function RMt
    set gmw = function sEs
    set hmw = function p7S
    set Fmw = function Pjs
    set kmw = function iti
    set jmw = function N5S
    set xmw = function KRt
    set vmw = function Flr
    set mmw = function TVt
    set Qmw = function kJs
    set Wmw = function ZXs
    set Emw = function fdS
    set Zmw = function APs
    set Umw = function Bgt
    set Imw = function ybs
    set Pmw = function ori
    set Amw = function XAr
    set Dmw = function JVu
    set Hmw = function Hwu
    set Jmw = function V7w
    set Kmw = function ULt
    set Lmw = function OGu
    set Xmw = function Vii
    set Cmw = function TBs
    set Vmw = function qEs
    set Bmw = function Wer
    set Nmw = function mrS
    set Mmw = function f5w
    set wQw = function Xut
    set uQw = function xSu
    set rQw = function E4t
    set sQw = function nis
    set tQw = function i9t
    set iQw = function w5s
    set SQw = function UnS
    set cQw = function Xjt
    set oQw = function Qji
    set OQw = function IVs
    set lQw = function lxi
    set bQw = function EZt
    set yQw = function tUt
    set pQw = function oRS
    set eQw = function kQu
    set qQw = function mls
    set aQw = function NLr
    set nQw = function cVs
    set dQw = function PJt
    set fQw = function Syi
    set RQw = function FVs
    set TQw = function Afu
    set YQw = function dwt
    set GQw = function Ryi
    set gQw = function JZt
    set hQw = function yfS
    set FQw = function LVw
    set kQw = function doi
    set jQw = function O9u
    set xQw = function s_t
    set vQw = function Xis
    set mQw = function FdS
    set QQw = function vJt
    set WQw = function lxt
    set EQw = function VCr
    set ZQw = function goS
    set UQw = function Jmt
    set IQw = function TCs
    set PQw = function p5r
    set AQw = function h0s
    set DQw = function KNw
    set HQw = function w9u
    set JQw = function I6r
    set KQw = function ZLu
    set LQw = function ubS
    set XQw = function cTi
    set CQw = function Xor
    set VQw = function W3w
    set BQw = function LTS
    set NQw = function xit
    set MQw = function N3i
    set wWw = function P1u
    set uWw = function nbr
    set rWw = function qJt
    set sWw = function G5S
    set tWw = function Iht
    set iWw = function UqS
    set SWw = function lFu
    set cWw = function KIt
    set oWw = function Bli
    set OWw = function i9i
    set lWw = function FSt
    set bWw = function Vjt
    set yWw = function i2r
    set pWw = function vpr
    set eWw = function p8w
    set qWw = function xgS
    set aWw = function Vsr
    set nWw = function gus
    set dWw = function mli
    set fWw = function Gcr
    set RWw = function Njs
    set TWw = function FYs
    set YWw = function BPi
    set GWw = function v2s
    set gWw = function TPi
    set hWw = function ert
    set FWw = function JJu
    set kWw = function sSu
    set jWw = function suS
    set xWw = function Nku
    set vWw = function Qei
    set mWw = function hnr
    set QWw = function T_S
    set WWw = function gBi
    set EWw = function fZu
    set ZWw = function nMr
    set UWw = function NFS
    set IWw = function Rqi
    set PWw = function e4s
    set AWw = function e8t
    set DWw = function Cht
    set HWw = function Oxt
    set JWw = function CaS
    set KWw = function Gts
    set LWw = function HFs
    set XWw = function f4i
    set CWw = function dHs
    set VWw = function bTi
    set BWw = function GQu
    set NWw = function HYs
    set MWw = function Bqs
    set wEw = function I6S
    set uEw = function AOt
    set rEw = function JXu
    set sEw = function fri
    set tEw = function Q5w
    set iEw = function Jji
    set SEw = function SAw
    set cEw = function FFs
    set oEw = function Cir
    set OEw = function ZAw
    set lEw = function kZs
    set bEw = function Car
    set yEw = function U6t
    set pEw = function GPu
    set eEw = function dJs
    set qEw = function HKr
    set aEw = function PNr
    set nEw = function Pvt
    set dEw = function T5s
    set fEw = function c9u
    set REw = function cHs
    set TEw = function Ori
    set YEw = function H4r
    set GEw = function oMi
    set gEw = function CXs
    set hEw = function Rni
    set FEw = function MFr
    set kEw = function yYS
    set jEw = function cMw
    set xEw = function rEu
    set vEw = function P7S
    set mEw = function WEt
    set QEw = function DUs
    set WEw = function Cvt
    set EEw = function Feu
    set ZEw = function C1u
    set UEw = function ptr
    set IEw = function hoS
    set PEw = function ASS
    set AEw = function gpu
    set DEw = function F9s
    set HEw = function T5w
    set JEw = function Y1r
    set KEw = function B5w
    set LEw = function BGs
    set XEw = function cui
    set CEw = function tiS
    set VEw = function m2w
    set BEw = function cit
    set NEw = function cAw
    set MEw = function BYr
    set wZw = function crt
    set uZw = function KBu
    set rZw = function UVr
    set sZw = function SVr
    set tZw = function DAt
    set iZw = function Vnu
    set SZw = function u1s
    set cZw = function W_s
    set oZw = function Eer
    set OZw = function QpS
    set lZw = function Fns
    set bZw = function kiu
    set yZw = function kVr
    set pZw = function knr
    set eZw = function Kys
    set qZw = function iEi
    set aZw = function IDs
    set nZw = function Vcs
    set dZw = function neu
    set fZw = function Tvu
    set RZw = function hRi
    set TZw = function c7S
    set YZw = function ptu
    set GZw = function jHt
    set gZw = function cBu
    set hZw = function Frs
    set FZw = function YVt
    set kZw = function i3t
    set jZw = function G4r
    set xZw = function MKt
    set vZw = function lbr
    set mZw = function SOi
    set QZw = function V3w
    set WZw = function PDt
    set EZw = function RHs
    set ZZw = function Nks
    set UZw = function sMw
    set IZw = function AXi
    set PZw = function S2u
    set AZw = function Mju
    set DZw = function HGu
    set HZw = function LXs
    set JZw = function V7i
    set KZw = function OcS
    set LZw = function bEi
    set XZw = function wcr
    set CZw = function yfi
    set VZw = function G6w
    set BZw = function ARu
    set NZw = function c_r
    set MZw = function Dht
    set wUw = function hqu
    set uUw = function Yks
    set rUw = function xMw
    set sUw = function kor
    set tUw = function pJi
    set iUw = function rrt
    set SUw = function hyr
    set cUw = function PXs
    set oUw = function MKw
    set OUw = function GkS
    set lUw = function WaS
    set bUw = function khS
    set yUw = function ooi
    set pUw = function DOu
    set eUw = function Nts
    set qUw = function jni
    set aUw = function U1r
    set nUw = function Qjt
    set dUw = function gYi
    set fUw = function UGr
    set RUw = function bli
    set TUw = function Lsi
    set YUw = function tVr
    set GUw = function Qmi
    set gUw = function Ror
    set hUw = function Uli
    set FUw = function f4w
    set kUw = function W2r
    set jUw = function Hwt
    set xUw = function jks
    set vUw = function Btr
    set mUw = function n8t
    set QUw = function Sxi
    set WUw = function fDr
    set EUw = function FBs
    set ZUw = function fTt
    set UUw = function wnS
    set IUw = function xwu
    set PUw = function BAi
    set AUw = function Zrs
    set DUw = function ops
    set HUw = function y8s
    set JUw = function qLt
    set KUw = function oHu
    set LUw = function Aki
    set XUw = function GDr
    set CUw = function NyS
    set VUw = function BYu
    set BUw = function ACi
    set NUw = function rwi
    set MUw = function g5u
    set wIw = function hGu
    set uIw = function y9t
    set rIw = function swr
    set sIw = function D5s
    set tIw = function chi
    set iIw = function p3w
    set SIw = function cJu
    set cIw = function qJu
    set oIw = function M7t
    set OIw = function tqu
    set lIw = function b2w
    set bIw = function KNs
    set yIw = function Pwr
endfunction
function hEr takes nothing returns nothing
    local player gEr = Player(PLAYER_NEUTRAL_PASSIVE)
    call CreateUnit(gEr, $6E303039, 2496., - 960., 270.)
    call CreateUnit(gEr, $6E303031, 1664., - 12736., 270.)
    call CreateUnit(gEr, $6E303032, 1920., - 13184., 270.)
    call CreateUnit(gEr, $68303236, 2688., 12480., 270.)
    call CreateUnit(gEr, $6E6D6731, 7008., - 10912., 270.)
    call CreateUnit(gEr, $6E303039, - 2240., 1216., 270.)
    call CreateUnit(gEr, $6E303031, 1216., - 1216., 270.)
    call CreateUnit(gEr, $6E303032, 2304., - 1792., 270.)
    call CreateUnit(gEr, $68303158, 3456., 2688., 270.)
    call CreateUnit(gEr, $6E636F70, 11584., 12928., 270.)
    call CreateUnit(gEr, $6E636F70, 13376., 12928., 270.)
    call CreateUnit(gEr, $6E636F70, 13120., 12928., 270.)
    call CreateUnit(gEr, $6E636F70, 12864., 12928., 270.)
    call CreateUnit(gEr, $6E636F70, 12608., 12928., 270.)
    call CreateUnit(gEr, $6E636F70, 12352., 12928., 270.)
    call CreateUnit(gEr, $6E636F70, 12096., 12928., 270.)
    call CreateUnit(gEr, $6E636F70, 11840., 12928., 270.)
    call CreateUnit(gEr, $6E637032, 224., - 12192., 270.)
    call CreateUnit(gEr, $6E637032, 11552., 12576., 270.)
    call CreateUnit(gEr, $6E303041, - 5440., 320., 270.)
    call CreateUnit(gEr, $6E303032, - 3392., 1408., 270.)
    call CreateUnit(gEr, $6E303031, - 3520., 576., 270.)
    call CreateUnit(gEr, $6E303042, - 5760., 1216., 270.)
    call CreateUnit(gEr, $6E636263, - 7968., 4096., 270.)
    call CreateUnit(gEr, $6E6D6730, 6944., - 11616., 270.)
    call CreateUnit(gEr, $6E6D6730, 5152., - 10656., 270.)
    call CreateUnit(gEr, $68303155, - 9984., 9728., 270.)
    call CreateUnit(gEr, $6E74656E, 7136., - 3488., 270.)
    call CreateUnit(gEr, $6E74656E, 7008., - 3296., 270.)
    call CreateUnit(gEr, $6E746E32, 7648., - 3488., 270.)
    call CreateUnit(gEr, $6E746E32, 7712., - 3296., 270.)
    call CreateUnit(gEr, $68303155, - 10752., 9728., 270.)
    call CreateUnit(gEr, $68303155, - 10624., 9728., 270.)
    call CreateUnit(gEr, $68303155, - 10496., 9728., 270.)
    call CreateUnit(gEr, $6E303251, - 10048., - 8256., 270.)
    call CreateUnit(gEr, $6E6E7A67, 4256., - 9440., 270.)
    call CreateUnit(gEr, $68303155, - 10368., 9728., 270.)
    call CreateUnit(gEr, $6E6D6731, 9568., - 10244., 270.)
    call CreateUnit(gEr, $6E6D6731, 9568., - 10436., 270.)
    call CreateUnit(gEr, $6E6D6731, 8800., - 9760., 270.)
    call CreateUnit(gEr, $6E6D6731, 9056., - 9824., 270.)
    call CreateUnit(gEr, $68303155, - 9728., 9728., 270.)
    call CreateUnit(gEr, $68303155, - 9856., 9728., 270.)
    call CreateUnit(gEr, $6E746E32, - 10080., 10848., 270.)
    call CreateUnit(gEr, $6E746E32, - 10208., 10336., 270.)
    call CreateUnit(gEr, $6E746E32, - 10080., 10592., 270.)
    call CreateUnit(gEr, $6E74656E, - 9440., 10656., 270.)
    call CreateUnit(gEr, $6E74656E, - 9376., 10144., 270.)
    call CreateUnit(gEr, $6E74656E, - 9504., 10400., 270.)
    call CreateUnit(gEr, $68303155, - 9600., 9728., 270.)
    call CreateUnit(gEr, $68303157, - 8256., 9856., 270.)
    call CreateUnit(gEr, $68303157, - 8384., 9920., 270.)
    call CreateUnit(gEr, $68303157, - 8320., 10048., 270.)
    call CreateUnit(gEr, $68303157, - 8320., 10176., 270.)
    call CreateUnit(gEr, $68303157, - 8448., 10112., 270.)
    call CreateUnit(gEr, $68303157, - 8512., 9984., 270.)
    call CreateUnit(gEr, $68303236, 1984., 12480., 270.)
    call CreateUnit(gEr, $68303236, 2048., 12352., 270.)
    call CreateUnit(gEr, $68303236, 2816., 12608., 270.)
    call CreateUnit(gEr, $68303236, 1920., 12224., 270.)
    call CreateUnit(gEr, $6E746E32, - 1568., 4256., 270.)
    call CreateUnit(gEr, $6E303041, 960., - 13376., 270.)
    set gEr = null
endfunction
function rRu takes nothing returns nothing
    local player wRu = Player($0000000A)
    local unit uRu = CreateUnit(wRu, $6E303046, 8811.7, - 10389.4, 246.376)
    set uRu = CreateUnit(wRu, $6E303046, 8208.9, - 10174., 160.504)
    set uRu = CreateUnit(wRu, $6E303046, 8703.5, - 9992., 262.922)
    set uRu = CreateUnit(wRu, $6E303232, - 5657.1, - 8348.9, 10.06)
    set uRu = CreateUnit(wRu, $6E303232, - 5064.6, - 7295.7, 189.96)
    set uRu = CreateUnit(wRu, $6E303232, - 5179.5, - 7317.4, 293.62)
    set uRu = CreateUnit(wRu, $6E303048, 9380.1, - 9925.3, 256.692)
    set uRu = CreateUnit(wRu, $6E303048, 7762.5, - 10407.9, 306.176)
    set uRu = CreateUnit(wRu, $6E303048, 7573., - 10824.4, 11.569)
    set uRu = CreateUnit(wRu, $6E303232, - 5542.5, - 8348.9, 56.31)
    set uRu = CreateUnit(wRu, $6E303232, - 5433.1, - 8338.1, 293.62)
    set uRu = CreateUnit(wRu, $6E303232, - 5318.2, - 8316.4, 189.96)
    set uRu = CreateUnit(wRu, $6E303232, - 5704.7, - 8244.9, 224.77)
    set uRu = CreateUnit(wRu, $6E303046, 7066.4, - 10391., 96.045)
    set uRu = CreateUnit(wRu, $6E303046, 8143.2, - 9897.7, 184.664)
    set uRu = CreateUnit(wRu, $6E303046, 8642.8, - 10375.7, 69.644)
    set uRu = CreateUnit(wRu, $6E303048, 9817.3, - 10370.1, 187.202)
    set uRu = CreateUnit(wRu, $6E303048, 9743.1, - 10284.8, 166.437)
    set uRu = CreateUnit(wRu, $6E30305A, 10357.7, 4763.1, 322.36)
    set uRu = CreateUnit(wRu, $6E30305A, 10174.1, 5071.9, 47.078)
    set uRu = CreateUnit(wRu, $6E303130, 10130.8, 4838.3, 217.877)
    set uRu = CreateUnit(wRu, $6E303130, 10192., 4716.7, 13.206)
    set uRu = CreateUnit(wRu, $6E30314B, - 4676., - 1952.1, 205.41)
    set uRu = CreateUnit(wRu, $6E303156, - 11728.9, - 6498.6, 117.502)
    set uRu = CreateUnit(wRu, $6E30314B, - 4401.3, - 1207.4, 81.708)
    set uRu = CreateUnit(wRu, $6E303134, 7852.7, 5976.2, 255.693)
    set uRu = CreateUnit(wRu, $6E303133, 7675.7, 6040., 291.158)
    set uRu = CreateUnit(wRu, $6E303130, 6535.3, 5772.6, 271.173)
    set uRu = CreateUnit(wRu, $6E303130, 6647.7, 6037.6, 176.028)
    set uRu = CreateUnit(wRu, $6E303130, 10062.2, 4970.4, 233.335)
    set uRu = CreateUnit(wRu, $6E303147, - 10491.1, 1659.6, 106.054)
    set uRu = CreateUnit(wRu, $6E303147, - 9710.5, 950.4, 344.498)
    set uRu = CreateUnit(wRu, $6E303147, - 10327.3, 705.7, 41.34)
    set uRu = CreateUnit(wRu, $6E303142, - 10362.1, 5996., 68.04)
    set uRu = CreateUnit(wRu, $6E303147, - 9472.1, 1756.8, 109.79)
    set uRu = CreateUnit(wRu, $6E303147, - 9452., 461.7, 161.01)
    set uRu = CreateUnit(wRu, $6E303148, - 9499.7, 941., 93.134)
    set uRu = CreateUnit(wRu, $6E303148, - 10008.1, 1830.2, 195.914)
    set uRu = CreateUnit(wRu, $6E303143, 9841.5, 10091.3, 93.27)
    set uRu = CreateUnit(wRu, $6E303148, - 10212.6, 1381.2, 190.069)
    set uRu = CreateUnit(wRu, $6E303148, - 10633.1, 2262.4, 36.476)
    set uRu = CreateUnit(wRu, $6E303143, 8366.7, 11828.9, 237.08)
    set uRu = CreateUnit(wRu, $6E303148, - 10004.5, 420.1, 240.201)
    set uRu = CreateUnit(wRu, $6E303148, - 9913.6, 445.4, 307.835)
    set uRu = CreateUnit(wRu, $6E30314F, - 3842.2, - 3877.6, 82.883)
    set uRu = CreateUnit(wRu, $6E30314F, - 2544.8, - 1466.5, 320.536)
    set uRu = CreateUnit(wRu, $6E303143, 8404.1, 11963.7, 83.03)
    set uRu = CreateUnit(wRu, $6E30314F, - 1349.5, - 1961.3, 337.785)
    set uRu = CreateUnit(wRu, $6E303143, 6902.8, 12495.7, 95.61)
    set uRu = CreateUnit(wRu, $6E303143, 6151.9, 11555., 122.98)
    set uRu = CreateUnit(wRu, $6E30314F, - 1719.5, - 1906.7, 265.822)
    set uRu = CreateUnit(wRu, $6E303143, 6842.3, 10854.2, 71.18)
    set uRu = CreateUnit(wRu, $6E303156, - 11385.1, - 6483.1, 191.992)
    set uRu = CreateUnit(wRu, $6E303143, 9803.9, 11346.6, 350.76)
    set uRu = CreateUnit(wRu, $6E303143, 9833.4, 10234.3, 65.25)
    set uRu = CreateUnit(wRu, $6E303142, - 9511.4, 6073.8, 333.489)
    set uRu = CreateUnit(wRu, $6E30314F, - 1577.6, - 243.8, 227.808)
    set uRu = CreateUnit(wRu, $6E303142, - 9595.3, 5998.6, 191.256)
    set uRu = CreateUnit(wRu, $6E30314F, - 1590.7, - 558.4, 104.263)
    set uRu = CreateUnit(wRu, $6E30314E, - 1465.6, - 369.7, 146.397)
    set uRu = CreateUnit(wRu, $6E30314F, - 2765.5, - 1464.5, 146.848)
    set uRu = CreateUnit(wRu, $6E303150, - 7409.4, - 6084.5, 136.202)
    set uRu = CreateUnit(wRu, $6E303150, - 7310.8, - 6308.8, 186.806)
    set uRu = CreateUnit(wRu, $6E303150, - 7455.2, - 6211., 252.221)
    set uRu = CreateUnit(wRu, $6E303150, - 8235.9, - 6797.6, 196.475)
    set uRu = CreateUnit(wRu, $6E303156, - 11726.2, - 6340.2, 140.607)
    set uRu = CreateUnit(wRu, $6E303150, - 8345.3, - 6705.5, 345.838)
    set uRu = CreateUnit(wRu, $6E303150, - 7976.8, - 5521.6, 200.045)
    set uRu = CreateUnit(wRu, $6E303150, - 7969.3, - 5677.6, 299.42)
    set uRu = CreateUnit(wRu, $6E303152, - 7848.4, - 5591.4, 237.092)
    set uRu = CreateUnit(wRu, $6E303152, - 8124.9, - 5583.7, 223.392)
    set uRu = CreateUnit(wRu, $6E303150, - 8815.3, - 5987.4, 41.486)
    set uRu = CreateUnit(wRu, $6E303156, - 11389.8, - 6321.4, 323.03)
    set uRu = CreateUnit(wRu, $6E303152, - 9033.5, - 5535.7, 94.727)
    set uRu = CreateUnit(wRu, $6E303152, - 8143.8, - 6659., 146.353)
    set uRu = CreateUnit(wRu, $6E303152, - 8281.5, - 6565.9, 133.005)
    set uRu = CreateUnit(wRu, $6E303152, - 8746.8, - 6133.7, 249.013)
    set uRu = CreateUnit(wRu, $6E303152, - 8539.1, - 5885.9, 57.504)
    set uRu = CreateUnit(wRu, $6E303152, - 7207.4, - 6120.3, 268.844)
    set uRu = CreateUnit(wRu, $6E30314B, - 4604.3, - 1467.6, 191.014)
    set uRu = CreateUnit(wRu, $6E303150, - 8610.4, - 6083.2, 325.381)
    set uRu = CreateUnit(wRu, $6E303150, - 8683.8, - 5882.6, 159.537)
    set uRu = CreateUnit(wRu, $6E303155, - 12808.9, - 6382., 207.637)
    set uRu = CreateUnit(wRu, $6E30314B, - 4046.3, - 2251.3, 350.969)
    set uRu = CreateUnit(wRu, $6E30314B, - 4907.6, - 2489.6, 65.437)
    set uRu = CreateUnit(wRu, $6E30314B, - 5495.9, - 2207.3, 149.463)
    set uRu = CreateUnit(wRu, $6E30314B, - 4574.4, - 2033.2, 248.299)
    set uRu = CreateUnit(wRu, $6E30314B, - 5486.7, - 2061.7, 247.87)
    set uRu = CreateUnit(wRu, $6E30314B, - 5628.4, - 2034., 288.784)
    set uRu = CreateUnit(wRu, $6E30314B, - 4042.9, - 2088.1, 240.597)
    set uRu = CreateUnit(wRu, $6E30314B, - 4798.7, - 1850.2, 65.173)
    set uRu = CreateUnit(wRu, $6E30314B, - 4923.2, - 2657.1, 97.089)
    set uRu = CreateUnit(wRu, $6E30314B, - 3892.1, - 1774., 272.118)
    set uRu = CreateUnit(wRu, $6E30314B, - 5550.9, - 2639.6, 164.35)
    set uRu = CreateUnit(wRu, $6E30314B, - 5664.6, - 2546.9, 54.823)
    set uRu = CreateUnit(wRu, $6E30314B, - 5758.2, - 2393.3, 156.582)
    set uRu = CreateUnit(wRu, $6E30314B, - 5035., - 2557.3, 341.169)
    set uRu = CreateUnit(wRu, $6E30314F, - 1831.5, - 3141.8, 301.804)
    set uRu = CreateUnit(wRu, $6E30314F, - 1536.9, - 3150.6, 184.818)
    set uRu = CreateUnit(wRu, $6E30314F, - 1278.8, - 3215.1, 90.255)
    set uRu = CreateUnit(wRu, $6E30314E, - 1701.6, - 3199.1, 224.304)
    set uRu = CreateUnit(wRu, $6E30314E, - 1526.8, - 3353.3, 142.2)
    set uRu = CreateUnit(wRu, $6E30314E, - 1314.4, - 3451.7, 107.515)
    set uRu = CreateUnit(wRu, $6E30314F, - 866.2, - 4088.7, 152.253)
    set uRu = CreateUnit(wRu, $6E30314F, - 880.9, - 4276.7, 62.481)
    set uRu = CreateUnit(wRu, $6E30314E, - 716.9, - 4165.1, 209.856)
    set uRu = CreateUnit(wRu, $6E30314E, - 716.1, - 4035.6, 129.181)
    set uRu = CreateUnit(wRu, $6E30314F, - 248.3, - 3606.8, 24.401)
    set uRu = CreateUnit(wRu, $6E30314F, - 152.9, - 3821.6, 187.63)
    set uRu = CreateUnit(wRu, $6E30314E, - 47.1, - 3622.6, 185.664)
    set uRu = CreateUnit(wRu, $6E30314E, 604.5, - 2967.4, 294.805)
    set uRu = CreateUnit(wRu, $6E30314E, 698.2, - 3199.8, 271.404)
    set uRu = CreateUnit(wRu, $6E30314F, 397.7, - 2934.6, 344.663)
    set uRu = CreateUnit(wRu, $6E30314F, 565.8, - 3357.8, 240.96)
    set uRu = CreateUnit(wRu, $6E30314F, 434.7, - 3145., 4.614)
    set uRu = CreateUnit(wRu, $6E30314F, - 4846.5, - 4210.7, 351.793)
    set uRu = CreateUnit(wRu, $6E30314F, - 4871.3, - 4454.2, 359.747)
    set uRu = CreateUnit(wRu, $6E30314F, - 4877.3, - 3996., 1.989)
    set uRu = CreateUnit(wRu, $6E30314F, - 4094.7, - 4101.2, 19.534)
    set uRu = CreateUnit(wRu, $6E303155, - 12925.2, - 6389.6, 201.737)
    set uRu = CreateUnit(wRu, $6E303157, - 11740.5, - 6594.8, 240.267)
    set uRu = CreateUnit(wRu, $6E303235, - 4473.4, - 8437.6, 130.697)
    set uRu = CreateUnit(wRu, $6E303157, - 12808.5, - 6231.7, 46.32)
    set uRu = CreateUnit(wRu, $6E303157, - 11404.5, - 6615.1, 273.7)
    set uRu = CreateUnit(wRu, $6E303235, - 4731.9, - 6638.5, 251.485)
    set uRu = CreateUnit(wRu, $6E303157, - 12952.6, - 6245.1, 219.47)
    set uRu = CreateUnit(wRu, $6E303156, - 13111.2, - 6136.5, 296.739)
    set uRu = CreateUnit(wRu, $6E303156, - 12956.6, - 6100.4, 128.522)
    set uRu = CreateUnit(wRu, $6E303156, - 12795.4, - 6074.7, 10.141)
    set uRu = CreateUnit(wRu, $6E303235, - 4719., - 6825.1, 31.268)
    set uRu = CreateUnit(wRu, $6E303156, - 13136.9, - 5368.3, 102.659)
    set uRu = CreateUnit(wRu, $6E303155, - 12994.9, - 7229.1, 231.5)
    set uRu = CreateUnit(wRu, $6E303156, - 12804.8, - 7217.1, 351.441)
    set uRu = CreateUnit(wRu, $6E303156, - 12760.3, - 7020., 170.821)
    set uRu = CreateUnit(wRu, $6E303155, - 12584.1, - 7214.4, 111.91)
    set uRu = CreateUnit(wRu, $6E303157, - 11732.3, - 7547.3, 236.422)
    set uRu = CreateUnit(wRu, $6E303156, - 13017.7, - 5371.3, 357.967)
    set uRu = CreateUnit(wRu, $6E303156, - 12870.7, - 5365.4, 344.289)
    set uRu = CreateUnit(wRu, $6E30314E, - 1437.2, - 2136.5, 184.027)
    set uRu = CreateUnit(wRu, $6E303156, - 11857.4, - 7429.7, 238.235)
    set uRu = CreateUnit(wRu, $6E303157, - 11513.8, - 7026.5, 297.925)
    set uRu = CreateUnit(wRu, $6E303157, - 11611.1, - 7028., 193.717)
    set uRu = CreateUnit(wRu, $6E303155, - 11689.3, - 7134.3, 324.129)
    set uRu = CreateUnit(wRu, $6E303155, - 11412.6, - 7101., 315.482)
    set uRu = CreateUnit(wRu, $6E303156, - 12002.4, - 7371., 208.043)
    set uRu = CreateUnit(wRu, $6E30314E, - 1711., - 2109.6, 136.158)
    set uRu = CreateUnit(wRu, $6E303155, - 11598.5, - 7328.1, 182.499)
    set uRu = CreateUnit(wRu, $6E30314E, - 3222.3, - 4224.9, 119.832)
    set uRu = CreateUnit(wRu, $6E303157, - 12626.7, - 7010.2, 270.25)
    set uRu = CreateUnit(wRu, $6E303157, - 12933.3, - 7036.6, 40.068)
    set uRu = CreateUnit(wRu, $6E30314E, - 3095.2, - 4029.5, 158.208)
    set uRu = CreateUnit(wRu, $6E303156, - 11672.1, - 6867.1, 349.903)
    set uRu = CreateUnit(wRu, $6E303156, - 11383.1, - 6892.9, 65.689)
    set uRu = CreateUnit(wRu, $6E303155, - 11767.2, - 7256.1, 91.046)
    set uRu = CreateUnit(wRu, $6E303150, - 9264.1, - 5679.2, 185.62)
    set uRu = CreateUnit(wRu, $6E303150, - 9150.2, - 5529.4, 10.954)
    set uRu = CreateUnit(wRu, $6E303152, - 9125.6, - 5679.2, 15.074)
    set uRu = CreateUnit(wRu, $6E303152, - 8837.9, - 6973., 314.702)
    set uRu = CreateUnit(wRu, $6E303152, - 8833.9, - 6793.1, 275.15)
    set uRu = CreateUnit(wRu, $6E30314F, - 3442.9, - 3364.1, 193.266)
    set uRu = CreateUnit(wRu, $6E30314F, - 3034.9, - 3438.6, 1.417)
    set uRu = CreateUnit(wRu, $6E30314F, - 3302., - 3573.4, 279.105)
    set uRu = CreateUnit(wRu, $6E30314E, - 1714.9, - 3816.5, 113.943)
    set uRu = CreateUnit(wRu, $6E30314E, - 1547.8, - 3874.4, 289.817)
    set uRu = CreateUnit(wRu, $6E30314F, - 1678.2, - 3996., 59.251)
    set uRu = CreateUnit(wRu, $6E30314F, - 1478.7, - 1752.6, 90.464)
    set uRu = CreateUnit(wRu, $6E303156, - 12748.3, - 5371.3, 81.29)
    set uRu = CreateUnit(wRu, $6E303156, - 13245.9, - 5389., 90.409)
    set uRu = CreateUnit(wRu, $6E303156, - 11538.1, - 7201.1, 27.423)
    set uRu = CreateUnit(wRu, $6E303157, - 13126.2, - 5477.7, 42.376)
    set uRu = CreateUnit(wRu, $6E303157, - 12999., - 5487.3, .956)
    set uRu = CreateUnit(wRu, $6E303157, - 12866.8, - 5487.3, 182.236)
    set uRu = CreateUnit(wRu, $6E303150, - 7339., - 5642.4, 173.062)
    set uRu = CreateUnit(wRu, $6E303150, - 7173.9, - 5669.2, 196.354)
    set uRu = CreateUnit(wRu, $6E303150, - 7647.2, - 6701.7, 22.567)
    set uRu = CreateUnit(wRu, $6E303150, - 7750.2, - 6580.8, 94.31)
    set uRu = CreateUnit(wRu, $6E303152, - 7772., - 6744.4, 98.506)
    set uRu = CreateUnit(wRu, $6E303151, - 7933.9, - 3701.4, 306.55)
    set uRu = CreateUnit(wRu, $6E303151, - 7927.1, - 3901.9, 236.598)
    set uRu = CreateUnit(wRu, $6E303158, - 8151., - 3693.4, 266.361)
    set uRu = CreateUnit(wRu, $6E303158, - 8131.7, - 3813.9, 130.005)
    set uRu = CreateUnit(wRu, $6E303158, - 8124.2, - 3937., 41.002)
    set uRu = CreateUnit(wRu, $6E303158, - 8918.2, - 3529.2, 308.418)
    set uRu = CreateUnit(wRu, $6E303158, - 9032.1, - 3854.5, 158.757)
    set uRu = CreateUnit(wRu, $6E303158, - 9198.8, - 3556.6, 225.633)
    set uRu = CreateUnit(wRu, $6E303151, - 8865.1, - 3735.8, 88.992)
    set uRu = CreateUnit(wRu, $6E303151, - 9004., - 3641.9, 320.47)
    set uRu = CreateUnit(wRu, $6E303158, - 10544., - 2558.5, 57.262)
    set uRu = CreateUnit(wRu, $6E303158, - 10352.9, - 2561.8, 356.583)
    set uRu = CreateUnit(wRu, $6E303151, - 10476.2, - 2712.9, 215.877)
    set uRu = CreateUnit(wRu, $6E30314B, - 4140., - 1558.3, 187.4)
    set uRu = CreateUnit(wRu, $6E30314B, - 4032.1, - 1691., 39.508)
    set uRu = CreateUnit(wRu, $6E303151, - 10344.1, - 2719., 255.682)
    set uRu = CreateUnit(wRu, $6E303151, - 10482.5, - 2412.4, 8.756)
    set uRu = CreateUnit(wRu, $6E303158, - 9984.6, - 1708.6, 223.37)
    set uRu = CreateUnit(wRu, $6E303158, - 9995.2, - 2034.9, 252.265)
    set uRu = CreateUnit(wRu, $6E303151, - 9897., - 1884.4, 279.369)
    set uRu = CreateUnit(wRu, $6E303151, - 10073.8, - 1847.4, 312.922)
    set uRu = CreateUnit(wRu, $6E303155, - 12812.9, - 5598.1, 204.385)
    set uRu = CreateUnit(wRu, $6E303155, - 12927.7, - 5615.7, 217.096)
    set uRu = CreateUnit(wRu, $6E303158, - 7526.1, - 4740.7, 25.017)
    set uRu = CreateUnit(wRu, $6E303151, - 7502.2, - 4591.8, 164.47)
    set uRu = CreateUnit(wRu, $6E303151, - 8892.9, - 2073.1, 127.907)
    set uRu = CreateUnit(wRu, $6E303151, - 8894.2, - 1742.1, 333.885)
    set uRu = CreateUnit(wRu, $6E303151, - 8804.8, - 1854.2, 108.493)
    set uRu = CreateUnit(wRu, $6E303158, - 8816.1, - 1577.9, 315.438)
    set uRu = CreateUnit(wRu, $6E303158, - 8615.1, - 1635.5, 337.95)
    set uRu = CreateUnit(wRu, $6E303151, - 7482., - 1370.4, 129.038)
    set uRu = CreateUnit(wRu, $6E303158, - 7297.2, - 1380., 238.982)
    set uRu = CreateUnit(wRu, $6E303158, - 8516.7, - 1505., 259.)
    set uRu = CreateUnit(wRu, $6E303151, - 8335.1, - 1495.6, 226.776)
    set uRu = CreateUnit(wRu, $6E303151, - 8627., - 1367.6, 10.47)
    set uRu = CreateUnit(wRu, $6E303158, - 7403.4, - 1583.7, 309.253)
    set uRu = CreateUnit(wRu, $6E303158, - 9203.4, - 877.1, 251.529)
    set uRu = CreateUnit(wRu, $6E303233, - 2710.1, - 6438.7, 263.61)
    set uRu = CreateUnit(wRu, $6E303151, - 9332.2, - 941.5, 263.933)
    set uRu = CreateUnit(wRu, $6E303158, - 10280.6, - 951.6, 248.903)
    set uRu = CreateUnit(wRu, $6E303158, - 10441.4, - 1084.2, 226.765)
    set uRu = CreateUnit(wRu, $6E303158, - 10504., - 868.5, 134.246)
    set uRu = CreateUnit(wRu, $6E303151, - 10288.9, - 820.4, 312.615)
    set uRu = CreateUnit(wRu, $6E303151, - 10246.5, - 1152.9, 101.605)
    set uRu = CreateUnit(wRu, $6E303158, - 10577.4, - 1845.9, 224.523)
    set uRu = CreateUnit(wRu, $6E303151, - 10538.4, - 1957., 210.702)
    set uRu = CreateUnit(wRu, $6E303151, - 8128.6, - 1390.2, 295.684)
    set uRu = CreateUnit(wRu, $6E303158, - 7850.7, - 1513.1, 242.003)
    set uRu = CreateUnit(wRu, $6E303155, - 13042.3, - 5618.2, 316.075)
    set uRu = CreateUnit(wRu, $6E303155, - 13177.1, - 5611.9, 37.19)
    set uRu = CreateUnit(wRu, $6E30314B, - 4990., - 1417.6, 310.)
    set uRu = CreateUnit(wRu, $6E30314B, - 5127.7, - 1495.3, 337.291)
    set uRu = CreateUnit(wRu, $6E30314B, - 5453.4, - 1491.8, 258.296)
    set uRu = CreateUnit(wRu, $6E30314B, - 5552., - 1465.5, 84.575)
    set uRu = CreateUnit(wRu, $6E30314B, - 4963.9, - 1527.3, 179.017)
    set uRu = CreateUnit(wRu, $6E303233, - 2444.9, - 6601.8, 289.8)
    set uRu = CreateUnit(wRu, $6E30314B, - 4530.3, - 1615.6, 345.959)
    set uRu = CreateUnit(wRu, $6E303233, - 2673.9, - 6270.5, 43.85)
    set uRu = CreateUnit(wRu, $6E303233, - 2272.2, - 6554.7, 224.5)
    set uRu = CreateUnit(wRu, $6E303233, - 7392.4, - 9176.4, 327.765)
    set uRu = CreateUnit(wRu, $6E303233, - 7242., - 9283., 32.51)
    set uRu = CreateUnit(wRu, $6E303233, - 6296.6, - 9100.9, 44.705)
    set uRu = CreateUnit(wRu, $6E303233, - 7163.5, - 9411.6, 289.916)
    set uRu = CreateUnit(wRu, $6E303233, - 4726.1, - 8478.4, 77.006)
    set uRu = CreateUnit(wRu, $6E303233, - 4359.1, - 8721., 189.52)
    set uRu = CreateUnit(wRu, $6E303231, - 4560.5, - 8269.6, 101.737)
    set uRu = CreateUnit(wRu, $6E303231, - 4302.6, - 8385.9, 226.995)
    set uRu = CreateUnit(wRu, $6E303232, - 6273.4, - 8852.6, 254.704)
    set uRu = CreateUnit(wRu, $6E303232, - 6193.4, - 8951.5, 226.106)
    set uRu = CreateUnit(wRu, $6E303235, - 7245.5, - 9134.4, 303.188)
    set uRu = CreateUnit(wRu, $6E303235, - 7129.3, - 9254.3, 256.583)
    set uRu = CreateUnit(wRu, $6E303233, - 4535.2, - 8583., 257.582)
    set uRu = CreateUnit(wRu, $6E303231, - 6371.8, - 8896.5, 62.393)
    set uRu = CreateUnit(wRu, $6E303231, - 4276.1, - 7234.7, 152.198)
    set uRu = CreateUnit(wRu, $6E303231, - 4144.1, - 7136.1, 71.314)
    set uRu = CreateUnit(wRu, $6E303233, - 4168.6, - 7400.6, 310.813)
    set uRu = CreateUnit(wRu, $6E303231, - 4868.5, - 6678.3, 190.717)
    set uRu = CreateUnit(wRu, $6E303233, - 4564.2, - 6742.4, 25.972)
    set uRu = CreateUnit(wRu, $6E303237, 9580.9, 515.2, 296.882)
    set uRu = CreateUnit(wRu, $6E303239, 10678.7, - 502.6, 232.862)
    set uRu = CreateUnit(wRu, $6E303238, 10642.6, 343.7, 123.303)
    set uRu = CreateUnit(wRu, $6E303238, 9800., 780., 199.303)
    set uRu = CreateUnit(wRu, $6E303238, 10200., - 1080., 87.303)
    set uRu = CreateUnit(wRu, $6E303239, 9250.1, 686.1, 24.303)
    set uRu = CreateUnit(wRu, $6E303239, 9881.7, 621.6, 156.758)
    set uRu = CreateUnit(wRu, $6E303238, 10166.2, - 407.3, 106.724)
    set uRu = CreateUnit(wRu, $6E303238, 10631.3, - 1431.8, 315.834)
    set uRu = CreateUnit(wRu, $6E303238, 10376.2, - 2277.6, 146.397)
    set uRu = CreateUnit(wRu, $6E303238, 10418.9, - 1947.7, 168.81)
    set uRu = CreateUnit(wRu, $6E303238, 12673.6, - 1998.3, 103.934)
    set uRu = CreateUnit(wRu, $6E303238, 12523.5, - 932.1, 280.951)
    set uRu = CreateUnit(wRu, $6E303238, 11718.2, - 2105.1, 349.079)
    set uRu = CreateUnit(wRu, $6E303239, 11715.1, - 1870.1, 284.214)
    set uRu = CreateUnit(wRu, $6E303239, 12106.6, - 1169., 133.367)
    set uRu = CreateUnit(wRu, $6E303239, 10258.4, - 2019.6, 150.979)
    set uRu = CreateUnit(wRu, $6E303239, 12647.7, - 1759.1, 40.112)
    set uRu = CreateUnit(wRu, $6E303239, 10998., - 1295.3, 101.176)
    set uRu = CreateUnit(wRu, $6E303237, 10439., 152.6, 240.289)
    set uRu = CreateUnit(wRu, $6E303237, 10352.7, - 630.2, 113.734)
    set uRu = CreateUnit(wRu, $6E303237, 10440.2, - 1462.3, 218.525)
    set uRu = CreateUnit(wRu, $6E303237, 10619.1, - 2120.3, 51.692)
    set uRu = CreateUnit(wRu, $6E303237, 10721.8, - 2289.2, 217.964)
    set uRu = CreateUnit(wRu, $6E303237, 11960.8, - 1862.1, 73.27)
    set uRu = CreateUnit(wRu, $6E303237, 12277.1, - 1324.4, 212.141)
    set uRu = CreateUnit(wRu, $6E303237, 11515.5, - 1926.9, 105.659)
    set uRu = CreateUnit(wRu, $6E303238, 11524.8, 165.1, 127.083)
    set uRu = CreateUnit(wRu, $6E303238, 11882.8, 651.3, 19.721)
    set uRu = CreateUnit(wRu, $6E303238, 12196., 780.1, 255.506)
    set uRu = CreateUnit(wRu, $6E303238, 12339.5, - 9.2, 219.448)
    set uRu = CreateUnit(wRu, $6E303238, 12035., - 26.9, 212.273)
    set uRu = CreateUnit(wRu, $6E303243, - 12928.3, 7369.1, 271.162)
    set uRu = CreateUnit(wRu, $6E303243, - 13377.6, 7473.1, 30.653)
    set uRu = CreateUnit(wRu, $6E303243, - 13359.7, 8522., 334.621)
    set uRu = CreateUnit(wRu, $6E303243, - 12557.9, 8333.4, 112.503)
    set uRu = CreateUnit(wRu, $6E303243, - 12233.5, 7788.3, 337.148)
    set uRu = CreateUnit(wRu, $6E303243, - 11961.1, 7922.7, 356.858)
    set uRu = CreateUnit(wRu, $6E303243, - 12744.8, 7866.6, 34.674)
    set uRu = CreateUnit(wRu, $6E303242, - 12234.5, 8900.7, 201.419)
    set uRu = CreateUnit(wRu, $6E303242, - 12997.4, 8279.4, 250.364)
    set uRu = CreateUnit(wRu, $6E303243, - 12593.6, 9164.2, 182.115)
    set uRu = CreateUnit(wRu, $6E303243, - 12042.4, 8899.5, 226.193)
    set uRu = CreateUnit(wRu, $6E303243, - 12066.5, 9262.5, 266.416)
    set uRu = CreateUnit(wRu, $6E303243, - 11960.3, 9971.2, 24.753)
    set uRu = CreateUnit(wRu, $6E303243, - 12600.2, 9651.1, 186.927)
    set uRu = CreateUnit(wRu, $6E303243, - 12537.4, 8677.2, 122.556)
    set uRu = CreateUnit(wRu, $6E303242, - 13124.3, 11792.1, 165.108)
    set uRu = CreateUnit(wRu, $6E303243, - 12968.2, 9541.7, 38.673)
    set uRu = CreateUnit(wRu, $6E303243, - 13392., 10222.1, 236.708)
    set uRu = CreateUnit(wRu, $6E303243, - 12734.4, 10254.6, 70.644)
    set uRu = CreateUnit(wRu, $6E303243, - 13247.5, 11044.7, 195.156)
    set uRu = CreateUnit(wRu, $6E303243, - 12469.6, 10702.7, 347.937)
    set uRu = CreateUnit(wRu, $6E303243, - 12595.4, 11399.4, 225.314)
    set uRu = CreateUnit(wRu, $6E303243, - 12832.1, 11830.3, 20.391)
    set uRu = CreateUnit(wRu, $6E303243, - 13114.5, 12422.9, 19.809)
    set uRu = CreateUnit(wRu, $6E303243, - 13367.8, 12203.5, 337.51)
    set uRu = CreateUnit(wRu, $6E303243, - 12305.3, 12481.5, 202.506)
    set uRu = CreateUnit(wRu, $6E303243, - 11952.6, 11783.5, 266.163)
    set uRu = CreateUnit(wRu, $6E303243, - 12284.5, 12120.1, 54.823)
    set uRu = CreateUnit(wRu, $6E303243, - 11954.9, 12957., 153.802)
    set uRu = CreateUnit(wRu, $6E303243, - 12555.5, 13101.3, 127.357)
    set uRu = CreateUnit(wRu, $6E303242, - 12294., 13052., 278.413)
    set uRu = CreateUnit(wRu, $6E303242, - 12526.3, 12747.9, 132.345)
    set uRu = CreateUnit(wRu, $6E303242, - 13098.2, 12620.5, 205.989)
    set uRu = CreateUnit(wRu, $6E303242, - 12859.3, 12257.6, 135.422)
    set uRu = CreateUnit(wRu, $6E303242, - 12597.9, 11980.6, 219.415)
    set uRu = CreateUnit(wRu, $6E303242, - 11964.4, 12521.3, 354.342)
    set uRu = CreateUnit(wRu, $6E303242, - 12233.7, 11867.6, 175.918)
    set uRu = CreateUnit(wRu, $6E303242, - 12751., 11329.2, 50.747)
    set uRu = CreateUnit(wRu, $6E303242, - 13365.5, 11507.6, 114.36)
    set uRu = CreateUnit(wRu, $6E303242, - 13002.3, 10930.8, 80.609)
    set uRu = CreateUnit(wRu, $6E303242, - 12591., 10829.6, 15.711)
    set uRu = CreateUnit(wRu, $6E303242, - 12523.4, 11077.7, 28.049)
    set uRu = CreateUnit(wRu, $6E303242, - 12815.1, 9291.9, 258.406)
    set uRu = CreateUnit(wRu, $6E303242, - 12086.2, 10589.8, 101.901)
    set uRu = CreateUnit(wRu, $6E303242, - 12918., 10562.3, 21.688)
    set uRu = CreateUnit(wRu, $6E303242, - 13253.4, 9788.4, 172.688)
    set uRu = CreateUnit(wRu, $6E303242, - 12341.3, 10020.6, 334.401)
    set uRu = CreateUnit(wRu, $6E303242, - 12187.2, 9172.4, 26.456)
    set uRu = CreateUnit(wRu, $6E303242, - 12225.3, 8285., 330.578)
    set uRu = CreateUnit(wRu, $6E303242, - 13002.2, 7608.1, 125.215)
    set uRu = CreateUnit(wRu, $6E303242, - 12222.3, 7647.6, 150.177)
    set uRu = CreateUnit(wRu, $6E303242, - 11969.6, 8119.9, 350.013)
    set uRu = CreateUnit(wRu, $6E303242, - 13180.7, 8780.2, 117.744)
    set uRu = CreateUnit(wRu, $48303233, - 267.5, - 6138.6, 270.)
    call SetUnitState(uRu, UNIT_STATE_MANA, 0.)
    set uRu = CreateUnit(wRu, $48303131, - 4.7, - 6134.4, 270.)
    call SetUnitState(uRu, UNIT_STATE_MANA, 0.)
    set uRu = CreateUnit(wRu, $4830324B, 88.6, - 6075.3, 270.)
    call SetUnitState(uRu, UNIT_STATE_MANA, 0.)
    set uRu = CreateUnit(wRu, $48303248, - 73.5, - 6136.7, 270.)
    call SetUnitState(uRu, UNIT_STATE_MANA, 0.)
    set uRu = CreateUnit(wRu, $48303133, - 330.4, - 6182., 270.)
    call SetUnitState(uRu, UNIT_STATE_MANA, 0.)
    set uRu = CreateUnit(wRu, $4830324D, - 425.3, - 6125.8, 270.)
    call SetUnitState(uRu, UNIT_STATE_MANA, 0.)
    set uRu = CreateUnit(wRu, $48303143, - 396.4, - 6237., 270.)
    call SetUnitState(uRu, UNIT_STATE_MANA, 0.)
    set uRu = CreateUnit(wRu, $48303251, - 254.2, - 6243.5, 270.)
    call SetUnitState(uRu, UNIT_STATE_MANA, 0.)
    set uRu = CreateUnit(wRu, $4830324C, - 169., - 6202.9, 270.)
    call SetUnitState(uRu, UNIT_STATE_MANA, 0.)
    set uRu = CreateUnit(wRu, $48303243, - 102.7, - 6202.9, 270.)
    call SetUnitState(uRu, UNIT_STATE_MANA, 0.)
    set uRu = CreateUnit(wRu, $48303144, - 16.2, - 6200.7, 270.)
    call SetUnitState(uRu, UNIT_STATE_MANA, 0.)
    set uRu = CreateUnit(wRu, $48303132, 88.9, - 6147.6, 270.)
    call SetUnitState(uRu, UNIT_STATE_MANA, 0.)
    set uRu = CreateUnit(wRu, $48303145, 92.1, - 6255.9, 270.)
    call SetUnitState(uRu, UNIT_STATE_MANA, 0.)
    set uRu = CreateUnit(wRu, $48303049, 171.9, - 6314.4, 270.)
    call SetUnitState(uRu, UNIT_STATE_MANA, 0.)
    set uRu = CreateUnit(wRu, $48303135, 157.2, - 6396., 270.)
    call SetUnitState(uRu, UNIT_STATE_MANA, 0.)
    set uRu = CreateUnit(wRu, $4830324F, 84.9, - 6477.5, 270.)
    call SetUnitState(uRu, UNIT_STATE_MANA, 0.)
    set uRu = CreateUnit(wRu, $48303141, - 169., - 6108.1, 270.)
    call SetUnitState(uRu, UNIT_STATE_MANA, 0.)
    set uRu = CreateUnit(wRu, $48303246, 51.9, - 6354.4, 270.)
    call SetUnitState(uRu, UNIT_STATE_MANA, 0.)
    set uRu = CreateUnit(wRu, $4830324E, - 49.2, - 6270., 270.)
    call SetUnitState(uRu, UNIT_STATE_MANA, 0.)
    set uRu = CreateUnit(wRu, $48303142, - 112.9, - 6311.4, 270.)
    call SetUnitState(uRu, UNIT_STATE_MANA, 0.)
    set uRu = CreateUnit(wRu, $48303250, - 183., - 6309.9, 270.)
    call SetUnitState(uRu, UNIT_STATE_MANA, 0.)
    set uRu = CreateUnit(wRu, $48303242, - 36.5, - 6370.3, 270.)
    call SetUnitState(uRu, UNIT_STATE_MANA, 0.)
    set uRu = CreateUnit(wRu, $48303252, - 30.3, - 6530.4, 270.)
    call SetUnitState(uRu, UNIT_STATE_MANA, 0.)
    set uRu = CreateUnit(wRu, $48303255, - 122.7, - 6404.4, 270.)
    call SetUnitState(uRu, UNIT_STATE_MANA, 0.)
    set uRu = CreateUnit(wRu, $48303254, - 264.7, - 6386.8, 270.)
    call SetUnitState(uRu, UNIT_STATE_MANA, 0.)
    set uRu = CreateUnit(wRu, $48303136, - 189.6, - 6417.6, 270.)
    call SetUnitState(uRu, UNIT_STATE_MANA, 0.)
    set uRu = CreateUnit(wRu, $48303139, - 234.1, - 6536.6, 270.)
    call SetUnitState(uRu, UNIT_STATE_MANA, 0.)
    set uRu = CreateUnit(wRu, $48303138, - 298.9, - 6529.1, 270.)
    call SetUnitState(uRu, UNIT_STATE_MANA, 0.)
    set uRu = CreateUnit(wRu, $48303245, - 366.5, - 6491.4, 270.)
    call SetUnitState(uRu, UNIT_STATE_MANA, 0.)
    set uRu = CreateUnit(wRu, $48303130, - 62.1, - 6443.8, 270.)
    call SetUnitState(uRu, UNIT_STATE_MANA, 0.)
    set uRu = CreateUnit(wRu, $48303253, - 434.3, - 6534.4, 270.)
    call SetUnitState(uRu, UNIT_STATE_MANA, 0.)
    set uRu = CreateUnit(wRu, $48303134, - 320.2, - 6306.7, 270.)
    call SetUnitState(uRu, UNIT_STATE_MANA, 0.)
    set uRu = CreateUnit(wRu, $4830304E, - 396., - 6323.8, 270.)
    call SetUnitState(uRu, UNIT_STATE_MANA, 0.)
    set uRu = CreateUnit(wRu, $48303159, - 443.7, - 6395.9, 270.)
    call SetUnitState(uRu, UNIT_STATE_MANA, 0.)
    set uRu = CreateUnit(wRu, $4830304F, - 501.4, - 6431.9, 270.)
    call SetUnitState(uRu, UNIT_STATE_MANA, 0.)
    set uRu = CreateUnit(wRu, $4830315A, - 489.6, - 6325.1, 270.)
    call SetUnitState(uRu, UNIT_STATE_MANA, 0.)
    set uRu = CreateUnit(wRu, $48303234, - 161.6, - 6540.4, 270.)
    call SetUnitState(uRu, UNIT_STATE_MANA, 0.)
    set uRu = CreateUnit(wRu, $48303146, - 189.5, - 6482.3, 270.)
    call SetUnitState(uRu, UNIT_STATE_MANA, 0.)
    set uRu = CreateUnit(wRu, $48303137, - 467.4, - 6201.1, 270.)
    call SetUnitState(uRu, UNIT_STATE_MANA, 0.)
    set uRu = CreateUnit(wRu, $6E303147, - 10279.2, 2361.7, 142.047)
    set uRu = CreateUnit(wRu, $6E303147, - 10704.1, 1568., 186.466)
    set uRu = CreateUnit(wRu, $6E303147, - 9374.9, 1654.7, 199.441)
    set uRu = CreateUnit(wRu, $6E303147, - 10507.6, 897.1, 2.857)
    set uRu = CreateUnit(wRu, $6E303147, - 9365.9, 531.7, 332.27)
    set uRu = CreateUnit(wRu, $6E303148, - 9428., 980., 273.788)
    set uRu = CreateUnit(wRu, $6E303148, - 10556.2, 1288.2, 327.062)
    set qG = CreateUnit(wRu, $6830334B, 4596.7, 2679., 270.)
    set aG = CreateUnit(wRu, $6830334B, 5125.8, 2441.8, 180.)
    set nG = CreateUnit(wRu, $6830334B, 6527.5, 2425.3, 180.)
    set dG = CreateUnit(wRu, $6830334B, 5516.9, 2828.9, 270.)
    set fG = CreateUnit(wRu, $6830334B, 5292., 2181.2, 360.)
    set eG = CreateUnit(wRu, $6830334B, 5242.3, 2834., 180.)
    set RG = CreateUnit(wRu, $6830334D, 6124.4, 1784., 242.564)
    set TG = CreateUnit(wRu, $6830334D, 6495.6, 1775.1, 242.564)
    set YG = CreateUnit(wRu, $6830334D, 5779.9, 1021.1, 242.564)
    set OG = CreateUnit(wRu, $6830334D, 5531.5, 1267.4, 242.564)
    set gG = CreateUnit(wRu, $6830334D, 6232.1, 767.9, 242.564)
    set GG = CreateUnit(wRu, $6830334A, 7680.8, 755.9, 249.716)
    set bG = CreateUnit(wRu, $6830334A, 7056.3, 1043.1, 293.333)
    set lG = CreateUnit(wRu, $6830334A, 7390.8, 1420., 221.26)
    set pG = CreateUnit(wRu, $6830334A, 7448.3, 2218.5, 357.715)
    set yG = CreateUnit(wRu, $6830334A, 7688., 2617.3, 265.471)
    set wRu = Player($0000000B)
    set uRu = CreateUnit(wRu, $68303030, 4599.1, - 11967.5, 360.)
    set uRu = CreateUnit(wRu, $68303030, 4610.9, - 12487.3, 360.)
    set uRu = CreateUnit(wRu, $68303030, 3282.9, - 13028.1, 163.053)
    set uRu = CreateUnit(wRu, $68303030, 3606.5, - 12893., 130.664)
    set uRu = CreateUnit(wRu, $68303030, 3588.1, - 13188.8, 327.238)
    set uRu = CreateUnit(wRu, $68303030, 1653.2, - 11536.1, 17.359)
    set uRu = CreateUnit(wRu, $68303030, 1363.1, - 12961.5, 121.853)
    set uRu = CreateUnit(wRu, $68303030, - 393.6, - 13010.2, 132.994)
    set uRu = CreateUnit(wRu, $68303030, - 455.4, - 11707.2, 121.293)
    set uRu = CreateUnit(wRu, $68303030, 49.1, - 12096.1, 270.)
    set uRu = CreateUnit(wRu, $68303030, 406.2, - 12094.3, 270.)
    set uRu = CreateUnit(wRu, $68303030, 436.3, 2074.3, 270.)
    set uRu = CreateUnit(wRu, $68303030, 850.5, 2074.3, 270.)
    set uRu = CreateUnit(wRu, $68303030, 1735.4, - 252.4, 217.602)
    set uRu = CreateUnit(wRu, $68303030, 807.2, - 995.8, 202.374)
    set uRu = CreateUnit(wRu, $68303030, 1221.8, 5282., 90.)
    set uRu = CreateUnit(wRu, $68303030, 1591.4, 5280., 90.)
    set gu = CreateUnit(wRu, $68303043, - 4388.2, 402.2, 181.621)
    set uRu = CreateUnit(wRu, $6E76696C, - 3711.4, 4807.5, 358.69)
    set uRu = CreateUnit(wRu, $6E766C32, - 4211.4, 5282.8, 225.)
    set uRu = CreateUnit(wRu, $6E766C77, - 4589.4, 5241.4, 307.2)
    set uRu = CreateUnit(wRu, $6E766B32, - 4320.4, 4954., 318.61)
    set uRu = CreateUnit(wRu, $6E766C6B, - 4266.1, 4947., 168.12)
    set uRu = CreateUnit(wRu, $6E646F67, - 4091.4, 4926.9, 231.58)
    set uRu = CreateUnit(wRu, $6E766C77, 2320.6, - 1491.3, 356.704)
    set uRu = CreateUnit(wRu, $6E766C32, 2397.2, - 1410.9, 270.11)
    set uRu = CreateUnit(wRu, $6E766C32, - 7745.4, 3801., 118.337)
    set uRu = CreateUnit(wRu, $6E766C32, - 7817.7, 3910.4, 288.806)
    set uRu = CreateUnit(wRu, $6E626565, - 7579.1, 5306.8, 300.)
    set uRu = CreateUnit(wRu, $6E626565, - 7436.6, 5084.2, 160.)
    set uRu = CreateUnit(wRu, $6E626565, - 7489.4, 4997.7, 130.)
    set uRu = CreateUnit(wRu, $6868646C, - 5042.6, 4850.3, 270.)
    set uRu = CreateUnit(wRu, $68303030, - 7167.6, 5435.4, 270.)
    set uRu = CreateUnit(wRu, $68303030, - 6668.8, 5443.1, 270.)
    set uRu = CreateUnit(wRu, $68303030, - 6170.8, 3732.3, 178.039)
    set uRu = CreateUnit(wRu, $68303030, - 5039.9, 3414.8, 270.)
    set uRu = CreateUnit(wRu, $68303030, - 4723.3, 3418.8, 270.)
    set uRu = CreateUnit(wRu, $68303030, - 2735.6, 2803., 360.)
    set uRu = CreateUnit(wRu, $68303030, - 2710.1, 2318.9, 360.)
    set uRu = CreateUnit(wRu, $68303030, - 4374.5, 1109.4, 78.522)
    set uRu = CreateUnit(wRu, $68303030, - 2834.4, 1089.7, 180.)
    set uRu = CreateUnit(wRu, $68303030, - 5123.1, 495.4, 219.975)
    set wG = CreateUnit(wRu, $48303048, - 7966.8, 927.4, 50.)
    call SetHeroLevel(wG, $000000FA, false)
    set uRu = CreateUnit(wRu, $68303030, - 6757.3, 4099.3, 270.)
    set uRu = CreateUnit(wRu, $68303030, - 7982.2, 4675.7, 360.)
    set uRu = CreateUnit(wRu, $68303030, - 5318.9, 5186.8, 4.636)
    set uRu = CreateUnit(wRu, $68303030, 4925.6, - 3206., 50.)
    call SetUnitAcquireRange(uRu, 200.)
    set MY = CreateUnit(wRu, $48303049, - 7677.4, 830., 90.)
    call SetHeroLevel(MY, $000000FA, false)
    set iG = CreateUnit(wRu, $48303045, - 7525., 1195.7, 130.)
    call SetHeroLevel(iG, $000000FA, false)
    set tG = CreateUnit(wRu, $4830304C, - 6461.5, 1108.5, 90.)
    call SetHeroLevel(tG, $000000FA, false)
    set sG = CreateUnit(wRu, $4830304A, - 4489.3, 3523.7, 290.)
    call SetHeroLevel(sG, $000000FA, false)
    set rG = CreateUnit(wRu, $4830304D, - 4738.2, 1271.1, 270.)
    call SetHeroLevel(rG, $000000FA, false)
    set uG = CreateUnit(wRu, $48303047, - 4066.8, 4330.1, 270.)
    call BlzSetUnitWeaponBooleanField(uG, UNIT_WEAPON_BF_ATTACKS_ENABLED, $00000000, false)
    call BlzSetUnitWeaponBooleanField(uG, UNIT_WEAPON_BF_ATTACKS_ENABLED, $00000001, false)
    call BlzSetUnitWeaponBooleanField(uG, UNIT_WEAPON_BF_ATTACKS_ENABLED, $00000002, false)
    call SetHeroLevel(uG, $000000FA, false)
    set SG = CreateUnit(wRu, $4830304B, - 7231.7, 4171.3, 320.)
    call SetHeroLevel(SG, $000000FA, false)
    set uRu = CreateUnit(wRu, $68303030, 12211.6, 11384.4, 270.)
    set uRu = CreateUnit(wRu, $68303030, 12762., 11391.6, 270.)
    set uRu = CreateUnit(wRu, $68303030, 3050.2, 859.9, 270.)
    set uRu = CreateUnit(wRu, $6E76696C, 617.1, - 478.6, 238.103)
    set uRu = CreateUnit(wRu, $6E76696C, 2478.3, - 1495., 218.239)
    set uRu = CreateUnit(wRu, $6E76696C, 881.6, - 12601.4, 214.152)
    set uRu = CreateUnit(wRu, $6E766B32, - 6502.1, 2489.6, 138.718)
    set uRu = CreateUnit(wRu, $6E766B32, - 5436.1, 2590.4, 24.193)
    set uRu = CreateUnit(wRu, $6E76696C, - 6526.2, 2885.4, 300.98)
    set uRu = CreateUnit(wRu, $6E76696C, - 3857.2, 3193.5, 173.809)
    set uRu = CreateUnit(wRu, $6E76696C, - 6820.5, 3703.1, 55.527)
    set uRu = CreateUnit(wRu, $6E76696C, - 4662.7, 727.3, 92.277)
    set uRu = CreateUnit(wRu, $6E76696C, - 4743.2, 777.3, 32.575)
    set uRu = CreateUnit(wRu, $6E766C77, - 3285.3, 860.8, 260.01)
    set uRu = CreateUnit(wRu, $6E766B32, - 3316.1, 808.7, 64.184)
    set uRu = CreateUnit(wRu, $6E766C32, - 5503.6, 889.4, 287.049)
    set uRu = CreateUnit(wRu, $6E766C77, - 5436.4, 893.9, 275.513)
    set uRu = CreateUnit(wRu, $6E766C77, - 3856.4, 692.1, 82.026)
    set uRu = CreateUnit(wRu, $6E76696C, 746., - 12578.6, 353.551)
    set uRu = CreateUnit(wRu, $6E766C32, 1500., - 12867.4, 355.484)
    set uRu = CreateUnit(wRu, $6E766C77, 1737.2, - 11697.4, 167.602)
    set uRu = CreateUnit(wRu, $6E766C77, 1671.9, - 11731.9, 57.405)
    set uRu = CreateUnit(wRu, $6E766C6B, - 461., - 12504.2, 98.078)
    set uRu = CreateUnit(wRu, $6E766B32, - 448.9, - 12412., 237.938)
    set uRu = CreateUnit(wRu, $6E76696C, - 403.4, - 12479.9, 205.67)
    set uRu = CreateUnit(wRu, $6E766C77, - 560.4, - 12730.3, 97.638)
    set uRu = CreateUnit(wRu, $6E303255, - 4395.8, 2538.6, 45.)
    set uRu = CreateUnit(wRu, $6E303259, - 5741.1, 3276.5, 230.)
    set uRu = CreateUnit(wRu, $6E303256, - 7703., 4210.9, .0)
    set uRu = CreateUnit(wRu, $6E303257, - 5307.4, 2864.7, 252.21)
    set uRu = CreateUnit(wRu, $6E303258, - 6246.7, 1846.1, 158.603)
    set wRu = null
    set uRu = null
endfunction
function t8w takes nothing returns nothing
    local player r8w = Player($00000000)
    local unit s8w = CreateUnit(r8w, $6E303033, 2336., - 13152., 270.)
    set s8w = CreateUnit(r8w, $6830324A, - 5056., 128., 270.)
    set r8w = Player($00000001)
    set s8w = CreateUnit(r8w, $6E303033, 2400., - 13152., 270.)
    set s8w = CreateUnit(r8w, $6830324A, - 4928., 128., 270.)
    set r8w = Player($00000002)
    set s8w = CreateUnit(r8w, $6E303033, 2528., - 13152., 270.)
    set s8w = CreateUnit(r8w, $6830324A, - 4800., 128., 270.)
    set r8w = Player($00000003)
    set s8w = CreateUnit(r8w, $6E303033, 2208., - 13216., 270.)
    set s8w = CreateUnit(r8w, $6830324A, - 4672., 128., 270.)
    set r8w = Player($00000004)
    set s8w = CreateUnit(r8w, $6E303033, 2272., - 13152., 270.)
    set s8w = CreateUnit(r8w, $6830324A, - 4544., 128., 270.)
    set r8w = Player($00000005)
    set s8w = CreateUnit(r8w, $6E303033, 2464., - 13152., 270.)
    set s8w = CreateUnit(r8w, $6830324A, - 3072., 1536., 270.)
    set r8w = Player($00000006)
    set s8w = CreateUnit(r8w, $6E303033, 2208., - 13344., 270.)
    set s8w = CreateUnit(r8w, $6830324A, - 2944., 1536., 270.)
    set r8w = Player($00000007)
    set s8w = CreateUnit(r8w, $6E303033, 2208., - 13408., 270.)
    set s8w = CreateUnit(r8w, $6830324A, - 2816., 1536., 270.)
    set r8w = Player($00000008)
    set s8w = CreateUnit(r8w, $6E303033, 2208., - 13280., 270.)
    set s8w = CreateUnit(r8w, $6830324A, - 2688., 1536., 270.)
    set r8w = Player($00000009)
    set s8w = CreateUnit(r8w, $6E303033, 2208., - 13152., 270.)
    set s8w = CreateUnit(r8w, $6830324A, - 2560., 1536., 270.)
    set r8w = Player($0000000B)
    set s8w = CreateUnit(r8w, $68677477, 4480., - 11968., 270.)
    set s8w = CreateUnit(r8w, $68677477, 4224., - 11968., 270.)
    set s8w = CreateUnit(r8w, $68626C61, 3264., - 12480., 270.)
    set s8w = CreateUnit(r8w, $68777477, 2304., - 12800., 270.)
    set s8w = CreateUnit(r8w, $68777477, 2304., - 12672., 270.)
    set s8w = CreateUnit(r8w, $68777477, 2432., - 12544., 270.)
    set s8w = CreateUnit(r8w, $68777477, 2624., - 12544., 270.)
    set s8w = CreateUnit(r8w, $68677477, 4224., - 12480., 270.)
    set s8w = CreateUnit(r8w, $68677477, 4480., - 12480., 270.)
    set s8w = CreateUnit(r8w, $68746F77, 1600., .0, 270.)
    set s8w = CreateUnit(r8w, $68303345, - 6208., 3264., 270.)
    set CY = CreateUnit(r8w, $6E303049, 3200., - 11200., 270.)
    set VY = CreateUnit(r8w, $6E303049, 2048., .0, 270.)
    set BY = CreateUnit(r8w, $6E303049, - 5632., 3008., 270.)
    set s8w = CreateUnit(r8w, $6E303333, - 10240., - 7872., 270.)
    set s8w = CreateUnit(r8w, $6E303333, 12922.9, 6147.7, 270.)
    call SetUnitScale(s8w, .3, .3, .3)
    set s8w = CreateUnit(r8w, $68777477, - 10240., - 7552., 270.)
    set r8w = null
    set s8w = null
endfunction
function vLt takes nothing returns nothing
    local player jLt = Player(PLAYER_NEUTRAL_AGGRESSIVE)
    local unit xLt = CreateUnit(jLt, $6E303035, 6104.2, - 12083.1, 174.765)
    set xLt = CreateUnit(jLt, $55303030, 13109.9, - 4424., 180.)
    call SetHeroLevel(xLt, $00000019, false)
    call SetUnitState(xLt, UNIT_STATE_MANA, 250.)
    set xLt = CreateUnit(jLt, $6E303144, - 1259.6, 10530., 317.877)
    set xLt = CreateUnit(jLt, $6E303046, 6832.9, - 11081.2, 333.302)
    set xLt = CreateUnit(jLt, $6E303146, - 416.3, 10908., 94.397)
    set xLt = CreateUnit(jLt, $6E303046, 6884.8, - 11211.4, 169.557)
    set xLt = CreateUnit(jLt, $6E303048, 5328.4, - 10695.4, 181.708)
    set xLt = CreateUnit(jLt, $6E303035, 4590.4, - 13562.7, 225.82)
    set xLt = CreateUnit(jLt, $6E303035, 4715.8, - 13550.2, 165.756)
    set xLt = CreateUnit(jLt, $6E303044, 7111.5, - 12556.5, 343.333)
    set xLt = CreateUnit(jLt, $6E303035, 6179.1, - 13619.6, 147.013)
    set xLt = CreateUnit(jLt, $6E303035, 6092.1, - 13521.7, 300.562)
    set xLt = CreateUnit(jLt, $6E303035, 6930.5, - 13519.3, 12.437)
    set xLt = CreateUnit(jLt, $6E303035, 5311.3, - 13078.8, 48.396)
    set xLt = CreateUnit(jLt, $6E303035, 8383.1, - 13716., 4.724)
    set xLt = CreateUnit(jLt, $6E303035, 7796.9, - 11970.7, 313.801)
    set xLt = CreateUnit(jLt, $6E303044, 4765.3, - 10911.8, 332.555)
    set xLt = CreateUnit(jLt, $6E303035, 4878.1, - 10865.7, 244.508)
    set xLt = CreateUnit(jLt, $6E303035, 7692.9, - 13278.9, 162.053)
    set xLt = CreateUnit(jLt, $6E303035, 9238., - 12485., 80.477)
    set xLt = CreateUnit(jLt, $6E303037, 13112.6, - 11032.2, 180.)
    set xLt = CreateUnit(jLt, $6E303036, 13289.5, - 6187.8, 180.)
    set xLt = CreateUnit(jLt, $6E30304A, 11828.5, - 6796.8, 277.974)
    set xLt = CreateUnit(jLt, $6E30304A, 12164.7, - 6818.7, 91.057)
    set xLt = CreateUnit(jLt, $6E30304A, 11995.6, - 6647.3, 267.514)
    set xLt = CreateUnit(jLt, $6E30304A, 12958.8, - 5997.7, 65.239)
    set xLt = CreateUnit(jLt, $6E30304B, 12356.5, - 12675., 343.114)
    set xLt = CreateUnit(jLt, $6E30304B, 12521.4, - 12539.5, 90.772)
    set xLt = CreateUnit(jLt, $6E30304B, 12701.9, - 13331.6, 135.081)
    set xLt = CreateUnit(jLt, $6E30304B, 11316., - 12383.4, 358.121)
    set xLt = CreateUnit(jLt, $6E30304B, 11301.6, - 12201.3, 227.534)
    set xLt = CreateUnit(jLt, $6E30304B, 11927.2, - 12078.9, 148.386)
    set xLt = CreateUnit(jLt, $6E30304B, 11862.5, - 13180.3, 129.807)
    set xLt = CreateUnit(jLt, $6E303044, 9750.9, - 10838.5, 70.93)
    set xLt = CreateUnit(jLt, $6E303044, 9699.7, - 10942.7, 317.921)
    set xLt = CreateUnit(jLt, $6E30304B, 10835.2, - 10965.4, 241.542)
    set xLt = CreateUnit(jLt, $6E30304B, 10691.7, - 10621.2, 262.581)
    set xLt = CreateUnit(jLt, $6E30304B, 10889.7, - 11735.7, 195.87)
    set xLt = CreateUnit(jLt, $6E30304B, 10764.9, - 11594.8, 288.686)
    set xLt = CreateUnit(jLt, $6E30304B, 11430.7, - 10949.4, 305.33)
    set xLt = CreateUnit(jLt, $6E303038, 10869.2, - 5598.2, 232.533)
    set xLt = CreateUnit(jLt, $6E303047, 10936.5, - 9421., 106.505)
    set xLt = CreateUnit(jLt, $6E303047, 10876.3, - 9066.5, 262.153)
    set xLt = CreateUnit(jLt, $6E303038, 11059.3, - 5852.7, 35.069)
    set xLt = CreateUnit(jLt, $6E303035, 5419.8, - 13052.5, 210.461)
    set xLt = CreateUnit(jLt, $6E303035, 4621.9, - 13468., 94.958)
    set xLt = CreateUnit(jLt, $6E303044, 6993.4, - 13473.8, 162.603)
    set xLt = CreateUnit(jLt, $6E303044, 6876.8, - 13480.4, 74.753)
    set xLt = CreateUnit(jLt, $6E303035, 6126.1, - 11996.1, 34.19)
    set xLt = CreateUnit(jLt, $6E303046, 9151.6, - 12431.7, 351.255)
    set xLt = CreateUnit(jLt, $6E303046, 9253.2, - 12341., 3.384)
    set xLt = CreateUnit(jLt, $6E303048, 6798., - 11174.5, 324.601)
    set xLt = CreateUnit(jLt, $6E303146, 1318.6, 10931.4, 199.034)
    set xLt = CreateUnit(jLt, $6E303038, 11043.9, - 4866.1, 324.194)
    set xLt = CreateUnit(jLt, $6E303047, 11136.8, - 8788.1, 282.709)
    set xLt = CreateUnit(jLt, $6E303047, 10974.9, - 8582.7, 46.188)
    set xLt = CreateUnit(jLt, $6E303146, - 943., 12130.9, 135.861)
    set xLt = CreateUnit(jLt, $6E303047, 11428.5, - 7927.9, 279.951)
    set xLt = CreateUnit(jLt, $6E303047, 11519.8, - 7977.9, 64.349)
    set xLt = CreateUnit(jLt, $6E303047, 11556.5, - 7765.4, 273.282)
    set xLt = CreateUnit(jLt, $6E303047, 11800.5, - 7500.9, 279.951)
    set xLt = CreateUnit(jLt, $6E303047, 11900.8, - 7500.9, 64.349)
    set xLt = CreateUnit(jLt, $6E303047, 11850.5, - 7600.4, 273.282)
    set xLt = CreateUnit(jLt, $6E303038, 11216.1, - 4964.5, 106.516)
    set xLt = CreateUnit(jLt, $6E303045, 11676.5, - 9544.9, 76.28)
    set xLt = CreateUnit(jLt, $6E303045, 11776., - 9622.5, 297.585)
    set xLt = CreateUnit(jLt, $6E303045, 11898.6, - 9631.6, 343.828)
    set xLt = CreateUnit(jLt, $6E303045, 11974.2, - 9491., 132.268)
    set xLt = CreateUnit(jLt, $6E303038, 11662.9, - 4725.4, 153.055)
    set xLt = CreateUnit(jLt, $6E303038, 11621.6, - 4416.3, 63.36)
    set xLt = CreateUnit(jLt, $6E303030, 13082.8, - 8624.2, 270.)
    set xLt = CreateUnit(jLt, $6E303146, - 730.6, 12069.1, 243.97)
    set xLt = CreateUnit(jLt, $6E303045, 12214.4, - 9558.9, 341.916)
    set xLt = CreateUnit(jLt, $6E303045, 12409., - 9659.8, 175.116)
    set xLt = CreateUnit(jLt, $6E303045, 12359.7, - 9451.5, 165.437)
    set xLt = CreateUnit(jLt, $6E303045, 12720.5, - 9650.1, 293.893)
    set xLt = CreateUnit(jLt, $6E303045, 12577., - 9407.6, 200.54)
    set xLt = CreateUnit(jLt, $6E303045, 12713.9, - 9218.5, 161.141)
    set xLt = CreateUnit(jLt, $6E303045, 13041.7, - 9424.1, 230.313)
    set xLt = CreateUnit(jLt, $55303031, - 1187.8, - 9441.9, 90.)
    call SetHeroLevel(xLt, $0000002D, false)
    call SetUnitState(xLt, UNIT_STATE_MANA, 375.)
    set xLt = CreateUnit(jLt, $6E303054, 28.2, - 9458.5, 90.)
    set xLt = CreateUnit(jLt, $6E30304D, 7043.6, - 7721.9, 357.616)
    set xLt = CreateUnit(jLt, $6E30304D, 6516.7, - 6932., 28.576)
    set xLt = CreateUnit(jLt, $6E30304D, 6436.1, - 8900.3, 72.534)
    set xLt = CreateUnit(jLt, $6E30304D, 2386.2, - 5714., 131.137)
    set xLt = CreateUnit(jLt, $6E30304D, 2624.1, - 4837.8, 142.244)
    set xLt = CreateUnit(jLt, $6E30304D, 4271.1, - 4002.4, 126.731)
    set xLt = CreateUnit(jLt, $6E30304D, 4046.5, - 5741.8, 196.771)
    set xLt = CreateUnit(jLt, $6E30304D, 2833.2, - 6597.2, 211.57)
    set xLt = CreateUnit(jLt, $6E30304D, 3366.5, - 6977.1, 30.631)
    set xLt = CreateUnit(jLt, $6E303052, - 185., - 9187.3, 340.026)
    set xLt = CreateUnit(jLt, $6E30304E, 3075.1, - 6848.4, 359.572)
    set xLt = CreateUnit(jLt, $6E30304E, 3631.8, - 6489.3, 342.696)
    set xLt = CreateUnit(jLt, $6E303050, 4937.9, - 9549.5, 33.147)
    set xLt = CreateUnit(jLt, $6E30304E, 2650.9, - 6054.4, 253.77)
    set xLt = CreateUnit(jLt, $6E30304E, 5274.3, - 4865.6, 171.59)
    set xLt = CreateUnit(jLt, $6E30304E, 4105., - 4148.2, 329.325)
    set xLt = CreateUnit(jLt, $6E303050, 4722.1, - 5589.2, 304.309)
    set xLt = CreateUnit(jLt, $6E303050, 4565.8, - 5856.1, 173.655)
    set xLt = CreateUnit(jLt, $6E303146, - 888.6, 11899.5, 321.404)
    set xLt = CreateUnit(jLt, $6E30304D, 4043.6, - 6215.3, 44.716)
    set xLt = CreateUnit(jLt, $6E30304E, 6463.1, - 5723.1, 70.644)
    set xLt = CreateUnit(jLt, $6E30304D, 7213.6, - 5474.1, 205.725)
    set xLt = CreateUnit(jLt, $6E30304D, 6682.4, - 5031.7, 297.123)
    set xLt = CreateUnit(jLt, $6E30304D, 6229.5, - 7316.6, 99.88)
    set xLt = CreateUnit(jLt, $6E303050, 5163.7, - 9492.6, 222.81)
    set xLt = CreateUnit(jLt, $6E30304C, 6495., - 6046.1, 86.564)
    set xLt = CreateUnit(jLt, $6E303050, 3862.3, - 5445.3, 354.122)
    set xLt = CreateUnit(jLt, $6E30304C, 4643.9, - 4566.1, 146.595)
    set xLt = CreateUnit(jLt, $6E30304C, 6684.5, - 8120.3, 309.615)
    set xLt = CreateUnit(jLt, $6E30304C, 6554.8, - 7631.5, 235.95)
    set xLt = CreateUnit(jLt, $6E30304C, 6895., - 5527.4, 81.971)
    set xLt = CreateUnit(jLt, $6E30304C, 3056.8, - 5270.5, 173.172)
    set xLt = CreateUnit(jLt, $6E30304C, 3328.7, - 3821., 28.499)
    set xLt = CreateUnit(jLt, $6E30304C, 3076.5, - 5146., 38.168)
    set xLt = CreateUnit(jLt, $6E30304F, 5805.2, - 5067., 28.477)
    set xLt = CreateUnit(jLt, $6E30304C, 5402., - 8292.3, 252.474)
    set xLt = CreateUnit(jLt, $6E303050, 6991.5, - 6322.2, 110.394)
    set xLt = CreateUnit(jLt, $6E303050, 4768.6, - 4076.1, 13.898)
    set xLt = CreateUnit(jLt, $6E303050, 4556., - 6852.9, 134.96)
    set xLt = CreateUnit(jLt, $6E303050, 5155.9, - 7720.6, 145.365)
    set xLt = CreateUnit(jLt, $6E30304D, 5794.2, - 8822.5, 209.604)
    set xLt = CreateUnit(jLt, $6E30304D, 5756.5, - 8088., 133.818)
    set xLt = CreateUnit(jLt, $6E303051, 4155.5, - 2117.8, 277.106)
    set xLt = CreateUnit(jLt, $6E303051, 4027.9, - 2451.9, 343.839)
    set xLt = CreateUnit(jLt, $6E303051, 4115.5, - 2679.6, 51.231)
    set xLt = CreateUnit(jLt, $6E303051, 5557.8, - 2257.6, 253.012)
    set xLt = CreateUnit(jLt, $6E303051, 4999.1, - 1872.6, 288.971)
    set xLt = CreateUnit(jLt, $6E30304D, 5201.1, - 6439.7, 198.617)
    set xLt = CreateUnit(jLt, $6E303051, 4259.9, - 1114.9, 180.368)
    set xLt = CreateUnit(jLt, $6E303051, 3856.9, - 850.1, 234.291)
    set xLt = CreateUnit(jLt, $6E303051, 5401.8, - 1159.6, 234.994)
    set xLt = CreateUnit(jLt, $6E303051, 5078.1, - 429.5, 12.788)
    set xLt = CreateUnit(jLt, $6E303051, 6269.9, - 2692.3, 112.767)
    set xLt = CreateUnit(jLt, $6E303051, 6259.8, - 3040.9, 199.353)
    set xLt = CreateUnit(jLt, $6E303051, 7261.4, - 2906.2, 211.339)
    set xLt = CreateUnit(jLt, $6E303051, 7230.1, - 3241.8, 310.121)
    set xLt = CreateUnit(jLt, $6E30304C, 5784.6, - 7136.7, 334.06)
    set xLt = CreateUnit(jLt, $6E303051, 8115., - 2917.2, 169.865)
    set xLt = CreateUnit(jLt, $6E303051, 8069.7, - 3889.8, 72.193)
    set xLt = CreateUnit(jLt, $6E303052, 245.6, - 9282.4, 359.407)
    set xLt = CreateUnit(jLt, $6E303051, 8469.5, - 3484.7, 64.14)
    set xLt = CreateUnit(jLt, $6E303051, 5208., - 1357.7, 56.384)
    set xLt = CreateUnit(jLt, $6E303144, 2336.4, 10114., 136.872)
    set xLt = CreateUnit(jLt, $6E303053, 2247.9, - 8710.1, 20.413)
    set xLt = CreateUnit(jLt, $6E303052, 2987.4, - 8457.5, 242.08)
    set xLt = CreateUnit(jLt, $6E303052, 2976.7, - 8827.1, 257.923)
    set xLt = CreateUnit(jLt, $6E303052, 2804.9, - 8623.3, 52.725)
    set xLt = CreateUnit(jLt, $6E303053, 2356.9, - 8542.5, 228.38)
    set xLt = CreateUnit(jLt, $6E30304F, 4558.3, - 7835.6, 15.799)
    set xLt = CreateUnit(jLt, $6E303053, 2810.2, - 9677.7, 334.632)
    set xLt = CreateUnit(jLt, $6E303144, 2201.4, 10197.5, 21.204)
    set xLt = CreateUnit(jLt, $6E303144, - 198.1, 11054., 251.452)
    set xLt = CreateUnit(jLt, $6E303053, 2265.1, - 8439.6, 136.213)
    set xLt = CreateUnit(jLt, $6E303053, 2140.1, - 9426.8, 174.732)
    set xLt = CreateUnit(jLt, $6E303052, 2153.3, - 9600.4, 149.21)
    set xLt = CreateUnit(jLt, $6E303052, 1078., - 9750., 238.751)
    set xLt = CreateUnit(jLt, $6E303052, 1050.3, - 9639.3, 12.118)
    set xLt = CreateUnit(jLt, $6E30304F, 4242.8, - 6815.3, 31.631)
    set xLt = CreateUnit(jLt, $6E303051, 4017.3, - 307.4, 344.871)
    set xLt = CreateUnit(jLt, $6E303051, 4572.9, 6., 12.624)
    set xLt = CreateUnit(jLt, $6E303051, 5670.4, - 2330.6, 101.737)
    set xLt = CreateUnit(jLt, $6E303053, 1531.2, - 7888.3, 44.683)
    set xLt = CreateUnit(jLt, $6E303052, 1649., - 8060.9, 75.149)
    set xLt = CreateUnit(jLt, $6E303052, 475.2, - 7805.6, 297.684)
    set xLt = CreateUnit(jLt, $6E303052, 1199.1, - 8435.2, 59.756)
    set xLt = CreateUnit(jLt, $6E303052, 1169.5, - 8605.4, 59.954)
    set xLt = CreateUnit(jLt, $6E303052, - 1280.5, - 7981.1, 59.592)
    set xLt = CreateUnit(jLt, $6E303052, - 1137.4, - 8054.7, 75.654)
    set xLt = CreateUnit(jLt, $6E303052, - 1178., - 7829.7, 317.591)
    set xLt = CreateUnit(jLt, $6E303051, 6924.5, - 2557.3, 195.486)
    set xLt = CreateUnit(jLt, $6E303051, - 501., 1694.6, 27.423)
    set xLt = CreateUnit(jLt, $6E303051, 5941.9, - 2978.5, .802)
    set xLt = CreateUnit(jLt, $6E303144, - 213.2, 10781.3, 24.105)
    set xLt = CreateUnit(jLt, $6E303051, 3712., 95.6, 230.643)
    set xLt = CreateUnit(jLt, $6E303144, - 1144.8, 10382.4, 166.975)
    set xLt = CreateUnit(jLt, $6E303050, 4330.5, - 9305.1, 341.103)
    set xLt = CreateUnit(jLt, $6E303051, - 803.9, 3308.1, 33.762)
    set xLt = CreateUnit(jLt, $6E303051, - 1490.3, 3941.9, 320.228)
    set xLt = CreateUnit(jLt, $6E303051, - 1297.2, 3968.7, 296.607)
    set xLt = CreateUnit(jLt, $6E303051, - 1282.6, 2276.8, 27.774)
    set xLt = CreateUnit(jLt, $6E303051, 2419.8, 2925.6, 159.032)
    set xLt = CreateUnit(jLt, $6E303051, 2642.4, 2839.3, 77.632)
    set xLt = CreateUnit(jLt, $6E303051, 2563.5, 2496.5, 352.474)
    set xLt = CreateUnit(jLt, $6E303051, - 1763., 3813., GetRandomReal(0., 360.))
    set xLt = CreateUnit(jLt, $6E303051, - 1435., 3665., GetRandomReal(0., 360.))
    set xLt = CreateUnit(jLt, $6E303051, - 1465., 3452., GetRandomReal(0., 360.))
    set xLt = CreateUnit(jLt, $6E303051, - 1800., 3410., GetRandomReal(0., 360.))
    set xLt = CreateUnit(jLt, $6E303051, - 1800., 3000., GetRandomReal(0., 360.))
    set xLt = CreateUnit(jLt, $6E303051, 32., 3670., GetRandomReal(0., 360.))
    set xLt = CreateUnit(jLt, $6E303051, - 910., 1263., GetRandomReal(0., 360.))
    set xLt = CreateUnit(jLt, $6E303051, - 717., 1175., GetRandomReal(0., 360.))
    set xLt = CreateUnit(jLt, $6E303051, - 475., 1185., GetRandomReal(0., 360.))
    set xLt = CreateUnit(jLt, $6E303236, - 1532.2, 3650.9, GetRandomReal(0., 360.))
    set xLt = CreateUnit(jLt, $6E303046, 5899., - 11244.1, 14.986)
    set xLt = CreateUnit(jLt, $6E303146, 2442.2, 11532.5, 327.293)
    set xLt = CreateUnit(jLt, $6E30304E, 4965.2, - 7831.2, 37.047)
    set xLt = CreateUnit(jLt, $6E303045, 12901.4, - 8885.7, 130.39)
    set xLt = CreateUnit(jLt, $6E303131, 9112., 3118.6, 223.491)
    set xLt = CreateUnit(jLt, $6E303052, 441.4, - 8081.9, 60.778)
    set xLt = CreateUnit(jLt, $6E30314E, - 5047.8, - 4542.5, 54.329)
    set xLt = CreateUnit(jLt, $55303032, - 720.1, 6301.4, 230.)
    call SetHeroLevel(xLt, $0000003C, false)
    set xLt = CreateUnit(jLt, $6E30305A, 10205.3, 7310.3, 167.667)
    set xLt = CreateUnit(jLt, $6E30305A, 9538.1, 7440.7, 23.215)
    set xLt = CreateUnit(jLt, $6E30305A, 8409.7, 5437.6, 200.825)
    set xLt = CreateUnit(jLt, $6E30305A, 7925.6, 6771.3, 157.714)
    set xLt = CreateUnit(jLt, $6E30305A, 5222., 7361.2, 304.781)
    set xLt = CreateUnit(jLt, $6E30305A, 5607.8, 6561.3, 134.477)
    set xLt = CreateUnit(jLt, $6E30305A, 3920.8, 6418.4, 228.654)
    set xLt = CreateUnit(jLt, $6E30305A, 4025.3, 6561.6, 45.814)
    set xLt = CreateUnit(jLt, $6E30305A, 5054.8, 5113.5, 245.058)
    set xLt = CreateUnit(jLt, $6E303131, 9432., 3130., 172.842)
    set xLt = CreateUnit(jLt, $6E303154, - 969.4, 12988.3, 360.)
    set xLt = CreateUnit(jLt, $6E30314D, - 4479.4, - 2415., 128.236)
    set xLt = CreateUnit(jLt, $6E30314E, - 5165.1, - 4306.9, 75.5)
    set xLt = CreateUnit(jLt, $6E303145, 2728.9, 10411.2, 190.926)
    set xLt = CreateUnit(jLt, $6E303145, 1911.9, 9879.4, 127.775)
    set xLt = CreateUnit(jLt, $6E303058, 10609., 2759.9, 309.264)
    set xLt = CreateUnit(jLt, $6E303058, 10341.7, 3384.3, 198.474)
    set xLt = CreateUnit(jLt, $6E303056, 9242.3, 2433.5, 110.295)
    set xLt = CreateUnit(jLt, $6E303131, 10293.4, 3000., 126.841)
    set xLt = CreateUnit(jLt, $6E303131, 9070.7, 2385.7, 108.801)
    set xLt = CreateUnit(jLt, $6E303057, 2928.4, 5052.6, 80.697)
    set xLt = CreateUnit(jLt, $6E303055, 2839.9, 5654.8, 47.803)
    set xLt = CreateUnit(jLt, $6E303057, 2948.6, 5282.1, 335.807)
    set xLt = CreateUnit(jLt, $6E303059, 2126., 6655.3, 331.248)
    set xLt = CreateUnit(jLt, $6E303057, 2317.3, 6729.9, 311.296)
    set xLt = CreateUnit(jLt, $6E303059, 2231.8, 6863.4, 7.877)
    set xLt = CreateUnit(jLt, $6E303145, 844.6, 11415.1, 170.612)
    set xLt = CreateUnit(jLt, $6E303138, 8444.4, 10518.7, 59.141)
    set xLt = CreateUnit(jLt, $6E30314E, - 1589.6, - 2074.5, 13.799)
    set xLt = CreateUnit(jLt, $6E303059, 1914.2, 7888.5, 292.674)
    set xLt = CreateUnit(jLt, $6E303059, 1615.1, 7688.8, 273.249)
    set xLt = CreateUnit(jLt, $6E303055, 1631.2, 8031.4, 252.276)
    set xLt = CreateUnit(jLt, $6E303055, - 1021., 8205.8, 247.057)
    set xLt = CreateUnit(jLt, $6E303055, - 820.8, 8011.1, 33.421)
    set xLt = CreateUnit(jLt, $6E303057, 2287.9, 6554.3, 125.918)
    set xLt = CreateUnit(jLt, $6E303055, - 1178.6, 7844.5, 293.333)
    set xLt = CreateUnit(jLt, $6E303059, - 1030.7, 7944.2, 342.037)
    set xLt = CreateUnit(jLt, $6E303055, - 1979.9, 6897.6, 71.259)
    set xLt = CreateUnit(jLt, $6E303055, - 1881.3, 6784.4, 314.966)
    set xLt = CreateUnit(jLt, $6E303057, - 2023.1, 6720.7, 178.731)
    set xLt = CreateUnit(jLt, $6E303145, 845.4, 10448., 28.752)
    set xLt = CreateUnit(jLt, $6E303138, 8637.6, 10435.4, 316.592)
    set xLt = CreateUnit(jLt, $6E303132, 11760.5, 3385., 180.)
    set xLt = CreateUnit(jLt, $6E303131, 10349.6, 2251.8, 239.619)
    set xLt = CreateUnit(jLt, $6E303058, 9007.7, 2884., 53.132)
    set xLt = CreateUnit(jLt, $6E303056, 11860.8, 2189.6, 32.96)
    set xLt = CreateUnit(jLt, $6E303058, 12447.6, 2219.3, 221.755)
    set xLt = CreateUnit(jLt, $6E303058, 12681.4, 2713.5, 160.054)
    set xLt = CreateUnit(jLt, $6E303056, 11828.8, 2309.8, 186.345)
    set xLt = CreateUnit(jLt, $6E303056, 12631.8, 2857.7, 24.786)
    set xLt = CreateUnit(jLt, $6E303131, 12550.5, 2281.7, 196.705)
    set xLt = CreateUnit(jLt, $6E303131, 12778.5, 2791.7, 187.993)
    set xLt = CreateUnit(jLt, $6E303130, 4490.6, 4922.8, 136.652)
    set xLt = CreateUnit(jLt, $6E303130, 4069.8, 5255.4, 307.341)
    set xLt = CreateUnit(jLt, $6E303130, 4243., 5782., 116.019)
    set xLt = CreateUnit(jLt, $6E303145, 1072.6, 12063.3, 292.619)
    set xLt = CreateUnit(jLt, $6E303134, 4092.9, 6390.6, 35.135)
    set xLt = CreateUnit(jLt, $6E303133, 5067.3, 5583.5, 286.598)
    set xLt = CreateUnit(jLt, $6E303135, 4979.8, 6653.1, 343.674)
    set xLt = CreateUnit(jLt, $6E30305A, 6350.3, 7039.6, 199.375)
    set xLt = CreateUnit(jLt, $6E303133, 6266.4, 7151.1, 349.508)
    set xLt = CreateUnit(jLt, $6E303130, 5123.6, 7410.2, 63.525)
    set xLt = CreateUnit(jLt, $6E303130, 5143.3, 7298.1, 233.554)
    set xLt = CreateUnit(jLt, $6E303145, 318., 10852.6, 30.257)
    set xLt = CreateUnit(jLt, $6E303134, 5298.3, 4454.8, 1.417)
    set xLt = CreateUnit(jLt, $6E303135, 5927.3, 4986., 139.113)
    set xLt = CreateUnit(jLt, $6E30305A, 6090.1, 4437.5, 34.619)
    set xLt = CreateUnit(jLt, $6E303133, 7247.5, 4441.3, 359.714)
    set xLt = CreateUnit(jLt, $6E303133, 6619.3, 4945.4, 315.185)
    set xLt = CreateUnit(jLt, $6E303130, 8452.3, 4479., 188.509)
    set xLt = CreateUnit(jLt, $6E303130, 8579.7, 4499., 107.977)
    set xLt = CreateUnit(jLt, $6E303130, 8985., 4488.5, 36.882)
    set xLt = CreateUnit(jLt, $6E303130, 8858.5, 4733.7, 206.022)
    set xLt = CreateUnit(jLt, $6E303133, 8714.8, 4472.6, 7.647)
    set xLt = CreateUnit(jLt, $6E303135, 8394.1, 5973.5, 33.542)
    set xLt = CreateUnit(jLt, $6E303134, 8419.5, 6534.5, 357.352)
    set xLt = CreateUnit(jLt, $6E30314E, - 5064.9, - 4038.3, 206.363)
    set xLt = CreateUnit(jLt, $6E303130, 6912., 6928., 227.907)
    set xLt = CreateUnit(jLt, $6E303130, 7480.1, 7440., 26.95)
    set xLt = CreateUnit(jLt, $6E303135, 8219.2, 7391.6, 3.922)
    set xLt = CreateUnit(jLt, $6E30305A, 9025.9, 5536., 232.73)
    set xLt = CreateUnit(jLt, $6E303133, 9340.5, 5926.3, 72.149)
    set xLt = CreateUnit(jLt, $6E303133, 10033.3, 6724.4, 135.257)
    set xLt = CreateUnit(jLt, $6E303133, 9998., 6302.1, 319.02)
    set xLt = CreateUnit(jLt, $6E303134, 9014.9, 6879.2, 332.522)
    set xLt = CreateUnit(jLt, $6E303130, 9876.8, 7109.3, 17.238)
    set xLt = CreateUnit(jLt, $6E303130, 10289.9, 6489.4, 255.198)
    set xLt = CreateUnit(jLt, $6E303055, 184., 8594.2, 251.869)
    set xLt = CreateUnit(jLt, $6E303055, 220.2, 8295.2, 161.053)
    set xLt = CreateUnit(jLt, $6E303057, 372.2, 8433.1, 254.847)
    set xLt = CreateUnit(jLt, $6E303056, 10220.4, 3426.3, 38.585)
    set xLt = CreateUnit(jLt, $55303033, 12751.5, 3488.7, 270.)
    call SetHeroLevel(xLt, $00000034, false)
    set xLt = CreateUnit(jLt, $6E303056, 10301.5, 2331.4, 344.674)
    set xLt = CreateUnit(jLt, $6E303059, 7.2, 8441.4, 25.083)
    set xLt = CreateUnit(jLt, $6E303136, - 7773.9, 9926., 203.023)
    set xLt = CreateUnit(jLt, $6E303136, - 6542.7, 10389.8, 246.64)
    set xLt = CreateUnit(jLt, $6E303136, - 6235.8, 11213.2, 164.328)
    set xLt = CreateUnit(jLt, $6E303136, - 5726.3, 12166.9, 163.976)
    set xLt = CreateUnit(jLt, $6E303137, - 5064.5, 10773.2, 265.636)
    set xLt = CreateUnit(jLt, $55303034, 10565.1, 4955.3, 230.)
    call SetHeroLevel(xLt, $00000041, false)
    set xLt = CreateUnit(jLt, $6E303137, - 5391.4, 8648.8, 149.803)
    set xLt = CreateUnit(jLt, $6E303137, - 5578.5, 8407.1, 86.388)
    set xLt = CreateUnit(jLt, $6E303137, - 6306., 8970.3, 254.528)
    set xLt = CreateUnit(jLt, $6E30314E, - 4094.8, - 3852.2, 8.844)
    set xLt = CreateUnit(jLt, $6E303144, 2377.6, 11354.4, 57.175)
    set xLt = CreateUnit(jLt, $6E303137, - 5152.4, 10964.4, 89.333)
    set xLt = CreateUnit(jLt, $6E303137, - 7101.4, 9873.6, 20.007)
    set xLt = CreateUnit(jLt, $6E303137, - 5934.3, 9880., 249.397)
    set xLt = CreateUnit(jLt, $6E303136, - 7085.7, 11567.3, 21.633)
    set xLt = CreateUnit(jLt, $6E303137, - 6827.7, 11776.5, 84.817)
    set xLt = CreateUnit(jLt, $6E303142, - 9216.6, 7445.9, 323.898)
    set xLt = CreateUnit(jLt, $6E303142, - 8662.3, 6745.9, 20.281)
    set xLt = CreateUnit(jLt, $6E303142, - 8132.4, 7691., 347.299)
    set xLt = CreateUnit(jLt, $6E303144, 2526.7, 11368.3, 161.284)
    set xLt = CreateUnit(jLt, $6E303142, - 7775.4, 7020.8, 204.319)
    set xLt = CreateUnit(jLt, $6E303142, - 10335.2, 6887.8, 102.088)
    set xLt = CreateUnit(jLt, $6E303139, - 3578.1, 9489.7, 225.666)
    set xLt = CreateUnit(jLt, $6E303139, - 3864.9, 10671.1, 316.372)
    set xLt = CreateUnit(jLt, $6E303139, - 3121.8, 10810.2, 167.909)
    set xLt = CreateUnit(jLt, $6E303139, - 3297.4, 11594.8, .077)
    set xLt = CreateUnit(jLt, $6E303139, - 2677.6, 12324.7, 306.242)
    set xLt = CreateUnit(jLt, $6E303139, - 3710.1, 11705.8, 89.937)
    set xLt = CreateUnit(jLt, $6E303139, - 3296.3, 9943.8, 119.326)
    set xLt = CreateUnit(jLt, $6E303139, - 4218.6, 9626.9, 319.998)
    set xLt = CreateUnit(jLt, $6E303139, - 3926.2, 8951.4, 209.241)
    set xLt = CreateUnit(jLt, $6E303138, 7303.7, 9161.2, 270.854)
    set xLt = CreateUnit(jLt, $6E303141, 5075.1, 9147.6, 130.752)
    set xLt = CreateUnit(jLt, $6E303141, 5643.9, 9167.6, 309.362)
    set xLt = CreateUnit(jLt, $6E303141, 10316.9, 12582.9, 242.289)
    set xLt = CreateUnit(jLt, $6E303141, 6950., 8801.5, 271.327)
    set xLt = CreateUnit(jLt, $6E303141, 8101.5, 8747.3, 28.346)
    set xLt = CreateUnit(jLt, $6E303141, 9733.7, 10377., 37.355)
    set xLt = CreateUnit(jLt, $6E303138, 10273.9, 10110.1, 95.628)
    set xLt = CreateUnit(jLt, $6E303138, 9428.2, 10115.3, 303.034)
    set xLt = CreateUnit(jLt, $6E303141, 6736.9, 10937.5, 15.458)
    set xLt = CreateUnit(jLt, $6E303141, 7528.3, 11949., 2.395)
    set xLt = CreateUnit(jLt, $6E303141, 6980.5, 12612.6, 43.397)
    set xLt = CreateUnit(jLt, $6E30314E, - 2527.4, - 1768.8, 350.562)
    set xLt = CreateUnit(jLt, $6E303141, 6708.4, 10776.2, 198.815)
    set xLt = CreateUnit(jLt, $6E303141, 10269.2, 12693.6, 98.792)
    set xLt = CreateUnit(jLt, $6E30314E, - 3849.4, - 4116.9, 183.313)
    set xLt = CreateUnit(jLt, $6E303141, 6084.9, 11666.1, 60.24)
    set xLt = CreateUnit(jLt, $6E303138, 4587.2, 11492., 79.499)
    set xLt = CreateUnit(jLt, $6E303148, - 10562.2, 644.8, 62.855)
    set xLt = CreateUnit(jLt, $6E303143, 7637.1, 8768.9, 184.818)
    set xLt = CreateUnit(jLt, $6E303143, 5388.8, 9518., 147.924)
    set xLt = CreateUnit(jLt, $6E303143, 5375., 8848.7, 355.803)
    set xLt = CreateUnit(jLt, $6E303138, 7620.9, 12096.5, 118.052)
    set xLt = CreateUnit(jLt, $6E303138, 4783.5, 11512.6, 298.903)
    set xLt = CreateUnit(jLt, $6E303141, 4549.4, 12725., 194.936)
    set xLt = CreateUnit(jLt, $6E30314E, - 2875.8, - 1660.3, 104.956)
    set xLt = CreateUnit(jLt, $6E303141, 4787.1, 12770.4, 359.275)
    set xLt = CreateUnit(jLt, $6E303143, 4521.8, 12083.5, 333.665)
    set xLt = CreateUnit(jLt, $6E303143, 4735.9, 12125.7, 354.276)
    set xLt = CreateUnit(jLt, $6E303143, 4674., 11361.3, 223.853)
    set xLt = CreateUnit(jLt, $6E303143, 5483.7, 9501.9, 295.618)
    set xLt = CreateUnit(jLt, $6E303143, 5283.6, 8858.7, 211.383)
    set xLt = CreateUnit(jLt, $6E303141, 5073.8, 9264.7, 225.15)
    set xLt = CreateUnit(jLt, $6E303141, 5644.8, 9088.2, 116.14)
    set xLt = CreateUnit(jLt, $6E303141, 4687.2, 12741.6, 124.083)
    set xLt = CreateUnit(jLt, $6E303141, 8594.4, 11745.9, 136.597)
    set xLt = CreateUnit(jLt, $6E303141, 8579., 12070.2, 175.391)
    set xLt = CreateUnit(jLt, $6E303141, 7722., 12083.9, 36.19)
    set xLt = CreateUnit(jLt, $6E303141, 6225.2, 11682.1, 195.167)
    set xLt = CreateUnit(jLt, $6E303138, 6343.5, 12509.7, 99.078)
    set xLt = CreateUnit(jLt, $6E303138, 6221.7, 12637.9, 99.572)
    set xLt = CreateUnit(jLt, $6E303141, 7103.7, 12468.7, 90.31)
    set xLt = CreateUnit(jLt, $6E303138, 7240.2, 9036.4, 332.61)
    set xLt = CreateUnit(jLt, $6E303141, 8136.5, 8844., 169.799)
    set xLt = CreateUnit(jLt, $6E303153, - 10446.7, 545., 60.)
    set xLt = CreateUnit(jLt, $6E303141, 7023.3, 8693.5, 196.222)
    set xLt = CreateUnit(jLt, $6E303141, 6986.3, 8902.2, 313.021)
    set xLt = CreateUnit(jLt, $6E303143, 7645.6, 8869.1, 117.063)
    set xLt = CreateUnit(jLt, $6E303141, 10349.2, 12867.4, 332.171)
    set xLt = CreateUnit(jLt, $55303036, 1049.8, - 3115.9, 180.)
    call SetHeroLevel(xLt, $0000005A, false)
    set xLt = CreateUnit(jLt, $6E303141, 9692.2, 11468.8, 290.059)
    set xLt = CreateUnit(jLt, $6E303141, 9860.2, 11486.7, 139.992)
    set xLt = CreateUnit(jLt, $6E303141, 9894.1, 10379.6, 328.93)
    set xLt = CreateUnit(jLt, $6E303159, - 1973.2, - 352.5, 360.)
    set xLt = CreateUnit(jLt, $6E303141, 8493.6, 10206.5, 208.9)
    set xLt = CreateUnit(jLt, $6E303141, 8605.8, 10744.6, 102.857)
    set xLt = CreateUnit(jLt, $6E303136, - 6877., 11485.4, 266.8)
    set xLt = CreateUnit(jLt, $6E303136, - 5745.9, 12033.3, 358.198)
    set xLt = CreateUnit(jLt, $6E303136, - 6471.6, 10298.2, 160.548)
    set xLt = CreateUnit(jLt, $6E303136, - 6038., 9840.4, 301.068)
    set xLt = CreateUnit(jLt, $6E303137, - 6992.9, 9743.3, 239.114)
    set xLt = CreateUnit(jLt, $6E303137, - 7696.1, 9834.1, 114.91)
    set xLt = CreateUnit(jLt, $6E303136, - 6193.4, 8845.7, 28.412)
    set xLt = CreateUnit(jLt, $6E303136, - 5406.5, 8442.1, 126.654)
    set xLt = CreateUnit(jLt, $6E303136, - 5028.7, 10938.7, 281.314)
    set xLt = CreateUnit(jLt, $6E303136, - 4873.1, 11572.3, 35.498)
    set xLt = CreateUnit(jLt, $6E303142, - 8800.4, 6780.7, 5.779)
    set xLt = CreateUnit(jLt, $6E303142, - 10260.4, 7044., 208.164)
    set xLt = CreateUnit(jLt, $6E303142, - 8177.1, 7593.8, 152.099)
    set xLt = CreateUnit(jLt, $6E303142, - 9062.3, 7498.7, 203.759)
    set xLt = CreateUnit(jLt, $6E303142, - 8326., 6123.4, 348.014)
    set xLt = CreateUnit(jLt, $6E303142, - 6881.6, 7486.5, 231.368)
    set xLt = CreateUnit(jLt, $6E303142, - 8497.4, 8247.8, 357.473)
    set xLt = CreateUnit(jLt, $6E303139, - 4065.1, 8980.1, 31.675)
    set xLt = CreateUnit(jLt, $6E303139, - 4243.7, 8371.9, 26.862)
    set xLt = CreateUnit(jLt, $6E303139, - 4216.8, 8215.2, 256.363)
    set xLt = CreateUnit(jLt, $55303037, - 11625.6, - 4678.1, 270.)
    call SetHeroLevel(xLt, $000000FA, false)
    set xLt = CreateUnit(jLt, $6E303139, - 3224.3, 10100.3, 83.4)
    set xLt = CreateUnit(jLt, $6E303139, - 3063.9, 10959.8, 245.607)
    set xLt = CreateUnit(jLt, $6E303139, - 2767.1, 12184.8, 88.618)
    set xLt = CreateUnit(jLt, $6E303139, - 3769.9, 11556.4, 187.454)
    set xLt = CreateUnit(jLt, $6E303139, - 3377.7, 10044.1, 25.137)
    set xLt = CreateUnit(jLt, $6E303059, - 1336.1, 5862.1, 290.597)
    set xLt = CreateUnit(jLt, $6E303059, - 1094.8, 5614.3, 79.192)
    set xLt = CreateUnit(jLt, $6E303055, - 1475.2, 5807.7, 313.417)
    set xLt = CreateUnit(jLt, $6E30315A, - 11549.9, - 6197.3, 270.)
    set xLt = CreateUnit(jLt, $6E303055, - 1237.4, 5541.6, 47.232)
    set xLt = CreateUnit(jLt, $6E303057, - 1311.8, 5675.6, 161.965)
    set xLt = CreateUnit(jLt, $6E303230, - 3191.9, - 3253.7, 240.)
    set xLt = CreateUnit(jLt, $6E303045, 13272.3, - 8897.7, 240.399)
    set xLt = CreateUnit(jLt, $6E303045, 13092.6, - 9027.2, 62.657)
    set xLt = CreateUnit(jLt, $55303039, - 2241.7, - 6084.2, 260.)
    call SetHeroLevel(xLt, $000000B4, false)
    set xLt = CreateUnit(jLt, $6E303234, - 5681., - 7496.9, 90.)
    set xLt = CreateUnit(jLt, $6E303051, - 1297.5, 4292.2, 221.469)
    set xLt = CreateUnit(jLt, $6E303241, 13052.8, - 1312.4, 90.)
    set xLt = CreateUnit(jLt, $55303041, 12695.9, 571.4, 180.)
    call SetHeroLevel(xLt, $0000008C, false)
    set xLt = CreateUnit(jLt, $55303042, - 13250.2, 6330.9, 360.)
    call SetHeroLevel(xLt, $000000DC, false)
    set xLt = CreateUnit(jLt, $6E303142, - 10036.1, 8084.7, 202.539)
    set xLt = CreateUnit(jLt, $6E303142, - 10051.9, 8243.8, 339.125)
    set xLt = CreateUnit(jLt, $6E303142, - 10648.3, 8832.4, 239.916)
    set xLt = CreateUnit(jLt, $6E303142, - 10616.8, 8626.7, 329.655)
    set xLt = CreateUnit(jLt, $6E303142, - 6748., 7421.9, 284.675)
    set jLt = null
    set xLt = null
endfunction
function main takes nothing returns nothing
    local integer mSi
    local integer QSi
    local version WSi
    local integer ESi
    local trigger ZSi
    call Xii()
    call SetCameraBounds((- 13568.) + GetCameraMargin(CAMERA_MARGIN_LEFT), (- 13824.) + GetCameraMargin(CAMERA_MARGIN_BOTTOM), 13568. - GetCameraMargin(CAMERA_MARGIN_RIGHT), 13312. - GetCameraMargin(CAMERA_MARGIN_TOP), (- 13568.) + GetCameraMargin(CAMERA_MARGIN_LEFT), 13312. - GetCameraMargin(CAMERA_MARGIN_TOP), 13568. - GetCameraMargin(CAMERA_MARGIN_RIGHT), (- 13824.) + GetCameraMargin(CAMERA_MARGIN_BOTTOM))
    call SetDayNightModels("Environment\\DNC\\DNCLordaeron\\DNCLordaeronTerrain\\DNCLordaeronTerrain.mdl", "Environment\\DNC\\DNCLordaeron\\DNCLordaeronUnit\\DNCLordaeronUnit.mdl")
    call SetTerrainFogEx($00000000, 1200., 4500., 100., .753, .753, .753)
    call SetWaterBaseColor($0000003C, $0000003C, $000000FF, $000000FF)
    call NewSoundEnvironment("Default")
    call SetAmbientDaySound("IceCrownDay")
    call SetAmbientNightSound("IceCrownNight")
    call SetMapMusic("Music", true, $00000000)
    set ue = CreateSound("Sound\\Ambient\\DoodadEffects\\UtherReturns.wav", false, false, false, $0000000A, $0000000A, "DefaultEAXON")
    call SetSoundParamsFromLabel(ue, "UtherReturnsSound")
    call SetSoundDuration(ue, $00001A37)
    set re = CreateSound("Sound\\Interface\\NewTournament.wav", false, false, false, $0000000A, $0000000A, "")
    call SetSoundParamsFromLabel(re, "NewTournament")
    call SetSoundDuration(re, $00001F34)
    set se = CreateSound("Sound\\Interface\\GameFound.wav", false, false, false, $0000000A, $0000000A, "")
    call SetSoundParamsFromLabel(se, "GameFound")
    call SetSoundDuration(se, $00001D40)
    set te = CreateSound("Units\\Undead\\Abomination\\AbominationPissed1.wav", false, true, true, $0000000A, $0000000A, "DefaultEAXON")
    call SetSoundParamsFromLabel(te, "AbominationPissed")
    call SetSoundDuration(te, $00000A9C)
    set ie = CreateSound("Units\\Undead\\Abomination\\AbominationYes3.wav", false, true, true, $0000000A, $0000000A, "DefaultEAXON")
    call SetSoundParamsFromLabel(ie, "AbominationYes")
    call SetSoundDuration(ie, $0000074D)
    set Se = CreateSound("Sound\\Interface\\QuestNew.wav", false, false, false, $0000000A, $0000000A, "")
    call SetSoundParamsFromLabel(Se, "QuestNew")
    call SetSoundDuration(Se, $00000EA6)
    set ce = CreateSound("Sound\\Interface\\ItemReceived.wav", false, false, false, $0000000A, $0000000A, "")
    call SetSoundParamsFromLabel(ce, "ItemReward")
    call SetSoundDuration(ce, $000005CB)
    set oe = CreateSound("Sound\\Interface\\CreepAggroWhat1.wav", false, false, false, $0000000A, $0000000A, "")
    call SetSoundParamsFromLabel(oe, "CreepAggro")
    call SetSoundDuration(oe, $000004D4)
    set Oe = CreateSound("Units\\Human\\HeroPaladin\\HeroPaladinPissed6.wav", false, true, true, $0000000A, $0000000A, "HeroAcksEAX")
    call SetSoundParamsFromLabel(Oe, "HeroPaladinPissed")
    call SetSoundDuration(Oe, $0000254D)
    set le = CreateSound("Units\\Human\\HeroPaladin\\HeroPaladinPissed1.wav", false, true, true, $0000000A, $0000000A, "HeroAcksEAX")
    call SetSoundParamsFromLabel(le, "HeroPaladinPissed")
    call SetSoundDuration(le, $000005F1)
    set be = CreateSound("Units\\Human\\HeroBloodElf\\BloodElfMagePissed6.wav", false, true, true, $0000000A, $0000000A, "HeroAcksEAX")
    call SetSoundParamsFromLabel(be, "BloodElfSorcerorPissed")
    call SetSoundDuration(be, $00003F1E)
    set ye = CreateSound("Sound\\Ambient\\Ashenvale\\FreakyForest4.wav", false, false, false, $0000000A, $0000000A, "DefaultEAXON")
    call SetSoundParamsFromLabel(ye, "FreakyForest4")
    call SetSoundDuration(ye, $00001480)
    set pe = CreateSound("Sound\\Ambient\\DoodadEffects\\WarlockAppears.wav", false, false, false, $0000000A, $0000000A, "DefaultEAXON")
    call SetSoundParamsFromLabel(pe, "ArchimondeAppearsSound")
    call SetSoundDuration(pe, $00001CC1)
    set ee = CreateSound("Units\\Creeps\\GoblinSapper\\GoblinSapperYesAttack3.wav", false, true, true, $0000000A, $0000000A, "DefaultEAXON")
    call SetSoundParamsFromLabel(ee, "GoblinSapperYesAttack")
    call SetSoundDuration(ee, $000007EA)
    set qe = CreateSound("Units\\Creeps\\GoblinSapper\\GoblinSapperYesAttack4.wav", false, true, true, $0000000A, $0000000A, "DefaultEAXON")
    call SetSoundParamsFromLabel(qe, "GoblinSapperYesAttack")
    call SetSoundDuration(qe, $00000443)
    set ae = CreateSound("Doodads\\Cinematic\\DungeonLever\\Lever.wav", false, true, true, $0000000A, $0000000A, "DefaultEAXON")
    call SetSoundParamsFromLabel(ae, "LeverDeath")
    call SetSoundDuration(ae, $00000333)
    set ne = CreateSound("Sound\\Interface\\SecretFound.wav", false, false, false, $0000000A, $0000000A, "")
    call SetSoundParamsFromLabel(ne, "SecretFound")
    call SetSoundDuration(ne, $000009DD)
    set de = CreateSound("Sound\\Interface\\UpkeepRing.wav", false, false, false, $0000000A, $0000000A, "")
    call SetSoundParamsFromLabel(de, "UpkeepLevel")
    call SetSoundDuration(de, $0000062B)
    set fe = CreateSound("Sound\\Interface\\BattleNetTick.wav", false, false, false, $0000000A, $0000000A, "")
    call SetSoundParamsFromLabel(fe, "ChatroomTimerTick")
    call SetSoundDuration(fe, $000001DC)
    set Re = CreateSound("Sound\\Ambient\\DoodadEffects\\SargerasLaugh.wav", false, true, true, $0000000A, $0000000A, "DefaultEAXON")
    call SetSoundParamsFromLabel(Re, "SargerasLaugh")
    call SetSoundDuration(Re, $00000CFE)
    set Te = CreateSound("Sound\\Interface\\ArrangedTeamInvitation.wav", false, false, false, $0000000A, $0000000A, "")
    call SetSoundParamsFromLabel(Te, "ArrangedTeamInvitation")
    call SetSoundDuration(Te, $00000B62)
    set Ye = CreateSound("war3mapImported\\106 Level Up!.mp3", false, false, false, $0000000A, $0000000A, "")
    call SetSoundDuration(Ye, $00000E58)
    call SetSoundChannel(Ye, $00000000)
    call SetSoundVolume(Ye, $0000007F)
    call SetSoundPitch(Ye, 1.)
    set ge = CreateSound("Sound\\Interface\\Rescue.wav", false, false, false, $0000000A, $0000000A, "")
    call SetSoundParamsFromLabel(ge, "Rescue")
    call SetSoundDuration(ge, $00000ED4)
    set he = CreateSound("war3mapImported\\SPEED FREAK.mp3", false, false, false, $0000000A, $0000000A, "")
    call SetSoundDuration(he, $00000810)
    call SetSoundChannel(he, $00000000)
    call SetSoundVolume(he, $0000007F)
    call SetSoundPitch(he, 1.)
    set Fe = CreateSound("Units\\Human\\Phoenix\\PhoenixBirth.wav", false, true, true, $0000000A, $0000000A, "SpellsEAX")
    call SetSoundParamsFromLabel(Fe, "PhoenixBirth")
    call SetSoundDuration(Fe, $000005E8)
    set ke = CreateSound("Units\\Human\\Phoenix\\PhoenixWhat2.wav", false, true, true, $0000000A, $0000000A, "DefaultEAXON")
    call SetSoundParamsFromLabel(ke, "PhoenixWhat")
    call SetSoundDuration(ke, $00000577)
    set xe = CreateSound("war3mapImported\\Speed.mp3", false, false, false, $0000000A, $0000000A, "")
    call SetSoundDuration(xe, $00000783)
    call SetSoundChannel(xe, $00000000)
    call SetSoundVolume(xe, $0000007F)
    call SetSoundPitch(xe, 1.)
    set ve = CreateSound("war3mapImported\\Combowhore.mp3", false, false, false, $0000000A, $0000000A, "")
    call SetSoundDuration(ve, $000007A7)
    call SetSoundChannel(ve, $00000000)
    call SetSoundVolume(ve, $0000007F)
    call SetSoundPitch(ve, 1.)
    set me = CreateSound("war3mapImported\\FLAWLESS VICTORY.mp3", false, false, false, $0000000A, $0000000A, "")
    call SetSoundDuration(me, $00000773)
    call SetSoundChannel(me, $00000000)
    call SetSoundVolume(me, $0000007F)
    call SetSoundPitch(me, 1.)
    set hO = Rect(128., - 12288., 320., - 12096.)
    set FO = Rect(11712., 12480., 11840., 12608.)
    set kO = Rect(160., - 12480., 288., - 12352.)
    set jO = Rect(32., - 12064., 64., - 12000.)
    set xO = Rect(- 5376., - 832., - 4576., - 224.)
    set vO = Rect(- 13600., 9216., - 13216., 9632.)
    set mO = Rect(- 12800., 5984., - 12416., 6272.)
    set QO = Rect(12800., 12864., 12928., 12992.)
    set WO = Rect(12768., 13024., 12832., 13088.)
    set EO = Rect(- 928., 4256., - 608., 4608.)
    set ZO = Rect(12384., 11136., 12576., 11296.)
    set UO = Rect(- 4960., 3168., - 4832., 3296.)
    set IO = Rect(12032., 12864., 12160., 12992.)
    set PO = Rect(12000., 13024., 12064., 13088.)
    set AO = Rect(- 10848., 12896., - 10592., 13152.)
    set DO = Rect(8800., 11712., 9024., 12128.)
    set HO = Rect(8352., 10688., 8672., 10912.)
    set JO = Rect(10496., 9856., 10688., 10336.)
    set KO = Rect(4864., 8896., 5056., 9344.)
    set LO = Rect(5216., 9504., 5568., 9696.)
    set XO = Rect(4480., 12704., 4832., 12896.)
    set CO = Rect(5728., 8896., 5888., 9312.)
    set VO = Rect(6464., 8640., 6624., 8960.)
    set BO = Rect(5184., 8672., 5568., 8832.)
    set NO = Rect(9888., 9024., 10208., 9216.)
    set wl = Rect(10528., 12512., 10688., 12928.)
    set ul = Rect(13248., 4864., 13312., 4928.)
    set rl = Rect(6848., - 1216., 7360., - 704.)
    set sl = Rect(- 4992., 3328., - 4800., 3488.)
    set tl = Rect(8576., - 11296., 8800., - 11136.)
    set il = Rect(- 1344., - 8224., - 1024., - 7904.)
    set Sl = Rect(4192., - 8480., 4672., - 7968.)
    set cl = Rect(2688., - 8768., 3040., - 8416.)
    set ol = Rect(- 3168., - 10400., - 3008., - 10240.)
    set Ol = Rect(- 3424., - 10400., - 3264., - 10240.)
    set ll = Rect(- 3168., - 10656., - 3008., - 10496.)
    set bl = Rect(- 3424., - 10656., - 3264., - 10496.)
    set yl = Rect(4288., 2368., 4416., 2496.)
    set pl = Rect(5824., 2368., 5952., 2496.)
    set el = Rect(4672., 2752., 4800., 2880.)
    set ql = Rect(4544., 2112., 4672., 2240.)
    set al = Rect(5472., 2112., 5600., 2240.)
    set nl = Rect(6464., 2112., 6592., 2240.)
    set dl = Rect(5344., 2752., 5472., 2880.)
    set fl = Rect(5600., 2752., 5728., 2880.)
    set Rl = Rect(5856., 2752., 5984., 2880.)
    set Tl = Rect(6208., 2624., 6336., 2752.)
    set Yl = Rect(6592., 2752., 6720., 2880.)
    set Gl = Rect(6592., 2464., 6720., 2592.)
    set gl = Rect(- 7040., 32., - 6784., 288.)
    set hl = Rect(- 6912., - 6304., - 6720., - 6048.)
    set Fl = Rect(11072., 3104., 11296., 3712.)
    set kl = Rect(- 3424., - 10624., - 3008., - 10272.)
    set xl = Rect(8064., 3456., 8256., 3680.)
    set vl = Rect(4128., 2784., 4480., 3136.)
    set ml = Rect(6240., 3072., 6496., 3200.)
    set Ql = Rect(5152., 1664., 5760., 1952.)
    set Wl = Rect(6336., 192., 6624., 480.)
    set El = Rect(6912., 64., 7328., 448.)
    set Zl = Rect(7456., 2752., 7648., 3040.)
    set Ul = Rect(- 5536., - 10880., - 5088., - 10304.)
    set Il = Rect(3680., 3328., 8224., 3808.)
    set Pl = Rect(4032., 2048., 6752., 3200.)
    set Al = Rect(5120., 128., 6784., 1952.)
    set Dl = Rect(6752., - 64., 8000., 3136.)
    set Hl = Rect(- 7584., - 7488., - 6848., - 6912.)
    set jl = Rect(3808., 3360., 4224., 3776.)
    set Jl = Rect(13312., 12864., 13440., 12992.)
    set Kl = Rect(13312., 13024., 13376., 13088.)
    set Ll = Rect(- 12960., 4704., - 12384., 4960.)
    set Xl = Rect(- 5824., - 11136., - 2784., - 10048.)
    set Cl = Rect(- 12992., - 3296., - 12352., 5280.)
    set Vl = Rect(- 13536., - 11520., - 11200., - 8000.)
    set Bl = Rect(- 11616., - 11232., - 11296., - 10944.)
    set Nl = Rect(- 13408., - 11264., - 12992., - 11008.)
    set Ml = Rect(- 11776., - 8512., - 11488., - 8192.)
    set wb = Rect(- 13280., - 8640., - 12960., - 8352.)
    set ub = Rect(12384., 11008., 12576., 11136.)
    set rb = Rect(11456., 12480., 11648., 12672.)
    set sb = Rect(5632., 3520., 5760., 3648.)
    set tb = Rect(6688., 3520., 6816., 3648.)
    set ib = Rect(7584., 3552., 7648., 3616.)
    set Sb = Rect(4448., 3552., 4512., 3616.)
    set cb = Rect(8320., - 12768., 8480., - 12288.)
    set ob = Rect(1312., - 4992., 2016., - 4832.)
    set Ob = Rect(2784., - 3136., 2944., - 2496.)
    set lb = Rect(- 3584., 6272., - 3424., 6976.)
    set bb = Rect(- 10016., - 11552., - 9152., - 11392.)
    set yb = Rect(- 9664., - 11392., - 9536., - 11264.)
    set pb = Rect(4896., 4384., 5088., 4576.)
    set eb = Rect(5472., 6176., 5664., 6368.)
    set qb = Rect(6112., 6496., 6304., 6688.)
    set ab = Rect(9056., 6560., 9248., 6752.)
    set nb = Rect(8352., 7328., 8544., 7520.)
    set db = Rect(7200., 5408., 7392., 5600.)
    set fb = Rect(10464., 6496., 10656., 6688.)
    call Rect(3968., - 8864., 6816., - 4416.)
    call SetSoundPosition(ye, 5392., - 6640., .0)
    call RegisterStackedSound(ye, true, 2848., 4448.)
    set Rb = Rect(2912., - 13184., 3136., - 12864.)
    set Tb = Rect(4192., - 12512., 4512., - 11968.)
    set Yb = Rect(416., 2048., 864., 2464.)
    set Gb = Rect(- 10464., - 5472., - 10176., - 5312.)
    set gb = Rect(- 10592., - 7744., - 10304., - 7520.)
    set hb = Rect(- 10144., - 5504., - 9920., - 5248.)
    set Fb = Rect(- 10656., - 7968., - 10176., - 7808.)
    set kb = Rect(13376., 4928., 13472., 5056.)
    set jb = Rect(11456., 2080., 11776., 2528.)
    set xb = Rect(2720., 2368., 3264., 2912.)
    set vb = Rect(9024., 3520., 9312., 3808.)
    set mb = Rect(8128., - 1856., 8640., - 1344.)
    set Qb = Rect(6848., - 1856., 7360., - 1344.)
    set Wb = Rect(- 9184., - 8192., - 8256., - 7680.)
    set Eb = Rect(- 7680., - 9600., - 7264., - 9152.)
    set Zb = Rect(- 3200., - 7552., - 2944., - 7040.)
    set Ub = Rect(- 7232., 5376., - 6592., 5888.)
    set Ib = Rect(- 8448., 11744., - 8064., 12128.)
    set Pb = Rect(10688., - 6176., 11008., - 5920.)
    set Ab = Rect(11680., - 9600., 12000., - 9344.)
    set Db = Rect(10816., - 9568., 11168., - 9216.)
    set Hb = Rect(6976., 704., 7104., 832.)
    set Jb = Rect(7488., 992., 7616., 1120.)
    set Kb = Rect(7616., 1600., 7744., 1728.)
    set Lb = Rect(7328., 1856., 7456., 1984.)
    set Xb = Rect(6944., 2208., 7072., 2336.)
    set Cb = Rect(7808., 736., 7936., 864.)
    set Vb = Rect(7808., 480., 7936., 608.)
    set Bb = Rect(7808., 1856., 7936., 1984.)
    set Nb = Rect(6976., 1600., 7104., 1728.)
    set Mb = Rect(6944., 2656., 7072., 2784.)
    set wy = Rect(7232., 1216., 7360., 1344.)
    set uy = Rect(7616., 1216., 7744., 1344.)
    set ry = Rect(7520., 2112., 7648., 2240.)
    set sy = Rect(7808., 2368., 7936., 2496.)
    set ty = Rect(7232., 2304., 7360., 2432.)
    set iy = Rect(7104., 1984., 7232., 2112.)
    set Sy = Rect(9472., - 13440., 10048., - 12768.)
    set cy = Rect(10688., - 13248., 11136., - 12800.)
    set oy = Rect(- 13248., - 9888., - 12896., - 9536.)
    set Oy = Rect(- 10304., - 10944., - 9344., - 10176.)
    set ly = Rect(- 13312., - 10464., - 12992., - 9856.)
    set by = Rect(- 13408., - 11008., - 12544., - 10464.)
    set yy = Rect(11776., 12864., 11904., 12992.)
    set py = Rect(11744., 13024., 11808., 13088.)
    set ey = Rect(6048., - 2016., 9440., - 544.)
    set qy = Rect(- 13408., 12992., - 12832., 13216.)
    set ay = Rect(- 12128., 10752., - 11840., 11328.)
    set ny = Rect(- 13472., 7584., - 13248., 8160.)
    set dy = Rect(- 12512., 7232., - 11936., 7392.)
    set fy = Rect(8768., - 1856., 9280., - 1344.)
    set Ry = Rect(6048., 1344., 6176., 1472.)
    set Ty = Rect(6432., 704., 6560., 832.)
    set Yy = Rect(6176., 1216., 6304., 1344.)
    set Gy = Rect(5696., 1472., 5824., 1600.)
    call Rect(5472., 704., 5600., 832.)
    set gy = Rect(6176., 576., 6304., 704.)
    set hy = Rect(6592., 1472., 6720., 1600.)
    set Fy = Rect(6304., 1344., 6432., 1472.)
    set ky = Rect(5312., 1344., 5440., 1472.)
    set jy = Rect(6048., 1088., 6176., 1216.)
    set xy = Rect(6592., 960., 6720., 1088.)
    set vy = Rect(5312., 704., 5440., 832.)
    set my = Rect(5856., 576., 5984., 704.)
    set Qy = Rect(- 10144., 3488., - 9952., 3648.)
    set Wy = Rect(12448., 9952., 12640., 10112.)
    set Ey = Rect(12416., 10208., 12672., 10336.)
    set Zy = Rect(- 10144., 3712., - 9952., 3840.)
    set Uy = Rect(1888., 4096., 2368., 4704.)
    set Iy = Rect(2656., 4960., 2944., 5376.)
    set Py = Rect(- 3104., - 2400., - 2656., - 1984.)
    set Ay = Rect(- 6304., - 3104., - 5888., - 2688.)
    set Dy = Rect(- 5984., - 4448., - 5568., - 4032.)
    set Hy = Rect(- 1920., - 3040., - 1184., - 2688.)
    set Jy = Rect(- 8224., 416., - 6176., 1600.)
    set Ly = Rect(- 7800., - 170., - 7400., 220.)
    set Xy = Rect(- 8200., - 650., - 7650., - 200.)
    set Ky = Rect(- 5984., 64., - 1920., 1568.)
    set Cy = Rect(6208., - 1856., 6720., - 1344.)
    set Vy = Rect(7488., - 1856., 8000., - 1344.)
    set By = Rect(- 736., - 6848., 384., - 5760.)
    set Ny = Rect(8128., - 1216., 8640., - 704.)
    set My = Rect(- 2528., 8416., - 1696., 9088.)
    set wp = Rect(3712., 4320., 4224., 4800.)
    set up = Rect(9504., 4384., 9824., 4672.)
    set rp = Rect(6208., - 1216., 6720., - 704.)
    set sp = Rect(- 1600., - 8960., - 832., - 8704.)
    set tp = Rect(- 5792., 2528., - 5472., 2880.)
    set ip = Rect(2272., - 128., 2560., 160.)
    set Sp = Rect(2656., - 11744., 2944., - 11456.)
    set cp = Rect(- 12736., - 3200., - 12480., - 2944.)
    set op = Rect(- 7264., - 4480., - 6944., - 4224.)
    set Op = Rect(- 6240., - 5728., - 5760., - 5248.)
    set lp = Rect(4928., 10208., 5056., 10400.)
    set bp = Rect(- 12864., 4000., - 12480., 4320.)
    set yp = Rect(2912., - 672., 3008., - 576.)
    set pp = Rect(11392., - 1152., 11776., - 736.)
    set ep = Rect(- 10848., - 9568., - 10176., - 8896.)
    set qp = Rect(8384., 288., 8640., 864.)
    set ap = Rect(4448., 1120., 4768., 1472.)
    call Rect(- 9216., 9088., - 8736., 9536.)
    set np = Rect(320., 6144., 640., 6368.)
    set dp = Rect(3200., 8256., 3360., 8480.)
    set fp = Rect(3360., 8256., 3552., 8512.)
    set Rp = Rect(640., 5824., 864., 6112.)
    call Rect(- 192., 10752., 96., 11072.)
    set Tp = Rect(- 12800., - 2624., - 12416., - 2304.)
    set Yp = Rect(- 3968., 9024., - 3552., 9408.)
    set Gp = Rect(11520., 12864., 11648., 12992.)
    set gp = Rect(11456., 13024., 11488., 13088.)
    set hp = Rect(7488., - 1216., 8000., - 704.)
    set Fp = Rect(12544., 12864., 12672., 12992.)
    set kp = Rect(12512., 13024., 12576., 13088.)
    set jp = Rect(12288., 12864., 12416., 12992.)
    set xp = Rect(12288., 13024., 12320., 13088.)
    set vp = Rect(- 10464., - 6816., - 9824., - 6240.)
    set mp = Rect(- 13216., - 4960., - 12768., - 4736.)
    set Qp = Rect(- 11808., - 5216., - 11456., - 4928.)
    set Wp = Rect(- 9920., - 4320., - 9728., - 4064.)
    set Ep = Rect(- 8256., - 2656., - 8064., - 2400.)
    set Zp = Rect(- 8064., - 2656., - 7808., - 2400.)
    set Up = Rect(- 10080., - 4384., - 9920., - 4192.)
    set Ip = Rect(13056., 12864., 13184., 12992.)
    set Pp = Rect(12992., 13024., 13024., 13088.)
    set Ap = Rect(8768., - 1216., 9280., - 704.)
    set Dp = Rect(- 9504., - 13728., - 6336., - 13024.)
    set Hp = Rect(- 5632., - 13696., - 2944., - 13152.)
    set Jp = Rect(- 3744., - 12448., - 3360., - 12096.)
    set Kp = Rect(- 5248., - 12448., - 4864., - 12096.)
    set Lp = Rect(- 4480., - 12448., - 4096., - 12096.)
    set Xp = Rect(- 9408., - 13472., - 9024., - 13120.)
    set Cp = Rect(- 4832., 10304., - 4384., 11200.)
    set Vp = Rect(- 6400., - 13824., - 2144., - 11648.)
    set Bp = Rect(- 4448., - 13152., - 4064., - 12800.)
    set Np = Rect(- 6240., - 13440., - 5920., - 13120.)
    set Mp = Rect(- 6240., - 12992., - 5920., - 12672.)
    set we = Rect(- 5760., - 13696., - 2784., - 12512.)
    set kG = CreateDestructable($41546733, 7424., 4544., .0, .9, $00000000)
    set FG = CreateDestructable($49546733, 3072., - 12992., .0, .9, $00000000)
    set hG = CreateDestructable($49546733, 4352., - 12224., .0, .9, $00000000)
    set xG = CreateDestructable($4C546731, 640., 2240., 270., .9, $00000000)
    set jG = CreateDestructable($59546378, - 6912., 5632., 270., 1., $00000000)
    call hEr()
    call t8w()
    call vLt()
    call LZu()
    call rRu()
    call ConfigureNeutralVictim()
    set ZG = Filter(qpw)
    call Filter(function IssueHauntOrderAtLocBJFilter)
    call Filter(apw)
    set filterGetUnitsInRectOfPlayer = Filter(function GetUnitsInRectOfPlayerFilter)
    call Filter(function GetUnitsOfTypeIdAllFilter)
    set filterGetUnitsOfPlayerAndTypeId = Filter(function GetUnitsOfPlayerAndTypeIdFilter)
    call Filter(function MeleeTrainedUnitIsHeroBJFilter)
    call Filter(function LivingPlayerUnitsOfTypeIdFilter)
    set QSi = 0
    loop
        exitwhen QSi == 16
        set bj_FORCE_PLAYER[QSi] = CreateForce()
        call ForceAddPlayer(bj_FORCE_PLAYER[QSi], Player(QSi))
        set QSi = QSi + 1
    endloop
    set bj_FORCE_ALL_PLAYERS = CreateForce()
    call ForceEnumPlayers(bj_FORCE_ALL_PLAYERS, null)
    call GetGameSpeed()
    call IsFogEnabled()
    call IsFogMaskEnabled()
    set QSi = 0
    loop
        exitwhen QSi >= bj_MAX_QUEUED_TRIGGERS
        set bj_queuedExecTriggers[QSi] = null
        set bj_queuedExecUseConds[QSi] = false
        set QSi = QSi + 1
    endloop
    set bj_rescueSound = CreateSoundFromLabel("Rescue", false, false, false, $00002710, $00002710)
    set bj_questDiscoveredSound = CreateSoundFromLabel("QuestNew", false, false, false, $00002710, $00002710)
    set bj_questUpdatedSound = CreateSoundFromLabel("QuestUpdate", false, false, false, $00002710, $00002710)
    set bj_questCompletedSound = CreateSoundFromLabel("QuestCompleted", false, false, false, $00002710, $00002710)
    set bj_questFailedSound = CreateSoundFromLabel("QuestFailed", false, false, false, $00002710, $00002710)
    set bj_questHintSound = CreateSoundFromLabel("Hint", false, false, false, $00002710, $00002710)
    set bj_questSecretSound = CreateSoundFromLabel("SecretFound", false, false, false, $00002710, $00002710)
    set bj_questItemAcquiredSound = CreateSoundFromLabel("ItemReward", false, false, false, $00002710, $00002710)
    set bj_questWarningSound = CreateSoundFromLabel("Warning", false, false, false, $00002710, $00002710)
    set bj_victoryDialogSound = CreateSoundFromLabel("QuestCompleted", false, false, false, $00002710, $00002710)
    set bj_defeatDialogSound = CreateSoundFromLabel("QuestFailed", false, false, false, $00002710, $00002710)
    call DelayedSuspendDecayCreate()
    set WSi = VersionGet()
    if WSi == VERSION_REIGN_OF_CHAOS then
    endif
    call InitQueuedTriggers()
    call InitRescuableBehaviorBJ()
    call InitDNCSounds()
    call InitMapRects()
    call InitSummonableCaps()
    set ESi = 0
    loop
        set bj_stockAllowedPermanent[ESi] = false
        set bj_stockAllowedCharged[ESi] = false
        set bj_stockAllowedArtifact[ESi] = false
        set ESi = ESi + 1
        exitwhen ESi > 10
    endloop
    call SetAllItemTypeSlots($0000000B)
    call SetAllUnitTypeSlots($0000000B)
    set bj_stockUpdateTimer = CreateTimer()
    call TimerStart(bj_stockUpdateTimer, bj_STOCK_RESTOCK_INITIAL_DELAY, false, npw)
    set bj_stockItemPurchased = CreateTrigger()
    call TriggerRegisterPlayerUnitEvent(bj_stockItemPurchased, Player(PLAYER_NEUTRAL_PASSIVE), EVENT_PLAYER_UNIT_SELL_ITEM, null)
    call TriggerAddAction(bj_stockItemPurchased, function RemovePurchasedItem)
    call DetectGameStarted()
    set mSi = 0
    set Wu = CreateGroup()
    set mSi = 0
    loop
        exitwhen mSi > 1
        set Zu[mSi] = 0
        set Iu[mSi] = 0
        set Au[mSi] = 0
        set ur[mSi] = 0
        set Sr[mSi] = 0.
        set cr[mSi] = 0.
        set ar[mSi] = 0
        set Rr[mSi] = 0
        set gr[mSi] = 0
        set hr[mSi] = 0
        set Qr[mSi] = CreateGroup()
        set Dr[mSi] = CreateGroup()
        set Hr[mSi] = 0.
        set Jr[mSi] = 0.
        set Ss[mSi] = 0
        set os[mSi] = 0
        set ds[mSi] = 0
        set vs[mSi] = 0
        set ms[mSi] = 0
        set Qs[mSi] = 0
        set bt[mSi] = CreateForce()
        set kt[mSi] = 0
        set Zt[mSi] = 0
        set Pt[mSi] = CreateGroup()
        set Jt[mSi] = 0
        set Mt[mSi] = ""
        set si[mSi] = 0
        set Si[mSi] = 0
        set Oi[mSi] = 0
        set li[mSi] = 0
        set xi[mSi] = ""
        set Ui[mSi] = 0
        set Ii[mSi] = 0.
        set Pi[mSi] = 0.
        set Ai[mSi] = 0.
        set Di[mSi] = 0.
        set Hi[mSi] = 0.
        set Ji[mSi] = ""
        set Ki[mSi] = ""
        set Li[mSi] = false
        set Xi[mSi] = 0
        set Ci[mSi] = 0
        set vS[mSi] = 0
        set AS[mSi] = 0
        set KS[mSi] = 0
        set VS[mSi] = 0
        set BS[mSi] = 0
        set uc[mSi] = 0
        set sc[mSi] = 0
        set cc[mSi] = 0.
        set oc[mSi] = 0.
        set Oc[mSi] = 0.
        set lc[mSi] = 0.
        set bc[mSi] = 0.
        set yc[mSi] = 0.
        set qc[mSi] = 0
        set gc[mSi] = CreateGroup()
        set Pc[mSi] = CreateGroup()
        set Bc[mSi] = 0
        set bo[mSi] = 0
        set po[mSi] = 0
        set eo[mSi] = 0.
        set ao[mSi] = 0
        set Eo[mSi] = 0
        set Zo[mSi] = 0
        set Po[mSi] = 0
        set SO[mSi] = 0
        set cO[mSi] = 0
        set bO[mSi] = 0
        set mSi = mSi + 1
    endloop
    set Nu = CreateForce()
    set nr = CreateForce()
    set fr = CreateForce()
    set Tr = CreateForce()
    set Yr = CreateForce()
    set Gr = CreateForce()
    set Fr = CreateForce()
    set kr = CreateForce()
    set Kr = CreateForce()
    set Xr = CreateForce()
    set Cr = CreateForce()
    set Vr = CreateForce()
    set Nr = CreateForce()
    set Mr = CreateForce()
    set ws = CreateForce()
    set us = CreateForce()
    call CreateForce()
    set ls = CreateForce()
    set ys = CreateForce()
    set as = CreateForce()
    set ns = CreateForce()
    set fs = CreateForce()
    set Rs = CreateForce()
    set Ts = CreateForce()
    set Ys = CreateForce()
    set Gs = CreateForce()
    set gs = CreateForce()
    set hs = CreateForce()
    set Fs = CreateForce()
    set ks = CreateForce()
    set js = CreateForce()
    set xs = CreateForce()
    set Ws = CreateForce()
    set Es = CreateForce()
    set Zs = CreateForce()
    set mSi = 0
    loop
        exitwhen mSi > 15
        call CreateGroup()
        set mSi = mSi + 1
    endloop
    set Ns = CreateForce()
    set rt = CreateForce()
    call CreateForce()
    set ot = CreateForce()
    set Ot = CreateForce()
    set lt = CreateForce()
    set yt = CreateForce()
    set pt = CreateForce()
    set et = CreateForce()
    set nt = CreateTimer()
    set Rt = CreateForce()
    set Tt = CreateForce()
    set Yt = CreateForce()
    set Gt = CreateForce()
    set gt = CreateForce()
    set Ft = CreateForce()
    set jt = CreateForce()
    set mt = CreateForce()
    set It = CreateForce()
    set At = CreateForce()
    set Kt = CreateForce()
    set Lt = CreateForce()
    set Xt = CreateForce()
    set Ct = CreateGroup()
    set Vt = CreateForce()
    set ti = CreateForce()
    set ii = CreateForce()
    call CreateTimer()
    set di = CreateTimer()
    call CreateTimer()
    call CreateTimer()
    call CreateTimer()
    call CreateTimer()
    call CreateTimer()
    call CreateTimer()
    call CreateTimer()
    call CreateTimer()
    call CreateTimer()
    set Gi = CreateForce()
    set mi = CreateGroup()
    set uS = CreateForce()
    set rS = CreateForce()
    set mSi = 0
    loop
        exitwhen mSi > 6
        set sS[mSi] = 0
        set mSi = mSi + 1
    endloop
    set tS = DialogCreate()
    set cS = CreateGroup()
    set mSi = 0
    loop
        exitwhen mSi > 3
        set oS[mSi] = 0
        call CreateForce()
        set mSi = mSi + 1
    endloop
    set OS = CreateGroup()
    set lS = CreateGroup()
    set bS = CreateGroup()
    set yS = CreateGroup()
    set mSi = 0
    loop
        exitwhen mSi > 10
        set YS[mSi] = CreateGroup()
        set hS[mSi] = CreateGroup()
        set tO[mSi] = CreateTimer()
        call CreateTimer()
        set mSi = mSi + 1
    endloop
    set jS = CreateForce()
    call CreateGroup()
    set US = CreateForce()
    set mSi = 0
    loop
        exitwhen mSi > 16
        set IS[mSi] = CreateForce()
        set PS[mSi] = CreateForce()
        set fc[mSi] = CreateGroup()
        set Rc[mSi] = CreateForce()
        set RO[mSi] = CreateTimer()
        set mSi = mSi + 1
    endloop
    set ic = CreateForce()
    set Sc = CreateForce()
    set mSi = 0
    loop
        exitwhen mSi > 7
        set pc[mSi] = CreateForce()
        set ec[mSi] = CreateForce()
        set mSi = mSi + 1
    endloop
    set mSi = 0
    loop
        exitwhen mSi > 2
        set nc[mSi] = CreateForce()
        set dO[mSi] = 0
        set mSi = mSi + 1
    endloop
    set mSi = 0
    loop
        exitwhen mSi > 5
        set dc[mSi] = CreateForce()
        set mSi = mSi + 1
    endloop
    set Tc = CreateGroup()
    set kc = CreateGroup()
    set vc = CreateGroup()
    call CreateGroup()
    set Wc = CreateForce()
    call CreateGroup()
    set Ec = CreateGroup()
    set Zc = CreateGroup()
    call CreateGroup()
    set Kc = CreateGroup()
    set Lc = CreateGroup()
    set Vc = CreateGroup()
    set Oo = CreateGroup()
    set lo = CreateGroup()
    set yo = CreateGroup()
    set do = CreateForce()
    set fo = CreateGroup()
    set ko = 14
    set mo = CreateGroup()
    set mSi = 0
    loop
        exitwhen mSi > 4
        set Uo[mSi] = CreateForce()
        set mSi = mSi + 1
    endloop
    set Do = CreateTimer()
    set Ho = CreateTimer()
    set Jo = CreateTimer()
    set Ko = CreateTimer()
    set Lo = CreateTimer()
    set Xo = CreateTimer()
    set Co = CreateTimer()
    set Vo = CreateTimer()
    set Bo = CreateTimer()
    set No = CreateTimer()
    set wO = CreateForce()
    call CreateForce()
    set rO = CreateForce()
    set sO = CreateForce()
    set iO = CreateForce()
    call CreateGroup()
    call CreateForce()
    set eO = CreateGroup()
    call CreateGroup()
    call CreateGroup()
    call CreateGroup()
    call CreateGroup()
    set TO = CreateGroup()
    set YO = CreateGroup()
    set GO = CreateGroup()
    call CreateGroup()
    set gO = CreateGroup()
    set Qe = CreateTrigger()
    call TriggerAddAction(Qe, dpw)
    set We = CreateTrigger()
    call TriggerRegisterTimerEventSingle(We, 1.)
    call TriggerAddAction(We, fpw)
    set Ee = CreateTrigger()
    call TriggerRegisterTimerEventSingle(Ee, .01)
    call TriggerAddAction(Ee, Rpw)
    set Ze = CreateTrigger()
    call TriggerRegisterAnyUnitEventBJ(Ze, EVENT_PLAYER_UNIT_SELL)
    call TriggerAddAction(Ze, Tpw)
    set Ue = CreateTrigger()
    call TriggerRegisterGameLoadedEventBJ(Ue)
    call TriggerAddAction(Ue, Ypw)
    set Ie = CreateTrigger()
    call TriggerRegisterAnyUnitEventBJ(Ie, EVENT_PLAYER_UNIT_ATTACKED)
    call TriggerAddCondition(Ie, Condition(Gpw))
    call TriggerAddAction(Ie, gpw)
    set Pe = CreateTrigger()
    call TriggerRegisterTimerEventPeriodic(Pe, 2.)
    call TriggerAddAction(Pe, hpw)
    set Ae = CreateTrigger()
    call TriggerRegisterAnyUnitEventBJ(Ae, EVENT_PLAYER_UNIT_PICKUP_ITEM)
    call TriggerAddCondition(Ae, Condition(Fpw))
    call TriggerAddAction(Ae, kpw)
    set De = CreateTrigger()
    call TriggerRegisterAnyUnitEventBJ(De, EVENT_PLAYER_UNIT_DROP_ITEM)
    call TriggerAddCondition(De, Condition(jpw))
    call TriggerAddAction(De, xpw)
    set He = CreateTrigger()
    call TriggerRegisterPlayerAllianceChange(He, Player($00000000), ALLIANCE_SHARED_CONTROL)
    call TriggerRegisterPlayerAllianceChange(He, Player($00000001), ALLIANCE_SHARED_CONTROL)
    call TriggerRegisterPlayerAllianceChange(He, Player($00000002), ALLIANCE_SHARED_CONTROL)
    call TriggerRegisterPlayerAllianceChange(He, Player($00000003), ALLIANCE_SHARED_CONTROL)
    call TriggerRegisterPlayerAllianceChange(He, Player($00000004), ALLIANCE_SHARED_CONTROL)
    call TriggerRegisterPlayerAllianceChange(He, Player($00000005), ALLIANCE_SHARED_CONTROL)
    call TriggerRegisterPlayerAllianceChange(He, Player($00000006), ALLIANCE_SHARED_CONTROL)
    call TriggerRegisterPlayerAllianceChange(He, Player($00000007), ALLIANCE_SHARED_CONTROL)
    call TriggerRegisterPlayerAllianceChange(He, Player($00000008), ALLIANCE_SHARED_CONTROL)
    call TriggerRegisterPlayerAllianceChange(He, Player($00000009), ALLIANCE_SHARED_CONTROL)
    call TriggerAddAction(He, vpw)
    set Je = CreateTrigger()
    call TriggerRegisterPlayerChatEvent(Je, Player($00000000), "-clear", true)
    call TriggerRegisterPlayerChatEvent(Je, Player($00000001), "-clear", true)
    call TriggerRegisterPlayerChatEvent(Je, Player($00000002), "-clear", true)
    call TriggerRegisterPlayerChatEvent(Je, Player($00000003), "-clear", true)
    call TriggerRegisterPlayerChatEvent(Je, Player($00000004), "-clear", true)
    call TriggerRegisterPlayerChatEvent(Je, Player($00000005), "-clear", true)
    call TriggerRegisterPlayerChatEvent(Je, Player($00000006), "-clear", true)
    call TriggerRegisterPlayerChatEvent(Je, Player($00000007), "-clear", true)
    call TriggerRegisterPlayerChatEvent(Je, Player($00000008), "-clear", true)
    call TriggerRegisterPlayerChatEvent(Je, Player($00000009), "-clear", true)
    call TriggerAddAction(Je, mpw)
    set Ke = CreateTrigger()
    call TriggerRegisterPlayerChatEvent(Ke, Player($00000000), "-unlearn", true)
    call TriggerRegisterPlayerChatEvent(Ke, Player($00000001), "-unlearn", true)
    call TriggerRegisterPlayerChatEvent(Ke, Player($00000002), "-unlearn", true)
    call TriggerRegisterPlayerChatEvent(Ke, Player($00000003), "-unlearn", true)
    call TriggerRegisterPlayerChatEvent(Ke, Player($00000004), "-unlearn", true)
    call TriggerRegisterPlayerChatEvent(Ke, Player($00000005), "-unlearn", true)
    call TriggerRegisterPlayerChatEvent(Ke, Player($00000006), "-unlearn", true)
    call TriggerRegisterPlayerChatEvent(Ke, Player($00000007), "-unlearn", true)
    call TriggerRegisterPlayerChatEvent(Ke, Player($00000008), "-unlearn", true)
    call TriggerRegisterPlayerChatEvent(Ke, Player($00000009), "-unlearn", true)
    call TriggerAddCondition(Ke, Condition(Qpw))
    call TriggerAddAction(Ke, Wpw)
    set Le = CreateTrigger()
    call TriggerRegisterTimerEventPeriodic(Le, 600.)
    call TriggerAddAction(Le, Epw)
    set Xe = CreateTrigger()
    call TriggerRegisterPlayerChatEvent(Xe, Player($00000000), "-ms", true)
    call TriggerRegisterPlayerChatEvent(Xe, Player($00000001), "-ms", true)
    call TriggerRegisterPlayerChatEvent(Xe, Player($00000002), "-ms", true)
    call TriggerRegisterPlayerChatEvent(Xe, Player($00000003), "-ms", true)
    call TriggerRegisterPlayerChatEvent(Xe, Player($00000004), "-ms", true)
    call TriggerRegisterPlayerChatEvent(Xe, Player($00000005), "-ms", true)
    call TriggerRegisterPlayerChatEvent(Xe, Player($00000006), "-ms", true)
    call TriggerRegisterPlayerChatEvent(Xe, Player($00000007), "-ms", true)
    call TriggerRegisterPlayerChatEvent(Xe, Player($00000008), "-ms", true)
    call TriggerRegisterPlayerChatEvent(Xe, Player($00000009), "-ms", true)
    call TriggerAddAction(Xe, Zpw)
    set Ce = CreateTrigger()
    call TriggerAddAction(Ce, Upw)
    set Ve = CreateTrigger()
    call TriggerRegisterPlayerChatEvent(Ve, Player($00000000), "-check ", false)
    call TriggerRegisterPlayerChatEvent(Ve, Player($00000001), "-check ", false)
    call TriggerRegisterPlayerChatEvent(Ve, Player($00000002), "-check ", false)
    call TriggerRegisterPlayerChatEvent(Ve, Player($00000003), "-check ", false)
    call TriggerRegisterPlayerChatEvent(Ve, Player($00000004), "-check ", false)
    call TriggerRegisterPlayerChatEvent(Ve, Player($00000005), "-check ", false)
    call TriggerRegisterPlayerChatEvent(Ve, Player($00000006), "-check ", false)
    call TriggerRegisterPlayerChatEvent(Ve, Player($00000007), "-check ", false)
    call TriggerRegisterPlayerChatEvent(Ve, Player($00000008), "-check ", false)
    call TriggerRegisterPlayerChatEvent(Ve, Player($00000009), "-check ", false)
    call TriggerAddCondition(Ve, Condition(Ipw))
    call TriggerAddAction(Ve, Ppw)
    set Be = CreateTrigger()
    call TriggerRegisterPlayerChatEvent(Be, Player($00000000), "-check2 ", false)
    call TriggerRegisterPlayerChatEvent(Be, Player($00000001), "-check2 ", false)
    call TriggerRegisterPlayerChatEvent(Be, Player($00000002), "-check2 ", false)
    call TriggerRegisterPlayerChatEvent(Be, Player($00000003), "-check2 ", false)
    call TriggerRegisterPlayerChatEvent(Be, Player($00000004), "-check2 ", false)
    call TriggerRegisterPlayerChatEvent(Be, Player($00000005), "-check2 ", false)
    call TriggerRegisterPlayerChatEvent(Be, Player($00000006), "-check2 ", false)
    call TriggerRegisterPlayerChatEvent(Be, Player($00000007), "-check2 ", false)
    call TriggerRegisterPlayerChatEvent(Be, Player($00000008), "-check2 ", false)
    call TriggerRegisterPlayerChatEvent(Be, Player($00000009), "-check2 ", false)
    call TriggerAddCondition(Be, Condition(Apw))
    call TriggerAddAction(Be, Dpw)
    set Ne = CreateTrigger()
    call TriggerRegisterTimerEventPeriodic(Ne, .01)
    call TriggerAddAction(Ne, Hpw)
    set Me = CreateTrigger()
    call TriggerAddCondition(Me, Condition(Jpw))
    call TriggerAddAction(Me, Kpw)
    set wq = CreateTrigger()
    call TriggerRegisterPlayerChatEvent(wq, Player($00000000), "-dps", true)
    call TriggerRegisterPlayerChatEvent(wq, Player($00000001), "-dps", true)
    call TriggerRegisterPlayerChatEvent(wq, Player($00000002), "-dps", true)
    call TriggerRegisterPlayerChatEvent(wq, Player($00000003), "-dps", true)
    call TriggerRegisterPlayerChatEvent(wq, Player($00000004), "-dps", true)
    call TriggerRegisterPlayerChatEvent(wq, Player($00000005), "-dps", true)
    call TriggerRegisterPlayerChatEvent(wq, Player($00000006), "-dps", true)
    call TriggerRegisterPlayerChatEvent(wq, Player($00000007), "-dps", true)
    call TriggerRegisterPlayerChatEvent(wq, Player($00000008), "-dps", true)
    call TriggerRegisterPlayerChatEvent(wq, Player($00000009), "-dps", true)
    call TriggerAddCondition(wq, Condition(Lpw))
    call TriggerAddAction(wq, Xpw)
    set uq = CreateTrigger()
    call TriggerAddAction(uq, Cpw)
    set rq = CreateTrigger()
    call TriggerRegisterEnterRectSimple(rq, hO)
    call TriggerAddCondition(rq, Condition(Vpw))
    call TriggerAddAction(rq, Bpw)
    set sq = CreateTrigger()
    call TriggerRegisterEnterRectSimple(sq, rb)
    call TriggerAddAction(sq, Npw)
    set tq = CreateTrigger()
    call TriggerRegisterEnterRectSimple(tq, Gp)
    call TriggerAddCondition(tq, Condition(Mpw))
    call TriggerAddAction(tq, wew)
    set iq = CreateTrigger()
    call TriggerRegisterEnterRectSimple(iq, yy)
    call TriggerAddCondition(iq, Condition(uew))
    call TriggerAddAction(iq, rew)
    set Sq = CreateTrigger()
    call TriggerRegisterEnterRectSimple(Sq, IO)
    call TriggerAddCondition(Sq, Condition(sew))
    call TriggerAddAction(Sq, tew)
    set cq = CreateTrigger()
    call TriggerRegisterEnterRectSimple(cq, jp)
    call TriggerAddCondition(cq, Condition(iew))
    call TriggerAddAction(cq, Sew)
    set oq = CreateTrigger()
    call TriggerRegisterEnterRectSimple(oq, Fp)
    call TriggerAddCondition(oq, Condition(cew))
    call TriggerAddAction(oq, oew)
    set Oq = CreateTrigger()
    call TriggerRegisterEnterRectSimple(Oq, QO)
    call TriggerAddCondition(Oq, Condition(Oew))
    call TriggerAddAction(Oq, lew)
    set lq = CreateTrigger()
    call TriggerRegisterEnterRectSimple(lq, Ip)
    call TriggerAddCondition(lq, Condition(bew))
    call TriggerAddAction(lq, yew)
    set bq = CreateTrigger()
    call TriggerRegisterEnterRectSimple(bq, Jl)
    call TriggerAddCondition(bq, Condition(pew))
    call TriggerAddAction(bq, eew)
    set yq = CreateTrigger()
    call TriggerRegisterAnyUnitEventBJ(yq, EVENT_PLAYER_UNIT_ISSUED_TARGET_ORDER)
    call TriggerAddCondition(yq, Condition(qew))
    call TriggerAddAction(yq, aew)
    set pq = CreateTrigger()
    call TriggerRegisterAnyUnitEventBJ(pq, EVENT_PLAYER_UNIT_DEATH)
    call TriggerAddCondition(pq, Condition(dew))
    call TriggerAddAction(pq, few)
    set eq = CreateTrigger()
    call TriggerRegisterAnyUnitEventBJ(eq, EVENT_PLAYER_UNIT_ISSUED_TARGET_ORDER)
    call TriggerAddCondition(eq, Condition(Rew))
    call TriggerAddAction(eq, Tew)
    set qq = CreateTrigger()
    call TriggerRegisterAnyUnitEventBJ(qq, EVENT_PLAYER_UNIT_ISSUED_TARGET_ORDER)
    call TriggerAddCondition(qq, Condition(Yew))
    call TriggerAddAction(qq, Gew)
    set aq = CreateTrigger()
    call TriggerRegisterAnyUnitEventBJ(aq, EVENT_PLAYER_UNIT_DEATH)
    call TriggerAddCondition(aq, Condition(gew))
    call TriggerAddAction(aq, hew)
    set nq = CreateTrigger()
    call TriggerRegisterAnyUnitEventBJ(nq, EVENT_PLAYER_UNIT_ISSUED_TARGET_ORDER)
    call TriggerAddCondition(nq, Condition(Few))
    call TriggerAddAction(nq, kew)
    set dq = CreateTrigger()
    call TriggerRegisterAnyUnitEventBJ(dq, EVENT_PLAYER_UNIT_ISSUED_TARGET_ORDER)
    call TriggerAddCondition(dq, Condition(jew))
    call TriggerAddAction(dq, xew)
    set fq = CreateTrigger()
    call TriggerRegisterAnyUnitEventBJ(fq, EVENT_PLAYER_UNIT_DEATH)
    call TriggerAddCondition(fq, Condition(vew))
    call TriggerAddAction(fq, mew)
    set Rq = CreateTrigger()
    call TriggerRegisterAnyUnitEventBJ(Rq, EVENT_PLAYER_UNIT_ISSUED_TARGET_ORDER)
    call TriggerAddCondition(Rq, Condition(Qew))
    call TriggerAddAction(Rq, Wew)
    set Tq = CreateTrigger()
    call TriggerRegisterAnyUnitEventBJ(Tq, EVENT_PLAYER_UNIT_ISSUED_TARGET_ORDER)
    call TriggerAddCondition(Tq, Condition(Eew))
    call TriggerAddAction(Tq, Zew)
    set Yq = CreateTrigger()
    call TriggerRegisterAnyUnitEventBJ(Yq, EVENT_PLAYER_UNIT_DEATH)
    call TriggerAddCondition(Yq, Condition(Uew))
    call TriggerAddAction(Yq, Iew)
    set Gq = CreateTrigger()
    call TriggerRegisterAnyUnitEventBJ(Gq, EVENT_PLAYER_UNIT_DEATH)
    call TriggerAddCondition(Gq, Condition(Pew))
    call TriggerAddAction(Gq, Aew)
    set gq = CreateTrigger()
    call TriggerRegisterAnyUnitEventBJ(gq, EVENT_PLAYER_UNIT_ISSUED_TARGET_ORDER)
    call TriggerAddCondition(gq, Condition(Dew))
    call TriggerAddAction(gq, Hew)
    set hq = CreateTrigger()
    call TriggerRegisterAnyUnitEventBJ(hq, EVENT_PLAYER_UNIT_ISSUED_TARGET_ORDER)
    call TriggerAddCondition(hq, Condition(Jew))
    call TriggerAddAction(hq, Kew)
    set Fq = CreateTrigger()
    call TriggerRegisterAnyUnitEventBJ(Fq, EVENT_PLAYER_UNIT_ISSUED_TARGET_ORDER)
    call TriggerAddCondition(Fq, Condition(Lew))
    call TriggerAddAction(Fq, Xew)
    set kq = CreateTrigger()
    call TriggerRegisterAnyUnitEventBJ(kq, EVENT_PLAYER_UNIT_ISSUED_TARGET_ORDER)
    call TriggerAddCondition(kq, Condition(Cew))
    call TriggerAddAction(kq, Vew)
    set jq = CreateTrigger()
    call TriggerRegisterAnyUnitEventBJ(jq, EVENT_PLAYER_UNIT_ISSUED_TARGET_ORDER)
    call TriggerAddCondition(jq, Condition(Bew))
    call TriggerAddAction(jq, New)
    set xq = CreateTrigger()
    call TriggerRegisterAnyUnitEventBJ(xq, EVENT_PLAYER_UNIT_ISSUED_TARGET_ORDER)
    call TriggerAddCondition(xq, Condition(Mew))
    call TriggerAddAction(xq, wqw)
    set vq = CreateTrigger()
    call TriggerRegisterAnyUnitEventBJ(vq, EVENT_PLAYER_UNIT_ISSUED_TARGET_ORDER)
    call TriggerAddCondition(vq, Condition(uqw))
    call TriggerAddAction(vq, rqw)
    set mq = CreateTrigger()
    call TriggerRegisterAnyUnitEventBJ(mq, EVENT_PLAYER_UNIT_ISSUED_TARGET_ORDER)
    call TriggerAddCondition(mq, Condition(sqw))
    call TriggerAddAction(mq, tqw)
    set Qq = CreateTrigger()
    call TriggerRegisterAnyUnitEventBJ(Qq, EVENT_PLAYER_UNIT_ISSUED_TARGET_ORDER)
    call TriggerAddCondition(Qq, Condition(iqw))
    call TriggerAddAction(Qq, Sqw)
    set Wq = CreateTrigger()
    call TriggerRegisterAnyUnitEventBJ(Wq, EVENT_PLAYER_UNIT_ISSUED_TARGET_ORDER)
    call TriggerAddCondition(Wq, Condition(cqw))
    call TriggerAddAction(Wq, oqw)
    set Eq = CreateTrigger()
    call TriggerRegisterAnyUnitEventBJ(Eq, EVENT_PLAYER_UNIT_ISSUED_TARGET_ORDER)
    call TriggerAddCondition(Eq, Condition(Oqw))
    call TriggerAddAction(Eq, lqw)
    set Zq = CreateTrigger()
    call TriggerRegisterAnyUnitEventBJ(Zq, EVENT_PLAYER_UNIT_DEATH)
    call TriggerAddCondition(Zq, Condition(bqw))
    call TriggerAddAction(Zq, yqw)
    set Uq = CreateTrigger()
    call TriggerRegisterAnyUnitEventBJ(Uq, EVENT_PLAYER_UNIT_ISSUED_TARGET_ORDER)
    call TriggerAddCondition(Uq, Condition(pqw))
    call TriggerAddAction(Uq, eqw)
    set Iq = CreateTrigger()
    call TriggerRegisterAnyUnitEventBJ(Iq, EVENT_PLAYER_UNIT_ISSUED_TARGET_ORDER)
    call TriggerAddCondition(Iq, Condition(qqw))
    call TriggerAddAction(Iq, aqw)
    set Pq = CreateTrigger()
    call TriggerRegisterAnyUnitEventBJ(Pq, EVENT_PLAYER_UNIT_ISSUED_TARGET_ORDER)
    call TriggerAddCondition(Pq, Condition(nqw))
    call TriggerAddAction(Pq, dqw)
    set Aq = CreateTrigger()
    call TriggerRegisterAnyUnitEventBJ(Aq, EVENT_PLAYER_UNIT_ISSUED_TARGET_ORDER)
    call TriggerAddCondition(Aq, Condition(fqw))
    call TriggerAddAction(Aq, Rqw)
    set Dq = CreateTrigger()
    call TriggerRegisterAnyUnitEventBJ(Dq, EVENT_PLAYER_UNIT_ISSUED_TARGET_ORDER)
    call TriggerAddCondition(Dq, Condition(Tqw))
    call TriggerAddAction(Dq, Yqw)
    set Hq = CreateTrigger()
    call TriggerRegisterAnyUnitEventBJ(Hq, EVENT_PLAYER_UNIT_ISSUED_TARGET_ORDER)
    call TriggerAddCondition(Hq, Condition(Gqw))
    call TriggerAddAction(Hq, gqw)
    set Jq = CreateTrigger()
    call TriggerRegisterAnyUnitEventBJ(Jq, EVENT_PLAYER_UNIT_ISSUED_TARGET_ORDER)
    call TriggerAddCondition(Jq, Condition(hqw))
    call TriggerAddAction(Jq, Fqw)
    set Kq = CreateTrigger()
    call TriggerRegisterAnyUnitEventBJ(Kq, EVENT_PLAYER_UNIT_ISSUED_TARGET_ORDER)
    call TriggerAddCondition(Kq, Condition(kqw))
    call TriggerAddAction(Kq, jqw)
    set Lq = CreateTrigger()
    call TriggerRegisterAnyUnitEventBJ(Lq, EVENT_PLAYER_UNIT_DEATH)
    call TriggerAddCondition(Lq, Condition(xqw))
    call TriggerAddAction(Lq, vqw)
    set Xq = CreateTrigger()
    call TriggerRegisterAnyUnitEventBJ(Xq, EVENT_PLAYER_UNIT_ISSUED_TARGET_ORDER)
    call TriggerAddCondition(Xq, Condition(mqw))
    call TriggerAddAction(Xq, Qqw)
    set Cq = CreateTrigger()
    call TriggerRegisterAnyUnitEventBJ(Cq, EVENT_PLAYER_UNIT_ISSUED_TARGET_ORDER)
    call TriggerAddCondition(Cq, Condition(Wqw))
    call TriggerAddAction(Cq, Eqw)
    set Vq = CreateTrigger()
    call TriggerRegisterAnyUnitEventBJ(Vq, EVENT_PLAYER_UNIT_DEATH)
    call TriggerAddCondition(Vq, Condition(Zqw))
    call TriggerAddAction(Vq, Uqw)
    set Bq = CreateTrigger()
    call TriggerRegisterAnyUnitEventBJ(Bq, EVENT_PLAYER_UNIT_ISSUED_TARGET_ORDER)
    call TriggerAddCondition(Bq, Condition(Iqw))
    call TriggerAddAction(Bq, Pqw)
    set Nq = CreateTrigger()
    call TriggerRegisterAnyUnitEventBJ(Nq, EVENT_PLAYER_UNIT_ISSUED_TARGET_ORDER)
    call TriggerAddCondition(Nq, Condition(Aqw))
    call TriggerAddAction(Nq, Dqw)
    set Mq = CreateTrigger()
    call TriggerRegisterAnyUnitEventBJ(Mq, EVENT_PLAYER_UNIT_ISSUED_TARGET_ORDER)
    call TriggerAddAction(Mq, Hqw)
    set wa = CreateTrigger()
    call TriggerRegisterAnyUnitEventBJ(wa, EVENT_PLAYER_UNIT_ISSUED_TARGET_ORDER)
    call TriggerAddCondition(wa, Condition(Jqw))
    call TriggerAddAction(wa, Kqw)
    set ua = CreateTrigger()
    call TriggerRegisterAnyUnitEventBJ(ua, EVENT_PLAYER_UNIT_ISSUED_TARGET_ORDER)
    call TriggerAddCondition(ua, Condition(Lqw))
    call TriggerAddAction(ua, Xqw)
    set ra = CreateTrigger()
    call TriggerRegisterAnyUnitEventBJ(ra, EVENT_PLAYER_UNIT_DEATH)
    call TriggerAddCondition(ra, Condition(Cqw))
    call TriggerAddAction(ra, Vqw)
    set sa = CreateTrigger()
    call TriggerRegisterAnyUnitEventBJ(sa, EVENT_PLAYER_UNIT_ISSUED_TARGET_ORDER)
    call TriggerAddCondition(sa, Condition(Bqw))
    call TriggerAddAction(sa, Nqw)
    set ta = CreateTrigger()
    call TriggerRegisterAnyUnitEventBJ(ta, EVENT_PLAYER_UNIT_ISSUED_TARGET_ORDER)
    call TriggerAddCondition(ta, Condition(Mqw))
    call TriggerAddAction(ta, waw)
    set ia = CreateTrigger()
    call TriggerRegisterAnyUnitEventBJ(ia, EVENT_PLAYER_UNIT_ISSUED_TARGET_ORDER)
    call TriggerAddCondition(ia, Condition(uaw))
    call TriggerAddAction(ia, raw)
    set Sa = CreateTrigger()
    call TriggerRegisterAnyUnitEventBJ(Sa, EVENT_PLAYER_UNIT_DEATH)
    call TriggerAddCondition(Sa, Condition(saw))
    call TriggerAddAction(Sa, taw)
    set ca = CreateTrigger()
    call TriggerRegisterAnyUnitEventBJ(ca, EVENT_PLAYER_UNIT_ISSUED_TARGET_ORDER)
    call TriggerAddCondition(ca, Condition(iaw))
    call TriggerAddAction(ca, Saw)
    set oa = CreateTrigger()
    call TriggerRegisterAnyUnitEventBJ(oa, EVENT_PLAYER_UNIT_ISSUED_TARGET_ORDER)
    call TriggerAddCondition(oa, Condition(caw))
    call TriggerAddAction(oa, oaw)
    set Oa = CreateTrigger()
    call TriggerRegisterAnyUnitEventBJ(Oa, EVENT_PLAYER_UNIT_DEATH)
    call TriggerAddCondition(Oa, Condition(Oaw))
    call TriggerAddAction(Oa, law)
    set la = CreateTrigger()
    call TriggerRegisterAnyUnitEventBJ(la, EVENT_PLAYER_UNIT_ISSUED_TARGET_ORDER)
    call TriggerAddCondition(la, Condition(baw))
    call TriggerAddAction(la, yaw)
    set ba = CreateTrigger()
    call TriggerRegisterAnyUnitEventBJ(ba, EVENT_PLAYER_UNIT_ISSUED_TARGET_ORDER)
    call TriggerAddCondition(ba, Condition(paw))
    call TriggerAddAction(ba, eaw)
    set ya = CreateTrigger()
    call TriggerRegisterAnyUnitEventBJ(ya, EVENT_PLAYER_UNIT_ISSUED_TARGET_ORDER)
    call TriggerAddCondition(ya, Condition(qaw))
    call TriggerAddAction(ya, aaw)
    set pa = CreateTrigger()
    call TriggerRegisterAnyUnitEventBJ(pa, EVENT_PLAYER_UNIT_ISSUED_TARGET_ORDER)
    call TriggerAddCondition(pa, Condition(naw))
    call TriggerAddAction(pa, daw)
    set ea = CreateTrigger()
    call TriggerRegisterEnterRectSimple(ea, Ib)
    call TriggerAddCondition(ea, Condition(faw))
    call TriggerAddAction(ea, Raw)
    set qa = CreateTrigger()
    call TriggerRegisterAnyUnitEventBJ(qa, EVENT_PLAYER_UNIT_ISSUED_TARGET_ORDER)
    call TriggerAddCondition(qa, Condition(Taw))
    call TriggerAddAction(qa, Yaw)
    set aa = CreateTrigger()
    call TriggerRegisterAnyUnitEventBJ(aa, EVENT_PLAYER_UNIT_ISSUED_TARGET_ORDER)
    call TriggerAddCondition(aa, Condition(Gaw))
    call TriggerAddAction(aa, gaw)
    set na = CreateTrigger()
    call TriggerRegisterEnterRectSimple(na, ap)
    call TriggerAddCondition(na, Condition(haw))
    call TriggerAddAction(na, Faw)
    set da = CreateTrigger()
    call TriggerRegisterAnyUnitEventBJ(da, EVENT_PLAYER_UNIT_ISSUED_TARGET_ORDER)
    call TriggerAddCondition(da, Condition(kaw))
    call TriggerAddAction(da, jaw)
    set fa = CreateTrigger()
    call TriggerRegisterAnyUnitEventBJ(fa, EVENT_PLAYER_UNIT_ISSUED_TARGET_ORDER)
    call TriggerAddCondition(fa, Condition(xaw))
    call TriggerAddAction(fa, vaw)
    set Ra = CreateTrigger()
    call TriggerRegisterAnyUnitEventBJ(Ra, EVENT_PLAYER_UNIT_DEATH)
    call TriggerAddCondition(Ra, Condition(maw))
    call TriggerAddAction(Ra, Qaw)
    set Ta = CreateTrigger()
    call TriggerRegisterEnterRectSimple(Ta, Ib)
    call TriggerAddCondition(Ta, Condition(Waw))
    call TriggerAddAction(Ta, Eaw)
    set Ya = CreateTrigger()
    call TriggerRegisterEnterRectSimple(Ya, EO)
    call TriggerAddCondition(Ya, Condition(Zaw))
    call TriggerAddAction(Ya, Uaw)
    set Ga = CreateTrigger()
    call TriggerRegisterAnyUnitEventBJ(Ga, EVENT_PLAYER_UNIT_ISSUED_TARGET_ORDER)
    call TriggerAddCondition(Ga, Condition(Iaw))
    call TriggerAddAction(Ga, Paw)
    set ga = CreateTrigger()
    call TriggerRegisterAnyUnitEventBJ(ga, EVENT_PLAYER_UNIT_ISSUED_TARGET_ORDER)
    call TriggerAddCondition(ga, Condition(Aaw))
    call TriggerAddAction(ga, Daw)
    set ha = CreateTrigger()
    call TriggerRegisterAnyUnitEventBJ(ha, EVENT_PLAYER_UNIT_ISSUED_TARGET_ORDER)
    call TriggerAddCondition(ha, Condition(Haw))
    call TriggerAddAction(ha, Jaw)
    set Fa = CreateTrigger()
    call TriggerRegisterAnyUnitEventBJ(Fa, EVENT_PLAYER_UNIT_DEATH)
    call TriggerAddCondition(Fa, Condition(Kaw))
    call TriggerAddAction(Fa, Law)
    set ka = CreateTrigger()
    call TriggerRegisterAnyUnitEventBJ(ka, EVENT_PLAYER_UNIT_ISSUED_TARGET_ORDER)
    call TriggerAddCondition(ka, Condition(Xaw))
    call TriggerAddAction(ka, Caw)
    set ja = CreateTrigger()
    call TriggerRegisterAnyUnitEventBJ(ja, EVENT_PLAYER_UNIT_ISSUED_TARGET_ORDER)
    call TriggerAddCondition(ja, Condition(Vaw))
    call TriggerAddAction(ja, Baw)
    set xa = CreateTrigger()
    call TriggerRegisterAnyUnitEventBJ(xa, EVENT_PLAYER_UNIT_DEATH)
    call TriggerAddCondition(xa, Condition(Naw))
    call TriggerAddAction(xa, Maw)
    set va = CreateTrigger()
    call TriggerRegisterAnyUnitEventBJ(va, EVENT_PLAYER_UNIT_ISSUED_TARGET_ORDER)
    call TriggerAddCondition(va, Condition(wnw))
    call TriggerAddAction(va, unw)
    set ma = CreateTrigger()
    call TriggerRegisterAnyUnitEventBJ(ma, EVENT_PLAYER_UNIT_ISSUED_TARGET_ORDER)
    call TriggerAddCondition(ma, Condition(rnw))
    call TriggerAddAction(ma, snw)
    set Qa = CreateTrigger()
    call TriggerRegisterAnyUnitEventBJ(Qa, EVENT_PLAYER_UNIT_ISSUED_TARGET_ORDER)
    call TriggerAddCondition(Qa, Condition(tnw))
    call TriggerAddAction(Qa, inw)
    set Wa = CreateTrigger()
    call TriggerRegisterAnyUnitEventBJ(Wa, EVENT_PLAYER_UNIT_DEATH)
    call TriggerAddCondition(Wa, Condition(Snw))
    call TriggerAddAction(Wa, cnw)
    set Ea = CreateTrigger()
    call TriggerRegisterAnyUnitEventBJ(Ea, EVENT_PLAYER_UNIT_ISSUED_TARGET_ORDER)
    call TriggerAddCondition(Ea, Condition(onw))
    call TriggerAddAction(Ea, Onw)
    set Za = CreateTrigger()
    call TriggerRegisterAnyUnitEventBJ(Za, EVENT_PLAYER_UNIT_ISSUED_TARGET_ORDER)
    call TriggerAddCondition(Za, Condition(lnw))
    call TriggerAddAction(Za, bnw)
    set Ua = CreateTrigger()
    call TriggerRegisterAnyUnitEventBJ(Ua, EVENT_PLAYER_UNIT_DEATH)
    call TriggerAddCondition(Ua, Condition(ynw))
    call TriggerAddAction(Ua, pnw)
    set Ia = CreateTrigger()
    call TriggerRegisterAnyUnitEventBJ(Ia, EVENT_PLAYER_UNIT_ISSUED_TARGET_ORDER)
    call TriggerAddCondition(Ia, Condition(enw))
    call TriggerAddAction(Ia, qnw)
    set Pa = CreateTrigger()
    call TriggerRegisterAnyUnitEventBJ(Pa, EVENT_PLAYER_UNIT_ISSUED_TARGET_ORDER)
    call TriggerAddCondition(Pa, Condition(anw))
    call TriggerAddAction(Pa, nnw)
    set Aa = CreateTrigger()
    call TriggerRegisterAnyUnitEventBJ(Aa, EVENT_PLAYER_UNIT_ISSUED_TARGET_ORDER)
    call TriggerAddCondition(Aa, Condition(dnw))
    call TriggerAddAction(Aa, fnw)
    set Da = CreateTrigger()
    call TriggerRegisterAnyUnitEventBJ(Da, EVENT_PLAYER_UNIT_ISSUED_TARGET_ORDER)
    call TriggerAddCondition(Da, Condition(Rnw))
    call TriggerAddAction(Da, Tnw)
    set Ha = CreateTrigger()
    call TriggerRegisterAnyUnitEventBJ(Ha, EVENT_PLAYER_UNIT_ISSUED_TARGET_ORDER)
    call TriggerAddCondition(Ha, Condition(Ynw))
    call TriggerAddAction(Ha, Gnw)
    set Ja = CreateTrigger()
    call TriggerRegisterAnyUnitEventBJ(Ja, EVENT_PLAYER_UNIT_ISSUED_TARGET_ORDER)
    call TriggerAddCondition(Ja, Condition(gnw))
    call TriggerAddAction(Ja, hnw)
    set Ka = CreateTrigger()
    call TriggerRegisterAnyUnitEventBJ(Ka, EVENT_PLAYER_UNIT_ISSUED_TARGET_ORDER)
    call TriggerAddCondition(Ka, Condition(Fnw))
    call TriggerAddAction(Ka, knw)
    set La = CreateTrigger()
    call TriggerRegisterAnyUnitEventBJ(La, EVENT_PLAYER_UNIT_ISSUED_TARGET_ORDER)
    call TriggerAddCondition(La, Condition(jnw))
    call TriggerAddAction(La, xnw)
    set Xa = CreateTrigger()
    call TriggerRegisterAnyUnitEventBJ(Xa, EVENT_PLAYER_UNIT_ISSUED_TARGET_ORDER)
    call TriggerAddCondition(Xa, Condition(vnw))
    call TriggerAddAction(Xa, mnw)
    set Ca = CreateTrigger()
    call TriggerRegisterAnyUnitEventBJ(Ca, EVENT_PLAYER_UNIT_ISSUED_TARGET_ORDER)
    call TriggerAddCondition(Ca, Condition(Qnw))
    call TriggerAddAction(Ca, Wnw)
    set Va = CreateTrigger()
    call TriggerRegisterAnyUnitEventBJ(Va, EVENT_PLAYER_UNIT_ISSUED_TARGET_ORDER)
    call TriggerAddCondition(Va, Condition(Enw))
    call TriggerAddAction(Va, Znw)
    set Ba = CreateTrigger()
    call TriggerRegisterAnyUnitEventBJ(Ba, EVENT_PLAYER_UNIT_ISSUED_TARGET_ORDER)
    call TriggerAddCondition(Ba, Condition(Unw))
    call TriggerAddAction(Ba, Inw)
    set Na = CreateTrigger()
    call TriggerRegisterAnyUnitEventBJ(Na, EVENT_PLAYER_UNIT_ISSUED_TARGET_ORDER)
    call TriggerAddCondition(Na, Condition(Pnw))
    call TriggerAddAction(Na, Anw)
    set Ma = CreateTrigger()
    call TriggerRegisterAnyUnitEventBJ(Ma, EVENT_PLAYER_UNIT_ISSUED_TARGET_ORDER)
    call TriggerAddCondition(Ma, Condition(Dnw))
    call TriggerAddAction(Ma, Hnw)
    set wn = CreateTrigger()
    call TriggerRegisterEnterRectSimple(wn, Ib)
    call TriggerAddCondition(wn, Condition(Jnw))
    call TriggerAddAction(wn, Knw)
    set un = CreateTrigger()
    call TriggerRegisterEnterRectSimple(un, ap)
    call TriggerAddCondition(un, Condition(Lnw))
    call TriggerAddAction(un, Xnw)
    set rn = CreateTrigger()
    call TriggerRegisterEnterRectSimple(rn, Yp)
    call TriggerAddCondition(rn, Condition(Cnw))
    call TriggerAddAction(rn, Vnw)
    set sn = CreateTrigger()
    call TriggerRegisterEnterRectSimple(sn, EO)
    call TriggerAddCondition(sn, Condition(Bnw))
    call TriggerAddAction(sn, Nnw)
    set tn = CreateTrigger()
    call TriggerRegisterAnyUnitEventBJ(tn, EVENT_PLAYER_UNIT_ISSUED_TARGET_ORDER)
    call TriggerAddCondition(tn, Condition(Mnw))
    call TriggerAddAction(tn, wdw)
    set Sn = CreateTrigger()
    call TriggerRegisterAnyUnitEventBJ(Sn, EVENT_PLAYER_UNIT_ISSUED_TARGET_ORDER)
    call TriggerAddCondition(Sn, Condition(udw))
    call TriggerAddAction(Sn, rdw)
    set cn = CreateTrigger()
    call TriggerRegisterAnyUnitEventBJ(cn, EVENT_PLAYER_UNIT_DEATH)
    call TriggerAddCondition(cn, Condition(sdw))
    call TriggerAddAction(cn, tdw)
    set on = CreateTrigger()
    call TriggerRegisterAnyUnitEventBJ(on, EVENT_PLAYER_UNIT_ISSUED_TARGET_ORDER)
    call TriggerAddCondition(on, Condition(idw))
    call TriggerAddAction(on, Sdw)
    set On = CreateTrigger()
    call TriggerRegisterAnyUnitEventBJ(On, EVENT_PLAYER_UNIT_ISSUED_TARGET_ORDER)
    call TriggerAddCondition(On, Condition(cdw))
    call TriggerAddAction(On, odw)
    set ln = CreateTrigger()
    call TriggerRegisterAnyUnitEventBJ(ln, EVENT_PLAYER_UNIT_DEATH)
    call TriggerAddCondition(ln, Condition(Odw))
    call TriggerAddAction(ln, ldw)
    set bn = CreateTrigger()
    call TriggerRegisterAnyUnitEventBJ(bn, EVENT_PLAYER_UNIT_ISSUED_TARGET_ORDER)
    call TriggerAddCondition(bn, Condition(bdw))
    call TriggerAddAction(bn, ydw)
    set yn = CreateTrigger()
    call TriggerRegisterAnyUnitEventBJ(yn, EVENT_PLAYER_UNIT_ISSUED_TARGET_ORDER)
    call TriggerAddCondition(yn, Condition(pdw))
    call TriggerAddAction(yn, edw)
    set pn = CreateTrigger()
    call TriggerRegisterAnyUnitEventBJ(pn, EVENT_PLAYER_UNIT_ISSUED_TARGET_ORDER)
    call TriggerAddCondition(pn, Condition(qdw))
    call TriggerAddAction(pn, adw)
    set en = CreateTrigger()
    call TriggerRegisterAnyUnitEventBJ(en, EVENT_PLAYER_UNIT_ISSUED_TARGET_ORDER)
    call TriggerAddCondition(en, Condition(ndw))
    call TriggerAddAction(en, ddw)
    set qn = CreateTrigger()
    call TriggerRegisterAnyUnitEventBJ(qn, EVENT_PLAYER_UNIT_ISSUED_TARGET_ORDER)
    call TriggerAddCondition(qn, Condition(fdw))
    call TriggerAddAction(qn, Rdw)
    set an = CreateTrigger()
    call TriggerRegisterAnyUnitEventBJ(an, EVENT_PLAYER_UNIT_ISSUED_TARGET_ORDER)
    call TriggerAddCondition(an, Condition(Tdw))
    call TriggerAddAction(an, Ydw)
    set nn = CreateTrigger()
    call TriggerRegisterAnyUnitEventBJ(nn, EVENT_PLAYER_UNIT_DEATH)
    call TriggerAddCondition(nn, Condition(Gdw))
    call TriggerAddAction(nn, gdw)
    set dn = CreateTrigger()
    call TriggerRegisterAnyUnitEventBJ(dn, EVENT_PLAYER_UNIT_ISSUED_TARGET_ORDER)
    call TriggerAddCondition(dn, Condition(hdw))
    call TriggerAddAction(dn, Fdw)
    set fn = CreateTrigger()
    call TriggerRegisterAnyUnitEventBJ(fn, EVENT_PLAYER_UNIT_ISSUED_TARGET_ORDER)
    call TriggerAddCondition(fn, Condition(kdw))
    call TriggerAddAction(fn, jdw)
    set Rn = CreateTrigger()
    call TriggerRegisterAnyUnitEventBJ(Rn, EVENT_PLAYER_UNIT_DEATH)
    call TriggerAddCondition(Rn, Condition(xdw))
    call TriggerAddAction(Rn, vdw)
    set Tn = CreateTrigger()
    call TriggerRegisterAnyUnitEventBJ(Tn, EVENT_PLAYER_UNIT_ISSUED_TARGET_ORDER)
    call TriggerAddCondition(Tn, Condition(mdw))
    call TriggerAddAction(Tn, Qdw)
    set Yn = CreateTrigger()
    call TriggerRegisterAnyUnitEventBJ(Yn, EVENT_PLAYER_UNIT_ISSUED_TARGET_ORDER)
    call TriggerAddCondition(Yn, Condition(Wdw))
    call TriggerAddAction(Yn, Edw)
    set Gn = CreateTrigger()
    call TriggerRegisterAnyUnitEventBJ(Gn, EVENT_PLAYER_UNIT_DEATH)
    call TriggerAddCondition(Gn, Condition(Zdw))
    call TriggerAddAction(Gn, Udw)
    set gn = CreateTrigger()
    call TriggerRegisterAnyUnitEventBJ(gn, EVENT_PLAYER_UNIT_ISSUED_TARGET_ORDER)
    call TriggerAddCondition(gn, Condition(Idw))
    call TriggerAddAction(gn, Pdw)
    set hn = CreateTrigger()
    call TriggerRegisterAnyUnitEventBJ(hn, EVENT_PLAYER_UNIT_ISSUED_TARGET_ORDER)
    call TriggerAddCondition(hn, Condition(Adw))
    call TriggerAddAction(hn, Ddw)
    set Fn = CreateTrigger()
    call TriggerRegisterAnyUnitEventBJ(Fn, EVENT_PLAYER_UNIT_DEATH)
    call TriggerAddCondition(Fn, Condition(Hdw))
    call TriggerAddAction(Fn, Jdw)
    set kn = CreateTrigger()
    call TriggerRegisterAnyUnitEventBJ(kn, EVENT_PLAYER_UNIT_ISSUED_TARGET_ORDER)
    call TriggerAddCondition(kn, Condition(Kdw))
    call TriggerAddAction(kn, Ldw)
    set jn = CreateTrigger()
    call TriggerRegisterAnyUnitEventBJ(jn, EVENT_PLAYER_UNIT_ISSUED_TARGET_ORDER)
    call TriggerAddCondition(jn, Condition(Xdw))
    call TriggerAddAction(jn, Cdw)
    set xn = CreateTrigger()
    call TriggerRegisterAnyUnitEventBJ(xn, EVENT_PLAYER_UNIT_ISSUED_TARGET_ORDER)
    call TriggerAddCondition(xn, Condition(Vdw))
    call TriggerAddAction(xn, Bdw)
    set vn = CreateTrigger()
    call TriggerRegisterAnyUnitEventBJ(vn, EVENT_PLAYER_UNIT_ISSUED_TARGET_ORDER)
    call TriggerAddCondition(vn, Condition(Ndw))
    call TriggerAddAction(vn, Mdw)
    set mn = CreateTrigger()
    call TriggerRegisterAnyUnitEventBJ(mn, EVENT_PLAYER_UNIT_DEATH)
    call TriggerAddCondition(mn, Condition(wfw))
    call TriggerAddAction(mn, ufw)
    set Qn = CreateTrigger()
    call TriggerRegisterAnyUnitEventBJ(Qn, EVENT_PLAYER_UNIT_ISSUED_TARGET_ORDER)
    call TriggerAddCondition(Qn, Condition(rfw))
    call TriggerAddAction(Qn, sfw)
    set Wn = CreateTrigger()
    call TriggerRegisterAnyUnitEventBJ(Wn, EVENT_PLAYER_UNIT_ISSUED_TARGET_ORDER)
    call TriggerAddCondition(Wn, Condition(tfw))
    call TriggerAddAction(Wn, ifw)
    set En = CreateTrigger()
    call TriggerRegisterAnyUnitEventBJ(En, EVENT_PLAYER_UNIT_DEATH)
    call TriggerAddCondition(En, Condition(Sfw))
    call TriggerAddAction(En, cfw)
    set Zn = CreateTrigger()
    call TriggerRegisterAnyUnitEventBJ(Zn, EVENT_PLAYER_UNIT_ISSUED_TARGET_ORDER)
    call TriggerAddCondition(Zn, Condition(ofw))
    call TriggerAddAction(Zn, Ofw)
    set Un = CreateTrigger()
    call TriggerRegisterAnyUnitEventBJ(Un, EVENT_PLAYER_UNIT_ISSUED_TARGET_ORDER)
    call TriggerAddCondition(Un, Condition(lfw))
    call TriggerAddAction(Un, bfw)
    set In = CreateTrigger()
    call TriggerRegisterAnyUnitEventBJ(In, EVENT_PLAYER_UNIT_DEATH)
    call TriggerAddCondition(In, Condition(yfw))
    call TriggerAddAction(In, pfw)
    set Pn = CreateTrigger()
    call TriggerRegisterAnyUnitEventBJ(Pn, EVENT_PLAYER_UNIT_ISSUED_TARGET_ORDER)
    call TriggerAddCondition(Pn, Condition(efw))
    call TriggerAddAction(Pn, qfw)
    set An = CreateTrigger()
    call TriggerRegisterEnterRectSimple(An, Rb)
    call TriggerAddAction(An, afw)
    set Dn = CreateTrigger()
    call TriggerRegisterEnterRectSimple(Dn, Tb)
    call TriggerAddAction(Dn, nfw)
    set Hn = CreateTrigger()
    call TriggerRegisterEnterRectSimple(Hn, Yb)
    call TriggerAddAction(Hn, dfw)
    set Jn = CreateTrigger()
    call TriggerRegisterEnterRectSimple(Jn, Ub)
    call TriggerAddAction(Jn, ffw)
    set Kn = CreateTrigger()
    call TriggerRegisterEnterRectSimple(Kn, sl)
    call TriggerAddCondition(Kn, Condition(Rfw))
    call TriggerAddAction(Kn, Tfw)
    set Ln = CreateTrigger()
    call TriggerRegisterEnterRectSimple(Ln, ub)
    call TriggerAddCondition(Ln, Condition(Yfw))
    call TriggerAddAction(Ln, Gfw)
    set Xn = CreateTrigger()
    call TriggerRegisterEnterRectSimple(Xn, Qy)
    call TriggerAddCondition(Xn, Condition(gfw))
    call TriggerAddAction(Xn, hfw)
    set Cn = CreateTrigger()
    call TriggerRegisterEnterRectSimple(Cn, Ey)
    call TriggerAddCondition(Cn, Condition(Ffw))
    call TriggerAddAction(Cn, kfw)
    set Vn = CreateTrigger()
    call TriggerRegisterEnterRectSimple(Vn, np)
    call TriggerAddCondition(Vn, Condition(jfw))
    call TriggerAddAction(Vn, xfw)
    set Bn = CreateTrigger()
    call TriggerRegisterEnterRectSimple(Bn, fp)
    call TriggerAddCondition(Bn, Condition(vfw))
    call TriggerAddAction(Bn, mfw)
    set Nn = CreateTrigger()
    call TriggerRegisterEnterRectSimple(Nn, Wp)
    call TriggerAddCondition(Nn, Condition(Qfw))
    call TriggerAddAction(Nn, Wfw)
    set Mn = CreateTrigger()
    call TriggerRegisterEnterRectSimple(Mn, Zp)
    call TriggerAddCondition(Mn, Condition(Efw))
    call TriggerAddAction(Mn, Zfw)
    set wd = CreateTrigger()
    call TriggerRegisterEnterRectSimple(wd, Jy)
    call TriggerRegisterEnterRectSimple(wd, Ly)
    call TriggerRegisterEnterRectSimple(wd, Ky)
    call TriggerAddCondition(wd, Condition(Ufw))
    call TriggerAddAction(wd, Ifw)
    set ud = CreateTrigger()
    call TriggerRegisterEnterRectSimple(ud, Xy)
    call TriggerRegisterLeaveRectSimple(ud, Jy)
    call TriggerRegisterLeaveRectSimple(ud, Ky)
    call TriggerAddCondition(ud, Condition(Pfw))
    call TriggerAddAction(ud, Afw)
    set rd = CreateTrigger()
    call TriggerRegisterEnterRectSimple(rd, Gb)
    call TriggerAddCondition(rd, Condition(Dfw))
    call TriggerAddAction(rd, Hfw)
    set sd = CreateTrigger()
    call TriggerRegisterEnterRectSimple(sd, gb)
    call TriggerAddCondition(sd, Condition(Jfw))
    call TriggerAddAction(sd, Kfw)
    set td = CreateTrigger()
    call TriggerRegisterAnyUnitEventBJ(td, EVENT_PLAYER_UNIT_PICKUP_ITEM)
    call TriggerAddCondition(td, Condition(Lfw))
    call TriggerAddAction(td, Xfw)
    set id = CreateTrigger()
    call TriggerRegisterAnyUnitEventBJ(id, EVENT_PLAYER_UNIT_DEATH)
    call TriggerAddCondition(id, Condition(Cfw))
    call TriggerAddAction(id, Vfw)
    set Sd = CreateTrigger()
    call TriggerRegisterAnyUnitEventBJ(Sd, EVENT_PLAYER_UNIT_ISSUED_TARGET_ORDER)
    call TriggerAddCondition(Sd, Condition(Bfw))
    call TriggerAddAction(Sd, Nfw)
    set cd = CreateTrigger()
    call TriggerRegisterAnyUnitEventBJ(cd, EVENT_PLAYER_UNIT_PICKUP_ITEM)
    call TriggerAddCondition(cd, Condition(Mfw))
    call TriggerAddAction(cd, wRw)
    set od = CreateTrigger()
    call TriggerRegisterAnyUnitEventBJ(od, EVENT_PLAYER_UNIT_DEATH)
    call TriggerAddCondition(od, Condition(uRw))
    call TriggerAddAction(od, rRw)
    set Od = CreateTrigger()
    call TriggerRegisterAnyUnitEventBJ(Od, EVENT_PLAYER_UNIT_ISSUED_TARGET_ORDER)
    call TriggerAddCondition(Od, Condition(sRw))
    call TriggerAddAction(Od, tRw)
    set ld = CreateTrigger()
    call TriggerRegisterAnyUnitEventBJ(ld, EVENT_PLAYER_UNIT_PICKUP_ITEM)
    call TriggerAddCondition(ld, Condition(iRw))
    call TriggerAddAction(ld, SRw)
    set bd = CreateTrigger()
    call TriggerRegisterAnyUnitEventBJ(bd, EVENT_PLAYER_UNIT_DEATH)
    call TriggerAddCondition(bd, Condition(cRw))
    call TriggerAddAction(bd, oRw)
    set yd = CreateTrigger()
    call TriggerRegisterAnyUnitEventBJ(yd, EVENT_PLAYER_UNIT_ISSUED_TARGET_ORDER)
    call TriggerAddCondition(yd, Condition(ORw))
    call TriggerAddAction(yd, lRw)
    set pd = CreateTrigger()
    call TriggerRegisterAnyUnitEventBJ(pd, EVENT_PLAYER_UNIT_PICKUP_ITEM)
    call TriggerAddCondition(pd, Condition(bRw))
    call TriggerAddAction(pd, yRw)
    set ed = CreateTrigger()
    call TriggerRegisterAnyUnitEventBJ(ed, EVENT_PLAYER_UNIT_DEATH)
    call TriggerAddCondition(ed, Condition(pRw))
    call TriggerAddAction(ed, eRw)
    set qd = CreateTrigger()
    call TriggerRegisterAnyUnitEventBJ(qd, EVENT_PLAYER_UNIT_ISSUED_TARGET_ORDER)
    call TriggerAddCondition(qd, Condition(qRw))
    call TriggerAddAction(qd, aRw)
    set ad = CreateTrigger()
    call TriggerRegisterAnyUnitEventBJ(ad, EVENT_PLAYER_UNIT_PICKUP_ITEM)
    call TriggerAddCondition(ad, Condition(nRw))
    call TriggerAddAction(ad, dRw)
    set nd = CreateTrigger()
    call TriggerRegisterAnyUnitEventBJ(nd, EVENT_PLAYER_UNIT_DEATH)
    call TriggerAddCondition(nd, Condition(fRw))
    call TriggerAddAction(nd, RRw)
    set dd = CreateTrigger()
    call TriggerRegisterAnyUnitEventBJ(dd, EVENT_PLAYER_UNIT_ISSUED_TARGET_ORDER)
    call TriggerAddCondition(dd, Condition(TRw))
    call TriggerAddAction(dd, YRw)
    set fd = CreateTrigger()
    call TriggerRegisterAnyUnitEventBJ(fd, EVENT_PLAYER_UNIT_PICKUP_ITEM)
    call TriggerAddCondition(fd, Condition(GRw))
    call TriggerAddAction(fd, gRw)
    set Rd = CreateTrigger()
    call TriggerRegisterAnyUnitEventBJ(Rd, EVENT_PLAYER_UNIT_DEATH)
    call TriggerAddCondition(Rd, Condition(hRw))
    call TriggerAddAction(Rd, FRw)
    set Td = CreateTrigger()
    call TriggerRegisterAnyUnitEventBJ(Td, EVENT_PLAYER_UNIT_ISSUED_TARGET_ORDER)
    call TriggerAddCondition(Td, Condition(kRw))
    call TriggerAddAction(Td, jRw)
    set Yd = CreateTrigger()
    call TriggerRegisterAnyUnitEventBJ(Yd, EVENT_PLAYER_UNIT_PICKUP_ITEM)
    call TriggerAddCondition(Yd, Condition(xRw))
    call TriggerAddAction(Yd, vRw)
    set Gd = CreateTrigger()
    call TriggerRegisterAnyUnitEventBJ(Gd, EVENT_PLAYER_UNIT_DEATH)
    call TriggerAddCondition(Gd, Condition(mRw))
    call TriggerAddAction(Gd, QRw)
    set gd = CreateTrigger()
    call TriggerRegisterAnyUnitEventBJ(gd, EVENT_PLAYER_UNIT_ISSUED_TARGET_ORDER)
    call TriggerAddCondition(gd, Condition(WRw))
    call TriggerAddAction(gd, ERw)
    set hd = CreateTrigger()
    call TriggerRegisterAnyUnitEventBJ(hd, EVENT_PLAYER_UNIT_PICKUP_ITEM)
    call TriggerAddCondition(hd, Condition(ZRw))
    call TriggerAddAction(hd, URw)
    set Fd = CreateTrigger()
    call TriggerRegisterAnyUnitEventBJ(Fd, EVENT_PLAYER_UNIT_DEATH)
    call TriggerAddCondition(Fd, Condition(IRw))
    call TriggerAddAction(Fd, PRw)
    set kd = CreateTrigger()
    call TriggerRegisterAnyUnitEventBJ(kd, EVENT_PLAYER_UNIT_ISSUED_TARGET_ORDER)
    call TriggerAddCondition(kd, Condition(ARw))
    call TriggerAddAction(kd, DRw)
    set jd = CreateTrigger()
    call TriggerRegisterAnyUnitEventBJ(jd, EVENT_PLAYER_UNIT_PICKUP_ITEM)
    call TriggerAddCondition(jd, Condition(HRw))
    call TriggerAddAction(jd, JRw)
    set xd = CreateTrigger()
    call TriggerRegisterAnyUnitEventBJ(xd, EVENT_PLAYER_UNIT_DEATH)
    call TriggerAddCondition(xd, Condition(KRw))
    call TriggerAddAction(xd, LRw)
    set vd = CreateTrigger()
    call TriggerRegisterAnyUnitEventBJ(vd, EVENT_PLAYER_UNIT_ISSUED_TARGET_ORDER)
    call TriggerAddCondition(vd, Condition(XRw))
    call TriggerAddAction(vd, CRw)
    set md = CreateTrigger()
    call TriggerRegisterAnyUnitEventBJ(md, EVENT_PLAYER_UNIT_PICKUP_ITEM)
    call TriggerAddCondition(md, Condition(VRw))
    call TriggerAddAction(md, BRw)
    set Qd = CreateTrigger()
    call TriggerRegisterAnyUnitEventBJ(Qd, EVENT_PLAYER_UNIT_DEATH)
    call TriggerAddCondition(Qd, Condition(NRw))
    call TriggerAddAction(Qd, MRw)
    set Wd = CreateTrigger()
    call TriggerRegisterAnyUnitEventBJ(Wd, EVENT_PLAYER_UNIT_ISSUED_TARGET_ORDER)
    call TriggerAddCondition(Wd, Condition(wTw))
    call TriggerAddAction(Wd, uTw)
    set Ed = CreateTrigger()
    call TriggerRegisterAnyUnitEventBJ(Ed, EVENT_PLAYER_UNIT_PICKUP_ITEM)
    call TriggerAddCondition(Ed, Condition(rTw))
    call TriggerAddAction(Ed, sTw)
    set Zd = CreateTrigger()
    call TriggerRegisterAnyUnitEventBJ(Zd, EVENT_PLAYER_UNIT_ISSUED_TARGET_ORDER)
    call TriggerAddCondition(Zd, Condition(tTw))
    call TriggerAddAction(Zd, iTw)
    set Ud = CreateTrigger()
    call TriggerRegisterAnyUnitEventBJ(Ud, EVENT_PLAYER_UNIT_PICKUP_ITEM)
    call TriggerAddCondition(Ud, Condition(STw))
    call TriggerAddAction(Ud, cTw)
    set Id = CreateTrigger()
    call TriggerRegisterAnyUnitEventBJ(Id, EVENT_PLAYER_UNIT_DEATH)
    call TriggerAddCondition(Id, Condition(oTw))
    call TriggerAddAction(Id, OTw)
    set Pd = CreateTrigger()
    call TriggerRegisterAnyUnitEventBJ(Pd, EVENT_PLAYER_UNIT_ISSUED_TARGET_ORDER)
    call TriggerAddCondition(Pd, Condition(lTw))
    call TriggerAddAction(Pd, bTw)
    set Ad = CreateTrigger()
    call TriggerRegisterAnyUnitEventBJ(Ad, EVENT_PLAYER_UNIT_PICKUP_ITEM)
    call TriggerAddCondition(Ad, Condition(yTw))
    call TriggerAddAction(Ad, pTw)
    set Dd = CreateTrigger()
    call TriggerRegisterAnyUnitEventBJ(Dd, EVENT_PLAYER_UNIT_DEATH)
    call TriggerAddCondition(Dd, Condition(eTw))
    call TriggerAddAction(Dd, qTw)
    set Hd = CreateTrigger()
    call TriggerRegisterAnyUnitEventBJ(Hd, EVENT_PLAYER_UNIT_ISSUED_TARGET_ORDER)
    call TriggerAddCondition(Hd, Condition(aTw))
    call TriggerAddAction(Hd, nTw)
    set Jd = CreateTrigger()
    call TriggerRegisterAnyUnitEventBJ(Jd, EVENT_PLAYER_UNIT_PICKUP_ITEM)
    call TriggerAddCondition(Jd, Condition(dTw))
    call TriggerAddAction(Jd, fTw)
    set Kd = CreateTrigger()
    call TriggerRegisterAnyUnitEventBJ(Kd, EVENT_PLAYER_UNIT_ISSUED_TARGET_ORDER)
    call TriggerAddCondition(Kd, Condition(RTw))
    call TriggerAddAction(Kd, TTw)
    set Ld = CreateTrigger()
    call TriggerRegisterAnyUnitEventBJ(Ld, EVENT_PLAYER_UNIT_ISSUED_TARGET_ORDER)
    call TriggerAddCondition(Ld, Condition(YTw))
    call TriggerAddAction(Ld, GTw)
    set Xd = CreateTrigger()
    call TriggerRegisterAnyUnitEventBJ(Xd, EVENT_PLAYER_UNIT_ISSUED_TARGET_ORDER)
    call TriggerAddCondition(Xd, Condition(gTw))
    call TriggerAddAction(Xd, hTw)
    set Cd = CreateTrigger()
    call TriggerRegisterAnyUnitEventBJ(Cd, EVENT_PLAYER_UNIT_PICKUP_ITEM)
    call TriggerAddCondition(Cd, Condition(FTw))
    call TriggerAddAction(Cd, kTw)
    set Vd = CreateTrigger()
    call TriggerRegisterEnterRectSimple(Vd, Vl)
    call TriggerAddCondition(Vd, Condition(jTw))
    call TriggerAddAction(Vd, xTw)
    set Bd = CreateTrigger()
    call TriggerRegisterAnyUnitEventBJ(Bd, EVENT_PLAYER_UNIT_ISSUED_TARGET_ORDER)
    call TriggerAddCondition(Bd, Condition(vTw))
    call TriggerAddAction(Bd, mTw)
    set Nd = CreateTrigger()
    call TriggerRegisterAnyUnitEventBJ(Nd, EVENT_PLAYER_UNIT_PICKUP_ITEM)
    call TriggerAddCondition(Nd, Condition(QTw))
    call TriggerAddAction(Nd, WTw)
    set Md = CreateTrigger()
    call TriggerRegisterAnyUnitEventBJ(Md, EVENT_PLAYER_UNIT_ISSUED_TARGET_ORDER)
    call TriggerAddCondition(Md, Condition(ETw))
    call TriggerAddAction(Md, ZTw)
    set wf = CreateTrigger()
    call TriggerRegisterAnyUnitEventBJ(wf, EVENT_PLAYER_UNIT_PICKUP_ITEM)
    call TriggerAddCondition(wf, Condition(UTw))
    call TriggerAddAction(wf, ITw)
    set uf = CreateTrigger()
    call TriggerRegisterAnyUnitEventBJ(uf, EVENT_PLAYER_UNIT_DEATH)
    call TriggerAddCondition(uf, Condition(PTw))
    call TriggerAddAction(uf, ATw)
    set rf = CreateTrigger()
    call TriggerRegisterAnyUnitEventBJ(rf, EVENT_PLAYER_UNIT_ISSUED_TARGET_ORDER)
    call TriggerAddCondition(rf, Condition(DTw))
    call TriggerAddAction(rf, HTw)
    set sf = CreateTrigger()
    call TriggerRegisterAnyUnitEventBJ(sf, EVENT_PLAYER_UNIT_PICKUP_ITEM)
    call TriggerAddCondition(sf, Condition(JTw))
    call TriggerAddAction(sf, KTw)
    set tf = CreateTrigger()
    call TriggerRegisterAnyUnitEventBJ(tf, EVENT_PLAYER_UNIT_ISSUED_TARGET_ORDER)
    call TriggerAddCondition(tf, Condition(LTw))
    call TriggerAddAction(tf, XTw)
    set Sf = CreateTrigger()
    call TriggerRegisterAnyUnitEventBJ(Sf, EVENT_PLAYER_UNIT_ISSUED_TARGET_ORDER)
    call TriggerAddCondition(Sf, Condition(CTw))
    call TriggerAddAction(Sf, VTw)
    set cf = CreateTrigger()
    call TriggerRegisterAnyUnitEventBJ(cf, EVENT_PLAYER_UNIT_ISSUED_TARGET_ORDER)
    call TriggerAddCondition(cf, Condition(BTw))
    call TriggerAddAction(cf, NTw)
    set of = CreateTrigger()
    call TriggerRegisterAnyUnitEventBJ(of, EVENT_PLAYER_UNIT_DEATH)
    call TriggerAddCondition(of, Condition(MTw))
    call TriggerAddAction(of, wYw)
    set Of = CreateTrigger()
    call TriggerRegisterAnyUnitEventBJ(Of, EVENT_PLAYER_UNIT_ISSUED_TARGET_ORDER)
    call TriggerAddCondition(Of, Condition(uYw))
    set lf = CreateTrigger()
    call TriggerRegisterAnyUnitEventBJ(lf, EVENT_PLAYER_UNIT_PICKUP_ITEM)
    call TriggerAddCondition(lf, Condition(rYw))
    call TriggerAddAction(lf, sYw)
    set bf = CreateTrigger()
    call TriggerRegisterAnyUnitEventBJ(bf, EVENT_PLAYER_UNIT_DEATH)
    call TriggerAddCondition(bf, Condition(tYw))
    call TriggerAddAction(bf, iYw)
    set yf = CreateTrigger()
    call TriggerRegisterAnyUnitEventBJ(yf, EVENT_PLAYER_UNIT_ISSUED_TARGET_ORDER)
    call TriggerAddCondition(yf, Condition(SYw))
    set pf = CreateTrigger()
    call TriggerRegisterAnyUnitEventBJ(pf, EVENT_PLAYER_UNIT_PICKUP_ITEM)
    call TriggerAddCondition(pf, Condition(cYw))
    call TriggerAddAction(pf, oYw)
    set ef = CreateTrigger()
    call TriggerRegisterAnyUnitEventBJ(ef, EVENT_PLAYER_UNIT_PICKUP_ITEM)
    call TriggerAddCondition(ef, Condition(OYw))
    call TriggerAddAction(ef, lYw)
    set qf = CreateTrigger()
    call TriggerRegisterAnyUnitEventBJ(qf, EVENT_PLAYER_UNIT_PICKUP_ITEM)
    call TriggerAddCondition(qf, Condition(bYw))
    call TriggerAddAction(qf, yYw)
    set af = CreateTrigger()
    call TriggerRegisterAnyUnitEventBJ(af, EVENT_PLAYER_UNIT_DEATH)
    call TriggerAddCondition(af, Condition(pYw))
    call TriggerAddAction(af, eYw)
    set nf = CreateTrigger()
    call TriggerRegisterAnyUnitEventBJ(nf, EVENT_PLAYER_UNIT_DEATH)
    call TriggerAddCondition(nf, Condition(qYw))
    call TriggerAddAction(nf, aYw)
    set df = CreateTrigger()
    call TriggerRegisterAnyUnitEventBJ(df, EVENT_PLAYER_UNIT_DEATH)
    call TriggerAddCondition(df, Condition(nYw))
    call TriggerAddAction(df, dYw)
    set ff = CreateTrigger()
    call TriggerRegisterAnyUnitEventBJ(ff, EVENT_PLAYER_UNIT_ISSUED_TARGET_ORDER)
    call TriggerAddCondition(ff, Condition(fYw))
    set Rf = CreateTrigger()
    call TriggerRegisterAnyUnitEventBJ(Rf, EVENT_PLAYER_UNIT_ISSUED_TARGET_ORDER)
    call TriggerAddCondition(Rf, Condition(RYw))
    set Tf = CreateTrigger()
    call TriggerRegisterAnyUnitEventBJ(Tf, EVENT_PLAYER_UNIT_ISSUED_TARGET_ORDER)
    call TriggerAddCondition(Tf, Condition(TYw))
    set Yf = CreateTrigger()
    call TriggerAddAction(Yf, YYw)
    set Gf = CreateTrigger()
    call TriggerRegisterAnyUnitEventBJ(Gf, EVENT_PLAYER_UNIT_DEATH)
    call TriggerAddCondition(Gf, Condition(GYw))
    call TriggerAddAction(Gf, gYw)
    set gf = CreateTrigger()
    call TriggerRegisterEnterRectSimple(gf, bj_mapInitialPlayableArea)
    call TriggerAddAction(gf, hYw)
    set Wf = CreateTrigger()
    call TriggerAddAction(Wf, FYw)
    set Zf = CreateTrigger()
    call DisableTrigger(Zf)
    call TriggerRegisterTimerExpireEvent(Zf, RO[$00000001])
    call TriggerAddAction(Zf, kYw)
    set Uf = CreateTrigger()
    call DisableTrigger(Uf)
    call TriggerRegisterTimerExpireEvent(Uf, RO[$00000002])
    call TriggerAddAction(Uf, jYw)
    set If = CreateTrigger()
    call DisableTrigger(If)
    call TriggerRegisterTimerExpireEvent(If, RO[$00000003])
    call TriggerAddAction(If, xYw)
    set Pf = CreateTrigger()
    call DisableTrigger(Pf)
    call TriggerRegisterTimerExpireEvent(Pf, RO[$00000004])
    call TriggerAddAction(Pf, vYw)
    set Af = CreateTrigger()
    call DisableTrigger(Af)
    call TriggerRegisterTimerExpireEvent(Af, RO[$00000005])
    call TriggerAddAction(Af, mYw)
    set Df = CreateTrigger()
    call DisableTrigger(Df)
    call TriggerRegisterTimerExpireEvent(Df, RO[$00000006])
    call TriggerAddAction(Df, QYw)
    set Hf = CreateTrigger()
    call DisableTrigger(Hf)
    call TriggerRegisterTimerExpireEvent(Hf, RO[$00000007])
    call TriggerAddAction(Hf, WYw)
    set Jf = CreateTrigger()
    call DisableTrigger(Jf)
    call TriggerRegisterTimerExpireEvent(Jf, RO[$00000008])
    call TriggerAddAction(Jf, EYw)
    set Kf = CreateTrigger()
    call DisableTrigger(Kf)
    call TriggerRegisterTimerExpireEvent(Kf, RO[$00000009])
    call TriggerAddAction(Kf, ZYw)
    set Lf = CreateTrigger()
    call DisableTrigger(Lf)
    call TriggerRegisterTimerExpireEvent(Lf, RO[$0000000A])
    call TriggerAddAction(Lf, UYw)
    set Xf = CreateTrigger()
    call TriggerRegisterAnyUnitEventBJ(Xf, EVENT_PLAYER_UNIT_USE_ITEM)
    call TriggerAddAction(Xf, IYw)
    set Cf = CreateTrigger()
    call TriggerRegisterAnyUnitEventBJ(Cf, EVENT_PLAYER_UNIT_ISSUED_TARGET_ORDER)
    call TriggerAddCondition(Cf, Condition(PYw))
    call TriggerAddAction(Cf, AYw)
    set Vf = CreateTrigger()
    call TriggerRegisterAnyUnitEventBJ(Vf, EVENT_PLAYER_UNIT_PICKUP_ITEM)
    call TriggerAddCondition(Vf, Condition(DYw))
    call TriggerAddAction(Vf, HYw)
    set Bf = CreateTrigger()
    call TriggerRegisterAnyUnitEventBJ(Bf, EVENT_PLAYER_UNIT_SELL_ITEM)
    call TriggerAddCondition(Bf, Condition(JYw))
    call TriggerAddAction(Bf, KYw)
    set Nf = CreateTrigger()
    call TriggerRegisterPlayerChatEvent(Nf, Player($00000000), "-remove ", false)
    call TriggerRegisterPlayerChatEvent(Nf, Player($00000001), "-remove ", false)
    call TriggerRegisterPlayerChatEvent(Nf, Player($00000002), "-remove ", false)
    call TriggerRegisterPlayerChatEvent(Nf, Player($00000003), "-remove ", false)
    call TriggerRegisterPlayerChatEvent(Nf, Player($00000004), "-remove ", false)
    call TriggerRegisterPlayerChatEvent(Nf, Player($00000005), "-remove ", false)
    call TriggerRegisterPlayerChatEvent(Nf, Player($00000006), "-remove ", false)
    call TriggerRegisterPlayerChatEvent(Nf, Player($00000007), "-remove ", false)
    call TriggerRegisterPlayerChatEvent(Nf, Player($00000008), "-remove ", false)
    call TriggerRegisterPlayerChatEvent(Nf, Player($00000009), "-remove ", false)
    call TriggerAddCondition(Nf, Condition(LYw))
    call TriggerAddAction(Nf, XYw)
    set Mf = CreateTrigger()
    call TriggerAddCondition(Mf, Condition(CYw))
    call TriggerAddAction(Mf, VYw)
    set wR = CreateTrigger()
    call DisableTrigger(wR)
    call TriggerRegisterAnyUnitEventBJ(wR, EVENT_PLAYER_UNIT_DEATH)
    call TriggerAddAction(wR, BYw)
    set uR = CreateTrigger()
    call DisableTrigger(uR)
    call TriggerRegisterAnyUnitEventBJ(uR, EVENT_PLAYER_UNIT_DEATH)
    call TriggerAddAction(uR, NYw)
    set rR = CreateTrigger()
    call DisableTrigger(rR)
    call TriggerRegisterAnyUnitEventBJ(rR, EVENT_PLAYER_UNIT_DEATH)
    call TriggerAddAction(rR, MYw)
    set sR = CreateTrigger()
    call DisableTrigger(sR)
    call TriggerRegisterAnyUnitEventBJ(sR, EVENT_PLAYER_UNIT_DEATH)
    call TriggerAddAction(sR, wGw)
    set tR = CreateTrigger()
    call DisableTrigger(tR)
    call TriggerRegisterAnyUnitEventBJ(tR, EVENT_PLAYER_UNIT_DEATH)
    call TriggerAddAction(tR, uGw)
    set iR = CreateTrigger()
    call DisableTrigger(iR)
    call TriggerRegisterAnyUnitEventBJ(iR, EVENT_PLAYER_UNIT_DEATH)
    call TriggerAddAction(iR, rGw)
    set SR = CreateTrigger()
    call DisableTrigger(SR)
    call TriggerRegisterAnyUnitEventBJ(SR, EVENT_PLAYER_UNIT_DEATH)
    call TriggerAddAction(SR, sGw)
    set cR = CreateTrigger()
    call DisableTrigger(cR)
    call TriggerRegisterAnyUnitEventBJ(cR, EVENT_PLAYER_UNIT_DEATH)
    call TriggerAddAction(cR, tGw)
    set oR = CreateTrigger()
    call DisableTrigger(oR)
    call TriggerRegisterAnyUnitEventBJ(oR, EVENT_PLAYER_UNIT_DEATH)
    call TriggerAddAction(oR, iGw)
    set OR = CreateTrigger()
    call TriggerRegisterEnterRectSimple(OR, qy)
    call TriggerAddCondition(OR, Condition(SGw))
    call TriggerAddAction(OR, cGw)
    set lR = CreateTrigger()
    call TriggerRegisterEnterRectSimple(lR, ay)
    call TriggerAddCondition(lR, Condition(oGw))
    call TriggerAddAction(lR, OGw)
    set bR = CreateTrigger()
    call TriggerRegisterEnterRectSimple(bR, ny)
    call TriggerAddCondition(bR, Condition(lGw))
    call TriggerAddAction(bR, bGw)
    set yR = CreateTrigger()
    call TriggerRegisterEnterRectSimple(yR, dy)
    call TriggerAddCondition(yR, Condition(yGw))
    call TriggerAddAction(yR, pGw)
    set pR = CreateTrigger()
    call DisableTrigger(pR)
    call TriggerAddAction(pR, eGw)
    set eR = CreateTrigger()
    call DisableTrigger(eR)
    call TriggerRegisterAnyUnitEventBJ(eR, EVENT_PLAYER_UNIT_DEATH)
    call TriggerAddCondition(eR, Condition(qGw))
    call TriggerAddAction(eR, aGw)
    set qR = CreateTrigger()
    call DisableTrigger(qR)
    call TriggerRegisterAnyUnitEventBJ(qR, EVENT_PLAYER_UNIT_DEATH)
    call TriggerAddCondition(qR, Condition(nGw))
    call TriggerAddAction(qR, dGw)
    set dR = CreateTrigger()
    call DisableTrigger(dR)
    call TriggerRegisterEnterRectSimple(dR, Nl)
    call TriggerAddCondition(dR, Condition(fGw))
    call TriggerAddAction(dR, RGw)
    set fR = CreateTrigger()
    call DisableTrigger(fR)
    call TriggerRegisterEnterRectSimple(fR, wb)
    call TriggerAddCondition(fR, Condition(TGw))
    call TriggerAddAction(fR, YGw)
    set RR = CreateTrigger()
    call DisableTrigger(RR)
    call TriggerRegisterEnterRectSimple(RR, Ml)
    call TriggerAddCondition(RR, Condition(GGw))
    call TriggerAddAction(RR, gGw)
    set TR = CreateTrigger()
    call DisableTrigger(TR)
    call TriggerRegisterEnterRectSimple(TR, Bl)
    call TriggerAddCondition(TR, Condition(hGw))
    call TriggerAddAction(TR, FGw)
    set GR = CreateTrigger()
    call DisableTrigger(GR)
    call TriggerRegisterAnyUnitEventBJ(GR, EVENT_PLAYER_UNIT_DEATH)
    call TriggerAddCondition(GR, Condition(kGw))
    set hR = CreateTrigger()
    call TriggerRegisterUnitInRangeSimple(hR, 50., eG)
    call TriggerRegisterUnitInRangeSimple(hR, 50., qG)
    call TriggerRegisterUnitInRangeSimple(hR, 50., aG)
    call TriggerRegisterUnitInRangeSimple(hR, 50., nG)
    call TriggerRegisterUnitInRangeSimple(hR, 50., dG)
    call TriggerRegisterUnitInRangeSimple(hR, 50., fG)
    call TriggerRegisterUnitInRangeSimple(hR, 50., GG)
    call TriggerRegisterUnitInRangeSimple(hR, 50., bG)
    call TriggerRegisterUnitInRangeSimple(hR, 50., lG)
    call TriggerRegisterUnitInRangeSimple(hR, 50., pG)
    call TriggerRegisterUnitInRangeSimple(hR, 50., yG)
    call TriggerRegisterUnitInRangeSimple(hR, 50., RG)
    call TriggerRegisterUnitInRangeSimple(hR, 50., TG)
    call TriggerRegisterUnitInRangeSimple(hR, 50., YG)
    call TriggerRegisterUnitInRangeSimple(hR, 50., OG)
    call TriggerRegisterUnitInRangeSimple(hR, 50., gG)
    call TriggerAddCondition(hR, Condition(jGw))
    call DisableTrigger(hR)
    set kR = CreateTrigger()
    call TriggerRegisterEnterRectSimple(kR, Sb)
    set QR = CreateTrigger()
    call TriggerRegisterEnterRectSimple(QR, pb)
    call TriggerAddCondition(QR, Condition(xGw))
    call TriggerAddAction(QR, vGw)
    set WR = CreateTrigger()
    call TriggerRegisterEnterRectSimple(WR, eb)
    call TriggerAddCondition(WR, Condition(mGw))
    call TriggerAddAction(WR, QGw)
    set ER = CreateTrigger()
    call TriggerRegisterEnterRectSimple(ER, qb)
    call TriggerAddCondition(ER, Condition(WGw))
    call TriggerAddAction(ER, EGw)
    set ZR = CreateTrigger()
    call TriggerRegisterEnterRectSimple(ZR, ab)
    call TriggerAddCondition(ZR, Condition(ZGw))
    call TriggerAddAction(ZR, UGw)
    set UR = CreateTrigger()
    call TriggerRegisterEnterRectSimple(UR, nb)
    call TriggerAddCondition(UR, Condition(IGw))
    call TriggerAddAction(UR, PGw)
    set IR = CreateTrigger()
    call TriggerRegisterEnterRectSimple(IR, db)
    call TriggerAddCondition(IR, Condition(AGw))
    call TriggerAddAction(IR, DGw)
    set PR = CreateTrigger()
    call TriggerRegisterEnterRectSimple(PR, fb)
    call TriggerAddCondition(PR, Condition(HGw))
    call TriggerAddAction(PR, JGw)
    set AR = CreateTrigger()
    call TriggerRegisterEnterRectSimple(AR, sp)
    call TriggerAddAction(AR, KGw)
    set DR = CreateTrigger()
    call TriggerRegisterEnterRectSimple(DR, Fl)
    call TriggerAddAction(DR, LGw)
    set HR = CreateTrigger()
    call DisableTrigger(HR)
    call TriggerRegisterAnyUnitEventBJ(HR, EVENT_PLAYER_UNIT_ATTACKED)
    call TriggerAddCondition(HR, Condition(XGw))
    call TriggerAddAction(HR, CGw)
    set JR = CreateTrigger()
    call TriggerRegisterAnyUnitEventBJ(JR, EVENT_PLAYER_UNIT_DEATH)
    call TriggerAddCondition(JR, Condition(VGw))
    call TriggerAddAction(JR, BGw)
    set KR = CreateTrigger()
    call DisableTrigger(KR)
    call TriggerAddAction(KR, NGw)
    set LR = CreateTrigger()
    call DisableTrigger(LR)
    call TriggerAddAction(LR, MGw)
    set XR = CreateTrigger()
    call TriggerRegisterAnyUnitEventBJ(XR, EVENT_PLAYER_UNIT_DEATH)
    call TriggerAddCondition(XR, Condition(wgw))
    call TriggerAddAction(XR, ugw)
    set CR = CreateTrigger()
    call TriggerRegisterAnyUnitEventBJ(CR, EVENT_PLAYER_UNIT_SPELL_CAST)
    call TriggerAddCondition(CR, Condition(rgw))
    call TriggerAddAction(CR, sgw)
    set VR = CreateTrigger()
    call TriggerRegisterAnyUnitEventBJ(VR, EVENT_PLAYER_UNIT_SPELL_EFFECT)
    call TriggerAddCondition(VR, Condition(tgw))
    call TriggerAddAction(VR, igw)
    set BR = CreateTrigger()
    call TriggerRegisterAnyUnitEventBJ(BR, EVENT_PLAYER_UNIT_SPELL_FINISH)
    call TriggerAddCondition(BR, Condition(Sgw))
    call TriggerAddAction(BR, cgw)
    set NR = CreateTrigger()
    call TriggerRegisterAnyUnitEventBJ(NR, EVENT_PLAYER_UNIT_SPELL_CAST)
    call TriggerAddCondition(NR, Condition(Sgw))
    call TriggerAddAction(NR, ogw)
    set MR = CreateTrigger()
    call TriggerRegisterAnyUnitEventBJ(MR, EVENT_PLAYER_UNIT_SPELL_FINISH)
    call TriggerAddCondition(MR, Condition(Ogw))
    call TriggerAddAction(MR, lgw)
    set wT = CreateTrigger()
    call TriggerRegisterAnyUnitEventBJ(wT, EVENT_PLAYER_UNIT_SPELL_EFFECT)
    call TriggerAddCondition(wT, Condition(bgw))
    call TriggerAddAction(wT, ygw)
    set uT = CreateTrigger()
    call TriggerRegisterAnyUnitEventBJ(uT, EVENT_PLAYER_UNIT_SPELL_EFFECT)
    call TriggerAddCondition(uT, Condition(pgw))
    call TriggerAddAction(uT, egw)
    set rT = CreateTrigger()
    call TriggerRegisterAnyUnitEventBJ(rT, EVENT_PLAYER_UNIT_SPELL_EFFECT)
    call TriggerAddCondition(rT, Condition(qgw))
    call TriggerAddAction(rT, agw)
    set sT = CreateTrigger()
    call TriggerRegisterAnyUnitEventBJ(sT, EVENT_PLAYER_UNIT_SPELL_EFFECT)
    call TriggerAddCondition(sT, Condition(ngw))
    call TriggerAddAction(sT, dgw)
    set tT = CreateTrigger()
    call TriggerRegisterAnyUnitEventBJ(tT, EVENT_PLAYER_UNIT_SPELL_EFFECT)
    call TriggerAddCondition(tT, Condition(fgw))
    call TriggerAddAction(tT, Rgw)
    set iT = CreateTrigger()
    call TriggerRegisterAnyUnitEventBJ(iT, EVENT_PLAYER_UNIT_SPELL_EFFECT)
    call TriggerAddCondition(iT, Condition(Tgw))
    call TriggerAddAction(iT, Ygw)
    set ST = CreateTrigger()
    call TriggerRegisterAnyUnitEventBJ(ST, EVENT_PLAYER_UNIT_SPELL_EFFECT)
    call TriggerAddCondition(ST, Condition(Ggw))
    call TriggerAddAction(ST, ggw)
    set cT = CreateTrigger()
    call TriggerRegisterAnyUnitEventBJ(cT, EVENT_PLAYER_UNIT_SPELL_EFFECT)
    call TriggerAddCondition(cT, Condition(hgw))
    call TriggerAddAction(cT, Fgw)
    set oT = CreateTrigger()
    call TriggerRegisterAnyUnitEventBJ(oT, EVENT_PLAYER_UNIT_SPELL_EFFECT)
    call TriggerAddCondition(oT, Condition(kgw))
    call TriggerAddAction(oT, jgw)
    set OT = CreateTrigger()
    call TriggerRegisterAnyUnitEventBJ(OT, EVENT_PLAYER_UNIT_SPELL_CAST)
    call TriggerAddCondition(OT, Condition(xgw))
    call TriggerAddAction(OT, vgw)
    set lT = CreateTrigger()
    call TriggerRegisterAnyUnitEventBJ(lT, EVENT_PLAYER_UNIT_SPELL_EFFECT)
    call TriggerAddCondition(lT, Condition(mgw))
    set bT = CreateTrigger()
    call TriggerRegisterAnyUnitEventBJ(bT, EVENT_PLAYER_UNIT_SPELL_EFFECT)
    call TriggerAddCondition(bT, Condition(Qgw))
    call TriggerAddAction(bT, Wgw)
    set yT = CreateTrigger()
    call TriggerRegisterAnyUnitEventBJ(yT, EVENT_PLAYER_UNIT_ATTACKED)
    call TriggerAddCondition(yT, Condition(Egw))
    call TriggerAddAction(yT, Zgw)
    set eT = CreateTrigger()
    call TriggerRegisterAnyUnitEventBJ(eT, EVENT_PLAYER_UNIT_SPELL_EFFECT)
    call TriggerAddCondition(eT, Condition(Ugw))
    call TriggerAddAction(eT, Igw)
    set qT = CreateTrigger()
    call TriggerRegisterAnyUnitEventBJ(qT, EVENT_PLAYER_UNIT_SPELL_EFFECT)
    call TriggerAddCondition(qT, Condition(Pgw))
    call TriggerAddAction(qT, Agw)
    set aT = CreateTrigger()
    call TriggerRegisterAnyUnitEventBJ(aT, EVENT_PLAYER_UNIT_SPELL_EFFECT)
    call TriggerAddCondition(aT, Condition(Dgw))
    call TriggerAddAction(aT, Hgw)
    set nT = CreateTrigger()
    call TriggerRegisterAnyUnitEventBJ(nT, EVENT_PLAYER_UNIT_SPELL_EFFECT)
    call TriggerAddCondition(nT, Condition(Jgw))
    call TriggerAddAction(nT, Kgw)
    set dT = CreateTrigger()
    call TriggerAddAction(dT, Lgw)
    set fT = CreateTrigger()
    call TriggerRegisterEnterRectSimple(fT, bj_mapInitialPlayableArea)
    call TriggerAddCondition(fT, Condition(Xgw))
    call TriggerAddAction(fT, Cgw)
    set RT = CreateTrigger()
    call TriggerAddCondition(RT, Condition(Vgw))
    call TriggerAddAction(RT, Bgw)
    call CreateTrigger()
    set TT = CreateTrigger()
    call TriggerRegisterAnyUnitEventBJ(TT, EVENT_PLAYER_UNIT_ISSUED_TARGET_ORDER)
    call TriggerAddCondition(TT, Condition(Ngw))
    call TriggerAddAction(TT, Mgw)
    set YT = CreateTrigger()
    call TriggerRegisterDialogEvent(YT, tS)
    call TriggerAddCondition(YT, Condition(whw))
    call TriggerAddAction(YT, uhw)
    set GT = CreateTrigger()
    call TriggerRegisterDialogEvent(GT, tS)
    call TriggerAddCondition(GT, Condition(rhw))
    call TriggerAddAction(GT, shw)
    set gT = CreateTrigger()
    call TriggerRegisterAnyUnitEventBJ(gT, EVENT_PLAYER_UNIT_SPELL_EFFECT)
    call TriggerAddCondition(gT, Condition(thw))
    call TriggerAddAction(gT, ihw)
    set hT = CreateTrigger()
    call TriggerRegisterAnyUnitEventBJ(hT, EVENT_PLAYER_UNIT_SPELL_EFFECT)
    call TriggerAddCondition(hT, Condition(Shw))
    call TriggerAddAction(hT, chw)
    set FT = CreateTrigger()
    call TriggerRegisterAnyUnitEventBJ(FT, EVENT_PLAYER_UNIT_SPELL_EFFECT)
    call TriggerAddCondition(FT, Condition(ohw))
    call TriggerAddAction(FT, Ohw)
    set kT = CreateTrigger()
    call TriggerRegisterAnyUnitEventBJ(kT, EVENT_PLAYER_UNIT_SPELL_EFFECT)
    call TriggerAddCondition(kT, Condition(lhw))
    call TriggerAddAction(kT, bhw)
    set jT = CreateTrigger()
    call TriggerRegisterAnyUnitEventBJ(jT, EVENT_PLAYER_UNIT_SPELL_EFFECT)
    call TriggerAddCondition(jT, Condition(yhw))
    call TriggerAddAction(jT, phw)
    set xT = CreateTrigger()
    call TriggerRegisterAnyUnitEventBJ(xT, EVENT_PLAYER_UNIT_SPELL_EFFECT)
    call TriggerAddCondition(xT, Condition(ehw))
    call TriggerAddAction(xT, qhw)
    set vT = CreateTrigger()
    call TriggerRegisterAnyUnitEventBJ(vT, EVENT_PLAYER_UNIT_SPELL_EFFECT)
    call TriggerAddCondition(vT, Condition(ahw))
    call TriggerAddAction(vT, nhw)
    set mT = CreateTrigger()
    call TriggerRegisterAnyUnitEventBJ(mT, EVENT_PLAYER_UNIT_SPELL_EFFECT)
    call TriggerAddCondition(mT, Condition(dhw))
    call TriggerAddAction(mT, fhw)
    set QT = CreateTrigger()
    call TriggerRegisterAnyUnitEventBJ(QT, EVENT_PLAYER_UNIT_SPELL_EFFECT)
    call TriggerAddCondition(QT, Condition(Rhw))
    call TriggerAddAction(QT, Thw)
    set WT = CreateTrigger()
    call TriggerRegisterEnterRectSimple(WT, Cl)
    call TriggerAddCondition(WT, Condition(Yhw))
    call TriggerAddAction(WT, Ghw)
    set ET = CreateTrigger()
    call TriggerRegisterAnyUnitEventBJ(ET, EVENT_PLAYER_UNIT_ISSUED_TARGET_ORDER)
    call TriggerAddCondition(ET, Condition(ghw))
    call TriggerAddAction(ET, hhw)
    set ZT = CreateTrigger()
    call TriggerRegisterAnyUnitEventBJ(ZT, EVENT_PLAYER_UNIT_ISSUED_TARGET_ORDER)
    call TriggerAddCondition(ZT, Condition(Fhw))
    call TriggerAddAction(ZT, khw)
    set UT = CreateTrigger()
    call DisableTrigger(UT)
    call TriggerRegisterTimerEventPeriodic(UT, 5.)
    call TriggerAddAction(UT, jhw)
    set IT = CreateTrigger()
    call TriggerRegisterEnterRectSimple(IT, Ll)
    call TriggerAddCondition(IT, Condition(xhw))
    call TriggerAddAction(IT, vhw)
    set PT = CreateTrigger()
    call TriggerRegisterAnyUnitEventBJ(PT, EVENT_PLAYER_UNIT_DEATH)
    call TriggerAddCondition(PT, Condition(mhw))
    call TriggerAddAction(PT, Qhw)
    set AT = CreateTrigger()
    call TriggerRegisterTimerExpireEvent(AT, nt)
    call TriggerAddAction(AT, Whw)
    set DT = CreateTrigger()
    call DisableTrigger(DT)
    call TriggerRegisterPlayerKeyEventBJ(DT, Player($00000000), $00000000, $00000003)
    call TriggerRegisterPlayerKeyEventBJ(DT, Player($00000001), $00000000, $00000003)
    call TriggerRegisterPlayerKeyEventBJ(DT, Player($00000002), $00000000, $00000003)
    call TriggerRegisterPlayerKeyEventBJ(DT, Player($00000003), $00000000, $00000003)
    call TriggerRegisterPlayerKeyEventBJ(DT, Player($00000004), $00000000, $00000003)
    call TriggerRegisterPlayerKeyEventBJ(DT, Player($00000005), $00000000, $00000003)
    call TriggerRegisterPlayerKeyEventBJ(DT, Player($00000006), $00000000, $00000003)
    call TriggerRegisterPlayerKeyEventBJ(DT, Player($00000007), $00000000, $00000003)
    call TriggerRegisterPlayerKeyEventBJ(DT, Player($00000008), $00000000, $00000003)
    call TriggerRegisterPlayerKeyEventBJ(DT, Player($00000009), $00000000, $00000003)
    call TriggerAddCondition(DT, Condition(Ehw))
    call TriggerAddAction(DT, Zhw)
    set HT = CreateTrigger()
    call DisableTrigger(HT)
    call TriggerRegisterPlayerKeyEventBJ(HT, Player($00000000), $00000000, $00000002)
    call TriggerRegisterPlayerKeyEventBJ(HT, Player($00000001), $00000000, $00000002)
    call TriggerRegisterPlayerKeyEventBJ(HT, Player($00000002), $00000000, $00000002)
    call TriggerRegisterPlayerKeyEventBJ(HT, Player($00000003), $00000000, $00000002)
    call TriggerRegisterPlayerKeyEventBJ(HT, Player($00000004), $00000000, $00000002)
    call TriggerRegisterPlayerKeyEventBJ(HT, Player($00000005), $00000000, $00000002)
    call TriggerRegisterPlayerKeyEventBJ(HT, Player($00000006), $00000000, $00000002)
    call TriggerRegisterPlayerKeyEventBJ(HT, Player($00000007), $00000000, $00000002)
    call TriggerRegisterPlayerKeyEventBJ(HT, Player($00000008), $00000000, $00000002)
    call TriggerRegisterPlayerKeyEventBJ(HT, Player($00000009), $00000000, $00000002)
    call TriggerAddCondition(HT, Condition(Uhw))
    call TriggerAddAction(HT, Ihw)
    set JT = CreateTrigger()
    call DisableTrigger(JT)
    call TriggerRegisterPlayerKeyEventBJ(JT, Player($00000000), $00000000, $00000000)
    call TriggerRegisterPlayerKeyEventBJ(JT, Player($00000001), $00000000, $00000000)
    call TriggerRegisterPlayerKeyEventBJ(JT, Player($00000002), $00000000, $00000000)
    call TriggerRegisterPlayerKeyEventBJ(JT, Player($00000003), $00000000, $00000000)
    call TriggerRegisterPlayerKeyEventBJ(JT, Player($00000004), $00000000, $00000000)
    call TriggerRegisterPlayerKeyEventBJ(JT, Player($00000005), $00000000, $00000000)
    call TriggerRegisterPlayerKeyEventBJ(JT, Player($00000006), $00000000, $00000000)
    call TriggerRegisterPlayerKeyEventBJ(JT, Player($00000007), $00000000, $00000000)
    call TriggerRegisterPlayerKeyEventBJ(JT, Player($00000008), $00000000, $00000000)
    call TriggerRegisterPlayerKeyEventBJ(JT, Player($00000009), $00000000, $00000000)
    call TriggerAddCondition(JT, Condition(Phw))
    call TriggerAddAction(JT, Ahw)
    set KT = CreateTrigger()
    call DisableTrigger(KT)
    call TriggerRegisterPlayerKeyEventBJ(KT, Player($00000000), $00000000, $00000001)
    call TriggerRegisterPlayerKeyEventBJ(KT, Player($00000001), $00000000, $00000001)
    call TriggerRegisterPlayerKeyEventBJ(KT, Player($00000002), $00000000, $00000001)
    call TriggerRegisterPlayerKeyEventBJ(KT, Player($00000003), $00000000, $00000001)
    call TriggerRegisterPlayerKeyEventBJ(KT, Player($00000004), $00000000, $00000001)
    call TriggerRegisterPlayerKeyEventBJ(KT, Player($00000005), $00000000, $00000001)
    call TriggerRegisterPlayerKeyEventBJ(KT, Player($00000006), $00000000, $00000001)
    call TriggerRegisterPlayerKeyEventBJ(KT, Player($00000007), $00000000, $00000001)
    call TriggerRegisterPlayerKeyEventBJ(KT, Player($00000008), $00000000, $00000001)
    call TriggerRegisterPlayerKeyEventBJ(KT, Player($00000009), $00000000, $00000001)
    call TriggerAddCondition(KT, Condition(Dhw))
    call TriggerAddAction(KT, Hhw)
    set LT = CreateTrigger()
    call TriggerRegisterAnyUnitEventBJ(LT, EVENT_PLAYER_UNIT_SPELL_EFFECT)
    call TriggerAddCondition(LT, Condition(Jhw))
    call TriggerAddAction(LT, Khw)
    set XT = CreateTrigger()
    call TriggerRegisterAnyUnitEventBJ(XT, EVENT_PLAYER_UNIT_SPELL_EFFECT)
    call TriggerAddCondition(XT, Condition(Lhw))
    call TriggerAddAction(XT, Xhw)
    set CT = CreateTrigger()
    call DisableTrigger(CT)
    set VT = CreateTrigger()
    call DisableTrigger(VT)
    set BT = CreateTrigger()
    call DisableTrigger(BT)
    set NT = CreateTrigger()
    call DisableTrigger(NT)
    call TriggerAddAction(NT, Chw)
    set MT = CreateTrigger()
    set wY = CreateTrigger()
    set uY = CreateTrigger()
    call TriggerRegisterAnyUnitEventBJ(uY, EVENT_PLAYER_UNIT_USE_ITEM)
    call TriggerAddCondition(uY, Condition(Vhw))
    call TriggerAddAction(uY, Bhw)
    set rY = CreateTrigger()
    call TriggerRegisterAnyUnitEventBJ(rY, EVENT_PLAYER_UNIT_USE_ITEM)
    call TriggerAddCondition(rY, Condition(Nhw))
    call TriggerAddAction(rY, Mhw)
    set sY = CreateTrigger()
    call TriggerRegisterAnyUnitEventBJ(sY, EVENT_PLAYER_UNIT_USE_ITEM)
    call TriggerAddCondition(sY, Condition(wFw))
    call TriggerAddAction(sY, uFw)
    set tY = CreateTrigger()
    call TriggerRegisterAnyUnitEventBJ(tY, EVENT_PLAYER_UNIT_USE_ITEM)
    call TriggerAddCondition(tY, Condition(rFw))
    call TriggerAddAction(tY, sFw)
    set iY = CreateTrigger()
    call TriggerRegisterAnyUnitEventBJ(iY, EVENT_PLAYER_UNIT_USE_ITEM)
    call TriggerAddCondition(iY, Condition(tFw))
    call TriggerAddAction(iY, iFw)
    set SY = CreateTrigger()
    call TriggerRegisterAnyUnitEventBJ(SY, EVENT_PLAYER_UNIT_PICKUP_ITEM)
    call TriggerAddCondition(SY, Condition(SFw))
    set cY = CreateTrigger()
    call DisableTrigger(cY)
    call TriggerAddAction(cY, cFw)
    set oY = CreateTrigger()
    call DisableTrigger(oY)
    call TriggerAddAction(oY, oFw)
    set OY = CreateTrigger()
    call DisableTrigger(OY)
    call TriggerAddAction(OY, OFw)
    set lY = CreateTrigger()
    call TriggerRegisterTimerExpireEvent(lY, tO[$00000001])
    call TriggerAddAction(lY, lFw)
    set bY = CreateTrigger()
    call TriggerRegisterTimerExpireEvent(bY, tO[$00000002])
    call TriggerAddAction(bY, bFw)
    set yY = CreateTrigger()
    call TriggerRegisterTimerExpireEvent(yY, tO[$00000003])
    call TriggerAddAction(yY, yFw)
    set pY = CreateTrigger()
    call TriggerRegisterTimerExpireEvent(pY, tO[$00000004])
    call TriggerAddAction(pY, pFw)
    set eY = CreateTrigger()
    call TriggerRegisterTimerExpireEvent(eY, tO[$00000005])
    call TriggerAddAction(eY, eFw)
    set qY = CreateTrigger()
    call TriggerRegisterTimerExpireEvent(qY, tO[$00000006])
    call TriggerAddAction(qY, qFw)
    set aY = CreateTrigger()
    call TriggerRegisterTimerExpireEvent(aY, tO[$00000007])
    call TriggerAddAction(aY, aFw)
    set nY = CreateTrigger()
    call TriggerRegisterTimerExpireEvent(nY, tO[$00000008])
    call TriggerAddAction(nY, nFw)
    set dY = CreateTrigger()
    call TriggerRegisterTimerExpireEvent(dY, tO[$00000009])
    call TriggerAddAction(dY, dFw)
    set fY = CreateTrigger()
    call TriggerRegisterTimerExpireEvent(fY, tO[$0000000A])
    call TriggerAddAction(fY, fFw)
    set RY = CreateTrigger()
    call TriggerRegisterPlayerKeyEventBJ(RY, Player($00000000), $00000000, $00000003)
    call TriggerRegisterPlayerKeyEventBJ(RY, Player($00000001), $00000000, $00000003)
    call TriggerRegisterPlayerKeyEventBJ(RY, Player($00000002), $00000000, $00000003)
    call TriggerRegisterPlayerKeyEventBJ(RY, Player($00000003), $00000000, $00000003)
    call TriggerRegisterPlayerKeyEventBJ(RY, Player($00000004), $00000000, $00000003)
    call TriggerRegisterPlayerKeyEventBJ(RY, Player($00000005), $00000000, $00000003)
    call TriggerRegisterPlayerKeyEventBJ(RY, Player($00000006), $00000000, $00000003)
    call TriggerRegisterPlayerKeyEventBJ(RY, Player($00000007), $00000000, $00000003)
    call TriggerRegisterPlayerKeyEventBJ(RY, Player($00000008), $00000000, $00000003)
    call TriggerRegisterPlayerKeyEventBJ(RY, Player($00000009), $00000000, $00000003)
    call TriggerAddCondition(RY, Condition(RFw))
    call TriggerAddAction(RY, TFw)
    set TY = CreateTrigger()
    call TriggerRegisterPlayerKeyEventBJ(TY, Player($00000000), $00000000, $00000002)
    call TriggerRegisterPlayerKeyEventBJ(TY, Player($00000001), $00000000, $00000002)
    call TriggerRegisterPlayerKeyEventBJ(TY, Player($00000002), $00000000, $00000002)
    call TriggerRegisterPlayerKeyEventBJ(TY, Player($00000003), $00000000, $00000002)
    call TriggerRegisterPlayerKeyEventBJ(TY, Player($00000004), $00000000, $00000002)
    call TriggerRegisterPlayerKeyEventBJ(TY, Player($00000005), $00000000, $00000002)
    call TriggerRegisterPlayerKeyEventBJ(TY, Player($00000006), $00000000, $00000002)
    call TriggerRegisterPlayerKeyEventBJ(TY, Player($00000007), $00000000, $00000002)
    call TriggerRegisterPlayerKeyEventBJ(TY, Player($00000008), $00000000, $00000002)
    call TriggerRegisterPlayerKeyEventBJ(TY, Player($00000009), $00000000, $00000002)
    call TriggerAddCondition(TY, Condition(YFw))
    call TriggerAddAction(TY, GFw)
    set YY = CreateTrigger()
    call TriggerRegisterAnyUnitEventBJ(YY, EVENT_PLAYER_UNIT_DEATH)
    call TriggerAddCondition(YY, Condition(gFw))
    set GY = CreateTrigger()
    call TriggerRegisterAnyUnitEventBJ(GY, EVENT_PLAYER_UNIT_DEATH)
    call TriggerAddCondition(GY, Condition(hFw))
    call TriggerAddAction(GY, FFw)
    set gY = CreateTrigger()
    call TriggerRegisterAnyUnitEventBJ(gY, EVENT_PLAYER_UNIT_PICKUP_ITEM)
    call TriggerAddCondition(gY, Condition(kFw))
    call TriggerAddAction(gY, jFw)
    set hY = CreateTrigger()
    call TriggerRegisterAnyUnitEventBJ(hY, EVENT_PLAYER_UNIT_ISSUED_TARGET_ORDER)
    call TriggerAddCondition(hY, Condition(xFw))
    call TriggerAddAction(hY, vFw)
    set FY = CreateTrigger()
    call TriggerRegisterAnyUnitEventBJ(FY, EVENT_PLAYER_UNIT_ISSUED_TARGET_ORDER)
    call TriggerAddCondition(FY, Condition(mFw))
    call TriggerAddAction(FY, QFw)
    set kY = CreateTrigger()
    call TriggerRegisterEnterRectSimple(kY, tl)
    call TriggerAddCondition(kY, Condition(WFw))
    call TriggerAddAction(kY, EFw)
    set jY = CreateTrigger()
    call TriggerRegisterAnyUnitEventBJ(jY, EVENT_PLAYER_UNIT_ISSUED_TARGET_ORDER)
    call TriggerAddCondition(jY, Condition(ZFw))
    set xY = CreateTrigger()
    call TriggerRegisterAnyUnitEventBJ(xY, EVENT_PLAYER_UNIT_PICKUP_ITEM)
    call TriggerAddCondition(xY, Condition(UFw))
    call TriggerAddAction(xY, IFw)
    set vY = CreateTrigger()
    call TriggerRegisterAnyUnitEventBJ(vY, EVENT_PLAYER_UNIT_PICKUP_ITEM)
    call TriggerAddCondition(vY, Condition(PFw))
    call TriggerAddAction(vY, AFw)
    set mY = CreateTrigger()
    call TriggerRegisterAnyUnitEventBJ(mY, EVENT_PLAYER_UNIT_PICKUP_ITEM)
    call TriggerAddCondition(mY, Condition(DFw))
    call TriggerAddAction(mY, HFw)
    set QY = CreateTrigger()
    call TriggerRegisterAnyUnitEventBJ(QY, EVENT_PLAYER_UNIT_ISSUED_TARGET_ORDER)
    call TriggerAddCondition(QY, Condition(JFw))
    call TriggerAddAction(QY, KFw)
    set WY = CreateTrigger()
    call TriggerRegisterAnyUnitEventBJ(WY, EVENT_PLAYER_UNIT_PICKUP_ITEM)
    call TriggerAddCondition(WY, Condition(LFw))
    call TriggerAddAction(WY, XFw)
    set EY = CreateTrigger()
    call TriggerRegisterAnyUnitEventBJ(EY, EVENT_PLAYER_UNIT_ISSUED_TARGET_ORDER)
    call TriggerAddCondition(EY, Condition(CFw))
    call TriggerAddAction(EY, VFw)
    set ZY = CreateTrigger()
    call TriggerRegisterAnyUnitEventBJ(ZY, EVENT_PLAYER_UNIT_SPELL_EFFECT)
    call TriggerAddCondition(ZY, Condition(BFw))
    call TriggerAddAction(ZY, NFw)
    set AY = CreateTrigger()
    call TriggerRegisterAnyUnitEventBJ(AY, EVENT_PLAYER_UNIT_DROP_ITEM)
    call TriggerRegisterAnyUnitEventBJ(AY, EVENT_PLAYER_UNIT_PICKUP_ITEM)
    call TriggerAddAction(AY, MFw)
    set DY = CreateTrigger()
    call TriggerRegisterTimerEventSingle(DY, 5.)
    call TriggerAddAction(DY, wkw)
    set HY = CreateTrigger()
    call DisableTrigger(HY)
    call TriggerRegisterEnterRectSimple(HY, mO)
    call TriggerAddAction(HY, ukw)
    set JY = CreateTrigger()
    call DisableTrigger(JY)
    call TriggerRegisterAnyUnitEventBJ(JY, EVENT_PLAYER_UNIT_DEATH)
    call TriggerAddCondition(JY, Condition(rkw))
    call TriggerAddAction(JY, skw)
    set KY = CreateTrigger()
    call TriggerRegisterTimerEventSingle(KY, 5.)
    call TriggerAddAction(KY, tkw)
    set LY = CreateTrigger()
    call DisableTrigger(LY)
    call TriggerRegisterEnterRectSimple(LY, Qp)
    call TriggerAddAction(LY, ikw)
    set XY = CreateTrigger()
    call DisableTrigger(XY)
    call TriggerRegisterAnyUnitEventBJ(XY, EVENT_PLAYER_UNIT_DEATH)
    call TriggerAddCondition(XY, Condition(Skw))
    call TriggerAddAction(XY, ckw)
    call ConditionalTriggerExecute(Qe)
    call ConditionalTriggerExecute(Ce)
    call ConditionalTriggerExecute(uq)
    call ConditionalTriggerExecute(Yf)
    call ConditionalTriggerExecute(Wf)
    set ZSi = CreateTrigger()
    call TriggerAddCondition(ZSi, Condition(okw))
    if not TriggerEvaluate(ZSi) then
        call tNr("Could not initialize package Real.", "when calling error in Real, line 1")
    endif
    call TriggerClearConditions(ZSi)
    call TriggerAddCondition(ZSi, Condition(Okw))
    if not TriggerEvaluate(ZSi) then
        call tNr("Could not initialize package Integer.", "when calling error in Integer, line 1")
    endif
    call TriggerClearConditions(ZSi)
    call TriggerAddCondition(ZSi, Condition(lkw))
    if not TriggerEvaluate(ZSi) then
        call tNr("Could not initialize package Angle.", "when calling error in Angle, line 1")
    endif
    call TriggerClearConditions(ZSi)
    call TriggerAddCondition(ZSi, Condition(bkw))
    if not TriggerEvaluate(ZSi) then
        call tNr("Could not initialize package String.", "when calling error in String, line 1")
    endif
    call TriggerClearConditions(ZSi)
    call TriggerAddCondition(ZSi, Condition(ykw))
    if not TriggerEvaluate(ZSi) then
        call tNr("Could not initialize package Vectors.", "when calling error in Vectors, line 1")
    endif
    call TriggerClearConditions(ZSi)
    call TriggerAddCondition(ZSi, Condition(pkw))
    if not TriggerEvaluate(ZSi) then
        call tNr("Could not initialize package Player.", "when calling error in Player, line 1")
    endif
    call TriggerClearConditions(ZSi)
    call TriggerAddCondition(ZSi, Condition(ekw))
    if not TriggerEvaluate(ZSi) then
        call tNr("Could not initialize package Printing.", "when calling error in Printing, line 1")
    endif
    call TriggerClearConditions(ZSi)
    call TriggerAddCondition(ZSi, Condition(qkw))
    if not TriggerEvaluate(ZSi) then
        call tNr("Could not initialize package Basics.", "when calling error in Basics, line 1")
    endif
    call TriggerClearConditions(ZSi)
    call TriggerAddCondition(ZSi, Condition(akw))
    if not TriggerEvaluate(ZSi) then
        call tNr("Could not initialize package GameTimer.", "when calling error in GameTimer, line 1")
    endif
    call TriggerClearConditions(ZSi)
    call TriggerAddCondition(ZSi, Condition(nkw))
    if not TriggerEvaluate(ZSi) then
        call tNr("Could not initialize package MagicFunctions.", "when calling error in MagicFunctions, line 1")
    endif
    call TriggerClearConditions(ZSi)
    call TriggerAddCondition(ZSi, Condition(dkw))
    if not TriggerEvaluate(ZSi) then
        call tNr("Could not initialize package ErrorHandling.", "when calling error in ErrorHandling, line 1")
    endif
    call TriggerClearConditions(ZSi)
    call TriggerAddCondition(ZSi, Condition(fkw))
    if not TriggerEvaluate(ZSi) then
        call tNr("Could not initialize package Destructable.", "when calling error in Destructable, line 1")
    endif
    call TriggerClearConditions(ZSi)
    call TriggerAddCondition(ZSi, Condition(Rkw))
    if not TriggerEvaluate(ZSi) then
        call tNr("Could not initialize package Maths.", "when calling error in Maths, line 1")
    endif
    call TriggerClearConditions(ZSi)
    call TriggerAddCondition(ZSi, Condition(Tkw))
    if not TriggerEvaluate(ZSi) then
        call tNr("Could not initialize package Matrices.", "when calling error in Matrices, line 1")
    endif
    call TriggerClearConditions(ZSi)
    call TriggerAddCondition(ZSi, Condition(Ykw))
    if not TriggerEvaluate(ZSi) then
        call tNr("Could not initialize package Quaternion.", "when calling error in Quaternion, line 1")
    endif
    call TriggerClearConditions(ZSi)
    call TriggerAddCondition(ZSi, Condition(Gkw))
    if not TriggerEvaluate(ZSi) then
        call tNr("Could not initialize package Table.", "when calling error in Table, line 1")
    endif
    call TriggerClearConditions(ZSi)
    call TriggerAddCondition(ZSi, Condition(gkw))
    if not TriggerEvaluate(ZSi) then
        call tNr("Could not initialize package Playercolor.", "when calling error in Playercolor, line 1")
    endif
    call TriggerClearConditions(ZSi)
    call TriggerAddCondition(ZSi, Condition(hkw))
    if not TriggerEvaluate(ZSi) then
        call tNr("Could not initialize package Colors.", "when calling error in Colors, line 1")
    endif
    call TriggerClearConditions(ZSi)
    call TriggerAddCondition(ZSi, Condition(Fkw))
    if not TriggerEvaluate(ZSi) then
        call tNr("Could not initialize package Group.", "when calling error in Group, line 1")
    endif
    call TriggerClearConditions(ZSi)
    call TriggerAddCondition(ZSi, Condition(kkw))
    if not TriggerEvaluate(ZSi) then
        call tNr("Could not initialize package Lightning.", "when calling error in Lightning, line 1")
    endif
    call TriggerClearConditions(ZSi)
    call TriggerAddCondition(ZSi, Condition(jkw))
    if not TriggerEvaluate(ZSi) then
        call tNr("Could not initialize package WeatherEffects.", "when calling error in WeatherEffects, line 1")
    endif
    call TriggerClearConditions(ZSi)
    call TriggerAddCondition(ZSi, Condition(xkw))
    if not TriggerEvaluate(ZSi) then
        call tNr("Could not initialize package Framehandle.", "when calling error in Framehandle, line 1")
    endif
    call TriggerClearConditions(ZSi)
    call TriggerAddCondition(ZSi, Condition(vkw))
    if not TriggerEvaluate(ZSi) then
        call tNr("Could not initialize package TypeCasting.", "when calling error in TypeCasting, line 1")
    endif
    call TriggerClearConditions(ZSi)
    call TriggerAddCondition(ZSi, Condition(mkw))
    if not TriggerEvaluate(ZSi) then
        call tNr("Could not initialize package HashList.", "when calling error in HashList, line 1")
    endif
    call TriggerClearConditions(ZSi)
    call TriggerAddCondition(ZSi, Condition(Qkw))
    if not TriggerEvaluate(ZSi) then
        call tNr("Could not initialize package TimerUtils.", "when calling error in TimerUtils, line 1")
    endif
    call TriggerClearConditions(ZSi)
    call TriggerAddCondition(ZSi, Condition(Wkw))
    if not TriggerEvaluate(ZSi) then
        call tNr("Could not initialize package ClosureTimers.", "when calling error in ClosureTimers, line 1")
    endif
    call TriggerClearConditions(ZSi)
    call TriggerAddCondition(ZSi, Condition(Ekw))
    if not TriggerEvaluate(ZSi) then
        call tNr("Could not initialize package Configuration.", "when calling error in Configuration, line 11")
    endif
    call TriggerClearConditions(ZSi)
    call TriggerAddCondition(ZSi, Condition(Zkw))
    if not TriggerEvaluate(ZSi) then
        call tNr("Could not initialize package AbilityIds.", "when calling error in AbilityIds, line 1")
    endif
    call TriggerClearConditions(ZSi)
    call TriggerAddCondition(ZSi, Condition(Ukw))
    if not TriggerEvaluate(ZSi) then
        call tNr("Could not initialize package ClosureForGroups.", "when calling error in ClosureForGroups, line 1")
    endif
    call TriggerClearConditions(ZSi)
    call TriggerAddCondition(ZSi, Condition(Ikw))
    if not TriggerEvaluate(ZSi) then
        call tNr("Could not initialize package LinkedList.", "when calling error in LinkedList, line 1")
    endif
    call TriggerClearConditions(ZSi)
    call TriggerAddCondition(ZSi, Condition(Pkw))
    if not TriggerEvaluate(ZSi) then
        call tNr("Could not initialize package ObjectIds.", "when calling error in ObjectIds, line 1")
    endif
    call TriggerClearConditions(ZSi)
    call TriggerAddCondition(ZSi, Condition(Akw))
    if not TriggerEvaluate(ZSi) then
        call tNr("Could not initialize package TerrainHighCliffSetup.", "when calling error in TerrainHighCliffSetup, line 1")
    endif
    call TriggerClearConditions(ZSi)
    call TriggerAddCondition(ZSi, Condition(Dkw))
    if not TriggerEvaluate(ZSi) then
        call tNr("Could not initialize package BitSet.", "when calling error in BitSet, line 1")
    endif
    call TriggerClearConditions(ZSi)
    call TriggerAddCondition(ZSi, Condition(Hkw))
    if not TriggerEvaluate(ZSi) then
        call tNr("Could not initialize package TargetsAllowed.", "when calling error in TargetsAllowed, line 1")
    endif
    call TriggerClearConditions(ZSi)
    call TriggerAddCondition(ZSi, Condition(Jkw))
    if not TriggerEvaluate(ZSi) then
        call tNr("Could not initialize package AC_Abilities.", "when calling error in AC_Abilities, line 1")
    endif
    call TriggerClearConditions(ZSi)
    call TriggerAddCondition(ZSi, Condition(Kkw))
    if not TriggerEvaluate(ZSi) then
        call tNr("Could not initialize package CameraUtils.", "when calling error in CameraUtils, line 12")
    endif
    call TriggerClearConditions(ZSi)
    call TriggerAddCondition(ZSi, Condition(Lkw))
    if not TriggerEvaluate(ZSi) then
        call tNr("Could not initialize package MapBounds.", "when calling error in MapBounds, line 1")
    endif
    call TriggerClearConditions(ZSi)
    call TriggerAddCondition(ZSi, Condition(Xkw))
    if not TriggerEvaluate(ZSi) then
        call tNr("Could not initialize package UnitIds.", "when calling error in UnitIds, line 1")
    endif
    call TriggerClearConditions(ZSi)
    call TriggerAddCondition(ZSi, Condition(Ckw))
    if not TriggerEvaluate(ZSi) then
        call tNr("Could not initialize package Icons.", "when calling error in Icons, line 1")
    endif
    call TriggerClearConditions(ZSi)
    call TriggerAddCondition(ZSi, Condition(Vkw))
    if not TriggerEvaluate(ZSi) then
        call tNr("Could not initialize package DummyRecycler.", "when calling error in DummyRecycler, line 1")
    endif
    call TriggerClearConditions(ZSi)
    call TriggerAddCondition(ZSi, Condition(Bkw))
    if not TriggerEvaluate(ZSi) then
        call tNr("Could not initialize package Preloader.", "when calling error in Preloader, line 1")
    endif
    call TriggerClearConditions(ZSi)
    call TriggerAddCondition(ZSi, Condition(Nkw))
    if not TriggerEvaluate(ZSi) then
        call tNr("Could not initialize package ObjectIdGenerator.", "when calling error in ObjectIdGenerator, line 1")
    endif
    call TriggerClearConditions(ZSi)
    call TriggerAddCondition(ZSi, Condition(Mkw))
    if not TriggerEvaluate(ZSi) then
        call tNr("Could not initialize package Execute.", "when calling error in Execute, line 1")
    endif
    call TriggerClearConditions(ZSi)
    call TriggerAddCondition(ZSi, Condition(wjw))
    if not TriggerEvaluate(ZSi) then
        call tNr("Could not initialize package GroupUtils_config.", "when calling error in GroupUtils_config, line 1")
    endif
    call TriggerClearConditions(ZSi)
    call TriggerAddCondition(ZSi, Condition(ujw))
    if not TriggerEvaluate(ZSi) then
        call tNr("Could not initialize package GroupUtils.", "when calling error in GroupUtils, line 1")
    endif
    call TriggerClearConditions(ZSi)
    call TriggerAddCondition(ZSi, Condition(rjw))
    if not TriggerEvaluate(ZSi) then
        call tNr("Could not initialize package EventHelper.", "when calling error in EventHelper, line 1")
    endif
    call TriggerClearConditions(ZSi)
    call TriggerAddCondition(ZSi, Condition(sjw))
    if not TriggerEvaluate(ZSi) then
        call tNr("Could not initialize package RegisterEvents.", "when calling error in RegisterEvents, line 1")
    endif
    call TriggerClearConditions(ZSi)
    call TriggerAddCondition(ZSi, Condition(tjw))
    if not TriggerEvaluate(ZSi) then
        call tNr("Could not initialize package OnUnitEnterLeave.", "when calling error in OnUnitEnterLeave, line 1")
    endif
    call TriggerClearConditions(ZSi)
    call TriggerAddCondition(ZSi, Condition(ijw))
    if not TriggerEvaluate(ZSi) then
        call tNr("Could not initialize package UnitIndexer.", "when calling error in UnitIndexer, line 1")
    endif
    call TriggerClearConditions(ZSi)
    call TriggerAddCondition(ZSi, Condition(Sjw))
    if not TriggerEvaluate(ZSi) then
        call tNr("Could not initialize package ClosureEvents.", "when calling error in ClosureEvents, line 1")
    endif
    call TriggerClearConditions(ZSi)
    call TriggerAddCondition(ZSi, Condition(cjw))
    if not TriggerEvaluate(ZSi) then
        call tNr("Could not initialize package DamageEvent.", "when calling error in DamageEvent, line 61")
    endif
    call TriggerClearConditions(ZSi)
    call TriggerAddCondition(ZSi, Condition(ojw))
    if not TriggerEvaluate(ZSi) then
        call tNr("Could not initialize package Constants.", "when calling error in Constants, line 12")
    endif
    call TriggerClearConditions(ZSi)
    call TriggerAddCondition(ZSi, Condition(Ojw))
    if not TriggerEvaluate(ZSi) then
        call tNr("Could not initialize package CustomObjectIds.", "when calling error in CustomObjectIds, line 1")
    endif
    call TriggerClearConditions(ZSi)
    call TriggerAddCondition(ZSi, Condition(ljw))
    if not TriggerEvaluate(ZSi) then
        call tNr("Could not initialize package UnitItemUtils.", "when calling error in UnitItemUtils, line 12")
    endif
    call TriggerClearConditions(ZSi)
    call TriggerAddCondition(ZSi, Condition(bjw))
    if not TriggerEvaluate(ZSi) then
        call tNr("Could not initialize package CustomLinkedList.", "when calling error in CustomLinkedList, line 12")
    endif
    call TriggerClearConditions(ZSi)
    call TriggerAddCondition(ZSi, Condition(yjw))
    if not TriggerEvaluate(ZSi) then
        call tNr("Could not initialize package CustomLinkedListRegistry.", "when calling error in CustomLinkedListRegistry, line 11")
    endif
    call TriggerClearConditions(ZSi)
    call TriggerAddCondition(ZSi, Condition(pjw))
    if not TriggerEvaluate(ZSi) then
        call tNr("Could not initialize package CustomHero.", "when calling error in CustomHero, line 1")
    endif
    call TriggerClearConditions(ZSi)
    call TriggerAddCondition(ZSi, Condition(ejw))
    if not TriggerEvaluate(ZSi) then
        call tNr("Could not initialize package CustomLocation.", "when calling error in CustomLocation, line 13")
    endif
    call TriggerClearConditions(ZSi)
    call TriggerAddCondition(ZSi, Condition(qjw))
    if not TriggerEvaluate(ZSi) then
        call tNr("Could not initialize package LocationRegistry.", "when calling error in LocationRegistry, line 12")
    endif
    call TriggerClearConditions(ZSi)
    call TriggerAddCondition(ZSi, Condition(ajw))
    if not TriggerEvaluate(ZSi) then
        call tNr("Could not initialize package CustomPlayer.", "when calling error in CustomPlayer, line 15")
    endif
    call TriggerClearConditions(ZSi)
    call TriggerAddCondition(ZSi, Condition(njw))
    if not TriggerEvaluate(ZSi) then
        call tNr("Could not initialize package PlayerRegistry.", "when calling error in PlayerRegistry, line 12")
    endif
    call TriggerClearConditions(ZSi)
    call TriggerAddCondition(ZSi, Condition(djw))
    if not TriggerEvaluate(ZSi) then
        call tNr("Could not initialize package SpellIconWithGif.", "when calling error in SpellIconWithGif, line 1")
    endif
    call TriggerClearConditions(ZSi)
    call TriggerAddCondition(ZSi, Condition(fjw))
    if not TriggerEvaluate(ZSi) then
        call tNr("Could not initialize package ChannelAbilityPreset.", "when calling error in ChannelAbilityPreset, line 1")
    endif
    call TriggerClearConditions(ZSi)
    call TriggerAddCondition(ZSi, Condition(Rjw))
    if not TriggerEvaluate(ZSi) then
        call tNr("Could not initialize package AbilityMagicIcon.", "when calling error in AbilityMagicIcon, line 12")
    endif
    call TriggerClearConditions(ZSi)
    call TriggerAddCondition(ZSi, Condition(Tjw))
    if not TriggerEvaluate(ZSi) then
        call tNr("Could not initialize package GeneralUtils.", "when calling error in GeneralUtils, line 15")
    endif
    call TriggerClearConditions(ZSi)
    call TriggerAddCondition(ZSi, Condition(Yjw))
    if not TriggerEvaluate(ZSi) then
        call tNr("Could not initialize package TerrainUtils.", "when calling error in TerrainUtils, line 1")
    endif
    call TriggerClearConditions(ZSi)
    call TriggerAddCondition(ZSi, Condition(Gjw))
    if not TriggerEvaluate(ZSi) then
        call tNr("Could not initialize package PhysicsConstants.", "when calling error in PhysicsConstants, line 1")
    endif
    call TriggerClearConditions(ZSi)
    call TriggerAddCondition(ZSi, Condition(gjw))
    if not TriggerEvaluate(ZSi) then
        call tNr("Could not initialize package DmgMod.", "when calling error in DmgMod, line 1")
    endif
    call TriggerClearConditions(ZSi)
    call TriggerAddCondition(ZSi, Condition(hjw))
    if not TriggerEvaluate(ZSi) then
        call tNr("Could not initialize package StringUtils.", "when calling error in StringUtils, line 1")
    endif
    call TriggerClearConditions(ZSi)
    call TriggerAddCondition(ZSi, Condition(Fjw))
    if not TriggerEvaluate(ZSi) then
        call tNr("Could not initialize package FText.", "when calling error in FText, line 1")
    endif
    call TriggerClearConditions(ZSi)
    call TriggerAddCondition(ZSi, Condition(kjw))
    if not TriggerEvaluate(ZSi) then
        call tNr("Could not initialize package Frentity.", "when calling error in Frentity, line 1")
    endif
    call TriggerClearConditions(ZSi)
    call TriggerAddCondition(ZSi, Condition(jjw))
    if not TriggerEvaluate(ZSi) then
        call tNr("Could not initialize package Entity.", "when calling error in Entity, line 1")
    endif
    call TriggerClearConditions(ZSi)
    call TriggerAddCondition(ZSi, Condition(xjw))
    if not TriggerEvaluate(ZSi) then
        call tNr("Could not initialize package Squares.", "when calling error in Squares, line 1")
    endif
    call TriggerClearConditions(ZSi)
    call TriggerAddCondition(ZSi, Condition(vjw))
    if not TriggerEvaluate(ZSi) then
        call tNr("Could not initialize package Buff.", "when calling error in Buff, line 1")
    endif
    call TriggerClearConditions(ZSi)
    call TriggerAddCondition(ZSi, Condition(mjw))
    if not TriggerEvaluate(ZSi) then
        call tNr("Could not initialize package PlayerGoldAndShardLimit.", "when calling error in PlayerGoldAndShardLimit, line 1")
    endif
    call TriggerClearConditions(ZSi)
    call TriggerAddCondition(ZSi, Condition(Qjw))
    if not TriggerEvaluate(ZSi) then
        call tNr("Could not initialize package Imp3DragonFortress.", "when calling error in Imp3DragonFortress, line 1")
    endif
    call TriggerClearConditions(ZSi)
    call TriggerAddCondition(ZSi, Condition(Wjw))
    if not TriggerEvaluate(ZSi) then
        call tNr("Could not initialize package Orders.", "when calling error in Orders, line 1")
    endif
    call TriggerClearConditions(ZSi)
    call TriggerAddCondition(ZSi, Condition(Ejw))
    if not TriggerEvaluate(ZSi) then
        call tNr("Could not initialize package Spells_Checks.", "when calling error in Spells_Checks, line 1")
    endif
    call TriggerClearConditions(ZSi)
    call TriggerAddCondition(ZSi, Condition(Zjw))
    if not TriggerEvaluate(ZSi) then
        call tNr("Could not initialize package LockBosses.", "when calling error in LockBosses, line 1")
    endif
    call TriggerClearConditions(ZSi)
    call TriggerAddCondition(ZSi, Condition(Ujw))
    if not TriggerEvaluate(ZSi) then
        call tNr("Could not initialize package ToggleEffectProcs.", "when calling error in ToggleEffectProcs, line 1")
    endif
    call TriggerClearConditions(ZSi)
    call TriggerAddCondition(ZSi, Condition(Ijw))
    if not TriggerEvaluate(ZSi) then
        call tNr("Could not initialize package Hope_Effect.", "when calling error in Hope_Effect, line 1")
    endif
    call TriggerClearConditions(ZSi)
    call TriggerAddCondition(ZSi, Condition(Pjw))
    if not TriggerEvaluate(ZSi) then
        call tNr("Could not initialize package Boss_Abilities.", "when calling error in Boss_Abilities, line 1")
    endif
    call TriggerClearConditions(ZSi)
    call TriggerAddCondition(ZSi, Condition(Ajw))
    if not TriggerEvaluate(ZSi) then
        call tNr("Could not initialize package InstantDummyCaster.", "when calling error in InstantDummyCaster, line 1")
    endif
    call TriggerClearConditions(ZSi)
    call TriggerAddCondition(ZSi, Condition(Djw))
    if not TriggerEvaluate(ZSi) then
        call tNr("Could not initialize package StatusHandler.", "when calling error in StatusHandler, line 8")
    endif
    call TriggerClearConditions(ZSi)
    call TriggerAddCondition(ZSi, Condition(Hjw))
    if not TriggerEvaluate(ZSi) then
        call tNr("Could not initialize package Imp4.", "when calling error in Imp4, line 1")
    endif
    call TriggerClearConditions(ZSi)
    call TriggerAddCondition(ZSi, Condition(Jjw))
    if not TriggerEvaluate(ZSi) then
        call tNr("Could not initialize package StringDataUtils.", "when calling error in StringDataUtils, line 12")
    endif
    call TriggerClearConditions(ZSi)
    call TriggerAddCondition(ZSi, Condition(Kjw))
    if not TriggerEvaluate(ZSi) then
        call tNr("Could not initialize package FateDestinyUnlocker.", "when calling error in FateDestinyUnlocker, line 1")
    endif
    call TriggerClearConditions(ZSi)
    call TriggerAddCondition(ZSi, Condition(Ljw))
    if not TriggerEvaluate(ZSi) then
        call tNr("Could not initialize package AttachmentPoints.", "when calling error in AttachmentPoints, line 1")
    endif
    call TriggerClearConditions(ZSi)
    call TriggerAddCondition(ZSi, Condition(Xjw))
    if not TriggerEvaluate(ZSi) then
        call tNr("Could not initialize package Items_Pickup_Drop.", "when calling error in Items_Pickup_Drop, line 1")
    endif
    call TriggerClearConditions(ZSi)
    call TriggerAddCondition(ZSi, Condition(Cjw))
    if not TriggerEvaluate(ZSi) then
        call tNr("Could not initialize package DungeonCmds.", "when calling error in DungeonCmds, line 1")
    endif
    call TriggerClearConditions(ZSi)
    call TriggerAddCondition(ZSi, Condition(Vjw))
    if not TriggerEvaluate(ZSi) then
        call tNr("Could not initialize package NpcTalking.", "when calling error in NpcTalking, line 8")
    endif
    call TriggerClearConditions(ZSi)
    call TriggerAddCondition(ZSi, Condition(Bjw))
    if not TriggerEvaluate(ZSi) then
        call tNr("Could not initialize package Archsage_WhiteWhizard_ArcaneManaBond.", "when calling error in Archsage_WhiteWhizard_ArcaneManaBond, line 1")
    endif
    call TriggerClearConditions(ZSi)
    call TriggerAddCondition(ZSi, Condition(Njw))
    if not TriggerEvaluate(ZSi) then
        call tNr("Could not initialize package Champion_DamageBonus.", "when calling error in Champion_DamageBonus, line 1")
    endif
    call TriggerClearConditions(ZSi)
    call TriggerAddCondition(ZSi, Condition(Mjw))
    if not TriggerEvaluate(ZSi) then
        call tNr("Could not initialize package Avenger_Champ_MS_RM_Taunt.", "when calling error in Avenger_Champ_MS_RM_Taunt, line 1")
    endif
    call TriggerClearConditions(ZSi)
    call TriggerAddCondition(ZSi, Condition(wxw))
    if not TriggerEvaluate(ZSi) then
        call tNr("Could not initialize package PVP_SpellReduction.", "when calling error in PVP_SpellReduction, line 1")
    endif
    call TriggerClearConditions(ZSi)
    call TriggerAddCondition(ZSi, Condition(uxw))
    if not TriggerEvaluate(ZSi) then
        call tNr("Could not initialize package Voidless_defs.", "when calling error in Voidless_defs, line 1")
    endif
    call TriggerClearConditions(ZSi)
    call TriggerAddCondition(ZSi, Condition(rxw))
    if not TriggerEvaluate(ZSi) then
        call tNr("Could not initialize package PVP.", "when calling error in PVP, line 1")
    endif
    call TriggerClearConditions(ZSi)
    call TriggerAddCondition(ZSi, Condition(sxw))
    if not TriggerEvaluate(ZSi) then
        call tNr("Could not initialize package Avenger_Sacrifice.", "when calling error in Avenger_Sacrifice, line 1")
    endif
    call TriggerClearConditions(ZSi)
    call TriggerAddCondition(ZSi, Condition(txw))
    if not TriggerEvaluate(ZSi) then
        call tNr("Could not initialize package BigNum.", "when calling error in BigNum, line 1")
    endif
    call TriggerClearConditions(ZSi)
    call TriggerAddCondition(ZSi, Condition(ixw))
    if not TriggerEvaluate(ZSi) then
        call tNr("Could not initialize package BigString.", "when calling error in BigString, line 1")
    endif
    call TriggerClearConditions(ZSi)
    call TriggerAddCondition(ZSi, Condition(Sxw))
    if not TriggerEvaluate(ZSi) then
        call tNr("Could not initialize package ByteAndBitOperations.", "when calling error in ByteAndBitOperations, line 12")
    endif
    call TriggerClearConditions(ZSi)
    call TriggerAddCondition(ZSi, Condition(cxw))
    if not TriggerEvaluate(ZSi) then
        call tNr("Could not initialize package Champion_AsuraStrike.", "when calling error in Champion_AsuraStrike, line 1")
    endif
    call TriggerClearConditions(ZSi)
    call TriggerAddCondition(ZSi, Condition(oxw))
    if not TriggerEvaluate(ZSi) then
        call tNr("Could not initialize package Champion_Smite.", "when calling error in Champion_Smite, line 1")
    endif
    call TriggerClearConditions(ZSi)
    call TriggerAddCondition(ZSi, Condition(Oxw))
    if not TriggerEvaluate(ZSi) then
        call tNr("Could not initialize package Critters.", "when calling error in Critters, line 1")
    endif
    call TriggerClearConditions(ZSi)
    call TriggerAddCondition(ZSi, Condition(lxw))
    if not TriggerEvaluate(ZSi) then
        call tNr("Could not initialize package DamageDetection.", "when calling error in DamageDetection, line 1")
    endif
    call TriggerClearConditions(ZSi)
    call TriggerAddCondition(ZSi, Condition(bxw))
    if not TriggerEvaluate(ZSi) then
        call tNr("Could not initialize package MH_ArmorReduction.", "when calling error in MH_ArmorReduction, line 1")
    endif
    call TriggerClearConditions(ZSi)
    call TriggerAddCondition(ZSi, Condition(yxw))
    if not TriggerEvaluate(ZSi) then
        call tNr("Could not initialize package MonsterHunter_Weakness.", "when calling error in MonsterHunter_Weakness, line 1")
    endif
    call TriggerClearConditions(ZSi)
    call TriggerAddCondition(ZSi, Condition(pxw))
    if not TriggerEvaluate(ZSi) then
        call tNr("Could not initialize package Dat_UltiIllusions.", "when calling error in Dat_UltiIllusions, line 1")
    endif
    call TriggerClearConditions(ZSi)
    call TriggerAddCondition(ZSi, Condition(exw))
    if not TriggerEvaluate(ZSi) then
        call tNr("Could not initialize package GrandTemplar_PsiDestruction.", "when calling error in GrandTemplar_PsiDestruction, line 1")
    endif
    call TriggerClearConditions(ZSi)
    call TriggerAddCondition(ZSi, Condition(qxw))
    if not TriggerEvaluate(ZSi) then
        call tNr("Could not initialize package Voidless_extensions.", "when calling error in Voidless_extensions, line 1")
    endif
    call TriggerClearConditions(ZSi)
    call TriggerAddCondition(ZSi, Condition(axw))
    if not TriggerEvaluate(ZSi) then
        call tNr("Could not initialize package RevivalLocations.", "when calling error in RevivalLocations, line 1")
    endif
    call TriggerClearConditions(ZSi)
    call TriggerAddCondition(ZSi, Condition(nxw))
    if not TriggerEvaluate(ZSi) then
        call tNr("Could not initialize package Repick.", "when calling error in Repick, line 1")
    endif
    call TriggerClearConditions(ZSi)
    call TriggerAddCondition(ZSi, Condition(dxw))
    if not TriggerEvaluate(ZSi) then
        call tNr("Could not initialize package NpcHandler.", "when calling error in NpcHandler, line 1")
    endif
    call TriggerClearConditions(ZSi)
    call TriggerAddCondition(ZSi, Condition(fxw))
    if not TriggerEvaluate(ZSi) then
        call tNr("Could not initialize package JobAdvancementQuestHandler.", "when calling error in JobAdvancementQuestHandler, line 1")
    endif
    call TriggerClearConditions(ZSi)
    call TriggerAddCondition(ZSi, Condition(Rxw))
    if not TriggerEvaluate(ZSi) then
        call tNr("Could not initialize package Hiero_Shield.", "when calling error in Hiero_Shield, line 1")
    endif
    call TriggerClearConditions(ZSi)
    call TriggerAddCondition(ZSi, Condition(Txw))
    if not TriggerEvaluate(ZSi) then
        call tNr("Could not initialize package Voidless_mechanics.", "when calling error in Voidless_mechanics, line 1")
    endif
    call TriggerClearConditions(ZSi)
    call TriggerAddCondition(ZSi, Condition(Yxw))
    if not TriggerEvaluate(ZSi) then
        call tNr("Could not initialize package Voidless_infotags.", "when calling error in Voidless_infotags, line 1")
    endif
    call TriggerClearConditions(ZSi)
    call TriggerAddCondition(ZSi, Condition(Gxw))
    if not TriggerEvaluate(ZSi) then
        call tNr("Could not initialize package Voidless.", "when calling error in Voidless, line 1")
    endif
    call TriggerClearConditions(ZSi)
    call TriggerAddCondition(ZSi, Condition(gxw))
    if not TriggerEvaluate(ZSi) then
        call tNr("Could not initialize package DDS.", "when calling error in DDS, line 1")
    endif
    call TriggerClearConditions(ZSi)
    call TriggerAddCondition(ZSi, Condition(hxw))
    if not TriggerEvaluate(ZSi) then
        call tNr("Could not initialize package DebugInfo.", "when calling error in DebugInfo, line 1")
    endif
    call TriggerClearConditions(ZSi)
    call TriggerAddCondition(ZSi, Condition(Fxw))
    if not TriggerEvaluate(ZSi) then
        call tNr("Could not initialize package EffectCleaner.", "when calling error in EffectCleaner, line 1")
    endif
    call TriggerClearConditions(ZSi)
    call TriggerAddCondition(ZSi, Condition(kxw))
    if not TriggerEvaluate(ZSi) then
        call tNr("Could not initialize package Encoder.", "when calling error in Encoder, line 1")
    endif
    call TriggerClearConditions(ZSi)
    call TriggerAddCondition(ZSi, Condition(jxw))
    if not TriggerEvaluate(ZSi) then
        call tNr("Could not initialize package EnterLeaveRegionTrigger.", "when calling error in EnterLeaveRegionTrigger, line 12")
    endif
    call TriggerClearConditions(ZSi)
    call TriggerAddCondition(ZSi, Condition(xxw))
    if not TriggerEvaluate(ZSi) then
        call tNr("Could not initialize package EnterLeaveRegionTriggerRegistry.", "when calling error in EnterLeaveRegionTriggerRegistry, line 12")
    endif
    call TriggerClearConditions(ZSi)
    call TriggerAddCondition(ZSi, Condition(vxw))
    if not TriggerEvaluate(ZSi) then
        call tNr("Could not initialize package FHealer_SingleTargetHeal.", "when calling error in FHealer_SingleTargetHeal, line 1")
    endif
    call TriggerClearConditions(ZSi)
    call TriggerAddCondition(ZSi, Condition(mxw))
    if not TriggerEvaluate(ZSi) then
        call tNr("Could not initialize package Faith_Effect.", "when calling error in Faith_Effect, line 1")
    endif
    call TriggerClearConditions(ZSi)
    call TriggerAddCondition(ZSi, Condition(Qxw))
    if not TriggerEvaluate(ZSi) then
        call tNr("Could not initialize package Fate_Effect.", "when calling error in Fate_Effect, line 1")
    endif
    call TriggerClearConditions(ZSi)
    call TriggerAddCondition(ZSi, Condition(Wxw))
    if not TriggerEvaluate(ZSi) then
        call tNr("Could not initialize package Fishing.", "when calling error in Fishing, line 1")
    endif
    call TriggerClearConditions(ZSi)
    call TriggerAddCondition(ZSi, Condition(Exw))
    if not TriggerEvaluate(ZSi) then
        call tNr("Could not initialize package General_EnableAbilitiesLater.", "when calling error in General_EnableAbilitiesLater, line 1")
    endif
    call TriggerClearConditions(ZSi)
    call TriggerAddCondition(ZSi, Condition(Zxw))
    if not TriggerEvaluate(ZSi) then
        call tNr("Could not initialize package GenericUnitRespawn.", "when calling error in GenericUnitRespawn, line 1")
    endif
    call TriggerClearConditions(ZSi)
    call TriggerAddCondition(ZSi, Condition(Uxw))
    if not TriggerEvaluate(ZSi) then
        call tNr("Could not initialize package HeroRevive.", "when calling error in HeroRevive, line 1")
    endif
    call TriggerClearConditions(ZSi)
    call TriggerAddCondition(ZSi, Condition(Ixw))
    if not TriggerEvaluate(ZSi) then
        call tNr("Could not initialize package HeroXP_Reduction.", "when calling error in HeroXP_Reduction, line 1")
    endif
    call TriggerClearConditions(ZSi)
    call TriggerAddCondition(ZSi, Condition(Pxw))
    if not TriggerEvaluate(ZSi) then
        call tNr("Could not initialize package Hiero_Resurrection.", "when calling error in Hiero_Resurrection, line 1")
    endif
    call TriggerClearConditions(ZSi)
    call TriggerAddCondition(ZSi, Condition(Axw))
    if not TriggerEvaluate(ZSi) then
        call tNr("Could not initialize package ImageUtils.", "when calling error in ImageUtils, line 8")
    endif
    call TriggerClearConditions(ZSi)
    call TriggerAddCondition(ZSi, Condition(Dxw))
    if not TriggerEvaluate(ZSi) then
        call tNr("Could not initialize package Imp1_InitCooldown.", "when calling error in Imp1_InitCooldown, line 1")
    endif
    call TriggerClearConditions(ZSi)
    call TriggerAddCondition(ZSi, Condition(Hxw))
    if not TriggerEvaluate(ZSi) then
        call tNr("Could not initialize package Imp2.", "when calling error in Imp2, line 1")
    endif
    call TriggerClearConditions(ZSi)
    call TriggerAddCondition(ZSi, Condition(Jxw))
    if not TriggerEvaluate(ZSi) then
        call tNr("Could not initialize package Inspirit_Overvelde.", "when calling error in Inspirit_Overvelde, line 1")
    endif
    call TriggerClearConditions(ZSi)
    call TriggerAddCondition(ZSi, Condition(Kxw))
    if not TriggerEvaluate(ZSi) then
        call tNr("Could not initialize package Items_FishingRod_Upgrade.", "when calling error in Items_FishingRod_Upgrade, line 1")
    endif
    call TriggerClearConditions(ZSi)
    call TriggerAddCondition(ZSi, Condition(Lxw))
    if not TriggerEvaluate(ZSi) then
        call tNr("Could not initialize package LZW.", "when calling error in LZW, line 1")
    endif
    call TriggerClearConditions(ZSi)
    call TriggerAddCondition(ZSi, Condition(Xxw))
    if not TriggerEvaluate(ZSi) then
        call tNr("Could not initialize package Json.", "when calling error in Json, line 1")
    endif
    call TriggerClearConditions(ZSi)
    call TriggerAddCondition(ZSi, Condition(Cxw))
    if not TriggerEvaluate(ZSi) then
        call tNr("Could not initialize package JsonParser.", "when calling error in JsonParser, line 1")
    endif
    call TriggerClearConditions(ZSi)
    call TriggerAddCondition(ZSi, Condition(Vxw))
    if not TriggerEvaluate(ZSi) then
        call tNr("Could not initialize package NoviceMaxLevel.", "when calling error in NoviceMaxLevel, line 1")
    endif
    call TriggerClearConditions(ZSi)
    call TriggerAddCondition(ZSi, Condition(Bxw))
    if not TriggerEvaluate(ZSi) then
        call tNr("Could not initialize package PA_Assassinate.", "when calling error in PA_Assassinate, line 1")
    endif
    call TriggerClearConditions(ZSi)
    call TriggerAddCondition(ZSi, Condition(Nxw))
    if not TriggerEvaluate(ZSi) then
        call tNr("Could not initialize package SuperSaiyan.", "when calling error in SuperSaiyan, line 9")
    endif
    call TriggerClearConditions(ZSi)
    call TriggerAddCondition(ZSi, Condition(Mxw))
    if not TriggerEvaluate(ZSi) then
        call tNr("Could not initialize package PlayerCommands.", "when calling error in PlayerCommands, line 1")
    endif
    call TriggerClearConditions(ZSi)
    call TriggerAddCondition(ZSi, Condition(wvw))
    if not TriggerEvaluate(ZSi) then
        call tNr("Could not initialize package Portals_CameraPan.", "when calling error in Portals_CameraPan, line 1")
    endif
    call TriggerClearConditions(ZSi)
    call TriggerAddCondition(ZSi, Condition(uvw))
    if not TriggerEvaluate(ZSi) then
        call tNr("Could not initialize package ProfWitcher_FinalGroupStyle.", "when calling error in ProfWitcher_FinalGroupStyle, line 1")
    endif
    call TriggerClearConditions(ZSi)
    call TriggerAddCondition(ZSi, Condition(rvw))
    if not TriggerEvaluate(ZSi) then
        call tNr("Could not initialize package ProfWitcher_Ulti.", "when calling error in ProfWitcher_Ulti, line 1")
    endif
    call TriggerClearConditions(ZSi)
    call TriggerAddCondition(ZSi, Condition(svw))
    if not TriggerEvaluate(ZSi) then
        call tNr("Could not initialize package Prophetess_Sanctus_HealingWave.", "when calling error in Prophetess_Sanctus_HealingWave, line 1")
    endif
    call TriggerClearConditions(ZSi)
    call TriggerAddCondition(ZSi, Condition(tvw))
    if not TriggerEvaluate(ZSi) then
        call tNr("Could not initialize package WorldBoss_hints.", "when calling error in WorldBoss_hints, line 1")
    endif
    call TriggerClearConditions(ZSi)
    call TriggerAddCondition(ZSi, Condition(ivw))
    if not TriggerEvaluate(ZSi) then
        call tNr("Could not initialize package WorldBoss_quests.", "when calling error in WorldBoss_quests, line 1")
    endif
    call TriggerClearConditions(ZSi)
    call TriggerAddCondition(ZSi, Condition(Svw))
    if not TriggerEvaluate(ZSi) then
        call tNr("Could not initialize package WorldBoss.", "when calling error in WorldBoss, line 1")
    endif
    call TriggerClearConditions(ZSi)
    call TriggerAddCondition(ZSi, Condition(cvw))
    if not TriggerEvaluate(ZSi) then
        call tNr("Could not initialize package Quests_PartyShare.", "when calling error in Quests_PartyShare, line 1")
    endif
    call TriggerClearConditions(ZSi)
    call TriggerAddCondition(ZSi, Condition(ovw))
    if not TriggerEvaluate(ZSi) then
        call tNr("Could not initialize package Reforged_Init.", "when calling error in Reforged_Init, line 1")
    endif
    call TriggerClearConditions(ZSi)
    call TriggerAddCondition(ZSi, Condition(Ovw))
    if not TriggerEvaluate(ZSi) then
        call tNr("Could not initialize package Reforged_Skins.", "when calling error in Reforged_Skins, line 1")
    endif
    call TriggerClearConditions(ZSi)
    call TriggerAddCondition(ZSi, Condition(lvw))
    if not TriggerEvaluate(ZSi) then
        call tNr("Could not initialize package Reinforce_Effect.", "when calling error in Reinforce_Effect, line 1")
    endif
    call TriggerClearConditions(ZSi)
    call TriggerAddCondition(ZSi, Condition(bvw))
    if not TriggerEvaluate(ZSi) then
        call tNr("Could not initialize package RespawnHeroesEnterReg.", "when calling error in RespawnHeroesEnterReg, line 12")
    endif
    call TriggerClearConditions(ZSi)
    call TriggerAddCondition(ZSi, Condition(yvw))
    if not TriggerEvaluate(ZSi) then
        call tNr("Could not initialize package Rh_Effect.", "when calling error in Rh_Effect, line 1")
    endif
    call TriggerClearConditions(ZSi)
    call TriggerAddCondition(ZSi, Condition(pvw))
    if not TriggerEvaluate(ZSi) then
        call tNr("Could not initialize package RuneMaster_Metamorphs.", "when calling error in RuneMaster_Metamorphs, line 1")
    endif
    call TriggerClearConditions(ZSi)
    call TriggerAddCondition(ZSi, Condition(evw))
    if not TriggerEvaluate(ZSi) then
        call tNr("Could not initialize package Sniper_SnipersFocus.", "when calling error in Sniper_SnipersFocus, line 1")
    endif
    call TriggerClearConditions(ZSi)
    call TriggerAddCondition(ZSi, Condition(qvw))
    if not TriggerEvaluate(ZSi) then
        call tNr("Could not initialize package SpawnNeutralUnits.", "when calling error in SpawnNeutralUnits, line 1")
    endif
    call TriggerClearConditions(ZSi)
    call TriggerAddCondition(ZSi, Condition(avw))
    if not TriggerEvaluate(ZSi) then
        call tNr("Could not initialize package SqueakyQuestReward.", "when calling error in SqueakyQuestReward, line 1")
    endif
    call TriggerClearConditions(ZSi)
    call TriggerAddCondition(ZSi, Condition(nvw))
    if not TriggerEvaluate(ZSi) then
        call tNr("Could not initialize package Stalker_Backstab.", "when calling error in Stalker_Backstab, line 1")
    endif
    call TriggerClearConditions(ZSi)
    call TriggerAddCondition(ZSi, Condition(dvw))
    if not TriggerEvaluate(ZSi) then
        call tNr("Could not initialize package Stalker_Stalk.", "when calling error in Stalker_Stalk, line 1")
    endif
    call TriggerClearConditions(ZSi)
    call TriggerAddCondition(ZSi, Condition(fvw))
    if not TriggerEvaluate(ZSi) then
        call tNr("Could not initialize package StatusHandlerConfig.", "when calling error in StatusHandlerConfig, line 1")
    endif
    call TriggerClearConditions(ZSi)
    call TriggerAddCondition(ZSi, Condition(Rvw))
    if not TriggerEvaluate(ZSi) then
        call tNr("Could not initialize package Summoner_LightningStorm.", "when calling error in Summoner_LightningStorm, line 1")
    endif
    call TriggerClearConditions(ZSi)
    call TriggerAddCondition(ZSi, Condition(Tvw))
    if not TriggerEvaluate(ZSi) then
        call tNr("Could not initialize package Summoner_Tornado.", "when calling error in Summoner_Tornado, line 1")
    endif
    call TriggerClearConditions(ZSi)
    call TriggerAddCondition(ZSi, Condition(Yvw))
    if not TriggerEvaluate(ZSi) then
        call tNr("Could not initialize package Tooth_Effect.", "when calling error in Tooth_Effect, line 1")
    endif
    call TriggerClearConditions(ZSi)
    call TriggerAddCondition(ZSi, Condition(Gvw))
    if not TriggerEvaluate(ZSi) then
        call tNr("Could not initialize package VertexCalculator.", "when calling error in VertexCalculator, line 11")
    endif
    call TriggerClearConditions(ZSi)
    call TriggerAddCondition(ZSi, Condition(gvw))
    if not TriggerEvaluate(ZSi) then
        call tNr("Could not initialize package Voidless_triggers.", "when calling error in Voidless_triggers, line 1")
    endif
    call TriggerClearConditions(ZSi)
    call TriggerAddCondition(ZSi, Condition(hvw))
    if not TriggerEvaluate(ZSi) then
        call tNr("Could not initialize package Whirlwind_Avatar.", "when calling error in Whirlwind_Avatar, line 1")
    endif
    call TriggerClearConditions(ZSi)
    call TriggerAddCondition(ZSi, Condition(Fvw))
    if not TriggerEvaluate(ZSi) then
        call tNr("Could not initialize package Whirlwind_Effect.", "when calling error in Whirlwind_Effect, line 1")
    endif
    call TriggerClearConditions(ZSi)
    call DestroyTrigger(ZSi)
    set WSi = null
    set ZSi = null
endfunction
function jgS takes nothing returns nothing
    call SetPlayerTeam(Player($0000000B), $00000000)
    call SetPlayerTeam(Player($00000000), $00000001)
    call SetPlayerState(Player($00000000), PLAYER_STATE_ALLIED_VICTORY, $00000001)
    call SetPlayerTeam(Player($00000001), $00000001)
    call SetPlayerState(Player($00000001), PLAYER_STATE_ALLIED_VICTORY, $00000001)
    call SetPlayerTeam(Player($00000002), $00000001)
    call SetPlayerState(Player($00000002), PLAYER_STATE_ALLIED_VICTORY, $00000001)
    call SetPlayerTeam(Player($00000003), $00000001)
    call SetPlayerState(Player($00000003), PLAYER_STATE_ALLIED_VICTORY, $00000001)
    call SetPlayerTeam(Player($00000004), $00000001)
    call SetPlayerState(Player($00000004), PLAYER_STATE_ALLIED_VICTORY, $00000001)
    call SetPlayerTeam(Player($00000005), $00000001)
    call SetPlayerState(Player($00000005), PLAYER_STATE_ALLIED_VICTORY, $00000001)
    call SetPlayerTeam(Player($00000006), $00000001)
    call SetPlayerState(Player($00000006), PLAYER_STATE_ALLIED_VICTORY, $00000001)
    call SetPlayerTeam(Player($00000007), $00000001)
    call SetPlayerState(Player($00000007), PLAYER_STATE_ALLIED_VICTORY, $00000001)
    call SetPlayerTeam(Player($00000008), $00000001)
    call SetPlayerState(Player($00000008), PLAYER_STATE_ALLIED_VICTORY, $00000001)
    call SetPlayerTeam(Player($00000009), $00000001)
    call SetPlayerState(Player($00000009), PLAYER_STATE_ALLIED_VICTORY, $00000001)
    call SetPlayerAllianceStateAllyBJ(Player($00000001), Player($00000002), true)
    call SetPlayerAllianceStateAllyBJ(Player($00000001), Player($00000003), true)
    call SetPlayerAllianceStateAllyBJ(Player($00000001), Player($00000004), true)
    call SetPlayerAllianceStateAllyBJ(Player($00000001), Player($00000005), true)
    call SetPlayerAllianceStateAllyBJ(Player($00000001), Player($00000006), true)
    call SetPlayerAllianceStateAllyBJ(Player($00000001), Player($00000007), true)
    call SetPlayerAllianceStateAllyBJ(Player($00000001), Player($00000008), true)
    call SetPlayerAllianceStateAllyBJ(Player($00000001), Player($00000009), true)
    call SetPlayerAllianceStateAllyBJ(Player($00000002), Player($00000001), true)
    call SetPlayerAllianceStateAllyBJ(Player($00000002), Player($00000003), true)
    call SetPlayerAllianceStateAllyBJ(Player($00000002), Player($00000004), true)
    call SetPlayerAllianceStateAllyBJ(Player($00000002), Player($00000005), true)
    call SetPlayerAllianceStateAllyBJ(Player($00000002), Player($00000006), true)
    call SetPlayerAllianceStateAllyBJ(Player($00000002), Player($00000007), true)
    call SetPlayerAllianceStateAllyBJ(Player($00000002), Player($00000008), true)
    call SetPlayerAllianceStateAllyBJ(Player($00000002), Player($00000009), true)
    call SetPlayerAllianceStateAllyBJ(Player($00000003), Player($00000001), true)
    call SetPlayerAllianceStateAllyBJ(Player($00000003), Player($00000002), true)
    call SetPlayerAllianceStateAllyBJ(Player($00000003), Player($00000004), true)
    call SetPlayerAllianceStateAllyBJ(Player($00000003), Player($00000005), true)
    call SetPlayerAllianceStateAllyBJ(Player($00000003), Player($00000006), true)
    call SetPlayerAllianceStateAllyBJ(Player($00000003), Player($00000007), true)
    call SetPlayerAllianceStateAllyBJ(Player($00000003), Player($00000008), true)
    call SetPlayerAllianceStateAllyBJ(Player($00000003), Player($00000009), true)
    call SetPlayerAllianceStateAllyBJ(Player($00000004), Player($00000001), true)
    call SetPlayerAllianceStateAllyBJ(Player($00000004), Player($00000002), true)
    call SetPlayerAllianceStateAllyBJ(Player($00000004), Player($00000003), true)
    call SetPlayerAllianceStateAllyBJ(Player($00000004), Player($00000005), true)
    call SetPlayerAllianceStateAllyBJ(Player($00000004), Player($00000006), true)
    call SetPlayerAllianceStateAllyBJ(Player($00000004), Player($00000007), true)
    call SetPlayerAllianceStateAllyBJ(Player($00000004), Player($00000008), true)
    call SetPlayerAllianceStateAllyBJ(Player($00000004), Player($00000009), true)
    call SetPlayerAllianceStateAllyBJ(Player($00000005), Player($00000001), true)
    call SetPlayerAllianceStateAllyBJ(Player($00000005), Player($00000002), true)
    call SetPlayerAllianceStateAllyBJ(Player($00000005), Player($00000003), true)
    call SetPlayerAllianceStateAllyBJ(Player($00000005), Player($00000004), true)
    call SetPlayerAllianceStateAllyBJ(Player($00000005), Player($00000006), true)
    call SetPlayerAllianceStateAllyBJ(Player($00000005), Player($00000007), true)
    call SetPlayerAllianceStateAllyBJ(Player($00000005), Player($00000008), true)
    call SetPlayerAllianceStateAllyBJ(Player($00000005), Player($00000009), true)
    call SetPlayerAllianceStateAllyBJ(Player($00000006), Player($00000001), true)
    call SetPlayerAllianceStateAllyBJ(Player($00000006), Player($00000002), true)
    call SetPlayerAllianceStateAllyBJ(Player($00000006), Player($00000003), true)
    call SetPlayerAllianceStateAllyBJ(Player($00000006), Player($00000004), true)
    call SetPlayerAllianceStateAllyBJ(Player($00000006), Player($00000005), true)
    call SetPlayerAllianceStateAllyBJ(Player($00000006), Player($00000007), true)
    call SetPlayerAllianceStateAllyBJ(Player($00000006), Player($00000008), true)
    call SetPlayerAllianceStateAllyBJ(Player($00000006), Player($00000009), true)
    call SetPlayerAllianceStateAllyBJ(Player($00000007), Player($00000001), true)
    call SetPlayerAllianceStateAllyBJ(Player($00000007), Player($00000002), true)
    call SetPlayerAllianceStateAllyBJ(Player($00000007), Player($00000003), true)
    call SetPlayerAllianceStateAllyBJ(Player($00000007), Player($00000004), true)
    call SetPlayerAllianceStateAllyBJ(Player($00000007), Player($00000005), true)
    call SetPlayerAllianceStateAllyBJ(Player($00000007), Player($00000006), true)
    call SetPlayerAllianceStateAllyBJ(Player($00000007), Player($00000008), true)
    call SetPlayerAllianceStateAllyBJ(Player($00000007), Player($00000009), true)
    call SetPlayerAllianceStateAllyBJ(Player($00000008), Player($00000001), true)
    call SetPlayerAllianceStateAllyBJ(Player($00000008), Player($00000002), true)
    call SetPlayerAllianceStateAllyBJ(Player($00000008), Player($00000003), true)
    call SetPlayerAllianceStateAllyBJ(Player($00000008), Player($00000004), true)
    call SetPlayerAllianceStateAllyBJ(Player($00000008), Player($00000005), true)
    call SetPlayerAllianceStateAllyBJ(Player($00000008), Player($00000006), true)
    call SetPlayerAllianceStateAllyBJ(Player($00000008), Player($00000007), true)
    call SetPlayerAllianceStateAllyBJ(Player($00000008), Player($00000009), true)
    call SetPlayerAllianceStateAllyBJ(Player($00000009), Player($00000001), true)
    call SetPlayerAllianceStateAllyBJ(Player($00000009), Player($00000002), true)
    call SetPlayerAllianceStateAllyBJ(Player($00000009), Player($00000003), true)
    call SetPlayerAllianceStateAllyBJ(Player($00000009), Player($00000004), true)
    call SetPlayerAllianceStateAllyBJ(Player($00000009), Player($00000005), true)
    call SetPlayerAllianceStateAllyBJ(Player($00000009), Player($00000006), true)
    call SetPlayerAllianceStateAllyBJ(Player($00000009), Player($00000007), true)
    call SetPlayerAllianceStateAllyBJ(Player($00000009), Player($00000008), true)
    call SetPlayerAllianceStateVisionBJ(Player($00000001), Player($00000002), true)
    call SetPlayerAllianceStateVisionBJ(Player($00000001), Player($00000003), true)
    call SetPlayerAllianceStateVisionBJ(Player($00000001), Player($00000004), true)
    call SetPlayerAllianceStateVisionBJ(Player($00000001), Player($00000005), true)
    call SetPlayerAllianceStateVisionBJ(Player($00000001), Player($00000006), true)
    call SetPlayerAllianceStateVisionBJ(Player($00000001), Player($00000007), true)
    call SetPlayerAllianceStateVisionBJ(Player($00000001), Player($00000008), true)
    call SetPlayerAllianceStateVisionBJ(Player($00000001), Player($00000009), true)
    call SetPlayerAllianceStateVisionBJ(Player($00000002), Player($00000001), true)
    call SetPlayerAllianceStateVisionBJ(Player($00000002), Player($00000003), true)
    call SetPlayerAllianceStateVisionBJ(Player($00000002), Player($00000004), true)
    call SetPlayerAllianceStateVisionBJ(Player($00000002), Player($00000005), true)
    call SetPlayerAllianceStateVisionBJ(Player($00000002), Player($00000006), true)
    call SetPlayerAllianceStateVisionBJ(Player($00000002), Player($00000007), true)
    call SetPlayerAllianceStateVisionBJ(Player($00000002), Player($00000008), true)
    call SetPlayerAllianceStateVisionBJ(Player($00000002), Player($00000009), true)
    call SetPlayerAllianceStateVisionBJ(Player($00000003), Player($00000001), true)
    call SetPlayerAllianceStateVisionBJ(Player($00000003), Player($00000002), true)
    call SetPlayerAllianceStateVisionBJ(Player($00000003), Player($00000004), true)
    call SetPlayerAllianceStateVisionBJ(Player($00000003), Player($00000005), true)
    call SetPlayerAllianceStateVisionBJ(Player($00000003), Player($00000006), true)
    call SetPlayerAllianceStateVisionBJ(Player($00000003), Player($00000007), true)
    call SetPlayerAllianceStateVisionBJ(Player($00000003), Player($00000008), true)
    call SetPlayerAllianceStateVisionBJ(Player($00000003), Player($00000009), true)
    call SetPlayerAllianceStateVisionBJ(Player($00000004), Player($00000001), true)
    call SetPlayerAllianceStateVisionBJ(Player($00000004), Player($00000002), true)
    call SetPlayerAllianceStateVisionBJ(Player($00000004), Player($00000003), true)
    call SetPlayerAllianceStateVisionBJ(Player($00000004), Player($00000005), true)
    call SetPlayerAllianceStateVisionBJ(Player($00000004), Player($00000006), true)
    call SetPlayerAllianceStateVisionBJ(Player($00000004), Player($00000007), true)
    call SetPlayerAllianceStateVisionBJ(Player($00000004), Player($00000008), true)
    call SetPlayerAllianceStateVisionBJ(Player($00000004), Player($00000009), true)
    call SetPlayerAllianceStateVisionBJ(Player($00000005), Player($00000001), true)
    call SetPlayerAllianceStateVisionBJ(Player($00000005), Player($00000002), true)
    call SetPlayerAllianceStateVisionBJ(Player($00000005), Player($00000003), true)
    call SetPlayerAllianceStateVisionBJ(Player($00000005), Player($00000004), true)
    call SetPlayerAllianceStateVisionBJ(Player($00000005), Player($00000006), true)
    call SetPlayerAllianceStateVisionBJ(Player($00000005), Player($00000007), true)
    call SetPlayerAllianceStateVisionBJ(Player($00000005), Player($00000008), true)
    call SetPlayerAllianceStateVisionBJ(Player($00000005), Player($00000009), true)
    call SetPlayerAllianceStateVisionBJ(Player($00000006), Player($00000001), true)
    call SetPlayerAllianceStateVisionBJ(Player($00000006), Player($00000002), true)
    call SetPlayerAllianceStateVisionBJ(Player($00000006), Player($00000003), true)
    call SetPlayerAllianceStateVisionBJ(Player($00000006), Player($00000004), true)
    call SetPlayerAllianceStateVisionBJ(Player($00000006), Player($00000005), true)
    call SetPlayerAllianceStateVisionBJ(Player($00000006), Player($00000007), true)
    call SetPlayerAllianceStateVisionBJ(Player($00000006), Player($00000008), true)
    call SetPlayerAllianceStateVisionBJ(Player($00000006), Player($00000009), true)
    call SetPlayerAllianceStateVisionBJ(Player($00000007), Player($00000001), true)
    call SetPlayerAllianceStateVisionBJ(Player($00000007), Player($00000002), true)
    call SetPlayerAllianceStateVisionBJ(Player($00000007), Player($00000003), true)
    call SetPlayerAllianceStateVisionBJ(Player($00000007), Player($00000004), true)
    call SetPlayerAllianceStateVisionBJ(Player($00000007), Player($00000005), true)
    call SetPlayerAllianceStateVisionBJ(Player($00000007), Player($00000006), true)
    call SetPlayerAllianceStateVisionBJ(Player($00000007), Player($00000008), true)
    call SetPlayerAllianceStateVisionBJ(Player($00000007), Player($00000009), true)
    call SetPlayerAllianceStateVisionBJ(Player($00000008), Player($00000001), true)
    call SetPlayerAllianceStateVisionBJ(Player($00000008), Player($00000002), true)
    call SetPlayerAllianceStateVisionBJ(Player($00000008), Player($00000003), true)
    call SetPlayerAllianceStateVisionBJ(Player($00000008), Player($00000004), true)
    call SetPlayerAllianceStateVisionBJ(Player($00000008), Player($00000005), true)
    call SetPlayerAllianceStateVisionBJ(Player($00000008), Player($00000006), true)
    call SetPlayerAllianceStateVisionBJ(Player($00000008), Player($00000007), true)
    call SetPlayerAllianceStateVisionBJ(Player($00000008), Player($00000009), true)
    call SetPlayerAllianceStateVisionBJ(Player($00000009), Player($00000001), true)
    call SetPlayerAllianceStateVisionBJ(Player($00000009), Player($00000002), true)
    call SetPlayerAllianceStateVisionBJ(Player($00000009), Player($00000003), true)
    call SetPlayerAllianceStateVisionBJ(Player($00000009), Player($00000004), true)
    call SetPlayerAllianceStateVisionBJ(Player($00000009), Player($00000005), true)
    call SetPlayerAllianceStateVisionBJ(Player($00000009), Player($00000006), true)
    call SetPlayerAllianceStateVisionBJ(Player($00000009), Player($00000007), true)
    call SetPlayerAllianceStateVisionBJ(Player($00000009), Player($00000008), true)
endfunction
function InitCustomPlayerSlots takes nothing returns nothing
    call SetPlayerStartLocation(Player (   $00000000), $00000000)
    call ForcePlayerStartLocation(Player (   $00000000), $00000000)
    call SetPlayerColor(Player (   $00000000), ConvertPlayerColor (   $00000000))
    call SetPlayerRacePreference(Player (   $00000000), RACE_PREF_HUMAN)
    call SetPlayerRaceSelectable(Player (   $00000000), false)
    call SetPlayerController(Player (   $00000000), MAP_CONTROL_USER)
    call SetPlayerStartLocation(Player (   $00000001), $00000001)
    call ForcePlayerStartLocation(Player (   $00000001), $00000001)
    call SetPlayerColor(Player (   $00000001), ConvertPlayerColor (   $00000001))
    call SetPlayerRacePreference(Player (   $00000001), RACE_PREF_HUMAN)
    call SetPlayerRaceSelectable(Player (   $00000001), false)
    call SetPlayerController(Player (   $00000001), MAP_CONTROL_USER)
    call SetPlayerStartLocation(Player (   $00000002), $00000002)
    call ForcePlayerStartLocation(Player (   $00000002), $00000002)
    call SetPlayerColor(Player (   $00000002), ConvertPlayerColor (   $00000002))
    call SetPlayerRacePreference(Player (   $00000002), RACE_PREF_HUMAN)
    call SetPlayerRaceSelectable(Player (   $00000002), false)
    call SetPlayerController(Player (   $00000002), MAP_CONTROL_USER)
    call SetPlayerStartLocation(Player (   $00000003), $00000003)
    call ForcePlayerStartLocation(Player (   $00000003), $00000003)
    call SetPlayerColor(Player (   $00000003), ConvertPlayerColor (   $00000003))
    call SetPlayerRacePreference(Player (   $00000003), RACE_PREF_HUMAN)
    call SetPlayerRaceSelectable(Player (   $00000003), false)
    call SetPlayerController(Player (   $00000003), MAP_CONTROL_USER)
    call SetPlayerStartLocation(Player (   $00000004), $00000004)
    call ForcePlayerStartLocation(Player (   $00000004), $00000004)
    call SetPlayerColor(Player (   $00000004), ConvertPlayerColor (   $00000004))
    call SetPlayerRacePreference(Player (   $00000004), RACE_PREF_HUMAN)
    call SetPlayerRaceSelectable(Player (   $00000004), false)
    call SetPlayerController(Player (   $00000004), MAP_CONTROL_USER)
    call SetPlayerStartLocation(Player (   $00000005), $00000005)
    call ForcePlayerStartLocation(Player (   $00000005), $00000005)
    call SetPlayerColor(Player (   $00000005), ConvertPlayerColor (   $00000005))
    call SetPlayerRacePreference(Player (   $00000005), RACE_PREF_HUMAN)
    call SetPlayerRaceSelectable(Player (   $00000005), false)
    call SetPlayerController(Player (   $00000005), MAP_CONTROL_USER)
    call SetPlayerStartLocation(Player (   $00000006), $00000006)
    call ForcePlayerStartLocation(Player (   $00000006), $00000006)
    call SetPlayerColor(Player (   $00000006), ConvertPlayerColor (   $00000006))
    call SetPlayerRacePreference(Player (   $00000006), RACE_PREF_HUMAN)
    call SetPlayerRaceSelectable(Player (   $00000006), false)
    call SetPlayerController(Player (   $00000006), MAP_CONTROL_USER)
    call SetPlayerStartLocation(Player (   $00000007), $00000007)
    call ForcePlayerStartLocation(Player (   $00000007), $00000007)
    call SetPlayerColor(Player (   $00000007), ConvertPlayerColor (   $00000007))
    call SetPlayerRacePreference(Player (   $00000007), RACE_PREF_HUMAN)
    call SetPlayerRaceSelectable(Player (   $00000007), false)
    call SetPlayerController(Player (   $00000007), MAP_CONTROL_USER)
    call SetPlayerStartLocation(Player (   $00000008), $00000008)
    call ForcePlayerStartLocation(Player (   $00000008), $00000008)
    call SetPlayerColor(Player (   $00000008), ConvertPlayerColor (   $00000008))
    call SetPlayerRacePreference(Player (   $00000008), RACE_PREF_HUMAN)
    call SetPlayerRaceSelectable(Player (   $00000008), false)
    call SetPlayerController(Player (   $00000008), MAP_CONTROL_USER)
    call SetPlayerStartLocation(Player (   $00000009), $00000009)
    call ForcePlayerStartLocation(Player (   $00000009), $00000009)
    call SetPlayerColor(Player (   $00000009), ConvertPlayerColor (   $00000009))
    call SetPlayerRacePreference(Player (   $00000009), RACE_PREF_HUMAN)
    call SetPlayerRaceSelectable(Player (   $00000009), false)
    call SetPlayerController(Player (   $00000009), MAP_CONTROL_USER)
    call SetPlayerStartLocation(Player (   $0000000B), $0000000B)
    call ForcePlayerStartLocation(Player (   $0000000B), $0000000B)
    call SetPlayerColor(Player (   $0000000B), ConvertPlayerColor (   $0000000B))
    call SetPlayerRacePreference(Player (   $0000000B), RACE_PREF_HUMAN)
    call SetPlayerRaceSelectable(Player (   $0000000B), false)
    call SetPlayerController(Player (   $0000000B), MAP_CONTROL_COMPUTER)
endfunction
function InitCustomTeams takes nothing returns nothing
    call SetPlayerTeam(Player (   $0000000B), $00000000)
    call SetPlayerTeam(Player (   $00000000), $00000001)
    call SetPlayerTeam(Player (   $00000001), $00000001)
    call SetPlayerTeam(Player (   $00000002), $00000001)
    call SetPlayerTeam(Player (   $00000003), $00000001)
    call SetPlayerTeam(Player (   $00000004), $00000001)
    call SetPlayerTeam(Player (   $00000005), $00000001)
    call SetPlayerTeam(Player (   $00000006), $00000001)
    call SetPlayerTeam(Player (   $00000007), $00000001)
    call SetPlayerTeam(Player (   $00000008), $00000001)
    call SetPlayerTeam(Player (   $00000009), $00000001)
    call SetPlayerAllianceStateAllyBJ(Player (   $00000000), Player (   $00000001), true)
    call SetPlayerAllianceStateAllyBJ(Player (   $00000000), Player (   $00000002), true)
    call SetPlayerAllianceStateAllyBJ(Player (   $00000000), Player (   $00000003), true)
    call SetPlayerAllianceStateAllyBJ(Player (   $00000000), Player (   $00000004), true)
    call SetPlayerAllianceStateAllyBJ(Player (   $00000000), Player (   $00000005), true)
    call SetPlayerAllianceStateAllyBJ(Player (   $00000000), Player (   $00000006), true)
    call SetPlayerAllianceStateAllyBJ(Player (   $00000000), Player (   $00000007), true)
    call SetPlayerAllianceStateAllyBJ(Player (   $00000000), Player (   $00000008), true)
    call SetPlayerAllianceStateAllyBJ(Player (   $00000000), Player (   $00000009), true)
    call SetPlayerAllianceStateAllyBJ(Player (   $00000001), Player (   $00000000), true)
    call SetPlayerAllianceStateAllyBJ(Player (   $00000001), Player (   $00000002), true)
    call SetPlayerAllianceStateAllyBJ(Player (   $00000001), Player (   $00000003), true)
    call SetPlayerAllianceStateAllyBJ(Player (   $00000001), Player (   $00000004), true)
    call SetPlayerAllianceStateAllyBJ(Player (   $00000001), Player (   $00000005), true)
    call SetPlayerAllianceStateAllyBJ(Player (   $00000001), Player (   $00000006), true)
    call SetPlayerAllianceStateAllyBJ(Player (   $00000001), Player (   $00000007), true)
    call SetPlayerAllianceStateAllyBJ(Player (   $00000001), Player (   $00000008), true)
    call SetPlayerAllianceStateAllyBJ(Player (   $00000001), Player (   $00000009), true)
    call SetPlayerAllianceStateAllyBJ(Player (   $00000002), Player (   $00000000), true)
    call SetPlayerAllianceStateAllyBJ(Player (   $00000002), Player (   $00000001), true)
    call SetPlayerAllianceStateAllyBJ(Player (   $00000002), Player (   $00000003), true)
    call SetPlayerAllianceStateAllyBJ(Player (   $00000002), Player (   $00000004), true)
    call SetPlayerAllianceStateAllyBJ(Player (   $00000002), Player (   $00000005), true)
    call SetPlayerAllianceStateAllyBJ(Player (   $00000002), Player (   $00000006), true)
    call SetPlayerAllianceStateAllyBJ(Player (   $00000002), Player (   $00000007), true)
    call SetPlayerAllianceStateAllyBJ(Player (   $00000002), Player (   $00000008), true)
    call SetPlayerAllianceStateAllyBJ(Player (   $00000002), Player (   $00000009), true)
    call SetPlayerAllianceStateAllyBJ(Player (   $00000003), Player (   $00000000), true)
    call SetPlayerAllianceStateAllyBJ(Player (   $00000003), Player (   $00000001), true)
    call SetPlayerAllianceStateAllyBJ(Player (   $00000003), Player (   $00000002), true)
    call SetPlayerAllianceStateAllyBJ(Player (   $00000003), Player (   $00000004), true)
    call SetPlayerAllianceStateAllyBJ(Player (   $00000003), Player (   $00000005), true)
    call SetPlayerAllianceStateAllyBJ(Player (   $00000003), Player (   $00000006), true)
    call SetPlayerAllianceStateAllyBJ(Player (   $00000003), Player (   $00000007), true)
    call SetPlayerAllianceStateAllyBJ(Player (   $00000003), Player (   $00000008), true)
    call SetPlayerAllianceStateAllyBJ(Player (   $00000003), Player (   $00000009), true)
    call SetPlayerAllianceStateAllyBJ(Player (   $00000004), Player (   $00000000), true)
    call SetPlayerAllianceStateAllyBJ(Player (   $00000004), Player (   $00000001), true)
    call SetPlayerAllianceStateAllyBJ(Player (   $00000004), Player (   $00000002), true)
    call SetPlayerAllianceStateAllyBJ(Player (   $00000004), Player (   $00000003), true)
    call SetPlayerAllianceStateAllyBJ(Player (   $00000004), Player (   $00000005), true)
    call SetPlayerAllianceStateAllyBJ(Player (   $00000004), Player (   $00000006), true)
    call SetPlayerAllianceStateAllyBJ(Player (   $00000004), Player (   $00000007), true)
    call SetPlayerAllianceStateAllyBJ(Player (   $00000004), Player (   $00000008), true)
    call SetPlayerAllianceStateAllyBJ(Player (   $00000004), Player (   $00000009), true)
    call SetPlayerAllianceStateAllyBJ(Player (   $00000005), Player (   $00000000), true)
    call SetPlayerAllianceStateAllyBJ(Player (   $00000005), Player (   $00000001), true)
    call SetPlayerAllianceStateAllyBJ(Player (   $00000005), Player (   $00000002), true)
    call SetPlayerAllianceStateAllyBJ(Player (   $00000005), Player (   $00000003), true)
    call SetPlayerAllianceStateAllyBJ(Player (   $00000005), Player (   $00000004), true)
    call SetPlayerAllianceStateAllyBJ(Player (   $00000005), Player (   $00000006), true)
    call SetPlayerAllianceStateAllyBJ(Player (   $00000005), Player (   $00000007), true)
    call SetPlayerAllianceStateAllyBJ(Player (   $00000005), Player (   $00000008), true)
    call SetPlayerAllianceStateAllyBJ(Player (   $00000005), Player (   $00000009), true)
    call SetPlayerAllianceStateAllyBJ(Player (   $00000006), Player (   $00000000), true)
    call SetPlayerAllianceStateAllyBJ(Player (   $00000006), Player (   $00000001), true)
    call SetPlayerAllianceStateAllyBJ(Player (   $00000006), Player (   $00000002), true)
    call SetPlayerAllianceStateAllyBJ(Player (   $00000006), Player (   $00000003), true)
    call SetPlayerAllianceStateAllyBJ(Player (   $00000006), Player (   $00000004), true)
    call SetPlayerAllianceStateAllyBJ(Player (   $00000006), Player (   $00000005), true)
    call SetPlayerAllianceStateAllyBJ(Player (   $00000006), Player (   $00000007), true)
    call SetPlayerAllianceStateAllyBJ(Player (   $00000006), Player (   $00000008), true)
    call SetPlayerAllianceStateAllyBJ(Player (   $00000006), Player (   $00000009), true)
    call SetPlayerAllianceStateAllyBJ(Player (   $00000007), Player (   $00000000), true)
    call SetPlayerAllianceStateAllyBJ(Player (   $00000007), Player (   $00000001), true)
    call SetPlayerAllianceStateAllyBJ(Player (   $00000007), Player (   $00000002), true)
    call SetPlayerAllianceStateAllyBJ(Player (   $00000007), Player (   $00000003), true)
    call SetPlayerAllianceStateAllyBJ(Player (   $00000007), Player (   $00000004), true)
    call SetPlayerAllianceStateAllyBJ(Player (   $00000007), Player (   $00000005), true)
    call SetPlayerAllianceStateAllyBJ(Player (   $00000007), Player (   $00000006), true)
    call SetPlayerAllianceStateAllyBJ(Player (   $00000007), Player (   $00000008), true)
    call SetPlayerAllianceStateAllyBJ(Player (   $00000007), Player (   $00000009), true)
    call SetPlayerAllianceStateAllyBJ(Player (   $00000008), Player (   $00000000), true)
    call SetPlayerAllianceStateAllyBJ(Player (   $00000008), Player (   $00000001), true)
    call SetPlayerAllianceStateAllyBJ(Player (   $00000008), Player (   $00000002), true)
    call SetPlayerAllianceStateAllyBJ(Player (   $00000008), Player (   $00000003), true)
    call SetPlayerAllianceStateAllyBJ(Player (   $00000008), Player (   $00000004), true)
    call SetPlayerAllianceStateAllyBJ(Player (   $00000008), Player (   $00000005), true)
    call SetPlayerAllianceStateAllyBJ(Player (   $00000008), Player (   $00000006), true)
    call SetPlayerAllianceStateAllyBJ(Player (   $00000008), Player (   $00000007), true)
    call SetPlayerAllianceStateAllyBJ(Player (   $00000008), Player (   $00000009), true)
    call SetPlayerAllianceStateAllyBJ(Player (   $00000009), Player (   $00000000), true)
    call SetPlayerAllianceStateAllyBJ(Player (   $00000009), Player (   $00000001), true)
    call SetPlayerAllianceStateAllyBJ(Player (   $00000009), Player (   $00000002), true)
    call SetPlayerAllianceStateAllyBJ(Player (   $00000009), Player (   $00000003), true)
    call SetPlayerAllianceStateAllyBJ(Player (   $00000009), Player (   $00000004), true)
    call SetPlayerAllianceStateAllyBJ(Player (   $00000009), Player (   $00000005), true)
    call SetPlayerAllianceStateAllyBJ(Player (   $00000009), Player (   $00000006), true)
    call SetPlayerAllianceStateAllyBJ(Player (   $00000009), Player (   $00000007), true)
    call SetPlayerAllianceStateAllyBJ(Player (   $00000009), Player (   $00000008), true)
endfunction
function InitAllyPriorities takes nothing returns nothing
    call SetStartLocPrioCount($00000000, $00000009)
    call SetStartLocPrio($00000000, $00000000, $00000001, MAP_LOC_PRIO_HIGH)
    call SetStartLocPrio($00000000, $00000001, $00000002, MAP_LOC_PRIO_HIGH)
    call SetStartLocPrio($00000000, $00000002, $00000003, MAP_LOC_PRIO_HIGH)
    call SetStartLocPrio($00000000, $00000003, $00000004, MAP_LOC_PRIO_HIGH)
    call SetStartLocPrio($00000000, $00000004, $00000005, MAP_LOC_PRIO_HIGH)
    call SetStartLocPrio($00000000, $00000005, $00000006, MAP_LOC_PRIO_HIGH)
    call SetStartLocPrio($00000000, $00000006, $00000007, MAP_LOC_PRIO_HIGH)
    call SetStartLocPrio($00000000, $00000007, $00000008, MAP_LOC_PRIO_HIGH)
    call SetStartLocPrio($00000000, $00000008, $00000009, MAP_LOC_PRIO_HIGH)
    call SetEnemyStartLocPrioCount($00000000, $00000000)
    call SetStartLocPrioCount($00000001, $00000009)
    call SetStartLocPrio($00000001, $00000000, $00000000, MAP_LOC_PRIO_HIGH)
    call SetStartLocPrio($00000001, $00000001, $00000002, MAP_LOC_PRIO_HIGH)
    call SetStartLocPrio($00000001, $00000002, $00000003, MAP_LOC_PRIO_HIGH)
    call SetStartLocPrio($00000001, $00000003, $00000004, MAP_LOC_PRIO_HIGH)
    call SetStartLocPrio($00000001, $00000004, $00000005, MAP_LOC_PRIO_HIGH)
    call SetStartLocPrio($00000001, $00000005, $00000006, MAP_LOC_PRIO_HIGH)
    call SetStartLocPrio($00000001, $00000006, $00000007, MAP_LOC_PRIO_HIGH)
    call SetStartLocPrio($00000001, $00000007, $00000008, MAP_LOC_PRIO_HIGH)
    call SetStartLocPrio($00000001, $00000008, $00000009, MAP_LOC_PRIO_HIGH)
    call SetEnemyStartLocPrioCount($00000001, $00000000)
    call SetStartLocPrioCount($00000002, $00000009)
    call SetStartLocPrio($00000002, $00000000, $00000000, MAP_LOC_PRIO_HIGH)
    call SetStartLocPrio($00000002, $00000001, $00000001, MAP_LOC_PRIO_HIGH)
    call SetStartLocPrio($00000002, $00000002, $00000003, MAP_LOC_PRIO_HIGH)
    call SetStartLocPrio($00000002, $00000003, $00000004, MAP_LOC_PRIO_HIGH)
    call SetStartLocPrio($00000002, $00000004, $00000005, MAP_LOC_PRIO_HIGH)
    call SetStartLocPrio($00000002, $00000005, $00000006, MAP_LOC_PRIO_HIGH)
    call SetStartLocPrio($00000002, $00000006, $00000007, MAP_LOC_PRIO_HIGH)
    call SetStartLocPrio($00000002, $00000007, $00000008, MAP_LOC_PRIO_HIGH)
    call SetStartLocPrio($00000002, $00000008, $00000009, MAP_LOC_PRIO_HIGH)
    call SetEnemyStartLocPrioCount($00000002, $00000000)
    call SetStartLocPrioCount($00000003, $00000009)
    call SetStartLocPrio($00000003, $00000000, $00000000, MAP_LOC_PRIO_HIGH)
    call SetStartLocPrio($00000003, $00000001, $00000001, MAP_LOC_PRIO_HIGH)
    call SetStartLocPrio($00000003, $00000002, $00000002, MAP_LOC_PRIO_HIGH)
    call SetStartLocPrio($00000003, $00000003, $00000004, MAP_LOC_PRIO_HIGH)
    call SetStartLocPrio($00000003, $00000004, $00000005, MAP_LOC_PRIO_HIGH)
    call SetStartLocPrio($00000003, $00000005, $00000006, MAP_LOC_PRIO_HIGH)
    call SetStartLocPrio($00000003, $00000006, $00000007, MAP_LOC_PRIO_HIGH)
    call SetStartLocPrio($00000003, $00000007, $00000008, MAP_LOC_PRIO_HIGH)
    call SetStartLocPrio($00000003, $00000008, $00000009, MAP_LOC_PRIO_HIGH)
    call SetEnemyStartLocPrioCount($00000003, $00000000)
    call SetStartLocPrioCount($00000004, $00000009)
    call SetStartLocPrio($00000004, $00000000, $00000000, MAP_LOC_PRIO_HIGH)
    call SetStartLocPrio($00000004, $00000001, $00000001, MAP_LOC_PRIO_HIGH)
    call SetStartLocPrio($00000004, $00000002, $00000002, MAP_LOC_PRIO_HIGH)
    call SetStartLocPrio($00000004, $00000003, $00000003, MAP_LOC_PRIO_HIGH)
    call SetStartLocPrio($00000004, $00000004, $00000005, MAP_LOC_PRIO_HIGH)
    call SetStartLocPrio($00000004, $00000005, $00000006, MAP_LOC_PRIO_HIGH)
    call SetStartLocPrio($00000004, $00000006, $00000007, MAP_LOC_PRIO_HIGH)
    call SetStartLocPrio($00000004, $00000007, $00000008, MAP_LOC_PRIO_HIGH)
    call SetStartLocPrio($00000004, $00000008, $00000009, MAP_LOC_PRIO_HIGH)
    call SetEnemyStartLocPrioCount($00000004, $00000000)
    call SetStartLocPrioCount($00000005, $00000009)
    call SetStartLocPrio($00000005, $00000000, $00000000, MAP_LOC_PRIO_HIGH)
    call SetStartLocPrio($00000005, $00000001, $00000001, MAP_LOC_PRIO_HIGH)
    call SetStartLocPrio($00000005, $00000002, $00000002, MAP_LOC_PRIO_HIGH)
    call SetStartLocPrio($00000005, $00000003, $00000003, MAP_LOC_PRIO_HIGH)
    call SetStartLocPrio($00000005, $00000004, $00000004, MAP_LOC_PRIO_HIGH)
    call SetStartLocPrio($00000005, $00000005, $00000006, MAP_LOC_PRIO_HIGH)
    call SetStartLocPrio($00000005, $00000006, $00000007, MAP_LOC_PRIO_HIGH)
    call SetStartLocPrio($00000005, $00000007, $00000008, MAP_LOC_PRIO_HIGH)
    call SetStartLocPrio($00000005, $00000008, $00000009, MAP_LOC_PRIO_HIGH)
    call SetEnemyStartLocPrioCount($00000005, $00000000)
    call SetStartLocPrioCount($00000006, $00000009)
    call SetStartLocPrio($00000006, $00000000, $00000000, MAP_LOC_PRIO_HIGH)
    call SetStartLocPrio($00000006, $00000001, $00000001, MAP_LOC_PRIO_HIGH)
    call SetStartLocPrio($00000006, $00000002, $00000002, MAP_LOC_PRIO_HIGH)
    call SetStartLocPrio($00000006, $00000003, $00000003, MAP_LOC_PRIO_HIGH)
    call SetStartLocPrio($00000006, $00000004, $00000004, MAP_LOC_PRIO_HIGH)
    call SetStartLocPrio($00000006, $00000005, $00000005, MAP_LOC_PRIO_HIGH)
    call SetStartLocPrio($00000006, $00000006, $00000007, MAP_LOC_PRIO_HIGH)
    call SetStartLocPrio($00000006, $00000007, $00000008, MAP_LOC_PRIO_HIGH)
    call SetStartLocPrio($00000006, $00000008, $00000009, MAP_LOC_PRIO_HIGH)
    call SetEnemyStartLocPrioCount($00000006, $00000000)
    call SetStartLocPrioCount($00000007, $00000009)
    call SetStartLocPrio($00000007, $00000000, $00000000, MAP_LOC_PRIO_HIGH)
    call SetStartLocPrio($00000007, $00000001, $00000001, MAP_LOC_PRIO_HIGH)
    call SetStartLocPrio($00000007, $00000002, $00000002, MAP_LOC_PRIO_HIGH)
    call SetStartLocPrio($00000007, $00000003, $00000003, MAP_LOC_PRIO_HIGH)
    call SetStartLocPrio($00000007, $00000004, $00000004, MAP_LOC_PRIO_HIGH)
    call SetStartLocPrio($00000007, $00000005, $00000005, MAP_LOC_PRIO_HIGH)
    call SetStartLocPrio($00000007, $00000006, $00000006, MAP_LOC_PRIO_HIGH)
    call SetStartLocPrio($00000007, $00000007, $00000008, MAP_LOC_PRIO_HIGH)
    call SetStartLocPrio($00000007, $00000008, $00000009, MAP_LOC_PRIO_HIGH)
    call SetEnemyStartLocPrioCount($00000007, $00000000)
    call SetStartLocPrioCount($00000008, $00000009)
    call SetStartLocPrio($00000008, $00000000, $00000000, MAP_LOC_PRIO_HIGH)
    call SetStartLocPrio($00000008, $00000001, $00000001, MAP_LOC_PRIO_HIGH)
    call SetStartLocPrio($00000008, $00000002, $00000002, MAP_LOC_PRIO_HIGH)
    call SetStartLocPrio($00000008, $00000003, $00000003, MAP_LOC_PRIO_HIGH)
    call SetStartLocPrio($00000008, $00000004, $00000004, MAP_LOC_PRIO_HIGH)
    call SetStartLocPrio($00000008, $00000005, $00000005, MAP_LOC_PRIO_HIGH)
    call SetStartLocPrio($00000008, $00000006, $00000006, MAP_LOC_PRIO_HIGH)
    call SetStartLocPrio($00000008, $00000007, $00000007, MAP_LOC_PRIO_HIGH)
    call SetStartLocPrio($00000008, $00000008, $00000009, MAP_LOC_PRIO_HIGH)
    call SetEnemyStartLocPrioCount($00000008, $00000000)
    call SetStartLocPrioCount($00000009, $00000009)
    call SetStartLocPrio($00000009, $00000000, $00000000, MAP_LOC_PRIO_HIGH)
    call SetStartLocPrio($00000009, $00000001, $00000001, MAP_LOC_PRIO_HIGH)
    call SetStartLocPrio($00000009, $00000002, $00000002, MAP_LOC_PRIO_HIGH)
    call SetStartLocPrio($00000009, $00000003, $00000003, MAP_LOC_PRIO_HIGH)
    call SetStartLocPrio($00000009, $00000004, $00000004, MAP_LOC_PRIO_HIGH)
    call SetStartLocPrio($00000009, $00000005, $00000005, MAP_LOC_PRIO_HIGH)
    call SetStartLocPrio($00000009, $00000006, $00000006, MAP_LOC_PRIO_HIGH)
    call SetStartLocPrio($00000009, $00000007, $00000007, MAP_LOC_PRIO_HIGH)
    call SetStartLocPrio($00000009, $00000008, $00000008, MAP_LOC_PRIO_HIGH)
    call SetEnemyStartLocPrioCount($00000009, $00000000)
    call SetStartLocPrioCount($0000000B, $00000070)
    call SetStartLocPrio($0000000B, $00000000, $00000000, MAP_LOC_PRIO_LOW)
    call SetStartLocPrio($0000000B, $00000001, $00000001, MAP_LOC_PRIO_LOW)
    call SetStartLocPrio($0000000B, $00000002, $00000002, MAP_LOC_PRIO_LOW)
    call SetStartLocPrio($0000000B, $00000003, $00000003, MAP_LOC_PRIO_LOW)
    call SetStartLocPrio($0000000B, $00000004, $00000004, MAP_LOC_PRIO_LOW)
    call SetStartLocPrio($0000000B, $00000005, $00000005, MAP_LOC_PRIO_LOW)
    call SetStartLocPrio($0000000B, $00000006, $00000006, MAP_LOC_PRIO_LOW)
    call SetStartLocPrio($0000000B, $00000007, $00000007, MAP_LOC_PRIO_LOW)
    call SetEnemyStartLocPrioCount($0000000B, $00000000)
endfunction
function config takes nothing returns nothing
    call SetMapName("|cff00BFFFTwilight's Eve R4.18.5|r")
    call SetMapDescription("TRIGSTR_9063")
    call SetPlayers($0000000B)
    call SetTeams($00000002)
    call SetGamePlacement(MAP_PLACEMENT_TEAMS_TOGETHER)
    call DefineStartLocation($00000000, 2432.0, - 13440.0)
    call DefineStartLocation($00000001, 2432.0, - 13440.0)
    call DefineStartLocation($00000002, 2432.0, - 13440.0)
    call DefineStartLocation($00000003, 2432.0, - 13440.0)
    call DefineStartLocation($00000004, 2432.0, - 13440.0)
    call DefineStartLocation($00000005, 2432.0, - 13440.0)
    call DefineStartLocation($00000006, 2432.0, - 13440.0)
    call DefineStartLocation($00000007, 2432.0, - 13440.0)
    call DefineStartLocation($00000008, 2432.0, - 13440.0)
    call DefineStartLocation($00000009, 2432.0, - 13440.0)
    call DefineStartLocation($0000000B, 2432.0, - 13440.0)
    call InitCustomPlayerSlots()
    call InitCustomTeams()
    call InitAllyPriorities()
endfunction
    