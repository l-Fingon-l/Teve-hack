import os

def scan(directory, IDs):
    print('There are ' + str(len(IDs)) + ' IDs')

    for filename in os.listdir(directory):
        f = os.path.join(directory, filename)
        if os.path.isfile(f):
            text = open(f, 'rb').read()
            i = 0
            for number in IDs:
                pattern = number.to_bytes(4, 'big')
                pos = text.find(pattern)
                if pos != -1:
                    i += 1
                    print(str(i) + ') ' + f + '\t\tpos: ' + str(pos) + '\t' + str(pattern)[2:6])
            if i > 0: 
                print()


def scan_names(f, IDs):
    res = []
    text = open(f, 'rb').read() # 'files/File00000288.xxx'
    for i in range(len(IDs)):
        number = IDs[i]
        pattern = number.to_bytes(4, 'big')
        pos = text.find(pattern)
        if pos != -1:
            start = pos + 16
            end = text.find(0, start)
            name = str(text[start:end])
            name = name[2:len(name) - 1]
            # res += str(i + 1) + ') ' + name  + '\n'
            res.insert(i, name)
        i += 1
    return res


def scan_items(f, IDs):
    res = []
    text = open(f, 'rb').read() # 'files/File00000288.xxx'
    for i in range(len(IDs)):
        number = IDs[i]
        pattern = number.to_bytes(4, 'big')
        pos = text.find(pattern)
        if pos != -1:
            pos = text.find(b'unam', pos)
            if text[pos + 8] == 0x7C:  # '|'
                start = pos + 18
                end = text.find(0x7C, start)
            else:
                start = pos + 8
                end = text.find(0, start)
            name = str(text[start:end])
            name = name[2:len(name) - 1]
            # res += str(i + 1) + ') ' + name + '\n'
            res.insert(i, name)
        i += 1
    return res


directory = 'files'

#  IDs = [
#     1211117623,
#     1211117620,
#     1211117634,
#     1211117622,
#     1211117621,
#     1211117617,
#     1211117618,
#     1211117619,
#     1211117633,
#     1211117624,
#     1211117625,
#     1211117640,
#     1211117643,
#     1211117637,
#     1211117638,
#     1211117639,
#     1211117642,
#     1211117641,
#     1211117644,
#     1211117645,
#     1211117873,
#     1211117872,
#     1211117874,
#     1211117875,
#     1211117892,
#     1211117891,
#     1211117877,
#     1211117876,
#     1211117894,
#     1211117893,
#     1211117890,
#     1211117889,
#     1211117879,
#     1211117878,
#     1211117881,
#     1211117880,
#     1211118131,
#     1211118132,
#     1211118147,
#     1211118146,
#     1211118149,
#     1211118150,
#     1211118155,
#     1211118152,
#     1211118157,
#     1211118161,
#     1211118156,
#     1211118159,
#     1211118158,
#     1211118160,
#     1211118162,
#     1211118163
# ]

IDs = [
    1211117623,
    1211117620,
    1211117634,
    1211117622,
    1211117621,
    1211117617,
    1211117618,
    1211117619,
    1211117633,
    1211117624,
    1211117625,
    1211117640,
    1211117643,
    1211117637,
    1211117638,
    1211117639,
    1211117642,
    1211117641,
    1211117644,
    1211117645,
    1211117873,
    1211117872,
    1211117874,
    1211117875,
    1211117892,
    1211117891,
    1211117877,
    1211117876,
    1211117894,
    1211117893,
    1211117890,
    1211117889,
    1211117879,
    1211117878,
    1211117881,
    1211117880,
    1211118131,
    1211118132,
    1211118147,
    1211118146,
    1211118149,
    1211118150,
    1211118155,
    1211118152,
    1211118157,
    1211118161,
    1211118156,
    1211118159,
    1211118158,
    1211118160,
    1211118162,
    1211118163,
]

# item_IDs = [
#     1227894835,
#     1227894833,
#     1227894834,
#     1227894840,
#     1227894841,
#     1227894850,
#     1227894839,
#     1227894851,
#     1227894838,
#     1227894836,
#     1227894852,
#     1227894853,
#     1227894837,
#     1227894855,
#     1227894856,
#     1227894858,
#     1227894857,
#     1227894849,
#     1227894854,
#     1227894866,
#     1227894864,
#     1227894863,
#     1227894861,
#     1227894860,
#     1227894865,
#     1227894862,
#     1227894867,
#     1227895111,
#     1227895110,
#     1227895109,
#     1227895116,
#     1227895125,
#     1227895347,
#     1227895128,
#     1227895112,
#     1227895348,
#     1227895123,
#     1227895115,
#     1227895344,
#     1227895345,
#     1227895113,
#     1227895124,
#     1227895121,
#     1227895122,
#     1227895114,
#     1227895120,
#     1227895130,
#     1227895346,
#     1227895117,
#     1227895129,
#     1227895119,
#     1227895118,
#     1227895126,
#     1227895127,
#     1227895350,
#     1227895366,
#     1227895353,
#     1227895363,
#     1227895368,
#     1227895367,
#     1227895364,
#     1227895361,
#     1227895362,
#     1227895365,
#     1227895369,
#     1227895371,
#     1227895370,
#     1227895383,
#     1227895376,
#     1227895377,
#     1227895384,
#     1227895372,
#     1227895381,
#     1227895380,
#     1227895374,
#     1227895382,
#     1227895375,
#     1227895378,
#     1227895373,
#     1227895600,
#     1227895603,
#     1227895604,
#     1227895609,
#     1227895606,
#     1227895607,
#     1227895617,
#     1227895619,
#     1227895618,
#     1227895605,
#     1227895608,
#     1227895623,
#     1227895622,
#     1227895625,
#     1227895624,
#     1227895628,
#     1227895630,
#     1227895634,
#     1227895638,
#     1227895633,
#     1227895629,
#     1227895636,
#     1227895627,
#     1227895637,
#     1227895635,
#     1227895640,
#     1227895639,
#     1227895641,
#     1227895861,
#     1227895642,
#     1227895632,
#     1227895631,
#     1227895898,
#     1227895895,
#     1227895894,
#     1227895897,
#     1227895896,
#     1227896118,
#     1227896116,
#     1227896115,
#     1227896121,
#     1227896120,
#     1227896114,
#     1227896129,
#     1227896117,
#     1227896113,
#     1227896112,
#     1227896119,
#     1227896136,
#     1227895386,
#     1227895862,
#     1227895886,
#     1227895887,
#     1227895888,
#     1227895863,
#     1227896135,
#     1227896134,
#     1227895108,
#     1227895858,
#     1227895856,
#     1227895860,
#     1227895860,
#     1227895857,
#     1227895883,
#     1227895385,
#     1227895884,
#     1227895882,
#     1227895885,
#     1227896138,
#     1227895880,
#     1227896139,
#     1227896140,
#     1227896137,
#     1227895602,
#     1227895601,
#     1229210963
# ]

item_IDs = [
    1227894835,
    1227894833,
    1227894834,
    1227894840,
    1227894841,
    1227894850,
    1227894839,
    1227894851,
    1227894838,
    1227894836,
    1227894852,
    1227894853,
    1227894837,
    1227894855,
    1227894856,
    1227894858,
    1227894857,
    1227894849,
    1227894854,
    1227894866,
    1227894864,
    1227894863,
    1227894861,
    1227894860,
    1227894865,
    1227894862,
    1227894867,
    1227895111,
    1227895110,
    1227895109,
    1227895116,
    1227895125,
    1227895347,
    1227895128,
    1227895112,
    1227895348,
    1227895123,
    1227895115,
    1227895344,
    1227895345,
    1227895113,
    1227895124,
    1227895121,
    1227895122,
    1227895114,
    1227895120,
    1227895130,
    1227895346,
    1227895117,
    1227895129,
    1227895119,
    1227895118,
    1227895126,
    1227895127,
    1227895350,
    1227895366,
    1227895353,
    1227895363,
    1227895368,
    1227895367,
    1227895364,
    1227895361,
    1227895362,
    1227895365,
    1227895369,
    1227895371,
    1227895370,
    1227895383,
    1227895376,
    1227895377,
    1227895384,
    1227895372,
    1227895381,
    1227895380,
    1227895374,
    1227895382,
    1227895375,
    1227895378,
    1227895373,
    1227895600,
    1227895603,
    1227895604,
    1227895609,
    1227895606,
    1227895607,
    1227895617,
    1227895619,
    1227895618,
    1227895605,
    1227895608,
    1227895623,
    1227895622,
    1227895625,
    1227895624,
    1227895628,
    1227895630,
    1227895634,
    1227895638,
    1227895633,
    1227895629,
    1227895636,
    1227895627,
    1227895637,
    1227895635,
    1227895640,
    1227895639,
    1227895641,
    1227895861,
    1227895642,
    1227895632,
    1227895631,
    1227895898,
    1227895895,
    1227895894,
    1227895897,
    1227895896,
    1227896118,
    1227896116,
    1227896115,
    1227896121,
    1227896120,
    1227896114,
    1227896129,
    1227896117,
    1227896113,
    1227896112,
    1227896119,
    1227896136,
    1227896143,
    1227895386,
    1227895862,
    1227895886,
    1227895887,
    1227895888,
    1227895863,
    1227896135,
    1227896134,
    1227895108,
    1227896138,
    1227895858,
    1227895856,
    1227895860,
    1227895860,
    1227895857,
    1227895883,
    1227895385,
    1227896144,
    1227895884,
    1227895882,
    1227895885,
    1227895880,
    1227896139,
    1227896140,
    1227896137,
    1227895602,
    1227895601,
    1229210963,
    1229146198,
]

def html_items():
    for i in range(1, 7):
        print(f'\
        <div class="relative col-span-3 xl:col-span-2 flex flex-col items-center justify-center">\n\
            <input list="items" id="item-{i}" class="w-48" />\n\
            <input type="number" id="item-{i}-count" step="1" min="1" class="w-16 m-1 align-self-end" />\n\
        </div>\n\n')


# scan('original', item_IDs)
print(scan_names('original/File00000386.xxx', IDs))
# print(scan_items('original/File00000324.xxx', item_IDs))
# print(scan_names('files/File00000288.xxx', IDs) + '\n' +
#     scan_items('files/File00000306.xxx', item_IDs))

# f = open('items.txt', 'w')
# #for item in scan_items('files/File00000306.xxx', item_IDs):
# for item in scan_items('original/File00000324.xxx', item_IDs):
#     f.write('<option value="' + item + '">\n')
# f.close()
# 
f = open('names.txt', 'w')
# for name in scan_names('files/File00000288.xxx', IDs):
for name in scan_names('original/File00000386.xxx', IDs):
        f.write('<option value="' + name + '">\n')
f.close()

# html_items()
